{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/configure.in": "dnl Process this file with autoconf to produce a configure script.\ndnl configure.in\ndnl\ndnl Developers, please strive to achieve this order:\ndnl\ndnl 0. Initialization and options processing\ndnl 1. Programs\ndnl 2. Libraries\ndnl 3. Header files\ndnl 4. Types\ndnl 5. Structures\ndnl 6. Compiler characteristics\ndnl 7. Functions, global variables\ndnl 8. System services\ndnl\ndnl Read the Autoconf manual for details.\ndnl\nm4_pattern_forbid(^PGAC_)dnl to catch undefined macros\n\nAC_INIT([PostgreSQL], [10.6], [pgsql-bugs@postgresql.org])\n\nm4_if(m4_defn([m4_PACKAGE_VERSION]), [2.69], [], [m4_fatal([Autoconf version 2.69 is required.\nUntested combinations of 'autoconf' and PostgreSQL versions are not\nrecommended.  You can remove the check from 'configure.in' but it is then\nyour responsibility whether the result works or not.])])\nAC_COPYRIGHT([Copyright (c) 1996-2017, PostgreSQL Global Development Group])\nAC_CONFIG_SRCDIR([src/backend/access/common/heaptuple.c])\nAC_CONFIG_AUX_DIR(config)\nAC_PREFIX_DEFAULT(/usr/local/pgsql)\nAC_SUBST(configure_args, [$ac_configure_args])\n\n[PG_MAJORVERSION=`expr \"$PACKAGE_VERSION\" : '\\([0-9][0-9]*\\)'`]\nAC_SUBST(PG_MAJORVERSION)\nAC_DEFINE_UNQUOTED(PG_MAJORVERSION, \"$PG_MAJORVERSION\", [PostgreSQL major version as a string])\n\nPGAC_ARG_REQ(with, extra-version, [STRING], [append STRING to version],\n             [PG_VERSION=\"$PACKAGE_VERSION$withval\"],\n             [PG_VERSION=\"$PACKAGE_VERSION\"])\nAC_DEFINE_UNQUOTED(PG_VERSION, \"$PG_VERSION\", [PostgreSQL version as a string])\n\nAC_CANONICAL_HOST\n\ntemplate=\nAC_MSG_CHECKING([which template to use])\n\nPGAC_ARG_REQ(with, template, [NAME], [override operating system template],\n[\n  case $withval in\n    list)   echo; ls \"$srcdir/src/template\"; exit;;\n    *)      if test -f \"$srcdir/src/template/$with_template\" ; then\n              template=$withval\n            else\n              AC_MSG_ERROR(['$withval' is not a valid template name. Use 'list' for a list.])\n            fi;;\n  esac\n],\n[\n# --with-template not given\n\ncase $host_os in\n     aix*) template=aix ;;\n  cygwin*) template=cygwin ;;\n  darwin*) template=darwin ;;\ndragonfly*) template=netbsd ;;\n freebsd*) template=freebsd ;;\n    hpux*) template=hpux ;;\n linux*|gnu*|k*bsd*-gnu)\n           template=linux ;;\n   mingw*) template=win32 ;;\n  netbsd*) template=netbsd ;;\n openbsd*) template=openbsd ;;\n solaris*) template=solaris ;;\nesac\n\n  if test x\"$template\" = x\"\" ; then\n    AC_MSG_ERROR([[\n*******************************************************************\nPostgreSQL has apparently not been ported to your platform yet.\nTo try a manual configuration, look into the src/template directory\nfor a similar platform and use the '--with-template=' option.\n\nPlease also contact <pgsql-bugs@postgresql.org> to see about\nrectifying this.  Include the above 'checking host system type...'\nline.\n*******************************************************************\n]])\n  fi\n\n])\n\nAC_MSG_RESULT([$template])\n\nPORTNAME=$template\nAC_SUBST(PORTNAME)\n\n# Initialize default assumption that we do not need separate assembly code\n# for TAS (test-and-set).  This can be overridden by the template file\n# when it's executed.\nneed_tas=no\ntas_file=dummy.s\n\n\n\n##\n## Command line options\n##\n\n#\n# Add non-standard directories to the include path\n#\nPGAC_ARG_REQ(with, includes, [DIRS], [look for additional header files in DIRS])\n\n\n#\n# Add non-standard directories to the library search path\n#\nPGAC_ARG_REQ(with, libraries, [DIRS], [look for additional libraries in DIRS],\n             [LIBRARY_DIRS=$withval])\n\nPGAC_ARG_REQ(with, libs,      [DIRS], [alternative spelling of --with-libraries],\n             [LIBRARY_DIRS=$withval])\n\n\n#\n# 64-bit integer date/time storage is now the only option, but to avoid\n# unnecessary breakage of build scripts, continue to accept an explicit\n# \"--enable-integer-datetimes\" switch.\n#\nPGAC_ARG_BOOL(enable, integer-datetimes, yes, [obsolete option, no longer supported],\n              [],\n              [AC_MSG_ERROR([--disable-integer-datetimes is no longer supported])])\n\n\n#\n# NLS\n#\nAC_MSG_CHECKING([whether NLS is wanted])\nPGAC_ARG_OPTARG(enable, nls,\n                [LANGUAGES], [enable Native Language Support],\n                [],\n                [WANTED_LANGUAGES=$enableval],\n                [AC_DEFINE(ENABLE_NLS, 1,\n                           [Define to 1 if you want National Language Support. (--enable-nls)])])\nAC_MSG_RESULT([$enable_nls])\nAC_SUBST(enable_nls)\nAC_SUBST(WANTED_LANGUAGES)\n\n#\n# Default port number (--with-pgport), default 5432\n#\nAC_MSG_CHECKING([for default port number])\nPGAC_ARG_REQ(with, pgport, [PORTNUM], [set default port number [5432]],\n             [default_port=$withval],\n             [default_port=5432])\nAC_MSG_RESULT([$default_port])\n# Need both of these because some places want an integer and some a string\nAC_DEFINE_UNQUOTED(DEF_PGPORT, ${default_port},\n[Define to the default TCP port number on which the server listens and\nto which clients will try to connect.  This can be overridden at run-time,\nbut it's convenient if your clients have the right default compiled in.\n(--with-pgport=PORTNUM)])\nAC_DEFINE_UNQUOTED(DEF_PGPORT_STR, \"${default_port}\",\n                   [Define to the default TCP port number as a string constant.])\nAC_SUBST(default_port)\n\n# It's worth validating port; you can get very confusing errors otherwise\nif test x\"$default_port\" = x\"\"; then\n  AC_MSG_ERROR([invalid --with-pgport specification: empty string])\nelif test ! x`echo \"$default_port\" | sed -e 's/[[0-9]]*//'` = x\"\"; then\n  AC_MSG_ERROR([invalid --with-pgport specification: must be a number])\nelif test ! x`echo \"$default_port\" | sed -e 's/^0.//'` = x\"$default_port\"; then\n  AC_MSG_ERROR([invalid --with-pgport specification: must not have leading 0])\nelif test \"$default_port\" -lt \"1\" -o \"$default_port\" -gt \"65535\"; then\n  AC_MSG_ERROR([invalid --with-pgport specification: must be between 1 and 65535])\nfi\n\n#\n# '-rpath'-like feature can be disabled\n#\nPGAC_ARG_BOOL(enable, rpath, yes,\n              [do not embed shared library search path in executables])\nAC_SUBST(enable_rpath)\n\n#\n# Spinlocks\n#\nPGAC_ARG_BOOL(enable, spinlocks, yes,\n              [do not use spinlocks])\n\n#\n# Atomic operations\n#\nPGAC_ARG_BOOL(enable, atomics, yes,\n              [do not use atomic operations])\n\n#\n# Random number generation\n#\nPGAC_ARG_BOOL(enable, strong-random, yes,\n              [do not use a strong random number source])\nAC_SUBST(enable_strong_random)\n\n#\n# --enable-debug adds -g to compiler flags\n#\nPGAC_ARG_BOOL(enable, debug, no,\n              [build with debugging symbols (-g)])\nAC_SUBST(enable_debug)\n\n#\n# --enable-profiling enables gcc profiling\n#\nPGAC_ARG_BOOL(enable, profiling, no,\n              [build with profiling enabled ])\n\n#\n# --enable-coverage enables generation of code coverage metrics with gcov\n#\nPGAC_ARG_BOOL(enable, coverage, no,\n              [build with coverage testing instrumentation],\n[PGAC_PATH_PROGS(GCOV, gcov)\nif test -z \"$GCOV\"; then\n  AC_MSG_ERROR([gcov not found])\nfi\nPGAC_PATH_PROGS(LCOV, lcov)\nif test -z \"$LCOV\"; then\n  AC_MSG_ERROR([lcov not found])\nfi\nPGAC_PATH_PROGS(GENHTML, genhtml)\nif test -z \"$GENHTML\"; then\n  AC_MSG_ERROR([genhtml not found])\nfi])\nAC_SUBST(enable_coverage)\n\n#\n# DTrace\n#\nPGAC_ARG_BOOL(enable, dtrace, no,\n              [build with DTrace support],\n[PGAC_PATH_PROGS(DTRACE, dtrace)\nif test -z \"$DTRACE\"; then\n  AC_MSG_ERROR([dtrace not found])\nfi\nAC_SUBST(DTRACEFLAGS)])\nAC_SUBST(enable_dtrace)\n\n#\n# TAP tests\n#\nPGAC_ARG_BOOL(enable, tap-tests, no,\n              [enable TAP tests (requires Perl and IPC::Run)])\nAC_SUBST(enable_tap_tests)\n\n#\n# Block size\n#\nAC_MSG_CHECKING([for block size])\nPGAC_ARG_REQ(with, blocksize, [BLOCKSIZE], [set table block size in kB [8]],\n             [blocksize=$withval],\n             [blocksize=8])\ncase ${blocksize} in\n  1) BLCKSZ=1024;;\n  2) BLCKSZ=2048;;\n  4) BLCKSZ=4096;;\n  8) BLCKSZ=8192;;\n 16) BLCKSZ=16384;;\n 32) BLCKSZ=32768;;\n  *) AC_MSG_ERROR([Invalid block size. Allowed values are 1,2,4,8,16,32.])\nesac\nAC_MSG_RESULT([${blocksize}kB])\n\nAC_DEFINE_UNQUOTED([BLCKSZ], ${BLCKSZ}, [\n Size of a disk block --- this also limits the size of a tuple.  You\n can set it bigger if you need bigger tuples (although TOAST should\n reduce the need to have large tuples, since fields can be spread\n across multiple tuples).\n\n BLCKSZ must be a power of 2.  The maximum possible value of BLCKSZ\n is currently 2^15 (32768).  This is determined by the 15-bit widths\n of the lp_off and lp_len fields in ItemIdData (see\n include/storage/itemid.h).\n\n Changing BLCKSZ requires an initdb.\n])\n\n#\n# Relation segment size\n#\nAC_MSG_CHECKING([for segment size])\nPGAC_ARG_REQ(with, segsize, [SEGSIZE], [set table segment size in GB [1]],\n             [segsize=$withval],\n             [segsize=1])\n# this expression is set up to avoid unnecessary integer overflow\n# blocksize is already guaranteed to be a factor of 1024\nRELSEG_SIZE=`expr '(' 1024 / ${blocksize} ')' '*' ${segsize} '*' 1024`\ntest $? -eq 0 || exit 1\nAC_MSG_RESULT([${segsize}GB])\n\nAC_DEFINE_UNQUOTED([RELSEG_SIZE], ${RELSEG_SIZE}, [\n RELSEG_SIZE is the maximum number of blocks allowed in one disk file.\n Thus, the maximum size of a single file is RELSEG_SIZE * BLCKSZ;\n relations bigger than that are divided into multiple files.\n\n RELSEG_SIZE * BLCKSZ must be less than your OS' limit on file size.\n This is often 2 GB or 4GB in a 32-bit operating system, unless you\n have large file support enabled.  By default, we make the limit 1 GB\n to avoid any possible integer-overflow problems within the OS.\n A limit smaller than necessary only means we divide a large\n relation into more chunks than necessary, so it seems best to err\n in the direction of a small limit.\n\n A power-of-2 value is recommended to save a few cycles in md.c,\n but is not absolutely required.\n\n Changing RELSEG_SIZE requires an initdb.\n])\n\n#\n# WAL block size\n#\nAC_MSG_CHECKING([for WAL block size])\nPGAC_ARG_REQ(with, wal-blocksize, [BLOCKSIZE], [set WAL block size in kB [8]],\n             [wal_blocksize=$withval],\n             [wal_blocksize=8])\ncase ${wal_blocksize} in\n  1) XLOG_BLCKSZ=1024;;\n  2) XLOG_BLCKSZ=2048;;\n  4) XLOG_BLCKSZ=4096;;\n  8) XLOG_BLCKSZ=8192;;\n 16) XLOG_BLCKSZ=16384;;\n 32) XLOG_BLCKSZ=32768;;\n 64) XLOG_BLCKSZ=65536;;\n  *) AC_MSG_ERROR([Invalid WAL block size. Allowed values are 1,2,4,8,16,32,64.])\nesac\nAC_MSG_RESULT([${wal_blocksize}kB])\n\nAC_DEFINE_UNQUOTED([XLOG_BLCKSZ], ${XLOG_BLCKSZ}, [\n Size of a WAL file block.  This need have no particular relation to BLCKSZ.\n XLOG_BLCKSZ must be a power of 2, and if your system supports O_DIRECT I/O,\n XLOG_BLCKSZ must be a multiple of the alignment requirement for direct-I/O\n buffers, else direct I/O may fail.\n\n Changing XLOG_BLCKSZ requires an initdb.\n])\n\n#\n# WAL segment size\n#\nAC_MSG_CHECKING([for WAL segment size])\nPGAC_ARG_REQ(with, wal-segsize, [SEGSIZE], [set WAL segment size in MB [16]],\n             [wal_segsize=$withval],\n             [wal_segsize=16])\ncase ${wal_segsize} in\n  1) ;;\n  2) ;;\n  4) ;;\n  8) ;;\n 16) ;;\n 32) ;;\n 64) ;;\n 128) ;;\n 256) ;;\n 512) ;;\n 1024) ;;\n  *) AC_MSG_ERROR([Invalid WAL segment size. Allowed values are 1,2,4,8,16,32,64,128,256,512,1024.])\nesac\nAC_MSG_RESULT([${wal_segsize}MB])\n\nAC_DEFINE_UNQUOTED([XLOG_SEG_SIZE], [(${wal_segsize} * 1024 * 1024)], [\n XLOG_SEG_SIZE is the size of a single WAL file.  This must be a power of 2\n and larger than XLOG_BLCKSZ (preferably, a great deal larger than\n XLOG_BLCKSZ).\n\n Changing XLOG_SEG_SIZE requires an initdb.\n])\n\n#\n# C compiler\n#\n\n# For historical reasons you can also use --with-CC to specify the C compiler\n# to use, although the standard way to do this is to set the CC environment\n# variable.\nPGAC_ARG_REQ(with, CC, [CMD], [set compiler (deprecated)], [CC=$with_CC])\n\ncase $template in\n  aix) pgac_cc_list=\"gcc xlc\";;\n    *) pgac_cc_list=\"gcc cc\";;\nesac\n\nAC_PROG_CC([$pgac_cc_list])\n\n# Check if it's Intel's compiler, which (usually) pretends to be gcc,\n# but has idiosyncrasies of its own.  We assume icc will define\n# __INTEL_COMPILER regardless of CFLAGS.\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([], [@%:@ifndef __INTEL_COMPILER\nchoke me\n@%:@endif])], [ICC=yes], [ICC=no])\n\n# Check if it's Sun Studio compiler. We assume that\n# __SUNPRO_C will be defined for Sun Studio compilers\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([], [@%:@ifndef __SUNPRO_C\nchoke me\n@%:@endif])], [SUN_STUDIO_CC=yes], [SUN_STUDIO_CC=no])\n\nAC_SUBST(SUN_STUDIO_CC)\n\nunset CFLAGS\n\n#\n# Read the template\n#\n. \"$srcdir/src/template/$template\" || exit\n\n# CFLAGS are selected so:\n# If the user specifies something in the environment, that is used.\n# else:  If the template file set something, that is used.\n# else:  If coverage was enabled, don't set anything.\n# else:  If the compiler is GCC, then we use -O2.\n# else:  If the compiler is something else, then we use -O, unless debugging.\n\nif test \"$ac_env_CFLAGS_set\" = set; then\n  CFLAGS=$ac_env_CFLAGS_value\nelif test \"${CFLAGS+set}\" = set; then\n  : # (keep what template set)\nelif test \"$enable_coverage\" = yes; then\n  : # no optimization by default\nelif test \"$GCC\" = yes; then\n  CFLAGS=\"-O2\"\nelse\n  # if the user selected debug mode, don't use -O\n  if test \"$enable_debug\" != yes; then\n    CFLAGS=\"-O\"\n  fi\nfi\n\n# CFLAGS we determined above will be added back at the end\nuser_CFLAGS=$CFLAGS\nCFLAGS=\"\"\n\n# set CFLAGS_VECTOR from the environment, if available\nif test \"$ac_env_CFLAGS_VECTOR_set\" = set; then\n  CFLAGS_VECTOR=$ac_env_CFLAGS_VECTOR_value\nfi\n\n# Some versions of GCC support some additional useful warning flags.\n# Check whether they are supported, and add them to CFLAGS if so.\n# ICC pretends to be GCC but it's lying; it doesn't support these flags,\n# but has its own.  Also check other compiler-specific flags here.\n\nif test \"$GCC\" = yes -a \"$ICC\" = no; then\n  CFLAGS=\"-Wall -Wmissing-prototypes -Wpointer-arith\"\n  # These work in some but not all gcc versions\n  PGAC_PROG_CC_CFLAGS_OPT([-Wdeclaration-after-statement])\n  PGAC_PROG_CC_CFLAGS_OPT([-Wendif-labels])\n  PGAC_PROG_CC_CFLAGS_OPT([-Wmissing-format-attribute])\n  # This was included in -Wall/-Wformat in older GCC versions\n  PGAC_PROG_CC_CFLAGS_OPT([-Wformat-security])\n  # Disable strict-aliasing rules; needed for gcc 3.3+\n  PGAC_PROG_CC_CFLAGS_OPT([-fno-strict-aliasing])\n  # Disable optimizations that assume no overflow; needed for gcc 4.3+\n  PGAC_PROG_CC_CFLAGS_OPT([-fwrapv])\n  # Disable FP optimizations that cause various errors on gcc 4.5+ or maybe 4.6+\n  PGAC_PROG_CC_CFLAGS_OPT([-fexcess-precision=standard])\n  # Optimization flags for specific files that benefit from vectorization\n  PGAC_PROG_CC_VAR_OPT(CFLAGS_VECTOR, [-funroll-loops])\n  PGAC_PROG_CC_VAR_OPT(CFLAGS_VECTOR, [-ftree-vectorize])\n  # We want to suppress clang's unhelpful unused-command-line-argument warnings\n  # but gcc won't complain about unrecognized -Wno-foo switches, so we have to\n  # test for the positive form and if that works, add the negative form\n  NOT_THE_CFLAGS=\"\"\n  PGAC_PROG_CC_VAR_OPT(NOT_THE_CFLAGS, [-Wunused-command-line-argument])\n  if test -n \"$NOT_THE_CFLAGS\"; then\n    CFLAGS=\"$CFLAGS -Wno-unused-command-line-argument\"\n  fi\n  # Similarly disable useless truncation warnings from gcc 8+\n  NOT_THE_CFLAGS=\"\"\n  PGAC_PROG_CC_VAR_OPT(NOT_THE_CFLAGS, [-Wformat-truncation])\n  if test -n \"$NOT_THE_CFLAGS\"; then\n    CFLAGS=\"$CFLAGS -Wno-format-truncation\"\n  fi\n  NOT_THE_CFLAGS=\"\"\n  PGAC_PROG_CC_VAR_OPT(NOT_THE_CFLAGS, [-Wstringop-truncation])\n  if test -n \"$NOT_THE_CFLAGS\"; then\n    CFLAGS=\"$CFLAGS -Wno-stringop-truncation\"\n  fi\nelif test \"$ICC\" = yes; then\n  # Intel's compiler has a bug/misoptimization in checking for\n  # division by NAN (NaN == 0), -mp1 fixes it, so add it to the CFLAGS.\n  PGAC_PROG_CC_CFLAGS_OPT([-mp1])\n  # Make sure strict aliasing is off (though this is said to be the default)\n  PGAC_PROG_CC_CFLAGS_OPT([-fno-strict-aliasing])\nelif test \"$PORTNAME\" = \"aix\"; then\n  # AIX's xlc has to have strict aliasing turned off too\n  PGAC_PROG_CC_CFLAGS_OPT([-qnoansialias])\n  PGAC_PROG_CC_CFLAGS_OPT([-qlonglong])\nelif test \"$PORTNAME\" = \"hpux\"; then\n  # On some versions of HP-UX, libm functions do not set errno by default.\n  # Fix that by using +Olibmerrno if the compiler recognizes it.\n  PGAC_PROG_CC_CFLAGS_OPT([+Olibmerrno])\nfi\n\nAC_SUBST(CFLAGS_VECTOR, $CFLAGS_VECTOR)\n\n# supply -g if --enable-debug\nif test \"$enable_debug\" = yes && test \"$ac_cv_prog_cc_g\" = yes; then\n  CFLAGS=\"$CFLAGS -g\"\nfi\n\n# enable code coverage if --enable-coverage\nif test \"$enable_coverage\" = yes; then\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"$CFLAGS -fprofile-arcs -ftest-coverage\"\n  else\n    AC_MSG_ERROR([--enable-coverage is supported only when using GCC])\n  fi\nfi\n\n# enable profiling if --enable-profiling\nif test \"$enable_profiling\" = yes && test \"$ac_cv_prog_cc_g\" = yes; then\n  if test \"$GCC\" = yes; then\n    AC_DEFINE([PROFILE_PID_DIR], 1,\n           [Define to 1 to allow profiling output to be saved separately for each process.])\n    CFLAGS=\"$CFLAGS -pg $PLATFORM_PROFILE_FLAGS\"\n  else\n    AC_MSG_ERROR([--enable-profiling is supported only when using GCC])\n  fi\nfi\n\n# We already have this in Makefile.win32, but configure needs it too\nif test \"$PORTNAME\" = \"win32\"; then\n  CPPFLAGS=\"$CPPFLAGS -I$srcdir/src/include/port/win32 -DEXEC_BACKEND\"\nfi\n\n# Now that we're done automatically adding stuff to CFLAGS, put back the\n# user-specified flags (if any) at the end.  This lets users override\n# the automatic additions.\nCFLAGS=\"$CFLAGS $user_CFLAGS\"\n\n# Check if the compiler still works with the final flag settings\nAC_MSG_CHECKING([whether the C compiler still works])\nAC_LINK_IFELSE([AC_LANG_PROGRAM([], [return 0;])],\n  [AC_MSG_RESULT(yes)],\n  [AC_MSG_RESULT(no)\n   AC_MSG_ERROR([cannot proceed])])\n\n# Defend against gcc -ffast-math\nif test \"$GCC\" = yes; then\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([], [@%:@ifdef __FAST_MATH__\nchoke me\n@%:@endif])], [], [AC_MSG_ERROR([do not put -ffast-math in CFLAGS])])\nfi\n\n# Defend against clang being used on x86-32 without SSE2 enabled.  As current\n# versions of clang do not understand -fexcess-precision=standard, the use of\n# x87 floating point operations leads to problems like isinf possibly returning\n# false for a value that is infinite when converted from the 80bit register to\n# the 8byte memory representation.\n#\n# Only perform the test if the compiler doesn't understand\n# -fexcess-precision=standard, that way a potentially fixed compiler will work\n# automatically.\nif test \"$pgac_cv_prog_cc_cflags__fexcess_precision_standard\" = no; then\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([], [\n@%:@if defined(__clang__) && defined(__i386__) && !defined(__SSE2_MATH__)\nchoke me\n@%:@endif\n])], [],\n[AC_MSG_ERROR([Compiling PostgreSQL with clang, on 32bit x86, requires SSE2 support. Use -msse2 or use gcc.])])\nfi\n\nAC_PROG_CPP\nAC_SUBST(GCC)\n\n\n#\n# Set up TAS assembly code if needed; the template file has now had its\n# chance to request this.\n#\nAC_CONFIG_LINKS([src/backend/port/tas.s:src/backend/port/tas/${tas_file}])\n\nif test \"$need_tas\" = yes ; then\n  TAS=tas.o\nelse\n  TAS=\"\"\nfi\nAC_SUBST(TAS)\n\n\n#\n# Automatic dependency tracking\n#\nPGAC_ARG_BOOL(enable, depend, no, [turn on automatic dependency tracking],\n              [autodepend=yes])\nAC_SUBST(autodepend)\n\n\n#\n# Enable assert checks\n#\nPGAC_ARG_BOOL(enable, cassert, no, [enable assertion checks (for debugging)],\n              [AC_DEFINE([USE_ASSERT_CHECKING], 1,\n                         [Define to 1 to build with assertion checks. (--enable-cassert)])])\n\n\n#\n# Include directories\n#\nac_save_IFS=$IFS\nIFS=\"${IFS}${PATH_SEPARATOR}\"\n# SRCH_INC comes from the template file\nfor dir in $with_includes $SRCH_INC; do\n  if test -d \"$dir\"; then\n    INCLUDES=\"$INCLUDES -I$dir\"\n  else\n    AC_MSG_WARN([*** Include directory $dir does not exist.])\n  fi\ndone\nIFS=$ac_save_IFS\nAC_SUBST(INCLUDES)\n\n\n#\n# Library directories\n#\nac_save_IFS=$IFS\nIFS=\"${IFS}${PATH_SEPARATOR}\"\n# LIBRARY_DIRS comes from command line, SRCH_LIB from template file.\nfor dir in $LIBRARY_DIRS $SRCH_LIB; do\n  if test -d \"$dir\"; then\n    LIBDIRS=\"$LIBDIRS -L$dir\"\n  else\n    AC_MSG_WARN([*** Library directory $dir does not exist.])\n  fi\ndone\nIFS=$ac_save_IFS\n\n#\n# Enable thread-safe client libraries\n#\nAC_MSG_CHECKING([allow thread-safe client libraries])\nPGAC_ARG_BOOL(enable, thread-safety, yes, [disable thread-safety in client libraries])\nif test \"$enable_thread_safety\" = yes; then\n  AC_DEFINE([ENABLE_THREAD_SAFETY], 1,\n          [Define to 1 to build client libraries as thread-safe code. (--enable-thread-safety)])\nfi\nAC_MSG_RESULT([$enable_thread_safety])\nAC_SUBST(enable_thread_safety)\n\n#\n# ICU\n#\nAC_MSG_CHECKING([whether to build with ICU support])\nPGAC_ARG_BOOL(with, icu, no, [build with ICU support],\n              [AC_DEFINE([USE_ICU], 1, [Define to build with ICU support. (--with-icu)])])\nAC_MSG_RESULT([$with_icu])\nAC_SUBST(with_icu)\n\nif test \"$with_icu\" = yes; then\n  PKG_CHECK_MODULES(ICU, icu-uc icu-i18n)\nfi\n\n#\n# Optionally build Tcl modules (PL/Tcl)\n#\nAC_MSG_CHECKING([whether to build with Tcl])\nPGAC_ARG_BOOL(with, tcl, no, [build Tcl modules (PL/Tcl)])\nAC_MSG_RESULT([$with_tcl])\nAC_SUBST([with_tcl])\n\n# We see if the path to the Tcl/Tk configuration scripts is specified.\n# This will override the use of tclsh to find the paths to search.\n\nPGAC_ARG_REQ(with, tclconfig, [DIR], [tclConfig.sh is in DIR])\n\n#\n# Optionally build Perl modules (PL/Perl)\n#\nAC_MSG_CHECKING([whether to build Perl modules])\nPGAC_ARG_BOOL(with, perl, no, [build Perl modules (PL/Perl)])\nAC_MSG_RESULT([$with_perl])\nAC_SUBST(with_perl)\n\n#\n# Optionally build Python modules (PL/Python)\n#\nAC_MSG_CHECKING([whether to build Python modules])\nPGAC_ARG_BOOL(with, python, no, [build Python modules (PL/Python)])\nAC_MSG_RESULT([$with_python])\nAC_SUBST(with_python)\n\n#\n# GSSAPI\n#\nAC_MSG_CHECKING([whether to build with GSSAPI support])\nPGAC_ARG_BOOL(with, gssapi, no, [build with GSSAPI support],\n[\n  AC_DEFINE(ENABLE_GSS, 1, [Define to build with GSSAPI support. (--with-gssapi)])\n  krb_srvtab=\"FILE:\\$(sysconfdir)/krb5.keytab\"\n])\nAC_MSG_RESULT([$with_gssapi])\n\n\nAC_SUBST(krb_srvtab)\n\n\n#\n# Kerberos configuration parameters\n#\nPGAC_ARG_REQ(with, krb-srvnam,\n             [NAME], [default service principal name in Kerberos (GSSAPI) [postgres]],\n             [],\n             [with_krb_srvnam=\"postgres\"])\nAC_DEFINE_UNQUOTED([PG_KRB_SRVNAM], [\"$with_krb_srvnam\"],\n                   [Define to the name of the default PostgreSQL service principal in Kerberos (GSSAPI). (--with-krb-srvnam=NAME)])\n\n\n#\n# PAM\n#\nAC_MSG_CHECKING([whether to build with PAM support])\nPGAC_ARG_BOOL(with, pam, no,\n              [build with PAM support],\n              [AC_DEFINE([USE_PAM], 1, [Define to 1 to build with PAM support. (--with-pam)])])\nAC_MSG_RESULT([$with_pam])\n\n\n#\n# BSD AUTH\n#\nAC_MSG_CHECKING([whether to build with BSD Authentication support])\nPGAC_ARG_BOOL(with, bsd-auth, no,\n              [build with BSD Authentication support],\n              [AC_DEFINE([USE_BSD_AUTH], 1, [Define to 1 to build with BSD Authentication support. (--with-bsd-auth)])])\nAC_MSG_RESULT([$with_bsd_auth])\n\n\n#\n# LDAP\n#\nAC_MSG_CHECKING([whether to build with LDAP support])\nPGAC_ARG_BOOL(with, ldap, no,\n              [build with LDAP support],\n              [AC_DEFINE([USE_LDAP], 1, [Define to 1 to build with LDAP support. (--with-ldap)])])\nAC_MSG_RESULT([$with_ldap])\n\n\n#\n# Bonjour\n#\nAC_MSG_CHECKING([whether to build with Bonjour support])\nPGAC_ARG_BOOL(with, bonjour, no,\n              [build with Bonjour support],\n              [AC_DEFINE([USE_BONJOUR], 1, [Define to 1 to build with Bonjour support. (--with-bonjour)])])\nAC_MSG_RESULT([$with_bonjour])\n\n\n#\n# OpenSSL\n#\nAC_MSG_CHECKING([whether to build with OpenSSL support])\nPGAC_ARG_BOOL(with, openssl, no, [build with OpenSSL support],\n              [AC_DEFINE([USE_OPENSSL], 1, [Define to build with OpenSSL support. (--with-openssl)])])\nAC_MSG_RESULT([$with_openssl])\nAC_SUBST(with_openssl)\n\n#\n# SELinux\n#\nAC_MSG_CHECKING([whether to build with SELinux support])\nPGAC_ARG_BOOL(with, selinux, no, [build with SELinux support])\nAC_SUBST(with_selinux)\nAC_MSG_RESULT([$with_selinux])\n\n#\n# Systemd\n#\nAC_MSG_CHECKING([whether to build with systemd support])\nPGAC_ARG_BOOL(with, systemd, no, [build with systemd support],\n              [AC_DEFINE([USE_SYSTEMD], 1, [Define to build with systemd support. (--with-systemd)])])\nAC_SUBST(with_systemd)\nAC_MSG_RESULT([$with_systemd])\n\n#\n# Readline\n#\nPGAC_ARG_BOOL(with, readline, yes,\n              [do not use GNU Readline nor BSD Libedit for editing])\n# readline on MinGW has problems with backslashes in psql and other bugs.\n# This is particularly a problem with non-US code pages.\n# Therefore disable its use until we understand the cause. 2004-07-20\nif test \"$PORTNAME\" = \"win32\"; then\n  if test \"$with_readline\" = yes; then\n    AC_MSG_WARN([*** Readline does not work on MinGW --- disabling])\n    with_readline=no\n  fi\nfi\n\n\n#\n# Prefer libedit\n#\nPGAC_ARG_BOOL(with, libedit-preferred, no,\n              [prefer BSD Libedit over GNU Readline])\n\n\n#\n# UUID library\n#\n# There are at least three UUID libraries in common use: the FreeBSD/NetBSD\n# library, the e2fsprogs libuuid (now part of util-linux-ng), and the OSSP\n# UUID library.  More than one of these might be present on a given platform,\n# so we make the user say which one she wants.\n#\nPGAC_ARG_REQ(with, uuid, [LIB], [build contrib/uuid-ossp using LIB (bsd,e2fs,ossp)])\nif test x\"$with_uuid\" = x\"\" ; then\n  with_uuid=no\nfi\nPGAC_ARG_BOOL(with, ossp-uuid, no, [obsolete spelling of --with-uuid=ossp])\nif test \"$with_ossp_uuid\" = yes ; then\n  with_uuid=ossp\nfi\n\nif test \"$with_uuid\" = bsd ; then\n  AC_DEFINE([HAVE_UUID_BSD], 1, [Define to 1 if you have BSD UUID support.])\n  UUID_EXTRA_OBJS=\"md5.o sha1.o\"\nelif test \"$with_uuid\" = e2fs ; then\n  AC_DEFINE([HAVE_UUID_E2FS], 1, [Define to 1 if you have E2FS UUID support.])\n  UUID_EXTRA_OBJS=\"md5.o sha1.o\"\nelif test \"$with_uuid\" = ossp ; then\n  AC_DEFINE([HAVE_UUID_OSSP], 1, [Define to 1 if you have OSSP UUID support.])\n  UUID_EXTRA_OBJS=\"\"\nelif test \"$with_uuid\" = no ; then\n  UUID_EXTRA_OBJS=\"\"\nelse\n  AC_MSG_ERROR([--with-uuid must specify one of bsd, e2fs, or ossp])\nfi\nAC_SUBST(with_uuid)\nAC_SUBST(UUID_EXTRA_OBJS)\n\n\n#\n# XML\n#\nPGAC_ARG_BOOL(with, libxml, no, [build with XML support],\n              [AC_DEFINE([USE_LIBXML], 1, [Define to 1 to build with XML support. (--with-libxml)])])\n\nif test \"$with_libxml\" = yes ; then\n  PGAC_PATH_PROGS(XML2_CONFIG, xml2-config)\n  if test -n \"$XML2_CONFIG\"; then\n    for pgac_option in `$XML2_CONFIG --cflags`; do\n      case $pgac_option in\n        -I*|-D*) CPPFLAGS=\"$CPPFLAGS $pgac_option\";;\n      esac\n    done\n    for pgac_option in `$XML2_CONFIG --libs`; do\n      case $pgac_option in\n        -L*) LDFLAGS=\"$LDFLAGS $pgac_option\";;\n      esac\n    done\n  fi\nfi\n\nAC_SUBST(with_libxml)\n\n#\n# XSLT\n#\nPGAC_ARG_BOOL(with, libxslt, no, [use XSLT support when building contrib/xml2],\n              [AC_DEFINE([USE_LIBXSLT], 1, [Define to 1 to use XSLT support when building contrib/xml2. (--with-libxslt)])])\n\n\nAC_SUBST(with_libxslt)\n\n#\n# tzdata\n#\nPGAC_ARG_REQ(with, system-tzdata,\n             [DIR], [use system time zone data in DIR])\nAC_SUBST(with_system_tzdata)\n\n#\n# Zlib\n#\nPGAC_ARG_BOOL(with, zlib, yes,\n              [do not use Zlib])\nAC_SUBST(with_zlib)\n\n#\n# Elf\n#\n\n# Assume system is ELF if it predefines __ELF__ as 1,\n# otherwise believe host_os based default.\ncase $host_os in\n    freebsd1*|freebsd2*) elf=no;;\n    freebsd3*|freebsd4*) elf=yes;;\nesac\n\nAC_EGREP_CPP(yes,\n[#if __ELF__\n  yes\n#endif\n],\n[ELF_SYS=true],\n[if test \"X$elf\" = \"Xyes\" ; then\n  ELF_SYS=true\nelse\n  ELF_SYS=\nfi])\nAC_SUBST(ELF_SYS)\n\n#\n# Assignments\n#\n\nCPPFLAGS=\"$CPPFLAGS $INCLUDES\"\nLDFLAGS=\"$LDFLAGS $LIBDIRS\"\n\nAC_ARG_VAR(LDFLAGS_EX, [extra linker flags for linking executables only])\nAC_ARG_VAR(LDFLAGS_SL, [extra linker flags for linking shared libraries only])\n\nPGAC_PROG_LD\nAC_SUBST(LD)\nAC_SUBST(with_gnu_ld)\nAC_PROG_RANLIB\nPGAC_CHECK_STRIP\nAC_CHECK_TOOL(AR, ar, ar)\nif test \"$PORTNAME\" = \"win32\"; then\n  AC_CHECK_TOOL(DLLTOOL, dlltool, dlltool)\n  AC_CHECK_TOOL(DLLWRAP, dllwrap, dllwrap)\n  AC_CHECK_TOOL(WINDRES, windres, windres)\nfi\n\nAC_PROG_INSTALL\n# When Autoconf chooses install-sh as install program it tries to generate\n# a relative path to it in each makefile where it substitutes it. This clashes\n# with our Makefile.global concept. This workaround helps.\ncase $INSTALL in\n  *install-sh*) install_bin='';;\n  *) install_bin=$INSTALL;;\nesac\nAC_SUBST(install_bin)\n\nPGAC_PATH_PROGS(TAR, tar)\nAC_PROG_LN_S\nAC_PROG_AWK\nAC_PROG_MKDIR_P\n# When Autoconf chooses install-sh as mkdir -p program it tries to generate\n# a relative path to it in each makefile where it substitutes it. This clashes\n# with our Makefile.global concept. This workaround helps.\ncase $MKDIR_P in\n  *install-sh*) MKDIR_P='\\${SHELL} \\${top_srcdir}/config/install-sh -c -d';;\nesac\n\nPGAC_PATH_BISON\nPGAC_PATH_FLEX\n\nPGAC_PATH_PERL\nif test \"$with_perl\" = yes; then\n  if test -z \"$PERL\"; then\n    AC_MSG_ERROR([Perl not found])\n  fi\n  PGAC_CHECK_PERL_CONFIGS([archlibexp,privlibexp,useshrplib])\n  if test \"$perl_useshrplib\" != yes && test \"$perl_useshrplib\" != true; then\n    AC_MSG_ERROR([cannot build PL/Perl because libperl is not a shared library\nYou might have to rebuild your Perl installation.  Refer to the\ndocumentation for details.  Use --without-perl to disable building\nPL/Perl.])\n  fi\n  # On most platforms, archlibexp is also where the Perl include files live ...\n  perl_includespec=\"-I$perl_archlibexp/CORE\"\n  # ... but on newer macOS versions, we must use -iwithsysroot to look\n  # under $PG_SYSROOT\n  if test \\! -f \"$perl_archlibexp/CORE/perl.h\" ; then\n    if test -f \"$PG_SYSROOT$perl_archlibexp/CORE/perl.h\" ; then\n      perl_includespec=\"-iwithsysroot $perl_archlibexp/CORE\"\n    fi\n  fi\n  AC_SUBST(perl_includespec)dnl\n  PGAC_CHECK_PERL_EMBED_CCFLAGS\n  PGAC_CHECK_PERL_EMBED_LDFLAGS\nfi\n\nif test \"$with_python\" = yes; then\n  PGAC_PATH_PYTHON\n  PGAC_CHECK_PYTHON_EMBED_SETUP\nfi\n\nif test \"$cross_compiling\" = yes && test -z \"$with_system_tzdata\"; then\n  PGAC_PATH_PROGS(ZIC, zic)\n  if test -z \"$ZIC\"; then\n    AC_MSG_ERROR([\nWhen cross-compiling, either use the option --with-system-tzdata to use\nexisting time-zone data, or set the environment variable ZIC to a zic\nprogram to use during the build.])\n  fi\nfi\n\n#\n# Pthreads\n#\n# For each platform, we need to know about any special compile and link\n# libraries, and whether the normal C function names are thread-safe.\n# See the comment at the top of src/port/thread.c for more information.\n# WIN32 doesn't need the pthread tests;  it always uses threads\n#\n# These tests are run before the library-tests, because linking with the\n# other libraries can pull in the pthread functions as a side-effect.  We\n# want to use the -pthread or similar flags directly, and not rely on\n# the side-effects of linking with some other library.\n#\n# note: We have to use AS_IF here rather than plain if. The AC_CHECK_HEADER\n# invocation below is the first one in the script, and autoconf generates\n# additional code for that, which must not be inside the if-block. AS_IF\n# knows how to do that.\nAS_IF([test \"$enable_thread_safety\" = yes -a \"$PORTNAME\" != \"win32\"],\n[ # then\nAX_PTHREAD\t# set thread flags\n\n# Some platforms use these, so just define them.  They can't hurt if they\n# are not supported.  For example, on Solaris -D_POSIX_PTHREAD_SEMANTICS\n# enables 5-arg getpwuid_r, among other things.\nPTHREAD_CFLAGS=\"$PTHREAD_CFLAGS -D_REENTRANT -D_THREAD_SAFE -D_POSIX_PTHREAD_SEMANTICS\"\n\n# Check for *_r functions\n_CFLAGS=\"$CFLAGS\"\n_LIBS=\"$LIBS\"\nCFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\nLIBS=\"$LIBS $PTHREAD_LIBS\"\n\nAC_CHECK_HEADER(pthread.h, [], [AC_MSG_ERROR([\npthread.h not found;  use --disable-thread-safety to disable thread safety])])\n\nAC_CHECK_FUNCS([strerror_r getpwuid_r gethostbyname_r])\n\n# Do test here with the proper thread flags\nPGAC_FUNC_STRERROR_R_INT\n\nCFLAGS=\"$_CFLAGS\"\nLIBS=\"$_LIBS\"\n\n], [ # else\n# do not use values from template file\nPTHREAD_CFLAGS=\nPTHREAD_LIBS=\n]) # fi\n\nAC_SUBST(PTHREAD_CFLAGS)\nAC_SUBST(PTHREAD_LIBS)\n\n\n##\n## Libraries\n##\n## Most libraries are included only if they demonstrably provide a function\n## we need, but libm is an exception: always include it, because there are\n## too many compilers that play cute optimization games that will break\n## probes for standard functions such as pow().\n##\n\nAC_CHECK_LIB(m, main)\nAC_SEARCH_LIBS(setproctitle, util)\nAC_SEARCH_LIBS(dlopen, dl)\nAC_SEARCH_LIBS(socket, [socket ws2_32])\nAC_SEARCH_LIBS(shl_load, dld)\n# We only use libld in port/dynloader/aix.c\ncase $host_os in\n     aix*)\n\tAC_SEARCH_LIBS(ldopen, ld)\n\t;;\nesac\nAC_SEARCH_LIBS(getopt_long, [getopt gnugetopt])\nAC_SEARCH_LIBS(crypt, crypt)\nAC_SEARCH_LIBS(shm_open, rt)\nAC_SEARCH_LIBS(shm_unlink, rt)\nAC_SEARCH_LIBS(clock_gettime, [rt posix4])\n# Solaris:\nAC_SEARCH_LIBS(fdatasync, [rt posix4])\n# Required for thread_test.c on Solaris\nAC_SEARCH_LIBS(sched_yield, rt)\n# Required for thread_test.c on Solaris 2.5:\n# Other ports use it too (HP-UX) so test unconditionally\nAC_SEARCH_LIBS(gethostbyname_r, nsl)\n# Cygwin:\nAC_SEARCH_LIBS(shmget, cygipc)\n\nif test \"$with_readline\" = yes; then\n  PGAC_CHECK_READLINE\n  if test x\"$pgac_cv_check_readline\" = x\"no\"; then\n    AC_MSG_ERROR([readline library not found\nIf you have readline already installed, see config.log for details on the\nfailure.  It is possible the compiler isn't looking in the proper directory.\nUse --without-readline to disable readline support.])\n  fi\nfi\n\nif test \"$with_zlib\" = yes; then\n  AC_CHECK_LIB(z, inflate, [],\n               [AC_MSG_ERROR([zlib library not found\nIf you have zlib already installed, see config.log for details on the\nfailure.  It is possible the compiler isn't looking in the proper directory.\nUse --without-zlib to disable zlib support.])])\nfi\n\nif test \"$enable_spinlocks\" = yes; then\n  AC_DEFINE(HAVE_SPINLOCKS, 1, [Define to 1 if you have spinlocks.])\nelse\n  AC_MSG_WARN([\n*** Not using spinlocks will cause poor performance.])\nfi\n\nif test \"$enable_atomics\" = yes; then\n  AC_DEFINE(HAVE_ATOMICS, 1, [Define to 1 if you want to use atomics if available.])\nelse\n  AC_MSG_WARN([\n*** Not using atomic operations will cause poor performance.])\nfi\n\nif test \"$with_gssapi\" = yes ; then\n  if test \"$PORTNAME\" != \"win32\"; then\n    AC_SEARCH_LIBS(gss_init_sec_context, [gssapi_krb5 gss 'gssapi -lkrb5 -lcrypto'], [],\n                   [AC_MSG_ERROR([could not find function 'gss_init_sec_context' required for GSSAPI])])\n  else\n    LIBS=\"$LIBS -lgssapi32\"\n  fi\nfi\n\nif test \"$with_openssl\" = yes ; then\n  dnl Order matters!\n  if test \"$PORTNAME\" != \"win32\"; then\n     AC_CHECK_LIB(crypto, CRYPTO_new_ex_data, [], [AC_MSG_ERROR([library 'crypto' is required for OpenSSL])])\n     AC_CHECK_LIB(ssl,    SSL_new, [], [AC_MSG_ERROR([library 'ssl' is required for OpenSSL])])\n  else\n     AC_SEARCH_LIBS(CRYPTO_new_ex_data, [eay32 crypto], [], [AC_MSG_ERROR([library 'eay32' or 'crypto' is required for OpenSSL])])\n     AC_SEARCH_LIBS(SSL_new, [ssleay32 ssl], [], [AC_MSG_ERROR([library 'ssleay32' or 'ssl' is required for OpenSSL])])\n  fi\n  AC_CHECK_FUNCS([SSL_get_current_compression])\n  # Functions introduced in OpenSSL 1.1.0. We used to check for\n  # OPENSSL_VERSION_NUMBER, but that didn't work with 1.1.0, because LibreSSL\n  # defines OPENSSL_VERSION_NUMBER to claim version 2.0.0, even though it\n  # doesn't have these OpenSSL 1.1.0 functions. So check for individual\n  # functions.\n  AC_CHECK_FUNCS([OPENSSL_init_ssl BIO_get_data BIO_meth_new ASN1_STRING_get0_data RAND_OpenSSL])\n  # OpenSSL versions before 1.1.0 required setting callback functions, for\n  # thread-safety. In 1.1.0, it's no longer required, and CRYPTO_lock()\n  # function was removed.\n  AC_CHECK_FUNCS([CRYPTO_lock])\nfi\n\nif test \"$with_pam\" = yes ; then\n  AC_CHECK_LIB(pam,    pam_start, [], [AC_MSG_ERROR([library 'pam' is required for PAM])])\nfi\n\nif test \"$with_libxml\" = yes ; then\n  AC_CHECK_LIB(xml2, xmlSaveToBuffer, [], [AC_MSG_ERROR([library 'xml2' (version >= 2.6.23) is required for XML support])])\nfi\n\nif test \"$with_libxslt\" = yes ; then\n  AC_CHECK_LIB(xslt, xsltCleanupGlobals, [], [AC_MSG_ERROR([library 'xslt' is required for XSLT support])])\nfi\n\n# Note: We can test for libldap_r only after we know PTHREAD_LIBS\nif test \"$with_ldap\" = yes ; then\n  _LIBS=\"$LIBS\"\n  if test \"$PORTNAME\" != \"win32\"; then\n    AC_CHECK_LIB(ldap, ldap_bind, [],\n\t\t [AC_MSG_ERROR([library 'ldap' is required for LDAP])],\n\t\t [$EXTRA_LDAP_LIBS])\n    LDAP_LIBS_BE=\"-lldap $EXTRA_LDAP_LIBS\"\n    if test \"$enable_thread_safety\" = yes; then\n      # on some platforms ldap_r fails to link without PTHREAD_LIBS\n      AC_CHECK_LIB(ldap_r, ldap_simple_bind, [],\n\t\t   [AC_MSG_ERROR([library 'ldap_r' is required for LDAP])],\n\t\t   [$PTHREAD_CFLAGS $PTHREAD_LIBS $EXTRA_LDAP_LIBS])\n      LDAP_LIBS_FE=\"-lldap_r $EXTRA_LDAP_LIBS\"\n    else\n      LDAP_LIBS_FE=\"-lldap $EXTRA_LDAP_LIBS\"\n    fi\n  else\n    AC_CHECK_LIB(wldap32, ldap_bind, [], [AC_MSG_ERROR([library 'wldap32' is required for LDAP])])\n    LDAP_LIBS_FE=\"-lwldap32\"\n    LDAP_LIBS_BE=\"-lwldap32\"\n  fi\n  LIBS=\"$_LIBS\"\nfi\nAC_SUBST(LDAP_LIBS_FE)\nAC_SUBST(LDAP_LIBS_BE)\n\n# for contrib/sepgsql\nif test \"$with_selinux\" = yes; then\n  AC_CHECK_LIB(selinux, security_compute_create_name, [],\n               [AC_MSG_ERROR([library 'libselinux', version 2.1.10 or newer, is required for SELinux support])])\nfi\n\n# for contrib/uuid-ossp\nif test \"$with_uuid\" = bsd ; then\n  # On BSD, the UUID functions are in libc\n  AC_CHECK_FUNC(uuid_to_string,\n    [UUID_LIBS=\"\"],\n    [AC_MSG_ERROR([BSD UUID functions are not present])])\nelif test \"$with_uuid\" = e2fs ; then\n  # On macOS, the UUID functions are in libc\n  AC_CHECK_FUNC(uuid_generate,\n    [UUID_LIBS=\"\"],\n    [AC_CHECK_LIB(uuid, uuid_generate,\n      [UUID_LIBS=\"-luuid\"],\n      [AC_MSG_ERROR([library 'uuid' is required for E2FS UUID])])])\nelif test \"$with_uuid\" = ossp ; then\n  AC_CHECK_LIB(ossp-uuid, uuid_export,\n    [UUID_LIBS=\"-lossp-uuid\"],\n    [AC_CHECK_LIB(uuid, uuid_export,\n      [UUID_LIBS=\"-luuid\"],\n      [AC_MSG_ERROR([library 'ossp-uuid' or 'uuid' is required for OSSP UUID])])])\nfi\nAC_SUBST(UUID_LIBS)\n\n\n##\n## Header files\n##\n\nAC_CHECK_HEADERS([atomic.h crypt.h dld.h fp_class.h getopt.h ieeefp.h ifaddrs.h langinfo.h mbarrier.h poll.h sys/epoll.h sys/ipc.h sys/pstat.h sys/resource.h sys/select.h sys/sem.h sys/shm.h sys/sockio.h sys/tas.h sys/un.h termios.h ucred.h utime.h wchar.h wctype.h])\n\n# On BSD, test for net/if.h will fail unless sys/socket.h\n# is included first.\nAC_CHECK_HEADERS(net/if.h, [], [],\n[AC_INCLUDES_DEFAULT\n#include <sys/socket.h>\n])\n\n# On OpenBSD, test for sys/ucred.h will fail unless sys/param.h\n# is included first.\nAC_CHECK_HEADERS(sys/ucred.h, [], [],\n[AC_INCLUDES_DEFAULT\n#include <sys/param.h>\n])\n\n# At least on IRIX, test for netinet/tcp.h will fail unless\n# netinet/in.h is included first.\nAC_CHECK_HEADERS(netinet/tcp.h, [], [],\n[AC_INCLUDES_DEFAULT\n#include <netinet/in.h>\n])\n\nif expr x\"$pgac_cv_check_readline\" : 'x-lreadline' >/dev/null ; then\n  AC_CHECK_HEADERS(readline/readline.h, [],\n        [AC_CHECK_HEADERS(readline.h, [],\n                [AC_MSG_ERROR([readline header not found\nIf you have readline already installed, see config.log for details on the\nfailure.  It is possible the compiler isn't looking in the proper directory.\nUse --without-readline to disable readline support.])])])\n  AC_CHECK_HEADERS(readline/history.h, [],\n        [AC_CHECK_HEADERS(history.h, [],\n                [AC_MSG_ERROR([history header not found\nIf you have readline already installed, see config.log for details on the\nfailure.  It is possible the compiler isn't looking in the proper directory.\nUse --without-readline to disable readline support.])])])\nfi\n\nif expr x\"$pgac_cv_check_readline\" : 'x-ledit' >/dev/null ; then\n# Some installations of libedit usurp /usr/include/readline/, which seems\n# bad practice, since in combined installations readline will have its headers\n# there.  We might have to resort to AC_EGREP checks to make sure we found\n# the proper header...\n  AC_CHECK_HEADERS(editline/readline.h, [],\n        [AC_CHECK_HEADERS(readline.h, [],\n                [AC_CHECK_HEADERS(readline/readline.h, [],\n                        [AC_MSG_ERROR([readline header not found\nIf you have libedit already installed, see config.log for details on the\nfailure.  It is possible the compiler isn't looking in the proper directory.\nUse --without-readline to disable libedit support.])])])])\n# Note: in a libedit installation, history.h is sometimes a dummy, and may\n# not be there at all.  Hence, don't complain if not found.  We must check\n# though, since in yet other versions it is an independent header.\n  AC_CHECK_HEADERS(editline/history.h, [],\n        [AC_CHECK_HEADERS(history.h, [],\n                [AC_CHECK_HEADERS(readline/history.h)])])\nfi\n\nif test \"$with_zlib\" = yes; then\n  AC_CHECK_HEADER(zlib.h, [], [AC_MSG_ERROR([zlib header not found\nIf you have zlib already installed, see config.log for details on the\nfailure.  It is possible the compiler isn't looking in the proper directory.\nUse --without-zlib to disable zlib support.])])\nfi\n\nif test \"$with_gssapi\" = yes ; then\n  AC_CHECK_HEADERS(gssapi/gssapi.h, [],\n\t[AC_CHECK_HEADERS(gssapi.h, [], [AC_MSG_ERROR([gssapi.h header file is required for GSSAPI])])])\nfi\n\nif test \"$with_openssl\" = yes ; then\n  AC_CHECK_HEADER(openssl/ssl.h, [], [AC_MSG_ERROR([header file <openssl/ssl.h> is required for OpenSSL])])\n  AC_CHECK_HEADER(openssl/err.h, [], [AC_MSG_ERROR([header file <openssl/err.h> is required for OpenSSL])])\nfi\n\nif test \"$with_pam\" = yes ; then\n  AC_CHECK_HEADERS(security/pam_appl.h, [],\n                   [AC_CHECK_HEADERS(pam/pam_appl.h, [],\n                                     [AC_MSG_ERROR([header file <security/pam_appl.h> or <pam/pam_appl.h> is required for PAM.])])])\nfi\n\nif test \"$with_bsd_auth\" = yes ; then\n  AC_CHECK_HEADER(bsd_auth.h, [], [AC_MSG_ERROR([header file <bsd_auth.h> is required for BSD Authentication support])])\nfi\n\nif test \"$with_systemd\" = yes ; then\n  AC_CHECK_HEADER(systemd/sd-daemon.h, [], [AC_MSG_ERROR([header file <systemd/sd-daemon.h> is required for systemd support])])\nfi\n\nif test \"$with_libxml\" = yes ; then\n  AC_CHECK_HEADER(libxml/parser.h, [], [AC_MSG_ERROR([header file <libxml/parser.h> is required for XML support])])\nfi\n\nif test \"$with_libxslt\" = yes ; then\n  AC_CHECK_HEADER(libxslt/xslt.h, [], [AC_MSG_ERROR([header file <libxslt/xslt.h> is required for XSLT support])])\nfi\n\nif test \"$with_ldap\" = yes ; then\n  if test \"$PORTNAME\" != \"win32\"; then\n     AC_CHECK_HEADERS(ldap.h, [],\n                      [AC_MSG_ERROR([header file <ldap.h> is required for LDAP])])\n     PGAC_LDAP_SAFE\n  else\n     AC_CHECK_HEADERS(winldap.h, [],\n                      [AC_MSG_ERROR([header file <winldap.h> is required for LDAP])],\n                      [AC_INCLUDES_DEFAULT\n#include <windows.h>\n                      ])\n  fi\nfi\n\nif test \"$with_bonjour\" = yes ; then\n  AC_CHECK_HEADER(dns_sd.h, [], [AC_MSG_ERROR([header file <dns_sd.h> is required for Bonjour])])\ndnl At some point we might add something like\ndnl AC_SEARCH_LIBS(DNSServiceRegister, dns_sd)\ndnl but right now, what that would mainly accomplish is to encourage\ndnl people to try to use the avahi implementation, which does not work.\ndnl If you want to use Apple's own Bonjour code on another platform,\ndnl just add -ldns_sd to LIBS manually.\nfi\n\n# for contrib/uuid-ossp\nif test \"$with_uuid\" = bsd ; then\n  AC_CHECK_HEADERS(uuid.h,\n    [AC_EGREP_HEADER([uuid_to_string], uuid.h, [],\n      [AC_MSG_ERROR([header file <uuid.h> does not match BSD UUID library])])],\n    [AC_MSG_ERROR([header file <uuid.h> is required for BSD UUID])])\nelif test \"$with_uuid\" = e2fs ; then\n  AC_CHECK_HEADERS(uuid/uuid.h,\n    [AC_EGREP_HEADER([uuid_generate], uuid/uuid.h, [],\n      [AC_MSG_ERROR([header file <uuid/uuid.h> does not match E2FS UUID library])])],\n    [AC_CHECK_HEADERS(uuid.h,\n      [AC_EGREP_HEADER([uuid_generate], uuid.h, [],\n        [AC_MSG_ERROR([header file <uuid.h> does not match E2FS UUID library])])],\n      [AC_MSG_ERROR([header file <uuid/uuid.h> or <uuid.h> is required for E2FS UUID])])])\nelif test \"$with_uuid\" = ossp ; then\n  AC_CHECK_HEADERS(ossp/uuid.h,\n    [AC_EGREP_HEADER([uuid_export], ossp/uuid.h, [],\n      [AC_MSG_ERROR([header file <ossp/uuid.h> does not match OSSP UUID library])])],\n    [AC_CHECK_HEADERS(uuid.h,\n      [AC_EGREP_HEADER([uuid_export], uuid.h, [],\n        [AC_MSG_ERROR([header file <uuid.h> does not match OSSP UUID library])])],\n      [AC_MSG_ERROR([header file <ossp/uuid.h> or <uuid.h> is required for OSSP UUID])])])\nfi\n\nif test \"$PORTNAME\" = \"win32\" ; then\n   AC_CHECK_HEADERS(crtdefs.h)\nfi\n\n##\n## Types, structures, compiler characteristics\n##\n\nm4_defun([AC_PROG_CC_STDC], []) dnl We don't want that.\nAC_C_BIGENDIAN\nAC_C_INLINE\nPGAC_PRINTF_ARCHETYPE\nAC_C_FLEXIBLE_ARRAY_MEMBER\nPGAC_C_SIGNED\nPGAC_C_FUNCNAME_SUPPORT\nPGAC_C_STATIC_ASSERT\nPGAC_C_TYPEOF\nPGAC_C_TYPES_COMPATIBLE\nPGAC_C_BUILTIN_BSWAP32\nPGAC_C_BUILTIN_BSWAP64\nPGAC_C_BUILTIN_CONSTANT_P\nPGAC_C_BUILTIN_UNREACHABLE\nPGAC_C_COMPUTED_GOTO\nPGAC_C_VA_ARGS\nPGAC_STRUCT_TIMEZONE\nPGAC_UNION_SEMUN\nPGAC_STRUCT_SOCKADDR_UN\nPGAC_STRUCT_SOCKADDR_STORAGE\nPGAC_STRUCT_SOCKADDR_STORAGE_MEMBERS\nPGAC_STRUCT_ADDRINFO\nAC_TYPE_INTPTR_T\nAC_TYPE_UINTPTR_T\nAC_TYPE_LONG_LONG_INT\n\nPGAC_TYPE_LOCALE_T\n\nAC_CHECK_TYPES([struct cmsgcred], [], [],\n[#include <sys/socket.h>\n#include <sys/param.h>\n#ifdef HAVE_SYS_UCRED_H\n#include <sys/ucred.h>\n#endif])\n\nAC_CHECK_TYPES([struct option], [], [],\n[#ifdef HAVE_GETOPT_H\n#include <getopt.h>\n#endif])\n\nif test \"$with_zlib\" = yes; then\n  # Check that <zlib.h> defines z_streamp (versions before about 1.0.4\n  # did not).  While we could work around the lack of z_streamp, it\n  # seems unwise to encourage people to use such old zlib versions...\n  AC_CHECK_TYPE(z_streamp, [], [AC_MSG_ERROR([zlib version is too old\nUse --without-zlib to disable zlib support.])],\n                [#include <zlib.h>])\nfi\n\n# On PPC, check if assembler supports LWARX instruction's mutex hint bit\ncase $host_cpu in\n  ppc*|powerpc*)\n    AC_MSG_CHECKING([whether assembler supports lwarx hint bit])\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],\n\t[int a = 0; int *p = &a; int r;\n\t __asm__ __volatile__ (\" lwarx %0,0,%1,1\\n\" : \"=&r\"(r) : \"r\"(p));])],\n\t[pgac_cv_have_ppc_mutex_hint=yes],\n\t[pgac_cv_have_ppc_mutex_hint=no])\n    AC_MSG_RESULT([$pgac_cv_have_ppc_mutex_hint])\n    if test x\"$pgac_cv_have_ppc_mutex_hint\" = xyes ; then\n\tAC_DEFINE(HAVE_PPC_LWARX_MUTEX_HINT, 1, [Define to 1 if the assembler supports PPC's LWARX mutex hint bit.])\n    fi\n  ;;\nesac\n\n# Check largefile support.  You might think this is a system service not a\n# compiler characteristic, but you'd be wrong.  We must check this before\n# probing existence of related functions such as fseeko, since the largefile\n# defines can affect what is generated for that.\nif test \"$PORTNAME\" != \"win32\"; then\n   AC_SYS_LARGEFILE\n   dnl Autoconf 2.69's AC_SYS_LARGEFILE believes it's a good idea to #define\n   dnl _DARWIN_USE_64_BIT_INODE, but it isn't: on macOS 10.5 that activates a\n   dnl bug that causes readdir() to sometimes return EINVAL.  On later macOS\n   dnl versions where the feature actually works, it's on by default anyway.\n   AH_VERBATIM([_DARWIN_USE_64_BIT_INODE],[])\nfi\n\n# Check for largefile support (must be after AC_SYS_LARGEFILE)\nAC_CHECK_SIZEOF([off_t])\n\n# If we don't have largefile support, can't handle segsize >= 2GB.\nif test \"$ac_cv_sizeof_off_t\" -lt 8 -a \"$segsize\" != \"1\"; then\n   AC_MSG_ERROR([Large file support is not enabled. Segment size cannot be larger than 1GB.])\nfi\n\n\n##\n## Functions, global variables\n##\n\nPGAC_VAR_INT_TIMEZONE\nAC_FUNC_ACCEPT_ARGTYPES\nPGAC_FUNC_GETTIMEOFDAY_1ARG\nPGAC_FUNC_WCSTOMBS_L\n\n# Some versions of libedit contain strlcpy(), setproctitle(), and other\n# symbols that that library has no business exposing to the world.  Pending\n# acquisition of a clue by those developers, ignore libedit (including its\n# possible alias of libreadline) while checking for everything else.\nLIBS_including_readline=\"$LIBS\"\nLIBS=`echo \"$LIBS\" | sed -e 's/-ledit//g' -e 's/-lreadline//g'`\n\nAC_CHECK_FUNCS([cbrt clock_gettime dlopen fdatasync getifaddrs getpeerucred getrlimit mbstowcs_l memmove poll posix_fallocate pstat pthread_is_threaded_np readlink setproctitle setsid shm_open symlink sync_file_range towlower utime utimes wcstombs wcstombs_l])\n\nAC_REPLACE_FUNCS(fseeko)\ncase $host_os in\n\t# NetBSD uses a custom fseeko/ftello built on fsetpos/fgetpos\n\t# Mingw uses macros to access Win32 API calls\n\tnetbsd*|mingw*)\n\t\tAC_DEFINE(HAVE_FSEEKO, 1, [Define to 1 because replacement version used.])\n\t\tac_cv_func_fseeko=yes;;\n\t*)\n\t\tAC_FUNC_FSEEKO;;\nesac\n\n# posix_fadvise() is a no-op on Solaris, so don't incur function overhead\n# by calling it, 2009-04-02\n# http://src.opensolaris.org/source/xref/onnv/onnv-gate/usr/src/lib/libc/port/gen/posix_fadvise.c\nif test \"$PORTNAME\" != \"solaris\"; then\nAC_CHECK_FUNCS(posix_fadvise)\nAC_CHECK_DECLS(posix_fadvise, [], [], [#include <fcntl.h>])\nfi\n\nAC_CHECK_DECLS(fdatasync, [], [], [#include <unistd.h>])\nAC_CHECK_DECLS([strlcat, strlcpy])\n# This is probably only present on macOS, but may as well check always\nAC_CHECK_DECLS(F_FULLFSYNC, [], [], [#include <fcntl.h>])\n\nHAVE_IPV6=no\nAC_CHECK_TYPE([struct sockaddr_in6],\n        [AC_DEFINE(HAVE_IPV6, 1, [Define to 1 if you have support for IPv6.])\n         HAVE_IPV6=yes],\n        [],\n[$ac_includes_default\n#include <netinet/in.h>])\nAC_SUBST(HAVE_IPV6)\n\nAC_CACHE_CHECK([for PS_STRINGS], [pgac_cv_var_PS_STRINGS],\n[AC_LINK_IFELSE([AC_LANG_PROGRAM(\n[#include <machine/vmparam.h>\n#include <sys/exec.h>\n],\n[PS_STRINGS->ps_nargvstr = 1;\nPS_STRINGS->ps_argvstr = \"foo\";])],\n[pgac_cv_var_PS_STRINGS=yes],\n[pgac_cv_var_PS_STRINGS=no])])\nif test \"$pgac_cv_var_PS_STRINGS\" = yes ; then\n  AC_DEFINE([HAVE_PS_STRINGS], 1, [Define to 1 if the PS_STRINGS thing exists.])\nfi\n\n\n# We use our snprintf.c emulation if either snprintf() or vsnprintf()\n# is missing.  Yes, there are machines that have only one.  We may\n# also decide to use snprintf.c if snprintf() is present but does not\n# have all the features we need --- see below.\n\nif test \"$PORTNAME\" = \"win32\"; then\n  # Win32 gets snprintf.c built unconditionally.\n  #\n  # To properly translate all NLS languages strings, we must support the\n  # *printf() %$ format, which allows *printf() arguments to be selected\n  # by position in the translated string.\n  #\n  # libintl versions < 0.13 use the native *printf() functions, and Win32\n  # *printf() doesn't understand %$, so we must use our /port versions,\n  # which do understand %$. libintl versions >= 0.13 include their own\n  # *printf versions on Win32.  The libintl 0.13 release note text is:\n  #\n  #   C format strings with positions, as they arise when a translator\n  #   needs to reorder a sentence, are now supported on all platforms.\n  #   On those few platforms (NetBSD and Woe32) for which the native\n  #   printf()/fprintf()/... functions don't support such format\n  #   strings, replacements are provided through <libintl.h>.\n  #\n  # We could use libintl >= 0.13's *printf() if we were sure that we had\n  # a litint >= 0.13 at runtime, but seeing that there is no clean way\n  # to guarantee that, it is best to just use our own, so we are sure to\n  # get %$ support. In include/port.h we disable the *printf() macros\n  # that might have been defined by libintl.\n  #\n  # We do this unconditionally whether NLS is used or not so we are sure\n  # that all Win32 libraries and binaries behave the same.\n  pgac_need_repl_snprintf=yes\nelse\n  pgac_need_repl_snprintf=no\n  AC_CHECK_FUNCS(snprintf, [], pgac_need_repl_snprintf=yes)\n  AC_CHECK_FUNCS(vsnprintf, [], pgac_need_repl_snprintf=yes)\nfi\n\n\n# Check whether <stdio.h> declares snprintf() and vsnprintf(); if not,\n# include/c.h will provide declarations.  Note this is a separate test\n# from whether the functions exist in the C library --- there are\n# systems that have the functions but don't bother to declare them :-(\n\nAC_CHECK_DECLS([snprintf, vsnprintf])\n\n\ndnl Cannot use AC_CHECK_FUNC because isinf may be a macro\nAC_CACHE_CHECK([for isinf], ac_cv_func_isinf,\n[AC_LINK_IFELSE([AC_LANG_PROGRAM([\n#include <math.h>\ndouble glob_double;\n],\n[return isinf(glob_double) ? 0 : 1;])],\n[ac_cv_func_isinf=yes],\n[ac_cv_func_isinf=no])])\n\nif test $ac_cv_func_isinf = yes ; then\n  AC_DEFINE(HAVE_ISINF, 1, [Define to 1 if you have isinf().])\nelse\n  AC_LIBOBJ(isinf)\n  # Look for a way to implement a substitute for isinf()\n  AC_CHECK_FUNCS([fpclass fp_class fp_class_d class], [break])\nfi\n\nAC_REPLACE_FUNCS([crypt fls getopt getrusage inet_aton mkdtemp random rint srandom strerror strlcat strlcpy])\n\ncase $host_os in\n\n        # Windows uses a specialised env handler\n        # and doesn't need a replacement getpeereid because it doesn't use\n        # Unix sockets.\n        mingw*)\n                AC_DEFINE(HAVE_UNSETENV, 1, [Define to 1 because replacement version used.])\n                AC_DEFINE(HAVE_GETPEEREID, 1, [Define to 1 because function not required.])\n                ac_cv_func_unsetenv=yes\n                ac_cv_func_getpeereid=yes;;\n        *)\n                AC_REPLACE_FUNCS([unsetenv getpeereid])\n\t\t;;\nesac\n\n# System's version of getaddrinfo(), if any, may be used only if we found\n# a definition for struct addrinfo; see notes in src/include/getaddrinfo.h.\n# We use only our own getaddrinfo.c on Windows, but it's time to revisit that.\nif test x\"$ac_cv_type_struct_addrinfo\" = xyes && \\\n   test \"$PORTNAME\" != \"win32\"; then\n  AC_REPLACE_FUNCS([getaddrinfo])\nelse\n  AC_LIBOBJ(getaddrinfo)\nfi\n\n# Similarly, use system's getopt_long() only if system provides struct option.\nif test x\"$ac_cv_type_struct_option\" = xyes ; then\n  AC_REPLACE_FUNCS([getopt_long])\nelse\n  AC_LIBOBJ(getopt_long)\nfi\n\n# Solaris' getopt() doesn't do what we want for long options, so always use\n# our version on that platform.\nif test \"$PORTNAME\" = \"solaris\"; then\n  AC_LIBOBJ(getopt)\nfi\n\n# mingw has adopted a GNU-centric interpretation of optind/optreset,\n# so always use our version on Windows.\nif test \"$PORTNAME\" = \"win32\"; then\n  AC_LIBOBJ(getopt)\n  AC_LIBOBJ(getopt_long)\nfi\n\n# Win32 (really MinGW) support\nif test \"$PORTNAME\" = \"win32\"; then\n  AC_REPLACE_FUNCS(gettimeofday)\n  AC_LIBOBJ(dirmod)\n  AC_LIBOBJ(kill)\n  AC_LIBOBJ(open)\n  AC_LIBOBJ(system)\n  AC_LIBOBJ(win32env)\n  AC_LIBOBJ(win32error)\n  AC_LIBOBJ(win32security)\n  AC_LIBOBJ(win32setlocale)\n  AC_DEFINE([HAVE_SYMLINK], 1,\n            [Define to 1 if you have the `symlink' function.])\n  AC_CHECK_TYPES(MINIDUMP_TYPE, [pgac_minidump_type=yes], [pgac_minidump_type=no], [\n#define WIN32_LEAN_AND_MEAN\n#include <windows.h>\n#include <string.h>\n#include <dbghelp.h>])\nfi\nif test x\"$pgac_minidump_type\" = x\"yes\" ; then\n  AC_SUBST(have_win32_dbghelp,yes)\nelse\n  AC_SUBST(have_win32_dbghelp,no)\nfi\n\n# Cygwin needs only a bit of that\nif test \"$PORTNAME\" = \"cygwin\"; then\n  AC_LIBOBJ(dirmod)\nfi\n\nAC_CHECK_DECLS([sys_siglist], [], [],\n[#include <signal.h>\n/* NetBSD declares sys_siglist in unistd.h.  */\n#ifdef HAVE_UNISTD_H\n# include <unistd.h>\n#endif\n])\n\nAC_CHECK_FUNC(syslog,\n              [AC_CHECK_HEADER(syslog.h,\n                               [AC_DEFINE(HAVE_SYSLOG, 1, [Define to 1 if you have the syslog interface.])])])\n\nAC_CACHE_CHECK([for opterr], pgac_cv_var_int_opterr,\n[AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <unistd.h>],\n  [extern int opterr; opterr = 1;])],\n  [pgac_cv_var_int_opterr=yes],\n  [pgac_cv_var_int_opterr=no])])\nif test x\"$pgac_cv_var_int_opterr\" = x\"yes\"; then\n  AC_DEFINE(HAVE_INT_OPTERR, 1, [Define to 1 if you have the global variable 'int opterr'.])\nfi\n\nAC_CACHE_CHECK([for optreset], pgac_cv_var_int_optreset,\n[AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <unistd.h>],\n  [extern int optreset; optreset = 1;])],\n  [pgac_cv_var_int_optreset=yes],\n  [pgac_cv_var_int_optreset=no])])\nif test x\"$pgac_cv_var_int_optreset\" = x\"yes\"; then\n  AC_DEFINE(HAVE_INT_OPTRESET, 1, [Define to 1 if you have the global variable 'int optreset'.])\nfi\n\nAC_CHECK_FUNCS([strtoll __strtoll strtoq], [break])\nAC_CHECK_FUNCS([strtoull __strtoull strtouq], [break])\n# strto[u]ll may exist but not be declared\nAC_CHECK_DECLS([strtoll, strtoull])\n\nif test \"$with_icu\" = yes; then\n  ac_save_CPPFLAGS=$CPPFLAGS\n  CPPFLAGS=\"$ICU_CFLAGS $CPPFLAGS\"\n\n  # Verify we have ICU's header files\n  AC_CHECK_HEADER(unicode/ucol.h, [],\n        [AC_MSG_ERROR([header file <unicode/ucol.h> is required for ICU])])\n\n  CPPFLAGS=$ac_save_CPPFLAGS\nfi\n\n# Lastly, restore full LIBS list and check for readline/libedit symbols\nLIBS=\"$LIBS_including_readline\"\n\nif test \"$with_readline\" = yes; then\n  PGAC_VAR_RL_COMPLETION_APPEND_CHARACTER\n  AC_CHECK_FUNCS([rl_completion_matches rl_filename_completion_function rl_reset_screen_size])\n  AC_CHECK_FUNCS([append_history history_truncate_file])\nfi\n\n\n# This test makes sure that run tests work at all.  Sometimes a shared\n# library is found by the linker, but the runtime linker can't find it.\n# This check should come after all modifications of compiler or linker\n# variables, and before any other run tests.\nAC_MSG_CHECKING([test program])\nAC_RUN_IFELSE([AC_LANG_SOURCE([int main() { return 0; }])],\n[AC_MSG_RESULT(ok)],\n[AC_MSG_RESULT(failed)\nAC_MSG_ERROR([[\nCould not execute a simple test program.  This may be a problem\nrelated to locating shared libraries.  Check the file 'config.log'\nfor the exact reason.]])],\n[AC_MSG_RESULT([cross-compiling])])\n\n# --------------------\n# Run tests below here\n# --------------------\n\n# Force use of our snprintf if system's doesn't do arg control\n# See comment above at snprintf test for details.\nif test \"$enable_nls\" = yes -a \"$pgac_need_repl_snprintf\" = no; then\n  PGAC_FUNC_SNPRINTF_ARG_CONTROL\n  if test $pgac_cv_snprintf_arg_control != yes ; then\n    pgac_need_repl_snprintf=yes\n  fi\nfi\n\n\ndnl Check to see if we have a working 64-bit integer type.\ndnl This breaks down into two steps:\ndnl (1) figure out if the compiler has a 64-bit int type with working\ndnl arithmetic, and if so\ndnl (2) see whether snprintf() can format the type correctly.  (Currently,\ndnl snprintf is the only library routine we really need for int8 support.)\ndnl It's entirely possible to have a compiler that handles a 64-bit type\ndnl when the C library doesn't; this is fairly likely when using gcc on\ndnl an older platform, for example.\ndnl If there is no native snprintf() or it does not handle the 64-bit type,\ndnl we force our own version of snprintf() to be used instead.\ndnl Note this test must be run after our initial check for snprintf/vsnprintf.\n\ndnl As of Postgres 8.4, we no longer support compilers without a working\ndnl 64-bit type.  But we still handle the case of snprintf being broken.\n\nPGAC_TYPE_64BIT_INT([long int])\n\nif test x\"$HAVE_LONG_INT_64\" = x\"yes\" ; then\n  pg_int64_type=\"long int\"\nelse\n  PGAC_TYPE_64BIT_INT([long long int])\n  if test x\"$HAVE_LONG_LONG_INT_64\" = x\"yes\" ; then\n    pg_int64_type=\"long long int\"\n  else\n    AC_MSG_ERROR([Cannot find a working 64-bit integer type.])\n  fi\nfi\n\nAC_DEFINE_UNQUOTED(PG_INT64_TYPE, $pg_int64_type,\n  [Define to the name of a signed 64-bit integer type.])\n\n# If we found \"long int\" is 64 bits, assume snprintf handles it.  If\n# we found we need to use \"long long int\", better check.  We cope with\n# snprintfs that use %lld, %qd, or %I64d as the format.  If none of these\n# work, fall back to our own snprintf emulation (which we know uses %lld).\n\nif test \"$HAVE_LONG_LONG_INT_64\" = yes ; then\n  if test $pgac_need_repl_snprintf = no; then\n    PGAC_FUNC_SNPRINTF_LONG_LONG_INT_MODIFIER\n    if test \"$LONG_LONG_INT_MODIFIER\" = \"\"; then\n      # Force usage of our own snprintf, since system snprintf is broken\n      pgac_need_repl_snprintf=yes\n      LONG_LONG_INT_MODIFIER='ll'\n    fi\n  else\n    # Here if we previously decided we needed to use our own snprintf\n    LONG_LONG_INT_MODIFIER='ll'\n  fi\nelse\n  # Here if we are not using 'long long int' at all\n  LONG_LONG_INT_MODIFIER='l'\nfi\n\nINT64_MODIFIER=\"\\\"$LONG_LONG_INT_MODIFIER\\\"\"\n\nAC_DEFINE_UNQUOTED(INT64_MODIFIER, $INT64_MODIFIER,\n                   [Define to the appropriate snprintf length modifier for 64-bit ints.])\n\n# Also force use of our snprintf if the system's doesn't support the %z flag.\nif test \"$pgac_need_repl_snprintf\" = no; then\n  PGAC_FUNC_SNPRINTF_SIZE_T_SUPPORT\n  if test \"$pgac_cv_snprintf_size_t_support\" != yes; then\n    pgac_need_repl_snprintf=yes\n  fi\nfi\n\n# Now we have checked all the reasons to replace snprintf\nif test $pgac_need_repl_snprintf = yes; then\n  AC_DEFINE(USE_REPL_SNPRINTF, 1, [Use replacement snprintf() functions.])\n  AC_LIBOBJ(snprintf)\nfi\n\n# Check size of void *, size_t (enables tweaks for > 32bit address space)\nAC_CHECK_SIZEOF([void *])\nAC_CHECK_SIZEOF([size_t])\nAC_CHECK_SIZEOF([long])\n\n# Decide whether float4 is passed by value: user-selectable, enabled by default\nAC_MSG_CHECKING([whether to build with float4 passed by value])\nPGAC_ARG_BOOL(enable, float4-byval, yes, [disable float4 passed by value],\n              [AC_DEFINE([USE_FLOAT4_BYVAL], 1,\n                         [Define to 1 if you want float4 values to be passed by value. (--enable-float4-byval)])\n               float4passbyval=true],\n              [float4passbyval=false])\nAC_MSG_RESULT([$enable_float4_byval])\nAC_DEFINE_UNQUOTED([FLOAT4PASSBYVAL], [$float4passbyval], [float4 values are passed by value if 'true', by reference if 'false'])\n\n# Decide whether float8 is passed by value.\n# Note: this setting also controls int8 and related types such as timestamp.\n# If sizeof(Datum) >= 8, this is user-selectable, enabled by default.\n# If not, trying to select it is an error.\nAC_MSG_CHECKING([whether to build with float8 passed by value])\nif test $ac_cv_sizeof_void_p -ge 8 ; then\n  PGAC_ARG_BOOL(enable, float8-byval, yes, [disable float8 passed by value])\nelse\n  PGAC_ARG_BOOL(enable, float8-byval, no, [disable float8 passed by value])\n  if test \"$enable_float8_byval\" = yes ; then\n    AC_MSG_ERROR([--enable-float8-byval is not supported on 32-bit platforms.])\n  fi\nfi\nif test \"$enable_float8_byval\" = yes ; then\n  AC_DEFINE([USE_FLOAT8_BYVAL], 1,\n            [Define to 1 if you want float8, int8, etc values to be passed by value. (--enable-float8-byval)])\n  float8passbyval=true\nelse\n  float8passbyval=false\nfi\nAC_MSG_RESULT([$enable_float8_byval])\nAC_DEFINE_UNQUOTED([FLOAT8PASSBYVAL], [$float8passbyval], [float8, int8, and related values are passed by value if 'true', by reference if 'false'])\n\n# Determine memory alignment requirements for the basic C data types.\n\nAC_CHECK_ALIGNOF(short)\nAC_CHECK_ALIGNOF(int)\nAC_CHECK_ALIGNOF(long)\nif test x\"$HAVE_LONG_LONG_INT_64\" = x\"yes\" ; then\n  AC_CHECK_ALIGNOF(long long int)\nfi\nAC_CHECK_ALIGNOF(double)\n\n# Compute maximum alignment of any basic type.\n# We assume long's alignment is at least as strong as char, short, or int;\n# but we must check long long (if it is being used for int64) and double.\n# Note that we intentionally do not consider any types wider than 64 bits,\n# as allowing MAXIMUM_ALIGNOF to exceed 8 would be too much of a penalty\n# for disk and memory space.\n\nMAX_ALIGNOF=$ac_cv_alignof_long\nif test $MAX_ALIGNOF -lt $ac_cv_alignof_double ; then\n  MAX_ALIGNOF=$ac_cv_alignof_double\nfi\nif test x\"$HAVE_LONG_LONG_INT_64\" = xyes && test $MAX_ALIGNOF -lt $ac_cv_alignof_long_long_int ; then\n  MAX_ALIGNOF=\"$ac_cv_alignof_long_long_int\"\nfi\nAC_DEFINE_UNQUOTED(MAXIMUM_ALIGNOF, $MAX_ALIGNOF, [Define as the maximum alignment requirement of any C data type.])\n\n\n# Some platforms predefine the types int8, int16, etc.  Only check\n# a (hopefully) representative subset.\nAC_CHECK_TYPES([int8, uint8, int64, uint64], [], [],\n[#include <stdio.h>])\n\n# Some compilers offer a 128-bit integer scalar type.\nPGAC_TYPE_128BIT_INT\n\n# Check for various atomic operations now that we have checked how to declare\n# 64bit integers.\nPGAC_HAVE_GCC__SYNC_CHAR_TAS\nPGAC_HAVE_GCC__SYNC_INT32_TAS\nPGAC_HAVE_GCC__SYNC_INT32_CAS\nPGAC_HAVE_GCC__SYNC_INT64_CAS\nPGAC_HAVE_GCC__ATOMIC_INT32_CAS\nPGAC_HAVE_GCC__ATOMIC_INT64_CAS\n\n\n# Check for x86 cpuid instruction\nAC_CACHE_CHECK([for __get_cpuid], [pgac_cv__get_cpuid],\n[AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <cpuid.h>],\n  [[unsigned int exx[4] = {0, 0, 0, 0};\n  __get_cpuid(1, &exx[0], &exx[1], &exx[2], &exx[3]);\n  ]])],\n  [pgac_cv__get_cpuid=\"yes\"],\n  [pgac_cv__get_cpuid=\"no\"])])\nif test x\"$pgac_cv__get_cpuid\" = x\"yes\"; then\n  AC_DEFINE(HAVE__GET_CPUID, 1, [Define to 1 if you have __get_cpuid.])\nfi\n\nAC_CACHE_CHECK([for __cpuid], [pgac_cv__cpuid],\n[AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <intrin.h>],\n  [[unsigned int exx[4] = {0, 0, 0, 0};\n  __get_cpuid(exx[0], 1);\n  ]])],\n  [pgac_cv__cpuid=\"yes\"],\n  [pgac_cv__cpuid=\"no\"])])\nif test x\"$pgac_cv__cpuid\" = x\"yes\"; then\n  AC_DEFINE(HAVE__CPUID, 1, [Define to 1 if you have __cpuid.])\nfi\n\n# Check for Intel SSE 4.2 intrinsics to do CRC calculations.\n#\n# First check if the _mm_crc32_u8 and _mm_crc32_u64 intrinsics can be used\n# with the default compiler flags. If not, check if adding the -msse4.2\n# flag helps. CFLAGS_SSE42 is set to -msse4.2 if that's required.\nPGAC_SSE42_CRC32_INTRINSICS([])\nif test x\"$pgac_sse42_crc32_intrinsics\" != x\"yes\"; then\n  PGAC_SSE42_CRC32_INTRINSICS([-msse4.2])\nfi\nAC_SUBST(CFLAGS_SSE42)\n\n# Are we targeting a processor that supports SSE 4.2? gcc, clang and icc all\n# define __SSE4_2__ in that case.\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([], [\n#ifndef __SSE4_2__\n#error __SSE4_2__ not defined\n#endif\n])], [SSE4_2_TARGETED=1])\n\n# Select CRC-32C implementation.\n#\n# If we are targeting a processor that has SSE 4.2 instructions, we can use the\n# special CRC instructions for calculating CRC-32C. If we're not targeting such\n# a processor, but we can nevertheless produce code that uses the SSE\n# intrinsics, perhaps with some extra CFLAGS, compile both implementations and\n# select which one to use at runtime, depending on whether SSE 4.2 is supported\n# by the processor we're running on.\n#\n# You can override this logic by setting the appropriate USE_*_CRC32 flag to 1\n# in the template or configure command line.\nif test x\"$USE_SSE42_CRC32C\" = x\"\" && test x\"$USE_SSE42_CRC32C_WITH_RUNTIME_CHECK\" = x\"\" && test x\"$USE_SLICING_BY_8_CRC32C\" = x\"\"; then\n  if test x\"$pgac_sse42_crc32_intrinsics\" = x\"yes\" && test x\"$SSE4_2_TARGETED\" = x\"1\" ; then\n    USE_SSE42_CRC32C=1\n  else\n    # the CPUID instruction is needed for the runtime check.\n    if test x\"$pgac_sse42_crc32_intrinsics\" = x\"yes\" && (test x\"$pgac_cv__get_cpuid\" = x\"yes\" || test x\"$pgac_cv__cpuid\" = x\"yes\"); then\n      USE_SSE42_CRC32C_WITH_RUNTIME_CHECK=1\n    else\n      # fall back to slicing-by-8 algorithm which doesn't require any special\n      # CPU support.\n      USE_SLICING_BY_8_CRC32C=1\n    fi\n  fi\nfi\n\n# Set PG_CRC32C_OBJS appropriately depending on the selected implementation.\nAC_MSG_CHECKING([which CRC-32C implementation to use])\nif test x\"$USE_SSE42_CRC32C\" = x\"1\"; then\n  AC_DEFINE(USE_SSE42_CRC32C, 1, [Define to 1 use Intel SSE 4.2 CRC instructions.])\n  PG_CRC32C_OBJS=\"pg_crc32c_sse42.o\"\n  AC_MSG_RESULT(SSE 4.2)\nelse\n  if test x\"$USE_SSE42_CRC32C_WITH_RUNTIME_CHECK\" = x\"1\"; then\n    AC_DEFINE(USE_SSE42_CRC32C_WITH_RUNTIME_CHECK, 1, [Define to 1 to use Intel SSE 4.2 CRC instructions with a runtime check.])\n    PG_CRC32C_OBJS=\"pg_crc32c_sse42.o pg_crc32c_sb8.o pg_crc32c_choose.o\"\n    AC_MSG_RESULT(SSE 4.2 with runtime check)\n  else\n    AC_DEFINE(USE_SLICING_BY_8_CRC32C, 1, [Define to 1 to use software CRC-32C implementation (slicing-by-8).])\n    PG_CRC32C_OBJS=\"pg_crc32c_sb8.o\"\n    AC_MSG_RESULT(slicing-by-8)\n  fi\nfi\nAC_SUBST(PG_CRC32C_OBJS)\n\n\n# Select semaphore implementation type.\nif test \"$PORTNAME\" != \"win32\"; then\n  if test x\"$PREFERRED_SEMAPHORES\" = x\"NAMED_POSIX\" ; then\n    # Need sem_open for this\n    AC_SEARCH_LIBS(sem_open, [rt pthread], [USE_NAMED_POSIX_SEMAPHORES=1])\n  fi\n  if test x\"$PREFERRED_SEMAPHORES\" = x\"UNNAMED_POSIX\" ; then\n    # Need sem_init for this\n    AC_SEARCH_LIBS(sem_init, [rt pthread], [USE_UNNAMED_POSIX_SEMAPHORES=1])\n  fi\n  AC_MSG_CHECKING([which semaphore API to use])\n  if test x\"$USE_NAMED_POSIX_SEMAPHORES\" = x\"1\" ; then\n    AC_DEFINE(USE_NAMED_POSIX_SEMAPHORES, 1, [Define to select named POSIX semaphores.])\n    SEMA_IMPLEMENTATION=\"src/backend/port/posix_sema.c\"\n    sematype=\"named POSIX\"\n  else\n    if test x\"$USE_UNNAMED_POSIX_SEMAPHORES\" = x\"1\" ; then\n      AC_DEFINE(USE_UNNAMED_POSIX_SEMAPHORES, 1, [Define to select unnamed POSIX semaphores.])\n      SEMA_IMPLEMENTATION=\"src/backend/port/posix_sema.c\"\n      sematype=\"unnamed POSIX\"\n    else\n      AC_DEFINE(USE_SYSV_SEMAPHORES, 1, [Define to select SysV-style semaphores.])\n      SEMA_IMPLEMENTATION=\"src/backend/port/sysv_sema.c\"\n      sematype=\"System V\"\n    fi\n  fi\n  AC_MSG_RESULT([$sematype])\nelse\n  AC_DEFINE(USE_WIN32_SEMAPHORES, 1, [Define to select Win32-style semaphores.])\n  SEMA_IMPLEMENTATION=\"src/backend/port/win32_sema.c\"\nfi\n\n\n# Select shared-memory implementation type.\nif test \"$PORTNAME\" != \"win32\"; then\n  AC_DEFINE(USE_SYSV_SHARED_MEMORY, 1, [Define to select SysV-style shared memory.])\n  SHMEM_IMPLEMENTATION=\"src/backend/port/sysv_shmem.c\"\nelse\n  AC_DEFINE(USE_WIN32_SHARED_MEMORY, 1, [Define to select Win32-style shared memory.])\n  SHMEM_IMPLEMENTATION=\"src/backend/port/win32_shmem.c\"\nfi\n\n# Select random number source\n#\n# You can override this logic by setting the appropriate USE_*RANDOM flag to 1\n# in the template or configure command line.\n\n# If not selected manually, try to select a source automatically.\nif test \"$enable_strong_random\" = \"yes\" && test x\"$USE_OPENSSL_RANDOM\" = x\"\" && test x\"$USE_WIN32_RANDOM\" = x\"\" && test x\"$USE_DEV_URANDOM\" = x\"\" ; then\n  if test x\"$with_openssl\" = x\"yes\" ; then\n    USE_OPENSSL_RANDOM=1\n  elif test \"$PORTNAME\" = \"win32\" ; then\n    USE_WIN32_RANDOM=1\n  else\n    AC_CHECK_FILE([/dev/urandom], [], [])\n\n    if test x\"$ac_cv_file__dev_urandom\" = x\"yes\" ; then\n      USE_DEV_URANDOM=1\n    fi\n  fi\nfi\n\nAC_MSG_CHECKING([which random number source to use])\nif test \"$enable_strong_random\" = yes ; then\n  if test x\"$USE_OPENSSL_RANDOM\" = x\"1\" ; then\n    AC_DEFINE(USE_OPENSSL_RANDOM, 1, [Define to use OpenSSL for random number generation])\n    AC_MSG_RESULT([OpenSSL])\n  elif test x\"$USE_WIN32_RANDOM\" = x\"1\" ; then\n    AC_DEFINE(USE_WIN32_RANDOM, 1, [Define to use native Windows API for random number generation])\n    AC_MSG_RESULT([Windows native])\n  elif test x\"$USE_DEV_URANDOM\" = x\"1\" ; then\n    AC_DEFINE(USE_DEV_URANDOM, 1, [Define to use /dev/urandom for random number generation])\n    AC_MSG_RESULT([/dev/urandom])\n  else\n    AC_MSG_ERROR([\nno source of strong random numbers was found\nPostgreSQL can use OpenSSL or /dev/urandom as a source of random numbers,\nfor authentication protocols. You can use --disable-strong-random to use a\nbuilt-in pseudo random number generator, but that may be insecure.])\n  fi\n  AC_DEFINE(HAVE_STRONG_RANDOM, 1, [Define to use have a strong random number source])\nelse\n    AC_MSG_RESULT([weak builtin PRNG])\n    AC_MSG_WARN([\n*** Not using a strong random number source may be insecure.])\nfi\n\n# If not set in template file, set bytes to use libc memset()\nif test x\"$MEMSET_LOOP_LIMIT\" = x\"\" ; then\n  MEMSET_LOOP_LIMIT=1024\nfi\nAC_DEFINE_UNQUOTED(MEMSET_LOOP_LIMIT, ${MEMSET_LOOP_LIMIT}, [Define bytes to use libc memset().])\n\n\nif test \"$enable_nls\" = yes ; then\n  PGAC_CHECK_GETTEXT\nfi\n\n# Check for Tcl configuration script tclConfig.sh\nif test \"$with_tcl\" = yes; then\n    PGAC_PATH_TCLCONFIGSH([$with_tclconfig])\n    PGAC_EVAL_TCLCONFIGSH([$TCL_CONFIG_SH],\n                          [TCL_INCLUDE_SPEC,TCL_LIBS,TCL_LIB_SPEC,TCL_SHARED_BUILD])\n    AC_SUBST(TCL_SHLIB_LD_LIBS)dnl don't want to double-evaluate that one\n    if test \"$TCL_SHARED_BUILD\" != 1; then\n      AC_MSG_ERROR([cannot build PL/Tcl because Tcl is not a shared library\nUse --without-tcl to disable building PL/Tcl.])\n    fi\n    # now that we have TCL_INCLUDE_SPEC, we can check for <tcl.h>\n    ac_save_CPPFLAGS=$CPPFLAGS\n    CPPFLAGS=\"$TCL_INCLUDE_SPEC $CPPFLAGS\"\n    AC_CHECK_HEADER(tcl.h, [], [AC_MSG_ERROR([header file <tcl.h> is required for Tcl])])\n    CPPFLAGS=$ac_save_CPPFLAGS\nfi\n\n# check for <perl.h>\nif test \"$with_perl\" = yes; then\n  ac_save_CPPFLAGS=$CPPFLAGS\n  CPPFLAGS=\"$CPPFLAGS $perl_includespec\"\n  AC_CHECK_HEADER(perl.h, [], [AC_MSG_ERROR([header file <perl.h> is required for Perl])],\n                  [#include <EXTERN.h>])\n  # While we're at it, check that we can link to libperl.\n  # On most platforms, if perl.h is there then libperl.so will be too, but at\n  # this writing Debian packages them separately.  There is no known reason to\n  # waste cycles on separate probes for the Tcl or Python libraries, though.\n  pgac_save_LIBS=$LIBS\n  LIBS=\"$perl_embed_ldflags\"\n  AC_MSG_CHECKING([for libperl])\n  AC_LINK_IFELSE([AC_LANG_PROGRAM([\n#include <EXTERN.h>\n#include <perl.h>\n],  [perl_alloc();])],\n    [AC_MSG_RESULT(yes)],\n    [AC_MSG_RESULT(no)\n     AC_MSG_ERROR([libperl library is required for Perl])])\n  LIBS=$pgac_save_LIBS\n  CPPFLAGS=$ac_save_CPPFLAGS\nfi\n\n# check for <Python.h>\nif test \"$with_python\" = yes; then\n  ac_save_CPPFLAGS=$CPPFLAGS\n  CPPFLAGS=\"$python_includespec $CPPFLAGS\"\n  AC_CHECK_HEADER(Python.h, [], [AC_MSG_ERROR([header file <Python.h> is required for Python])])\n  CPPFLAGS=$ac_save_CPPFLAGS\nfi\n\n#\n# Check for DocBook and tools\n#\nPGAC_PROG_NSGMLS\nPGAC_CHECK_DOCBOOK(4.2)\nPGAC_PATH_PROGS(DBTOEPUB, dbtoepub)\nPGAC_PATH_PROGS(XMLLINT, xmllint)\nPGAC_PATH_PROGS(XSLTPROC, xsltproc)\nPGAC_PATH_PROGS(OSX, [osx sgml2xml sx])\nPGAC_PATH_PROGS(FOP, fop)\n\n#\n# Check for test tools\n#\nif test \"$enable_tap_tests\" = yes; then\n  # Check for necessary modules, unless user has specified the \"prove\" to use;\n  # in that case it's her responsibility to have a working configuration.\n  # (prove might be part of a different Perl installation than perl, eg on\n  # MSys, so the result of AX_PROG_PERL_MODULES could be irrelevant anyway.)\n  if test -z \"$PROVE\"; then\n    AX_PROG_PERL_MODULES(IPC::Run, ,\n      AC_MSG_ERROR([Perl module IPC::Run is required to run TAP tests]))\n  fi\n  # Now make sure we know where prove is\n  PGAC_PATH_PROGS(PROVE, prove)\n  if test -z \"$PROVE\"; then\n    AC_MSG_ERROR([prove not found])\n  fi\nfi\n\n# Thread testing\n\n# We have to run the thread test near the end so we have all our symbols\n# defined.  Cross compiling throws a warning.\n#\nif test \"$enable_thread_safety\" = yes; then\nif test \"$PORTNAME\" != \"win32\"\nthen\nAC_MSG_CHECKING([thread safety of required library functions])\n\n_CFLAGS=\"$CFLAGS\"\n_LIBS=\"$LIBS\"\nCFLAGS=\"$CFLAGS $PTHREAD_CFLAGS -DIN_CONFIGURE\"\nLIBS=\"$LIBS $PTHREAD_LIBS\"\nAC_RUN_IFELSE(\n  [AC_LANG_SOURCE([[#include \"$srcdir/src/test/thread/thread_test.c\"]])],\n  [AC_MSG_RESULT(yes)],\n  [AC_MSG_RESULT(no)\n  AC_MSG_ERROR([thread test program failed\nThis platform is not thread-safe.  Check the file 'config.log' or compile\nand run src/test/thread/thread_test for the exact reason.\nUse --disable-thread-safety to disable thread safety.])],\n  [AC_MSG_RESULT(maybe)\n  AC_MSG_WARN([\n*** Skipping thread test program because of cross-compile build.\n*** Run the program in src/test/thread on the target machine.\n])])\nCFLAGS=\"$_CFLAGS\"\nLIBS=\"$_LIBS\"\nelse\nAC_MSG_WARN([*** skipping thread test on Win32])\nfi\nfi\n\n# If compiler will take -Wl,--as-needed (or various platform-specific\n# spellings thereof) then add that to LDFLAGS.  This is much easier than\n# trying to filter LIBS to the minimum for each executable.\n# On (at least) some Red-Hat-derived systems, this switch breaks linking to\n# libreadline; therefore we postpone testing it until we know what library\n# dependencies readline has.  The test code will try to link with $LIBS.\nif test \"$with_readline\" = yes; then\n  link_test_func=readline\nelse\n  link_test_func=exit\nfi\n\nif test \"$PORTNAME\" = \"darwin\"; then\n  PGAC_PROG_CC_LDFLAGS_OPT([-Wl,-dead_strip_dylibs], $link_test_func)\nelif test \"$PORTNAME\" = \"openbsd\"; then\n  PGAC_PROG_CC_LDFLAGS_OPT([-Wl,-Bdynamic], $link_test_func)\nelse\n  PGAC_PROG_CC_LDFLAGS_OPT([-Wl,--as-needed], $link_test_func)\nfi\n\n# Create compiler version string\nif test x\"$GCC\" = x\"yes\" ; then\n  cc_string=`${CC} --version | sed q`\n  case $cc_string in [[A-Za-z]]*) ;; *) cc_string=\"GCC $cc_string\";; esac\nelif test x\"$SUN_STUDIO_CC\" = x\"yes\" ; then\n  cc_string=`${CC} -V 2>&1 | sed q`\nelse\n  cc_string=$CC\nfi\n\nAC_DEFINE_UNQUOTED(PG_VERSION_STR,\n                   [\"PostgreSQL $PG_VERSION on $host, compiled by $cc_string, `expr $ac_cv_sizeof_void_p \\* 8`-bit\"],\n                   [A string containing the version number, platform, and C compiler])\n\n# Supply a numeric version string for use by 3rd party add-ons\n# awk -F is a regex on some platforms, and not on others, so make \".\" a tab\n[PG_VERSION_NUM=\"`echo \"$PACKAGE_VERSION\" | sed 's/[A-Za-z].*$//' |\ntr '.' '\t' |\n$AWK '{printf \"%d%04d\", $1, $2}'`\"]\nAC_DEFINE_UNQUOTED(PG_VERSION_NUM, $PG_VERSION_NUM, [PostgreSQL version as a number])\nAC_SUBST(PG_VERSION_NUM)\n\n# If we are inserting PG_SYSROOT into CPPFLAGS, do so symbolically not\n# literally, so that it's possible to override it at build time using\n# a command like \"make ... PG_SYSROOT=path\".  This has to be done after\n# we've finished all configure checks that depend on CPPFLAGS.\nif test x\"$PG_SYSROOT\" != x; then\n  CPPFLAGS=`echo \"$CPPFLAGS\" | sed -e \"s| $PG_SYSROOT | \\\\\\$(PG_SYSROOT) |\"`\nfi\nAC_SUBST(PG_SYSROOT)\n\n\n# Begin output steps\n\nAC_MSG_NOTICE([using compiler=$cc_string])\nAC_MSG_NOTICE([using CFLAGS=$CFLAGS])\nAC_MSG_NOTICE([using CPPFLAGS=$CPPFLAGS])\nAC_MSG_NOTICE([using LDFLAGS=$LDFLAGS])\n\n# prepare build tree if outside source tree\n# Note 1: test -ef might not exist, but it's more reliable than `pwd`.\n# Note 2: /bin/pwd might be better than shell's built-in at getting\n#         a symlink-free name.\nif ( test \"$srcdir\" -ef . ) >/dev/null 2>&1 || test \"`cd $srcdir && /bin/pwd`\" = \"`/bin/pwd`\"; then\n  vpath_build=no\nelse\n  vpath_build=yes\n  if test \"$no_create\" != yes; then\n    _AS_ECHO_N([preparing build tree... ])\n    pgac_abs_top_srcdir=`cd \"$srcdir\" && pwd`\n    $SHELL \"$ac_aux_dir/prep_buildtree\" \"$pgac_abs_top_srcdir\" \".\" \\\n      || AC_MSG_ERROR(failed)\n    AC_MSG_RESULT(done)\n  fi\nfi\nAC_SUBST(vpath_build)\n\n\nAC_CONFIG_FILES([GNUmakefile src/Makefile.global])\n\nAC_CONFIG_LINKS([\n  src/backend/port/dynloader.c:src/backend/port/dynloader/${template}.c\n  src/backend/port/pg_sema.c:${SEMA_IMPLEMENTATION}\n  src/backend/port/pg_shmem.c:${SHMEM_IMPLEMENTATION}\n  src/include/dynloader.h:src/backend/port/dynloader/${template}.h\n  src/include/pg_config_os.h:src/include/port/${template}.h\n  src/Makefile.port:src/makefiles/Makefile.${template}\n])\n\nif test \"$PORTNAME\" = \"win32\"; then\nAC_CONFIG_COMMANDS([check_win32_symlinks],[\n# Links sometimes fail undetected on Mingw -\n# so here we detect it and warn the user\nfor FILE in $CONFIG_LINKS\n do\n\t# test -e works for symlinks in the MinGW console\n\ttest -e `expr \"$FILE\" : '\\([[^:]]*\\)'` || AC_MSG_WARN([*** link for $FILE -- please fix by hand])\n done\n])\nfi\n\nAC_CONFIG_HEADERS([src/include/pg_config.h],\n[\n# Update timestamp for pg_config.h (see Makefile.global)\necho >src/include/stamp-h\n])\n\nAC_CONFIG_HEADERS([src/include/pg_config_ext.h],\n[\n# Update timestamp for pg_config_ext.h (see Makefile.global)\necho >src/include/stamp-ext-h\n])\n\nAC_CONFIG_HEADERS([src/interfaces/ecpg/include/ecpg_config.h],\n                  [echo >src/interfaces/ecpg/include/stamp-h])\n\nAC_OUTPUT\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/include/pg_config.h.win32": "/* src/include/pg_config.h.  Generated by configure.  */\n/* src/include/pg_config.h.in.  Generated from configure.in by autoheader.  */\n\n/* This file is generated from MingW ./configure, and with the following\n * changes to be valid for Visual C++ (and compatible):\n *\n * HAVE_CBRT, HAVE_FUNCNAME_FUNC, HAVE_GETOPT, HAVE_GETOPT_H, HAVE_INTTYPES_H,\n * HAVE_GETOPT_LONG, HAVE_LOCALE_T, HAVE_RINT, HAVE_STRINGS_H, HAVE_STRTOLL,\n * HAVE_STRTOULL, HAVE_STRUCT_OPTION, ENABLE_THREAD_SAFETY,\n * inline, USE_SSE42_CRC32C_WITH_RUNTIME_CHECK\n */\n\n/* Define to the type of arg 1 of 'accept' */\n#define ACCEPT_TYPE_ARG1 unsigned int\n\n/* Define to the type of arg 2 of 'accept' */\n#define ACCEPT_TYPE_ARG2 struct sockaddr *\n\n/* Define to the type of arg 3 of 'accept' */\n#define ACCEPT_TYPE_ARG3 int\n\n/* Define to the return type of 'accept' */\n#define ACCEPT_TYPE_RETURN unsigned int PASCAL\n\n/* The alignment requirement of a `double'. */\n#define ALIGNOF_DOUBLE 8\n\n/* The alignment requirement of a `int'. */\n#define ALIGNOF_INT 4\n\n/* The alignment requirement of a `long'. */\n#define ALIGNOF_LONG 4\n\n/* The alignment requirement of a `long long int'. */\n#define ALIGNOF_LONG_LONG_INT 8\n\n/* The normal alignment of `PG_INT128_TYPE', in bytes. */\n#undef ALIGNOF_PG_INT128_TYPE\n\n/* The alignment requirement of a `short'. */\n#define ALIGNOF_SHORT 2\n\n/* Define to the default TCP port number on which the server listens and to\n   which clients will try to connect. This can be overridden at run-time, but\n   it's convenient if your clients have the right default compiled in.\n   (--with-pgport=PORTNUM) */\n#define DEF_PGPORT 5432\n\n/* Define to the default TCP port number as a string constant. */\n#define DEF_PGPORT_STR \"5432\"\n\n/* Define to nothing if C supports flexible array members, and to 1 if it does\n   not. That way, with a declaration like `struct s { int n; double\n   d[FLEXIBLE_ARRAY_MEMBER]; };', the struct hack can be used with pre-C99\n   compilers. When computing the size of such an object, don't use 'sizeof\n   (struct s)' as it overestimates the size. Use 'offsetof (struct s, d)'\n   instead. Don't use 'offsetof (struct s, d[0])', as this doesn't work with\n   MSVC and with C++ compilers. */\n#define FLEXIBLE_ARRAY_MEMBER\n\n/* Define to 1 if you want National Language Support. (--enable-nls) */\n/* #undef ENABLE_NLS */\n\n/* Define to 1 to build client libraries as thread-safe code.\n   (--enable-thread-safety) */\n#define ENABLE_THREAD_SAFETY 1\n\n/* Define to 1 if gettimeofday() takes only 1 argument. */\n/* #undef GETTIMEOFDAY_1ARG */\n\n#ifdef GETTIMEOFDAY_1ARG\n# define gettimeofday(a,b) gettimeofday(a)\n#endif\n\n/* Define to 1 if you have the `cbrt' function. */\n//#define HAVE_CBRT 1\n\n/* Define to 1 if you have the `class' function. */\n/* #undef HAVE_CLASS */\n\n/* Define to 1 if you have the `clock_gettime' function. */\n/* #undef HAVE_CLOCK_GETTIME */\n\n/* Define to 1 if your compiler handles computed gotos. */\n/* #undef HAVE_COMPUTED_GOTO */\n\n/* Define to 1 if you have the `crypt' function. */\n/* #undef HAVE_CRYPT */\n\n/* Define to 1 if you have the <crypt.h> header file. */\n/* #undef HAVE_CRYPT_H */\n\n/* Define to 1 if you have the declaration of `fdatasync', and to 0 if you\n   don't. */\n#define HAVE_DECL_FDATASYNC 0\n\n/* Define to 1 if you have the declaration of `F_FULLFSYNC', and to 0 if you\n   don't. */\n#define HAVE_DECL_F_FULLFSYNC 0\n\n/* Define to 1 if you have the declaration of `snprintf', and to 0 if you\n   don't. */\n#define HAVE_DECL_SNPRINTF 1\n\n/* Define to 1 if you have the declaration of `strtoll', and to 0 if you\n   don't. */\n#define HAVE_DECL_STRTOLL 1\n\n/* Define to 1 if you have the declaration of `strtoull', and to 0 if you\n   don't. */\n#define HAVE_DECL_STRTOULL 1\n\n/* Define to 1 if you have the declaration of `vsnprintf', and to 0 if you\n   don't. */\n#define HAVE_DECL_VSNPRINTF 1\n\n/* Define to 1 if you have the <dld.h> header file. */\n/* #undef HAVE_DLD_H */\n\n/* Define to 1 if you have the `dlopen' function. */\n/* #undef HAVE_DLOPEN */\n\n/* Define to 1 if you have the <editline/history.h> header file. */\n/* #undef HAVE_EDITLINE_HISTORY_H */\n\n/* Define to 1 if you have the <editline/readline.h> header file. */\n/* #undef HAVE_EDITLINE_READLINE_H */\n\n/* Define to 1 if you have the `fcvt' function. */\n#define HAVE_FCVT 1\n\n/* Define to 1 if you have the `fdatasync' function. */\n/* #undef HAVE_FDATASYNC */\n\n/* Define to 1 if you have finite(). */\n#define HAVE_FINITE 1\n\n/* Define to 1 if you have the `fpclass' function. */\n/* #undef HAVE_FPCLASS */\n\n/* Define to 1 if you have the `fp_class' function. */\n/* #undef HAVE_FP_CLASS */\n\n/* Define to 1 if you have the `fp_class_d' function. */\n/* #undef HAVE_FP_CLASS_D */\n\n/* Define to 1 if you have the <fp_class.h> header file. */\n/* #undef HAVE_FP_CLASS_H */\n\n/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */\n#define HAVE_FSEEKO 1\n\n/* Define to 1 if your compiler understands __func__. */\n//#define HAVE_FUNCNAME__FUNC 1\n\n/* Define to 1 if your compiler understands __FUNCTION__. */\n#define HAVE_FUNCNAME__FUNCTION 1\n\n/* Define to 1 if you have getaddrinfo(). */\n/* #undef HAVE_GETADDRINFO */\n\n/* Define to 1 if you have the `gethostbyname_r' function. */\n/* #undef HAVE_GETHOSTBYNAME_R */\n\n/* Define to 1 if you have the `getopt' function. */\n//#define HAVE_GETOPT 1\n\n/* Define to 1 if you have the <getopt.h> header file. */\n//#define HAVE_GETOPT_H 1\n\n/* Define to 1 if you have the `getopt_long' function. */\n//#define HAVE_GETOPT_LONG 1\n\n/* Define to 1 if you have the `getpeereid' function. */\n/* #undef HAVE_GETPEEREID */\n\n/* Define to 1 if you have the `getpwuid_r' function. */\n/* #undef HAVE_GETPWUID_R */\n\n/* Define to 1 if you have the `getrusage' function. */\n/* #undef HAVE_GETRUSAGE */\n\n/* Define to 1 if you have the <history.h> header file. */\n/* #undef HAVE_HISTORY_H */\n\n/* Define to 1 if you have the <ieeefp.h> header file. */\n/* #undef HAVE_IEEEFP_H */\n\n/* Define to 1 if you have the `inet_aton' function. */\n/* #undef HAVE_INET_ATON */\n\n/* Define to 1 if the system has the type `int64'. */\n/* #undef HAVE_INT64 */\n\n/* Define to 1 if the system has the type `int8'. */\n/* #undef HAVE_INT8 */\n\n/* Define to 1 if you have the <inttypes.h> header file. */\n//#define HAVE_INTTYPES_H 1\n\n/* Define to 1 if you have the global variable 'int timezone'. */\n#define HAVE_INT_TIMEZONE 1\n\n/* Define to 1 if you have support for IPv6. */\n#define HAVE_IPV6 1\n\n/* Define to 1 if you have isinf(). */\n#define HAVE_ISINF 1\n\n/* Define to 1 if you have the <langinfo.h> header file. */\n/* #undef HAVE_LANGINFO_H */\n\n/* Define to 1 if you have the <ldap.h> header file. */\n/* #undef HAVE_LDAP_H */\n\n/* Define to 1 if you have the `crypto' library (-lcrypto). */\n/* #undef HAVE_LIBCRYPTO */\n\n/* Define to 1 if you have the `ldap' library (-lldap). */\n/* #undef HAVE_LIBLDAP */\n\n/* Define to 1 if you have the `pam' library (-lpam). */\n/* #undef HAVE_LIBPAM */\n\n/* Define if you have a function readline library */\n/* #undef HAVE_LIBREADLINE */\n\n/* Define to 1 if you have the `ssl' library (-lssl). */\n/* #undef HAVE_LIBSSL */\n\n/* Define to 1 if you have the `wldap32' library (-lwldap32). */\n/* #undef HAVE_LIBWLDAP32 */\n\n/* Define to 1 if you have the `z' library (-lz). */\n/* #undef HAVE_LIBZ */\n\n/* Define to 1 if the system has the type `locale_t'. */\n#define HAVE_LOCALE_T 1\n\n/* Define to 1 if `long int' works and is 64 bits. */\n/* #undef HAVE_LONG_INT_64 */\n\n/* Define to 1 if the system has the type `long long int'. */\n#if (_MSC_VER > 1200)\n#define HAVE_LONG_LONG_INT 1\n#endif\n\n/* Define to 1 if `long long int' works and is 64 bits. */\n#if (_MSC_VER > 1200)\n#define HAVE_LONG_LONG_INT_64 1\n#endif\n\n/* Define to 1 if you have the `mbstowcs_l' function. */\n#define HAVE_MBSTOWCS_L 1\n\n/* Define to 1 if you have the `memmove' function. */\n#define HAVE_MEMMOVE 1\n\n/* Define to 1 if you have the <memory.h> header file. */\n#define HAVE_MEMORY_H 1\n\n/* Define to 1 if the system has the type `MINIDUMP_TYPE'. */\n#define HAVE_MINIDUMP_TYPE 1\n\n/* Define to 1 if you have the `mkdtemp' function. */\n/* #undef HAVE_MKDTEMP */\n\n/* Define to 1 if you have the <netinet/tcp.h> header file. */\n/* #undef HAVE_NETINET_TCP_H */\n\n/* Define to 1 if you have the <pam/pam_appl.h> header file. */\n/* #undef HAVE_PAM_PAM_APPL_H */\n\n/* Define to 1 if you have the `poll' function. */\n/* #undef HAVE_POLL */\n\n/* Define to 1 if you have the <poll.h> header file. */\n/* #undef HAVE_POLL_H */\n\n/* Define to 1 if you have the `posix_fallocate' function. */\n/* #undef HAVE_POSIX_FALLOCATE */\n\n/* Define to 1 if you have the `pstat' function. */\n/* #undef HAVE_PSTAT */\n\n/* Define to 1 if the PS_STRINGS thing exists. */\n/* #undef HAVE_PS_STRINGS */\n\n/* Define to 1 if you have the `random' function. */\n/* #undef HAVE_RANDOM */\n\n/* Define to 1 if you have the <readline.h> header file. */\n/* #undef HAVE_READLINE_H */\n\n/* Define to 1 if you have the <readline/history.h> header file. */\n/* #undef HAVE_READLINE_HISTORY_H */\n\n/* Define to 1 if you have the <readline/readline.h> header file. */\n/* #undef HAVE_READLINE_READLINE_H */\n\n/* Define to 1 if you have the `readlink' function. */\n/* #undef HAVE_READLINK */\n\n/* Define to 1 if you have the `rint' function. */\n#if (_MSC_VER >= 1800)\n#define HAVE_RINT 1\n#endif\n\n\n/* Define to 1 if you have the global variable\n   'rl_completion_append_character'. */\n/* #undef HAVE_RL_COMPLETION_APPEND_CHARACTER */\n\n/* Define to 1 if you have the `rl_completion_matches' function. */\n/* #undef HAVE_RL_COMPLETION_MATCHES */\n\n/* Define to 1 if you have the `rl_filename_completion_function' function. */\n/* #undef HAVE_RL_FILENAME_COMPLETION_FUNCTION */\n\n/* Define to 1 if you have the <security/pam_appl.h> header file. */\n/* #undef HAVE_SECURITY_PAM_APPL_H */\n\n/* Define to 1 if you have the `setproctitle' function. */\n/* #undef HAVE_SETPROCTITLE */\n\n/* Define to 1 if you have the `setsid' function. */\n/* #undef HAVE_SETSID */\n\n/* Define to 1 if you have the `snprintf' function. */\n/* #undef HAVE_SNPRINTF */\n\n/* Define to 1 if you have spinlocks. */\n#define HAVE_SPINLOCKS 1\n\n/* Define to 1 if you have atomics. */\n#define HAVE_ATOMICS 1\n\n/* Define to 1 if you have the `srandom' function. */\n/* #undef HAVE_SRANDOM */\n\n/* Define to 1 if you have the `SSL_get_current_compression' function. */\n#define HAVE_SSL_GET_CURRENT_COMPRESSION 1\n\n/* Define to 1 if you have the <stdint.h> header file. */\n/* #undef HAVE_STDINT_H */\n\n/* Define to 1 if you have the <stdlib.h> header file. */\n#define HAVE_STDLIB_H 1\n\n/* Define to 1 if you have the `strerror' function. */\n#ifndef HAVE_STRERROR\n#define HAVE_STRERROR 1\n#endif\n\n/* Define to 1 if you have the `strerror_r' function. */\n/* #undef HAVE_STRERROR_R */\n\n/* Define to 1 if you have the <strings.h> header file. */\n/*#define HAVE_STRINGS_H 1 */\n\n/* Define to 1 if you have the <string.h> header file. */\n#define HAVE_STRING_H 1\n\n/* Define to use have a strong random number source */\n#define HAVE_STRONG_RANDOM 1\n\n/* Define to 1 if you have the `strtoll' function. */\n#ifdef HAVE_LONG_LONG_INT_64\n#define HAVE_STRTOLL 1\n/* Before VS2013, use Microsoft's nonstandard equivalent function */\n#if (_MSC_VER < 1800)\n#define strtoll _strtoi64\n#endif\n#endif\n\n/* Define to 1 if you have the `strtoull' function. */\n#ifdef HAVE_LONG_LONG_INT_64\n#define HAVE_STRTOULL 1\n/* Before VS2013, use Microsoft's nonstandard equivalent function */\n#if (_MSC_VER < 1800)\n#define strtoull _strtoui64\n#endif\n#endif\n\n/* Define to 1 if the system has the type `struct addrinfo'. */\n#if (_MSC_VER > 1200)\n#define HAVE_STRUCT_ADDRINFO 1\n#endif\n\n/* Define to 1 if the system has the type `struct cmsgcred'. */\n/* #undef HAVE_STRUCT_CMSGCRED */\n\n/* Define to 1 if the system has the type `struct option'. */\n//#define HAVE_STRUCT_OPTION 1\n\n/* Define to 1 if `sa_len' is member of `struct sockaddr'. */\n/* #undef HAVE_STRUCT_SOCKADDR_SA_LEN */\n\n/* Define to 1 if the system has the type `struct sockaddr_storage'. */\n#if (_MSC_VER > 1200)\n#define HAVE_STRUCT_SOCKADDR_STORAGE 1\n#endif\n\n/* Define to 1 if `ss_family' is member of `struct sockaddr_storage'. */\n#if (_MSC_VER > 1200)\n#define HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY 1\n#endif\n\n/* Define to 1 if `ss_len' is member of `struct sockaddr_storage'. */\n/* #undef HAVE_STRUCT_SOCKADDR_STORAGE_SS_LEN */\n\n/* Define to 1 if `__ss_family' is member of `struct sockaddr_storage'. */\n/* #undef HAVE_STRUCT_SOCKADDR_STORAGE___SS_FAMILY */\n\n/* Define to 1 if `__ss_len' is member of `struct sockaddr_storage'. */\n/* #undef HAVE_STRUCT_SOCKADDR_STORAGE___SS_LEN */\n\n/* Define to 1 if the system has the type `struct sockaddr_un'. */\n/* #undef HAVE_STRUCT_SOCKADDR_UN */\n\n/* Define to 1 if `tm_zone' is member of `struct tm'. */\n/* #undef HAVE_STRUCT_TM_TM_ZONE */\n\n/* Define to 1 if you have the `symlink' function. */\n#define HAVE_SYMLINK 1\n\n/* Define to 1 if you have the `sync_file_range' function. */\n/* #undef HAVE_SYNC_FILE_RANGE */\n\n/* Define to 1 if you have the `sysconf' function. */\n/* #undef HAVE_SYSCONF */\n\n/* Define to 1 if you have the syslog interface. */\n/* #undef HAVE_SYSLOG */\n\n/* Define to 1 if you have the <sys/ipc.h> header file. */\n/* #undef HAVE_SYS_IPC_H */\n\n/* Define to 1 if you have the <sys/pstat.h> header file. */\n/* #undef HAVE_SYS_PSTAT_H */\n\n/* Define to 1 if you have the <sys/select.h> header file. */\n/* #undef HAVE_SYS_SELECT_H */\n\n/* Define to 1 if you have the <sys/sem.h> header file. */\n/* #undef HAVE_SYS_SEM_H */\n\n/* Define to 1 if you have the <sys/shm.h> header file. */\n/* #undef HAVE_SYS_SHM_H */\n\n/* Define to 1 if you have the <sys/stat.h> header file. */\n#define HAVE_SYS_STAT_H 1\n\n/* Define to 1 if you have the <sys/types.h> header file. */\n#define HAVE_SYS_TYPES_H 1\n\n/* Define to 1 if you have the <sys/ucred.h> header file. */\n/* #undef HAVE_SYS_UCRED_H */\n\n/* Define to 1 if you have the <sys/un.h> header file. */\n/* #undef HAVE_SYS_UN_H */\n\n/* Define to 1 if you have the <termios.h> header file. */\n/* #undef HAVE_TERMIOS_H */\n\n/* Define to 1 if your `struct tm' has `tm_zone'. Deprecated, use\n   `HAVE_STRUCT_TM_TM_ZONE' instead. */\n/* #undef HAVE_TM_ZONE */\n\n/* Define to 1 if you have the `towlower' function. */\n#define HAVE_TOWLOWER 1\n\n/* Define to 1 if your compiler understands `typeof' or something similar. */\n/* #undef HAVE_TYPEOF */\n\n/* Define to 1 if you have the external array `tzname'. */\n/* #undef HAVE_TZNAME */\n\n/* Define to 1 if the system has the type `uint64'. */\n/* #undef HAVE_UINT64 */\n\n/* Define to 1 if the system has the type `uint8'. */\n/* #undef HAVE_UINT8 */\n\n/* Define to 1 if the system has the type `union semun'. */\n/* #undef HAVE_UNION_SEMUN */\n\n/* Define to 1 if you have the <unistd.h> header file. */\n#define HAVE_UNISTD_H 1\n\n/* Define to 1 if you have unix sockets. */\n/* #undef HAVE_UNIX_SOCKETS */\n\n/* Define to 1 if you have the `unsetenv' function. */\n/* #undef HAVE_UNSETENV */\n\n/* Define to 1 if you have the `utime' function. */\n#define HAVE_UTIME 1\n\n/* Define to 1 if you have the `utimes' function. */\n/* #undef HAVE_UTIMES */\n\n/* Define to 1 if you have the <utime.h> header file. */\n#define HAVE_UTIME_H 1\n\n/* Define to 1 if you have the `vsnprintf' function. */\n#define HAVE_VSNPRINTF 1\n\n/* Define to 1 if you have the <wchar.h> header file. */\n#define HAVE_WCHAR_H 1\n\n/* Define to 1 if you have the `wcstombs' function. */\n#define HAVE_WCSTOMBS 1\n\n/* Define to 1 if you have the `wcstombs_l' function. */\n#define HAVE_WCSTOMBS_L 1\n\n/* Define to 1 if you have the <wctype.h> header file. */\n#define HAVE_WCTYPE_H 1\n\n/* Define to 1 if you have the <winldap.h> header file. */\n/* #undef HAVE_WINLDAP_H */\n\n/* Define to 1 if your compiler understands __builtin_bswap32. */\n/* #undef HAVE__BUILTIN_BSWAP32 */\n\n/* Define to 1 if your compiler understands __builtin_bswap64. */\n/* #undef HAVE__BUILTIN_BSWAP64 */\n\n/* Define to 1 if your compiler understands __builtin_constant_p. */\n/* #undef HAVE__BUILTIN_CONSTANT_P */\n\n/* Define to 1 if your compiler understands __builtin_types_compatible_p. */\n/* #undef HAVE__BUILTIN_TYPES_COMPATIBLE_P */\n\n/* Define to 1 if your compiler understands __builtin_unreachable. */\n/* #undef HAVE__BUILTIN_UNREACHABLE */\n\n/* Define to 1 if you have __cpuid. */\n#define HAVE__CPUID 1\n\n/* Define to 1 if you have __get_cpuid. */\n#undef HAVE__GET_CPUID\n\n/* Define to 1 if your compiler understands _Static_assert. */\n/* #undef HAVE__STATIC_ASSERT */\n\n/* Define to 1 if your compiler understands __VA_ARGS__ in macros. */\n#define HAVE__VA_ARGS 1\n\n/* Define to the appropriate snprintf length modifier for 64-bit ints. */\n#define INT64_MODIFIER \"ll\"\n\n/* Define to 1 if `locale_t' requires <xlocale.h>. */\n/* #undef LOCALE_T_IN_XLOCALE */\n\n/* Define to the location of locale files. */\n/* #undef LOCALEDIR */\n\n/* Define as the maximum alignment requirement of any C data type. */\n#define MAXIMUM_ALIGNOF 8\n\n/* Define bytes to use libc memset(). */\n#define MEMSET_LOOP_LIMIT 1024\n\n/* Define to the address where bug reports for this package should be sent. */\n#define PACKAGE_BUGREPORT \"pgsql-bugs@postgresql.org\"\n\n/* Define to the full name of this package. */\n#define PACKAGE_NAME \"PostgreSQL\"\n\n/* Define to the full name and version of this package. */\n#define PACKAGE_STRING \"PostgreSQL 10.6\"\n\n/* Define to the version of this package. */\n#define PACKAGE_VERSION \"10.6\"\n\n/* Define to the name of a signed 128-bit integer type. */\n#undef PG_INT128_TYPE\n\n/* Define to the name of a signed 64-bit integer type. */\n#define PG_INT64_TYPE long long int\n\n/* PostgreSQL version as a string */\n#define PG_VERSION \"10.6\"\n\n/* PostgreSQL version as a number */\n#define PG_VERSION_NUM 100006\n\n/* Define to the one symbol short name of this package. */\n#define PACKAGE_TARNAME \"postgresql\"\n\n/* Define to the name of the default PostgreSQL service principal in Kerberos.\n   (--with-krb-srvnam=NAME) */\n#define PG_KRB_SRVNAM \"postgres\"\n\n/* A string containing the version number, platform, and C compiler */\n#define PG_VERSION_STR \"Uninitialized version string (win32)\"\n\n/* The size of `long', as computed by sizeof. */\n#define SIZEOF_LONG 4\n\n/* The size of `size_t', as computed by sizeof. */\n#ifndef _WIN64\n#define SIZEOF_SIZE_T 4\n#else\n#define SIZEOF_SIZE_T 8\n#endif\n\n/* The size of `void *', as computed by sizeof. */\n#ifndef _WIN64\n#define SIZEOF_VOID_P 4\n#else\n#define SIZEOF_VOID_P 8\n#endif\n\n/* Define to 1 if you have the ANSI C header files. */\n#define STDC_HEADERS 1\n\n/* Define to 1 if strerror_r() returns int. */\n/* #undef STRERROR_R_INT */\n\n/* Define to 1 if your <sys/time.h> declares `struct tm'. */\n/* #undef TM_IN_SYS_TIME */\n\n/* Define to 1 to build with assertion checks. (--enable-cassert) */\n/* #undef USE_ASSERT_CHECKING */\n\n/* Define to 1 to build with Bonjour support. (--with-bonjour) */\n/* #undef USE_BONJOUR */\n\n/* Define to 1 to build with BSD Authentication support. (--with-bsd-auth) */\n/* #undef USE_BSD_AUTH */\n\n/* Define to use /dev/urandom for random number generation */\n/* #undef USE_DEV_URANDOM */\n\n/* Define to 1 to build with LDAP support. (--with-ldap) */\n/* #undef USE_LDAP */\n\n/* Define to select named POSIX semaphores. */\n/* #undef USE_NAMED_POSIX_SEMAPHORES */\n\n/* Define to build with OpenSSL support. (--with-openssl) */\n/* #undef USE_OPENSSL */\n\n/* Define to use OpenSSL for random number generation */\n/* #undef USE_OPENSSL_RANDOM */\n\n/* Define to 1 to build with PAM support. (--with-pam) */\n/* #undef USE_PAM */\n\n/* Use replacement snprintf() functions. */\n#define USE_REPL_SNPRINTF 1\n\n/* Define to 1 to use software CRC-32C implementation (slicing-by-8). */\n#if (_MSC_VER < 1500)\n#define USE_SLICING_BY_8_CRC32C 1\n#endif\n\n/* Define to 1 use Intel SSE 4.2 CRC instructions. */\n/* #undef USE_SSE42_CRC32C */\n\n/* Define to 1 to use Intel SSE 4.2 CRC instructions with a runtime check. */\n#if (_MSC_VER >= 1500)\n#define USE_SSE42_CRC32C_WITH_RUNTIME_CHECK\n#endif\n\n/* Define to select SysV-style semaphores. */\n/* #undef USE_SYSV_SEMAPHORES */\n\n/* Define to select SysV-style shared memory. */\n#define USE_SYSV_SHARED_MEMORY 1\n\n/* Define to select unnamed POSIX semaphores. */\n/* #undef USE_UNNAMED_POSIX_SEMAPHORES */\n\n/* Define to use native Windows API for random number generation */\n#define USE_WIN32_RANDOM 1\n\n/* Define to select Win32-style semaphores. */\n#define USE_WIN32_SEMAPHORES 1\n\n/* Define to 1 if `wcstombs_l' requires <xlocale.h>. */\n/* #undef WCSTOMBS_L_IN_XLOCALE */\n\n/* Number of bits in a file offset, on hosts where this is settable. */\n/* #undef _FILE_OFFSET_BITS */\n\n/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */\n/* #undef _LARGEFILE_SOURCE */\n\n/* Define for large files, on AIX-style hosts. */\n/* #undef _LARGE_FILES */\n\n/* Define to `__inline__' or `__inline' if that's what the C compiler\n   calls it, or to nothing if 'inline' is not supported under any name.  */\n#ifndef __cplusplus\n#define inline __inline\n#endif\n\n/* Define to empty if the C compiler does not understand signed types. */\n/* #undef signed */\n\n/* Define to how the compiler spells `typeof'. */\n/* #undef typeof */\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/include/pg_config.h.in": "/* src/include/pg_config.h.in.  Generated from configure.in by autoheader.  */\n\n/* Define to the type of arg 1 of 'accept' */\n#undef ACCEPT_TYPE_ARG1\n\n/* Define to the type of arg 2 of 'accept' */\n#undef ACCEPT_TYPE_ARG2\n\n/* Define to the type of arg 3 of 'accept' */\n#undef ACCEPT_TYPE_ARG3\n\n/* Define to the return type of 'accept' */\n#undef ACCEPT_TYPE_RETURN\n\n/* Define if building universal (internal helper macro) */\n#undef AC_APPLE_UNIVERSAL_BUILD\n\n/* The normal alignment of `double', in bytes. */\n#undef ALIGNOF_DOUBLE\n\n/* The normal alignment of `int', in bytes. */\n#undef ALIGNOF_INT\n\n/* The normal alignment of `long', in bytes. */\n#undef ALIGNOF_LONG\n\n/* The normal alignment of `long long int', in bytes. */\n#undef ALIGNOF_LONG_LONG_INT\n\n/* The normal alignment of `PG_INT128_TYPE', in bytes. */\n#undef ALIGNOF_PG_INT128_TYPE\n\n/* The normal alignment of `short', in bytes. */\n#undef ALIGNOF_SHORT\n\n/* Size of a disk block --- this also limits the size of a tuple. You can set\n   it bigger if you need bigger tuples (although TOAST should reduce the need\n   to have large tuples, since fields can be spread across multiple tuples).\n   BLCKSZ must be a power of 2. The maximum possible value of BLCKSZ is\n   currently 2^15 (32768). This is determined by the 15-bit widths of the\n   lp_off and lp_len fields in ItemIdData (see include/storage/itemid.h).\n   Changing BLCKSZ requires an initdb. */\n#undef BLCKSZ\n\n/* Define to the default TCP port number on which the server listens and to\n   which clients will try to connect. This can be overridden at run-time, but\n   it's convenient if your clients have the right default compiled in.\n   (--with-pgport=PORTNUM) */\n#undef DEF_PGPORT\n\n/* Define to the default TCP port number as a string constant. */\n#undef DEF_PGPORT_STR\n\n/* Define to build with GSSAPI support. (--with-gssapi) */\n#undef ENABLE_GSS\n\n/* Define to 1 if you want National Language Support. (--enable-nls) */\n#undef ENABLE_NLS\n\n/* Define to 1 to build client libraries as thread-safe code.\n   (--enable-thread-safety) */\n#undef ENABLE_THREAD_SAFETY\n\n/* Define to nothing if C supports flexible array members, and to 1 if it does\n   not. That way, with a declaration like `struct s { int n; double\n   d[FLEXIBLE_ARRAY_MEMBER]; };', the struct hack can be used with pre-C99\n   compilers. When computing the size of such an object, don't use 'sizeof\n   (struct s)' as it overestimates the size. Use 'offsetof (struct s, d)'\n   instead. Don't use 'offsetof (struct s, d[0])', as this doesn't work with\n   MSVC and with C++ compilers. */\n#undef FLEXIBLE_ARRAY_MEMBER\n\n/* float4 values are passed by value if 'true', by reference if 'false' */\n#undef FLOAT4PASSBYVAL\n\n/* float8, int8, and related values are passed by value if 'true', by\n   reference if 'false' */\n#undef FLOAT8PASSBYVAL\n\n/* Define to 1 if gettimeofday() takes only 1 argument. */\n#undef GETTIMEOFDAY_1ARG\n\n#ifdef GETTIMEOFDAY_1ARG\n# define gettimeofday(a,b) gettimeofday(a)\n#endif\n\n/* Define to 1 if you have the `append_history' function. */\n#undef HAVE_APPEND_HISTORY\n\n/* Define to 1 if you have the `ASN1_STRING_get0_data' function. */\n#undef HAVE_ASN1_STRING_GET0_DATA\n\n/* Define to 1 if you want to use atomics if available. */\n#undef HAVE_ATOMICS\n\n/* Define to 1 if you have the <atomic.h> header file. */\n#undef HAVE_ATOMIC_H\n\n/* Define to 1 if you have the `BIO_get_data' function. */\n#undef HAVE_BIO_GET_DATA\n\n/* Define to 1 if you have the `BIO_meth_new' function. */\n#undef HAVE_BIO_METH_NEW\n\n/* Define to 1 if you have the `cbrt' function. */\n#undef HAVE_CBRT\n\n/* Define to 1 if you have the `class' function. */\n#undef HAVE_CLASS\n\n/* Define to 1 if you have the `clock_gettime' function. */\n#undef HAVE_CLOCK_GETTIME\n\n/* Define to 1 if your compiler handles computed gotos. */\n#undef HAVE_COMPUTED_GOTO\n\n/* Define to 1 if you have the <crtdefs.h> header file. */\n#undef HAVE_CRTDEFS_H\n\n/* Define to 1 if you have the `crypt' function. */\n#undef HAVE_CRYPT\n\n/* Define to 1 if you have the `CRYPTO_lock' function. */\n#undef HAVE_CRYPTO_LOCK\n\n/* Define to 1 if you have the <crypt.h> header file. */\n#undef HAVE_CRYPT_H\n\n/* Define to 1 if you have the declaration of `fdatasync', and to 0 if you\n   don't. */\n#undef HAVE_DECL_FDATASYNC\n\n/* Define to 1 if you have the declaration of `F_FULLFSYNC', and to 0 if you\n   don't. */\n#undef HAVE_DECL_F_FULLFSYNC\n\n/* Define to 1 if you have the declaration of `posix_fadvise', and to 0 if you\n   don't. */\n#undef HAVE_DECL_POSIX_FADVISE\n\n/* Define to 1 if you have the declaration of `snprintf', and to 0 if you\n   don't. */\n#undef HAVE_DECL_SNPRINTF\n\n/* Define to 1 if you have the declaration of `strlcat', and to 0 if you\n   don't. */\n#undef HAVE_DECL_STRLCAT\n\n/* Define to 1 if you have the declaration of `strlcpy', and to 0 if you\n   don't. */\n#undef HAVE_DECL_STRLCPY\n\n/* Define to 1 if you have the declaration of `strtoll', and to 0 if you\n   don't. */\n#undef HAVE_DECL_STRTOLL\n\n/* Define to 1 if you have the declaration of `strtoull', and to 0 if you\n   don't. */\n#undef HAVE_DECL_STRTOULL\n\n/* Define to 1 if you have the declaration of `sys_siglist', and to 0 if you\n   don't. */\n#undef HAVE_DECL_SYS_SIGLIST\n\n/* Define to 1 if you have the declaration of `vsnprintf', and to 0 if you\n   don't. */\n#undef HAVE_DECL_VSNPRINTF\n\n/* Define to 1 if you have the <dld.h> header file. */\n#undef HAVE_DLD_H\n\n/* Define to 1 if you have the `dlopen' function. */\n#undef HAVE_DLOPEN\n\n/* Define to 1 if you have the <editline/history.h> header file. */\n#undef HAVE_EDITLINE_HISTORY_H\n\n/* Define to 1 if you have the <editline/readline.h> header file. */\n#undef HAVE_EDITLINE_READLINE_H\n\n/* Define to 1 if you have the `fdatasync' function. */\n#undef HAVE_FDATASYNC\n\n/* Define to 1 if you have the `fls' function. */\n#undef HAVE_FLS\n\n/* Define to 1 if you have the `fpclass' function. */\n#undef HAVE_FPCLASS\n\n/* Define to 1 if you have the `fp_class' function. */\n#undef HAVE_FP_CLASS\n\n/* Define to 1 if you have the `fp_class_d' function. */\n#undef HAVE_FP_CLASS_D\n\n/* Define to 1 if you have the <fp_class.h> header file. */\n#undef HAVE_FP_CLASS_H\n\n/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */\n#undef HAVE_FSEEKO\n\n/* Define to 1 if your compiler understands __func__. */\n#undef HAVE_FUNCNAME__FUNC\n\n/* Define to 1 if your compiler understands __FUNCTION__. */\n#undef HAVE_FUNCNAME__FUNCTION\n\n/* Define to 1 if you have __atomic_compare_exchange_n(int *, int *, int). */\n#undef HAVE_GCC__ATOMIC_INT32_CAS\n\n/* Define to 1 if you have __atomic_compare_exchange_n(int64 *, int *, int64).\n   */\n#undef HAVE_GCC__ATOMIC_INT64_CAS\n\n/* Define to 1 if you have __sync_lock_test_and_set(char *) and friends. */\n#undef HAVE_GCC__SYNC_CHAR_TAS\n\n/* Define to 1 if you have __sync_val_compare_and_swap(int *, int, int). */\n#undef HAVE_GCC__SYNC_INT32_CAS\n\n/* Define to 1 if you have __sync_lock_test_and_set(int *) and friends. */\n#undef HAVE_GCC__SYNC_INT32_TAS\n\n/* Define to 1 if you have __sync_val_compare_and_swap(int64 *, int64, int64).\n   */\n#undef HAVE_GCC__SYNC_INT64_CAS\n\n/* Define to 1 if you have the `getaddrinfo' function. */\n#undef HAVE_GETADDRINFO\n\n/* Define to 1 if you have the `gethostbyname_r' function. */\n#undef HAVE_GETHOSTBYNAME_R\n\n/* Define to 1 if you have the `getifaddrs' function. */\n#undef HAVE_GETIFADDRS\n\n/* Define to 1 if you have the `getopt' function. */\n#undef HAVE_GETOPT\n\n/* Define to 1 if you have the <getopt.h> header file. */\n#undef HAVE_GETOPT_H\n\n/* Define to 1 if you have the `getopt_long' function. */\n#undef HAVE_GETOPT_LONG\n\n/* Define to 1 if you have the `getpeereid' function. */\n#undef HAVE_GETPEEREID\n\n/* Define to 1 if you have the `getpeerucred' function. */\n#undef HAVE_GETPEERUCRED\n\n/* Define to 1 if you have the `getpwuid_r' function. */\n#undef HAVE_GETPWUID_R\n\n/* Define to 1 if you have the `getrlimit' function. */\n#undef HAVE_GETRLIMIT\n\n/* Define to 1 if you have the `getrusage' function. */\n#undef HAVE_GETRUSAGE\n\n/* Define to 1 if you have the `gettimeofday' function. */\n#undef HAVE_GETTIMEOFDAY\n\n/* Define to 1 if you have the <gssapi/gssapi.h> header file. */\n#undef HAVE_GSSAPI_GSSAPI_H\n\n/* Define to 1 if you have the <gssapi.h> header file. */\n#undef HAVE_GSSAPI_H\n\n/* Define to 1 if you have the <history.h> header file. */\n#undef HAVE_HISTORY_H\n\n/* Define to 1 if you have the `history_truncate_file' function. */\n#undef HAVE_HISTORY_TRUNCATE_FILE\n\n/* Define to 1 if you have the <ieeefp.h> header file. */\n#undef HAVE_IEEEFP_H\n\n/* Define to 1 if you have the <ifaddrs.h> header file. */\n#undef HAVE_IFADDRS_H\n\n/* Define to 1 if you have the `inet_aton' function. */\n#undef HAVE_INET_ATON\n\n/* Define to 1 if the system has the type `int64'. */\n#undef HAVE_INT64\n\n/* Define to 1 if the system has the type `int8'. */\n#undef HAVE_INT8\n\n/* Define to 1 if the system has the type `intptr_t'. */\n#undef HAVE_INTPTR_T\n\n/* Define to 1 if you have the <inttypes.h> header file. */\n#undef HAVE_INTTYPES_H\n\n/* Define to 1 if you have the global variable 'int opterr'. */\n#undef HAVE_INT_OPTERR\n\n/* Define to 1 if you have the global variable 'int optreset'. */\n#undef HAVE_INT_OPTRESET\n\n/* Define to 1 if you have the global variable 'int timezone'. */\n#undef HAVE_INT_TIMEZONE\n\n/* Define to 1 if you have support for IPv6. */\n#undef HAVE_IPV6\n\n/* Define to 1 if you have isinf(). */\n#undef HAVE_ISINF\n\n/* Define to 1 if you have the <langinfo.h> header file. */\n#undef HAVE_LANGINFO_H\n\n/* Define to 1 if you have the <ldap.h> header file. */\n#undef HAVE_LDAP_H\n\n/* Define to 1 if you have the `crypto' library (-lcrypto). */\n#undef HAVE_LIBCRYPTO\n\n/* Define to 1 if you have the `ldap' library (-lldap). */\n#undef HAVE_LIBLDAP\n\n/* Define to 1 if you have the `ldap_r' library (-lldap_r). */\n#undef HAVE_LIBLDAP_R\n\n/* Define to 1 if you have the `m' library (-lm). */\n#undef HAVE_LIBM\n\n/* Define to 1 if you have the `pam' library (-lpam). */\n#undef HAVE_LIBPAM\n\n/* Define if you have a function readline library */\n#undef HAVE_LIBREADLINE\n\n/* Define to 1 if you have the `selinux' library (-lselinux). */\n#undef HAVE_LIBSELINUX\n\n/* Define to 1 if you have the `ssl' library (-lssl). */\n#undef HAVE_LIBSSL\n\n/* Define to 1 if you have the `wldap32' library (-lwldap32). */\n#undef HAVE_LIBWLDAP32\n\n/* Define to 1 if you have the `xml2' library (-lxml2). */\n#undef HAVE_LIBXML2\n\n/* Define to 1 if you have the `xslt' library (-lxslt). */\n#undef HAVE_LIBXSLT\n\n/* Define to 1 if you have the `z' library (-lz). */\n#undef HAVE_LIBZ\n\n/* Define to 1 if the system has the type `locale_t'. */\n#undef HAVE_LOCALE_T\n\n/* Define to 1 if `long int' works and is 64 bits. */\n#undef HAVE_LONG_INT_64\n\n/* Define to 1 if the system has the type `long long int'. */\n#undef HAVE_LONG_LONG_INT\n\n/* Define to 1 if `long long int' works and is 64 bits. */\n#undef HAVE_LONG_LONG_INT_64\n\n/* Define to 1 if you have the <mbarrier.h> header file. */\n#undef HAVE_MBARRIER_H\n\n/* Define to 1 if you have the `mbstowcs_l' function. */\n#undef HAVE_MBSTOWCS_L\n\n/* Define to 1 if you have the `memmove' function. */\n#undef HAVE_MEMMOVE\n\n/* Define to 1 if you have the <memory.h> header file. */\n#undef HAVE_MEMORY_H\n\n/* Define to 1 if the system has the type `MINIDUMP_TYPE'. */\n#undef HAVE_MINIDUMP_TYPE\n\n/* Define to 1 if you have the `mkdtemp' function. */\n#undef HAVE_MKDTEMP\n\n/* Define to 1 if you have the <netinet/tcp.h> header file. */\n#undef HAVE_NETINET_TCP_H\n\n/* Define to 1 if you have the <net/if.h> header file. */\n#undef HAVE_NET_IF_H\n\n/* Define to 1 if you have the `OPENSSL_init_ssl' function. */\n#undef HAVE_OPENSSL_INIT_SSL\n\n/* Define to 1 if you have the <ossp/uuid.h> header file. */\n#undef HAVE_OSSP_UUID_H\n\n/* Define to 1 if you have the <pam/pam_appl.h> header file. */\n#undef HAVE_PAM_PAM_APPL_H\n\n/* Define to 1 if you have the `poll' function. */\n#undef HAVE_POLL\n\n/* Define to 1 if you have the <poll.h> header file. */\n#undef HAVE_POLL_H\n\n/* Define to 1 if you have the `posix_fadvise' function. */\n#undef HAVE_POSIX_FADVISE\n\n/* Define to 1 if you have the `posix_fallocate' function. */\n#undef HAVE_POSIX_FALLOCATE\n\n/* Define to 1 if the assembler supports PPC's LWARX mutex hint bit. */\n#undef HAVE_PPC_LWARX_MUTEX_HINT\n\n/* Define to 1 if you have the `pstat' function. */\n#undef HAVE_PSTAT\n\n/* Define to 1 if the PS_STRINGS thing exists. */\n#undef HAVE_PS_STRINGS\n\n/* Define if you have POSIX threads libraries and header files. */\n#undef HAVE_PTHREAD\n\n/* Define to 1 if you have the `pthread_is_threaded_np' function. */\n#undef HAVE_PTHREAD_IS_THREADED_NP\n\n/* Have PTHREAD_PRIO_INHERIT. */\n#undef HAVE_PTHREAD_PRIO_INHERIT\n\n/* Define to 1 if you have the `random' function. */\n#undef HAVE_RANDOM\n\n/* Define to 1 if you have the `RAND_OpenSSL' function. */\n#undef HAVE_RAND_OPENSSL\n\n/* Define to 1 if you have the <readline.h> header file. */\n#undef HAVE_READLINE_H\n\n/* Define to 1 if you have the <readline/history.h> header file. */\n#undef HAVE_READLINE_HISTORY_H\n\n/* Define to 1 if you have the <readline/readline.h> header file. */\n#undef HAVE_READLINE_READLINE_H\n\n/* Define to 1 if you have the `readlink' function. */\n#undef HAVE_READLINK\n\n/* Define to 1 if you have the `rint' function. */\n#undef HAVE_RINT\n\n/* Define to 1 if you have the global variable\n   'rl_completion_append_character'. */\n#undef HAVE_RL_COMPLETION_APPEND_CHARACTER\n\n/* Define to 1 if you have the `rl_completion_matches' function. */\n#undef HAVE_RL_COMPLETION_MATCHES\n\n/* Define to 1 if you have the `rl_filename_completion_function' function. */\n#undef HAVE_RL_FILENAME_COMPLETION_FUNCTION\n\n/* Define to 1 if you have the `rl_reset_screen_size' function. */\n#undef HAVE_RL_RESET_SCREEN_SIZE\n\n/* Define to 1 if you have the <security/pam_appl.h> header file. */\n#undef HAVE_SECURITY_PAM_APPL_H\n\n/* Define to 1 if you have the `setproctitle' function. */\n#undef HAVE_SETPROCTITLE\n\n/* Define to 1 if you have the `setsid' function. */\n#undef HAVE_SETSID\n\n/* Define to 1 if you have the `shm_open' function. */\n#undef HAVE_SHM_OPEN\n\n/* Define to 1 if you have the `snprintf' function. */\n#undef HAVE_SNPRINTF\n\n/* Define to 1 if you have spinlocks. */\n#undef HAVE_SPINLOCKS\n\n/* Define to 1 if you have the `srandom' function. */\n#undef HAVE_SRANDOM\n\n/* Define to 1 if you have the `SSL_get_current_compression' function. */\n#undef HAVE_SSL_GET_CURRENT_COMPRESSION\n\n/* Define to 1 if you have the <stdint.h> header file. */\n#undef HAVE_STDINT_H\n\n/* Define to 1 if you have the <stdlib.h> header file. */\n#undef HAVE_STDLIB_H\n\n/* Define to 1 if you have the `strerror' function. */\n#undef HAVE_STRERROR\n\n/* Define to 1 if you have the `strerror_r' function. */\n#undef HAVE_STRERROR_R\n\n/* Define to 1 if you have the <strings.h> header file. */\n#undef HAVE_STRINGS_H\n\n/* Define to 1 if you have the <string.h> header file. */\n#undef HAVE_STRING_H\n\n/* Define to 1 if you have the `strlcat' function. */\n#undef HAVE_STRLCAT\n\n/* Define to 1 if you have the `strlcpy' function. */\n#undef HAVE_STRLCPY\n\n/* Define to use have a strong random number source */\n#undef HAVE_STRONG_RANDOM\n\n/* Define to 1 if you have the `strtoll' function. */\n#undef HAVE_STRTOLL\n\n/* Define to 1 if you have the `strtoq' function. */\n#undef HAVE_STRTOQ\n\n/* Define to 1 if you have the `strtoull' function. */\n#undef HAVE_STRTOULL\n\n/* Define to 1 if you have the `strtouq' function. */\n#undef HAVE_STRTOUQ\n\n/* Define to 1 if the system has the type `struct addrinfo'. */\n#undef HAVE_STRUCT_ADDRINFO\n\n/* Define to 1 if the system has the type `struct cmsgcred'. */\n#undef HAVE_STRUCT_CMSGCRED\n\n/* Define to 1 if the system has the type `struct option'. */\n#undef HAVE_STRUCT_OPTION\n\n/* Define to 1 if `sa_len' is a member of `struct sockaddr'. */\n#undef HAVE_STRUCT_SOCKADDR_SA_LEN\n\n/* Define to 1 if the system has the type `struct sockaddr_storage'. */\n#undef HAVE_STRUCT_SOCKADDR_STORAGE\n\n/* Define to 1 if `ss_family' is a member of `struct sockaddr_storage'. */\n#undef HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY\n\n/* Define to 1 if `ss_len' is a member of `struct sockaddr_storage'. */\n#undef HAVE_STRUCT_SOCKADDR_STORAGE_SS_LEN\n\n/* Define to 1 if `__ss_family' is a member of `struct sockaddr_storage'. */\n#undef HAVE_STRUCT_SOCKADDR_STORAGE___SS_FAMILY\n\n/* Define to 1 if `__ss_len' is a member of `struct sockaddr_storage'. */\n#undef HAVE_STRUCT_SOCKADDR_STORAGE___SS_LEN\n\n/* Define to 1 if `tm_zone' is a member of `struct tm'. */\n#undef HAVE_STRUCT_TM_TM_ZONE\n\n/* Define to 1 if you have the `symlink' function. */\n#undef HAVE_SYMLINK\n\n/* Define to 1 if you have the `sync_file_range' function. */\n#undef HAVE_SYNC_FILE_RANGE\n\n/* Define to 1 if you have the syslog interface. */\n#undef HAVE_SYSLOG\n\n/* Define to 1 if you have the <sys/epoll.h> header file. */\n#undef HAVE_SYS_EPOLL_H\n\n/* Define to 1 if you have the <sys/ipc.h> header file. */\n#undef HAVE_SYS_IPC_H\n\n/* Define to 1 if you have the <sys/pstat.h> header file. */\n#undef HAVE_SYS_PSTAT_H\n\n/* Define to 1 if you have the <sys/resource.h> header file. */\n#undef HAVE_SYS_RESOURCE_H\n\n/* Define to 1 if you have the <sys/select.h> header file. */\n#undef HAVE_SYS_SELECT_H\n\n/* Define to 1 if you have the <sys/sem.h> header file. */\n#undef HAVE_SYS_SEM_H\n\n/* Define to 1 if you have the <sys/shm.h> header file. */\n#undef HAVE_SYS_SHM_H\n\n/* Define to 1 if you have the <sys/sockio.h> header file. */\n#undef HAVE_SYS_SOCKIO_H\n\n/* Define to 1 if you have the <sys/stat.h> header file. */\n#undef HAVE_SYS_STAT_H\n\n/* Define to 1 if you have the <sys/tas.h> header file. */\n#undef HAVE_SYS_TAS_H\n\n/* Define to 1 if you have the <sys/types.h> header file. */\n#undef HAVE_SYS_TYPES_H\n\n/* Define to 1 if you have the <sys/ucred.h> header file. */\n#undef HAVE_SYS_UCRED_H\n\n/* Define to 1 if you have the <sys/un.h> header file. */\n#undef HAVE_SYS_UN_H\n\n/* Define to 1 if you have the <termios.h> header file. */\n#undef HAVE_TERMIOS_H\n\n/* Define to 1 if your `struct tm' has `tm_zone'. Deprecated, use\n   `HAVE_STRUCT_TM_TM_ZONE' instead. */\n#undef HAVE_TM_ZONE\n\n/* Define to 1 if you have the `towlower' function. */\n#undef HAVE_TOWLOWER\n\n/* Define to 1 if your compiler understands `typeof' or something similar. */\n#undef HAVE_TYPEOF\n\n/* Define to 1 if you have the external array `tzname'. */\n#undef HAVE_TZNAME\n\n/* Define to 1 if you have the <ucred.h> header file. */\n#undef HAVE_UCRED_H\n\n/* Define to 1 if the system has the type `uint64'. */\n#undef HAVE_UINT64\n\n/* Define to 1 if the system has the type `uint8'. */\n#undef HAVE_UINT8\n\n/* Define to 1 if the system has the type `uintptr_t'. */\n#undef HAVE_UINTPTR_T\n\n/* Define to 1 if the system has the type `union semun'. */\n#undef HAVE_UNION_SEMUN\n\n/* Define to 1 if you have the <unistd.h> header file. */\n#undef HAVE_UNISTD_H\n\n/* Define to 1 if you have unix sockets. */\n#undef HAVE_UNIX_SOCKETS\n\n/* Define to 1 if you have the `unsetenv' function. */\n#undef HAVE_UNSETENV\n\n/* Define to 1 if the system has the type `unsigned long long int'. */\n#undef HAVE_UNSIGNED_LONG_LONG_INT\n\n/* Define to 1 if you have the `utime' function. */\n#undef HAVE_UTIME\n\n/* Define to 1 if you have the `utimes' function. */\n#undef HAVE_UTIMES\n\n/* Define to 1 if you have the <utime.h> header file. */\n#undef HAVE_UTIME_H\n\n/* Define to 1 if you have BSD UUID support. */\n#undef HAVE_UUID_BSD\n\n/* Define to 1 if you have E2FS UUID support. */\n#undef HAVE_UUID_E2FS\n\n/* Define to 1 if you have the <uuid.h> header file. */\n#undef HAVE_UUID_H\n\n/* Define to 1 if you have OSSP UUID support. */\n#undef HAVE_UUID_OSSP\n\n/* Define to 1 if you have the <uuid/uuid.h> header file. */\n#undef HAVE_UUID_UUID_H\n\n/* Define to 1 if you have the `vsnprintf' function. */\n#undef HAVE_VSNPRINTF\n\n/* Define to 1 if you have the <wchar.h> header file. */\n#undef HAVE_WCHAR_H\n\n/* Define to 1 if you have the `wcstombs' function. */\n#undef HAVE_WCSTOMBS\n\n/* Define to 1 if you have the `wcstombs_l' function. */\n#undef HAVE_WCSTOMBS_L\n\n/* Define to 1 if you have the <wctype.h> header file. */\n#undef HAVE_WCTYPE_H\n\n/* Define to 1 if you have the <winldap.h> header file. */\n#undef HAVE_WINLDAP_H\n\n/* Define to 1 if your compiler understands __builtin_bswap32. */\n#undef HAVE__BUILTIN_BSWAP32\n\n/* Define to 1 if your compiler understands __builtin_bswap64. */\n#undef HAVE__BUILTIN_BSWAP64\n\n/* Define to 1 if your compiler understands __builtin_constant_p. */\n#undef HAVE__BUILTIN_CONSTANT_P\n\n/* Define to 1 if your compiler understands __builtin_types_compatible_p. */\n#undef HAVE__BUILTIN_TYPES_COMPATIBLE_P\n\n/* Define to 1 if your compiler understands __builtin_unreachable. */\n#undef HAVE__BUILTIN_UNREACHABLE\n\n/* Define to 1 if you have __cpuid. */\n#undef HAVE__CPUID\n\n/* Define to 1 if you have __get_cpuid. */\n#undef HAVE__GET_CPUID\n\n/* Define to 1 if your compiler understands _Static_assert. */\n#undef HAVE__STATIC_ASSERT\n\n/* Define to 1 if your compiler understands __VA_ARGS__ in macros. */\n#undef HAVE__VA_ARGS\n\n/* Define to 1 if you have the `__strtoll' function. */\n#undef HAVE___STRTOLL\n\n/* Define to 1 if you have the `__strtoull' function. */\n#undef HAVE___STRTOULL\n\n/* Define to the appropriate snprintf length modifier for 64-bit ints. */\n#undef INT64_MODIFIER\n\n/* Define to 1 if `locale_t' requires <xlocale.h>. */\n#undef LOCALE_T_IN_XLOCALE\n\n/* Define as the maximum alignment requirement of any C data type. */\n#undef MAXIMUM_ALIGNOF\n\n/* Define bytes to use libc memset(). */\n#undef MEMSET_LOOP_LIMIT\n\n/* Define to the address where bug reports for this package should be sent. */\n#undef PACKAGE_BUGREPORT\n\n/* Define to the full name of this package. */\n#undef PACKAGE_NAME\n\n/* Define to the full name and version of this package. */\n#undef PACKAGE_STRING\n\n/* Define to the one symbol short name of this package. */\n#undef PACKAGE_TARNAME\n\n/* Define to the home page for this package. */\n#undef PACKAGE_URL\n\n/* Define to the version of this package. */\n#undef PACKAGE_VERSION\n\n/* Define to the name of a signed 128-bit integer type. */\n#undef PG_INT128_TYPE\n\n/* Define to the name of a signed 64-bit integer type. */\n#undef PG_INT64_TYPE\n\n/* Define to the name of the default PostgreSQL service principal in Kerberos\n   (GSSAPI). (--with-krb-srvnam=NAME) */\n#undef PG_KRB_SRVNAM\n\n/* PostgreSQL major version as a string */\n#undef PG_MAJORVERSION\n\n/* Define to gnu_printf if compiler supports it, else printf. */\n#undef PG_PRINTF_ATTRIBUTE\n\n/* PostgreSQL version as a string */\n#undef PG_VERSION\n\n/* PostgreSQL version as a number */\n#undef PG_VERSION_NUM\n\n/* A string containing the version number, platform, and C compiler */\n#undef PG_VERSION_STR\n\n/* Define to 1 to allow profiling output to be saved separately for each\n   process. */\n#undef PROFILE_PID_DIR\n\n/* Define to necessary symbol if this constant uses a non-standard name on\n   your system. */\n#undef PTHREAD_CREATE_JOINABLE\n\n/* RELSEG_SIZE is the maximum number of blocks allowed in one disk file. Thus,\n   the maximum size of a single file is RELSEG_SIZE * BLCKSZ; relations bigger\n   than that are divided into multiple files. RELSEG_SIZE * BLCKSZ must be\n   less than your OS' limit on file size. This is often 2 GB or 4GB in a\n   32-bit operating system, unless you have large file support enabled. By\n   default, we make the limit 1 GB to avoid any possible integer-overflow\n   problems within the OS. A limit smaller than necessary only means we divide\n   a large relation into more chunks than necessary, so it seems best to err\n   in the direction of a small limit. A power-of-2 value is recommended to\n   save a few cycles in md.c, but is not absolutely required. Changing\n   RELSEG_SIZE requires an initdb. */\n#undef RELSEG_SIZE\n\n/* The size of `long', as computed by sizeof. */\n#undef SIZEOF_LONG\n\n/* The size of `off_t', as computed by sizeof. */\n#undef SIZEOF_OFF_T\n\n/* The size of `size_t', as computed by sizeof. */\n#undef SIZEOF_SIZE_T\n\n/* The size of `void *', as computed by sizeof. */\n#undef SIZEOF_VOID_P\n\n/* Define to 1 if you have the ANSI C header files. */\n#undef STDC_HEADERS\n\n/* Define to 1 if strerror_r() returns int. */\n#undef STRERROR_R_INT\n\n/* Define to 1 if your <sys/time.h> declares `struct tm'. */\n#undef TM_IN_SYS_TIME\n\n/* Define to 1 to build with assertion checks. (--enable-cassert) */\n#undef USE_ASSERT_CHECKING\n\n/* Define to 1 to build with Bonjour support. (--with-bonjour) */\n#undef USE_BONJOUR\n\n/* Define to 1 to build with BSD Authentication support. (--with-bsd-auth) */\n#undef USE_BSD_AUTH\n\n/* Define to use /dev/urandom for random number generation */\n#undef USE_DEV_URANDOM\n\n/* Define to 1 if you want float4 values to be passed by value.\n   (--enable-float4-byval) */\n#undef USE_FLOAT4_BYVAL\n\n/* Define to 1 if you want float8, int8, etc values to be passed by value.\n   (--enable-float8-byval) */\n#undef USE_FLOAT8_BYVAL\n\n/* Define to build with ICU support. (--with-icu) */\n#undef USE_ICU\n\n/* Define to 1 to build with LDAP support. (--with-ldap) */\n#undef USE_LDAP\n\n/* Define to 1 to build with XML support. (--with-libxml) */\n#undef USE_LIBXML\n\n/* Define to 1 to use XSLT support when building contrib/xml2.\n   (--with-libxslt) */\n#undef USE_LIBXSLT\n\n/* Define to select named POSIX semaphores. */\n#undef USE_NAMED_POSIX_SEMAPHORES\n\n/* Define to build with OpenSSL support. (--with-openssl) */\n#undef USE_OPENSSL\n\n/* Define to use OpenSSL for random number generation */\n#undef USE_OPENSSL_RANDOM\n\n/* Define to 1 to build with PAM support. (--with-pam) */\n#undef USE_PAM\n\n/* Use replacement snprintf() functions. */\n#undef USE_REPL_SNPRINTF\n\n/* Define to 1 to use software CRC-32C implementation (slicing-by-8). */\n#undef USE_SLICING_BY_8_CRC32C\n\n/* Define to 1 use Intel SSE 4.2 CRC instructions. */\n#undef USE_SSE42_CRC32C\n\n/* Define to 1 to use Intel SSE 4.2 CRC instructions with a runtime check. */\n#undef USE_SSE42_CRC32C_WITH_RUNTIME_CHECK\n\n/* Define to build with systemd support. (--with-systemd) */\n#undef USE_SYSTEMD\n\n/* Define to select SysV-style semaphores. */\n#undef USE_SYSV_SEMAPHORES\n\n/* Define to select SysV-style shared memory. */\n#undef USE_SYSV_SHARED_MEMORY\n\n/* Define to select unnamed POSIX semaphores. */\n#undef USE_UNNAMED_POSIX_SEMAPHORES\n\n/* Define to use native Windows API for random number generation */\n#undef USE_WIN32_RANDOM\n\n/* Define to select Win32-style semaphores. */\n#undef USE_WIN32_SEMAPHORES\n\n/* Define to select Win32-style shared memory. */\n#undef USE_WIN32_SHARED_MEMORY\n\n/* Define to 1 if `wcstombs_l' requires <xlocale.h>. */\n#undef WCSTOMBS_L_IN_XLOCALE\n\n/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most\n   significant byte first (like Motorola and SPARC, unlike Intel). */\n#if defined AC_APPLE_UNIVERSAL_BUILD\n# if defined __BIG_ENDIAN__\n#  define WORDS_BIGENDIAN 1\n# endif\n#else\n# ifndef WORDS_BIGENDIAN\n#  undef WORDS_BIGENDIAN\n# endif\n#endif\n\n/* Size of a WAL file block. This need have no particular relation to BLCKSZ.\n   XLOG_BLCKSZ must be a power of 2, and if your system supports O_DIRECT I/O,\n   XLOG_BLCKSZ must be a multiple of the alignment requirement for direct-I/O\n   buffers, else direct I/O may fail. Changing XLOG_BLCKSZ requires an initdb.\n   */\n#undef XLOG_BLCKSZ\n\n/* XLOG_SEG_SIZE is the size of a single WAL file. This must be a power of 2\n   and larger than XLOG_BLCKSZ (preferably, a great deal larger than\n   XLOG_BLCKSZ). Changing XLOG_SEG_SIZE requires an initdb. */\n#undef XLOG_SEG_SIZE\n\n\n\n/* Number of bits in a file offset, on hosts where this is settable. */\n#undef _FILE_OFFSET_BITS\n\n/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */\n#undef _LARGEFILE_SOURCE\n\n/* Define for large files, on AIX-style hosts. */\n#undef _LARGE_FILES\n\n/* Define to `__inline__' or `__inline' if that's what the C compiler\n   calls it, or to nothing if 'inline' is not supported under any name.  */\n#ifndef __cplusplus\n#undef inline\n#endif\n\n/* Define to the type of a signed integer type wide enough to hold a pointer,\n   if such a type exists, and if the system does not define it. */\n#undef intptr_t\n\n/* Define to empty if the C compiler does not understand signed types. */\n#undef signed\n\n/* Define to how the compiler spells `typeof'. */\n#undef typeof\n\n/* Define to the type of an unsigned integer type wide enough to hold a\n   pointer, if such a type exists, and if the system does not define it. */\n#undef uintptr_t\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/include/utils/dynamic_loader.h": "/*-------------------------------------------------------------------------\n *\n * dynamic_loader.h\n *\n *\n *\n * Portions Copyright (c) 1996-2017, PostgreSQL Global Development Group\n * Portions Copyright (c) 1994, Regents of the University of California\n *\n * src/include/utils/dynamic_loader.h\n *\n *-------------------------------------------------------------------------\n */\n#ifndef DYNAMIC_LOADER_H\n#define DYNAMIC_LOADER_H\n\n#include \"fmgr.h\"\n\n\nextern void *pg_dlopen(char *filename);\nextern PGFunction pg_dlsym(void *handle, char *funcname);\nextern void pg_dlclose(void *handle);\nextern char *pg_dlerror(void);\n\n#endif\t\t\t\t\t\t\t/* DYNAMIC_LOADER_H */\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/win32.h": "/*\n * src/backend/port/dynloader/win32.h\n */\n#ifndef PORT_PROTOS_H\n#define PORT_PROTOS_H\n\n#include \"utils/dynamic_loader.h\"\t/* pgrminclude ignore */\n\n#define pg_dlopen(f)\tdlopen((f), 1)\n#define pg_dlsym\t\tdlsym\n#define pg_dlclose\t\tdlclose\n#define pg_dlerror\t\tdlerror\n\nchar\t   *dlerror(void);\nint\t\t\tdlclose(void *handle);\nvoid\t   *dlsym(void *handle, const char *symbol);\nvoid\t   *dlopen(const char *path, int mode);\n\n#endif\t\t\t\t\t\t\t/* PORT_PROTOS_H */\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/cygwin.h": "/*-------------------------------------------------------------------------\n *\n * Dynamic loader declarations for Cygwin\n *\n * Portions Copyright (c) 1996-2017, PostgreSQL Global Development Group\n * Portions Copyright (c) 1994, Regents of the University of California\n *\n * src/backend/port/dynloader/cygwin.h\n *\n *-------------------------------------------------------------------------\n  */\n#ifndef PORT_PROTOS_H\n#define PORT_PROTOS_H\n\n#include <dlfcn.h>\n#include \"utils/dynamic_loader.h\"\t/* pgrminclude ignore */\n\n/*\n * In some older systems, the RTLD_NOW flag isn't defined and the mode\n * argument to dlopen must always be 1.  The RTLD_GLOBAL flag is wanted\n * if available, but it doesn't exist everywhere.\n * If it doesn't exist, set it to 0 so it has no effect.\n */\n#ifndef RTLD_NOW\n#define RTLD_NOW 1\n#endif\n#ifndef RTLD_GLOBAL\n#define RTLD_GLOBAL 0\n#endif\n\n#define pg_dlopen(f)\tdlopen((f), RTLD_NOW | RTLD_GLOBAL)\n#define pg_dlsym\t\tdlsym\n#define pg_dlclose\t\tdlclose\n#define pg_dlerror\t\tdlerror\n\n#endif\t\t\t\t\t\t\t/* PORT_PROTOS_H */\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/freebsd.h": "/*-------------------------------------------------------------------------\n *\n * freebsd.h\n *\t  port-specific prototypes for FreeBSD\n *\n * Portions Copyright (c) 1996-2017, PostgreSQL Global Development Group\n * Portions Copyright (c) 1994, Regents of the University of California\n *\n * src/backend/port/dynloader/freebsd.h\n *\n *-------------------------------------------------------------------------\n */\n#ifndef PORT_PROTOS_H\n#define PORT_PROTOS_H\n\n#include <nlist.h>\n#include <link.h>\n#include <dlfcn.h>\n\n#include \"utils/dynamic_loader.h\"\t/* pgrminclude ignore */\n\n/*\n * Dynamic Loader on NetBSD 1.0.\n *\n * this dynamic loader uses the system dynamic loading interface for shared\n * libraries (ie. dlopen/dlsym/dlclose). The user must specify a shared\n * library as the file to be dynamically loaded.\n *\n * agc - I know this is all a bit crufty, but it does work, is fairly\n * portable, and works (the stipulation that the d.l. function must\n * begin with an underscore is fairly tricky, and some versions of\n * NetBSD (like 1.0, and 1.0A pre June 1995) have no dlerror.)\n */\n\n/*\n * In some older systems, the RTLD_NOW flag isn't defined and the mode\n * argument to dlopen must always be 1.  The RTLD_GLOBAL flag is wanted\n * if available, but it doesn't exist everywhere.\n * If it doesn't exist, set it to 0 so it has no effect.\n */\n#ifndef RTLD_NOW\n#define RTLD_NOW 1\n#endif\n#ifndef RTLD_GLOBAL\n#define RTLD_GLOBAL 0\n#endif\n\n#define\t\t   pg_dlopen(f)    BSD44_derived_dlopen((f), RTLD_NOW | RTLD_GLOBAL)\n#define\t\t   pg_dlsym\t\t   BSD44_derived_dlsym\n#define\t\t   pg_dlclose\t   BSD44_derived_dlclose\n#define\t\t   pg_dlerror\t   BSD44_derived_dlerror\n\nchar\t   *BSD44_derived_dlerror(void);\nvoid\t   *BSD44_derived_dlopen(const char *filename, int num);\nvoid\t   *BSD44_derived_dlsym(void *handle, const char *name);\nvoid\t\tBSD44_derived_dlclose(void *handle);\n\n#endif\t\t\t\t\t\t\t/* PORT_PROTOS_H */\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/darwin.h": "/* src/backend/port/dynloader/darwin.h */\n\n#include \"fmgr.h\"\n\nvoid\t   *pg_dlopen(char *filename);\nPGFunction\tpg_dlsym(void *handle, char *funcname);\nvoid\t\tpg_dlclose(void *handle);\nchar\t   *pg_dlerror(void);\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/win32.c": "/* src/backend/port/dynloader/win32.c */\n\n#include \"postgres.h\"\n\nchar\t   *dlerror(void);\nint\t\t\tdlclose(void *handle);\nvoid\t   *dlsym(void *handle, const char *symbol);\nvoid\t   *dlopen(const char *path, int mode);\n\nstatic char last_dyn_error[512];\n\nstatic void\nset_dl_error(void)\n{\n\tDWORD\t\terr = GetLastError();\n\n\tif (FormatMessage(FORMAT_MESSAGE_IGNORE_INSERTS |\n\t\t\t\t\t  FORMAT_MESSAGE_FROM_SYSTEM,\n\t\t\t\t\t  NULL,\n\t\t\t\t\t  err,\n\t\t\t\t\t  MAKELANGID(LANG_ENGLISH, SUBLANG_DEFAULT),\n\t\t\t\t\t  last_dyn_error,\n\t\t\t\t\t  sizeof(last_dyn_error) - 1,\n\t\t\t\t\t  NULL) == 0)\n\t{\n\t\tsnprintf(last_dyn_error, sizeof(last_dyn_error) - 1,\n\t\t\t\t \"unknown error %lu\", err);\n\t}\n}\n\nchar *\ndlerror(void)\n{\n\tif (last_dyn_error[0])\n\t\treturn last_dyn_error;\n\telse\n\t\treturn NULL;\n}\n\nint\ndlclose(void *handle)\n{\n\tif (!FreeLibrary((HMODULE) handle))\n\t{\n\t\tset_dl_error();\n\t\treturn 1;\n\t}\n\tlast_dyn_error[0] = 0;\n\treturn 0;\n}\n\nvoid *\ndlsym(void *handle, const char *symbol)\n{\n\tvoid\t   *ptr;\n\n\tptr = GetProcAddress((HMODULE) handle, symbol);\n\tif (!ptr)\n\t{\n\t\tset_dl_error();\n\t\treturn NULL;\n\t}\n\tlast_dyn_error[0] = 0;\n\treturn ptr;\n}\n\nvoid *\ndlopen(const char *path, int mode)\n{\n\tHMODULE\t\th;\n\tint\t\t\tprevmode;\n\n\t/* Disable popup error messages when loading DLLs */\n\tprevmode = SetErrorMode(SEM_FAILCRITICALERRORS | SEM_NOOPENFILEERRORBOX);\n\th = LoadLibrary(path);\n\tSetErrorMode(prevmode);\n\n\tif (!h)\n\t{\n\t\tset_dl_error();\n\t\treturn NULL;\n\t}\n\tlast_dyn_error[0] = 0;\n\treturn (void *) h;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/hpux.h": "/*-------------------------------------------------------------------------\n *\n * dynloader.h\n *\t  dynamic loader for HP-UX using the shared library mechanism\n *\n * Portions Copyright (c) 1996-2017, PostgreSQL Global Development Group\n * Portions Copyright (c) 1994, Regents of the University of California\n *\n *\n * IDENTIFICATION\n *\t  src/backend/port/dynloader/hpux.h\n *\n *\tNOTES\n *\t\tall functions are defined here -- it's impossible to trace the\n *\t\tshl_* routines from the bundled HP-UX debugger.\n *\n *-------------------------------------------------------------------------\n */\n/* System includes */\n#include \"fmgr.h\"\n\nextern void *pg_dlopen(char *filename);\nextern PGFunction pg_dlsym(void *handle, char *funcname);\nextern void pg_dlclose(void *handle);\nextern char *pg_dlerror(void);\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/solaris.h": "/*-------------------------------------------------------------------------\n *\n * solaris.h\n *\t  port-specific prototypes for Solaris\n *\n *\n * Portions Copyright (c) 1996-2017, PostgreSQL Global Development Group\n * Portions Copyright (c) 1994, Regents of the University of California\n *\n * src/backend/port/dynloader/solaris.h\n *\n *-------------------------------------------------------------------------\n */\n#ifndef PORT_PROTOS_H\n#define PORT_PROTOS_H\n\n#include <dlfcn.h>\n#include \"utils/dynamic_loader.h\"\t/* pgrminclude ignore */\n\n/*\n * In some older systems, the RTLD_NOW flag isn't defined and the mode\n * argument to dlopen must always be 1.  The RTLD_GLOBAL flag is wanted\n * if available, but it doesn't exist everywhere.\n * If it doesn't exist, set it to 0 so it has no effect.\n */\n#ifndef RTLD_NOW\n#define RTLD_NOW 1\n#endif\n#ifndef RTLD_GLOBAL\n#define RTLD_GLOBAL 0\n#endif\n\n#define pg_dlopen(f)\tdlopen((f), RTLD_NOW | RTLD_GLOBAL)\n#define pg_dlsym\t\tdlsym\n#define pg_dlclose\t\tdlclose\n#define pg_dlerror\t\tdlerror\n\n#endif\t\t\t\t\t\t\t/* PORT_PROTOS_H */\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/netbsd.c": "/*\n * Portions Copyright (c) 1996-2017, PostgreSQL Global Development Group\n * Portions Copyright (c) 1990 The Regents of the University of California.\n * All rights reserved.\n *\n * src/backend/port/dynloader/netbsd.c\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *\t  notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *\t  notice, this list of conditions and the following disclaimer in the\n *\t  documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the University nor the names of its contributors\n *\t  may be used to endorse or promote products derived from this software\n *\t  without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n\n#if defined(LIBC_SCCS) && !defined(lint)\nstatic char sccsid[] = \"@(#)dl.c\t5.4 (Berkeley) 2/23/91\";\n#endif\t\t\t\t\t\t\t/* LIBC_SCCS and not lint */\n\n#include \"postgres.h\"\n\n#include <nlist.h>\n#include <link.h>\n#include <dlfcn.h>\n\n#include \"dynloader.h\"\n\nstatic char error_message[BUFSIZ];\n\nchar *\nBSD44_derived_dlerror(void)\n{\n\tstatic char ret[BUFSIZ];\n\n\tstrcpy(ret, error_message);\n\terror_message[0] = 0;\n\treturn (ret[0] == 0) ? NULL : ret;\n}\n\nvoid *\nBSD44_derived_dlopen(const char *file, int num)\n{\n#if !defined(HAVE_DLOPEN)\n\tsnprintf(error_message, sizeof(error_message),\n\t\t\t \"dlopen (%s) not supported\", file);\n\treturn NULL;\n#else\n\tvoid\t   *vp;\n\n\tif ((vp = dlopen((char *) file, num)) == NULL)\n\t\tsnprintf(error_message, sizeof(error_message),\n\t\t\t\t \"dlopen (%s) failed: %s\", file, dlerror());\n\treturn vp;\n#endif\n}\n\nvoid *\nBSD44_derived_dlsym(void *handle, const char *name)\n{\n#if !defined(HAVE_DLOPEN)\n\tsnprintf(error_message, sizeof(error_message),\n\t\t\t \"dlsym (%s) failed\", name);\n\treturn NULL;\n#else\n\tvoid\t   *vp;\n\n#ifndef __ELF__\n\tchar\t\tbuf[BUFSIZ];\n\n\tif (*name != '_')\n\t{\n\t\tsnprintf(buf, sizeof(buf), \"_%s\", name);\n\t\tname = buf;\n\t}\n#endif\t\t\t\t\t\t\t/* !__ELF__ */\n\tif ((vp = dlsym(handle, (char *) name)) == NULL)\n\t\tsnprintf(error_message, sizeof(error_message),\n\t\t\t\t \"dlsym (%s) failed\", name);\n\treturn vp;\n#endif\n}\n\nvoid\nBSD44_derived_dlclose(void *handle)\n{\n#if defined(HAVE_DLOPEN)\n\tdlclose(handle);\n#endif\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/aix.h": "/*-------------------------------------------------------------------------\n *\n * aix.h\n *\t  prototypes for AIX-specific routines\n *\n *\n * Portions Copyright (c) 1996-2017, PostgreSQL Global Development Group\n * Portions Copyright (c) 1994, Regents of the University of California\n *\n * src/backend/port/dynloader/aix.h\n *\n *-------------------------------------------------------------------------\n */\n\n#ifndef PORT_PROTOS_H\n#define PORT_PROTOS_H\n\n#include <dlfcn.h>\n#include \"utils/dynamic_loader.h\"\t/* pgrminclude ignore */\n\n/*\n * In some older systems, the RTLD_NOW flag isn't defined and the mode\n * argument to dlopen must always be 1.  The RTLD_GLOBAL flag is wanted\n * if available, but it doesn't exist everywhere.\n * If it doesn't exist, set it to 0 so it has no effect.\n */\n#ifndef RTLD_NOW\n#define RTLD_NOW 1\n#endif\n#ifndef RTLD_GLOBAL\n#define RTLD_GLOBAL 0\n#endif\n\n#define  pg_dlopen(f)\tdlopen((f), RTLD_NOW | RTLD_GLOBAL)\n#define  pg_dlsym(h, f) ((PGFunction) dlsym(h, f))\n#define  pg_dlclose(h)\tdlclose(h)\n#define  pg_dlerror()\tdlerror()\n\n#endif\t\t\t\t\t\t\t/* PORT_PROTOS_H */\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/netbsd.h": "/*-------------------------------------------------------------------------\n *\n * netbsd.h\n *\t  port-specific prototypes for NetBSD\n *\n *\n * Portions Copyright (c) 1996-2017, PostgreSQL Global Development Group\n * Portions Copyright (c) 1994, Regents of the University of California\n *\n * src/backend/port/dynloader/netbsd.h\n *\n *-------------------------------------------------------------------------\n */\n#ifndef PORT_PROTOS_H\n#define PORT_PROTOS_H\n\n#include <nlist.h>\n#include <link.h>\n#include <dlfcn.h>\n\n#include \"utils/dynamic_loader.h\"\t/* pgrminclude ignore */\n\n/*\n * Dynamic Loader on NetBSD 1.0.\n *\n * this dynamic loader uses the system dynamic loading interface for shared\n * libraries (ie. dlopen/dlsym/dlclose). The user must specify a shared\n * library as the file to be dynamically loaded.\n *\n * agc - I know this is all a bit crufty, but it does work, is fairly\n * portable, and works (the stipulation that the d.l. function must\n * begin with an underscore is fairly tricky, and some versions of\n * NetBSD (like 1.0, and 1.0A pre June 1995) have no dlerror.)\n */\n\n/*\n * In some older systems, the RTLD_NOW flag isn't defined and the mode\n * argument to dlopen must always be 1.  The RTLD_GLOBAL flag is wanted\n * if available, but it doesn't exist everywhere.\n * If it doesn't exist, set it to 0 so it has no effect.\n */\n#ifndef RTLD_NOW\n#define RTLD_NOW 1\n#endif\n#ifndef RTLD_GLOBAL\n#define RTLD_GLOBAL 0\n#endif\n\n#define\t\t   pg_dlopen(f)    BSD44_derived_dlopen((f), RTLD_NOW | RTLD_GLOBAL)\n#define\t\t   pg_dlsym\t\t   BSD44_derived_dlsym\n#define\t\t   pg_dlclose\t   BSD44_derived_dlclose\n#define\t\t   pg_dlerror\t   BSD44_derived_dlerror\n\nchar\t   *BSD44_derived_dlerror(void);\nvoid\t   *BSD44_derived_dlopen(const char *filename, int num);\nvoid\t   *BSD44_derived_dlsym(void *handle, const char *name);\nvoid\t\tBSD44_derived_dlclose(void *handle);\n\n#endif\t\t\t\t\t\t\t/* PORT_PROTOS_H */\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/openbsd.h": "/*-------------------------------------------------------------------------\n *\n * openbsd.h\n *\t  port-specific prototypes for OpenBSD\n *\n * Portions Copyright (c) 1996-2017, PostgreSQL Global Development Group\n * Portions Copyright (c) 1994, Regents of the University of California\n *\n * src/backend/port/dynloader/openbsd.h\n *\n *-------------------------------------------------------------------------\n */\n#ifndef PORT_PROTOS_H\n#define PORT_PROTOS_H\n\n#include <nlist.h>\n#include <link.h>\n#include <dlfcn.h>\n\n#include \"utils/dynamic_loader.h\"\t/* pgrminclude ignore */\n\n/*\n * Dynamic Loader on NetBSD 1.0.\n *\n * this dynamic loader uses the system dynamic loading interface for shared\n * libraries (ie. dlopen/dlsym/dlclose). The user must specify a shared\n * library as the file to be dynamically loaded.\n *\n * agc - I know this is all a bit crufty, but it does work, is fairly\n * portable, and works (the stipulation that the d.l. function must\n * begin with an underscore is fairly tricky, and some versions of\n * NetBSD (like 1.0, and 1.0A pre June 1995) have no dlerror.)\n */\n\n/*\n * In some older systems, the RTLD_NOW flag isn't defined and the mode\n * argument to dlopen must always be 1.  The RTLD_GLOBAL flag is wanted\n * if available, but it doesn't exist everywhere.\n * If it doesn't exist, set it to 0 so it has no effect.\n */\n#ifndef RTLD_NOW\n#define RTLD_NOW 1\n#endif\n#ifndef RTLD_GLOBAL\n#define RTLD_GLOBAL 0\n#endif\n\n#define\t\t   pg_dlopen(f)    BSD44_derived_dlopen((f), RTLD_NOW | RTLD_GLOBAL)\n#define\t\t   pg_dlsym\t\t   BSD44_derived_dlsym\n#define\t\t   pg_dlclose\t   BSD44_derived_dlclose\n#define\t\t   pg_dlerror\t   BSD44_derived_dlerror\n\nchar\t   *BSD44_derived_dlerror(void);\nvoid\t   *BSD44_derived_dlopen(const char *filename, int num);\nvoid\t   *BSD44_derived_dlsym(void *handle, const char *name);\nvoid\t\tBSD44_derived_dlclose(void *handle);\n\n#endif\t\t\t\t\t\t\t/* PORT_PROTOS_H */\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/linux.c": "/*-------------------------------------------------------------------------\n *\n * linux.c\n *\t  Dynamic Loader for Postgres for Linux, generated from those for\n *\t  Ultrix.\n *\n *\t  You need to install the dld library on your Linux system!\n *\n * Portions Copyright (c) 1996-2017, PostgreSQL Global Development Group\n * Portions Copyright (c) 1994, Regents of the University of California\n *\n *\n * IDENTIFICATION\n *\t  src/backend/port/dynloader/linux.c\n *\n *-------------------------------------------------------------------------\n */\n\n#include \"postgres.h\"\n\n#ifdef HAVE_DLD_H\n#include <dld.h>\n#endif\n\n#include \"dynloader.h\"\n#include \"miscadmin.h\"\n\n\n#ifndef HAVE_DLOPEN\n\nvoid *\npg_dlopen(char *filename)\n{\n#ifndef HAVE_DLD_H\n\telog(ERROR, \"dynamic load not supported\");\n\treturn NULL;\n#else\n\tstatic int\tdl_initialized = 0;\n\n\t/*\n\t * initializes the dynamic loader with the executable's pathname. (only\n\t * needs to do this the first time pg_dlopen is called.)\n\t */\n\tif (!dl_initialized)\n\t{\n\t\tif (dld_init(dld_find_executable(my_exec_path)))\n\t\t\treturn NULL;\n\n\t\t/*\n\t\t * if there are undefined symbols, we want dl to search from the\n\t\t * following libraries also.\n\t\t */\n\t\tdl_initialized = 1;\n\t}\n\n\t/*\n\t * link the file, then check for undefined symbols!\n\t */\n\tif (dld_link(filename))\n\t\treturn NULL;\n\n\t/*\n\t * If undefined symbols: try to link with the C and math libraries! This\n\t * could be smarter, if the dynamic linker was able to handle shared libs!\n\t */\n\tif (dld_undefined_sym_count > 0)\n\t{\n\t\tif (dld_link(\"/usr/lib/libc.a\"))\n\t\t{\n\t\t\telog(WARNING, \"could not link C library\");\n\t\t\treturn NULL;\n\t\t}\n\t\tif (dld_undefined_sym_count > 0)\n\t\t{\n\t\t\tif (dld_link(\"/usr/lib/libm.a\"))\n\t\t\t{\n\t\t\t\telog(WARNING, \"could not link math library\");\n\t\t\t\treturn NULL;\n\t\t\t}\n\t\t\tif (dld_undefined_sym_count > 0)\n\t\t\t{\n\t\t\t\tint\t\t\tcount = dld_undefined_sym_count;\n\t\t\t\tchar\t  **list = dld_list_undefined_sym();\n\n\t\t\t\t/* list the undefined symbols, if any */\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\telog(WARNING, \"\\\"%s\\\" is undefined\", *list);\n\t\t\t\t\tlist++;\n\t\t\t\t\tcount--;\n\t\t\t\t} while (count > 0);\n\n\t\t\t\tdld_unlink_by_file(filename, 1);\n\t\t\t\treturn NULL;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (void *) strdup(filename);\n#endif\n}\n\nPGFunction\npg_dlsym(void *handle, char *funcname)\n{\n#ifndef HAVE_DLD_H\n\treturn NULL;\n#else\n\treturn (PGFunction) dld_get_func((funcname));\n#endif\n}\n\nvoid\npg_dlclose(void *handle)\n{\n#ifndef HAVE_DLD_H\n#else\n\tdld_unlink_by_file(handle, 1);\n\tfree(handle);\n#endif\n}\n\nchar *\npg_dlerror(void)\n{\n#ifndef HAVE_DLD_H\n\treturn \"dynaloader unsupported\";\n#else\n\treturn dld_strerror(dld_errno);\n#endif\n}\n\n#endif\t\t\t\t\t\t\t/* !HAVE_DLOPEN */\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/freebsd.c": "/*\n * Portions Copyright (c) 1996-2017, PostgreSQL Global Development Group\n * Portions Copyright (c) 1990 The Regents of the University of California.\n * All rights reserved.\n *\n * src/backend/port/dynloader/freebsd.c\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *\t  notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *\t  notice, this list of conditions and the following disclaimer in the\n *\t  documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the University nor the names of its contributors\n *\t  may be used to endorse or promote products derived from this software\n *\t  without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n\n#if defined(LIBC_SCCS) && !defined(lint)\nstatic char sccsid[] = \"@(#)dl.c\t5.4 (Berkeley) 2/23/91\";\n#endif\t\t\t\t\t\t\t/* LIBC_SCCS and not lint */\n\n#include \"postgres.h\"\n\n#include <nlist.h>\n#include <link.h>\n#include <dlfcn.h>\n\n#include \"dynloader.h\"\n\nstatic char error_message[BUFSIZ];\n\nchar *\nBSD44_derived_dlerror(void)\n{\n\tstatic char ret[BUFSIZ];\n\n\tstrcpy(ret, error_message);\n\terror_message[0] = 0;\n\treturn (ret[0] == 0) ? NULL : ret;\n}\n\nvoid *\nBSD44_derived_dlopen(const char *file, int num)\n{\n#if !defined(HAVE_DLOPEN)\n\tsnprintf(error_message, sizeof(error_message),\n\t\t\t \"dlopen (%s) not supported\", file);\n\treturn NULL;\n#else\n\tvoid\t   *vp;\n\n\tif ((vp = dlopen((char *) file, num)) == NULL)\n\t\tsnprintf(error_message, sizeof(error_message),\n\t\t\t\t \"dlopen (%s) failed: %s\", file, dlerror());\n\treturn vp;\n#endif\n}\n\nvoid *\nBSD44_derived_dlsym(void *handle, const char *name)\n{\n#if !defined(HAVE_DLOPEN)\n\tsnprintf(error_message, sizeof(error_message),\n\t\t\t \"dlsym (%s) failed\", name);\n\treturn NULL;\n#else\n\tvoid\t   *vp;\n\n#ifndef __ELF__\n\tchar\t\tbuf[BUFSIZ];\n\n\tif (*name != '_')\n\t{\n\t\tsnprintf(buf, sizeof(buf), \"_%s\", name);\n\t\tname = buf;\n\t}\n#endif\t\t\t\t\t\t\t/* !__ELF__ */\n\tif ((vp = dlsym(handle, (char *) name)) == NULL)\n\t\tsnprintf(error_message, sizeof(error_message),\n\t\t\t\t \"dlsym (%s) failed\", name);\n\treturn vp;\n#endif\n}\n\nvoid\nBSD44_derived_dlclose(void *handle)\n{\n#if defined(HAVE_DLOPEN)\n\tdlclose(handle);\n#endif\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/openbsd.c": "/*\n * Portions Copyright (c) 1996-2017, PostgreSQL Global Development Group\n * Portions Copyright (c) 1990 The Regents of the University of California.\n * All rights reserved.\n *\n * src/backend/port/dynloader/openbsd.c\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *\t  notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *\t  notice, this list of conditions and the following disclaimer in the\n *\t  documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the University nor the names of its contributors\n *\t  may be used to endorse or promote products derived from this software\n *\t  without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n\n#if defined(LIBC_SCCS) && !defined(lint)\nstatic char sccsid[] = \"@(#)dl.c\t5.4 (Berkeley) 2/23/91\";\n#endif\t\t\t\t\t\t\t/* LIBC_SCCS and not lint */\n\n#include \"postgres.h\"\n\n#include <nlist.h>\n#include <link.h>\n#include <dlfcn.h>\n\n#include \"dynloader.h\"\n\nstatic char error_message[BUFSIZ];\n\nchar *\nBSD44_derived_dlerror(void)\n{\n\tstatic char ret[BUFSIZ];\n\n\tstrcpy(ret, error_message);\n\terror_message[0] = 0;\n\treturn (ret[0] == 0) ? NULL : ret;\n}\n\nvoid *\nBSD44_derived_dlopen(const char *file, int num)\n{\n#if !defined(HAVE_DLOPEN)\n\tsnprintf(error_message, sizeof(error_message),\n\t\t\t \"dlopen (%s) not supported\", file);\n\treturn NULL;\n#else\n\tvoid\t   *vp;\n\n\tif ((vp = dlopen((char *) file, num)) == NULL)\n\t\tsnprintf(error_message, sizeof(error_message),\n\t\t\t\t \"dlopen (%s) failed: %s\", file, dlerror());\n\treturn vp;\n#endif\n}\n\nvoid *\nBSD44_derived_dlsym(void *handle, const char *name)\n{\n#if !defined(HAVE_DLOPEN)\n\tsnprintf(error_message, sizeof(error_message),\n\t\t\t \"dlsym (%s) failed\", name);\n\treturn NULL;\n#else\n\tvoid\t   *vp;\n\n#ifndef __ELF__\n\tchar\t\tbuf[BUFSIZ];\n\n\tif (*name != '_')\n\t{\n\t\tsnprintf(buf, sizeof(buf), \"_%s\", name);\n\t\tname = buf;\n\t}\n#endif\t\t\t\t\t\t\t/* !__ELF__ */\n\tif ((vp = dlsym(handle, (char *) name)) == NULL)\n\t\tsnprintf(error_message, sizeof(error_message),\n\t\t\t\t \"dlsym (%s) failed\", name);\n\treturn vp;\n#endif\n}\n\nvoid\nBSD44_derived_dlclose(void *handle)\n{\n#if defined(HAVE_DLOPEN)\n\tdlclose(handle);\n#endif\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/darwin.c": "/*\n * Dynamic loading support for macOS (Darwin)\n *\n * If dlopen() is available (Darwin 10.3 and later), we just use it.\n * Otherwise we emulate it with the older, now deprecated, NSLinkModule API.\n *\n * src/backend/port/dynloader/darwin.c\n */\n#include \"postgres.h\"\n\n#ifdef HAVE_DLOPEN\n#include <dlfcn.h>\n#else\n#include <mach-o/dyld.h>\n#endif\n\n#include \"dynloader.h\"\n\n\n#ifdef HAVE_DLOPEN\n\nvoid *\npg_dlopen(char *filename)\n{\n\treturn dlopen(filename, RTLD_NOW | RTLD_GLOBAL);\n}\n\nvoid\npg_dlclose(void *handle)\n{\n\tdlclose(handle);\n}\n\nPGFunction\npg_dlsym(void *handle, char *funcname)\n{\n\t/* Do not prepend an underscore: see dlopen(3) */\n\treturn dlsym(handle, funcname);\n}\n\nchar *\npg_dlerror(void)\n{\n\treturn dlerror();\n}\n#else\t\t\t\t\t\t\t/* !HAVE_DLOPEN */\n\n/*\n * These routines were taken from the Apache source, but were made\n * available with a PostgreSQL-compatible license.  Kudos Wilfredo\n * S\u00e1nchez <wsanchez@apple.com>.\n */\n\nstatic NSObjectFileImageReturnCode cofiff_result = NSObjectFileImageFailure;\n\nvoid *\npg_dlopen(char *filename)\n{\n\tNSObjectFileImage image;\n\n\tcofiff_result = NSCreateObjectFileImageFromFile(filename, &image);\n\tif (cofiff_result != NSObjectFileImageSuccess)\n\t\treturn NULL;\n\treturn NSLinkModule(image, filename,\n\t\t\t\t\t\tNSLINKMODULE_OPTION_BINDNOW |\n\t\t\t\t\t\tNSLINKMODULE_OPTION_RETURN_ON_ERROR);\n}\n\nvoid\npg_dlclose(void *handle)\n{\n\tNSUnLinkModule(handle, FALSE);\n}\n\nPGFunction\npg_dlsym(void *handle, char *funcname)\n{\n\tNSSymbol symbol;\n\tchar\t   *symname = (char *) malloc(strlen(funcname) + 2);\n\n\tif (!symname)\n\t\treturn NULL;\n\n\tsprintf(symname, \"_%s\", funcname);\n\tif (NSIsSymbolNameDefined(symname))\n\t{\n\t\tsymbol = NSLookupAndBindSymbol(symname);\n\n\t\tfree(symname);\n\t\treturn (PGFunction) NSAddressOfSymbol(symbol);\n\t}\n\telse\n\t{\n\t\tfree(symname);\n\t\treturn NULL;\n\t}\n}\n\nchar *\npg_dlerror(void)\n{\n\tNSLinkEditErrors c;\n\tint\t\t\terrorNumber;\n\tconst char *fileName;\n\tconst char *errorString = NULL;\n\n\tswitch (cofiff_result)\n\t{\n\t\tcase NSObjectFileImageSuccess:\n\t\t\t/* must have failed in NSLinkModule */\n\t\t\tNSLinkEditError(&c, &errorNumber, &fileName, &errorString);\n\t\t\tif (errorString == NULL || *errorString == '\\0')\n\t\t\t\terrorString = \"unknown link-edit failure\";\n\t\t\tbreak;\n\t\tcase NSObjectFileImageFailure:\n\t\t\terrorString = \"failed to open object file\";\n\t\t\tbreak;\n\t\tcase NSObjectFileImageInappropriateFile:\n\t\t\terrorString = \"inappropriate object file\";\n\t\t\tbreak;\n\t\tcase NSObjectFileImageArch:\n\t\t\terrorString = \"object file is for wrong architecture\";\n\t\t\tbreak;\n\t\tcase NSObjectFileImageFormat:\n\t\t\terrorString = \"object file has wrong format\";\n\t\t\tbreak;\n\t\tcase NSObjectFileImageAccess:\n\t\t\terrorString = \"insufficient permissions for object file\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\terrorString = \"unknown failure to open object file\";\n\t\t\tbreak;\n\t}\n\n\treturn (char *) errorString;\n}\n\n#endif\t\t\t\t\t\t\t/* HAVE_DLOPEN */\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/hpux.c": "/*-------------------------------------------------------------------------\n *\n * dynloader.c\n *\t  dynamic loader for HP-UX using the shared library mechanism\n *\n * Portions Copyright (c) 1996-2017, PostgreSQL Global Development Group\n * Portions Copyright (c) 1994, Regents of the University of California\n *\n *\n * IDENTIFICATION\n *\t  src/backend/port/dynloader/hpux.c\n *\n *\tNOTES\n *\t\tall functions are defined here -- it's impossible to trace the\n *\t\tshl_* routines from the bundled HP-UX debugger.\n *\n *-------------------------------------------------------------------------\n */\n#include \"postgres.h\"\n\n/* System includes */\n#include <a.out.h>\n#include <dl.h>\n\n#include \"dynloader.h\"\n#include \"utils/dynamic_loader.h\"\n\nvoid *\npg_dlopen(char *filename)\n{\n\t/*\n\t * Use BIND_IMMEDIATE so that undefined symbols cause a failure return\n\t * from shl_load(), rather than an abort() later on when we attempt to\n\t * call the library!\n\t */\n\tshl_t\t\thandle = shl_load(filename,\n\t\t\t\t\t\t\t\t  BIND_IMMEDIATE | BIND_VERBOSE | DYNAMIC_PATH,\n\t\t\t\t\t\t\t\t  0L);\n\n\treturn (void *) handle;\n}\n\nPGFunction\npg_dlsym(void *handle, char *funcname)\n{\n\tPGFunction\tf;\n\n\tif (shl_findsym((shl_t *) & handle, funcname, TYPE_PROCEDURE, &f) == -1)\n\t\tf = (PGFunction) NULL;\n\treturn f;\n}\n\nvoid\npg_dlclose(void *handle)\n{\n\tshl_unload((shl_t) handle);\n}\n\nchar *\npg_dlerror(void)\n{\n\tstatic char errmsg[] = \"shl_load failed\";\n\n\tif (errno)\n\t\treturn strerror(errno);\n\n\treturn errmsg;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/port/dynloader/linux.h": "/*-------------------------------------------------------------------------\n *\n * linux.h\n *\t\tPort-specific prototypes for Linux\n *\n *\n * Portions Copyright (c) 1996-2017, PostgreSQL Global Development Group\n * Portions Copyright (c) 1994, Regents of the University of California\n *\n * src/backend/port/dynloader/linux.h\n *\n *-------------------------------------------------------------------------\n */\n#ifndef PORT_PROTOS_H\n#define PORT_PROTOS_H\n\n#include \"utils/dynamic_loader.h\"\t/* pgrminclude ignore */\n#ifdef HAVE_DLOPEN\n#include <dlfcn.h>\n#endif\n\n\n#ifdef HAVE_DLOPEN\n\n/*\n * In some older systems, the RTLD_NOW flag isn't defined and the mode\n * argument to dlopen must always be 1.  The RTLD_GLOBAL flag is wanted\n * if available, but it doesn't exist everywhere.\n * If it doesn't exist, set it to 0 so it has no effect.\n */\n#ifndef RTLD_NOW\n#define RTLD_NOW 1\n#endif\n#ifndef RTLD_GLOBAL\n#define RTLD_GLOBAL 0\n#endif\n\n#define pg_dlopen(f)\tdlopen((f), RTLD_NOW | RTLD_GLOBAL)\n#define pg_dlsym\t\tdlsym\n#define pg_dlclose\t\tdlclose\n#define pg_dlerror\t\tdlerror\n#endif\t\t\t\t\t\t\t/* HAVE_DLOPEN */\n\n#endif\t\t\t\t\t\t\t/* PORT_PROTOS_H */\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/utils/fmgr/dfmgr.c": "/*-------------------------------------------------------------------------\n *\n * dfmgr.c\n *\t  Dynamic function manager code.\n *\n * Portions Copyright (c) 1996-2017, PostgreSQL Global Development Group\n * Portions Copyright (c) 1994, Regents of the University of California\n *\n *\n * IDENTIFICATION\n *\t  src/backend/utils/fmgr/dfmgr.c\n *\n *-------------------------------------------------------------------------\n */\n#include \"postgres.h\"\n\n#include <sys/stat.h>\n\n#include \"dynloader.h\"\n#include \"lib/stringinfo.h\"\n#include \"miscadmin.h\"\n#include \"storage/shmem.h\"\n#include \"utils/dynamic_loader.h\"\n#include \"utils/hsearch.h\"\n\n\n/* signatures for PostgreSQL-specific library init/fini functions */\ntypedef void (*PG_init_t) (void);\ntypedef void (*PG_fini_t) (void);\n\n/* hashtable entry for rendezvous variables */\ntypedef struct\n{\n\tchar\t\tvarName[NAMEDATALEN];\t/* hash key (must be first) */\n\tvoid\t   *varValue;\n} rendezvousHashEntry;\n\n/*\n * List of dynamically loaded files (kept in malloc'd memory).\n */\n\ntypedef struct df_files\n{\n\tstruct df_files *next;\t\t/* List link */\n\tdev_t\t\tdevice;\t\t\t/* Device file is on */\n#ifndef WIN32\t\t\t\t\t/* ensures we never again depend on this under\n\t\t\t\t\t\t\t\t * win32 */\n\tino_t\t\tinode;\t\t\t/* Inode number of file */\n#endif\n\tvoid\t   *handle;\t\t\t/* a handle for pg_dl* functions */\n\tchar\t\tfilename[FLEXIBLE_ARRAY_MEMBER];\t/* Full pathname of file */\n} DynamicFileList;\n\nstatic DynamicFileList *file_list = NULL;\nstatic DynamicFileList *file_tail = NULL;\n\n/* stat() call under Win32 returns an st_ino field, but it has no meaning */\n#ifndef WIN32\n#define SAME_INODE(A,B) ((A).st_ino == (B).inode && (A).st_dev == (B).device)\n#else\n#define SAME_INODE(A,B) false\n#endif\n\nchar\t   *Dynamic_library_path;\n\nstatic void *internal_load_library(const char *libname);\nstatic void incompatible_module_error(const char *libname,\n\t\t\t\t\t\t  const Pg_magic_struct *module_magic_data) pg_attribute_noreturn();\nstatic void internal_unload_library(const char *libname);\nstatic bool file_exists(const char *name);\nstatic char *expand_dynamic_library_name(const char *name);\nstatic void check_restricted_library_name(const char *name);\nstatic char *substitute_libpath_macro(const char *name);\nstatic char *find_in_dynamic_libpath(const char *basename);\n\n/* Magic structure that module needs to match to be accepted */\nstatic const Pg_magic_struct magic_data = PG_MODULE_MAGIC_DATA;\n\n\n/*\n * Load the specified dynamic-link library file, and look for a function\n * named funcname in it.\n *\n * If the function is not found, we raise an error if signalNotFound is true,\n * else return (PGFunction) NULL.  Note that errors in loading the library\n * will provoke ereport() regardless of signalNotFound.\n *\n * If filehandle is not NULL, then *filehandle will be set to a handle\n * identifying the library file.  The filehandle can be used with\n * lookup_external_function to lookup additional functions in the same file\n * at less cost than repeating load_external_function.\n */\nPGFunction\nload_external_function(const char *filename, const char *funcname,\n\t\t\t\t\t   bool signalNotFound, void **filehandle)\n{\n\tchar\t   *fullname;\n\tvoid\t   *lib_handle;\n\tPGFunction\tretval;\n\n\t/* Expand the possibly-abbreviated filename to an exact path name */\n\tfullname = expand_dynamic_library_name(filename);\n\n\t/* Load the shared library, unless we already did */\n\tlib_handle = internal_load_library(fullname);\n\n\t/* Return handle if caller wants it */\n\tif (filehandle)\n\t\t*filehandle = lib_handle;\n\n\t/*\n\t * Look up the function within the library.  According to POSIX dlsym()\n\t * should declare its second argument as \"const char *\", but older\n\t * platforms might not, so for the time being we just cast away const.\n\t */\n\tretval = (PGFunction) pg_dlsym(lib_handle, (char *) funcname);\n\n\tif (retval == NULL && signalNotFound)\n\t\tereport(ERROR,\n\t\t\t\t(errcode(ERRCODE_UNDEFINED_FUNCTION),\n\t\t\t\t errmsg(\"could not find function \\\"%s\\\" in file \\\"%s\\\"\",\n\t\t\t\t\t\tfuncname, fullname)));\n\n\tpfree(fullname);\n\treturn retval;\n}\n\n/*\n * This function loads a shlib file without looking up any particular\n * function in it.  If the same shlib has previously been loaded,\n * unload and reload it.\n *\n * When 'restricted' is true, only libraries in the presumed-secure\n * directory $libdir/plugins may be referenced.\n */\nvoid\nload_file(const char *filename, bool restricted)\n{\n\tchar\t   *fullname;\n\n\t/* Apply security restriction if requested */\n\tif (restricted)\n\t\tcheck_restricted_library_name(filename);\n\n\t/* Expand the possibly-abbreviated filename to an exact path name */\n\tfullname = expand_dynamic_library_name(filename);\n\n\t/* Unload the library if currently loaded */\n\tinternal_unload_library(fullname);\n\n\t/* Load the shared library */\n\t(void) internal_load_library(fullname);\n\n\tpfree(fullname);\n}\n\n/*\n * Lookup a function whose library file is already loaded.\n * Return (PGFunction) NULL if not found.\n */\nPGFunction\nlookup_external_function(void *filehandle, const char *funcname)\n{\n\t/* as above, cast away const for the time being */\n\treturn (PGFunction) pg_dlsym(filehandle, (char *) funcname);\n}\n\n\n/*\n * Load the specified dynamic-link library file, unless it already is\n * loaded.  Return the pg_dl* handle for the file.\n *\n * Note: libname is expected to be an exact name for the library file.\n */\nstatic void *\ninternal_load_library(const char *libname)\n{\n\tDynamicFileList *file_scanner;\n\tPGModuleMagicFunction magic_func;\n\tchar\t   *load_error;\n\tstruct stat stat_buf;\n\tPG_init_t\tPG_init;\n\n\t/*\n\t * Scan the list of loaded FILES to see if the file has been loaded.\n\t */\n\tfor (file_scanner = file_list;\n\t\t file_scanner != NULL &&\n\t\t strcmp(libname, file_scanner->filename) != 0;\n\t\t file_scanner = file_scanner->next)\n\t\t;\n\n\tif (file_scanner == NULL)\n\t{\n\t\t/*\n\t\t * Check for same files - different paths (ie, symlink or link)\n\t\t */\n\t\tif (stat(libname, &stat_buf) == -1)\n\t\t\tereport(ERROR,\n\t\t\t\t\t(errcode_for_file_access(),\n\t\t\t\t\t errmsg(\"could not access file \\\"%s\\\": %m\",\n\t\t\t\t\t\t\tlibname)));\n\n\t\tfor (file_scanner = file_list;\n\t\t\t file_scanner != NULL &&\n\t\t\t !SAME_INODE(stat_buf, *file_scanner);\n\t\t\t file_scanner = file_scanner->next)\n\t\t\t;\n\t}\n\n\tif (file_scanner == NULL)\n\t{\n\t\t/*\n\t\t * File not loaded yet.\n\t\t */\n\t\tfile_scanner = (DynamicFileList *)\n\t\t\tmalloc(offsetof(DynamicFileList, filename) + strlen(libname) + 1);\n\t\tif (file_scanner == NULL)\n\t\t\tereport(ERROR,\n\t\t\t\t\t(errcode(ERRCODE_OUT_OF_MEMORY),\n\t\t\t\t\t errmsg(\"out of memory\")));\n\n\t\tMemSet(file_scanner, 0, offsetof(DynamicFileList, filename));\n\t\tstrcpy(file_scanner->filename, libname);\n\t\tfile_scanner->device = stat_buf.st_dev;\n#ifndef WIN32\n\t\tfile_scanner->inode = stat_buf.st_ino;\n#endif\n\t\tfile_scanner->next = NULL;\n\n\t\tfile_scanner->handle = pg_dlopen(file_scanner->filename);\n\t\tif (file_scanner->handle == NULL)\n\t\t{\n\t\t\tload_error = (char *) pg_dlerror();\n\t\t\tfree((char *) file_scanner);\n\t\t\t/* errcode_for_file_access might not be appropriate here? */\n\t\t\tereport(ERROR,\n\t\t\t\t\t(errcode_for_file_access(),\n\t\t\t\t\t errmsg(\"could not load library \\\"%s\\\": %s\",\n\t\t\t\t\t\t\tlibname, load_error)));\n\t\t}\n\n\t\t/* Check the magic function to determine compatibility */\n\t\tmagic_func = (PGModuleMagicFunction)\n\t\t\tpg_dlsym(file_scanner->handle, PG_MAGIC_FUNCTION_NAME_STRING);\n\t\tif (magic_func)\n\t\t{\n\t\t\tconst Pg_magic_struct *magic_data_ptr = (*magic_func) ();\n\n\t\t\tif (magic_data_ptr->len != magic_data.len ||\n\t\t\t\tmemcmp(magic_data_ptr, &magic_data, magic_data.len) != 0)\n\t\t\t{\n\t\t\t\t/* copy data block before unlinking library */\n\t\t\t\tPg_magic_struct module_magic_data = *magic_data_ptr;\n\n\t\t\t\t/* try to unlink library */\n\t\t\t\tpg_dlclose(file_scanner->handle);\n\t\t\t\tfree((char *) file_scanner);\n\n\t\t\t\t/* issue suitable complaint */\n\t\t\t\tincompatible_module_error(libname, &module_magic_data);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* try to unlink library */\n\t\t\tpg_dlclose(file_scanner->handle);\n\t\t\tfree((char *) file_scanner);\n\t\t\t/* complain */\n\t\t\tereport(ERROR,\n\t\t\t\t\t(errmsg(\"incompatible library \\\"%s\\\": missing magic block\",\n\t\t\t\t\t\t\tlibname),\n\t\t\t\t\t errhint(\"Extension libraries are required to use the PG_MODULE_MAGIC macro.\")));\n\t\t}\n\n\t\t/*\n\t\t * If the library has a _PG_init() function, call it.\n\t\t */\n\t\tPG_init = (PG_init_t) pg_dlsym(file_scanner->handle, \"_PG_init\");\n\t\tif (PG_init)\n\t\t\t(*PG_init) ();\n\n\t\t/* OK to link it into list */\n\t\tif (file_list == NULL)\n\t\t\tfile_list = file_scanner;\n\t\telse\n\t\t\tfile_tail->next = file_scanner;\n\t\tfile_tail = file_scanner;\n\t}\n\n\treturn file_scanner->handle;\n}\n\n/*\n * Report a suitable error for an incompatible magic block.\n */\nstatic void\nincompatible_module_error(const char *libname,\n\t\t\t\t\t\t  const Pg_magic_struct *module_magic_data)\n{\n\tStringInfoData details;\n\n\t/*\n\t * If the version doesn't match, just report that, because the rest of the\n\t * block might not even have the fields we expect.\n\t */\n\tif (magic_data.version != module_magic_data->version)\n\t{\n\t\tchar\t\tlibrary_version[32];\n\n\t\tif (module_magic_data->version >= 1000)\n\t\t\tsnprintf(library_version, sizeof(library_version), \"%d\",\n\t\t\t\t\t module_magic_data->version / 100);\n\t\telse\n\t\t\tsnprintf(library_version, sizeof(library_version), \"%d.%d\",\n\t\t\t\t\t module_magic_data->version / 100,\n\t\t\t\t\t module_magic_data->version % 100);\n\t\tereport(ERROR,\n\t\t\t\t(errmsg(\"incompatible library \\\"%s\\\": version mismatch\",\n\t\t\t\t\t\tlibname),\n\t\t\t\t errdetail(\"Server is version %d, library is version %s.\",\n\t\t\t\t\t\t   magic_data.version / 100, library_version)));\n\t}\n\n\t/*\n\t * Otherwise, spell out which fields don't agree.\n\t *\n\t * XXX this code has to be adjusted any time the set of fields in a magic\n\t * block change!\n\t */\n\tinitStringInfo(&details);\n\n\tif (module_magic_data->funcmaxargs != magic_data.funcmaxargs)\n\t{\n\t\tif (details.len)\n\t\t\tappendStringInfoChar(&details, '\\n');\n\t\tappendStringInfo(&details,\n\t\t\t\t\t\t _(\"Server has FUNC_MAX_ARGS = %d, library has %d.\"),\n\t\t\t\t\t\t magic_data.funcmaxargs,\n\t\t\t\t\t\t module_magic_data->funcmaxargs);\n\t}\n\tif (module_magic_data->indexmaxkeys != magic_data.indexmaxkeys)\n\t{\n\t\tif (details.len)\n\t\t\tappendStringInfoChar(&details, '\\n');\n\t\tappendStringInfo(&details,\n\t\t\t\t\t\t _(\"Server has INDEX_MAX_KEYS = %d, library has %d.\"),\n\t\t\t\t\t\t magic_data.indexmaxkeys,\n\t\t\t\t\t\t module_magic_data->indexmaxkeys);\n\t}\n\tif (module_magic_data->namedatalen != magic_data.namedatalen)\n\t{\n\t\tif (details.len)\n\t\t\tappendStringInfoChar(&details, '\\n');\n\t\tappendStringInfo(&details,\n\t\t\t\t\t\t _(\"Server has NAMEDATALEN = %d, library has %d.\"),\n\t\t\t\t\t\t magic_data.namedatalen,\n\t\t\t\t\t\t module_magic_data->namedatalen);\n\t}\n\tif (module_magic_data->float4byval != magic_data.float4byval)\n\t{\n\t\tif (details.len)\n\t\t\tappendStringInfoChar(&details, '\\n');\n\t\tappendStringInfo(&details,\n\t\t\t\t\t\t _(\"Server has FLOAT4PASSBYVAL = %s, library has %s.\"),\n\t\t\t\t\t\t magic_data.float4byval ? \"true\" : \"false\",\n\t\t\t\t\t\t module_magic_data->float4byval ? \"true\" : \"false\");\n\t}\n\tif (module_magic_data->float8byval != magic_data.float8byval)\n\t{\n\t\tif (details.len)\n\t\t\tappendStringInfoChar(&details, '\\n');\n\t\tappendStringInfo(&details,\n\t\t\t\t\t\t _(\"Server has FLOAT8PASSBYVAL = %s, library has %s.\"),\n\t\t\t\t\t\t magic_data.float8byval ? \"true\" : \"false\",\n\t\t\t\t\t\t module_magic_data->float8byval ? \"true\" : \"false\");\n\t}\n\n\tif (details.len == 0)\n\t\tappendStringInfoString(&details,\n\t\t\t\t\t\t\t   _(\"Magic block has unexpected length or padding difference.\"));\n\n\tereport(ERROR,\n\t\t\t(errmsg(\"incompatible library \\\"%s\\\": magic block mismatch\",\n\t\t\t\t\tlibname),\n\t\t\t errdetail_internal(\"%s\", details.data)));\n}\n\n/*\n * Unload the specified dynamic-link library file, if it is loaded.\n *\n * Note: libname is expected to be an exact name for the library file.\n *\n * XXX for the moment, this is disabled, resulting in LOAD of an already-loaded\n * library always being a no-op.  We might re-enable it someday if we can\n * convince ourselves we have safe protocols for un-hooking from hook function\n * pointers, releasing custom GUC variables, and perhaps other things that\n * are definitely unsafe currently.\n */\nstatic void\ninternal_unload_library(const char *libname)\n{\n#ifdef NOT_USED\n\tDynamicFileList *file_scanner,\n\t\t\t   *prv,\n\t\t\t   *nxt;\n\tstruct stat stat_buf;\n\tPG_fini_t\tPG_fini;\n\n\t/*\n\t * We need to do stat() in order to determine whether this is the same\n\t * file as a previously loaded file; it's also handy so as to give a good\n\t * error message if bogus file name given.\n\t */\n\tif (stat(libname, &stat_buf) == -1)\n\t\tereport(ERROR,\n\t\t\t\t(errcode_for_file_access(),\n\t\t\t\t errmsg(\"could not access file \\\"%s\\\": %m\", libname)));\n\n\t/*\n\t * We have to zap all entries in the list that match on either filename or\n\t * inode, else internal_load_library() will still think it's present.\n\t */\n\tprv = NULL;\n\tfor (file_scanner = file_list; file_scanner != NULL; file_scanner = nxt)\n\t{\n\t\tnxt = file_scanner->next;\n\t\tif (strcmp(libname, file_scanner->filename) == 0 ||\n\t\t\tSAME_INODE(stat_buf, *file_scanner))\n\t\t{\n\t\t\tif (prv)\n\t\t\t\tprv->next = nxt;\n\t\t\telse\n\t\t\t\tfile_list = nxt;\n\n\t\t\t/*\n\t\t\t * If the library has a _PG_fini() function, call it.\n\t\t\t */\n\t\t\tPG_fini = (PG_fini_t) pg_dlsym(file_scanner->handle, \"_PG_fini\");\n\t\t\tif (PG_fini)\n\t\t\t\t(*PG_fini) ();\n\n\t\t\tclear_external_function_hash(file_scanner->handle);\n\t\t\tpg_dlclose(file_scanner->handle);\n\t\t\tfree((char *) file_scanner);\n\t\t\t/* prv does not change */\n\t\t}\n\t\telse\n\t\t\tprv = file_scanner;\n\t}\n#endif\t\t\t\t\t\t\t/* NOT_USED */\n}\n\nstatic bool\nfile_exists(const char *name)\n{\n\tstruct stat st;\n\n\tAssertArg(name != NULL);\n\n\tif (stat(name, &st) == 0)\n\t\treturn S_ISDIR(st.st_mode) ? false : true;\n\telse if (!(errno == ENOENT || errno == ENOTDIR || errno == EACCES))\n\t\tereport(ERROR,\n\t\t\t\t(errcode_for_file_access(),\n\t\t\t\t errmsg(\"could not access file \\\"%s\\\": %m\", name)));\n\n\treturn false;\n}\n\n\n/* Example format: \".so\" */\n#ifndef DLSUFFIX\n#error \"DLSUFFIX must be defined to compile this file.\"\n#endif\n\n/*\n * If name contains a slash, check if the file exists, if so return\n * the name.  Else (no slash) try to expand using search path (see\n * find_in_dynamic_libpath below); if that works, return the fully\n * expanded file name.  If the previous failed, append DLSUFFIX and\n * try again.  If all fails, just return the original name.\n *\n * The result will always be freshly palloc'd.\n */\nstatic char *\nexpand_dynamic_library_name(const char *name)\n{\n\tbool\t\thave_slash;\n\tchar\t   *new;\n\tchar\t   *full;\n\n\tAssertArg(name);\n\n\thave_slash = (first_dir_separator(name) != NULL);\n\n\tif (!have_slash)\n\t{\n\t\tfull = find_in_dynamic_libpath(name);\n\t\tif (full)\n\t\t\treturn full;\n\t}\n\telse\n\t{\n\t\tfull = substitute_libpath_macro(name);\n\t\tif (file_exists(full))\n\t\t\treturn full;\n\t\tpfree(full);\n\t}\n\n\tnew = psprintf(\"%s%s\", name, DLSUFFIX);\n\n\tif (!have_slash)\n\t{\n\t\tfull = find_in_dynamic_libpath(new);\n\t\tpfree(new);\n\t\tif (full)\n\t\t\treturn full;\n\t}\n\telse\n\t{\n\t\tfull = substitute_libpath_macro(new);\n\t\tpfree(new);\n\t\tif (file_exists(full))\n\t\t\treturn full;\n\t\tpfree(full);\n\t}\n\n\t/*\n\t * If we can't find the file, just return the string as-is. The ensuing\n\t * load attempt will fail and report a suitable message.\n\t */\n\treturn pstrdup(name);\n}\n\n/*\n * Check a restricted library name.  It must begin with \"$libdir/plugins/\"\n * and there must not be any directory separators after that (this is\n * sufficient to prevent \"..\" style attacks).\n */\nstatic void\ncheck_restricted_library_name(const char *name)\n{\n\tif (strncmp(name, \"$libdir/plugins/\", 16) != 0 ||\n\t\tfirst_dir_separator(name + 16) != NULL)\n\t\tereport(ERROR,\n\t\t\t\t(errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),\n\t\t\t\t errmsg(\"access to library \\\"%s\\\" is not allowed\",\n\t\t\t\t\t\tname)));\n}\n\n/*\n * Substitute for any macros appearing in the given string.\n * Result is always freshly palloc'd.\n */\nstatic char *\nsubstitute_libpath_macro(const char *name)\n{\n\tconst char *sep_ptr;\n\n\tAssertArg(name != NULL);\n\n\t/* Currently, we only recognize $libdir at the start of the string */\n\tif (name[0] != '$')\n\t\treturn pstrdup(name);\n\n\tif ((sep_ptr = first_dir_separator(name)) == NULL)\n\t\tsep_ptr = name + strlen(name);\n\n\tif (strlen(\"$libdir\") != sep_ptr - name ||\n\t\tstrncmp(name, \"$libdir\", strlen(\"$libdir\")) != 0)\n\t\tereport(ERROR,\n\t\t\t\t(errcode(ERRCODE_INVALID_NAME),\n\t\t\t\t errmsg(\"invalid macro name in dynamic library path: %s\",\n\t\t\t\t\t\tname)));\n\n\treturn psprintf(\"%s%s\", pkglib_path, sep_ptr);\n}\n\n\n/*\n * Search for a file called 'basename' in the colon-separated search\n * path Dynamic_library_path.  If the file is found, the full file name\n * is returned in freshly palloc'd memory.  If the file is not found,\n * return NULL.\n */\nstatic char *\nfind_in_dynamic_libpath(const char *basename)\n{\n\tconst char *p;\n\tsize_t\t\tbaselen;\n\n\tAssertArg(basename != NULL);\n\tAssertArg(first_dir_separator(basename) == NULL);\n\tAssertState(Dynamic_library_path != NULL);\n\n\tp = Dynamic_library_path;\n\tif (strlen(p) == 0)\n\t\treturn NULL;\n\n\tbaselen = strlen(basename);\n\n\tfor (;;)\n\t{\n\t\tsize_t\t\tlen;\n\t\tchar\t   *piece;\n\t\tchar\t   *mangled;\n\t\tchar\t   *full;\n\n\t\tpiece = first_path_var_separator(p);\n\t\tif (piece == p)\n\t\t\tereport(ERROR,\n\t\t\t\t\t(errcode(ERRCODE_INVALID_NAME),\n\t\t\t\t\t errmsg(\"zero-length component in parameter \\\"dynamic_library_path\\\"\")));\n\n\t\tif (piece == NULL)\n\t\t\tlen = strlen(p);\n\t\telse\n\t\t\tlen = piece - p;\n\n\t\tpiece = palloc(len + 1);\n\t\tstrlcpy(piece, p, len + 1);\n\n\t\tmangled = substitute_libpath_macro(piece);\n\t\tpfree(piece);\n\n\t\tcanonicalize_path(mangled);\n\n\t\t/* only absolute paths */\n\t\tif (!is_absolute_path(mangled))\n\t\t\tereport(ERROR,\n\t\t\t\t\t(errcode(ERRCODE_INVALID_NAME),\n\t\t\t\t\t errmsg(\"component in parameter \\\"dynamic_library_path\\\" is not an absolute path\")));\n\n\t\tfull = palloc(strlen(mangled) + 1 + baselen + 1);\n\t\tsprintf(full, \"%s/%s\", mangled, basename);\n\t\tpfree(mangled);\n\n\t\telog(DEBUG3, \"find_in_dynamic_libpath: trying \\\"%s\\\"\", full);\n\n\t\tif (file_exists(full))\n\t\t\treturn full;\n\n\t\tpfree(full);\n\n\t\tif (p[len] == '\\0')\n\t\t\tbreak;\n\t\telse\n\t\t\tp += len + 1;\n\t}\n\n\treturn NULL;\n}\n\n\n/*\n * Find (or create) a rendezvous variable that one dynamically\n * loaded library can use to meet up with another.\n *\n * On the first call of this function for a particular varName,\n * a \"rendezvous variable\" is created with the given name.\n * The value of the variable is a void pointer (initially set to NULL).\n * Subsequent calls with the same varName just return the address of\n * the existing variable.  Once created, a rendezvous variable lasts\n * for the life of the process.\n *\n * Dynamically loaded libraries can use rendezvous variables\n * to find each other and share information: they just need to agree\n * on the variable name and the data it will point to.\n */\nvoid\t  **\nfind_rendezvous_variable(const char *varName)\n{\n\tstatic HTAB *rendezvousHash = NULL;\n\n\trendezvousHashEntry *hentry;\n\tbool\t\tfound;\n\n\t/* Create a hashtable if we haven't already done so in this process */\n\tif (rendezvousHash == NULL)\n\t{\n\t\tHASHCTL\t\tctl;\n\n\t\tMemSet(&ctl, 0, sizeof(ctl));\n\t\tctl.keysize = NAMEDATALEN;\n\t\tctl.entrysize = sizeof(rendezvousHashEntry);\n\t\trendezvousHash = hash_create(\"Rendezvous variable hash\",\n\t\t\t\t\t\t\t\t\t 16,\n\t\t\t\t\t\t\t\t\t &ctl,\n\t\t\t\t\t\t\t\t\t HASH_ELEM);\n\t}\n\n\t/* Find or create the hashtable entry for this varName */\n\thentry = (rendezvousHashEntry *) hash_search(rendezvousHash,\n\t\t\t\t\t\t\t\t\t\t\t\t varName,\n\t\t\t\t\t\t\t\t\t\t\t\t HASH_ENTER,\n\t\t\t\t\t\t\t\t\t\t\t\t &found);\n\n\t/* Initialize to NULL if first time */\n\tif (!found)\n\t\thentry->varValue = NULL;\n\n\treturn &hentry->varValue;\n}\n\n/*\n * Estimate the amount of space needed to serialize the list of libraries\n * we have loaded.\n */\nSize\nEstimateLibraryStateSpace(void)\n{\n\tDynamicFileList *file_scanner;\n\tSize\t\tsize = 1;\n\n\tfor (file_scanner = file_list;\n\t\t file_scanner != NULL;\n\t\t file_scanner = file_scanner->next)\n\t\tsize = add_size(size, strlen(file_scanner->filename) + 1);\n\n\treturn size;\n}\n\n/*\n * Serialize the list of libraries we have loaded to a chunk of memory.\n */\nvoid\nSerializeLibraryState(Size maxsize, char *start_address)\n{\n\tDynamicFileList *file_scanner;\n\n\tfor (file_scanner = file_list;\n\t\t file_scanner != NULL;\n\t\t file_scanner = file_scanner->next)\n\t{\n\t\tSize\t\tlen;\n\n\t\tlen = strlcpy(start_address, file_scanner->filename, maxsize) + 1;\n\t\tAssert(len < maxsize);\n\t\tmaxsize -= len;\n\t\tstart_address += len;\n\t}\n\tstart_address[0] = '\\0';\n}\n\n/*\n * Load every library the serializing backend had loaded.\n */\nvoid\nRestoreLibraryState(char *start_address)\n{\n\twhile (*start_address != '\\0')\n\t{\n\t\tinternal_load_library(start_address);\n\t\tstart_address += strlen(start_address) + 1;\n\t}\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/port/gettimeofday.c": "/*\n * gettimeofday.c\n *\t  Win32 gettimeofday() replacement\n *\n * src/port/gettimeofday.c\n *\n * Copyright (c) 2003 SRA, Inc.\n * Copyright (c) 2003 SKC, Inc.\n *\n * Permission to use, copy, modify, and distribute this software and\n * its documentation for any purpose, without fee, and without a\n * written agreement is hereby granted, provided that the above\n * copyright notice and this paragraph and the following two\n * paragraphs appear in all copies.\n *\n * IN NO EVENT SHALL THE AUTHOR BE LIABLE TO ANY PARTY FOR DIRECT,\n * INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING\n * LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS\n * DOCUMENTATION, EVEN IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED\n * OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * THE AUTHOR SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS ON AN \"AS\n * IS\" BASIS, AND THE AUTHOR HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE,\n * SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n */\n\n#include \"c.h\"\n\n#include <sys/time.h>\n\n/* FILETIME of Jan 1 1970 00:00:00, the PostgreSQL epoch */\nstatic const unsigned __int64 epoch = UINT64CONST(116444736000000000);\n\n/*\n * FILETIME represents the number of 100-nanosecond intervals since\n * January 1, 1601 (UTC).\n */\n#define FILETIME_UNITS_PER_SEC\t10000000L\n#define FILETIME_UNITS_PER_USEC 10\n\n/*\n * Both GetSystemTimeAsFileTime and GetSystemTimePreciseAsFileTime share a\n * signature, so we can just store a pointer to whichever we find. This\n * is the pointer's type.\n */\ntypedef VOID(WINAPI * PgGetSystemTimeFn) (LPFILETIME);\n\n/* One-time initializer function, must match that signature. */\nstatic void WINAPI init_gettimeofday(LPFILETIME lpSystemTimeAsFileTime);\n\n/* Storage for the function we pick at runtime */\nstatic PgGetSystemTimeFn pg_get_system_time = &init_gettimeofday;\n\n/*\n * One time initializer.  Determine whether GetSystemTimePreciseAsFileTime\n * is available and if so, plan to use it; if not, fall back to\n * GetSystemTimeAsFileTime.\n */\nstatic void WINAPI\ninit_gettimeofday(LPFILETIME lpSystemTimeAsFileTime)\n{\n\t/*\n\t * Because it's guaranteed that kernel32.dll will be linked into our\n\t * address space already, we don't need to LoadLibrary it and worry about\n\t * closing it afterwards, so we're not using Pg's dlopen/dlsym() wrapper.\n\t *\n\t * We'll just look up the address of GetSystemTimePreciseAsFileTime if\n\t * present.\n\t *\n\t * While we could look up the Windows version and skip this on Windows\n\t * versions below Windows 8 / Windows Server 2012 there isn't much point,\n\t * and determining the windows version is its self somewhat Windows\n\t * version and development SDK specific...\n\t */\n\tpg_get_system_time = (PgGetSystemTimeFn) GetProcAddress(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGetModuleHandle(TEXT(\"kernel32.dll\")),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"GetSystemTimePreciseAsFileTime\");\n\tif (pg_get_system_time == NULL)\n\t{\n\t\t/*\n\t\t * The expected error from GetLastError() is ERROR_PROC_NOT_FOUND, if\n\t\t * the function isn't present. No other error should occur.\n\t\t *\n\t\t * We can't report an error here because this might be running in\n\t\t * frontend code; and even if we're in the backend, it's too early to\n\t\t * elog(...) if we get some unexpected error.  Also, it's not a\n\t\t * serious problem, so just silently fall back to\n\t\t * GetSystemTimeAsFileTime irrespective of why the failure occurred.\n\t\t */\n\t\tpg_get_system_time = &GetSystemTimeAsFileTime;\n\t}\n\n\t(*pg_get_system_time) (lpSystemTimeAsFileTime);\n}\n\n/*\n * timezone information is stored outside the kernel so tzp isn't used anymore.\n *\n * Note: this function is not for Win32 high precision timing purposes. See\n * elapsed_time().\n */\nint\ngettimeofday(struct timeval *tp, struct timezone *tzp)\n{\n\tFILETIME\tfile_time;\n\tULARGE_INTEGER ularge;\n\n\t(*pg_get_system_time) (&file_time);\n\tularge.LowPart = file_time.dwLowDateTime;\n\tularge.HighPart = file_time.dwHighDateTime;\n\n\ttp->tv_sec = (long) ((ularge.QuadPart - epoch) / FILETIME_UNITS_PER_SEC);\n\ttp->tv_usec = (long) (((ularge.QuadPart - epoch) % FILETIME_UNITS_PER_SEC)\n\t\t\t\t\t\t  / FILETIME_UNITS_PER_USEC);\n\n\treturn 0;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/doc/src/sgml/release-9.0.sgml": "<!-- doc/src/sgml/release-9.0.sgml -->\n<!-- See header comment in release.sgml about typical markup -->\n\n <sect1 id=\"release-9-0-23\">\n  <title>Release 9.0.23</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2015-10-08</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.22.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <para>\n   This is expected to be the last <productname>PostgreSQL</> release\n   in the 9.0.X series.  Users are encouraged to update to a newer\n   release branch soon.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.23</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 9.0.18,\n    see <xref linkend=\"release-9-0-18\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/pgcrypto</> to detect and report\n      too-short <function>crypt()</> salts (Josh Kupershmidt)\n     </para>\n\n     <para>\n      Certain invalid salt arguments crashed the server or disclosed a few\n      bytes of server memory.  We have not ruled out the viability of\n      attacks that arrange for presence of confidential information in the\n      disclosed bytes, but they seem unlikely.  (CVE-2015-5288)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix subtransaction cleanup after a portal (cursor) belonging to an\n      outer subtransaction fails (Tom Lane, Michael Paquier)\n     </para>\n\n     <para>\n      A function executed in an outer-subtransaction cursor could cause an\n      assertion failure or crash by referencing a relation created within an\n      inner subtransaction.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix insertion of relations into the relation cache <quote>init file</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      An oversight in a patch in the most recent minor releases\n      caused <structname>pg_trigger_tgrelid_tgname_index</> to be omitted\n      from the init file.  Subsequent sessions detected this, then deemed the\n      init file to be broken and silently ignored it, resulting in a\n      significant degradation in session startup time.  In addition to fixing\n      the bug, install some guards so that any similar future mistake will be\n      more obvious.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid O(N^2) behavior when inserting many tuples into a SPI query\n      result (Neil Conway)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <command>LISTEN</> startup time when there are many unread\n      notifications (Matt Newell)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disable SSL renegotiation by default (Michael Paquier, Andres Freund)\n     </para>\n\n     <para>\n      While use of SSL renegotiation is a good idea in theory, we have seen\n      too many bugs in practice, both in the underlying OpenSSL library and\n      in our usage of it.  Renegotiation will be removed entirely in 9.5 and\n      later.  In the older branches, just change the default value\n      of <varname>ssl_renegotiation_limit</> to zero (disabled).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Lower the minimum values of the <literal>*_freeze_max_age</> parameters\n      (Andres Freund)\n     </para>\n\n     <para>\n      This is mainly to make tests of related behavior less time-consuming,\n      but it may also be of value for installations with limited disk space.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Limit the maximum value of <varname>wal_buffers</> to 2GB to avoid\n      server crashes (Josh Berkus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix rare internal overflow in multiplication of <type>numeric</> values\n      (Dean Rasheed)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Guard against hard-to-reach stack overflows involving record types,\n      range types, <type>json</>, <type>jsonb</>, <type>tsquery</>,\n      <type>ltxtquery</> and <type>query_int</> (Noah Misch)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix handling of <literal>DOW</> and <literal>DOY</> in datetime input\n      (Greg Stark)\n     </para>\n\n     <para>\n      These tokens aren't meant to be used in datetime values, but previously\n      they resulted in opaque internal error messages rather\n      than <quote>invalid input syntax</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add more query-cancel checks to regular expression matching (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add recursion depth protections to regular expression, <literal>SIMILAR\n      TO</>, and <literal>LIKE</> matching (Tom Lane)\n     </para>\n\n     <para>\n      Suitable search patterns and a low stack depth limit could lead to\n      stack-overrun crashes.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix potential infinite loop in regular expression execution (Tom Lane)\n     </para>\n\n     <para>\n      A search pattern that can apparently match a zero-length string, but\n      actually doesn't match because of a back reference, could lead to an\n      infinite loop.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix low-memory failures in regular expression compilation\n      (Andreas Seltenreich)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix low-probability memory leak during regular expression execution\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix rare low-memory failure in lock cleanup during transaction abort\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <quote>unexpected out-of-memory situation during sort</> errors\n      when using tuplestores with small <varname>work_mem</> settings (Tom\n      Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix very-low-probability stack overrun in <function>qsort</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <quote>invalid memory alloc request size</> failure in hash joins\n      with large <varname>work_mem</> settings (Tomas Vondra, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted planner bugs (Tom Lane)\n     </para>\n\n     <para>\n      These mistakes could lead to incorrect query plans that would give wrong\n      answers, or to assertion failures in assert-enabled builds, or to odd\n      planner errors such as <quote>could not devise a query plan for the\n      given query</>, <quote>could not find pathkey item to\n      sort</>, <quote>plan should not reference subplan's variable</>,\n      or <quote>failed to assign all NestLoopParams to plan nodes</>.\n      Thanks are due to Andreas Seltenreich and Piotr Stefaniak for fuzz\n      testing that exposed these problems.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use fuzzy path cost tiebreaking rule in all supported branches (Tom Lane)\n     </para>\n\n     <para>\n      This change is meant to avoid platform-specific behavior when\n      alternative plan choices have effectively-identical estimated costs.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      During postmaster shutdown, ensure that per-socket lock files are\n      removed and listen sockets are closed before we remove\n      the <filename>postmaster.pid</> file (Tom Lane)\n     </para>\n\n     <para>\n      This avoids race-condition failures if an external script attempts to\n      start a new postmaster as soon as <literal>pg_ctl stop</> returns.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix postmaster's handling of a startup-process crash during crash\n      recovery (Tom Lane)\n     </para>\n\n     <para>\n      If, during a crash recovery cycle, the startup process crashes without\n      having restored database consistency, we'd try to launch a new startup\n      process, which typically would just crash again, leading to an infinite\n      loop.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Do not print a <literal>WARNING</> when an autovacuum worker is already\n      gone when we attempt to signal it, and reduce log verbosity for such\n      signals (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent autovacuum launcher from sleeping unduly long if the server\n      clock is moved backwards a large amount (&Aacute;lvaro Herrera)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that cleanup of a GIN index's pending-insertions list is\n      interruptable by cancel requests (Jeff Janes)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow all-zeroes pages in GIN indexes to be reused (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Such a page might be left behind after a crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix off-by-one error that led to otherwise-harmless warnings\n      about <quote>apparent wraparound</> in subtrans/multixact truncation\n      (Thomas Munro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix misreporting of <command>CONTINUE</> and <command>MOVE</> statement\n      types in <application>PL/pgSQL</>'s error context messages\n      (Pavel Stehule, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix some places in <application>PL/Tcl</> that neglected to check for\n      failure of <function>malloc()</> calls (Michael Paquier, &Aacute;lvaro\n      Herrera)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <application>libpq</>'s handling of out-of-memory conditions\n      (Michael Paquier, Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leaks and missing out-of-memory checks\n      in <application>ecpg</> (Michael Paquier)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>psql</>'s code for locale-aware formatting of numeric\n      output (Tom Lane)\n     </para>\n\n     <para>\n      The formatting code invoked by <literal>\\pset numericlocale on</>\n      did the wrong thing for some uncommon cases such as numbers with an\n      exponent but no decimal point.  It could also mangle already-localized\n      output from the <type>money</> data type.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent crash in <application>psql</>'s <command>\\c</> command when\n      there is no current connection (Noah Misch)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that temporary files created during a <application>pg_dump</>\n      run with <acronym>tar</>-format output are not world-readable (Michael\n      Paquier)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_dump</> and <application>pg_upgrade</> to support\n      cases where the <literal>postgres</> or <literal>template1</> database\n      is in a non-default tablespace (Marti Raudsepp, Bruce Momjian)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_dump</> to handle object privileges sanely when\n      dumping from a server too old to have a particular privilege type\n      (Tom Lane)\n     </para>\n\n     <para>\n      When dumping functions or procedural languages from pre-7.3\n      servers, <application>pg_dump</> would\n      produce <command>GRANT</>/<command>REVOKE</> commands that revoked the\n      owner's grantable privileges and instead granted all privileges\n      to <literal>PUBLIC</>.  Since the privileges involved are\n      just <literal>USAGE</> and <literal>EXECUTE</>, this isn't a security\n      problem, but it's certainly a surprising representation of the older\n      systems' behavior.  Fix it to leave the default privilege state alone\n      in these cases.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_dump</> to dump shell types (Tom Lane)\n     </para>\n\n     <para>\n      Shell types (that is, not-yet-fully-defined types) aren't useful for\n      much, but nonetheless <application>pg_dump</> should dump them.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix spinlock assembly code for PPC hardware to be compatible\n      with <acronym>AIX</>'s native assembler (Tom Lane)\n     </para>\n\n     <para>\n      Building with <application>gcc</> didn't work if <application>gcc</>\n      had been configured to use the native assembler, which is becoming more\n      common.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      On <acronym>AIX</>, test the <literal>-qlonglong</> compiler option\n      rather than just assuming it's safe to use (Noah Misch)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      On <acronym>AIX</>, use <literal>-Wl,-brtllib</> link option to allow\n      symbols to be resolved at runtime (Noah Misch)\n     </para>\n\n     <para>\n      Perl relies on this ability in 5.8.0 and later.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid use of inline functions when compiling with\n      32-bit <application>xlc</>, due to compiler bugs (Noah Misch)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use <filename>librt</> for <function>sched_yield()</> when necessary,\n      which it is on some Solaris versions (Oskari Saarenmaa)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix Windows <filename>install.bat</> script to handle target directory\n      names that contain spaces (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make the numeric form of the <productname>PostgreSQL</> version number\n      (e.g., <literal>90405</>) readily available to extension Makefiles,\n      as a variable named <varname>VERSION_NUM</> (Michael Paquier)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2015g for\n      DST law changes in Cayman Islands, Fiji, Moldova, Morocco, Norfolk\n      Island, North Korea, Turkey, and Uruguay.  There is a new zone name\n      <literal>America/Fort_Nelson</> for the Canadian Northern Rockies.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-22\">\n  <title>Release 9.0.22</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2015-06-12</para>\n  </formalpara>\n\n  <para>\n   This release contains a small number of fixes from 9.0.21.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <para>\n   The <productname>PostgreSQL</> community will stop releasing updates\n   for the 9.0.X release series in September 2015.\n   Users are encouraged to update to a newer release branch soon.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.22</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 9.0.18,\n    see <xref linkend=\"release-9-0-18\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix rare failure to invalidate relation cache init file (Tom Lane)\n     </para>\n\n     <para>\n      With just the wrong timing of concurrent activity, a <command>VACUUM\n      FULL</> on a system catalog might fail to update the <quote>init file</>\n      that's used to avoid cache-loading work for new sessions.  This would\n      result in later sessions being unable to access that catalog at all.\n      This is a very ancient bug, but it's so hard to trigger that no\n      reproducible case had been seen until recently.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid deadlock between incoming sessions and <literal>CREATE/DROP\n      DATABASE</> (Tom Lane)\n     </para>\n\n     <para>\n      A new session starting in a database that is the target of\n      a <command>DROP DATABASE</> command, or is the template for\n      a <command>CREATE DATABASE</> command, could cause the command to wait\n      for five seconds and then fail, even if the new session would have\n      exited before that.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-21\">\n  <title>Release 9.0.21</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2015-06-04</para>\n  </formalpara>\n\n  <para>\n   This release contains a small number of fixes from 9.0.20.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <para>\n   The <productname>PostgreSQL</> community will stop releasing updates\n   for the 9.0.X release series in September 2015.\n   Users are encouraged to update to a newer release branch soon.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.21</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 9.0.18,\n    see <xref linkend=\"release-9-0-18\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Avoid failures while <function>fsync</>'ing data directory during\n      crash restart (Abhijit Menon-Sen, Tom Lane)\n     </para>\n\n     <para>\n      In the previous minor releases we added a patch to <function>fsync</>\n      everything in the data directory after a crash.  Unfortunately its\n      response to any error condition was to fail, thereby preventing the\n      server from starting up, even when the problem was quite harmless.\n      An example is that an unwritable file in the data directory would\n      prevent restart on some platforms; but it is common to make SSL\n      certificate files unwritable by the server.  Revise this behavior so\n      that permissions failures are ignored altogether, and other types of\n      failures are logged but do not prevent continuing.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Remove <application>configure</>'s check prohibiting linking to a\n      threaded <application>libpython</>\n      on <systemitem class=\"osname\">OpenBSD</> (Tom Lane)\n     </para>\n\n     <para>\n      The failure this restriction was meant to prevent seems to not be a\n      problem anymore on current <systemitem class=\"osname\">OpenBSD</>\n      versions.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow <application>libpq</> to use TLS protocol versions beyond v1\n      (Noah Misch)\n     </para>\n\n     <para>\n      For a long time, <application>libpq</> was coded so that the only SSL\n      protocol it would allow was TLS v1.  Now that newer TLS versions are\n      becoming popular, allow it to negotiate the highest commonly-supported\n      TLS version with the server.  (<productname>PostgreSQL</> servers were\n      already capable of such negotiation, so no change is needed on the\n      server side.)  This is a back-patch of a change already released in\n      9.4.0.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-20\">\n  <title>Release 9.0.20</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2015-05-22</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.19.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <para>\n   The <productname>PostgreSQL</> community will stop releasing updates\n   for the 9.0.X release series in September 2015.\n   Users are encouraged to update to a newer release branch soon.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.20</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 9.0.18,\n    see <xref linkend=\"release-9-0-18\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Avoid possible crash when client disconnects just before the\n      authentication timeout expires (Benkocs Norbert Attila)\n     </para>\n\n     <para>\n      If the timeout interrupt fired partway through the session shutdown\n      sequence, SSL-related state would be freed twice, typically causing a\n      crash and hence denial of service to other sessions.  Experimentation\n      shows that an unauthenticated remote attacker could trigger the bug\n      somewhat consistently, hence treat as security issue.\n      (CVE-2015-3165)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve detection of system-call failures (Noah Misch)\n     </para>\n\n     <para>\n      Our replacement implementation of <function>snprintf()</> failed to\n      check for errors reported by the underlying system library calls;\n      the main case that might be missed is out-of-memory situations.\n      In the worst case this might lead to information exposure, due to our\n      code assuming that a buffer had been overwritten when it hadn't been.\n      Also, there were a few places in which security-relevant calls of other\n      system library functions did not check for failure.\n     </para>\n\n     <para>\n      It remains possible that some calls of the <function>*printf()</>\n      family of functions are vulnerable to information disclosure if an\n      out-of-memory error occurs at just the wrong time.  We judge the risk\n      to not be large, but will continue analysis in this area.\n      (CVE-2015-3166)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <filename>contrib/pgcrypto</>, uniformly report decryption failures\n      as <quote>Wrong key or corrupt data</> (Noah Misch)\n     </para>\n\n     <para>\n      Previously, some cases of decryption with an incorrect key could report\n      other error message texts.  It has been shown that such variance in\n      error reports can aid attackers in recovering keys from other systems.\n      While it's unknown whether <filename>pgcrypto</>'s specific behaviors\n      are likewise exploitable, it seems better to avoid the risk by using a\n      one-size-fits-all message.\n      (CVE-2015-3167)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect checking of deferred exclusion constraints after a HOT\n      update (Tom Lane)\n     </para>\n\n     <para>\n      If a new row that potentially violates a deferred exclusion constraint\n      is HOT-updated (that is, no indexed columns change and the row can be\n      stored back onto the same table page) later in the same transaction,\n      the exclusion constraint would be reported as violated when the check\n      finally occurred, even if the row(s) the new row originally conflicted\n      with had been deleted.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent improper reordering of antijoins (NOT EXISTS joins) versus\n      other outer joins (Tom Lane)\n     </para>\n\n     <para>\n      This oversight in the planner has been observed to cause <quote>could\n      not find RelOptInfo for given relids</> errors, but it seems possible\n      that sometimes an incorrect query plan might get past that consistency\n      check and result in silently-wrong query output.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect matching of subexpressions in outer-join plan nodes\n      (Tom Lane)\n     </para>\n\n     <para>\n      Previously, if textually identical non-strict subexpressions were used\n      both above and below an outer join, the planner might try to re-use\n      the value computed below the join, which would be incorrect because the\n      executor would force the value to NULL in case of an unmatched outer row.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix GEQO planner to cope with failure of its join order heuristic\n      (Tom Lane)\n     </para>\n\n     <para>\n      This oversight has been seen to lead to <quote>failed to join all\n      relations together</> errors in queries involving <literal>LATERAL</>,\n      and that might happen in other cases as well.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible deadlock at startup\n      when <literal>max_prepared_transactions</> is too small\n      (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't archive useless preallocated WAL files after a timeline switch\n      (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid <quote>cannot GetMultiXactIdMembers() during recovery</> error\n      (&Aacute;lvaro Herrera)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Recursively <function>fsync()</> the data directory after a crash\n      (Abhijit Menon-Sen, Robert Haas)\n     </para>\n\n     <para>\n      This ensures consistency if another crash occurs shortly later.  (The\n      second crash would have to be a system-level crash, not just a database\n      crash, for there to be a problem.)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix autovacuum launcher's possible failure to shut down, if an error\n      occurs after it receives SIGTERM (&Aacute;lvaro Herrera)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Cope with unexpected signals in <function>LockBufferForCleanup()</>\n      (Andres Freund)\n     </para>\n\n     <para>\n      This oversight could result in spurious errors about <quote>multiple\n      backends attempting to wait for pincount 1</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid waiting for WAL flush or synchronous replication during commit of\n      a transaction that was read-only so far as the user is concerned\n      (Andres Freund)\n     </para>\n\n     <para>\n      Previously, a delay could occur at commit in transactions that had\n      written WAL due to HOT page pruning, leading to undesirable effects\n      such as sessions getting stuck at startup if all synchronous replicas\n      are down.  Sessions have also been observed to get stuck in catchup\n      interrupt processing when using synchronous replication; this will fix\n      that problem as well.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix crash when manipulating hash indexes on temporary tables\n      (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible failure during hash index bucket split, if other processes\n      are modifying the index concurrently (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Check for interrupts while analyzing index expressions (Jeff Janes)\n     </para>\n\n     <para>\n      <command>ANALYZE</> executes index expressions many times; if there are\n      slow functions in such an expression, it's desirable to be able to\n      cancel the <command>ANALYZE</> before that loop finishes.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add the name of the target server to object description strings for\n      foreign-server user mappings (&Aacute;lvaro Herrera)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Recommend setting <literal>include_realm</> to 1 when using\n      Kerberos/GSSAPI/SSPI authentication (Stephen Frost)\n     </para>\n\n     <para>\n      Without this, identically-named users from different realms cannot be\n      distinguished.  For the moment this is only a documentation change, but\n      it will become the default setting in <productname>PostgreSQL</> 9.5.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Remove code for matching IPv4 <filename>pg_hba.conf</> entries to\n      IPv4-in-IPv6 addresses (Tom Lane)\n     </para>\n\n     <para>\n      This hack was added in 2003 in response to a report that some Linux\n      kernels of the time would report IPv4 connections as having\n      IPv4-in-IPv6 addresses.  However, the logic was accidentally broken in\n      9.0.  The lack of any field complaints since then shows that it's not\n      needed anymore.  Now we have reports that the broken code causes\n      crashes on some systems, so let's just remove it rather than fix it.\n      (Had we chosen to fix it, that would make for a subtle and potentially\n      security-sensitive change in the effective meaning of\n      IPv4 <filename>pg_hba.conf</> entries, which does not seem like a good\n      thing to do in minor releases.)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      While shutting down service on Windows, periodically send status\n      updates to the Service Control Manager to prevent it from killing the\n      service too soon; and ensure that <application>pg_ctl</> will wait for\n      shutdown (Krystian Bigaj)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Reduce risk of network deadlock when using <application>libpq</>'s\n      non-blocking mode (Heikki Linnakangas)\n     </para>\n\n     <para>\n      When sending large volumes of data, it's important to drain the input\n      buffer every so often, in case the server has sent enough response data\n      to cause it to block on output.  (A typical scenario is that the server\n      is sending a stream of NOTICE messages during <literal>COPY FROM\n      STDIN</>.)  This worked properly in the normal blocking mode, but not\n      so much in non-blocking mode.  We've modified <application>libpq</>\n      to opportunistically drain input when it can, but a full defense\n      against this problem requires application cooperation: the application\n      should watch for socket read-ready as well as write-ready conditions,\n      and be sure to call <function>PQconsumeInput()</> upon read-ready.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix array handling in <application>ecpg</> (Michael Meskes)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>psql</> to sanely handle URIs and conninfo strings as\n      the first parameter to <command>\\connect</>\n      (David Fetter, Andrew Dunstan, &Aacute;lvaro Herrera)\n     </para>\n\n     <para>\n      This syntax has been accepted (but undocumented) for a long time, but\n      previously some parameters might be taken from the old connection\n      instead of the given string, which was agreed to be undesirable.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Suppress incorrect complaints from <application>psql</> on some\n      platforms that it failed to write <filename>~/.psql_history</> at exit\n      (Tom Lane)\n     </para>\n\n     <para>\n      This misbehavior was caused by a workaround for a bug in very old\n      (pre-2006) versions of <application>libedit</>.  We fixed it by\n      removing the workaround, which will cause a similar failure to appear\n      for anyone still using such versions of <application>libedit</>.\n      Recommendation: upgrade that library, or use <application>libreadline</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_dump</>'s rule for deciding which casts are\n      system-provided casts that should not be dumped (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix dumping of views that are just <literal>VALUES(...)</> but have\n      column aliases (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>pg_upgrade</>, force timeline 1 in the new cluster\n      (Bruce Momjian)\n     </para>\n\n     <para>\n      This change prevents upgrade failures caused by bogus complaints about\n      missing WAL history files.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>pg_upgrade</>, check for improperly non-connectable\n      databases before proceeding\n      (Bruce Momjian)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>pg_upgrade</>, quote directory paths\n      properly in the generated <literal>delete_old_cluster</> script\n      (Bruce Momjian)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>pg_upgrade</>, preserve database-level freezing info\n      properly\n      (Bruce Momjian)\n     </para>\n\n     <para>\n      This oversight could cause missing-clog-file errors for tables within\n      the <literal>postgres</> and <literal>template1</> databases.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Run <application>pg_upgrade</> and <application>pg_resetxlog</> with\n      restricted privileges on Windows, so that they don't fail when run by\n      an administrator (Muhammad Asif Naeem)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix slow sorting algorithm in <filename>contrib/intarray</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix compile failure on Sparc V8 machines (Rob Rowan)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2015d\n      for DST law changes in Egypt, Mongolia, and Palestine, plus historical\n      changes in Canada and Chile.  Also adopt revised zone abbreviations for\n      the America/Adak zone (HST/HDT not HAST/HADT).\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-19\">\n  <title>Release 9.0.19</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2015-02-05</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.18.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.19</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 9.0.18,\n    see <xref linkend=\"release-9-0-18\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix buffer overruns in <function>to_char()</>\n      (Bruce Momjian)\n     </para>\n\n     <para>\n      When <function>to_char()</> processes a numeric formatting template\n      calling for a large number of digits, <productname>PostgreSQL</>\n      would read past the end of a buffer.  When processing a crafted\n      timestamp formatting template, <productname>PostgreSQL</> would write\n      past the end of a buffer.  Either case could crash the server.\n      We have not ruled out the possibility of attacks that lead to\n      privilege escalation, though they seem unlikely.\n      (CVE-2015-0241)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix buffer overrun in replacement <function>*printf()</> functions\n      (Tom Lane)\n     </para>\n\n     <para>\n      <productname>PostgreSQL</> includes a replacement implementation\n      of <function>printf</> and related functions.  This code will overrun\n      a stack buffer when formatting a floating point number (conversion\n      specifiers <literal>e</>, <literal>E</>, <literal>f</>, <literal>F</>,\n      <literal>g</> or <literal>G</>) with requested precision greater than\n      about 500.  This will crash the server, and we have not ruled out the\n      possibility of attacks that lead to privilege escalation.\n      A database user can trigger such a buffer overrun through\n      the <function>to_char()</> SQL function.  While that is the only\n      affected core <productname>PostgreSQL</> functionality, extension\n      modules that use printf-family functions may be at risk as well.\n     </para>\n\n     <para>\n      This issue primarily affects <productname>PostgreSQL</> on Windows.\n      <productname>PostgreSQL</> uses the system implementation of these\n      functions where adequate, which it is on other modern platforms.\n      (CVE-2015-0242)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix buffer overruns in <filename>contrib/pgcrypto</>\n      (Marko Tiikkaja, Noah Misch)\n     </para>\n\n     <para>\n      Errors in memory size tracking within the <filename>pgcrypto</>\n      module permitted stack buffer overruns and improper dependence on the\n      contents of uninitialized memory.  The buffer overrun cases can\n      crash the server, and we have not ruled out the possibility of\n      attacks that lead to privilege escalation.\n      (CVE-2015-0243)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible loss of frontend/backend protocol synchronization after\n      an error\n      (Heikki Linnakangas)\n     </para>\n\n     <para>\n      If any error occurred while the server was in the middle of reading a\n      protocol message from the client, it could lose synchronization and\n      incorrectly try to interpret part of the message's data as a new\n      protocol message.  An attacker able to submit crafted binary data\n      within a command parameter might succeed in injecting his own SQL\n      commands this way.  Statement timeout and query cancellation are the\n      most likely sources of errors triggering this scenario.  Particularly\n      vulnerable are applications that use a timeout and also submit\n      arbitrary user-crafted data as binary query parameters.  Disabling\n      statement timeout will reduce, but not eliminate, the risk of\n      exploit.  Our thanks to Emil Lenngren for reporting this issue.\n      (CVE-2015-0244)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix information leak via constraint-violation error messages\n      (Stephen Frost)\n     </para>\n\n     <para>\n      Some server error messages show the values of columns that violate\n      a constraint, such as a unique constraint.  If the user does not have\n      <literal>SELECT</> privilege on all columns of the table, this could\n      mean exposing values that the user should not be able to see.  Adjust\n      the code so that values are displayed only when they came from the SQL\n      command or could be selected by the user.\n      (CVE-2014-8161)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Lock down regression testing's temporary installations on Windows\n      (Noah Misch)\n     </para>\n\n     <para>\n      Use SSPI authentication to allow connections only from the OS user\n      who launched the test suite.  This closes on Windows the same\n      vulnerability previously closed on other platforms, namely that other\n      users might be able to connect to the test postmaster.\n      (CVE-2014-0067)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid possible data corruption if <command>ALTER DATABASE SET\n      TABLESPACE</> is used to move a database to a new tablespace and then\n      shortly later move it back to its original tablespace (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid corrupting tables when <command>ANALYZE</> inside a transaction\n      is rolled back (Andres Freund, Tom Lane, Michael Paquier)\n     </para>\n\n     <para>\n      If the failing transaction had earlier removed the last index, rule, or\n      trigger from the table, the table would be left in a corrupted state\n      with the relevant <structname>pg_class</> flags not set though they\n      should be.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix use-of-already-freed-memory problem in EvalPlanQual processing\n      (Tom Lane)\n     </para>\n\n     <para>\n      In <literal>READ COMMITTED</> mode, queries that lock or update\n      recently-updated rows could crash as a result of this bug.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planning of <command>SELECT FOR UPDATE</> when using a partial\n      index on a child table (Kyotaro Horiguchi)\n     </para>\n\n     <para>\n      In <literal>READ COMMITTED</> mode, <command>SELECT FOR UPDATE</> must\n      also recheck the partial index's <literal>WHERE</> condition when\n      rechecking a recently-updated row to see if it still satisfies the\n      query's <literal>WHERE</> condition.  This requirement was missed if the\n      index belonged to an inheritance child table, so that it was possible\n      to incorrectly return rows that no longer satisfy the query condition.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix corner case wherein <command>SELECT FOR UPDATE</> could return a row\n      twice, and possibly miss returning other rows (Tom Lane)\n     </para>\n\n     <para>\n      In <literal>READ COMMITTED</> mode, a <command>SELECT FOR UPDATE</>\n      that is scanning an inheritance tree could incorrectly return a row\n      from a prior child table instead of the one it should return from a\n      later child table.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Reject duplicate column names in the referenced-columns list of\n      a <literal>FOREIGN KEY</> declaration (David Rowley)\n     </para>\n\n     <para>\n      This restriction is per SQL standard.  Previously we did not reject\n      the case explicitly, but later on the code would fail with\n      bizarre-looking errors.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bugs in raising a <type>numeric</> value to a large integral power\n      (Tom Lane)\n     </para>\n\n     <para>\n      The previous code could get a wrong answer, or consume excessive\n      amounts of time and memory before realizing that the answer must\n      overflow.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <function>numeric_recv()</>, truncate away any fractional digits\n      that would be hidden according to the value's <literal>dscale</> field\n      (Tom Lane)\n     </para>\n\n     <para>\n      A <type>numeric</> value's display scale (<literal>dscale</>) should\n      never be less than the number of nonzero fractional digits; but\n      apparently there's at least one broken client application that\n      transmits binary <type>numeric</> values in which that's true.\n      This leads to strange behavior since the extra digits are taken into\n      account by arithmetic operations even though they aren't printed.\n      The least risky fix seems to be to truncate away such <quote>hidden</>\n      digits on receipt, so that the value is indeed what it prints as.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Reject out-of-range numeric timezone specifications (Tom Lane)\n     </para>\n\n     <para>\n      Simple numeric timezone specifications exceeding +/- 168 hours (one\n      week) would be accepted, but could then cause null-pointer dereference\n      crashes in certain operations.  There's no use-case for such large UTC\n      offsets, so reject them.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bugs in <type>tsquery</> <literal>@&gt;</> <type>tsquery</>\n      operator (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Two different terms would be considered to match if they had the same\n      CRC.  Also, if the second operand had more terms than the first, it\n      would be assumed not to be contained in the first; which is wrong\n      since it might contain duplicate terms.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve ispell dictionary's defenses against bad affix files (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow more than 64K phrases in a thesaurus dictionary (David Boutin)\n     </para>\n\n     <para>\n      The previous coding could crash on an oversize dictionary, so this was\n      deemed a back-patchable bug fix rather than a feature addition.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix namespace handling in <function>xpath()</> (Ali Akbar)\n     </para>\n\n     <para>\n      Previously, the <type>xml</> value resulting from\n      an <function>xpath()</> call would not have namespace declarations if\n      the namespace declarations were attached to an ancestor element in the\n      input <type>xml</> value, rather than to the specific element being\n      returned.  Propagate the ancestral declaration so that the result is\n      correct when considered in isolation.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner problems with nested append relations, such as inherited\n      tables within <literal>UNION ALL</> subqueries (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fail cleanly when a GiST index tuple doesn't fit on a page, rather\n      than going into infinite recursion (Andrew Gierth)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Exempt tables that have per-table <varname>cost_limit</>\n      and/or <varname>cost_delay</> settings from autovacuum's global cost\n      balancing rules (&Aacute;lvaro Herrera)\n     </para>\n\n     <para>\n      The previous behavior resulted in basically ignoring these per-table\n      settings, which was unintended.  Now, a table having such settings\n      will be vacuumed using those settings, independently of what is going\n      on in other autovacuum workers.  This may result in heavier total I/O\n      load than before, so such settings should be re-examined for sanity.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid wholesale autovacuuming when autovacuum is nominally off\n      (Tom Lane)\n     </para>\n\n     <para>\n      Even when autovacuum is nominally off, we will still launch autovacuum\n      worker processes to vacuum tables that are at risk of XID wraparound.\n      However, such a worker process then proceeded to vacuum all tables in\n      the target database, if they met the usual thresholds for\n      autovacuuming.  This is at best pretty unexpected; at worst it delays\n      response to the wraparound threat.  Fix it so that if autovacuum is\n      turned off, workers <emphasis>only</> do anti-wraparound vacuums and\n      not any other work.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition between hot standby queries and replaying a\n      full-page image (Heikki Linnakangas)\n     </para>\n\n     <para>\n      This mistake could result in transient errors in queries being\n      executed in hot standby.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix several cases where recovery logic improperly ignored WAL records\n      for <literal>COMMIT/ABORT PREPARED</> (Heikki Linnakangas)\n     </para>\n\n     <para>\n      The most notable oversight was\n      that <varname>recovery_target_xid</> could not be used to stop at\n      a two-phase commit.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid creating unnecessary <filename>.ready</> marker files for\n      timeline history files (Fujii Masao)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible null pointer dereference when an empty prepared statement\n      is used and the <varname>log_statement</> setting is <literal>mod</>\n      or <literal>ddl</> (Fujii Masao)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Change <quote>pgstat wait timeout</> warning message to be LOG level,\n      and rephrase it to be more understandable (Tom Lane)\n     </para>\n\n     <para>\n      This message was originally thought to be essentially a can't-happen\n      case, but it occurs often enough on our slower buildfarm members to be\n      a nuisance.  Reduce it to LOG level, and expend a bit more effort on\n      the wording: it now reads <quote>using stale statistics instead of\n      current ones because stats collector is not responding</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix SPARC spinlock implementation to ensure correctness if the CPU is\n      being run in a non-TSO coherency mode, as some non-Solaris kernels do\n      (Andres Freund)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Warn if macOS's <function>setlocale()</> starts an unwanted extra\n      thread inside the postmaster (Noah Misch)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix processing of repeated <literal>dbname</> parameters\n      in <function>PQconnectdbParams()</> (Alex Shulgin)\n     </para>\n\n     <para>\n      Unexpected behavior ensued if the first occurrence\n      of <literal>dbname</> contained a connection string or URI to be\n      expanded.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that <application>libpq</> reports a suitable error message on\n      unexpected socket EOF (Marko Tiikkaja, Tom Lane)\n     </para>\n\n     <para>\n      Depending on kernel behavior, <application>libpq</> might return an\n      empty error string rather than something useful when the server\n      unexpectedly closed the socket.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Clear any old error message during <function>PQreset()</>\n      (Heikki Linnakangas)\n     </para>\n\n     <para>\n      If <function>PQreset()</> is called repeatedly, and the connection\n      cannot be re-established, error messages from the failed connection\n      attempts kept accumulating in the <structname>PGconn</>'s error\n      string.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Properly handle out-of-memory conditions while parsing connection\n      options in <application>libpq</> (Alex Shulgin, Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix array overrun in <application>ecpg</>'s version\n      of <function>ParseDateTime()</> (Michael Paquier)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>initdb</>, give a clearer error message if a password\n      file is specified but is empty (Mats Erik Andersson)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>psql</>'s <command>\\s</> command to work nicely with\n      libedit, and add pager support (Stepan Rutz, Tom Lane)\n     </para>\n\n     <para>\n      When using libedit rather than readline, <command>\\s</> printed the\n      command history in a fairly unreadable encoded format, and on recent\n      libedit versions might fail altogether.  Fix that by printing the\n      history ourselves rather than having the library do it.  A pleasant\n      side-effect is that the pager is used if appropriate.\n     </para>\n\n     <para>\n      This patch also fixes a bug that caused newline encoding to be applied\n      inconsistently when saving the command history with libedit.\n      Multiline history entries written by older <application>psql</>\n      versions will be read cleanly with this patch, but perhaps not\n      vice versa, depending on the exact libedit versions involved.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve consistency of parsing of <application>psql</>'s special\n      variables (Tom Lane)\n     </para>\n\n     <para>\n      Allow variant spellings of <literal>on</> and <literal>off</> (such\n      as <literal>1</>/<literal>0</>) for <literal>ECHO_HIDDEN</>\n      and <literal>ON_ERROR_ROLLBACK</>.  Report a warning for unrecognized\n      values for <literal>COMP_KEYWORD_CASE</>, <literal>ECHO</>,\n      <literal>ECHO_HIDDEN</>, <literal>HISTCONTROL</>,\n      <literal>ON_ERROR_ROLLBACK</>, and <literal>VERBOSITY</>.  Recognize\n      all values for all these variables case-insensitively; previously\n      there was a mishmash of case-sensitive and case-insensitive behaviors.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>psql</>'s expanded-mode display to work\n      consistently when using <literal>border</> = 3\n      and <literal>linestyle</> = <literal>ascii</> or <literal>unicode</>\n      (Stephen Frost)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible deadlock during parallel restore of a schema-only dump\n      (Robert Haas, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix core dump in <literal>pg_dump --binary-upgrade</> on zero-column\n      composite type (Rushabh Lathia)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix block number checking\n      in <filename>contrib/pageinspect</>'s <function>get_raw_page()</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      The incorrect checking logic could prevent access to some pages in\n      non-main relation forks.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/pgcrypto</>'s <function>pgp_sym_decrypt()</>\n      to not fail on messages whose length is 6 less than a power of 2\n      (Marko Tiikkaja)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Handle unexpected query results, especially NULLs, safely in\n      <filename>contrib/tablefunc</>'s <function>connectby()</>\n      (Michael Paquier)\n     </para>\n\n     <para>\n      <function>connectby()</> previously crashed if it encountered a NULL\n      key value.  It now prints that row but doesn't recurse further.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid a possible crash in <filename>contrib/xml2</>'s\n      <function>xslt_process()</> (Mark Simonetti)\n     </para>\n\n     <para>\n      <application>libxslt</> seems to have an undocumented dependency on\n      the order in which resources are freed; reorder our calls to avoid a\n      crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Numerous cleanups of warnings from Coverity static code analyzer\n      (Andres Freund, Tatsuo Ishii, Marko Kreen, Tom Lane, Michael Paquier)\n     </para>\n\n     <para>\n      These changes are mostly cosmetic but in some cases fix corner-case\n      bugs, for example a crash rather than a proper error report after an\n      out-of-memory failure.  None are believed to represent security\n      issues.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Detect incompatible OpenLDAP versions during build (Noah Misch)\n     </para>\n\n     <para>\n      With OpenLDAP versions 2.4.24 through 2.4.31,\n      inclusive, <productname>PostgreSQL</> backends can crash at exit.\n      Raise a warning during <application>configure</> based on the\n      compile-time OpenLDAP version number, and test the crashing scenario\n      in the <filename>contrib/dblink</> regression test.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In non-MSVC Windows builds, ensure <filename>libpq.dll</> is installed\n      with execute permissions (Noah Misch)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>pg_regress</> remove any temporary installation it\n      created upon successful exit (Tom Lane)\n     </para>\n\n     <para>\n      This results in a very substantial reduction in disk space usage\n      during <literal>make check-world</>, since that sequence involves\n      creation of numerous temporary installations.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Support time zone abbreviations that change UTC offset from time to\n      time (Tom Lane)\n     </para>\n\n     <para>\n      Previously, <productname>PostgreSQL</> assumed that the UTC offset\n      associated with a time zone abbreviation (such as <literal>EST</>)\n      never changes in the usage of any particular locale.  However this\n      assumption fails in the real world, so introduce the ability for a\n      zone abbreviation to represent a UTC offset that sometimes changes.\n      Update the zone abbreviation definition files to make use of this\n      feature in timezone locales that have changed the UTC offset of their\n      abbreviations since 1970 (according to the IANA timezone database).\n      In such timezones, <productname>PostgreSQL</> will now associate the\n      correct UTC offset with the abbreviation depending on the given date.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone abbreviations lists (Tom Lane)\n     </para>\n\n     <para>\n      Add CST (China Standard Time) to our lists.\n      Remove references to ADT as <quote>Arabia Daylight Time</>, an\n      abbreviation that's been out of use since 2007; therefore, claiming\n      there is a conflict with <quote>Atlantic Daylight Time</> doesn't seem\n      especially helpful.\n      Fix entirely incorrect GMT offsets for CKT (Cook Islands), FJT, and FJST\n      (Fiji); we didn't even have them on the proper side of the date line.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2015a.\n     </para>\n\n     <para>\n      The IANA timezone database has adopted abbreviations of the form\n      <literal>A<replaceable>x</>ST</literal>/<literal>A<replaceable>x</>DT</literal>\n      for all Australian time zones, reflecting what they believe to be\n      current majority practice Down Under.  These names do not conflict\n      with usage elsewhere (other than ACST for Acre Summer Time, which has\n      been in disuse since 1994).  Accordingly, adopt these names into\n      our <quote>Default</> timezone abbreviation set.\n      The <quote>Australia</> abbreviation set now contains only CST, EAST,\n      EST, SAST, SAT, and WST, all of which are thought to be mostly\n      historical usage.  Note that SAST has also been changed to be South\n      Africa Standard Time in the <quote>Default</> abbreviation set.\n     </para>\n\n     <para>\n      Also, add zone abbreviations SRET (Asia/Srednekolymsk) and XJT\n      (Asia/Urumqi), and use WSST/WSDT for western Samoa.  Also, there were\n      DST law changes in Chile, Mexico, the Turks &amp; Caicos Islands\n      (America/Grand_Turk), and Fiji.  There is a new zone\n      Pacific/Bougainville for portions of Papua New Guinea.  Also, numerous\n      corrections for historical (pre-1970) time zone data.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-18\">\n  <title>Release 9.0.18</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2014-07-24</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.17.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.18</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, this release corrects an index corruption problem in some GiST\n    indexes.  See the first changelog entry below to find out whether your\n    installation has been affected and what steps you should take if so.\n   </para>\n\n   <para>\n    Also, if you are upgrading from a version earlier than 9.0.15,\n    see <xref linkend=\"release-9-0-15\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Correctly initialize padding bytes in <filename>contrib/btree_gist</>\n      indexes on <type>bit</> columns (Heikki Linnakangas)\n     </para>\n\n     <para>\n      This error could result in incorrect query results due to values that\n      should compare equal not being seen as equal.\n      Users with GiST indexes on <type>bit</> or <type>bit varying</>\n      columns should <command>REINDEX</> those indexes after installing this\n      update.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Protect against torn pages when deleting GIN list pages (Heikki\n      Linnakangas)\n     </para>\n\n     <para>\n      This fix prevents possible index corruption if a system crash occurs\n      while the page update is being written to disk.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't clear the right-link of a GiST index page while replaying\n      updates from WAL (Heikki Linnakangas)\n     </para>\n\n     <para>\n      This error could lead to transiently wrong answers from GiST index\n      scans performed in Hot Standby.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possibly-incorrect cache invalidation during nested calls\n      to <function>ReceiveSharedInvalidMessages</> (Andres Freund)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't assume a subquery's output is unique if there's a set-returning\n      function in its targetlist (David Rowley)\n     </para>\n\n     <para>\n      This oversight could lead to misoptimization of constructs\n      like <literal>WHERE x IN (SELECT y, generate_series(1,10) FROM t GROUP\n      BY y)</literal>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix failure to detoast fields in composite elements of structured\n      types (Tom Lane)\n     </para>\n\n     <para>\n      This corrects cases where TOAST pointers could be copied into other\n      tables without being dereferenced.  If the original data is later\n      deleted, it would lead to errors like <quote>missing chunk number 0\n      for toast value ...</> when the now-dangling pointer is used.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <quote>record type has not been registered</> failures with\n      whole-row references to the output of Append plan nodes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash when invoking a user-defined function while\n      rewinding a cursor (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix query-lifespan memory leak while evaluating the arguments for a\n      function in <literal>FROM</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix session-lifespan memory leaks in regular-expression processing\n      (Tom Lane, Arthur O'Dwyer, Greg Stark)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix data encoding error in <filename>hungarian.stop</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix liveness checks for rows that were inserted in the current\n      transaction and then deleted by a now-rolled-back subtransaction\n      (Andres Freund)\n     </para>\n\n     <para>\n      This could cause problems (at least spurious warnings, and at worst an\n      infinite loop) if <command>CREATE INDEX</> or <command>CLUSTER</> were\n      done later in the same transaction.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Clear <structname>pg_stat_activity</>.<structfield>xact_start</>\n      during <command>PREPARE TRANSACTION</> (Andres Freund)\n     </para>\n\n     <para>\n      After the <command>PREPARE</>, the originating session is no longer in\n      a transaction, so it should not continue to display a transaction\n      start time.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>REASSIGN OWNED</> to not fail for text search objects\n      (&Aacute;lvaro Herrera)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Block signals during postmaster startup (Tom Lane)\n     </para>\n\n     <para>\n      This ensures that the postmaster will properly clean up after itself\n      if, for example, it receives <systemitem>SIGINT</> while still\n      starting up.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Secure Unix-domain sockets of temporary postmasters started during\n      <literal>make check</> (Noah Misch)\n     </para>\n\n     <para>\n      Any local user able to access the socket file could connect as the\n      server's bootstrap superuser, then proceed to execute arbitrary code as\n      the operating-system user running the test, as we previously noted in\n      CVE-2014-0067.  This change defends against that risk by placing the\n      server's socket in a temporary, mode 0700 subdirectory\n      of <filename>/tmp</>.  The hazard remains however on platforms where\n      Unix sockets are not supported, notably Windows, because then the\n      temporary postmaster must accept local TCP connections.\n     </para>\n\n     <para>\n      A useful side effect of this change is to simplify\n      <literal>make check</> testing in builds that\n      override <literal>DEFAULT_PGSOCKET_DIR</>.  Popular non-default values\n      like <filename>/var/run/postgresql</> are often not writable by the\n      build user, requiring workarounds that will no longer be necessary.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix tablespace creation WAL replay to work on Windows (MauMau)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix detection of socket creation failures on Windows (Bruce Momjian)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      On Windows, allow new sessions to absorb values of PGC_BACKEND\n      parameters (such as <xref linkend=\"guc-log-connections\">) from the\n      configuration file (Amit Kapila)\n     </para>\n\n     <para>\n      Previously, if such a parameter were changed in the file post-startup,\n      the change would have no effect.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Properly quote executable path names on Windows (Nikhil Deshpande)\n     </para>\n\n     <para>\n      This oversight could cause <application>initdb</>\n      and <application>pg_upgrade</> to fail on Windows, if the installation\n      path contained both spaces and <literal>@</> signs.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix linking of <application>libpython</> on macOS (Tom Lane)\n     </para>\n\n     <para>\n      The method we previously used can fail with the Python library\n      supplied by Xcode 5.0 and later.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid buffer bloat in <application>libpq</> when the server\n      consistently sends data faster than the client can absorb it\n      (Shin-ichi Morita, Tom Lane)\n     </para>\n\n     <para>\n      <application>libpq</> could be coerced into enlarging its input buffer\n      until it runs out of memory (which would be reported misleadingly\n      as <quote>lost synchronization with server</>).  Under ordinary\n      circumstances it's quite far-fetched that data could be continuously\n      transmitted more quickly than the <function>recv()</> loop can\n      absorb it, but this has been observed when the client is artificially\n      slowed by scheduler constraints.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that LDAP lookup attempts in <application>libpq</> time out as\n      intended (Laurenz Albe)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</> to do the right thing when an array\n      of <type>char *</> is the target for a FETCH statement returning more\n      than one row, as well as some other array-handling fixes\n      (Ashutosh Bapat)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</>'s processing of old-style large object\n      comments (Tom Lane)\n     </para>\n\n     <para>\n      A direct-to-database restore from an archive file generated by a\n      pre-9.0 version of <application>pg_dump</> would usually fail if the\n      archive contained more than a few comments for large objects.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <filename>contrib/pgcrypto</> functions, ensure sensitive\n      information is cleared from stack variables before returning\n      (Marko Kreen)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <filename>contrib/uuid-ossp</>, cache the state of the OSSP UUID\n      library across calls (Tom Lane)\n     </para>\n\n     <para>\n      This improves the efficiency of UUID generation and reduces the amount\n      of entropy drawn from <filename>/dev/urandom</>, on platforms that\n      have that.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2014e\n      for DST law changes in Crimea, Egypt, and Morocco.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-17\">\n  <title>Release 9.0.17</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2014-03-20</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.16.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.17</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 9.0.15,\n    see <xref linkend=\"release-9-0-15\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Restore GIN metapages unconditionally to avoid torn-page risk\n      (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Although this oversight could theoretically result in a corrupted\n      index, it is unlikely to have caused any problems in practice, since\n      the active part of a GIN metapage is smaller than a standard 512-byte\n      disk sector.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid race condition in checking transaction commit status during\n      receipt of a <command>NOTIFY</> message (Marko Tiikkaja)\n     </para>\n\n     <para>\n      This prevents a scenario wherein a sufficiently fast client might\n      respond to a notification before database updates made by the\n      notifier have become visible to the recipient.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow regular-expression operators to be terminated early by query\n      cancel requests (Tom Lane)\n     </para>\n\n     <para>\n      This prevents scenarios wherein a pathological regular expression\n      could lock up a server process uninterruptibly for a long time.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Remove incorrect code that tried to allow <literal>OVERLAPS</> with\n      single-element row arguments (Joshua Yanovski)\n     </para>\n\n     <para>\n      This code never worked correctly, and since the case is neither\n      specified by the SQL standard nor documented, it seemed better to\n      remove it than fix it.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid getting more than <literal>AccessShareLock</> when de-parsing a\n      rule or view (Dean Rasheed)\n     </para>\n\n     <para>\n      This oversight resulted in <application>pg_dump</> unexpectedly\n      acquiring <literal>RowExclusiveLock</> locks on tables mentioned as\n      the targets of <literal>INSERT</>/<literal>UPDATE</>/<literal>DELETE</>\n      commands in rules.  While usually harmless, that could interfere with\n      concurrent transactions that tried to acquire, for example,\n      <literal>ShareLock</> on those tables.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve performance of index endpoint probes during planning (Tom Lane)\n     </para>\n\n     <para>\n      This change fixes a significant performance problem that occurred\n      when there were many not-yet-committed rows at the end of the index,\n      which is a common situation for indexes on sequentially-assigned\n      values such as timestamps or sequence-generated identifiers.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix test to see if hot standby connections can be allowed immediately\n      after a crash (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent interrupts while reporting non-<literal>ERROR</> messages\n      (Tom Lane)\n     </para>\n\n     <para>\n      This guards against rare server-process freezeups due to recursive\n      entry to <function>syslog()</>, and perhaps other related problems.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent intermittent <quote>could not reserve shared memory region</>\n      failures on recent Windows versions (MauMau)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2014a\n      for DST law changes in Fiji and Turkey, plus historical changes in\n      Israel and Ukraine.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-16\">\n  <title>Release 9.0.16</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2014-02-20</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.15.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.16</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 9.0.15,\n    see <xref linkend=\"release-9-0-15\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Shore up <literal>GRANT ... WITH ADMIN OPTION</> restrictions\n      (Noah Misch)\n     </para>\n\n     <para>\n      Granting a role without <literal>ADMIN OPTION</> is supposed to\n      prevent the grantee from adding or removing members from the granted\n      role, but this restriction was easily bypassed by doing <literal>SET\n      ROLE</> first.  The security impact is mostly that a role member can\n      revoke the access of others, contrary to the wishes of his grantor.\n      Unapproved role member additions are a lesser concern, since an\n      uncooperative role member could provide most of his rights to others\n      anyway by creating views or <literal>SECURITY DEFINER</> functions.\n      (CVE-2014-0060)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent privilege escalation via manual calls to PL validator\n      functions (Andres Freund)\n     </para>\n\n     <para>\n      The primary role of PL validator functions is to be called implicitly\n      during <command>CREATE FUNCTION</>, but they are also normal SQL\n      functions that a user can call explicitly.  Calling a validator on\n      a function actually written in some other language was not checked\n      for and could be exploited for privilege-escalation purposes.\n      The fix involves adding a call to a privilege-checking function in\n      each validator function.  Non-core procedural languages will also\n      need to make this change to their own validator functions, if any.\n      (CVE-2014-0061)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid multiple name lookups during table and index DDL\n      (Robert Haas, Andres Freund)\n     </para>\n\n     <para>\n      If the name lookups come to different conclusions due to concurrent\n      activity, we might perform some parts of the DDL on a different table\n      than other parts.  At least in the case of <command>CREATE INDEX</>,\n      this can be used to cause the permissions checks to be performed\n      against a different table than the index creation, allowing for a\n      privilege escalation attack.\n      (CVE-2014-0062)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent buffer overrun with long datetime strings (Noah Misch)\n     </para>\n\n     <para>\n      The <literal>MAXDATELEN</> constant was too small for the longest\n      possible value of type <type>interval</>, allowing a buffer overrun\n      in <function>interval_out()</>.  Although the datetime input\n      functions were more careful about avoiding buffer overrun, the limit\n      was short enough to cause them to reject some valid inputs, such as\n      input containing a very long timezone name.  The <application>ecpg</>\n      library contained these vulnerabilities along with some of its own.\n      (CVE-2014-0063)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent buffer overrun due to integer overflow in size calculations\n      (Noah Misch, Heikki Linnakangas)\n     </para>\n\n     <para>\n      Several functions, mostly type input functions, calculated an\n      allocation size without checking for overflow.  If overflow did\n      occur, a too-small buffer would be allocated and then written past.\n      (CVE-2014-0064)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent overruns of fixed-size buffers\n      (Peter Eisentraut, Jozef Mlich)\n     </para>\n\n     <para>\n      Use <function>strlcpy()</> and related functions to provide a clear\n      guarantee that fixed-size buffers are not overrun.  Unlike the\n      preceding items, it is unclear whether these cases really represent\n      live issues, since in most cases there appear to be previous\n      constraints on the size of the input string.  Nonetheless it seems\n      prudent to silence all Coverity warnings of this type.\n      (CVE-2014-0065)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid crashing if <function>crypt()</> returns NULL (Honza Horak,\n      Bruce Momjian)\n     </para>\n\n     <para>\n      There are relatively few scenarios in which <function>crypt()</>\n      could return NULL, but <filename>contrib/chkpass</> would crash\n      if it did.  One practical case in which this could be an issue is\n      if <application>libc</> is configured to refuse to execute unapproved\n      hashing algorithms (e.g., <quote>FIPS mode</>).\n      (CVE-2014-0066)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Document risks of <literal>make check</> in the regression testing\n      instructions (Noah Misch, Tom Lane)\n     </para>\n\n     <para>\n      Since the temporary server started by <literal>make check</>\n      uses <quote>trust</> authentication, another user on the same machine\n      could connect to it as database superuser, and then potentially\n      exploit the privileges of the operating-system user who started the\n      tests.  A future release will probably incorporate changes in the\n      testing procedure to prevent this risk, but some public discussion is\n      needed first.  So for the moment, just warn people against using\n      <literal>make check</> when there are untrusted users on the\n      same machine.\n      (CVE-2014-0067)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible mis-replay of WAL records when some segments of a\n      relation aren't full size (Greg Stark, Tom Lane)\n     </para>\n\n     <para>\n      The WAL update could be applied to the wrong page, potentially many\n      pages past where it should have been.  Aside from corrupting data,\n      this error has been observed to result in significant <quote>bloat</>\n      of standby servers compared to their masters, due to updates being\n      applied far beyond where the end-of-file should have been.  This\n      failure mode does not appear to be a significant risk during crash\n      recovery, only when initially synchronizing a standby created from a\n      base backup taken from a quickly-changing master.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug in determining when recovery has reached consistency\n      (Tomonari Katsumata, Heikki Linnakangas)\n     </para>\n\n     <para>\n      In some cases WAL replay would mistakenly conclude that the database\n      was already consistent at the start of replay, thus possibly allowing\n      hot-standby queries before the database was really consistent.  Other\n      symptoms such as <quote>PANIC: WAL contains references to invalid\n      pages</> were also possible.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix improper locking of btree index pages while replaying\n      a <literal>VACUUM</> operation in hot-standby mode (Andres Freund,\n      Heikki Linnakangas, Tom Lane)\n     </para>\n\n     <para>\n      This error could result in <quote>PANIC: WAL contains references to\n      invalid pages</> failures.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that insertions into non-leaf GIN index pages write a full-page\n      WAL record when appropriate (Heikki Linnakangas)\n     </para>\n\n     <para>\n      The previous coding risked index corruption in the event of a\n      partial-page write during a system crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race conditions during server process exit (Robert Haas)\n     </para>\n\n     <para>\n      Ensure that signal handlers don't attempt to use the\n      process's <varname>MyProc</> pointer after it's no longer valid.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix unsafe references to <varname>errno</> within error reporting\n      logic (Christian Kruse)\n     </para>\n\n     <para>\n      This would typically lead to odd behaviors such as missing or\n      inappropriate <literal>HINT</> fields.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crashes from using <function>ereport()</> too early\n      during server startup (Tom Lane)\n     </para>\n\n     <para>\n      The principal case we've seen in the field is a crash if the server\n      is started in a directory it doesn't have permission to read.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Clear retry flags properly in OpenSSL socket write\n      function (Alexander Kukushkin)\n     </para>\n\n     <para>\n      This omission could result in a server lockup after unexpected loss\n      of an SSL-encrypted connection.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix length checking for Unicode identifiers (<literal>U&amp;\"...\"</>\n      syntax) containing escapes (Tom Lane)\n     </para>\n\n     <para>\n      A spurious truncation warning would be printed for such identifiers\n      if the escaped form of the identifier was too long, but the\n      identifier actually didn't need truncation after de-escaping.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow keywords that are type names to be used in lists of roles\n      (Stephen Frost)\n     </para>\n\n     <para>\n      A previous patch allowed such keywords to be used without quoting\n      in places such as role identifiers; but it missed cases where a\n      list of role identifiers was permitted, such as <literal>DROP ROLE</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash due to invalid plan for nested sub-selects, such\n      as <literal>WHERE (... x IN (SELECT ...) ...) IN (SELECT ...)</>\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that <command>ANALYZE</> creates statistics for a table column\n      even when all the values in it are <quote>too wide</> (Tom Lane)\n     </para>\n\n     <para>\n      <command>ANALYZE</> intentionally omits very wide values from its\n      histogram and most-common-values calculations, but it neglected to do\n      something sane in the case that all the sampled entries are too wide.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <literal>ALTER TABLE ... SET TABLESPACE</>, allow the database's\n      default tablespace to be used without a permissions check\n      (Stephen Frost)\n     </para>\n\n     <para>\n      <literal>CREATE TABLE</> has always allowed such usage,\n      but <literal>ALTER TABLE</> didn't get the memo.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <quote>cannot accept a set</> error when some arms of\n      a <literal>CASE</> return a set and others don't (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix checks for all-zero client addresses in pgstat functions (Kevin\n      Grittner)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible misclassification of multibyte characters by the text\n      search parser (Tom Lane)\n     </para>\n\n     <para>\n      Non-ASCII characters could be misclassified when using C locale with\n      a multibyte encoding.  On Cygwin, non-C locales could fail as well.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible misbehavior in <function>plainto_tsquery()</>\n      (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Use <function>memmove()</> not <function>memcpy()</> for copying\n      overlapping memory regions.  There have been no field reports of\n      this actually causing trouble, but it's certainly risky.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Accept <literal>SHIFT_JIS</> as an encoding name for locale checking\n      purposes (Tatsuo Ishii)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix misbehavior of <function>PQhost()</> on Windows (Fujii Masao)\n     </para>\n\n     <para>\n      It should return <literal>localhost</> if no host has been specified.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve error handling in <application>libpq</> and <application>psql</>\n      for failures during <literal>COPY TO STDOUT/FROM STDIN</> (Tom Lane)\n     </para>\n\n     <para>\n      In particular this fixes an infinite loop that could occur in 9.2 and\n      up if the server connection was lost during <literal>COPY FROM\n      STDIN</>.  Variants of that scenario might be possible in older\n      versions, or with other client applications.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix misaligned descriptors in <application>ecpg</> (MauMau)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>ecpg</>, handle lack of a hostname in the connection\n      parameters properly (Michael Meskes)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix performance regression in <filename>contrib/dblink</> connection\n      startup (Joe Conway)\n     </para>\n\n     <para>\n      Avoid an unnecessary round trip when client and server encodings match.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <filename>contrib/isn</>, fix incorrect calculation of the check\n      digit for ISMN values (Fabien Coelho)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure client-code-only installation procedure works as documented\n      (Peter Eisentraut)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In Mingw and Cygwin builds, install the <application>libpq</> DLL\n      in the <filename>bin</> directory (Andrew Dunstan)\n     </para>\n\n     <para>\n      This duplicates what the MSVC build has long done.  It should fix\n      problems with programs like <application>psql</> failing to start\n      because they can't find the DLL.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid using the deprecated <literal>dllwrap</> tool in Cygwin builds\n      (Marco Atzeri)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't generate plain-text <filename>HISTORY</>\n      and <filename>src/test/regress/README</> files anymore (Tom Lane)\n     </para>\n\n     <para>\n      These text files duplicated the main HTML and PDF documentation\n      formats.  The trouble involved in maintaining them greatly outweighs\n      the likely audience for plain-text format.  Distribution tarballs\n      will still contain files by these names, but they'll just be stubs\n      directing the reader to consult the main documentation.\n      The plain-text <filename>INSTALL</> file will still be maintained, as\n      there is arguably a use-case for that.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2013i\n      for DST law changes in Jordan and historical changes in Cuba.\n     </para>\n\n     <para>\n      In addition, the zones <literal>Asia/Riyadh87</>,\n      <literal>Asia/Riyadh88</>, and <literal>Asia/Riyadh89</> have been\n      removed, as they are no longer maintained by IANA, and never\n      represented actual civil timekeeping practice.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-15\">\n  <title>Release 9.0.15</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2013-12-05</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.14.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.15</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, this release corrects a number of potential data corruption\n    issues.  See the first two changelog entries below to find out whether\n    your installation has been affected and what steps you can take if so.\n   </para>\n\n   <para>\n    Also, if you are upgrading from a version earlier than 9.0.13,\n    see <xref linkend=\"release-9-0-13\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix <command>VACUUM</>'s tests to see whether it can\n      update <structfield>relfrozenxid</> (Andres Freund)\n     </para>\n\n     <para>\n      In some cases <command>VACUUM</> (either manual or autovacuum) could\n      incorrectly advance a table's <structfield>relfrozenxid</> value,\n      allowing tuples to escape freezing, causing those rows to become\n      invisible once 2^31 transactions have elapsed.  The probability of\n      data loss is fairly low since multiple incorrect advancements would\n      need to happen before actual loss occurs, but it's not zero.  Users\n      upgrading from releases 9.0.4 or 8.4.8 or earlier are not affected, but\n      all later versions contain the bug.\n     </para>\n\n     <para>\n      The issue can be ameliorated by, after upgrading, vacuuming all tables\n      in all databases while having <link\n      linkend=\"guc-vacuum-freeze-table-age\"><varname>vacuum_freeze_table_age</></link>\n      set to zero.  This will fix any latent corruption but will not be able\n      to fix all pre-existing data errors.  However, an installation can be\n      presumed safe after performing this vacuuming if it has executed fewer\n      than 2^31 update transactions in its lifetime (check this with\n      <literal>SELECT txid_current() < 2^31</>).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix initialization of <filename>pg_clog</> and <filename>pg_subtrans</>\n      during hot standby startup (Andres Freund, Heikki Linnakangas)\n     </para>\n\n     <para>\n      This bug can cause data loss on standby servers at the moment they\n      start to accept hot-standby queries, by marking committed transactions\n      as uncommitted. The likelihood of such corruption is small unless, at\n      the time of standby startup, the primary server has executed many\n      updating transactions since its last checkpoint.  Symptoms include\n      missing rows, rows that should have been deleted being still visible,\n      and obsolete versions of updated rows being still visible alongside\n      their newer versions.\n     </para>\n\n     <para>\n      This bug was introduced in versions 9.3.0, 9.2.5, 9.1.10, and 9.0.14.\n      Standby servers that have only been running earlier releases are not\n      at risk.  It's recommended that standby servers that have ever run any\n      of the buggy releases be re-cloned from the primary (e.g., with a new\n      base backup) after upgrading.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Truncate <filename>pg_multixact</> contents during WAL replay\n      (Andres Freund)\n     </para>\n\n     <para>\n      This avoids ever-increasing disk space consumption in standby servers.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition in GIN index posting tree page deletion (Heikki\n      Linnakangas)\n     </para>\n\n     <para>\n      This could lead to transient wrong answers or query failures.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid flattening a subquery whose <literal>SELECT</> list contains a\n      volatile function wrapped inside a sub-<literal>SELECT</> (Tom Lane)\n     </para>\n\n     <para>\n      This avoids unexpected results due to extra evaluations of the\n      volatile function.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner's processing of non-simple-variable subquery outputs\n      nested within outer joins (Tom Lane)\n     </para>\n\n     <para>\n      This error could lead to incorrect plans for queries involving\n      multiple levels of subqueries within <literal>JOIN</> syntax.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix premature deletion of temporary files (Andres Freund)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible read past end of memory in rule printing (Peter Eisentraut)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix array slicing of <type>int2vector</> and <type>oidvector</> values\n      (Tom Lane)\n     </para>\n\n     <para>\n      Expressions of this kind are now implicitly promoted to\n      regular <type>int2</> or <type>oid</> arrays.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect behaviors when using a SQL-standard, simple GMT offset\n      timezone (Tom Lane)\n     </para>\n\n     <para>\n      In some cases, the system would use the simple GMT offset value when\n      it should have used the regular timezone setting that had prevailed\n      before the simple offset was selected.  This change also causes\n      the <function>timeofday</> function to honor the simple GMT offset\n      zone.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent possible misbehavior when logging translations of Windows\n      error codes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Properly quote generated command lines in <application>pg_ctl</>\n      (Naoya Anzai and Tom Lane)\n     </para>\n\n     <para>\n      This fix applies only to Windows.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_dumpall</> to work when a source database\n      sets <link\n      linkend=\"guc-default-transaction-read-only\"><varname>default_transaction_read_only</></link>\n      via <command>ALTER DATABASE SET</> (Kevin Grittner)\n     </para>\n\n     <para>\n      Previously, the generated script would fail during restore.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</>'s processing of lists of variables\n      declared <type>varchar</> (Zolt&aacute;n B&ouml;sz&ouml;rm&eacute;nyi)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <filename>contrib/lo</> defend against incorrect trigger definitions\n      (Marc Cousin)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2013h\n      for DST law changes in Argentina, Brazil, Jordan, Libya,\n      Liechtenstein, Morocco, and Palestine.  Also, new timezone\n      abbreviations WIB, WIT, WITA for Indonesia.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-14\">\n  <title>Release 9.0.14</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2013-10-10</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.13.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.14</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 9.0.13,\n    see <xref linkend=\"release-9-0-13\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Prevent corruption of multi-byte characters when attempting to\n      case-fold identifiers (Andrew Dunstan)\n     </para>\n\n     <para>\n      <productname>PostgreSQL</> case-folds non-ASCII characters only\n      when using a single-byte server encoding.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix checkpoint memory leak in background writer when <literal>wal_level =\n      hot_standby</> (Naoya Anzai)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak caused by <function>lo_open()</function> failure\n      (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory overcommit bug when <varname>work_mem</> is using more\n      than 24GB of memory (Stephen Frost)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix deadlock bug in libpq when using SSL (Stephen Frost)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible SSL state corruption in threaded libpq applications\n      (Nick Phillips, Stephen Frost)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Properly compute row estimates for boolean columns containing many NULL\n      values (Andrew Gierth)\n     </para>\n\n     <para>\n      Previously tests like <literal>col IS NOT TRUE</> and <literal>col IS\n      NOT FALSE</> did not properly factor in NULL values when estimating\n      plan costs.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent pushing down <literal>WHERE</> clauses into unsafe\n      <literal>UNION/INTERSECT</> subqueries (Tom Lane)\n     </para>\n\n     <para>\n      Subqueries of a <literal>UNION</> or <literal>INTERSECT</> that\n      contain set-returning functions or volatile functions in their\n      <literal>SELECT</> lists could be improperly optimized, leading to\n      run-time errors or incorrect query results.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix rare case of <quote>failed to locate grouping columns</>\n      planner failure (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve view dumping code's handling of dropped columns in referenced\n      tables (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Properly record index comments created using <literal>UNIQUE</>\n      and <literal>PRIMARY KEY</> syntax (Andres Freund)\n     </para>\n\n     <para>\n      This fixes a parallel <application>pg_restore</> failure.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>REINDEX TABLE</> and <command>REINDEX DATABASE</>\n      to properly revalidate constraints and mark invalidated indexes as\n      valid (Noah Misch)\n     </para>\n\n     <para>\n      <command>REINDEX INDEX</> has always worked properly.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible deadlock during concurrent <command>CREATE INDEX\n      CONCURRENTLY</> operations (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>regexp_matches()</> handling of zero-length matches\n      (Jeevan Chalke)\n     </para>\n\n     <para>\n      Previously, zero-length matches like '^' could return too many matches.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix crash for overly-complex regular expressions (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix regular expression match failures for back references combined with\n      non-greedy quantifiers (Jeevan Chalke)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent <command>CREATE FUNCTION</> from checking <command>SET</>\n      variables unless function body checking is enabled (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow <command>ALTER DEFAULT PRIVILEGES</> to operate on schemas\n      without requiring CREATE permission (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Loosen restriction on keywords used in queries (Tom Lane)\n     </para>\n\n     <para>\n      Specifically, lessen keyword restrictions for role names, language\n      names, <command>EXPLAIN</> and <command>COPY</> options, and\n      <command>SET</> values.  This allows <literal>COPY ... (FORMAT\n      BINARY)</> to work as expected; previously <literal>BINARY</> needed\n      to be quoted.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>pgp_pub_decrypt()</> so it works for secret keys with\n      passwords (Marko Kreen)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Remove rare inaccurate warning during vacuum of index-less tables\n      (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that <command>VACUUM ANALYZE</> still runs the ANALYZE phase\n      if its attempt to truncate the file is cancelled due to lock conflicts\n      (Kevin Grittner)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid possible failure when performing transaction control commands (e.g\n      ROLLBACK) in prepared queries (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that floating-point data input accepts standard spellings\n      of <quote>infinity</> on all platforms (Tom Lane)\n     </para>\n\n     <para>\n      The C99 standard says that allowable spellings are <literal>inf</>,\n      <literal>+inf</>, <literal>-inf</>, <literal>infinity</>,\n      <literal>+infinity</>, and <literal>-infinity</>.  Make sure we\n      recognize these even if the platform's <function>strtod</> function\n      doesn't.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Expand ability to compare rows to records and arrays (Rafal Rzepecki,\n      Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2013d\n      for DST law changes in Israel, Morocco, Palestine, and Paraguay.\n      Also, historical zone data corrections for Macquarie Island.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-13\">\n  <title>Release 9.0.13</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2013-04-04</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.12.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.13</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, this release corrects several errors in management of GiST\n    indexes.  After installing this update, it is advisable to\n    <command>REINDEX</> any GiST indexes that meet one or more of the\n    conditions described below.\n   </para>\n\n   <para>\n    Also, if you are upgrading from a version earlier than 9.0.6,\n    see <xref linkend=\"release-9-0-6\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix insecure parsing of server command-line switches (Mitsumasa\n      Kondo, Kyotaro Horiguchi)\n     </para>\n\n     <para>\n      A connection request containing a database name that begins with\n      <quote><literal>-</></quote> could be crafted to damage or destroy\n      files within the server's data directory, even if the request is\n      eventually rejected.  (CVE-2013-1899)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Reset OpenSSL randomness state in each postmaster child process\n      (Marko Kreen)\n     </para>\n\n     <para>\n      This avoids a scenario wherein random numbers generated by\n      <filename>contrib/pgcrypto</> functions might be relatively easy for\n      another database user to guess.  The risk is only significant when\n      the postmaster is configured with <varname>ssl</> = <literal>on</>\n      but most connections don't use SSL encryption.  (CVE-2013-1900)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix GiST indexes to not use <quote>fuzzy</> geometric comparisons when\n      it's not appropriate to do so (Alexander Korotkov)\n     </para>\n\n     <para>\n      The core geometric types perform comparisons using <quote>fuzzy</>\n      equality, but <function>gist_box_same</> must do exact comparisons,\n      else GiST indexes using it might become inconsistent.  After installing\n      this update, users should <command>REINDEX</> any GiST indexes on\n      <type>box</>, <type>polygon</>, <type>circle</>, or <type>point</>\n      columns, since all of these use <function>gist_box_same</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix erroneous range-union and penalty logic in GiST indexes that use\n      <filename>contrib/btree_gist</> for variable-width data types, that is\n      <type>text</>, <type>bytea</>, <type>bit</>, and <type>numeric</>\n      columns (Tom Lane)\n     </para>\n\n     <para>\n      These errors could result in inconsistent indexes in which some keys\n      that are present would not be found by searches, and also in useless\n      index bloat.  Users are advised to <command>REINDEX</> such indexes\n      after installing this update.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bugs in GiST page splitting code for multi-column indexes\n      (Tom Lane)\n     </para>\n\n     <para>\n      These errors could result in inconsistent indexes in which some keys\n      that are present would not be found by searches, and also in indexes\n      that are unnecessarily inefficient to search.  Users are advised to\n      <command>REINDEX</> multi-column GiST indexes after installing this\n      update.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>gist_point_consistent</>\n      to handle fuzziness consistently (Alexander Korotkov)\n     </para>\n\n     <para>\n      Index scans on GiST indexes on <type>point</> columns would sometimes\n      yield results different from a sequential scan, because\n      <function>gist_point_consistent</> disagreed with the underlying\n      operator code about whether to do comparisons exactly or fuzzily.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix buffer leak in WAL replay (Heikki Linnakangas)\n     </para>\n\n     <para>\n      This bug could result in <quote>incorrect local pin count</> errors\n      during replay, making recovery impossible.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition in <command>DELETE RETURNING</> (Tom Lane)\n     </para>\n\n     <para>\n      Under the right circumstances, <command>DELETE RETURNING</> could\n      attempt to fetch data from a shared buffer that the current process\n      no longer has any pin on.  If some other process changed the buffer\n      meanwhile, this would lead to garbage <literal>RETURNING</> output, or\n      even a crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix infinite-loop risk in regular expression compilation (Tom Lane,\n      Don Porter)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix potential null-pointer dereference in regular expression compilation\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>to_char()</> to use ASCII-only case-folding rules where\n      appropriate (Tom Lane)\n     </para>\n\n     <para>\n      This fixes misbehavior of some template patterns that should be\n      locale-independent, but mishandled <quote><literal>I</></quote> and\n      <quote><literal>i</></quote> in Turkish locales.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix unwanted rejection of timestamp <literal>1999-12-31 24:00:00</>\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix logic error when a single transaction does <command>UNLISTEN</>\n      then <command>LISTEN</> (Tom Lane)\n     </para>\n\n     <para>\n      The session wound up not listening for notify events at all, though it\n      surely should listen in this case.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Remove useless <quote>picksplit doesn't support secondary split</> log\n      messages (Josh Hansen, Tom Lane)\n     </para>\n\n     <para>\n      This message seems to have been added in expectation of code that was\n      never written, and probably never will be, since GiST's default\n      handling of secondary splits is actually pretty good.  So stop nagging\n      end users about it.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible failure to send a session's last few transaction\n      commit/abort counts to the statistics collector (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Eliminate memory leaks in PL/Perl's <function>spi_prepare()</> function\n      (Alex Hunsaker, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_dumpall</> to handle database names containing\n      <quote><literal>=</></quote> correctly (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid crash in <application>pg_dump</> when an incorrect connection\n      string is given (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ignore invalid indexes in <application>pg_dump</> and\n      <application>pg_upgrade</> (Michael Paquier, Bruce Momjian)\n     </para>\n\n     <para>\n      Dumping invalid indexes can cause problems at restore time, for example\n      if the reason the index creation failed was because it tried to enforce\n      a uniqueness condition not satisfied by the table's data.  Also, if the\n      index creation is in fact still in progress, it seems reasonable to\n      consider it to be an uncommitted DDL change, which\n      <application>pg_dump</> wouldn't be expected to dump anyway.\n      <application>pg_upgrade</> now also skips invalid indexes rather than\n      failing.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/pg_trgm</>'s <function>similarity()</> function\n      to return zero for trigram-less strings (Tom Lane)\n     </para>\n\n     <para>\n      Previously it returned <literal>NaN</> due to internal division by zero.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2013b\n      for DST law changes in Chile, Haiti, Morocco, Paraguay, and some\n      Russian areas.  Also, historical zone data corrections for numerous\n      places.\n     </para>\n\n     <para>\n      Also, update the time zone abbreviation files for recent changes in\n      Russia and elsewhere: <literal>CHOT</>, <literal>GET</>,\n      <literal>IRKT</>, <literal>KGT</>, <literal>KRAT</>, <literal>MAGT</>,\n      <literal>MAWT</>, <literal>MSK</>, <literal>NOVT</>, <literal>OMST</>,\n      <literal>TKT</>, <literal>VLAT</>, <literal>WST</>, <literal>YAKT</>,\n      <literal>YEKT</> now follow their current meanings, and\n      <literal>VOLT</> (Europe/Volgograd) and <literal>MIST</>\n      (Antarctica/Macquarie) are added to the default abbreviations list.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-12\">\n  <title>Release 9.0.12</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2013-02-07</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.11.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.12</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 9.0.6,\n    see <xref linkend=\"release-9-0-6\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Prevent execution of <function>enum_recv</> from SQL (Tom Lane)\n     </para>\n\n     <para>\n      The function was misdeclared, allowing a simple SQL command to crash the\n      server.  In principle an attacker might be able to use it to examine the\n      contents of server memory.  Our thanks to Sumit Soni (via Secunia SVCRP)\n      for reporting this issue.  (CVE-2013-0255)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix multiple problems in detection of when a consistent database\n      state has been reached during WAL replay (Fujii Masao, Heikki\n      Linnakangas, Simon Riggs, Andres Freund)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update minimum recovery point when truncating a relation file (Heikki\n      Linnakangas)\n     </para>\n\n     <para>\n      Once data has been discarded, it's no longer safe to stop recovery at\n      an earlier point in the timeline.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix missing cancellations in hot standby mode (Noah Misch, Simon Riggs)\n     </para>\n\n     <para>\n      The need to cancel conflicting hot-standby queries would sometimes be\n      missed, allowing those queries to see inconsistent data.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix SQL grammar to allow subscripting or field selection from a\n      sub-SELECT result (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix performance problems with autovacuum truncation in busy workloads\n      (Jan Wieck)\n     </para>\n\n     <para>\n      Truncation of empty pages at the end of a table requires exclusive\n      lock, but autovacuum was coded to fail (and release the table lock)\n      when there are conflicting lock requests.  Under load, it is easily\n      possible that truncation would never occur, resulting in table bloat.\n      Fix by performing a partial truncation, releasing the lock, then\n      attempting to re-acquire the lock and continue.  This fix also greatly\n      reduces the average time before autovacuum releases the lock after a\n      conflicting request arrives.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Protect against race conditions when scanning\n      <structname>pg_tablespace</> (Stephen Frost, Tom Lane)\n     </para>\n\n     <para>\n      <command>CREATE DATABASE</> and <command>DROP DATABASE</> could\n      misbehave if there were concurrent updates of\n      <structname>pg_tablespace</> entries.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent <command>DROP OWNED</> from trying to drop whole databases or\n      tablespaces (&Aacute;lvaro Herrera)\n     </para>\n\n     <para>\n      For safety, ownership of these objects must be reassigned, not dropped.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix error in <link\n      linkend=\"guc-vacuum-freeze-table-age\"><varname>vacuum_freeze_table_age</></link>\n      implementation (Andres Freund)\n     </para>\n\n     <para>\n      In installations that have existed for more than <link\n      linkend=\"guc-vacuum-freeze-min-age\"><varname>vacuum_freeze_min_age</></link>\n      transactions, this mistake prevented autovacuum from using partial-table\n      scans, so that a full-table scan would always happen instead.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent misbehavior when a <symbol>RowExpr</> or <symbol>XmlExpr</>\n      is parse-analyzed twice (Andres Freund, Tom Lane)\n     </para>\n\n     <para>\n      This mistake could be user-visible in contexts such as\n      <literal>CREATE TABLE LIKE INCLUDING INDEXES</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve defenses against integer overflow in hashtable sizing\n      calculations (Jeff Davis)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Reject out-of-range dates in <function>to_date()</> (Hitoshi Harada)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that non-ASCII prompt strings are translated to the correct\n      code page on Windows (Alexander Law, Noah Misch)\n     </para>\n\n     <para>\n      This bug affected <application>psql</> and some other client programs.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash in <application>psql</>'s <command>\\?</> command\n      when not connected to a database (Meng Qingzhong)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_upgrade</> to deal with invalid indexes safely\n      (Bruce Momjian)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix one-byte buffer overrun in <application>libpq</>'s\n      <function>PQprintTuples</> (Xi Wang)\n     </para>\n\n     <para>\n      This ancient function is not used anywhere by\n      <productname>PostgreSQL</> itself, but it might still be used by some\n      client code.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>ecpglib</> use translated messages properly\n      (Chen Huajun)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Properly install <application>ecpg_compat</> and\n      <application>pgtypes</> libraries on MSVC (Jiang Guiqing)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Include our version of <function>isinf()</> in\n      <application>libecpg</> if it's not provided by the system\n      (Jiang Guiqing)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Rearrange configure's tests for supplied functions so it is not\n      fooled by bogus exports from libedit/libreadline (Christoph Berg)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure Windows build number increases over time (Magnus Hagander)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>pgxs</> build executables with the right\n      <literal>.exe</> suffix when cross-compiling for Windows\n      (Zoltan Boszormenyi)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add new timezone abbreviation <literal>FET</> (Tom Lane)\n     </para>\n\n     <para>\n      This is now used in some eastern-European time zones.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-11\">\n  <title>Release 9.0.11</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2012-12-06</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.10.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.11</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 9.0.6,\n    see <xref linkend=\"release-9-0-6\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix multiple bugs associated with <command>CREATE INDEX\n      CONCURRENTLY</> (Andres Freund, Tom Lane)\n     </para>\n\n     <para>\n      Fix <command>CREATE INDEX CONCURRENTLY</> to use\n      in-place updates when changing the state of an index's\n      <structname>pg_index</> row.  This prevents race conditions that could\n      cause concurrent sessions to miss updating the target index, thus\n      resulting in corrupt concurrently-created indexes.\n     </para>\n\n     <para>\n      Also, fix various other operations to ensure that they ignore\n      invalid indexes resulting from a failed <command>CREATE INDEX\n      CONCURRENTLY</> command.  The most important of these is\n      <command>VACUUM</>, because an auto-vacuum could easily be launched\n      on the table before corrective action can be taken to fix or remove\n      the invalid index.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix buffer locking during WAL replay (Tom Lane)\n     </para>\n\n     <para>\n      The WAL replay code was insufficiently careful about locking buffers\n      when replaying WAL records that affect more than one page.  This could\n      result in hot standby queries transiently seeing inconsistent states,\n      resulting in wrong answers or unexpected failures.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix an error in WAL generation logic for GIN indexes (Tom Lane)\n     </para>\n\n     <para>\n      This could result in index corruption, if a torn-page failure occurred.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Properly remove startup process's virtual XID lock when promoting a\n      hot standby server to normal running (Simon Riggs)\n     </para>\n\n     <para>\n      This oversight could prevent subsequent execution of certain\n      operations such as <command>CREATE INDEX CONCURRENTLY</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid bogus <quote>out-of-sequence timeline ID</> errors in standby\n      mode (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent the postmaster from launching new child processes after it's\n      received a shutdown signal (Tom Lane)\n     </para>\n\n     <para>\n      This mistake could result in shutdown taking longer than it should, or\n      even never completing at all without additional user action.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid corruption of internal hash tables when out of memory\n      (Hitoshi Harada)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planning of non-strict equivalence clauses above outer joins\n      (Tom Lane)\n     </para>\n\n     <para>\n      The planner could derive incorrect constraints from a clause equating\n      a non-strict construct to something else, for example\n      <literal>WHERE COALESCE(foo, 0) = 0</>\n      when <literal>foo</> is coming from the nullable side of an outer join.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve planner's ability to prove exclusion constraints from\n      equivalence classes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix partial-row matching in hashed subplans to handle cross-type cases\n      correctly (Tom Lane)\n     </para>\n\n     <para>\n      This affects multicolumn <literal>NOT IN</> subplans, such as\n      <literal>WHERE (a, b) NOT IN (SELECT x, y FROM ...)</>\n      when for instance <literal>b</> and <literal>y</> are <type>int4</>\n      and <type>int8</> respectively.  This mistake led to wrong answers\n      or crashes depending on the specific datatypes involved.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Acquire buffer lock when re-fetching the old tuple for an\n      <literal>AFTER ROW UPDATE/DELETE</> trigger (Andres Freund)\n     </para>\n\n     <para>\n      In very unusual circumstances, this oversight could result in passing\n      incorrect data to the precheck logic for a foreign-key enforcement\n      trigger.  That could result in a crash, or in an incorrect decision\n      about whether to fire the trigger.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>ALTER COLUMN TYPE</> to handle inherited check\n      constraints properly (Pavan Deolasee)\n     </para>\n\n     <para>\n      This worked correctly in pre-8.4 releases, and now works correctly\n      in 8.4 and later.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>REASSIGN OWNED</> to handle grants on tablespaces\n      (&Aacute;lvaro Herrera)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ignore incorrect <structname>pg_attribute</> entries for system\n      columns for views (Tom Lane)\n     </para>\n\n     <para>\n      Views do not have any system columns.  However, we forgot to\n      remove such entries when converting a table to a view.  That's fixed\n      properly for 9.3 and later, but in previous branches we need to defend\n      against existing mis-converted views.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix rule printing to dump <literal>INSERT INTO <replaceable>table</>\n      DEFAULT VALUES</literal> correctly (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Guard against stack overflow when there are too many\n      <literal>UNION</>/<literal>INTERSECT</>/<literal>EXCEPT</> clauses\n      in a query (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent platform-dependent failures when dividing the minimum possible\n      integer value by -1 (Xi Wang, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible access past end of string in date parsing\n      (Hitoshi Harada)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix failure to advance XID epoch if XID wraparound happens during a\n      checkpoint and <varname>wal_level</> is <literal>hot_standby</>\n      (Tom Lane, Andres Freund)\n     </para>\n\n     <para>\n      While this mistake had no particular impact on\n      <productname>PostgreSQL</productname> itself, it was bad for\n      applications that rely on <function>txid_current()</> and related\n      functions: the TXID value would appear to go backwards.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Produce an understandable error message if the length of the path name\n      for a Unix-domain socket exceeds the platform-specific limit\n      (Tom Lane, Andrew Dunstan)\n     </para>\n\n     <para>\n      Formerly, this would result in something quite unhelpful, such as\n      <quote>Non-recoverable failure in name resolution</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leaks when sending composite column values to the client\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>pg_ctl</> more robust about reading the\n      <filename>postmaster.pid</> file (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Fix race conditions and possible file descriptor leakage.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash in <application>psql</> if incorrectly-encoded data\n      is presented and the <varname>client_encoding</> setting is a\n      client-only encoding, such as SJIS (Jiang Guiqing)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bugs in the <filename>restore.sql</> script emitted by\n      <application>pg_dump</> in <literal>tar</> output format (Tom Lane)\n     </para>\n\n     <para>\n      The script would fail outright on tables whose names include\n      upper-case characters.  Also, make the script capable of restoring\n      data in <option>--inserts</> mode as well as the regular COPY mode.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</> to accept POSIX-conformant\n      <literal>tar</> files (Brian Weaver, Tom Lane)\n     </para>\n\n     <para>\n      The original coding of <application>pg_dump</>'s <literal>tar</>\n      output mode produced files that are not fully conformant with the\n      POSIX standard.  This has been corrected for version 9.3.  This\n      patch updates previous branches so that they will accept both the\n      incorrect and the corrected formats, in hopes of avoiding\n      compatibility problems when 9.3 comes out.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_resetxlog</> to locate <filename>postmaster.pid</>\n      correctly when given a relative path to the data directory (Tom Lane)\n     </para>\n\n     <para>\n      This mistake could lead to <application>pg_resetxlog</> not noticing\n      that there is an active postmaster using the data directory.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>libpq</>'s <function>lo_import()</> and\n      <function>lo_export()</> functions to report file I/O errors properly\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</>'s processing of nested structure pointer\n      variables (Muhammad Usama)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</>'s <function>ecpg_get_data</> function to\n      handle arrays properly (Michael Meskes)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <filename>contrib/pageinspect</>'s btree page inspection\n      functions take buffer locks while examining pages (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pgxs</> support for building loadable modules on AIX\n      (Tom Lane)\n     </para>\n\n     <para>\n      Building modules outside the original source tree didn't work on AIX.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2012j\n      for DST law changes in Cuba, Israel, Jordan, Libya, Palestine, Western\n      Samoa, and portions of Brazil.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-10\">\n  <title>Release 9.0.10</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2012-09-24</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.9.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.10</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 9.0.6,\n    see <xref linkend=\"release-9-0-6\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix planner's assignment of executor parameters, and fix executor's\n      rescan logic for CTE plan nodes (Tom Lane)\n     </para>\n\n     <para>\n      These errors could result in wrong answers from queries that scan the\n      same <literal>WITH</> subquery multiple times.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve page-splitting decisions in GiST indexes (Alexander Korotkov,\n      Robert Haas, Tom Lane)\n     </para>\n\n     <para>\n      Multi-column GiST indexes might suffer unexpected bloat due to this\n      error.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix cascading privilege revoke to stop if privileges are still held\n      (Tom Lane)\n     </para>\n\n     <para>\n      If we revoke a grant option from some role <replaceable>X</>, but\n      <replaceable>X</> still holds that option via a grant from someone\n      else, we should not recursively revoke the corresponding privilege\n      from role(s) <replaceable>Y</> that <replaceable>X</> had granted it\n      to.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve error messages for Hot Standby misconfiguration errors\n      (Gurjeet Singh)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix handling of <literal>SIGFPE</> when PL/Perl is in use (Andres Freund)\n     </para>\n\n     <para>\n      Perl resets the process's <literal>SIGFPE</> handler to\n      <literal>SIG_IGN</>, which could result in crashes later on.  Restore\n      the normal Postgres signal handler after initializing PL/Perl.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent PL/Perl from crashing if a recursive PL/Perl function is\n      redefined while being executed (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Work around possible misoptimization in PL/Perl (Tom Lane)\n     </para>\n\n     <para>\n      Some Linux distributions contain an incorrect version of\n      <filename>pthread.h</> that results in incorrect compiled code in\n      PL/Perl, leading to crashes if a PL/Perl function calls another one\n      that throws an error.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_upgrade</>'s handling of line endings on Windows\n      (Andrew Dunstan)\n     </para>\n\n     <para>\n      Previously, <application>pg_upgrade</> might add or remove carriage\n      returns in places such as function bodies.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      On Windows, make <application>pg_upgrade</> use backslash path\n      separators in the scripts it emits (Andrew Dunstan)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2012f\n      for DST law changes in Fiji\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-9\">\n  <title>Release 9.0.9</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2012-08-17</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.8.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.9</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 9.0.6,\n    see <xref linkend=\"release-9-0-6\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Prevent access to external files/URLs via XML entity references\n      (Noah Misch, Tom Lane)\n     </para>\n\n     <para>\n      <function>xml_parse()</> would attempt to fetch external files or\n      URLs as needed to resolve DTD and entity references in an XML value,\n      thus allowing unprivileged database users to attempt to fetch data\n      with the privileges of the database server.  While the external data\n      wouldn't get returned directly to the user, portions of it could be\n      exposed in error messages if the data didn't parse as valid XML; and\n      in any case the mere ability to check existence of a file might be\n      useful to an attacker.  (CVE-2012-3489)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent access to external files/URLs via <filename>contrib/xml2</>'s\n      <function>xslt_process()</> (Peter Eisentraut)\n     </para>\n\n     <para>\n      <application>libxslt</> offers the ability to read and write both\n      files and URLs through stylesheet commands, thus allowing\n      unprivileged database users to both read and write data with the\n      privileges of the database server.  Disable that through proper use\n      of <application>libxslt</>'s security options.  (CVE-2012-3488)\n     </para>\n\n     <para>\n      Also, remove <function>xslt_process()</>'s ability to fetch documents\n      and stylesheets from external files/URLs.  While this was a\n      documented <quote>feature</>, it was long regarded as a bad idea.\n      The fix for CVE-2012-3489 broke that capability, and rather than\n      expend effort on trying to fix it, we're just going to summarily\n      remove it.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent too-early recycling of btree index pages (Noah Misch)\n     </para>\n\n     <para>\n      When we allowed read-only transactions to skip assigning XIDs, we\n      introduced the possibility that a deleted btree page could be\n      recycled while a read-only transaction was still in flight to it.\n      This would result in incorrect index search results.  The probability\n      of such an error occurring in the field seems very low because of the\n      timing requirements, but nonetheless it should be fixed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix crash-safety bug with newly-created-or-reset sequences (Tom Lane)\n     </para>\n\n     <para>\n      If <command>ALTER SEQUENCE</> was executed on a freshly created or\n      reset sequence, and then precisely one <function>nextval()</> call\n      was made on it, and then the server crashed, WAL replay would restore\n      the sequence to a state in which it appeared that no\n      <function>nextval()</> had been done, thus allowing the first\n      sequence value to be returned again by the next\n      <function>nextval()</> call.  In particular this could manifest for\n      <type>serial</> columns, since creation of a serial column's sequence\n      includes an <command>ALTER SEQUENCE OWNED BY</> step.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>txid_current()</> to report the correct epoch when not\n      in hot standby (Heikki Linnakangas)\n     </para>\n\n     <para>\n      This fixes a regression introduced in the previous minor release.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug in startup of Hot Standby when a master transaction has many\n      subtransactions (Andres Freund)\n     </para>\n\n     <para>\n      This mistake led to failures reported as <quote>out-of-order XID\n      insertion in KnownAssignedXids</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure the <filename>backup_label</> file is fsync'd after\n      <function>pg_start_backup()</> (Dave Kerr)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix timeout handling in walsender processes (Tom Lane)\n     </para>\n\n     <para>\n      WAL sender background processes neglected to establish a\n      <systemitem>SIGALRM</> handler, meaning they would wait forever in\n      some corner cases where a timeout ought to happen.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Back-patch 9.1 improvement to compress the fsync request queue\n      (Robert Haas)\n     </para>\n\n     <para>\n      This improves performance during checkpoints.  The 9.1 change\n      has now seen enough field testing to seem safe to back-patch.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <literal>LISTEN</>/<literal>NOTIFY</> to cope better with I/O\n      problems, such as out of disk space (Tom Lane)\n     </para>\n\n     <para>\n      After a write failure, all subsequent attempts to send more\n      <literal>NOTIFY</> messages would fail with messages like\n      <quote>Could not read from file \"pg_notify/<replaceable>nnnn</>\" at\n      offset <replaceable>nnnnn</>: Success</quote>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Only allow autovacuum to be auto-canceled by a directly blocked\n      process (Tom Lane)\n     </para>\n\n     <para>\n      The original coding could allow inconsistent behavior in some cases;\n      in particular, an autovacuum could get canceled after less than\n      <literal>deadlock_timeout</> grace period.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve logging of autovacuum cancels (Robert Haas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix log collector so that <literal>log_truncate_on_rotation</> works\n      during the very first log rotation after server start (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <literal>WITH</> attached to a nested set operation\n      (<literal>UNION</>/<literal>INTERSECT</>/<literal>EXCEPT</>)\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that a whole-row reference to a subquery doesn't include any\n      extra <literal>GROUP BY</> or <literal>ORDER BY</> columns (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow copying whole-row references in <literal>CHECK</>\n      constraints and index definitions during <command>CREATE TABLE</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      This situation can arise in <command>CREATE TABLE</> with\n      <literal>LIKE</> or <literal>INHERITS</>.  The copied whole-row\n      variable was incorrectly labeled with the row type of the original\n      table not the new one.  Rejecting the case seems reasonable for\n      <literal>LIKE</>, since the row types might well diverge later.  For\n      <literal>INHERITS</> we should ideally allow it, with an implicit\n      coercion to the parent table's row type; but that will require more\n      work than seems safe to back-patch.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak in <literal>ARRAY(SELECT ...)</> subqueries (Heikki\n      Linnakangas, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix extraction of common prefixes from regular expressions (Tom Lane)\n     </para>\n\n     <para>\n      The code could get confused by quantified parenthesized\n      subexpressions, such as <literal>^(foo)?bar</>.  This would lead to\n      incorrect index optimization of searches for such patterns.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bugs with parsing signed\n      <replaceable>hh</><literal>:</><replaceable>mm</> and\n      <replaceable>hh</><literal>:</><replaceable>mm</><literal>:</><replaceable>ss</>\n      fields in <type>interval</> constants (Amit Kapila, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use Postgres' encoding conversion functions, not Python's, when\n      converting a Python Unicode string to the server encoding in\n      PL/Python (Jan Urbanski)\n     </para>\n\n     <para>\n      This avoids some corner-case problems, notably that Python doesn't\n      support all the encodings Postgres does.  A notable functional change\n      is that if the server encoding is SQL_ASCII, you will get the UTF-8\n      representation of the string; formerly, any non-ASCII characters in\n      the string would result in an error.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix mapping of PostgreSQL encodings to Python encodings in PL/Python\n      (Jan Urbanski)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Report errors properly in <filename>contrib/xml2</>'s\n      <function>xslt_process()</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2012e\n      for DST law changes in Morocco and Tokelau\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-8\">\n  <title>Release 9.0.8</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2012-06-04</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.7.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.8</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 9.0.6,\n    see <xref linkend=\"release-9-0-6\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix incorrect password transformation in\n      <filename>contrib/pgcrypto</>'s DES <function>crypt()</> function\n      (Solar Designer)\n     </para>\n\n     <para>\n      If a password string contained the byte value <literal>0x80</>, the\n      remainder of the password was ignored, causing the password to be much\n      weaker than it appeared.  With this fix, the rest of the string is\n      properly included in the DES hash.  Any stored password values that are\n      affected by this bug will thus no longer match, so the stored values may\n      need to be updated.  (CVE-2012-2143)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ignore <literal>SECURITY DEFINER</> and <literal>SET</> attributes for\n      a procedural language's call handler (Tom Lane)\n     </para>\n\n     <para>\n      Applying such attributes to a call handler could crash the server.\n      (CVE-2012-2655)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow numeric timezone offsets in <type>timestamp</> input to be up to\n      16 hours away from UTC (Tom Lane)\n     </para>\n\n     <para>\n      Some historical time zones have offsets larger than 15 hours, the\n      previous limit.  This could result in dumped data values being rejected\n      during reload.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix timestamp conversion to cope when the given time is exactly the\n      last DST transition time for the current timezone (Tom Lane)\n     </para>\n\n     <para>\n      This oversight has been there a long time, but was not noticed\n      previously because most DST-using zones are presumed to have an\n      indefinite sequence of future DST transitions.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <type>text</> to <type>name</> and <type>char</> to <type>name</>\n      casts to perform string truncation correctly in multibyte encodings\n      (Karl Schnaitter)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory copying bug in <function>to_tsquery()</> (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure <function>txid_current()</> reports the correct epoch when\n      executed in hot standby (Simon Riggs)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner's handling of outer PlaceHolderVars within subqueries (Tom\n      Lane)\n     </para>\n\n     <para>\n      This bug concerns sub-SELECTs that reference variables coming from the\n      nullable side of an outer join of the surrounding query.\n      In 9.1, queries affected by this bug would fail with <quote>ERROR:\n      Upper-level PlaceHolderVar found where not expected</>.  But in 9.0 and\n      8.4, you'd silently get possibly-wrong answers, since the value\n      transmitted into the subquery wouldn't go to null when it should.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix slow session startup when <structname>pg_attribute</> is very large\n      (Tom Lane)\n     </para>\n\n     <para>\n      If <structname>pg_attribute</> exceeds one-fourth of\n      <varname>shared_buffers</>, cache rebuilding code that is sometimes\n      needed during session start would trigger the synchronized-scan logic,\n      causing it to take many times longer than normal.  The problem was\n      particularly acute if many new sessions were starting at once.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure sequential scans check for query cancel reasonably often (Merlin\n      Moncure)\n     </para>\n\n     <para>\n      A scan encountering many consecutive pages that contain no live tuples\n      would not respond to interrupts meanwhile.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure the Windows implementation of <function>PGSemaphoreLock()</>\n      clears <varname>ImmediateInterruptOK</> before returning (Tom Lane)\n     </para>\n\n     <para>\n      This oversight meant that a query-cancel interrupt received later\n      in the same query could be accepted at an unsafe time, with\n      unpredictable but not good consequences.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Show whole-row variables safely when printing views or rules\n      (Abbas Butt, Tom Lane)\n     </para>\n\n     <para>\n      Corner cases involving ambiguous names (that is, the name could be\n      either a table or column name of the query) were printed in an\n      ambiguous way, risking that the view or rule would be interpreted\n      differently after dump and reload.  Avoid the ambiguous case by\n      attaching a no-op cast.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>COPY FROM</> to properly handle null marker strings that\n      correspond to invalid encoding (Tom Lane)\n     </para>\n\n     <para>\n      A null marker string such as <literal>E'\\\\0'</> should work, and did\n      work in the past, but the case got broken in 8.4.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure autovacuum worker processes perform stack depth checking\n      properly (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Previously, infinite recursion in a function invoked by\n      auto-<command>ANALYZE</> could crash worker processes.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix logging collector to not lose log coherency under high load (Andrew\n      Dunstan)\n     </para>\n\n     <para>\n      The collector previously could fail to reassemble large messages if it\n      got too busy.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix logging collector to ensure it will restart file rotation\n      after receiving <systemitem>SIGHUP</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix WAL replay logic for GIN indexes to not fail if the index was\n      subsequently dropped (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak in PL/pgSQL's <command>RETURN NEXT</> command (Joe\n      Conway)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/pgSQL's <command>GET DIAGNOSTICS</> command when the target\n      is the function's first variable (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix potential access off the end of memory in <application>psql</>'s\n      expanded display (<command>\\x</>) mode (Peter Eisentraut)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix several performance problems in <application>pg_dump</> when\n      the database contains many objects (Jeff Janes, Tom Lane)\n     </para>\n\n     <para>\n      <application>pg_dump</> could get very slow if the database contained\n      many schemas, or if many objects are in dependency loops, or if there\n      are many owned sequences.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_upgrade</> for the case that a database stored in a\n      non-default tablespace contains a table in the cluster's default\n      tablespace (Bruce Momjian)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>ecpg</>, fix rare memory leaks and possible overwrite\n      of one byte after the <structname>sqlca_t</> structure (Peter Eisentraut)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/dblink</>'s <function>dblink_exec()</> to not leak\n      temporary database connections upon error (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/dblink</> to report the correct connection name in\n      error messages (Kyotaro Horiguchi)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/vacuumlo</> to use multiple transactions when\n      dropping many large objects (Tim Lewis, Robert Haas, Tom Lane)\n     </para>\n\n     <para>\n      This change avoids exceeding <varname>max_locks_per_transaction</> when\n      many objects need to be dropped.  The behavior can be adjusted with the\n      new <literal>-l</> (limit) option.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2012c\n      for DST law changes in Antarctica, Armenia, Chile, Cuba, Falkland\n      Islands, Gaza, Haiti, Hebron, Morocco, Syria, and Tokelau Islands;\n      also historical corrections for Canada.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-7\">\n  <title>Release 9.0.7</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2012-02-27</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.6.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.7</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 9.0.6,\n    see <xref linkend=\"release-9-0-6\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Require execute permission on the trigger function for\n      <command>CREATE TRIGGER</> (Robert Haas)\n     </para>\n\n     <para>\n      This missing check could allow another user to execute a trigger\n      function with forged input data, by installing it on a table he owns.\n      This is only of significance for trigger functions marked\n      <literal>SECURITY DEFINER</>, since otherwise trigger functions run\n      as the table owner anyway.  (CVE-2012-0866)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Remove arbitrary limitation on length of common name in SSL\n      certificates (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Both <application>libpq</> and the server truncated the common name\n      extracted from an SSL certificate at 32 bytes.  Normally this would\n      cause nothing worse than an unexpected verification failure, but there\n      are some rather-implausible scenarios in which it might allow one\n      certificate holder to impersonate another.  The victim would have to\n      have a common name exactly 32 bytes long, and the attacker would have\n      to persuade a trusted CA to issue a certificate in which the common\n      name has that string as a prefix.  Impersonating a server would also\n      require some additional exploit to redirect client connections.\n      (CVE-2012-0867)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Convert newlines to spaces in names written in <application>pg_dump</>\n      comments (Robert Haas)\n     </para>\n\n     <para>\n      <application>pg_dump</> was incautious about sanitizing object names\n      that are emitted within SQL comments in its output script.  A name\n      containing a newline would at least render the script syntactically\n      incorrect.  Maliciously crafted object names could present a SQL\n      injection risk when the script is reloaded.  (CVE-2012-0868)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix btree index corruption from insertions concurrent with vacuuming\n      (Tom Lane)\n     </para>\n\n     <para>\n      An index page split caused by an insertion could sometimes cause a\n      concurrently-running <command>VACUUM</> to miss removing index entries\n      that it should remove.  After the corresponding table rows are removed,\n      the dangling index entries would cause errors (such as <quote>could not\n      read block N in file ...</>) or worse, silently wrong query results\n      after unrelated rows are re-inserted at the now-free table locations.\n      This bug has been present since release 8.2, but occurs so infrequently\n      that it was not diagnosed until now.  If you have reason to suspect\n      that it has happened in your database, reindexing the affected index\n      will fix things.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix transient zeroing of shared buffers during WAL replay (Tom Lane)\n     </para>\n\n     <para>\n      The replay logic would sometimes zero and refill a shared buffer, so\n      that the contents were transiently invalid.  In hot standby mode this\n      can result in a query that's executing in parallel seeing garbage data.\n      Various symptoms could result from that, but the most common one seems\n      to be <quote>invalid memory alloc request size</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix postmaster to attempt restart after a hot-standby crash (Tom Lane)\n     </para>\n\n     <para>\n      A logic error caused the postmaster to terminate, rather than attempt\n      to restart the cluster, if any backend process crashed while operating\n      in hot standby mode.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>CLUSTER</>/<command>VACUUM FULL</> handling of toast\n      values owned by recently-updated rows (Tom Lane)\n     </para>\n\n     <para>\n      This oversight could lead to <quote>duplicate key value violates unique\n      constraint</> errors being reported against the toast table's index\n      during one of these commands.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update per-column permissions, not only per-table permissions, when\n      changing table owner (Tom Lane)\n     </para>\n\n     <para>\n      Failure to do this meant that any previously granted column permissions\n      were still shown as having been granted by the old owner.  This meant\n      that neither the new owner nor a superuser could revoke the\n      now-untraceable-to-table-owner permissions.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Support foreign data wrappers and foreign servers in\n      <command>REASSIGN OWNED</> (Alvaro Herrera)\n     </para>\n\n     <para>\n      This command failed with <quote>unexpected classid</> errors if\n      it needed to change the ownership of any such objects.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow non-existent values for some settings in <command>ALTER\n      USER/DATABASE SET</> (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Allow <varname>default_text_search_config</>,\n      <varname>default_tablespace</>, and <varname>temp_tablespaces</> to be\n      set to names that are not known.  This is because they might be known\n      in another database where the setting is intended to be used, or for the\n      tablespace cases because the tablespace might not be created yet.  The\n      same issue was previously recognized for <varname>search_path</>, and\n      these settings now act like that one.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid crashing when we have problems deleting table files post-commit\n      (Tom Lane)\n     </para>\n\n     <para>\n      Dropping a table should lead to deleting the underlying disk files only\n      after the transaction commits.  In event of failure then (for instance,\n      because of wrong file permissions) the code is supposed to just emit a\n      warning message and go on, since it's too late to abort the\n      transaction.  This logic got broken as of release 8.4, causing such\n      situations to result in a PANIC and an unrestartable database.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Recover from errors occurring during WAL replay of <command>DROP\n      TABLESPACE</> (Tom Lane)\n     </para>\n\n     <para>\n      Replay will attempt to remove the tablespace's directories, but there\n      are various reasons why this might fail (for example, incorrect\n      ownership or permissions on those directories).  Formerly the replay\n      code would panic, rendering the database unrestartable without manual\n      intervention.  It seems better to log the problem and continue, since\n      the only consequence of failure to remove the directories is some\n      wasted disk space.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition in logging AccessExclusiveLocks for hot standby\n      (Simon Riggs)\n     </para>\n\n     <para>\n      Sometimes a lock would be logged as being held by <quote>transaction\n      zero</>.  This is at least known to produce assertion failures on\n      slave servers, and might be the cause of more serious problems.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Track the OID counter correctly during WAL replay, even when it wraps\n      around (Tom Lane)\n     </para>\n\n     <para>\n      Previously the OID counter would remain stuck at a high value until the\n      system exited replay mode.  The practical consequences of that are\n      usually nil, but there are scenarios wherein a standby server that's\n      been promoted to master might take a long time to advance the OID\n      counter to a reasonable value once values are needed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent emitting misleading <quote>consistent recovery state reached</>\n      log message at the beginning of crash recovery (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix initial value of\n      <structname>pg_stat_replication</>.<structfield>replay_location</>\n      (Fujii Masao)\n     </para>\n\n     <para>\n      Previously, the value shown would be wrong until at least one WAL\n      record had been replayed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix regular expression back-references with <literal>*</> attached\n      (Tom Lane)\n     </para>\n\n     <para>\n      Rather than enforcing an exact string match, the code would effectively\n      accept any string that satisfies the pattern sub-expression referenced\n      by the back-reference symbol.\n     </para>\n\n     <para>\n      A similar problem still afflicts back-references that are embedded in a\n      larger quantified expression, rather than being the immediate subject\n      of the quantifier.  This will be addressed in a future\n      <productname>PostgreSQL</> release.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix recently-introduced memory leak in processing of\n      <type>inet</>/<type>cidr</> values (Heikki Linnakangas)\n     </para>\n\n     <para>\n      A patch in the December 2011 releases of <productname>PostgreSQL</>\n      caused memory leakage in these operations, which could be significant\n      in scenarios such as building a btree index on such a column.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix dangling pointer after <command>CREATE TABLE AS</>/<command>SELECT\n      INTO</> in a SQL-language function (Tom Lane)\n     </para>\n\n     <para>\n      In most cases this only led to an assertion failure in assert-enabled\n      builds, but worse consequences seem possible.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid double close of file handle in syslogger on Windows (MauMau)\n     </para>\n\n     <para>\n      Ordinarily this error was invisible, but it would cause an exception\n      when running on a debug version of Windows.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix I/O-conversion-related memory leaks in plpgsql\n      (Andres Freund, Jan Urbanski, Tom Lane)\n     </para>\n\n     <para>\n      Certain operations would leak memory until the end of the current\n      function.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <application>pg_dump</>'s handling of inherited table columns\n      (Tom Lane)\n     </para>\n\n     <para>\n      <application>pg_dump</> mishandled situations where a child column has\n      a different default expression than its parent column.  If the default\n      is textually identical to the parent's default, but not actually the\n      same (for instance, because of schema search path differences) it would\n      not be recognized as different, so that after dump and restore the\n      child would be allowed to inherit the parent's default.  Child columns\n      that are <literal>NOT NULL</> where their parent is not could also be\n      restored subtly incorrectly.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</>'s direct-to-database mode for\n      INSERT-style table data (Tom Lane)\n     </para>\n\n     <para>\n      Direct-to-database restores from archive files made with\n      <option>--inserts</> or <option>--column-inserts</> options fail when\n      using <application>pg_restore</> from a release dated September or\n      December 2011, as a result of an oversight in a fix for another\n      problem.  The archive file itself is not at fault, and text-mode\n      output is okay.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow <application>pg_upgrade</> to process tables containing\n      <type>regclass</> columns (Bruce Momjian)\n     </para>\n\n     <para>\n      Since <application>pg_upgrade</> now takes care to preserve\n      <structname>pg_class</> OIDs, there was no longer any reason for this\n      restriction.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>libpq</> ignore <literal>ENOTDIR</> errors\n      when looking for an SSL client certificate file\n      (Magnus Hagander)\n     </para>\n\n     <para>\n      This allows SSL connections to be established, though without a\n      certificate, even when the user's home directory is set to something\n      like <literal>/dev/null</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix some more field alignment issues in <application>ecpg</>'s SQLDA area\n      (Zoltan Boszormenyi)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow <literal>AT</> option in <application>ecpg</>\n      <literal>DEALLOCATE</> statements (Michael Meskes)\n     </para>\n\n     <para>\n      The infrastructure to support this has been there for awhile, but\n      through an oversight there was still an error check rejecting the case.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Do not use the variable name when defining a varchar structure in ecpg\n      (Michael Meskes)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/auto_explain</>'s JSON output mode to produce\n      valid JSON (Andrew Dunstan)\n     </para>\n\n     <para>\n      The output used brackets at the top level, when it should have used\n      braces.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix error in <filename>contrib/intarray</>'s <literal>int[] &amp;\n      int[]</> operator (Guillaume Lelarge)\n     </para>\n\n     <para>\n      If the smallest integer the two input arrays have in common is 1,\n      and there are smaller values in either array, then 1 would be\n      incorrectly omitted from the result.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix error detection in <filename>contrib/pgcrypto</>'s\n      <function>encrypt_iv()</> and <function>decrypt_iv()</>\n      (Marko Kreen)\n     </para>\n\n     <para>\n      These functions failed to report certain types of invalid-input errors,\n      and would instead return random garbage values for incorrect input.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix one-byte buffer overrun in <filename>contrib/test_parser</>\n      (Paul Guyot)\n     </para>\n\n     <para>\n      The code would try to read one more byte than it should, which would\n      crash in corner cases.\n      Since <filename>contrib/test_parser</> is only example code, this is\n      not a security issue in itself, but bad example code is still bad.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use <function>__sync_lock_test_and_set()</> for spinlocks on ARM, if\n      available (Martin Pitt)\n     </para>\n\n     <para>\n      This function replaces our previous use of the <literal>SWPB</>\n      instruction, which is deprecated and not available on ARMv6 and later.\n      Reports suggest that the old code doesn't fail in an obvious way on\n      recent ARM boards, but simply doesn't interlock concurrent accesses,\n      leading to bizarre failures in multiprocess operation.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use <option>-fexcess-precision=standard</> option when building with\n      gcc versions that accept it (Andrew Dunstan)\n     </para>\n\n     <para>\n      This prevents assorted scenarios wherein recent versions of gcc will\n      produce creative results.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow use of threaded Python on FreeBSD (Chris Rees)\n     </para>\n\n     <para>\n      Our configure script previously believed that this combination wouldn't\n      work; but FreeBSD fixed the problem, so remove that error check.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-6\">\n  <title>Release 9.0.6</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2011-12-05</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.5.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.6</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, a longstanding error was discovered in the definition of the\n    <literal>information_schema.referential_constraints</> view.  If you\n    rely on correct results from that view, you should replace its\n    definition as explained in the first changelog item below.\n   </para>\n\n   <para>\n    Also, if you are upgrading from a version earlier than 9.0.4,\n    see <xref linkend=\"release-9-0-4\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix bugs in <literal>information_schema.referential_constraints</> view\n      (Tom Lane)\n     </para>\n\n     <para>\n      This view was being insufficiently careful about matching the\n      foreign-key constraint to the depended-on primary or unique key\n      constraint.  That could result in failure to show a foreign key\n      constraint at all, or showing it multiple times, or claiming that it\n      depends on a different constraint than the one it really does.\n     </para>\n\n     <para>\n      Since the view definition is installed by <application>initdb</>,\n      merely upgrading will not fix the problem.  If you need to fix this\n      in an existing installation, you can (as a superuser) drop the\n      <literal>information_schema</> schema then re-create it by sourcing\n      <filename><replaceable>SHAREDIR</>/information_schema.sql</filename>.\n      (Run <literal>pg_config --sharedir</> if you're uncertain where\n      <replaceable>SHAREDIR</> is.)  This must be repeated in each database\n      to be fixed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash during <command>UPDATE</> or <command>DELETE</> that\n      joins to the output of a scalar-returning function (Tom Lane)\n     </para>\n\n     <para>\n      A crash could only occur if the target row had been concurrently\n      updated, so this problem surfaced only intermittently.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect replay of WAL records for GIN index updates\n      (Tom Lane)\n     </para>\n\n     <para>\n      This could result in transiently failing to find index entries after\n      a crash, or on a hot-standby server.  The problem would be repaired\n      by the next <command>VACUUM</> of the index, however.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix TOAST-related data corruption during <literal>CREATE TABLE dest AS\n      SELECT * FROM src</> or <literal>INSERT INTO dest SELECT * FROM src</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      If a table has been modified by <command>ALTER TABLE ADD COLUMN</>,\n      attempts to copy its data verbatim to another table could produce\n      corrupt results in certain corner cases.\n      The problem can only manifest in this precise form in 8.4 and later,\n      but we patched earlier versions as well in case there are other code\n      paths that could trigger the same bug.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible failures during hot standby startup (Simon Riggs)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Start hot standby faster when initial snapshot is incomplete\n      (Simon Riggs)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition during toast table access from stale syscache entries\n      (Tom Lane)\n     </para>\n\n     <para>\n      The typical symptom was transient errors like <quote>missing chunk\n      number 0 for toast value NNNNN in pg_toast_2619</>, where the cited\n      toast table would always belong to a system catalog.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Track dependencies of functions on items used in parameter default\n      expressions (Tom Lane)\n     </para>\n\n     <para>\n      Previously, a referenced object could be dropped without having dropped\n      or modified the function, leading to misbehavior when the function was\n      used.  Note that merely installing this update will not fix the missing\n      dependency entries; to do that, you'd need to <command>CREATE OR\n      REPLACE</> each such function afterwards.  If you have functions whose\n      defaults depend on non-built-in objects, doing so is recommended.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow inlining of set-returning SQL functions with multiple OUT\n      parameters (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't trust deferred-unique indexes for join removal (Tom Lane and Marti\n      Raudsepp)\n     </para>\n\n     <para>\n      A deferred uniqueness constraint might not hold intra-transaction,\n      so assuming that it does could give incorrect query results.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <function>DatumGetInetP()</> unpack inet datums that have a 1-byte\n      header, and add a new macro, <function>DatumGetInetPP()</>, that does\n      not (Heikki Linnakangas)\n     </para>\n\n     <para>\n      This change affects no core code, but might prevent crashes in add-on\n      code that expects <function>DatumGetInetP()</> to produce an unpacked\n      datum as per usual convention.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve locale support in <type>money</> type's input and output\n      (Tom Lane)\n     </para>\n\n     <para>\n      Aside from not supporting all standard\n      <link linkend=\"guc-lc-monetary\"><varname>lc_monetary</></link>\n      formatting options, the input and output functions were inconsistent,\n      meaning there were locales in which dumped <type>money</> values could\n      not be re-read.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't let <link\n      linkend=\"guc-transform-null-equals\"><varname>transform_null_equals</></link>\n      affect <literal>CASE foo WHEN NULL ...</> constructs\n      (Heikki Linnakangas)\n     </para>\n\n     <para>\n      <varname>transform_null_equals</> is only supposed to affect\n      <literal>foo = NULL</> expressions written directly by the user, not\n      equality checks generated internally by this form of <literal>CASE</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Change foreign-key trigger creation order to better support\n      self-referential foreign keys (Tom Lane)\n     </para>\n\n     <para>\n      For a cascading foreign key that references its own table, a row update\n      will fire both the <literal>ON UPDATE</> trigger and the\n      <literal>CHECK</> trigger as one event.  The <literal>ON UPDATE</>\n      trigger must execute first, else the <literal>CHECK</> will check a\n      non-final state of the row and possibly throw an inappropriate error.\n      However, the firing order of these triggers is determined by their\n      names, which generally sort in creation order since the triggers have\n      auto-generated names following the convention\n      <quote>RI_ConstraintTrigger_NNNN</>.  A proper fix would require\n      modifying that convention, which we will do in 9.2, but it seems risky\n      to change it in existing releases.  So this patch just changes the\n      creation order of the triggers.  Users encountering this type of error\n      should drop and re-create the foreign key constraint to get its\n      triggers into the right order.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid floating-point underflow while tracking buffer allocation rate\n      (Greg Matthews)\n     </para>\n\n     <para>\n      While harmless in itself, on certain platforms this would result in\n      annoying kernel log messages.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Preserve configuration file name and line number values when starting\n      child processes under Windows (Tom Lane)\n     </para>\n\n     <para>\n      Formerly, these would not be displayed correctly in the\n      <structname>pg_settings</> view.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect field alignment in <application>ecpg</>'s SQLDA area\n      (Zoltan Boszormenyi)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Preserve blank lines within commands in <application>psql</>'s command\n      history (Robert Haas)\n     </para>\n\n     <para>\n      The former behavior could cause problems if an empty line was removed\n      from within a string literal, for example.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_dump</> to dump user-defined casts between\n      auto-generated types, such as table rowtypes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Assorted fixes for <application>pg_upgrade</> (Bruce Momjian)\n     </para>\n\n     <para>\n      Handle exclusion constraints correctly, avoid failures on Windows,\n      don't complain about mismatched toast table names in 8.4 databases.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use the preferred version of <application>xsubpp</> to build PL/Perl,\n      not necessarily the operating system's main copy\n      (David Wheeler and Alex Hunsaker)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect coding in <filename>contrib/dict_int</> and\n      <filename>contrib/dict_xsyn</> (Tom Lane)\n     </para>\n\n     <para>\n      Some functions incorrectly assumed that memory returned by\n      <function>palloc()</> is guaranteed zeroed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted errors in <filename>contrib/unaccent</>'s configuration\n      file parsing (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Honor query cancel interrupts promptly in <function>pgstatindex()</>\n      (Robert Haas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect quoting of log file name in macOS start script\n      (Sidar Lopez)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure VPATH builds properly install all server header files\n      (Peter Eisentraut)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Shorten file names reported in verbose error messages (Peter Eisentraut)\n     </para>\n\n     <para>\n      Regular builds have always reported just the name of the C file\n      containing the error message call, but VPATH builds formerly\n      reported an absolute path name.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix interpretation of Windows timezone names for Central America\n      (Tom Lane)\n     </para>\n\n     <para>\n      Map <quote>Central America Standard Time</> to <literal>CST6</>, not\n      <literal>CST6CDT</>, because DST is generally not observed anywhere in\n      Central America.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2011n\n      for DST law changes in Brazil, Cuba, Fiji, Palestine, Russia, and Samoa;\n      also historical corrections for Alaska and British East Africa.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-5\">\n  <title>Release 9.0.5</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2011-09-26</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.4.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.5</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 9.0.4,\n    see <xref linkend=\"release-9-0-4\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix catalog cache invalidation after a <command>VACUUM FULL</> or\n      <command>CLUSTER</> on a system catalog (Tom Lane)\n     </para>\n\n     <para>\n      In some cases the relocation of a system catalog row to another place\n      would not be recognized by concurrent server processes, allowing catalog\n      corruption to occur if they then tried to update that row.  The\n      worst-case outcome could be as bad as complete loss of a table.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect order of operations during sinval reset processing,\n      and ensure that TOAST OIDs are preserved in system catalogs (Tom\n      Lane)\n     </para>\n\n     <para>\n      These mistakes could lead to transient failures after a <command>VACUUM\n      FULL</> or <command>CLUSTER</> on a system catalog.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bugs in indexing of in-doubt HOT-updated tuples (Tom Lane)\n     </para>\n\n     <para>\n      These bugs could result in index corruption after reindexing a system\n      catalog.  They are not believed to affect user indexes.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix multiple bugs in GiST index page split processing (Heikki\n      Linnakangas)\n     </para>\n\n     <para>\n      The probability of occurrence was low, but these could lead to index\n      corruption.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible buffer overrun in <function>tsvector_concat()</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      The function could underestimate the amount of memory needed for its\n      result, leading to server crashes.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix crash in <function>xml_recv</> when processing a\n      <quote>standalone</> parameter (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <function>pg_options_to_table</> return NULL for an option with no\n      value (Tom Lane)\n     </para>\n\n     <para>\n      Previously such cases would result in a server crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid possibly accessing off the end of memory in <command>ANALYZE</>\n      and in SJIS-2004 encoding conversion (Noah Misch)\n     </para>\n\n     <para>\n      This fixes some very-low-probability server crash scenarios.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Protect <function>pg_stat_reset_shared()</> against NULL input (Magnus\n      Hagander)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible failure when a recovery conflict deadlock is detected\n      within a sub-transaction (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid spurious conflicts while recycling btree index pages during hot\n      standby (Noah Misch, Simon Riggs)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Shut down WAL receiver if it's still running at end of recovery (Heikki\n      Linnakangas)\n     </para>\n\n     <para>\n      The postmaster formerly panicked in this situation, but it's actually a\n      legitimate case.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition in relcache init file invalidation (Tom Lane)\n     </para>\n\n     <para>\n      There was a window wherein a new backend process could read a stale init\n      file but miss the inval messages that would tell it the data is stale.\n      The result would be bizarre failures in catalog accesses, typically\n      <quote>could not read block 0 in file ...</> later during startup.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak at end of a GiST index scan (Tom Lane)\n     </para>\n\n     <para>\n      Commands that perform many separate GiST index scans, such as\n      verification of a new GiST-based exclusion constraint on a table\n      already containing many rows, could transiently require large amounts of\n      memory due to this leak.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak when encoding conversion has to be done on incoming\n      command strings and <command>LISTEN</> is active (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect memory accounting (leading to possible memory bloat) in\n      tuplestores supporting holdable cursors and plpgsql's <literal>RETURN\n      NEXT</> command (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix trigger <literal>WHEN</> conditions when both <literal>BEFORE</> and\n      <literal>AFTER</> triggers exist (Tom Lane)\n     </para>\n\n     <para>\n      Evaluation of <literal>WHEN</> conditions for <literal>AFTER ROW\n      UPDATE</> triggers could crash if there had been a <literal>BEFORE\n      ROW</> trigger fired for the same update.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix performance problem when constructing a large, lossy bitmap\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix join selectivity estimation for unique columns (Tom Lane)\n     </para>\n\n     <para>\n      This fixes an erroneous planner heuristic that could lead to poor\n      estimates of the result size of a join.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix nested PlaceHolderVar expressions that appear only in sub-select\n      target lists (Tom Lane)\n     </para>\n\n     <para>\n      This mistake could result in outputs of an outer join incorrectly\n      appearing as NULL.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow the planner to assume that empty parent tables really are empty\n      (Tom Lane)\n     </para>\n\n     <para>\n      Normally an empty table is assumed to have a certain minimum size for\n      planning purposes; but this heuristic seems to do more harm than good\n      for the parent table of an inheritance hierarchy, which often is\n      permanently empty.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow nested <literal>EXISTS</> queries to be optimized properly (Tom\n      Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix array- and path-creating functions to ensure padding bytes are\n      zeroes (Tom Lane)\n     </para>\n\n     <para>\n      This avoids some situations where the planner will think that\n      semantically-equal constants are not equal, resulting in poor\n      optimization.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>EXPLAIN</> to handle gating Result nodes within\n      inner-indexscan subplans (Tom Lane)\n     </para>\n\n     <para>\n      The usual symptom of this oversight was <quote>bogus varno</> errors.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix btree preprocessing of <replaceable>indexedcol</> <literal>IS\n      NULL</> conditions (Dean Rasheed)\n     </para>\n\n     <para>\n      Such a condition is unsatisfiable if combined with any other type of\n      btree-indexable condition on the same index column.  The case was\n      handled incorrectly in 9.0.0 and later, leading to query output where\n      there should be none.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Work around gcc 4.6.0 bug that breaks WAL replay (Tom Lane)\n     </para>\n\n     <para>\n      This could lead to loss of committed transactions after a server crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix dump bug for <literal>VALUES</> in a view (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <literal>SELECT FOR UPDATE/SHARE</> on sequences (Tom Lane)\n     </para>\n\n     <para>\n      This operation doesn't work as expected and can lead to failures.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>VACUUM</> so that it always updates\n      <literal>pg_class</>.<literal>reltuples</>/<literal>relpages</> (Tom\n      Lane)\n     </para>\n\n     <para>\n      This fixes some scenarios where autovacuum could make increasingly poor\n      decisions about when to vacuum tables.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Defend against integer overflow when computing size of a hash table (Tom\n      Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix cases where <command>CLUSTER</> might attempt to access\n      already-removed TOAST data (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix premature timeout failures during initial authentication transaction\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix portability bugs in use of credentials control messages for\n      <quote>peer</> authentication (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix SSPI login when multiple roundtrips are required (Ahmed Shinwari,\n      Magnus Hagander)\n     </para>\n\n     <para>\n      The typical symptom of this problem was <quote>The function requested is\n      not supported</> errors during SSPI login.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix failure when adding a new variable of a custom variable class to\n      <filename>postgresql.conf</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Throw an error if <filename>pg_hba.conf</> contains <literal>hostssl</>\n      but SSL is disabled (Tom Lane)\n     </para>\n\n     <para>\n      This was concluded to be more user-friendly than the previous behavior\n      of silently ignoring such lines.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix failure when <command>DROP OWNED BY</> attempts to remove default\n      privileges on sequences (Shigeru Hanada)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix typo in <function>pg_srand48</> seed initialization (Andres Freund)\n     </para>\n\n     <para>\n      This led to failure to use all bits of the provided seed.  This function\n      is not used on most platforms (only those without <function>srandom</>),\n      and the potential security exposure from a less-random-than-expected\n      seed seems minimal in any case.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid integer overflow when the sum of <literal>LIMIT</> and\n      <literal>OFFSET</> values exceeds 2^63 (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add overflow checks to <type>int4</> and <type>int8</> versions of\n      <function>generate_series()</> (Robert Haas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix trailing-zero removal in <function>to_char()</> (Marti Raudsepp)\n     </para>\n\n     <para>\n      In a format with <literal>FM</> and no digit positions\n      after the decimal point, zeroes to the left of the decimal point could\n      be removed incorrectly.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>pg_size_pretty()</> to avoid overflow for inputs close to\n      2^63 (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Weaken plpgsql's check for typmod matching in record values (Tom Lane)\n     </para>\n\n     <para>\n      An overly enthusiastic check could lead to discarding length modifiers\n      that should have been kept.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Correctly handle quotes in locale names during <application>initdb</>\n      (Heikki Linnakangas)\n     </para>\n\n     <para>\n      The case can arise with some Windows locales, such as <quote>People's\n      Republic of China</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>pg_upgrade</>, avoid dumping orphaned temporary tables\n      (Bruce Momjian)\n     </para>\n\n     <para>\n      This prevents situations wherein table OID assignments could get out of\n      sync between old and new installations.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_upgrade</> to preserve toast tables' relfrozenxids\n      during an upgrade from 8.3 (Bruce Momjian)\n     </para>\n\n     <para>\n      Failure to do this could lead to <filename>pg_clog</> files being\n      removed too soon after the upgrade.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>pg_upgrade</>, fix the <literal>-l</> (log) option to\n      work on Windows (Bruce Momjian)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>pg_ctl</>, support silent mode for service registrations\n      on Windows (MauMau)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>psql</>'s counting of script file line numbers during\n      <literal>COPY</> from a different file (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</>'s direct-to-database mode for\n      <varname>standard_conforming_strings</> (Tom Lane)\n     </para>\n\n     <para>\n      <application>pg_restore</> could emit incorrect commands when restoring\n      directly to a database server from an archive file that had been made\n      with <varname>standard_conforming_strings</> set to <literal>on</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Be more user-friendly about unsupported cases for parallel\n      <application>pg_restore</> (Tom Lane)\n     </para>\n\n     <para>\n      This change ensures that such cases are detected and reported before\n      any restore actions have been taken.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix write-past-buffer-end and memory leak in <application>libpq</>'s\n      LDAP service lookup code (Albe Laurenz)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>libpq</>, avoid failures when using nonblocking I/O\n      and an SSL connection (Martin Pihlak, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve libpq's handling of failures during connection startup\n      (Tom Lane)\n     </para>\n\n     <para>\n      In particular, the response to a server report of <function>fork()</>\n      failure during SSL connection startup is now saner.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <application>libpq</>'s error reporting for SSL failures (Tom\n      Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>PQsetvalue()</> to avoid possible crash when adding a new\n      tuple to a <structname>PGresult</> originally obtained from a server\n      query (Andrew Chernow)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>ecpglib</> write <type>double</> values with 15 digits\n      precision (Akira Kurosawa)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>ecpglib</>, be sure <literal>LC_NUMERIC</> setting is\n      restored after an error (Michael Meskes)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Apply upstream fix for blowfish signed-character bug (CVE-2011-2483)\n      (Tom Lane)\n     </para>\n\n     <para>\n      <filename>contrib/pg_crypto</>'s blowfish encryption code could give\n      wrong results on platforms where char is signed (which is most),\n      leading to encrypted passwords being weaker than they should be.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak in <filename>contrib/seg</> (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>pgstatindex()</> to give consistent results for empty\n      indexes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow building with perl 5.14 (Alex Hunsaker)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted issues with build and install file paths containing spaces\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2011i\n      for DST law changes in Canada, Egypt, Russia, Samoa, and South Sudan.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-4\">\n  <title>Release 9.0.4</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2011-04-18</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.3.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.4</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n   <para>\n    However, if your installation was upgraded from a previous major\n    release by running <application>pg_upgrade</>, you should take\n    action to prevent possible data loss due to a now-fixed bug in\n    <application>pg_upgrade</>.  The recommended solution is to run\n    <command>VACUUM FREEZE</> on all TOAST tables.\n    More information is available at <ulink\n    url=\"http://wiki.postgresql.org/wiki/20110408pg_upgrade_fix\">\n    http://wiki.postgresql.org/wiki/20110408pg_upgrade_fix</ulink>.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix <application>pg_upgrade</>'s handling of TOAST tables\n      (Bruce Momjian)\n     </para>\n\n     <para>\n      The <structname>pg_class</>.<structfield>relfrozenxid</> value for\n      TOAST tables was not correctly copied into the new installation\n      during <application>pg_upgrade</>.  This could later result in\n      <literal>pg_clog</> files being discarded while they were still\n      needed to validate tuples in the TOAST tables, leading to\n      <quote>could not access status of transaction</> failures.\n     </para>\n\n     <para>\n      This error poses a significant risk of data loss for installations\n      that have been upgraded with <application>pg_upgrade</>.  This patch\n      corrects the problem for future uses of <application>pg_upgrade</>,\n      but does not in itself cure the issue in installations that have been\n      processed with a buggy version of <application>pg_upgrade</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Suppress incorrect <quote>PD_ALL_VISIBLE flag was incorrectly set</>\n      warning (Heikki Linnakangas)\n     </para>\n\n     <para>\n      <command>VACUUM</> would sometimes issue this warning in cases that\n      are actually valid.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use better SQLSTATE error codes for hot standby conflict cases\n      (Tatsuo Ishii and Simon Riggs)\n     </para>\n\n     <para>\n      All retryable conflict errors now have an error code that indicates\n      that a retry is possible.  Also, session closure due to the database\n      being dropped on the master is now reported as\n      <literal>ERRCODE_DATABASE_DROPPED</>, rather than\n      <literal>ERRCODE_ADMIN_SHUTDOWN</>, so that connection poolers can\n      handle the situation correctly.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent intermittent hang in interactions of startup process with\n      bgwriter process (Simon Riggs)\n     </para>\n\n     <para>\n      This affected recovery in non-hot-standby cases.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow including a composite type in itself (Tom Lane)\n     </para>\n\n     <para>\n      This prevents scenarios wherein the server could recurse infinitely\n      while processing the composite type.  While there are some possible\n      uses for such a structure, they don't seem compelling enough to\n      justify the effort required to make sure it always works safely.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid potential deadlock during catalog cache initialization\n      (Nikhil Sontakke)\n     </para>\n\n     <para>\n      In some cases the cache loading code would acquire share lock on a\n      system index before locking the index's catalog.  This could deadlock\n      against processes trying to acquire exclusive locks in the other,\n      more standard order.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix dangling-pointer problem in <literal>BEFORE ROW UPDATE</> trigger\n      handling when there was a concurrent update to the target tuple\n      (Tom Lane)\n     </para>\n\n     <para>\n      This bug has been observed to result in intermittent <quote>cannot\n      extract system attribute from virtual tuple</> failures while trying to\n      do <literal>UPDATE RETURNING ctid</>.  There is a very small probability\n      of more serious errors, such as generating incorrect index entries for\n      the updated tuple.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <command>DROP TABLE</> when there are pending deferred trigger\n      events for the table (Tom Lane)\n     </para>\n\n     <para>\n      Formerly the <command>DROP</> would go through, leading to\n      <quote>could not open relation with OID nnn</> errors when the\n      triggers were eventually fired.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow <quote>replication</> as a user name in\n      <filename>pg_hba.conf</> (Andrew Dunstan)\n     </para>\n\n     <para>\n      <quote>replication</> is special in the database name column, but it\n      was mistakenly also treated as special in the user name column.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent crash triggered by constant-false WHERE conditions during\n      GEQO optimization (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve planner's handling of semi-join and anti-join cases\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix handling of <literal>SELECT FOR UPDATE</> in a sub-SELECT\n      (Tom Lane)\n     </para>\n\n     <para>\n      This bug typically led to <quote>cannot extract system attribute from\n      virtual tuple</> errors.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix selectivity estimation for text search to account for NULLs\n      (Jesper Krogh)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix get_actual_variable_range() to support hypothetical indexes\n      injected by an index adviser plugin (Gurjeet Singh)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/Python memory leak involving array slices (Daniel Popowich)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow <application>libpq</>'s SSL initialization to succeed when\n      user's home directory is unavailable (Tom Lane)\n     </para>\n\n     <para>\n      If the SSL mode is such that a root certificate file is not required,\n      there is no need to fail.  This change restores the behavior to what\n      it was in pre-9.0 releases.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>libpq</> to return a useful error message for errors\n      detected in <function>conninfo_array_parse</> (Joseph Adams)\n     </para>\n\n     <para>\n      A typo caused the library to return NULL, rather than the\n      <structname>PGconn</> structure containing the error message, to the\n      application.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</> preprocessor's handling of float constants\n      (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix parallel <application>pg_restore</> to handle comments on\n      POST_DATA items correctly (Arnd Hannemann)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</> to cope with long lines (over 1KB) in\n      TOC files (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Put in more safeguards against crashing due to division-by-zero\n      with overly enthusiastic compiler optimization (Aurelien Jarno)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Support use of dlopen() in FreeBSD and OpenBSD on MIPS (Tom Lane)\n     </para>\n\n     <para>\n      There was a hard-wired assumption that this system function was not\n      available on MIPS hardware on these systems.  Use a compile-time test\n      instead, since more recent versions have it.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix compilation failures on HP-UX (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid crash when trying to write to the Windows console very early\n      in process startup (Rushabh Lathia)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Support building with MinGW 64 bit compiler for Windows\n      (Andrew Dunstan)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix version-incompatibility problem with <application>libintl</> on\n      Windows (Hiroshi Inoue)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix usage of <application>xcopy</> in Windows build scripts to\n      work correctly under Windows 7 (Andrew Dunstan)\n     </para>\n\n     <para>\n      This affects the build scripts only, not installation or usage.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix path separator used by <application>pg_regress</> on Cygwin\n      (Andrew Dunstan)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2011f\n      for DST law changes in Chile, Cuba, Falkland Islands, Morocco, Samoa,\n      and Turkey; also historical corrections for South Australia, Alaska,\n      and Hawaii.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-3\">\n  <title>Release 9.0.3</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2011-01-31</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.2.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.3</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Before exiting <application>walreceiver</>, ensure all the received WAL\n      is fsync'd to disk (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Otherwise the standby server could replay some un-synced WAL, conceivably\n      leading to data corruption if the system crashes just at that point.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid excess fsync activity in <application>walreceiver</>\n      (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <command>ALTER TABLE</> revalidate uniqueness and exclusion\n      constraints when needed (Noah Misch)\n     </para>\n\n     <para>\n      This was broken in 9.0 by a change that was intended to suppress\n      revalidation during <command>VACUUM FULL</> and <command>CLUSTER</>,\n      but unintentionally affected <command>ALTER TABLE</> as well.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix EvalPlanQual for <command>UPDATE</> of an inheritance tree in which\n      the tables are not all alike (Tom Lane)\n     </para>\n\n     <para>\n      Any variation in the table row types (including dropped columns present\n      in only some child tables) would confuse the EvalPlanQual code, leading\n      to misbehavior or even crashes.  Since EvalPlanQual is only executed\n      during concurrent updates to the same row, the problem was only seen\n      intermittently.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid failures when <command>EXPLAIN</> tries to display a simple-form\n      <literal>CASE</> expression (Tom Lane)\n     </para>\n\n     <para>\n      If the <literal>CASE</>'s test expression was a constant, the planner\n      could simplify the <literal>CASE</> into a form that confused the\n      expression-display code, resulting in <quote>unexpected CASE WHEN\n      clause</> errors.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assignment to an array slice that is before the existing range\n      of subscripts (Tom Lane)\n     </para>\n\n     <para>\n      If there was a gap between the newly added subscripts and the first\n      pre-existing subscript, the code miscalculated how many entries needed\n      to be copied from the old array's null bitmap, potentially leading to\n      data corruption or crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid unexpected conversion overflow in planner for very distant date\n      values (Tom Lane)\n     </para>\n\n     <para>\n      The <type>date</> type supports a wider range of dates than can be\n      represented by the <type>timestamp</> types, but the planner assumed it\n      could always convert a date to timestamp with impunity.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/Python crash when an array contains null entries (Alex Hunsaker)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Remove <application>ecpg</>'s fixed length limit for constants defining\n      an array dimension (Michael Meskes)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix erroneous parsing of <type>tsquery</> values containing\n      <literal>... &amp; !(subexpression) | ...</literal> (Tom Lane)\n     </para>\n\n     <para>\n      Queries containing this combination of operators were not executed\n      correctly.  The same error existed in <filename>contrib/intarray</>'s\n      <type>query_int</> type and <filename>contrib/ltree</>'s\n      <type>ltxtquery</> type.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix buffer overrun in <filename>contrib/intarray</>'s input function\n      for the <type>query_int</> type (Apple)\n     </para>\n\n     <para>\n      This bug is a security risk since the function's return address could\n      be overwritten.  Thanks to Apple Inc's security team for reporting this\n      issue and supplying the fix.  (CVE-2010-4015)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug in <filename>contrib/seg</>'s GiST picksplit algorithm\n      (Alexander Korotkov)\n     </para>\n\n     <para>\n      This could result in considerable inefficiency, though not actually\n      incorrect answers, in a GiST index on a <type>seg</> column.\n      If you have such an index, consider <command>REINDEX</>ing it after\n      installing this update.  (This is identical to the bug that was fixed in\n      <filename>contrib/cube</> in the previous update.)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-2\">\n  <title>Release 9.0.2</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2010-12-16</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.1.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.2</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Force the default\n      <link linkend=\"guc-wal-sync-method\"><varname>wal_sync_method</></link>\n      to be <literal>fdatasync</> on Linux (Tom Lane, Marti Raudsepp)\n     </para>\n\n     <para>\n      The default on Linux has actually been <literal>fdatasync</> for many\n      years, but recent kernel changes caused <productname>PostgreSQL</> to\n      choose <literal>open_datasync</> instead.  This choice did not result\n      in any performance improvement, and caused outright failures on\n      certain filesystems, notably <literal>ext4</> with the\n      <literal>data=journal</> mount option.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <quote>too many KnownAssignedXids</> error during Hot Standby\n      replay (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition in lock acquisition during Hot Standby (Simon Riggs)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid unnecessary conflicts during Hot Standby (Simon Riggs)\n     </para>\n\n     <para>\n      This fixes some cases where replay was considered to conflict with\n      standby queries (causing delay of replay or possibly cancellation of\n      the queries), but there was no real conflict.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted bugs in WAL replay logic for GIN indexes (Tom Lane)\n     </para>\n\n     <para>\n      This could result in <quote>bad buffer id: 0</> failures or\n      corruption of index contents during replication.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix recovery from base backup when the starting checkpoint WAL record\n      is not in the same WAL segment as its redo point (Jeff Davis)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix corner-case bug when streaming replication is enabled immediately\n      after creating the master database cluster (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix persistent slowdown of autovacuum workers when multiple workers\n      remain active for a long time (Tom Lane)\n     </para>\n\n     <para>\n      The effective <varname>vacuum_cost_limit</> for an autovacuum worker\n      could drop to nearly zero if it processed enough tables, causing it\n      to run extremely slowly.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix long-term memory leak in autovacuum launcher (Alvaro Herrera)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid failure when trying to report an impending transaction\n      wraparound condition from outside a transaction (Tom Lane)\n     </para>\n\n     <para>\n      This oversight prevented recovery after transaction wraparound got\n      too close, because database startup processing would fail.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add support for detecting register-stack overrun on <literal>IA64</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      The <literal>IA64</> architecture has two hardware stacks.  Full\n      prevention of stack-overrun failures requires checking both.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add a check for stack overflow in <function>copyObject()</> (Tom Lane)\n     </para>\n\n     <para>\n      Certain code paths could crash due to stack overflow given a\n      sufficiently complex query.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix detection of page splits in temporary GiST indexes (Heikki\n      Linnakangas)\n     </para>\n\n     <para>\n      It is possible to have a <quote>concurrent</> page split in a\n      temporary index, if for example there is an open cursor scanning the\n      index when an insertion is done.  GiST failed to detect this case and\n      hence could deliver wrong results when execution of the cursor\n      continued.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix error checking during early connection processing (Tom Lane)\n     </para>\n\n     <para>\n      The check for too many child processes was skipped in some cases,\n      possibly leading to postmaster crash when attempting to add the new\n      child process to fixed-size arrays.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve efficiency of window functions (Tom Lane)\n     </para>\n\n     <para>\n      Certain cases where a large number of tuples needed to be read in\n      advance, but <varname>work_mem</> was large enough to allow them all\n      to be held in memory, were unexpectedly slow.\n      <function>percent_rank()</>, <function>cume_dist()</> and\n      <function>ntile()</> in particular were subject to this problem.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid memory leakage while <command>ANALYZE</>'ing complex index\n      expressions (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure an index that uses a whole-row Var still depends on its table\n      (Tom Lane)\n     </para>\n\n     <para>\n      An index declared like <literal>create index i on t (foo(t.*))</>\n      would not automatically get dropped when its table was dropped.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add missing support in <command>DROP OWNED BY</> for removing foreign\n      data wrapper/server privileges belonging to a user (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Do not <quote>inline</> a SQL function with multiple <literal>OUT</>\n      parameters (Tom Lane)\n     </para>\n\n     <para>\n      This avoids a possible crash due to loss of information about the\n      expected result rowtype.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix crash when inline-ing a set-returning function whose argument list\n      contains a reference to an inline-able user function (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Behave correctly if <literal>ORDER BY</>, <literal>LIMIT</>,\n      <literal>FOR UPDATE</>, or <literal>WITH</> is attached to the\n      <literal>VALUES</> part of <literal>INSERT ... VALUES</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make the <literal>OFF</> keyword unreserved (Heikki Linnakangas)\n     </para>\n\n     <para>\n      This prevents problems with using <literal>off</> as a variable name in\n      <application>PL/pgSQL</>.  That worked before 9.0, but was now broken\n      because <application>PL/pgSQL</> now treats all core reserved words\n      as reserved.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix constant-folding of <literal>COALESCE()</> expressions (Tom Lane)\n     </para>\n\n     <para>\n      The planner would sometimes attempt to evaluate sub-expressions that\n      in fact could never be reached, possibly leading to unexpected errors.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <quote>could not find pathkey item to sort</> planner failure\n      with comparison of whole-row Vars (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix postmaster crash when connection acceptance\n      (<function>accept()</> or one of the calls made immediately after it)\n      fails, and the postmaster was compiled with GSSAPI support (Alexander\n      Chernikov)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Retry after receiving an invalid response packet from a RADIUS\n      authentication server (Magnus Hagander)\n     </para>\n\n     <para>\n      This fixes a low-risk potential denial of service condition.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix missed unlink of temporary files when <varname>log_temp_files</>\n      is active (Tom Lane)\n     </para>\n\n     <para>\n      If an error occurred while attempting to emit the log message, the\n      unlink was not done, resulting in accumulation of temp files.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add print functionality for <structname>InhRelation</> nodes (Tom Lane)\n     </para>\n\n     <para>\n      This avoids a failure when <varname>debug_print_parse</> is enabled\n      and certain types of query are executed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect calculation of distance from a point to a horizontal\n      line segment (Tom Lane)\n     </para>\n\n     <para>\n      This bug affected several different geometric distance-measurement\n      operators.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect calculation of transaction status in\n      <application>ecpg</> (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix errors in <application>psql</>'s Unicode-escape support (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Speed up parallel <application>pg_restore</> when the archive\n      contains many large objects (blobs) (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>PL/pgSQL</>'s handling of <quote>simple</>\n      expressions to not fail in recursion or error-recovery cases (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>PL/pgSQL</>'s error reporting for no-such-column\n      cases (Tom Lane)\n     </para>\n\n     <para>\n      As of 9.0, it would sometimes report <quote>missing FROM-clause entry\n      for table foo</> when <quote>record foo has no field bar</> would be\n      more appropriate.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>PL/Python</> to honor typmod (i.e., length or\n      precision restrictions) when assigning to tuple fields (Tom Lane)\n     </para>\n\n     <para>\n      This fixes a regression from 8.4.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>PL/Python</>'s handling of set-returning functions\n      (Jan Urbanski)\n     </para>\n\n     <para>\n      Attempts to call SPI functions within the iterator generating a set\n      result would fail.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug in <filename>contrib/cube</>'s GiST picksplit algorithm\n      (Alexander Korotkov)\n     </para>\n\n     <para>\n      This could result in considerable inefficiency, though not actually\n      incorrect answers, in a GiST index on a <type>cube</> column.\n      If you have such an index, consider <command>REINDEX</>ing it after\n      installing this update.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't emit <quote>identifier will be truncated</> notices in\n      <filename>contrib/dblink</> except when creating new connections\n      (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix potential coredump on missing public key in\n      <filename>contrib/pgcrypto</> (Marti Raudsepp)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix buffer overrun in <filename>contrib/pg_upgrade</> (Hernan Gonzalez)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak in <filename>contrib/xml2</>'s XPath query functions\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2010o\n      for DST law changes in Fiji and Samoa;\n      also historical corrections for Hong Kong.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0-1\">\n  <title>Release 9.0.1</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2010-10-04</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 9.0.0.\n   For information about new features in the 9.0 major release, see\n   <xref linkend=\"release-9-0\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 9.0.1</title>\n\n   <para>\n    A dump/restore is not required for those running 9.0.X.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Use a separate interpreter for each calling SQL userid in PL/Perl and\n      PL/Tcl (Tom Lane)\n     </para>\n\n     <para>\n      This change prevents security problems that can be caused by subverting\n      Perl or Tcl code that will be executed later in the same session under\n      another SQL user identity (for example, within a <literal>SECURITY\n      DEFINER</> function).  Most scripting languages offer numerous ways that\n      that might be done, such as redefining standard functions or operators\n      called by the target function.  Without this change, any SQL user with\n      Perl or Tcl language usage rights can do essentially anything with the\n      SQL privileges of the target function's owner.\n     </para>\n\n     <para>\n      The cost of this change is that intentional communication among Perl\n      and Tcl functions becomes more difficult.  To provide an escape hatch,\n      PL/PerlU and PL/TclU functions continue to use only one interpreter\n      per session.  This is not considered a security issue since all such\n      functions execute at the trust level of a database superuser already.\n     </para>\n\n     <para>\n      It is likely that third-party procedural languages that claim to offer\n      trusted execution have similar security issues.  We advise contacting\n      the authors of any PL you are depending on for security-critical\n      purposes.\n     </para>\n\n     <para>\n      Our thanks to Tim Bunce for pointing out this issue (CVE-2010-3433).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <function>pg_get_expr()</> security fix so that the function\n      can still be used on the output of a sub-select (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect placement of placeholder evaluation (Tom Lane)\n     </para>\n\n     <para>\n      This bug could result in query outputs being non-null when they\n      should be null, in cases where the inner side of an outer join\n      is a sub-select with non-strict expressions in its output list.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix join removal's handling of placeholder expressions (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible duplicate scans of <literal>UNION ALL</> member relations\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent infinite loop in ProcessIncomingNotify() after unlistening\n      (Jeff Davis)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent show_session_authorization() from crashing within autovacuum\n      processes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Re-allow input of Julian dates prior to 0001-01-01 AD (Tom Lane)\n     </para>\n\n     <para>\n      Input such as <literal>'J100000'::date</> worked before 8.4,\n      but was unintentionally broken by added error-checking.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make psql recognize <command>DISCARD ALL</> as a command that should\n      not be encased in a transaction block in autocommit-off mode\n      (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update build infrastructure and documentation to reflect the source code\n      repository's move from CVS to Git (Magnus Hagander and others)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-9-0\">\n  <title>Release 9.0</title>\n\n  <formalpara>\n   <title>Release date:</title>\n   <para>2010-09-20</para>\n  </formalpara>\n\n  <sect2>\n   <title>Overview</title>\n\n   <para>\n    This release of\n    <productname>PostgreSQL</> adds features that have been requested\n    for years, such as easy-to-use replication, a mass permission-changing\n    facility, and anonymous code blocks. While past major releases have\n    been conservative in their scope, this release shows a\n    bold new desire to provide facilities that new and existing\n    users of <productname>PostgreSQL</> will embrace. This has all\n    been done with few incompatibilities. Major enhancements include:\n   </para>\n\n   <itemizedlist>\n\n    <!-- This list duplicates items below, but without authors or details-->\n\n    <listitem>\n\n     <para>\n      Built-in replication based on log shipping.  This advance consists of\n      two features: Streaming Replication, allowing continuous archive\n      (<acronym>WAL</>) files to be streamed over a network connection to a\n      standby server, and Hot Standby, allowing continuous archive standby\n      servers to execute read-only queries.  The net effect is to support a\n      single master with multiple read-only slave servers.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Easier database object permissions management. <link\n      linkend=\"SQL-GRANT\"><command>GRANT</>/<command>REVOKE IN\n      SCHEMA</></link> supports mass permissions changes on existing objects,\n      while <link linkend=\"SQL-ALTERDEFAULTPRIVILEGES\"><command>ALTER DEFAULT\n      PRIVILEGES</></link> allows control of privileges for objects created in\n      the future.  Large objects (BLOBs) now support permissions management as\n      well.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Broadly enhanced stored procedure support.\n      The <link linkend=\"SQL-DO\"><command>DO</></link> statement supports\n      ad-hoc or <quote>anonymous</> code blocks.\n      Functions can now be called using named parameters.\n      <link linkend=\"plpgsql\">PL/pgSQL</link> is now installed by default, and\n      <link linkend=\"plperl\">PL/Perl</link> and <link\n      linkend=\"plpython\">PL/Python</link> have been enhanced in several ways,\n      including support for Python3.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Full support for <link linkend=\"install-windows\">64-bit\n      <productname>Windows</></link>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      More advanced reporting queries, including additional windowing options\n      (<literal>PRECEDING</> and <literal>FOLLOWING</>) and the ability to\n      control the order in which values are fed to aggregate functions.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      New trigger features, including\n      SQL-standard-compliant <link\n      linkend=\"SQL-CREATETRIGGER\">per-column triggers</link> and\n      conditional trigger execution.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      <link linkend=\"SQL-CREATETABLE-compatibility\">Deferrable\n      unique constraints</link>. Mass updates to unique keys are now possible\n      without trickery.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      <link linkend=\"ddl-constraints-exclusion\">Exclusion constraints</link>.\n      These provide a generalized version of unique constraints, allowing\n      enforcement of complex conditions.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      New and enhanced security features, including RADIUS authentication,\n      LDAP authentication improvements, and a new contrib module\n      <link linkend=\"passwordcheck\"><filename>passwordcheck</></link>\n      for testing password strength.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      New high-performance implementation of the\n      <link linkend=\"SQL-LISTEN\"><command>LISTEN</></link>/<link\n      linkend=\"SQL-NOTIFY\"><command>NOTIFY</></link> feature.\n      Pending events are now stored in a memory-based queue rather than\n      a table.  Also, a <quote>payload</> string can be sent with each\n      event, rather than transmitting just an event name as before.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      New implementation of\n      <link linkend=\"SQL-VACUUM\"><command>VACUUM FULL</></link>.\n      This command now rewrites the entire table and indexes, rather than\n      moving individual rows to compact space.  It is substantially faster\n      in most cases, and no longer results in index bloat.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      New contrib module\n      <link linkend=\"pgupgrade\"><filename>pg_upgrade</></link>\n      to support in-place upgrades from 8.3 or 8.4 to 9.0.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Multiple performance enhancements for specific types of queries,\n      including elimination of unnecessary joins.  This helps optimize some\n      automatically-generated queries, such as those produced by\n      object-relational mappers (ORMs).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      <link linkend=\"SQL-EXPLAIN \"><command>EXPLAIN</></link> enhancements.\n      The output is now available in JSON, XML, or YAML format, and includes\n      buffer utilization and other data not previously available.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      <link linkend=\"hstore\"><filename>hstore</></link> improvements,\n      including new functions and greater data capacity.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n   <para>\n    The above items are explained in more detail in the sections below.\n   </para>\n\n  </sect2>\n\n  <sect2>\n\n  <title>Migration to Version 9.0</title>\n\n  <para>\n   A dump/restore using <application>pg_dump</application>,\n   or use of <application>pg_upgrade</application>, is required\n   for those wishing to migrate data from any previous\n   release.\n  </para>\n\n  <para>\n   Version 9.0 contains a number of changes that selectively break backwards\n   compatibility in order to support new features and code quality\n   improvements.  In particular, users who make extensive use of PL/pgSQL,\n   Point-In-Time Recovery (PITR), or Warm Standby should test their\n   applications because of slight user-visible changes in those areas.\n   Observe the following incompatibilities:\n  </para>\n\n  <sect3>\n   <title>Server Settings</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Remove server parameter <varname>add_missing_from</>, which was\n      defaulted to off for many years (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Remove server parameter <varname>regex_flavor</>, which\n      was defaulted to <link\n      linkend=\"posix-syntax-details\"><literal>advanced</></link>\n      for many years (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      <link linkend=\"guc-archive-mode\"><varname>archive_mode</></link>\n      now only affects <link\n      linkend=\"guc-archive-command\"><varname>archive_command</></link>;\n      a new setting, <link\n      linkend=\"guc-wal-level\"><varname>wal_level</></link>, affects\n      the contents of the write-ahead log (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      <link linkend=\"guc-log-temp-files\"><varname>log_temp_files</></link>\n      now uses default file size units of kilobytes (Robert Haas)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect3>\n\n  <sect3>\n   <title>Queries</title>\n\n   <itemizedlist>\n\n   <listitem>\n    <para>\n     When querying a <link linkend=\"ddl-inherit\">parent table</link>,\n     do not do any separate permission checks on child tables\n     scanned as part of the query (Peter Eisentraut)\n    </para>\n\n    <para>\n     The SQL standard specifies this behavior, and it is also much more\n     convenient in practice than the former behavior of checking permissions\n     on each child as well as the parent.\n    </para>\n   </listitem>\n\n   </itemizedlist>\n\n  </sect3>\n\n  <sect3>\n   <title>Data Types</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      <link linkend=\"datatype-binary\"><type>bytea</></link> output now\n      appears in hex format by default (Peter Eisentraut)\n     </para>\n\n     <para>\n      The server parameter <link\n      linkend=\"guc-bytea-output\"><varname>bytea_output</></link> can be\n      used to select the traditional output format if needed for\n      compatibility.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Array input now considers only plain ASCII whitespace characters\n      to be potentially ignorable; it will never ignore non-ASCII characters,\n      even if they are whitespace according to some locales (Tom Lane)\n     </para>\n\n     <para>\n      This avoids some corner cases where array values could be interpreted\n      differently depending on the server's locale settings.\n     </para>\n    </listitem>\n\n   <listitem>\n    <para>\n     Improve standards compliance of <link\n     linkend=\"functions-similarto-regexp\"><literal>SIMILAR TO</></link>\n     patterns and SQL-style <function>substring()</> patterns (Tom Lane)\n    </para>\n\n    <para>\n     This includes treating <literal>?</> and <literal>{...}</> as\n     pattern metacharacters, while they were simple literal characters\n     before; that corresponds to new features added in SQL:2008.\n     Also, <literal>^</> and <literal>$</> are now treated as simple\n     literal characters; formerly they were treated as metacharacters,\n     as if the pattern were following POSIX rather than SQL rules.\n     Also, in SQL-standard <function>substring()</>, use of parentheses\n     for nesting no longer interferes with capturing of a substring.\n     Also, processing of bracket expressions (character classes) is\n     now more standards-compliant.\n    </para>\n   </listitem>\n\n   <listitem>\n    <para>\n     Reject negative length values in 3-parameter <link\n     linkend=\"functions-string-sql\"><function>substring()</></link>\n     for bit strings, per the SQL standard (Tom Lane)\n    </para>\n   </listitem>\n\n   <listitem>\n    <para>\n     Make <function>date_trunc</> truncate rather than round when reducing\n     precision of fractional seconds (Tom Lane)\n    </para>\n\n    <para>\n     The code always acted this way for integer-based dates/times.\n     Now float-based dates/times behave similarly.\n    </para>\n   </listitem>\n\n  </itemizedlist>\n\n  </sect3>\n\n  <sect3>\n   <title>Object Renaming</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Tighten enforcement of column name consistency during <command>RENAME</>\n      when a child table inherits the same column from multiple unrelated\n      parents (KaiGai Kohei)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      No longer automatically rename indexes and index columns when the\n      underlying table columns are renamed (Tom Lane)\n     </para>\n\n     <para>\n      Administrators can still rename such indexes and columns manually.\n      This change will require an update of the JDBC driver, and possibly other\n      drivers, so that unique indexes are correctly recognized after a rename.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      <command>CREATE OR REPLACE FUNCTION</command> can no longer change\n      the declared names of function parameters (Pavel Stehule)\n     </para>\n\n     <para>\n      In order to avoid creating ambiguity in named-parameter calls, it is\n      no longer allowed to change the aliases for input parameters\n      in the declaration of an existing function (although names can still\n      be assigned to previously unnamed parameters).  You now have to\n      <command>DROP</command> and recreate the function to do that.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect3>\n\n  <sect3>\n   <title>PL/pgSQL</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      PL/pgSQL now throws an error if a variable name conflicts with a\n      column name used in a query (Tom Lane)\n     </para>\n\n     <para>\n      The former behavior was to bind ambiguous names to PL/pgSQL variables\n      in preference to query columns, which often resulted in surprising\n      misbehavior. Throwing an error allows easy detection of ambiguous\n      situations.  Although it's recommended that functions encountering this\n      type of error be modified to remove the conflict, the old behavior can\n      be restored if necessary via the configuration parameter <link\n      linkend=\"plpgsql-var-subst\"><varname>plpgsql.variable_conflict</></link>,\n      or via the per-function option <literal>#variable_conflict</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      PL/pgSQL no longer allows variable names that match certain SQL\n      reserved words (Tom Lane)\n     </para>\n\n     <para>\n      This is a consequence of aligning the PL/pgSQL parser to match the\n      core SQL parser more closely.  If necessary,\n      variable names can be double-quoted to avoid this restriction.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      PL/pgSQL now requires columns of composite results to match the\n      expected type modifier as well as base type (Pavel Stehule, Tom Lane)\n     </para>\n\n     <para>\n      For example, if a column of the result type is declared as\n      <literal>NUMERIC(30,2)</>, it is no longer acceptable to return a\n      <literal>NUMERIC</> of some other precision in that column.  Previous\n      versions neglected to check the type modifier and would thus allow\n      result rows that didn't actually conform to the declared restrictions.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      PL/pgSQL now treats selection into composite fields more consistently\n      (Tom Lane)\n     </para>\n\n     <para>\n      Formerly, a statement like\n      <literal>SELECT ... INTO <replaceable>rec</>.<replaceable>fld</> FROM ...</literal>\n      was treated as a scalar assignment even if the record field\n      <replaceable>fld</> was of composite type.  Now it is treated as a\n      record assignment, the same as when the <literal>INTO</> target is a\n      regular variable of composite type.  So the values to be assigned to the\n      field's subfields should be written as separate columns of the\n      <command>SELECT</> list, not as a <literal>ROW(...)</> construct as in\n      previous versions.\n     </para>\n\n     <para>\n      If you need to do this in a way that will work in both 9.0 and previous\n      releases, you can write something like\n      <literal><replaceable>rec</>.<replaceable>fld</> := ROW(...) FROM ...</literal>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Remove PL/pgSQL's <literal>RENAME</> declaration (Tom Lane)\n     </para>\n\n     <para>\n      Instead of <literal>RENAME</>, use <link\n      linkend=\"plpgsql-declaration-alias\"><literal>ALIAS</></link>,\n      which can now create an alias for any variable, not only dollar sign\n      parameter names (such as <literal>$1</>) as before.\n     </para>\n    </listitem>\n   </itemizedlist>\n\n  </sect3>\n\n  <sect3>\n   <title>Other Incompatibilities</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Deprecate use of <literal>=&gt;</> as an operator name (Robert Haas)\n     </para>\n\n     <para>\n      Future versions of <productname>PostgreSQL</> will probably reject\n      this operator name entirely, in order to support the SQL-standard\n      notation for named function parameters.  For the moment, it is\n      still allowed, but a warning is emitted when such an operator is\n      defined.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Remove support for platforms that don't have a working 64-bit\n      integer data type (Tom Lane)\n     </para>\n\n     <para>\n      It is believed all still-supported platforms have working 64-bit\n      integer data types.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n  </sect3>\n </sect2>\n\n <sect2>\n  <title>Changes</title>\n   <para>\n    Version 9.0 has an unprecedented number of new major features,\n    and over 200 enhancements, improvements, new commands,\n    new functions, and other changes.\n   </para>\n\n  <sect3>\n   <title>Server</title>\n\n   <sect4>\n    <title>Continuous Archiving and Streaming Replication</title>\n\n    <para>\n     PostgreSQL's existing standby-server capability has been expanded both to\n     support read-only queries on standby servers and to greatly reduce\n     the lag between master and standby servers.  For many users, this\n     will be a useful and low-administration form of replication, either\n     for high availability or for horizontal scalability.\n    </para>\n\n    <itemizedlist>\n     <listitem>\n      <para>\n       Allow a standby server to accept read-only queries\n       (Simon Riggs, Heikki Linnakangas)\n      </para>\n\n      <para>\n       This feature is called Hot Standby. There are new\n       <filename>postgresql.conf</> and <filename>recovery.conf</>\n       settings to control this feature, as well as extensive\n       <link linkend=\"hot-standby\">documentation</link>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow write-ahead log (<acronym>WAL</>) data to be streamed to a\n       standby server (Fujii Masao, Heikki Linnakangas)\n      </para>\n\n      <para>\n       This feature is called Streaming Replication.\n       Previously <acronym>WAL</> data could be sent to standby servers only\n       in units of entire <acronym>WAL</> files (normally 16 megabytes each).\n       Streaming Replication eliminates this inefficiency and allows updates\n       on the master to be propagated to standby servers with very little\n       delay.  There are new <filename>postgresql.conf</> and\n       <filename>recovery.conf</> settings to control this feature, as well as\n       extensive <link linkend=\"streaming-replication\">documentation</link>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link\n       linkend=\"functions-recovery-info-table\"><function>pg_last_xlog_receive_location()</></link>\n       and <function>pg_last_xlog_replay_location()</>, which\n       can be used to monitor standby server <acronym>WAL</>\n       activity (Simon Riggs, Fujii Masao, Heikki Linnakangas)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Performance</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Allow per-tablespace values to be set for sequential and random page\n       cost estimates (<varname>seq_page_cost</>/<varname>random_page_cost</>)\n       via <link linkend=\"SQL-ALTERTABLESPACE\"><command>ALTER TABLESPACE\n       ... SET/RESET</></link> (Robert Haas)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve performance and reliability of EvalPlanQual rechecks in join\n       queries (Tom Lane)\n      </para>\n\n      <para>\n       <command>UPDATE</>, <command>DELETE</>, and <command>SELECT FOR\n       UPDATE/SHARE</> queries that involve joins will now behave much better\n       when encountering freshly-updated rows.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve performance of <link\n       linkend=\"SQL-TRUNCATE\"><command>TRUNCATE</></link> when\n       the table was created or truncated earlier in the same transaction\n       (Tom Lane)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve performance of finding inheritance child tables (Tom Lane)\n      </para>\n     </listitem>\n\n     </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Optimizer</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Remove unnecessary <link linkend=\"queries-join\">outer\n       joins</link> (Robert Haas)\n      </para>\n\n      <para>\n       Outer joins where the inner side is unique and not referenced above\n       the join are unnecessary and are therefore now removed.  This will\n       accelerate many automatically generated queries, such as those created\n       by object-relational mappers (ORMs).\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <literal>IS NOT NULL</> restrictions to use indexes (Tom Lane)\n      </para>\n\n      <para>\n       This is particularly useful for finding\n       <function>MAX()</>/<function>MIN()</> values in indexes that\n       contain many null values.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve the optimizer's choices about when to use materialize nodes,\n       and when to use sorting versus hashing for <literal>DISTINCT</>\n       (Tom Lane)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve the optimizer's equivalence detection for expressions involving\n       <type>boolean</> <literal>&lt;&gt;</> operators (Tom Lane)\n      </para>\n     </listitem>\n    </itemizedlist>\n   </sect4>\n\n   <sect4>\n    <title><link linkend=\"geqo\">GEQO</link></title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Use the same random seed every time GEQO plans a query (Andres\n       Freund)\n      </para>\n\n      <para>\n       While the Genetic Query Optimizer (GEQO) still selects\n       random plans, it now always selects the same random plans for identical\n       queries, thus giving more consistent performance. You can modify <link\n       linkend=\"guc-geqo-seed\"><varname>geqo_seed</></link> to experiment with\n       alternative plans.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve GEQO plan selection (Tom Lane)\n      </para>\n\n      <para>\n       This avoids the rare error <quote>failed to make a valid plan</>,\n       and should also improve planning speed.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Optimizer Statistics</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Improve <link linkend=\"SQL-ANALYZE\"><command>ANALYZE</></link>\n       to support inheritance-tree statistics (Tom Lane)\n      </para>\n\n      <para>\n       This is particularly useful for partitioned tables.  However,\n       autovacuum does not yet automatically re-analyze parent tables\n       when child tables change.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve <link linkend=\"routine-vacuuming\">autovacuum</link>'s\n       detection of when re-analyze is necessary (Tom Lane)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve optimizer's estimation for greater/less-than comparisons\n       (Tom Lane)\n      </para>\n\n      <para>\n       When looking up statistics for greater/less-than comparisons,\n       if the comparison value is in the first or last histogram bucket,\n       use an index (if available) to fetch the current actual column\n       minimum or maximum.  This greatly improves the accuracy of estimates\n       for comparison values near the ends of the data range, particularly\n       if the range is constantly changing due to addition of new data.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow setting of number-of-distinct-values statistics using <link\n       linkend=\"SQL-ALTERTABLE\"><command>ALTER TABLE</></link>\n       (Robert Haas)\n      </para>\n\n      <para>\n       This allows users to override the estimated number or percentage of\n       distinct values for a column. This statistic is normally computed by\n       <command>ANALYZE</>, but the estimate can be poor, especially on tables\n       with very large numbers of rows.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Authentication</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add support for <link\n       linkend=\"auth-radius\"><acronym>RADIUS</></link> (Remote\n       Authentication Dial In User Service) authentication\n       (Magnus Hagander)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <link linkend=\"auth-ldap\"><acronym>LDAP</></link>\n       (Lightweight Directory Access Protocol) authentication\n       to operate in <quote>search/bind</> mode\n       (Robert Fleming, Magnus Hagander)\n      </para>\n\n      <para>\n       This allows the user to be looked up first, then the system uses\n       the <acronym>DN</> (Distinguished Name) returned for that user.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link\n       linkend=\"auth-pg-hba-conf\"><literal>samehost</></link>\n       and <literal>samenet</> designations to\n       <filename>pg_hba.conf</> (Stef Walter)\n      </para>\n\n      <para>\n       These match the server's <acronym>IP</> address and subnet address\n       respectively.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Pass trusted SSL root certificate names to the client so the client\n       can return an appropriate client certificate (Craig Ringer)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Monitoring</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add the ability for clients to set an <link\n       linkend=\"libpq-connect-application-name\">application\n       name</link>, which is displayed in\n       <structname>pg_stat_activity</> (Dave Page)\n      </para>\n\n      <para>\n       This allows administrators to characterize database traffic\n       and troubleshoot problems by source application.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add a SQLSTATE option (<literal>%e</>) to <link\n       linkend=\"guc-log-line-prefix\"><varname>log_line_prefix</></link>\n       (Guillaume Smet)\n      </para>\n\n      <para>\n       This allows users to compile statistics on errors and messages\n       by error code number.\n      </para>\n\n     </listitem>\n\n     <listitem>\n      <para>\n       Write to the Windows event log in <acronym>UTF16</> encoding\n       (Itagaki Takahiro)\n      </para>\n\n      <para>\n       Now there is true multilingual support for PostgreSQL log messages\n       on Windows.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Statistics Counters</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add <link\n       linkend=\"monitoring-stats-funcs-table\"><function>pg_stat_reset_shared('bgwriter')</></link>\n       to reset the cluster-wide shared statistics for the\n       background writer (Greg Smith)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link\n       linkend=\"monitoring-stats-funcs-table\"><function>pg_stat_reset_single_table_counters()</></link>\n       and <function>pg_stat_reset_single_function_counters()</>\n       to allow resetting the statistics counters for individual\n       tables and functions (Magnus Hagander)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Server Settings</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Allow setting of configuration parameters based on <link\n       linkend=\"sql-alterrole\">database/role combinations</link>\n       (Alvaro Herrera)\n      </para>\n\n      <para>\n       Previously only per-database and per-role settings were possible,\n       not combinations. All role and database settings are now stored\n       in the new <structname>pg_db_role_setting</> system catalog. A new\n       <application>psql</> command <literal>\\drds</> shows these settings.\n       The legacy system views <structname>pg_roles</>,\n       <structname>pg_shadow</>, and <structname>pg_user</>\n       do not show combination settings, and therefore no longer\n       completely represent the configuration for a user or database.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add server parameter <link\n       linkend=\"guc-bonjour\"><varname>bonjour</></link>, which\n       controls whether a Bonjour-enabled server advertises\n       itself via <productname>Bonjour</> (Tom Lane)\n      </para>\n\n      <para>\n       The default is off, meaning it does not advertise.  This allows\n       packagers to distribute Bonjour-enabled builds without worrying\n       that individual users might not want the feature.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add server parameter <link\n       linkend=\"guc-enable-material\"><varname>enable_material</></link>, which\n       controls the use of materialize nodes in the optimizer\n       (Robert Haas)\n      </para>\n\n      <para>\n       The default is on.  When off, the optimizer will not add\n       materialize nodes purely for performance reasons, though they\n       will still be used when necessary for correctness.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Change server parameter <link\n       linkend=\"guc-log-temp-files\"><varname>log_temp_files</></link> to\n       use default file size units of kilobytes (Robert Haas)\n      </para>\n\n      <para>\n       Previously this setting was interpreted in bytes if no units were\n       specified.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Log changes of parameter values when <filename>postgresql.conf</> is\n       reloaded (Peter Eisentraut)\n      </para>\n\n      <para>\n       This lets administrators and security staff audit changes of database\n       settings, and is also very convenient for checking the effects of\n       <filename>postgresql.conf</> edits.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Properly enforce superuser permissions for custom server parameters\n       (Tom Lane)\n      </para>\n\n      <para>\n       Non-superusers can no longer issue <command>ALTER\n       ROLE</>/<command>DATABASE SET</> for parameters that are not currently\n       known to the server.  This allows the server to correctly check that\n       superuser-only parameters are only set by superusers.  Previously,\n       the <literal>SET</> would be allowed and then ignored at session start,\n       making superuser-only custom parameters much less useful than they\n       should be.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n  </sect3>\n\n  <sect3>\n   <title>Queries</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Perform <link linkend=\"SQL-FOR-UPDATE-SHARE\"><command>SELECT\n      FOR UPDATE</>/<literal>SHARE</></link> processing after\n      applying <literal>LIMIT</>, so the number of rows returned\n      is always predictable (Tom Lane)\n     </para>\n\n     <para>\n      Previously, changes made by concurrent transactions could cause a\n      <command>SELECT FOR UPDATE</> to unexpectedly return fewer rows than\n      specified by its <literal>LIMIT</>. <literal>FOR UPDATE</> in combination\n      with <literal>ORDER BY</> can still produce surprising results, but that\n      can be corrected by placing <literal>FOR UPDATE</> in a subquery.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow mixing of traditional and SQL-standard <link\n      linkend=\"SQL-LIMIT\"><literal>LIMIT</>/<literal>OFFSET</></link>\n      syntax (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Extend the supported frame options in <link\n      linkend=\"SQL-WINDOW\">window functions</link> (Hitoshi\n      Harada)\n     </para>\n\n     <para>\n      Frames can now start with <literal>CURRENT ROW</>, and the <literal>ROWS\n      <replaceable>n</> PRECEDING</>/<literal>FOLLOWING</> options are now\n      supported.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <command>SELECT INTO</> and <command>CREATE TABLE AS</> return\n      row counts to the client in their command tags\n      (Boszormenyi Zoltan)\n     </para>\n\n     <para>\n      This can save an entire round-trip to the client, allowing result counts\n      and pagination to be calculated without an additional\n      <command>COUNT</command> query.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n   <sect4>\n    <title>Unicode Strings</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Support Unicode surrogate pairs (dual 16-bit representation) in\n       <link\n       linkend=\"sql-syntax-strings-uescape\"><literal>U&amp;</></link>\n       strings and identifiers (Peter Eisentraut)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support Unicode escapes in <link\n       linkend=\"sql-syntax-strings-escape\"><literal>E'...'</></link>\n       strings (Marko Kreen)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n  </sect3>\n\n  <sect3>\n   <title>Object Manipulation</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Speed up <link linkend=\"SQL-CREATEDATABASE\"><command>CREATE\n      DATABASE</></link> by deferring flushes to disk (Andres\n      Freund, Greg Stark)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow <link linkend=\"SQL-COMMENT\">comments</link> on\n      columns of tables, views, and composite types only, not other\n      relation types such as indexes and <acronym>TOAST</> tables (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow the creation of <link\n      linkend=\"SQL-CREATETYPE-enum\">enumerated types</link> containing\n      no values (Bruce Momjian)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Let values of columns having storage type <literal>MAIN</> remain on\n      the main heap page unless the row cannot fit on a page (Kevin Grittner)\n     </para>\n\n     <para>\n      Previously <literal>MAIN</> values were forced out to <acronym>TOAST</>\n      tables until the row size was less than one-quarter of the page size.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n   <sect4>\n    <title><command>ALTER TABLE</></title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Implement <literal>IF EXISTS</> for <literal>ALTER TABLE DROP COLUMN</>\n       and <literal>ALTER TABLE DROP CONSTRAINT </> (Andres Freund)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <command>ALTER TABLE</> commands that rewrite tables to skip\n       <acronym>WAL</> logging (Itagaki Takahiro)\n      </para>\n\n      <para>\n       Such operations either produce a new copy of the table or are rolled\n       back, so <acronym>WAL</> archiving can be skipped, unless running in\n       continuous archiving mode.  This reduces I/O overhead and improves\n       performance.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix failure of <literal>ALTER TABLE <replaceable>table</> ADD COLUMN\n       <replaceable>col</> serial</literal> when done by non-owner of table\n       (Tom Lane)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title><link linkend=\"SQL-CREATETABLE\"><command>CREATE TABLE</></link></title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add support for copying <literal>COMMENTS</> and <literal>STORAGE</>\n       settings in <command>CREATE TABLE ... LIKE</> commands\n       (Itagaki Takahiro)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add a shortcut for copying all properties in <command>CREATE\n       TABLE ... LIKE</> commands (Itagaki Takahiro)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add the SQL-standard\n       <literal>CREATE TABLE ... OF <replaceable>type</></literal> command\n       (Peter Eisentraut)\n      </para>\n\n      <para>\n       This allows creation of a table that matches an existing composite\n       type. Additional constraints and defaults can be specified in the\n       command.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Constraints</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"SQL-CREATETABLE-compatibility\">deferrable\n       unique constraints</link> (Dean Rasheed)\n      </para>\n\n      <para>\n       This allows mass updates, such as\n       <literal>UPDATE tab SET col = col + 1</>,\n       to work reliably\n       on columns that have unique indexes or are marked as primary keys.\n       If the constraint is specified as <literal>DEFERRABLE</> it will be\n       checked at the end of the statement, rather than after each row is\n       updated. The constraint check can also be deferred until the end of the\n       current transaction, allowing such updates to be spread over multiple\n       SQL commands.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add\n       <link linkend=\"ddl-constraints-exclusion\">exclusion constraints</link>\n       (Jeff Davis)\n      </para>\n\n      <para>\n       Exclusion constraints generalize uniqueness constraints by allowing\n       arbitrary comparison operators, not just equality.  They are created\n       with the <link linkend=\"SQL-CREATETABLE-EXCLUDE\"><command>CREATE\n       TABLE CONSTRAINT ... EXCLUDE</></link> clause.\n       The most common use of exclusion constraints is to specify that column\n       entries must not overlap, rather than simply not be equal.  This is\n       useful for time periods and other ranges, as well as arrays.\n       This feature enhances checking of data integrity for many\n       calendaring, time-management, and scientific applications.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve uniqueness-constraint violation error messages to\n       report the values causing the failure (Itagaki Takahiro)\n      </para>\n\n      <para>\n       For example, a uniqueness constraint violation might now report\n       <literal>Key (x)=(2) already exists</>.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Object Permissions</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add the ability to make mass permission changes across a whole\n       schema using the new <link\n       linkend=\"SQL-GRANT\"><command>GRANT</>/<command>REVOKE\n       IN SCHEMA</></link> clause (Petr Jelinek)\n      </para>\n\n      <para>\n       This simplifies management of object permissions\n       and makes it easier to utilize database roles for application\n       data security.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"SQL-ALTERDEFAULTPRIVILEGES\"><command>ALTER\n       DEFAULT PRIVILEGES</></link> command to control privileges\n       of objects created later (Petr Jelinek)\n      </para>\n\n      <para>\n       This greatly simplifies the assignment of object privileges in a\n       complex database application.  Default privileges can be set for\n       tables, views, sequences, and functions. Defaults may be assigned on a\n       per-schema basis, or database-wide.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add the ability to control large object (BLOB) permissions with\n       <command>GRANT</>/<command>REVOKE</> (KaiGai Kohei)\n      </para>\n\n      <para>\n       Formerly, any database user could read or modify any large object.\n       Read and write permissions can now be granted and revoked per\n       large object, and the ownership of large objects is tracked.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n  </sect3>\n\n  <sect3>\n   <title>Utility Operations</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Make <link linkend=\"SQL-LISTEN\"><command>LISTEN</></link>/<link\n      linkend=\"SQL-NOTIFY\"><command>NOTIFY</></link> store pending events\n      in a memory queue, rather than in a system table (Joachim\n      Wieland)\n     </para>\n\n     <para>\n      This substantially improves performance, while retaining the existing\n      features of transactional support and guaranteed delivery.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow <link linkend=\"SQL-NOTIFY\"><command>NOTIFY</></link>\n      to pass an optional <quote>payload</> string to listeners\n      (Joachim Wieland)\n     </para>\n\n     <para>\n      This greatly improves the usefulness of\n      <command>LISTEN</>/<command>NOTIFY</> as a\n      general-purpose event queue system.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow <link linkend=\"SQL-CLUSTER\"><command>CLUSTER</></link>\n      on all per-database system catalogs (Tom Lane)\n     </para>\n\n     <para>\n      Shared catalogs still cannot be clustered.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n   <sect4>\n    <title><link linkend=\"SQL-COPY\"><command>COPY</></link></title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Accept <literal>COPY ... CSV FORCE QUOTE *</>\n       (Itagaki Takahiro)\n      </para>\n\n      <para>\n       Now <literal>*</> can be used as shorthand for <quote>all columns</>\n       in the <literal>FORCE QUOTE</> clause.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add new <command>COPY</> syntax that allows options to be\n       specified inside parentheses (Robert Haas, Emmanuel Cecchet)\n      </para>\n\n      <para>\n       This allows greater flexibility for future <command>COPY</> options.\n       The old syntax is still supported, but only for pre-existing options.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title><link linkend=\"SQL-EXPLAIN\"><command>EXPLAIN</></link></title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Allow <command>EXPLAIN</> to output in <acronym>XML</>,\n       <acronym>JSON</>, or <acronym>YAML</> format (Robert Haas, Greg\n       Sabino Mullane)\n      </para>\n\n      <para>\n       The new output formats are easily machine-readable, supporting the\n       development of new tools for analysis of <command>EXPLAIN</> output.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add new <literal>BUFFERS</> option to report query\n       buffer usage during <command>EXPLAIN ANALYZE</> (Itagaki Takahiro)\n      </para>\n\n      <para>\n       This allows better query profiling for individual queries.\n       Buffer usage is no longer reported in the output for <link\n       linkend=\"runtime-config-statistics-monitor\">log_statement_stats</link>\n       and related settings.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add hash usage information to <command>EXPLAIN</> output (Robert\n       Haas)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add new <command>EXPLAIN</> syntax that allows options to be\n       specified inside parentheses (Robert Haas)\n      </para>\n\n      <para>\n       This allows greater flexibility for future <command>EXPLAIN</> options.\n       The old syntax is still supported, but only for pre-existing options.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title><link linkend=\"SQL-VACUUM\"><command>VACUUM</></link></title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Change <command>VACUUM FULL</> to rewrite the entire table and\n       rebuild its indexes, rather than moving individual rows around to\n       compact space (Itagaki Takahiro, Tom Lane)\n      </para>\n\n      <para>\n       The previous method was usually slower and caused index bloat.\n       Note that the new method will use more disk space transiently\n       during <command>VACUUM FULL</>; potentially as much as twice\n       the space normally occupied by the table and its indexes.\n      </para>\n\n     </listitem>\n\n     <listitem>\n      <para>\n       Add new <command>VACUUM</> syntax that allows options to be\n       specified inside parentheses (Itagaki Takahiro)\n      </para>\n\n      <para>\n       This allows greater flexibility for future <command>VACUUM</> options.\n       The old syntax is still supported, but only for pre-existing options.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Indexes</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Allow an index to be named automatically by omitting the index name in\n       <link linkend=\"SQL-CREATEINDEX\"><command>CREATE INDEX</></link>\n       (Tom Lane)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       By default, multicolumn indexes are now named after all their columns;\n       and index expression columns are now named based on their expressions\n       (Tom Lane)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Reindexing shared system catalogs is now fully transactional\n       and crash-safe (Tom Lane)\n      </para>\n\n      <para>\n       Formerly, reindexing a shared index was only allowed in standalone\n       mode, and a crash during the operation could leave the index in\n       worse condition than it was before.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>point_ops</> operator class for <acronym>GiST</>\n      (Teodor Sigaev)\n      </para>\n\n      <para>\n       This feature permits <acronym>GiST</> indexing of <type>point</>\n       columns.  The index can be used for several types of queries\n       such as <replaceable>point</> <literal>&lt;@</> <replaceable>polygon</>\n       (point is in polygon).  This should make many\n       <productname>PostGIS</> queries faster.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Use red-black binary trees for <acronym>GIN</> index creation\n       (Teodor Sigaev)\n      </para>\n\n      <para>\n       Red-black trees are self-balancing.  This avoids slowdowns in\n       cases where the input is in nonrandom order.\n      </para>\n\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n  </sect3>\n\n  <sect3>\n   <title>Data Types</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Allow <link linkend=\"datatype-binary\"><type>bytea</></link> values\n      to be written in hex notation (Peter Eisentraut)\n     </para>\n\n     <para>\n      The server parameter <link\n      linkend=\"guc-bytea-output\"><varname>bytea_output</></link> controls\n      whether hex or traditional format is used for <type>bytea</>\n      output.  Libpq's <function>PQescapeByteaConn()</> function automatically\n      uses the hex format when connected to <productname>PostgreSQL</> 9.0\n      or newer servers.  However, pre-9.0 libpq versions will not\n      correctly process hex format from newer servers.\n     </para>\n\n     <para>\n      The new hex format will be directly compatible with more applications\n      that use binary data, allowing them to store and retrieve it without\n      extra conversion.  It is also significantly faster to read and write\n      than the traditional format.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow server parameter <link\n      linkend=\"guc-extra-float-digits\">extra_float_digits</link>\n      to be increased to <literal>3</> (Tom Lane)\n     </para>\n\n     <para>\n      The previous maximum <varname>extra_float_digits</> setting was\n      <literal>2</>.  There are cases where 3 digits are needed to dump and\n      restore <type>float4</> values exactly.  <application>pg_dump</> will\n      now use the setting of 3 when dumping from a server that allows it.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Tighten input checking for <type>int2vector</> values (Caleb\n      Welton)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n   <sect4>\n    <title><link linkend=\"textsearch\">Full Text Search</link></title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add prefix support in <literal>synonym</> dictionaries\n       (Teodor Sigaev)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <firstterm>filtering</> dictionaries (Teodor Sigaev)\n      </para>\n\n      <para>\n       Filtering dictionaries allow tokens to be modified then passed to\n       subsequent dictionaries.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow underscores in email-address tokens (Teodor Sigaev)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Use more standards-compliant rules for parsing <acronym>URL</> tokens\n       (Tom Lane)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n  </sect3>\n\n  <sect3>\n   <title>Functions</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Allow function calls to supply parameter names and match them to named\n      parameters in the function definition (Pavel Stehule)\n     </para>\n\n     <para>\n      For example, if a function is defined to take parameters <literal>a</>\n      and <literal>b</>, it can be called with <literal>func(a := 7, b\n      := 12)</> or <literal>func(b := 12, a := 7)</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Support locale-specific <link\n      linkend=\"functions-posix-regexp\">regular expression</link>\n      processing with <acronym>UTF-8</> server encoding (Tom Lane)\n     </para>\n\n     <para>\n      Locale-specific regular expression functionality includes\n      case-insensitive matching and locale-specific character classes.\n      Previously, these features worked correctly for non-<acronym>ASCII</>\n      characters only if the database used a single-byte server encoding (such\n      as LATIN1).  They will still misbehave in multi-byte encodings other\n      than <acronym>UTF-8</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add support for scientific notation in <link\n      linkend=\"functions-formatting\"><function>to_char()</></link>\n      (<link linkend=\"functions-formatting-numeric-table\"><literal>EEEE</>\n      specification</link>)\n      (Pavel Stehule, Brendan Jurd)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <function>to_char()</> honor <link\n      linkend=\"functions-formatting-datetimemod-table\"><literal>FM</></link>\n      (fill mode) in <literal>Y</>, <literal>YY</>, and\n      <literal>YYY</> specifications (Bruce Momjian, Tom Lane)\n     </para>\n\n     <para>\n      It was already honored by <literal>YYYY</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>to_char()</> to output localized numeric and monetary\n      strings in the correct encoding on <productname>Windows</>\n      (Hiroshi Inoue, Itagaki Takahiro, Bruce Momjian)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Correct calculations of <link\n      linkend=\"functions-geometry-op-table\"><quote>overlaps</quote></link>\n      and <quote>contains</quote> operations for polygons (Teodor Sigaev)\n     </para>\n\n     <para>\n      The polygon <literal>&amp;&amp;</> (overlaps) operator formerly just\n      checked to see if the two polygons' bounding boxes overlapped.  It now\n      does a more correct check.  The polygon <literal>@&gt;</> and\n      <literal>&lt;@</> (contains/contained by) operators formerly checked\n      to see if one polygon's vertexes were all contained in the other;\n      this can wrongly report <quote>true</> for some non-convex polygons.\n      Now they check that all line segments of one polygon are contained in\n      the other.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n   <sect4>\n    <title>Aggregates</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Allow aggregate functions to use <link\n       linkend=\"syntax-aggregates\"><literal>ORDER BY</></link> (Andrew Gierth)\n      </para>\n\n      <para>\n       For example, this is now supported: <literal>array_agg(a ORDER BY\n       b)</>.  This is useful with aggregates for which the order of input\n       values is significant, and eliminates the need to use a nonstandard\n       subquery to determine the ordering.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Multi-argument aggregate functions can now use <literal>DISTINCT</>\n       (Andrew Gierth)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add the <link\n       linkend=\"functions-aggregate-table\"><function>string_agg()</></link>\n       aggregate function to combine values into a single\n       string (Pavel Stehule)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Aggregate functions that are called with <literal>DISTINCT</> are\n       now passed NULL values if the aggregate transition function is\n       not marked as <literal>STRICT</> (Andrew Gierth)\n      </para>\n\n      <para>\n       For example, <literal>agg(DISTINCT x)</> might pass a NULL <literal>x</>\n       value to <function>agg()</>.  This is more consistent with the behavior\n       in non-<literal>DISTINCT</> cases.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Bit Strings</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add <link\n       linkend=\"functions-binarystring-other\"><function>get_bit()</></link>\n       and <function>set_bit()</> functions for <type>bit</>\n       strings, mirroring those for <type>bytea</> (Leonardo\n       F)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Implement <link\n       linkend=\"functions-string-sql\"><function>OVERLAY()</></link>\n       (replace) for <type>bit</> strings and <type>bytea</>\n       (Leonardo F)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Object Information Functions</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add <link\n       linkend=\"functions-admin-dbsize\"><function>pg_table_size()</></link>\n       and <function>pg_indexes_size()</> to provide a more\n       user-friendly interface to the <function>pg_relation_size()</>\n       function (Bernd Helmle)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link\n       linkend=\"functions-info-access-table\"><function>has_sequence_privilege()</></link>\n       for sequence permission checking (Abhijit Menon-Sen)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Update the <link linkend=\"information-schema\">information_schema</link>\n       views to conform to SQL:2008\n       (Peter Eisentraut)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make the <literal>information_schema</> views correctly display maximum\n       octet lengths for <type>char</> and <type>varchar</> columns (Peter\n       Eisentraut)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Speed up <literal>information_schema</> privilege views\n       (Joachim Wieland)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Function and Trigger Creation</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Support execution of anonymous code blocks using the <link\n       linkend=\"SQL-DO\"><command>DO</></link> statement\n       (Petr Jelinek, Joshua Tolley, Hannu Valtonen)\n      </para>\n\n      <para>\n       This allows execution of server-side code without the need to create\n       and delete a temporary function definition.  Code can be executed in\n       any language for which the user has permissions to define a function.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Implement SQL-standard-compliant <link\n       linkend=\"SQL-CREATETRIGGER\">per-column triggers</link>\n       (Itagaki Takahiro)\n      </para>\n\n      <para>\n       Such triggers are fired only when the specified column(s) are affected\n       by the query, e.g. appear in an <command>UPDATE</>'s <literal>SET</>\n       list.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add the <literal>WHEN</> clause to <link\n       linkend=\"SQL-CREATETRIGGER\"><command>CREATE TRIGGER</></link>\n       to allow control over whether a trigger is fired (Itagaki\n       Takahiro)\n      </para>\n\n      <para>\n       While the same type of check can always be performed inside the\n       trigger, doing it in an external <literal>WHEN</> clause can have\n       performance benefits.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n  </sect3>\n\n  <sect3>\n   <title>Server-Side Languages</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Add the <literal>OR REPLACE</> clause to <link\n      linkend=\"SQL-CREATELANGUAGE\"><command>CREATE LANGUAGE</></link>\n      (Tom Lane)\n     </para>\n\n     <para>\n      This is helpful to optionally install a language if it does not\n      already exist, and is particularly helpful now that PL/pgSQL is\n      installed by default.\n     </para>\n    </listitem>\n\n    </itemizedlist>\n\n    <sect4>\n    <title><link linkend=\"plpgsql\">PL/pgSQL</link> Server-Side\n    Language</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Install PL/pgSQL by default (Bruce Momjian)\n      </para>\n\n      <para>\n       The language can still be removed from a particular database if the\n       administrator has security or performance concerns about making it\n       available.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve handling of cases where PL/pgSQL variable names conflict with\n       identifiers used in queries within a function\n       (Tom Lane)\n      </para>\n\n      <para>\n       The default behavior is now to throw an error when there is a conflict,\n       so as to avoid surprising behaviors.  This can be modified, via the\n       configuration parameter <link\n       linkend=\"plpgsql-var-subst\"><varname>plpgsql.variable_conflict</></link>\n       or the per-function option <literal>#variable_conflict</>, to allow\n       either the variable or the query-supplied column to be used.  In any\n       case PL/pgSQL will no longer attempt to substitute variables in places\n       where they would not be syntactically valid.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make PL/pgSQL use the main lexer, rather than its own version\n       (Tom Lane)\n      </para>\n\n      <para>\n       This ensures accurate tracking of the main system's behavior for details\n       such as string escaping.  Some user-visible details, such as the set\n       of keywords considered reserved in PL/pgSQL, have changed in\n       consequence.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Avoid throwing an unnecessary error for an invalid record reference\n       (Tom Lane)\n      </para>\n\n      <para>\n       An error is now thrown only if the reference is actually fetched,\n       rather than whenever the enclosing expression is reached.  For\n       example, many people have tried to do this in triggers:\n<programlisting>\nif TG_OP = 'INSERT' and NEW.col1 = ... then\n</programlisting>\n       This will now actually work as expected.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve PL/pgSQL's ability to handle row types with dropped columns\n       (Pavel Stehule)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow input parameters to be assigned values within\n       PL/pgSQL functions (Steve Prentice)\n      </para>\n\n      <para>\n       Formerly, input parameters were treated as being declared\n       <literal>CONST</>, so the function's code could not change their\n       values.  This restriction has been removed to simplify\n       porting of functions from other DBMSes that do not impose the\n       equivalent restriction.  An input parameter now acts like a local\n       variable initialized to the passed-in value.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve error location reporting in PL/pgSQL (Tom Lane)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <replaceable>count</> and <literal>ALL</> options to <command>MOVE\n       FORWARD</>/<literal>BACKWARD</> in PL/pgSQL (Pavel Stehule)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow PL/pgSQL's <literal>WHERE CURRENT OF</> to use a cursor\n       variable (Tom Lane)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow PL/pgSQL's <command>OPEN <replaceable>cursor</> FOR EXECUTE</> to\n       use parameters (Pavel Stehule, Itagaki Takahiro)\n      </para>\n\n      <para>\n       This is accomplished with a new <literal>USING</> clause.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title><link linkend=\"plperl\">PL/Perl</link> Server-Side Language</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add new PL/Perl functions: <link\n       linkend=\"plperl-utility-functions\"><function>quote_literal()</></link>,\n       <function>quote_nullable()</>, <function>quote_ident()</>,\n       <function>encode_bytea()</>, <function>decode_bytea()</>,\n       <function>looks_like_number()</>,\n       <function>encode_array_literal()</>,\n       <function>encode_array_constructor()</> (Tim Bunce)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add server parameter <link\n       linkend=\"guc-plperl-on-init\"><varname>plperl.on_init</></link> to\n       specify a PL/Perl initialization function (Tim\n       Bunce)\n      </para>\n\n      <para>\n       <link\n       linkend=\"guc-plperl-on-plperl-init\"><varname>plperl.on_plperl_init</></link>\n       and <link\n       linkend=\"guc-plperl-on-plperl-init\"><varname>plperl.on_plperlu_init</></link>\n       are also available for initialization that is specific to the trusted\n       or untrusted language respectively.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support <command>END</> blocks in PL/Perl (Tim Bunce)\n      </para>\n\n      <para>\n       <command>END</> blocks do not currently allow database access.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <command>use strict</> in PL/Perl (Tim Bunce)\n      </para>\n\n      <para>\n       Perl <literal>strict</> checks can also be globally enabled with the\n       new server parameter <link\n       linkend=\"guc-plperl-use-strict\"><varname>plperl.use_strict</></link>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <command>require</> in PL/Perl (Tim Bunce)\n      </para>\n\n      <para>\n       This basically tests to see if the module is loaded, and if not,\n       generates an error.  It will not allow loading of modules that\n       the administrator has not preloaded via the initialization parameters.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <command>use feature</> in PL/Perl if Perl version 5.10 or\n       later is used (Tim Bunce)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Verify that PL/Perl return values are valid in the server encoding\n       (Andrew Dunstan)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title><link linkend=\"plpython\">PL/Python</link> Server-Side Language</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add Unicode support in PL/Python (Peter Eisentraut)\n      </para>\n\n      <para>\n       Strings are automatically converted from/to the server encoding as\n       necessary.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve <type>bytea</> support in PL/Python (Caleb Welton)\n      </para>\n\n      <para>\n       <type>Bytea</> values passed into PL/Python are now represented as\n       binary, rather than the PostgreSQL <type>bytea</> text format.\n       <type>Bytea</> values containing null bytes are now also output\n       properly from PL/Python.  Passing of boolean, integer, and float\n       values was also improved.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support <link linkend=\"plpython-arrays\">arrays</link> as parameters and\n       return values in PL/Python (Peter Eisentraut)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve mapping of SQL domains to Python types (Peter Eisentraut)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <application>Python</> 3 support to PL/Python (Peter Eisentraut)\n      </para>\n\n      <para>\n       The new server-side language is called <link\n       linkend=\"plpython-python23\"><literal>plpython3u</></link>.  This\n       cannot be used in the same session with the\n       <application>Python</> 2 server-side language.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve error location and exception reporting in PL/Python (Peter Eisentraut)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n  </sect3>\n\n  <sect3>\n   <title>Client Applications</title>\n\n   <itemizedlist>\n\n    <listitem>\n    <para>\n     Add an <option>--analyze-only</> option to <link\n     linkend=\"APP-VACUUMDB\"><command>vacuumdb</></link>, to analyze without\n     vacuuming (Bruce Momjian)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n   <sect4>\n    <title><link linkend=\"APP-PSQL\"><application>psql</></link></title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add support for quoting/escaping the values of <application>psql</>\n       <link linkend=\"APP-PSQL-variables\">variables</link> as SQL strings or\n       identifiers (Pavel Stehule, Robert Haas)\n      </para>\n\n      <para>\n       For example, <literal>:'var'</> will produce the value of\n       <literal>var</> quoted and properly escaped as a literal string, while\n       <literal>:\"var\"</> will produce its value quoted and escaped as an\n       identifier.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Ignore a leading UTF-8-encoded Unicode byte-order marker in\n       script files read by <application>psql</> (Itagaki Takahiro)\n      </para>\n\n      <para>\n       This is enabled when the client encoding is <acronym>UTF-8</>.\n       It improves compatibility with certain editors, mostly on Windows,\n       that insist on inserting such markers.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix <command>psql --file -</> to properly honor <link\n       linkend=\"R1-APP-PSQL-3\"><option>--single-transaction</></link>\n       (Bruce Momjian)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Avoid overwriting of <application>psql</>'s command-line history when\n       two <application>psql</> sessions are run concurrently (Tom Lane)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve <application>psql</>'s tab completion support (Itagaki\n       Takahiro)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Show <literal>\\timing</> output when it is enabled, regardless of\n       <quote>quiet</> mode (Peter Eisentraut)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n    <sect5>\n    <title><application>psql</> Display</title>\n\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Improve display of wrapped columns in <application>psql</> (Roger\n        Leigh)\n       </para>\n\n       <para>\n        This behavior is now the default.\n        The previous formatting is available by using <command>\\pset linestyle\n        old-ascii</>.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow <application>psql</> to use fancy Unicode line-drawing\n        characters via <command>\\pset linestyle unicode</> (Roger Leigh)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect5>\n\n    <sect5>\n     <title><application>psql</> <link\n     linkend=\"APP-PSQL-meta-commands\"><command>\\d</></link>\n     Commands</title>\n\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Make <command>\\d</> show child tables that inherit from the specified\n        parent (Damien Clochard)\n       </para>\n\n       <para>\n        <command>\\d</> shows only the number of child tables, while\n        <command>\\d+</> shows the names of all child tables.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Show definitions of index columns in <command>\\d index_name</>\n        (Khee Chin)\n       </para>\n\n       <para>\n        The definition is useful for expression indexes.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Show a view's defining query only in\n        <command>\\d+</>, not in <command>\\d</> (Peter Eisentraut)\n       </para>\n\n       <para>\n        Always including the query was deemed overly verbose.\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect5>\n   </sect4>\n\n   <sect4>\n    <title><link linkend=\"APP-PGDUMP\"><application>pg_dump</></link></title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Make <application>pg_dump</>/<application>pg_restore</>\n       <link linkend=\"pg-dump-options\"><option>--clean</></link>\n       also remove large objects (Itagaki Takahiro)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix <application>pg_dump</> to properly dump large objects when\n       <literal>standard_conforming_strings</> is enabled (Tom Lane)\n      </para>\n\n      <para>\n       The previous coding could fail when dumping to an archive file\n       and then generating script output from <application>pg_restore</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <application>pg_restore</> now emits large-object data in hex format\n       when generating script output (Tom Lane)\n      </para>\n\n      <para>\n       This could cause compatibility problems if the script is then\n       loaded into a pre-9.0 server.  To work around that, restore\n       directly to the server, instead.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <application>pg_dump</> to dump comments attached to columns\n       of composite types (Taro Minowa (Higepon))\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <application>pg_dump</> <link\n       linkend=\"pg-dump-options\"><option>--verbose</></link>\n       output the <application>pg_dump</> and server versions\n       in text output mode (Jim Cox, Tom Lane)\n      </para>\n\n      <para>\n       These were already provided in custom output mode.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <application>pg_restore</> now complains if any command-line arguments\n       remain after the switches and optional file name (Tom Lane)\n      </para>\n\n      <para>\n       Previously, it silently ignored any such arguments.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title><link\n    linkend=\"app-pg-ctl\"><application>pg_ctl</></link></title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Allow <application>pg_ctl</> to be used safely to start the\n       <application>postmaster</> during a system reboot (Tom Lane)\n      </para>\n\n      <para>\n       Previously, <application>pg_ctl</>'s parent process could have been\n       mistakenly identified as a running <application>postmaster</> based on\n       a stale <application>postmaster</> lock file, resulting in a transient\n       failure to start the database.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Give <application>pg_ctl</> the ability to initialize the database\n       (by invoking <application>initdb</>) (Zdenek Kotala)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n  </sect3>\n\n  <sect3>\n   <title><application>Development Tools</></title>\n\n   <sect4>\n    <title><link linkend=\"libpq\"><application>libpq</></link></title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add new <application>libpq</> functions\n       <link\n       linkend=\"libpq-connect\"><function>PQconnectdbParams()</></link>\n       and <function>PQconnectStartParams()</> (Guillaume\n       Lelarge)\n      </para>\n\n      <para>\n       These functions are similar to <function>PQconnectdb()</> and\n       <function>PQconnectStart()</> except that they accept a null-terminated\n       array of connection options, rather than requiring all options to\n       be provided in a single string.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <application>libpq</> functions <link\n       linkend=\"libpq-exec-escape-string\"><function>PQescapeLiteral()</></link>\n       and <function>PQescapeIdentifier()</> (Robert Haas)\n      </para>\n\n      <para>\n       These functions return appropriately quoted and escaped SQL string\n       literals and identifiers. The caller is not required to pre-allocate\n       the string result, as is required by <function>PQescapeStringConn()</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add support for a per-user service file (<link\n       linkend=\"libpq-pgservice\"><filename>.pg_service.conf</></link>),\n       which is checked before the site-wide service file\n       (Peter Eisentraut)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Properly report an error if the specified <application>libpq</> service\n       cannot be found (Peter Eisentraut)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"libpq-keepalives\">TCP keepalive settings</link>\n       in libpq (Tollef Fog Heen, Fujii Masao, Robert Haas)\n      </para>\n\n      <para>\n       Keepalive settings were already supported on the server end of\n       TCP connections.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Avoid extra system calls to block and unblock <literal>SIGPIPE</>\n       in <application>libpq</>, on platforms that offer alternative methods\n       (Jeremy Kerr)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       When a <link linkend=\"libpq-pgpass\"><filename>.pgpass</></link>-supplied\n       password fails, mention where the password came from in the error\n       message (Bruce Momjian)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Load all SSL certificates given in the client certificate file\n       (Tom Lane)\n      </para>\n\n      <para>\n       This improves support for indirectly-signed SSL certificates.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title><link linkend=\"ecpg\"><application>ecpg</></link></title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"ecpg-descriptors\"><acronym>SQLDA</></link>\n       (SQL Descriptor Area) support to <application>ecpg</>\n       (Boszormenyi Zoltan)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add the <link linkend=\"ecpg-descriptors\"><command>DESCRIBE</>\n       [ <literal>OUTPUT</> ]</link> statement to <application>ecpg</>\n       (Boszormenyi Zoltan)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add an <link linkend=\"ecpg-library\">ECPGtransactionStatus</link>\n       function to return the current transaction status (Bernd Helmle)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add the <literal>string</> data type in <application>ecpg</>\n       Informix-compatibility mode (Boszormenyi Zoltan)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <application>ecpg</> to use <literal>new</> and <literal>old</>\n       variable names without restriction (Michael Meskes)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <application>ecpg</> to use variable names in\n       <function>free()</> (Michael Meskes)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <function>ecpg_dynamic_type()</> return zero for non-SQL3 data\n       types (Michael Meskes)\n      </para>\n\n      <para>\n       Previously it returned the negative of the data type OID.\n       This could be confused with valid type OIDs, however.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support <type>long long</> types on platforms that already have 64-bit\n       <type>long</> (Michael Meskes)\n      </para>\n     </listitem>\n\n     </itemizedlist>\n\n     <sect5>\n      <title><application>ecpg</> Cursors</title>\n\n      <itemizedlist>\n\n      <listitem>\n       <para>\n        Add out-of-scope cursor support in <application>ecpg</>'s native mode\n        (Boszormenyi Zoltan)\n       </para>\n\n       <para>\n        This allows <command>DECLARE</> to use variables that are not in\n        scope when <command>OPEN</> is called. This facility already existed\n        in <application>ecpg</>'s Informix-compatibility mode.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow dynamic cursor names in <application>ecpg</> (Boszormenyi Zoltan)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow <application>ecpg</> to use noise words <literal>FROM</> and\n        <literal>IN</> in <command>FETCH</> and <command>MOVE</> (Boszormenyi\n        Zoltan)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect5>\n\n   </sect4>\n\n  </sect3>\n\n  <sect3>\n   <title>Build Options</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Enable client thread safety by default (Bruce Momjian)\n     </para>\n\n     <para>\n      The thread-safety option can be disabled with <link\n      linkend=\"configure\"><literal>configure</></link>\n      <option>--disable-thread-safety</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add support for controlling the Linux out-of-memory killer\n      (Alex Hunsaker, Tom Lane)\n     </para>\n\n     <para>\n      Now that <filename>/proc/self/oom_adj</> allows disabling\n      of the <productname>Linux</> out-of-memory (<acronym>OOM</>)\n      killer, it's recommendable to disable OOM kills for the postmaster.\n      It may then be desirable to re-enable OOM kills for the postmaster's\n      child processes.  The new compile-time option <link\n      linkend=\"linux-memory-overcommit\"><literal>LINUX_OOM_ADJ</></link>\n      allows the killer to be reactivated for child processes.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n   <sect4>\n    <title>Makefiles</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       New <filename>Makefile</> targets <link\n       linkend=\"build\"><literal>world</></link>,\n       <literal>install-world</>, and <literal>installcheck-world</>\n       (Andrew Dunstan)\n      </para>\n\n      <para>\n       These are similar to the existing <literal>all</>, <literal>install</>,\n       and <literal>installcheck</> targets, but they also build the\n       <acronym>HTML</> documentation, build and test <filename>contrib</>,\n       and test server-side languages and <application>ecpg</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add data and documentation installation location control to\n       <acronym>PGXS</> Makefiles (Mark Cave-Ayland)\n      </para>\n     </listitem>\n\n    <listitem>\n     <para>\n      Add Makefile rules to build the <productname>PostgreSQL</> documentation\n      as a single <acronym>HTML</> file or as a single plain-text file\n      (Peter Eisentraut, Bruce Momjian)\n     </para>\n    </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Windows</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Support compiling on <link\n       linkend=\"install-windows\">64-bit\n       <productname>Windows</></link> and running in 64-bit\n       mode (Tsutomu Yamada, Magnus Hagander)\n      </para>\n\n      <para>\n       This allows for large shared memory sizes on <productname>Windows</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support server builds using <link\n       linkend=\"install-windows-full\"><productname>Visual Studio\n       2008</></link> (Magnus Hagander)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n  </sect3>\n\n  <sect3>\n   <title>Source Code</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Distribute prebuilt documentation in a subdirectory tree, rather than\n      as tar archive files inside the distribution tarball\n      (Peter Eisentraut)\n     </para>\n\n     <para>\n      For example, the prebuilt <acronym>HTML</> documentation is now in\n      <filename>doc/src/sgml/html/</>; the manual pages are packaged\n      similarly.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make the server's lexer reentrant (Tom Lane)\n     </para>\n\n     <para>\n      This was needed for use of the lexer by PL/pgSQL.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve speed of memory allocation (Tom Lane, Greg Stark)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      User-defined constraint triggers now have entries in\n      <structname>pg_constraint</> as well as <structname>pg_trigger</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      Because of this change,\n      <structname>pg_constraint</>.<structfield>pgconstrname</> is now\n      redundant and has been removed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add system catalog columns\n      <structname>pg_constraint</>.<structfield>conindid</> and\n      <structname>pg_trigger</>.<structfield>tgconstrindid</>\n      to better document the use of indexes for constraint\n      enforcement (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow multiple conditions to be communicated to backends using a single\n      operating system signal (Fujii Masao)\n     </para>\n\n     <para>\n      This allows new features to be added without a platform-specific\n      constraint on the number of signal conditions.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve source code test coverage, including <filename>contrib</>, PL/Python,\n      and PL/Perl (Peter Eisentraut, Andrew Dunstan)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Remove the use of flat files for system table bootstrapping\n      (Tom Lane, Alvaro Herrera)\n     </para>\n\n     <para>\n      This improves performance when using many roles or\n      databases, and eliminates some possible failure conditions.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Automatically generate the initial contents of\n      <structname>pg_attribute</> for <quote>bootstrapped</> catalogs\n      (John Naylor)\n     </para>\n\n     <para>\n      This greatly simplifies changes to these catalogs.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Split the processing of\n      <command>INSERT</>/<command>UPDATE</>/<command>DELETE</> operations out\n      of <filename>execMain.c</> (Marko Tiikkaja)\n     </para>\n\n     <para>\n      Updates are now executed in a separate ModifyTable node.  This change is\n      necessary infrastructure for future improvements.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Simplify translation of <application>psql</>'s SQL help text\n      (Peter Eisentraut)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Reduce the lengths of some file names so that all file paths in the\n      distribution tarball are less than 100 characters (Tom Lane)\n     </para>\n\n     <para>\n      Some decompression programs have problems with longer file paths.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add a new <link\n      linkend=\"errcodes-table\"><literal>ERRCODE_INVALID_PASSWORD</></link>\n      <literal>SQLSTATE</> error code (Bruce Momjian)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      With authors' permissions, remove the few remaining personal source code\n      copyright notices (Bruce Momjian)\n     </para>\n\n     <para>\n      The personal copyright notices were insignificant but the community\n      occasionally had to answer questions about them.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add new documentation <link linkend=\"non-durability\">section</link>\n      about running <productname>PostgreSQL</> in non-durable mode\n      to improve performance (Bruce Momjian)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Restructure the <acronym>HTML</> documentation\n      <filename>Makefile</> rules to make their dependency checks work\n      correctly, avoiding unnecessary rebuilds (Peter Eisentraut)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use <productname>DocBook</> <acronym>XSL</> stylesheets for man page\n      building, rather than <productname>Docbook2X</> (Peter Eisentraut)\n     </para>\n\n     <para>\n      This changes the set of tools needed to build the man pages.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve PL/Perl code structure (Tim Bunce)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve error context reports in PL/Perl (Alexey Klyukin)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n   <sect4>\n    <title>New Build Requirements</title>\n\n     <para>\n      Note that these requirements do not apply when building from a\n      distribution tarball, since tarballs include the files that these\n      programs are used to build.\n     </para>\n\n    <itemizedlist>\n     <listitem>\n      <para>\n       Require <application>Autoconf</> 2.63 to build\n       <application>configure</> (Peter Eisentraut)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Require <application>Flex</> 2.5.31 or later to build\n       from a <acronym>CVS</> checkout (Tom Lane)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Require <application>Perl</> version 5.8 or later to build\n       from a <acronym>CVS</> checkout (John Naylor, Andrew Dunstan)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Portability</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Use a more modern <acronym>API</> for <application>Bonjour</> (Tom Lane)\n      </para>\n\n      <para>\n       Bonjour support now requires <productname>macOS</> 10.3 or later.\n       The older API has been deprecated by Apple.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add spinlock support for the <productname>SuperH</>\n       architecture (Nobuhiro Iwamatsu)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow non-<application>GCC</> compilers to use inline functions if\n       they support them (Kurt Harriman)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove support for platforms that don't have a working 64-bit\n       integer data type (Tom Lane)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Restructure use of <literal>LDFLAGS</> to be more consistent\n       across platforms (Tom Lane)\n      </para>\n\n      <para>\n       <literal>LDFLAGS</> is now used for linking both executables and shared\n       libraries, and we add on <literal>LDFLAGS_EX</> when linking\n       executables, or <literal>LDFLAGS_SL</> when linking shared libraries.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Server Programming</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Make backend header files safe to include in <productname>C++</>\n       (Kurt Harriman, Peter Eisentraut)\n      </para>\n\n      <para>\n       These changes remove keyword conflicts that previously made\n       <productname>C++</> usage difficult in backend code.  However, there\n       are still other complexities when using <productname>C++</> for backend\n       functions. <literal>extern \"C\" { }</> is still necessary in\n       appropriate places, and memory management and error handling are\n       still problematic.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link\n       linkend=\"xaggr\"><function>AggCheckCallContext()</></link>\n       for use in detecting if a <productname>C</> function is\n       being called as an aggregate (Hitoshi Harada)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Change calling convention for <function>SearchSysCache()</> and related\n       functions to avoid hard-wiring the maximum number of cache keys\n       (Robert Haas)\n      </para>\n\n      <para>\n       Existing calls will still work for the moment, but can be expected to\n       break in 9.1 or later if not converted to the new style.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Require calls of <function>fastgetattr()</> and\n       <function>heap_getattr()</> backend macros to provide a non-NULL fourth\n       argument (Robert Haas)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Custom typanalyze functions should no longer rely on\n       <structname>VacAttrStats</>.<structfield>attr</> to determine the type\n       of data they will be passed (Tom Lane)\n      </para>\n\n      <para>\n       This was changed to allow collection of statistics on index columns\n       for which the storage type is different from the underlying column\n       data type.  There are new fields that tell the actual datatype being\n       analyzed.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Server Hooks</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add parser hooks for processing ColumnRef and ParamRef nodes\n       (Tom Lane)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add a ProcessUtility hook so loadable modules can control utility\n       commands (Itagaki Takahiro)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n   <sect4>\n    <title>Binary Upgrade Support</title>\n\n    <itemizedlist>\n\n    <listitem>\n     <para>\n      Add <link linkend=\"pgupgrade\"><filename>contrib/pg_upgrade</></link>\n      to support in-place upgrades (Bruce Momjian)\n     </para>\n\n     <para>\n      This avoids the requirement of dumping/reloading the database when\n      upgrading to a new major release of PostgreSQL, thus reducing downtime\n      by orders of magnitude. It supports upgrades to 9.0\n      from PostgreSQL 8.3 and 8.4.\n     </para>\n    </listitem>\n\n     <listitem>\n      <para>\n       Add support for preserving relation <link\n       linkend=\"catalog-pg-class\"><structname>relfilenode</></link> values\n       during binary upgrades (Bruce Momjian)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add support for preserving <structname>pg_type</>\n       and <structname>pg_enum</> OIDs during binary upgrades\n       (Bruce Momjian)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Move data files within tablespaces into\n       <productname>PostgreSQL</>-version-specific subdirectories\n       (Bruce Momjian)\n      </para>\n\n      <para>\n       This simplifies binary upgrades.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect4>\n\n  </sect3>\n\n  <sect3>\n   <title>Contrib</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Add multithreading option (<option>-j</>) to <link\n      linkend=\"pgbench\"><filename>contrib/pgbench</></link>\n      (Itagaki Takahiro)\n     </para>\n\n     <para>\n      This allows multiple <acronym>CPU</>s to be used by pgbench,\n      reducing the risk of pgbench itself becoming the test bottleneck.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add <command>\\shell</> and <command>\\setshell</> meta\n      commands to <link\n      linkend=\"pgbench\"><filename>contrib/pgbench</></link>\n      (Michael Paquier)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      New features for <link\n      linkend=\"dict-xsyn\"><filename>contrib/dict_xsyn</></link>\n      (Sergey Karpov)\n     </para>\n\n     <para>\n      The new options are <literal>matchorig</>, <literal>matchsynonyms</>,\n      and <literal>keepsynonyms</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add full text dictionary <link\n      linkend=\"unaccent\"><filename>contrib/unaccent</></link>\n      (Teodor Sigaev)\n     </para>\n\n     <para>\n      This filtering dictionary removes accents from letters, which\n      makes full-text searches over multiple languages much easier.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add <link\n      linkend=\"CONTRIB-DBLINK-GET-NOTIFY\"><function>dblink_get_notify()</></link>\n      to <filename>contrib/dblink</> (Marcus Kempe)\n     </para>\n\n     <para>\n      This allows asynchronous notifications in <productname>dblink</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <filename>contrib/dblink</>'s handling of dropped columns\n      (Tom Lane)\n     </para>\n\n     <para>\n      This affects <link\n      linkend=\"CONTRIB-DBLINK-BUILD-SQL-INSERT\"><function>dblink_build_sql_insert()</></link>\n      and related functions.  These functions now number columns according\n      to logical not physical column numbers.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Greatly increase <link\n      linkend=\"hstore\"><filename>contrib/hstore</></link>'s data\n      length limit, and add B-tree and hash support so <literal>GROUP\n      BY</> and <literal>DISTINCT</> operations are possible on\n      <type>hstore</> columns (Andrew Gierth)\n     </para>\n\n     <para>\n      New functions and operators were also added.  These improvements\n      make <type>hstore</> a full-function key-value store embedded in\n      <productname>PostgreSQL</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add <link\n      linkend=\"passwordcheck\"><filename>contrib/passwordcheck</></link>\n      to support site-specific password strength policies (Laurenz\n      Albe)\n     </para>\n\n     <para>\n      The source code of this module should be modified to implement\n      site-specific password policies.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add <link\n      linkend=\"pgarchivecleanup\"><filename>contrib/pg_archivecleanup</></link>\n      tool (Simon Riggs)\n     </para>\n\n     <para>\n      This is designed to be used in the\n      <literal>archive_cleanup_command</literal>\n      server parameter, to remove no-longer-needed archive files.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add query text to <link\n      linkend=\"auto-explain\"><filename>contrib/auto_explain</></link>\n      output (Andrew Dunstan)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add buffer access counters to <link\n      linkend=\"pgstatstatements\"><filename>contrib/pg_stat_statements</></link>\n      (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update <link\n      linkend=\"server-start\"><filename>contrib/start-scripts/linux</></link>\n      to use <filename>/proc/self/oom_adj</> to disable the\n      <link linkend=\"linux-memory-overcommit\"><productname>Linux</>\n      out-of-memory</link> (<acronym>OOM</>) killer (Alex\n      Hunsaker, Tom Lane)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect3>\n </sect2>\n</sect1>\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/doc/src/sgml/release-8.4.sgml": "<!-- doc/src/sgml/release-8.4.sgml -->\n<!-- See header comment in release.sgml about typical markup -->\n\n <sect1 id=\"release-8-4-22\">\n  <title>Release 8.4.22</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2014-07-24</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.21.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <para>\n   This is expected to be the last <productname>PostgreSQL</> release\n   in the 8.4.X series.  Users are encouraged to update to a newer\n   release branch soon.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.22</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n   </para>\n\n   <para>\n    However, this release corrects an index corruption problem in some GiST\n    indexes.  See the first changelog entry below to find out whether your\n    installation has been affected and what steps you should take if so.\n   </para>\n\n   <para>\n    Also, if you are upgrading from a version earlier than 8.4.19,\n    see <xref linkend=\"release-8-4-19\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Correctly initialize padding bytes in <filename>contrib/btree_gist</>\n      indexes on <type>bit</> columns (Heikki Linnakangas)\n     </para>\n\n     <para>\n      This error could result in incorrect query results due to values that\n      should compare equal not being seen as equal.\n      Users with GiST indexes on <type>bit</> or <type>bit varying</>\n      columns should <command>REINDEX</> those indexes after installing this\n      update.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Protect against torn pages when deleting GIN list pages (Heikki\n      Linnakangas)\n     </para>\n\n     <para>\n      This fix prevents possible index corruption if a system crash occurs\n      while the page update is being written to disk.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possibly-incorrect cache invalidation during nested calls\n      to <function>ReceiveSharedInvalidMessages</> (Andres Freund)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't assume a subquery's output is unique if there's a set-returning\n      function in its targetlist (David Rowley)\n     </para>\n\n     <para>\n      This oversight could lead to misoptimization of constructs\n      like <literal>WHERE x IN (SELECT y, generate_series(1,10) FROM t GROUP\n      BY y)</literal>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix failure to detoast fields in composite elements of structured\n      types (Tom Lane)\n     </para>\n\n     <para>\n      This corrects cases where TOAST pointers could be copied into other\n      tables without being dereferenced.  If the original data is later\n      deleted, it would lead to errors like <quote>missing chunk number 0\n      for toast value ...</> when the now-dangling pointer is used.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <quote>record type has not been registered</> failures with\n      whole-row references to the output of Append plan nodes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash when invoking a user-defined function while\n      rewinding a cursor (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix query-lifespan memory leak while evaluating the arguments for a\n      function in <literal>FROM</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix session-lifespan memory leaks in regular-expression processing\n      (Tom Lane, Arthur O'Dwyer, Greg Stark)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix data encoding error in <filename>hungarian.stop</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix liveness checks for rows that were inserted in the current\n      transaction and then deleted by a now-rolled-back subtransaction\n      (Andres Freund)\n     </para>\n\n     <para>\n      This could cause problems (at least spurious warnings, and at worst an\n      infinite loop) if <command>CREATE INDEX</> or <command>CLUSTER</> were\n      done later in the same transaction.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Clear <structname>pg_stat_activity</>.<structfield>xact_start</>\n      during <command>PREPARE TRANSACTION</> (Andres Freund)\n     </para>\n\n     <para>\n      After the <command>PREPARE</>, the originating session is no longer in\n      a transaction, so it should not continue to display a transaction\n      start time.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>REASSIGN OWNED</> to not fail for text search objects\n      (&Aacute;lvaro Herrera)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Block signals during postmaster startup (Tom Lane)\n     </para>\n\n     <para>\n      This ensures that the postmaster will properly clean up after itself\n      if, for example, it receives <systemitem>SIGINT</> while still\n      starting up.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Secure Unix-domain sockets of temporary postmasters started during\n      <literal>make check</> (Noah Misch)\n     </para>\n\n     <para>\n      Any local user able to access the socket file could connect as the\n      server's bootstrap superuser, then proceed to execute arbitrary code as\n      the operating-system user running the test, as we previously noted in\n      CVE-2014-0067.  This change defends against that risk by placing the\n      server's socket in a temporary, mode 0700 subdirectory\n      of <filename>/tmp</>.  The hazard remains however on platforms where\n      Unix sockets are not supported, notably Windows, because then the\n      temporary postmaster must accept local TCP connections.\n     </para>\n\n     <para>\n      A useful side effect of this change is to simplify\n      <literal>make check</> testing in builds that\n      override <literal>DEFAULT_PGSOCKET_DIR</>.  Popular non-default values\n      like <filename>/var/run/postgresql</> are often not writable by the\n      build user, requiring workarounds that will no longer be necessary.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      On Windows, allow new sessions to absorb values of PGC_BACKEND\n      parameters (such as <xref linkend=\"guc-log-connections\">) from the\n      configuration file (Amit Kapila)\n     </para>\n\n     <para>\n      Previously, if such a parameter were changed in the file post-startup,\n      the change would have no effect.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Properly quote executable path names on Windows (Nikhil Deshpande)\n     </para>\n\n     <para>\n      This oversight could cause <application>initdb</>\n      and <application>pg_upgrade</> to fail on Windows, if the installation\n      path contained both spaces and <literal>@</> signs.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix linking of <application>libpython</> on macOS (Tom Lane)\n     </para>\n\n     <para>\n      The method we previously used can fail with the Python library\n      supplied by Xcode 5.0 and later.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid buffer bloat in <application>libpq</> when the server\n      consistently sends data faster than the client can absorb it\n      (Shin-ichi Morita, Tom Lane)\n     </para>\n\n     <para>\n      <application>libpq</> could be coerced into enlarging its input buffer\n      until it runs out of memory (which would be reported misleadingly\n      as <quote>lost synchronization with server</>).  Under ordinary\n      circumstances it's quite far-fetched that data could be continuously\n      transmitted more quickly than the <function>recv()</> loop can\n      absorb it, but this has been observed when the client is artificially\n      slowed by scheduler constraints.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that LDAP lookup attempts in <application>libpq</> time out as\n      intended (Laurenz Albe)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</>'s processing of old-style large object\n      comments (Tom Lane)\n     </para>\n\n     <para>\n      A direct-to-database restore from an archive file generated by a\n      pre-9.0 version of <application>pg_dump</> would usually fail if the\n      archive contained more than a few comments for large objects.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <filename>contrib/pgcrypto</> functions, ensure sensitive\n      information is cleared from stack variables before returning\n      (Marko Kreen)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <filename>contrib/uuid-ossp</>, cache the state of the OSSP UUID\n      library across calls (Tom Lane)\n     </para>\n\n     <para>\n      This improves the efficiency of UUID generation and reduces the amount\n      of entropy drawn from <filename>/dev/urandom</>, on platforms that\n      have that.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2014e\n      for DST law changes in Crimea, Egypt, and Morocco.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-21\">\n  <title>Release 8.4.21</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2014-03-20</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.20.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <para>\n   The <productname>PostgreSQL</> community will stop releasing updates\n   for the 8.4.X release series in July 2014.\n   Users are encouraged to update to a newer release branch soon.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.21</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 8.4.19,\n    see <xref linkend=\"release-8-4-19\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Restore GIN metapages unconditionally to avoid torn-page risk\n      (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Although this oversight could theoretically result in a corrupted\n      index, it is unlikely to have caused any problems in practice, since\n      the active part of a GIN metapage is smaller than a standard 512-byte\n      disk sector.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow regular-expression operators to be terminated early by query\n      cancel requests (Tom Lane)\n     </para>\n\n     <para>\n      This prevents scenarios wherein a pathological regular expression\n      could lock up a server process uninterruptibly for a long time.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Remove incorrect code that tried to allow <literal>OVERLAPS</> with\n      single-element row arguments (Joshua Yanovski)\n     </para>\n\n     <para>\n      This code never worked correctly, and since the case is neither\n      specified by the SQL standard nor documented, it seemed better to\n      remove it than fix it.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid getting more than <literal>AccessShareLock</> when de-parsing a\n      rule or view (Dean Rasheed)\n     </para>\n\n     <para>\n      This oversight resulted in <application>pg_dump</> unexpectedly\n      acquiring <literal>RowExclusiveLock</> locks on tables mentioned as\n      the targets of <literal>INSERT</>/<literal>UPDATE</>/<literal>DELETE</>\n      commands in rules.  While usually harmless, that could interfere with\n      concurrent transactions that tried to acquire, for example,\n      <literal>ShareLock</> on those tables.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent interrupts while reporting non-<literal>ERROR</> messages\n      (Tom Lane)\n     </para>\n\n     <para>\n      This guards against rare server-process freezeups due to recursive\n      entry to <function>syslog()</>, and perhaps other related problems.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2014a\n      for DST law changes in Fiji and Turkey, plus historical changes in\n      Israel and Ukraine.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-20\">\n  <title>Release 8.4.20</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2014-02-20</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.19.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <para>\n   The <productname>PostgreSQL</> community will stop releasing updates\n   for the 8.4.X release series in July 2014.\n   Users are encouraged to update to a newer release branch soon.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.20</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 8.4.19,\n    see <xref linkend=\"release-8-4-19\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Shore up <literal>GRANT ... WITH ADMIN OPTION</> restrictions\n      (Noah Misch)\n     </para>\n\n     <para>\n      Granting a role without <literal>ADMIN OPTION</> is supposed to\n      prevent the grantee from adding or removing members from the granted\n      role, but this restriction was easily bypassed by doing <literal>SET\n      ROLE</> first.  The security impact is mostly that a role member can\n      revoke the access of others, contrary to the wishes of his grantor.\n      Unapproved role member additions are a lesser concern, since an\n      uncooperative role member could provide most of his rights to others\n      anyway by creating views or <literal>SECURITY DEFINER</> functions.\n      (CVE-2014-0060)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent privilege escalation via manual calls to PL validator\n      functions (Andres Freund)\n     </para>\n\n     <para>\n      The primary role of PL validator functions is to be called implicitly\n      during <command>CREATE FUNCTION</>, but they are also normal SQL\n      functions that a user can call explicitly.  Calling a validator on\n      a function actually written in some other language was not checked\n      for and could be exploited for privilege-escalation purposes.\n      The fix involves adding a call to a privilege-checking function in\n      each validator function.  Non-core procedural languages will also\n      need to make this change to their own validator functions, if any.\n      (CVE-2014-0061)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid multiple name lookups during table and index DDL\n      (Robert Haas, Andres Freund)\n     </para>\n\n     <para>\n      If the name lookups come to different conclusions due to concurrent\n      activity, we might perform some parts of the DDL on a different table\n      than other parts.  At least in the case of <command>CREATE INDEX</>,\n      this can be used to cause the permissions checks to be performed\n      against a different table than the index creation, allowing for a\n      privilege escalation attack.\n      (CVE-2014-0062)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent buffer overrun with long datetime strings (Noah Misch)\n     </para>\n\n     <para>\n      The <literal>MAXDATELEN</> constant was too small for the longest\n      possible value of type <type>interval</>, allowing a buffer overrun\n      in <function>interval_out()</>.  Although the datetime input\n      functions were more careful about avoiding buffer overrun, the limit\n      was short enough to cause them to reject some valid inputs, such as\n      input containing a very long timezone name.  The <application>ecpg</>\n      library contained these vulnerabilities along with some of its own.\n      (CVE-2014-0063)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent buffer overrun due to integer overflow in size calculations\n      (Noah Misch, Heikki Linnakangas)\n     </para>\n\n     <para>\n      Several functions, mostly type input functions, calculated an\n      allocation size without checking for overflow.  If overflow did\n      occur, a too-small buffer would be allocated and then written past.\n      (CVE-2014-0064)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent overruns of fixed-size buffers\n      (Peter Eisentraut, Jozef Mlich)\n     </para>\n\n     <para>\n      Use <function>strlcpy()</> and related functions to provide a clear\n      guarantee that fixed-size buffers are not overrun.  Unlike the\n      preceding items, it is unclear whether these cases really represent\n      live issues, since in most cases there appear to be previous\n      constraints on the size of the input string.  Nonetheless it seems\n      prudent to silence all Coverity warnings of this type.\n      (CVE-2014-0065)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid crashing if <function>crypt()</> returns NULL (Honza Horak,\n      Bruce Momjian)\n     </para>\n\n     <para>\n      There are relatively few scenarios in which <function>crypt()</>\n      could return NULL, but <filename>contrib/chkpass</> would crash\n      if it did.  One practical case in which this could be an issue is\n      if <application>libc</> is configured to refuse to execute unapproved\n      hashing algorithms (e.g., <quote>FIPS mode</>).\n      (CVE-2014-0066)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Document risks of <literal>make check</> in the regression testing\n      instructions (Noah Misch, Tom Lane)\n     </para>\n\n     <para>\n      Since the temporary server started by <literal>make check</>\n      uses <quote>trust</> authentication, another user on the same machine\n      could connect to it as database superuser, and then potentially\n      exploit the privileges of the operating-system user who started the\n      tests.  A future release will probably incorporate changes in the\n      testing procedure to prevent this risk, but some public discussion is\n      needed first.  So for the moment, just warn people against using\n      <literal>make check</> when there are untrusted users on the\n      same machine.\n      (CVE-2014-0067)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible mis-replay of WAL records when some segments of a\n      relation aren't full size (Greg Stark, Tom Lane)\n     </para>\n\n     <para>\n      The WAL update could be applied to the wrong page, potentially many\n      pages past where it should have been.  Aside from corrupting data,\n      this error has been observed to result in significant <quote>bloat</>\n      of standby servers compared to their masters, due to updates being\n      applied far beyond where the end-of-file should have been.  This\n      failure mode does not appear to be a significant risk during crash\n      recovery, only when initially synchronizing a standby created from a\n      base backup taken from a quickly-changing master.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that insertions into non-leaf GIN index pages write a full-page\n      WAL record when appropriate (Heikki Linnakangas)\n     </para>\n\n     <para>\n      The previous coding risked index corruption in the event of a\n      partial-page write during a system crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race conditions during server process exit (Robert Haas)\n     </para>\n\n     <para>\n      Ensure that signal handlers don't attempt to use the\n      process's <varname>MyProc</> pointer after it's no longer valid.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix unsafe references to <varname>errno</> within error reporting\n      logic (Christian Kruse)\n     </para>\n\n     <para>\n      This would typically lead to odd behaviors such as missing or\n      inappropriate <literal>HINT</> fields.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crashes from using <function>ereport()</> too early\n      during server startup (Tom Lane)\n     </para>\n\n     <para>\n      The principal case we've seen in the field is a crash if the server\n      is started in a directory it doesn't have permission to read.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Clear retry flags properly in OpenSSL socket write\n      function (Alexander Kukushkin)\n     </para>\n\n     <para>\n      This omission could result in a server lockup after unexpected loss\n      of an SSL-encrypted connection.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix length checking for Unicode identifiers (<literal>U&amp;\"...\"</>\n      syntax) containing escapes (Tom Lane)\n     </para>\n\n     <para>\n      A spurious truncation warning would be printed for such identifiers\n      if the escaped form of the identifier was too long, but the\n      identifier actually didn't need truncation after de-escaping.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash due to invalid plan for nested sub-selects, such\n      as <literal>WHERE (... x IN (SELECT ...) ...) IN (SELECT ...)</>\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that <command>ANALYZE</> creates statistics for a table column\n      even when all the values in it are <quote>too wide</> (Tom Lane)\n     </para>\n\n     <para>\n      <command>ANALYZE</> intentionally omits very wide values from its\n      histogram and most-common-values calculations, but it neglected to do\n      something sane in the case that all the sampled entries are too wide.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <literal>ALTER TABLE ... SET TABLESPACE</>, allow the database's\n      default tablespace to be used without a permissions check\n      (Stephen Frost)\n     </para>\n\n     <para>\n      <literal>CREATE TABLE</> has always allowed such usage,\n      but <literal>ALTER TABLE</> didn't get the memo.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <quote>cannot accept a set</> error when some arms of\n      a <literal>CASE</> return a set and others don't (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix checks for all-zero client addresses in pgstat functions (Kevin\n      Grittner)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible misclassification of multibyte characters by the text\n      search parser (Tom Lane)\n     </para>\n\n     <para>\n      Non-ASCII characters could be misclassified when using C locale with\n      a multibyte encoding.  On Cygwin, non-C locales could fail as well.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible misbehavior in <function>plainto_tsquery()</>\n      (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Use <function>memmove()</> not <function>memcpy()</> for copying\n      overlapping memory regions.  There have been no field reports of\n      this actually causing trouble, but it's certainly risky.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Accept <literal>SHIFT_JIS</> as an encoding name for locale checking\n      purposes (Tatsuo Ishii)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix misbehavior of <function>PQhost()</> on Windows (Fujii Masao)\n     </para>\n\n     <para>\n      It should return <literal>localhost</> if no host has been specified.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve error handling in <application>libpq</> and <application>psql</>\n      for failures during <literal>COPY TO STDOUT/FROM STDIN</> (Tom Lane)\n     </para>\n\n     <para>\n      In particular this fixes an infinite loop that could occur in 9.2 and\n      up if the server connection was lost during <literal>COPY FROM\n      STDIN</>.  Variants of that scenario might be possible in older\n      versions, or with other client applications.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix misaligned descriptors in <application>ecpg</> (MauMau)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>ecpg</>, handle lack of a hostname in the connection\n      parameters properly (Michael Meskes)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix performance regression in <filename>contrib/dblink</> connection\n      startup (Joe Conway)\n     </para>\n\n     <para>\n      Avoid an unnecessary round trip when client and server encodings match.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <filename>contrib/isn</>, fix incorrect calculation of the check\n      digit for ISMN values (Fabien Coelho)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure client-code-only installation procedure works as documented\n      (Peter Eisentraut)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In Mingw and Cygwin builds, install the <application>libpq</> DLL\n      in the <filename>bin</> directory (Andrew Dunstan)\n     </para>\n\n     <para>\n      This duplicates what the MSVC build has long done.  It should fix\n      problems with programs like <application>psql</> failing to start\n      because they can't find the DLL.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't generate plain-text <filename>HISTORY</>\n      and <filename>src/test/regress/README</> files anymore (Tom Lane)\n     </para>\n\n     <para>\n      These text files duplicated the main HTML and PDF documentation\n      formats.  The trouble involved in maintaining them greatly outweighs\n      the likely audience for plain-text format.  Distribution tarballs\n      will still contain files by these names, but they'll just be stubs\n      directing the reader to consult the main documentation.\n      The plain-text <filename>INSTALL</> file will still be maintained, as\n      there is arguably a use-case for that.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2013i\n      for DST law changes in Jordan and historical changes in Cuba.\n     </para>\n\n     <para>\n      In addition, the zones <literal>Asia/Riyadh87</>,\n      <literal>Asia/Riyadh88</>, and <literal>Asia/Riyadh89</> have been\n      removed, as they are no longer maintained by IANA, and never\n      represented actual civil timekeeping practice.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-19\">\n  <title>Release 8.4.19</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2013-12-05</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.18.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.19</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n   </para>\n\n   <para>\n    However, this release corrects a potential data corruption\n    issue.  See the first changelog entry below to find out whether\n    your installation has been affected and what steps you can take if so.\n   </para>\n\n   <para>\n    Also, if you are upgrading from a version earlier than 8.4.17,\n    see <xref linkend=\"release-8-4-17\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix <command>VACUUM</>'s tests to see whether it can\n      update <structfield>relfrozenxid</> (Andres Freund)\n     </para>\n\n     <para>\n      In some cases <command>VACUUM</> (either manual or autovacuum) could\n      incorrectly advance a table's <structfield>relfrozenxid</> value,\n      allowing tuples to escape freezing, causing those rows to become\n      invisible once 2^31 transactions have elapsed.  The probability of\n      data loss is fairly low since multiple incorrect advancements would\n      need to happen before actual loss occurs, but it's not zero.  Users\n      upgrading from release 8.4.8 or earlier are not affected, but all later\n      versions contain the bug.\n     </para>\n\n     <para>\n      The issue can be ameliorated by, after upgrading, vacuuming all tables\n      in all databases while having <link\n      linkend=\"guc-vacuum-freeze-table-age\"><varname>vacuum_freeze_table_age</></link>\n      set to zero.  This will fix any latent corruption but will not be able\n      to fix all pre-existing data errors.  However, an installation can be\n      presumed safe after performing this vacuuming if it has executed fewer\n      than 2^31 update transactions in its lifetime (check this with\n      <literal>SELECT txid_current() < 2^31</>).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition in GIN index posting tree page deletion (Heikki\n      Linnakangas)\n     </para>\n\n     <para>\n      This could lead to transient wrong answers or query failures.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid flattening a subquery whose <literal>SELECT</> list contains a\n      volatile function wrapped inside a sub-<literal>SELECT</> (Tom Lane)\n     </para>\n\n     <para>\n      This avoids unexpected results due to extra evaluations of the\n      volatile function.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner's processing of non-simple-variable subquery outputs\n      nested within outer joins (Tom Lane)\n     </para>\n\n     <para>\n      This error could lead to incorrect plans for queries involving\n      multiple levels of subqueries within <literal>JOIN</> syntax.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix premature deletion of temporary files (Andres Freund)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible read past end of memory in rule printing (Peter Eisentraut)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix array slicing of <type>int2vector</> and <type>oidvector</> values\n      (Tom Lane)\n     </para>\n\n     <para>\n      Expressions of this kind are now implicitly promoted to\n      regular <type>int2</> or <type>oid</> arrays.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect behaviors when using a SQL-standard, simple GMT offset\n      timezone (Tom Lane)\n     </para>\n\n     <para>\n      In some cases, the system would use the simple GMT offset value when\n      it should have used the regular timezone setting that had prevailed\n      before the simple offset was selected.  This change also causes\n      the <function>timeofday</> function to honor the simple GMT offset\n      zone.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent possible misbehavior when logging translations of Windows\n      error codes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Properly quote generated command lines in <application>pg_ctl</>\n      (Naoya Anzai and Tom Lane)\n     </para>\n\n     <para>\n      This fix applies only to Windows.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_dumpall</> to work when a source database\n      sets <link\n      linkend=\"guc-default-transaction-read-only\"><varname>default_transaction_read_only</></link>\n      via <command>ALTER DATABASE SET</> (Kevin Grittner)\n     </para>\n\n     <para>\n      Previously, the generated script would fail during restore.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</>'s processing of lists of variables\n      declared <type>varchar</> (Zolt&aacute;n B&ouml;sz&ouml;rm&eacute;nyi)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <filename>contrib/lo</> defend against incorrect trigger definitions\n      (Marc Cousin)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2013h\n      for DST law changes in Argentina, Brazil, Jordan, Libya,\n      Liechtenstein, Morocco, and Palestine.  Also, new timezone\n      abbreviations WIB, WIT, WITA for Indonesia.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-18\">\n  <title>Release 8.4.18</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2013-10-10</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.17.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.18</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 8.4.17,\n    see <xref linkend=\"release-8-4-17\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Prevent corruption of multi-byte characters when attempting to\n      case-fold identifiers (Andrew Dunstan)\n     </para>\n\n     <para>\n      <productname>PostgreSQL</> case-folds non-ASCII characters only\n      when using a single-byte server encoding.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak caused by <function>lo_open()</function> failure\n      (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory overcommit bug when <varname>work_mem</> is using more\n      than 24GB of memory (Stephen Frost)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix deadlock bug in libpq when using SSL (Stephen Frost)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Properly compute row estimates for boolean columns containing many NULL\n      values (Andrew Gierth)\n     </para>\n\n     <para>\n      Previously tests like <literal>col IS NOT TRUE</> and <literal>col IS\n      NOT FALSE</> did not properly factor in NULL values when estimating\n      plan costs.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent pushing down <literal>WHERE</> clauses into unsafe\n      <literal>UNION/INTERSECT</> subqueries (Tom Lane)\n     </para>\n\n     <para>\n      Subqueries of a <literal>UNION</> or <literal>INTERSECT</> that\n      contain set-returning functions or volatile functions in their\n      <literal>SELECT</> lists could be improperly optimized, leading to\n      run-time errors or incorrect query results.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix rare case of <quote>failed to locate grouping columns</>\n      planner failure (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve view dumping code's handling of dropped columns in referenced\n      tables (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible deadlock during concurrent <command>CREATE INDEX\n      CONCURRENTLY</> operations (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>regexp_matches()</> handling of zero-length matches\n      (Jeevan Chalke)\n     </para>\n\n     <para>\n      Previously, zero-length matches like '^' could return too many matches.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix crash for overly-complex regular expressions (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix regular expression match failures for back references combined with\n      non-greedy quantifiers (Jeevan Chalke)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent <command>CREATE FUNCTION</> from checking <command>SET</>\n      variables unless function body checking is enabled (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>pgp_pub_decrypt()</> so it works for secret keys with\n      passwords (Marko Kreen)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Remove rare inaccurate warning during vacuum of index-less tables\n      (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid possible failure when performing transaction control commands (e.g\n      <command>ROLLBACK</>) in prepared queries (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that floating-point data input accepts standard spellings\n      of <quote>infinity</> on all platforms (Tom Lane)\n     </para>\n\n     <para>\n      The C99 standard says that allowable spellings are <literal>inf</>,\n      <literal>+inf</>, <literal>-inf</>, <literal>infinity</>,\n      <literal>+infinity</>, and <literal>-infinity</>.  Make sure we\n      recognize these even if the platform's <function>strtod</> function\n      doesn't.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Expand ability to compare rows to records and arrays (Rafal Rzepecki,\n      Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2013d\n      for DST law changes in Israel, Morocco, Palestine, and Paraguay.\n      Also, historical zone data corrections for Macquarie Island.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-17\">\n  <title>Release 8.4.17</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2013-04-04</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.16.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.17</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n   </para>\n\n   <para>\n    However, this release corrects several errors in management of GiST\n    indexes.  After installing this update, it is advisable to\n    <command>REINDEX</> any GiST indexes that meet one or more of the\n    conditions described below.\n   </para>\n\n   <para>\n    Also, if you are upgrading from a version earlier than 8.4.10,\n    see <xref linkend=\"release-8-4-10\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Reset OpenSSL randomness state in each postmaster child process\n      (Marko Kreen)\n     </para>\n\n     <para>\n      This avoids a scenario wherein random numbers generated by\n      <filename>contrib/pgcrypto</> functions might be relatively easy for\n      another database user to guess.  The risk is only significant when\n      the postmaster is configured with <varname>ssl</> = <literal>on</>\n      but most connections don't use SSL encryption.  (CVE-2013-1900)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix GiST indexes to not use <quote>fuzzy</> geometric comparisons when\n      it's not appropriate to do so (Alexander Korotkov)\n     </para>\n\n     <para>\n      The core geometric types perform comparisons using <quote>fuzzy</>\n      equality, but <function>gist_box_same</> must do exact comparisons,\n      else GiST indexes using it might become inconsistent.  After installing\n      this update, users should <command>REINDEX</> any GiST indexes on\n      <type>box</>, <type>polygon</>, <type>circle</>, or <type>point</>\n      columns, since all of these use <function>gist_box_same</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix erroneous range-union and penalty logic in GiST indexes that use\n      <filename>contrib/btree_gist</> for variable-width data types, that is\n      <type>text</>, <type>bytea</>, <type>bit</>, and <type>numeric</>\n      columns (Tom Lane)\n     </para>\n\n     <para>\n      These errors could result in inconsistent indexes in which some keys\n      that are present would not be found by searches, and also in useless\n      index bloat.  Users are advised to <command>REINDEX</> such indexes\n      after installing this update.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bugs in GiST page splitting code for multi-column indexes\n      (Tom Lane)\n     </para>\n\n     <para>\n      These errors could result in inconsistent indexes in which some keys\n      that are present would not be found by searches, and also in indexes\n      that are unnecessarily inefficient to search.  Users are advised to\n      <command>REINDEX</> multi-column GiST indexes after installing this\n      update.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix infinite-loop risk in regular expression compilation (Tom Lane,\n      Don Porter)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix potential null-pointer dereference in regular expression compilation\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>to_char()</> to use ASCII-only case-folding rules where\n      appropriate (Tom Lane)\n     </para>\n\n     <para>\n      This fixes misbehavior of some template patterns that should be\n      locale-independent, but mishandled <quote><literal>I</></quote> and\n      <quote><literal>i</></quote> in Turkish locales.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix unwanted rejection of timestamp <literal>1999-12-31 24:00:00</>\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Remove useless <quote>picksplit doesn't support secondary split</> log\n      messages (Josh Hansen, Tom Lane)\n     </para>\n\n     <para>\n      This message seems to have been added in expectation of code that was\n      never written, and probably never will be, since GiST's default\n      handling of secondary splits is actually pretty good.  So stop nagging\n      end users about it.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible failure to send a session's last few transaction\n      commit/abort counts to the statistics collector (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Eliminate memory leaks in PL/Perl's <function>spi_prepare()</> function\n      (Alex Hunsaker, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_dumpall</> to handle database names containing\n      <quote><literal>=</></quote> correctly (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid crash in <application>pg_dump</> when an incorrect connection\n      string is given (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ignore invalid indexes in <application>pg_dump</> (Michael Paquier)\n     </para>\n\n     <para>\n      Dumping invalid indexes can cause problems at restore time, for example\n      if the reason the index creation failed was because it tried to enforce\n      a uniqueness condition not satisfied by the table's data.  Also, if the\n      index creation is in fact still in progress, it seems reasonable to\n      consider it to be an uncommitted DDL change, which\n      <application>pg_dump</> wouldn't be expected to dump anyway.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/pg_trgm</>'s <function>similarity()</> function\n      to return zero for trigram-less strings (Tom Lane)\n     </para>\n\n     <para>\n      Previously it returned <literal>NaN</> due to internal division by zero.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2013b\n      for DST law changes in Chile, Haiti, Morocco, Paraguay, and some\n      Russian areas.  Also, historical zone data corrections for numerous\n      places.\n     </para>\n\n     <para>\n      Also, update the time zone abbreviation files for recent changes in\n      Russia and elsewhere: <literal>CHOT</>, <literal>GET</>,\n      <literal>IRKT</>, <literal>KGT</>, <literal>KRAT</>, <literal>MAGT</>,\n      <literal>MAWT</>, <literal>MSK</>, <literal>NOVT</>, <literal>OMST</>,\n      <literal>TKT</>, <literal>VLAT</>, <literal>WST</>, <literal>YAKT</>,\n      <literal>YEKT</> now follow their current meanings, and\n      <literal>VOLT</> (Europe/Volgograd) and <literal>MIST</>\n      (Antarctica/Macquarie) are added to the default abbreviations list.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-16\">\n  <title>Release 8.4.16</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2013-02-07</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.15.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.16</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 8.4.10,\n    see <xref linkend=\"release-8-4-10\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Prevent execution of <function>enum_recv</> from SQL (Tom Lane)\n     </para>\n\n     <para>\n      The function was misdeclared, allowing a simple SQL command to crash the\n      server.  In principle an attacker might be able to use it to examine the\n      contents of server memory.  Our thanks to Sumit Soni (via Secunia SVCRP)\n      for reporting this issue.  (CVE-2013-0255)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update minimum recovery point when truncating a relation file (Heikki\n      Linnakangas)\n     </para>\n\n     <para>\n      Once data has been discarded, it's no longer safe to stop recovery at\n      an earlier point in the timeline.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix SQL grammar to allow subscripting or field selection from a\n      sub-SELECT result (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Protect against race conditions when scanning\n      <structname>pg_tablespace</> (Stephen Frost, Tom Lane)\n     </para>\n\n     <para>\n      <command>CREATE DATABASE</> and <command>DROP DATABASE</> could\n      misbehave if there were concurrent updates of\n      <structname>pg_tablespace</> entries.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent <command>DROP OWNED</> from trying to drop whole databases or\n      tablespaces (&Aacute;lvaro Herrera)\n     </para>\n\n     <para>\n      For safety, ownership of these objects must be reassigned, not dropped.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix error in <link\n      linkend=\"guc-vacuum-freeze-table-age\"><varname>vacuum_freeze_table_age</></link>\n      implementation (Andres Freund)\n     </para>\n\n     <para>\n      In installations that have existed for more than <link\n      linkend=\"guc-vacuum-freeze-min-age\"><varname>vacuum_freeze_min_age</></link>\n      transactions, this mistake prevented autovacuum from using partial-table\n      scans, so that a full-table scan would always happen instead.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent misbehavior when a <symbol>RowExpr</> or <symbol>XmlExpr</>\n      is parse-analyzed twice (Andres Freund, Tom Lane)\n     </para>\n\n     <para>\n      This mistake could be user-visible in contexts such as\n      <literal>CREATE TABLE LIKE INCLUDING INDEXES</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve defenses against integer overflow in hashtable sizing\n      calculations (Jeff Davis)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Reject out-of-range dates in <function>to_date()</> (Hitoshi Harada)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that non-ASCII prompt strings are translated to the correct\n      code page on Windows (Alexander Law, Noah Misch)\n     </para>\n\n     <para>\n      This bug affected <application>psql</> and some other client programs.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash in <application>psql</>'s <command>\\?</> command\n      when not connected to a database (Meng Qingzhong)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix one-byte buffer overrun in <application>libpq</>'s\n      <function>PQprintTuples</> (Xi Wang)\n     </para>\n\n     <para>\n      This ancient function is not used anywhere by\n      <productname>PostgreSQL</> itself, but it might still be used by some\n      client code.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>ecpglib</> use translated messages properly\n      (Chen Huajun)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Properly install <application>ecpg_compat</> and\n      <application>pgtypes</> libraries on MSVC (Jiang Guiqing)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Rearrange configure's tests for supplied functions so it is not\n      fooled by bogus exports from libedit/libreadline (Christoph Berg)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure Windows build number increases over time (Magnus Hagander)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>pgxs</> build executables with the right\n      <literal>.exe</> suffix when cross-compiling for Windows\n      (Zoltan Boszormenyi)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add new timezone abbreviation <literal>FET</> (Tom Lane)\n     </para>\n\n     <para>\n      This is now used in some eastern-European time zones.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-15\">\n  <title>Release 8.4.15</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2012-12-06</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.14.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.15</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 8.4.10,\n    see <xref linkend=\"release-8-4-10\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix multiple bugs associated with <command>CREATE INDEX\n      CONCURRENTLY</> (Andres Freund, Tom Lane)\n     </para>\n\n     <para>\n      Fix <command>CREATE INDEX CONCURRENTLY</> to use\n      in-place updates when changing the state of an index's\n      <structname>pg_index</> row.  This prevents race conditions that could\n      cause concurrent sessions to miss updating the target index, thus\n      resulting in corrupt concurrently-created indexes.\n     </para>\n\n     <para>\n      Also, fix various other operations to ensure that they ignore\n      invalid indexes resulting from a failed <command>CREATE INDEX\n      CONCURRENTLY</> command.  The most important of these is\n      <command>VACUUM</>, because an auto-vacuum could easily be launched\n      on the table before corrective action can be taken to fix or remove\n      the invalid index.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid corruption of internal hash tables when out of memory\n      (Hitoshi Harada)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planning of non-strict equivalence clauses above outer joins\n      (Tom Lane)\n     </para>\n\n     <para>\n      The planner could derive incorrect constraints from a clause equating\n      a non-strict construct to something else, for example\n      <literal>WHERE COALESCE(foo, 0) = 0</>\n      when <literal>foo</> is coming from the nullable side of an outer join.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve planner's ability to prove exclusion constraints from\n      equivalence classes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix partial-row matching in hashed subplans to handle cross-type cases\n      correctly (Tom Lane)\n     </para>\n\n     <para>\n      This affects multicolumn <literal>NOT IN</> subplans, such as\n      <literal>WHERE (a, b) NOT IN (SELECT x, y FROM ...)</>\n      when for instance <literal>b</> and <literal>y</> are <type>int4</>\n      and <type>int8</> respectively.  This mistake led to wrong answers\n      or crashes depending on the specific datatypes involved.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Acquire buffer lock when re-fetching the old tuple for an\n      <literal>AFTER ROW UPDATE/DELETE</> trigger (Andres Freund)\n     </para>\n\n     <para>\n      In very unusual circumstances, this oversight could result in passing\n      incorrect data to the precheck logic for a foreign-key enforcement\n      trigger.  That could result in a crash, or in an incorrect decision\n      about whether to fire the trigger.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>ALTER COLUMN TYPE</> to handle inherited check\n      constraints properly (Pavan Deolasee)\n     </para>\n\n     <para>\n      This worked correctly in pre-8.4 releases, and now works correctly\n      in 8.4 and later.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>REASSIGN OWNED</> to handle grants on tablespaces\n      (&Aacute;lvaro Herrera)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ignore incorrect <structname>pg_attribute</> entries for system\n      columns for views (Tom Lane)\n     </para>\n\n     <para>\n      Views do not have any system columns.  However, we forgot to\n      remove such entries when converting a table to a view.  That's fixed\n      properly for 9.3 and later, but in previous branches we need to defend\n      against existing mis-converted views.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix rule printing to dump <literal>INSERT INTO <replaceable>table</>\n      DEFAULT VALUES</literal> correctly (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Guard against stack overflow when there are too many\n      <literal>UNION</>/<literal>INTERSECT</>/<literal>EXCEPT</> clauses\n      in a query (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent platform-dependent failures when dividing the minimum possible\n      integer value by -1 (Xi Wang, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible access past end of string in date parsing\n      (Hitoshi Harada)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Produce an understandable error message if the length of the path name\n      for a Unix-domain socket exceeds the platform-specific limit\n      (Tom Lane, Andrew Dunstan)\n     </para>\n\n     <para>\n      Formerly, this would result in something quite unhelpful, such as\n      <quote>Non-recoverable failure in name resolution</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leaks when sending composite column values to the client\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>pg_ctl</> more robust about reading the\n      <filename>postmaster.pid</> file (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Fix race conditions and possible file descriptor leakage.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash in <application>psql</> if incorrectly-encoded data\n      is presented and the <varname>client_encoding</> setting is a\n      client-only encoding, such as SJIS (Jiang Guiqing)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bugs in the <filename>restore.sql</> script emitted by\n      <application>pg_dump</> in <literal>tar</> output format (Tom Lane)\n     </para>\n\n     <para>\n      The script would fail outright on tables whose names include\n      upper-case characters.  Also, make the script capable of restoring\n      data in <option>--inserts</> mode as well as the regular COPY mode.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</> to accept POSIX-conformant\n      <literal>tar</> files (Brian Weaver, Tom Lane)\n     </para>\n\n     <para>\n      The original coding of <application>pg_dump</>'s <literal>tar</>\n      output mode produced files that are not fully conformant with the\n      POSIX standard.  This has been corrected for version 9.3.  This\n      patch updates previous branches so that they will accept both the\n      incorrect and the corrected formats, in hopes of avoiding\n      compatibility problems when 9.3 comes out.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_resetxlog</> to locate <filename>postmaster.pid</>\n      correctly when given a relative path to the data directory (Tom Lane)\n     </para>\n\n     <para>\n      This mistake could lead to <application>pg_resetxlog</> not noticing\n      that there is an active postmaster using the data directory.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>libpq</>'s <function>lo_import()</> and\n      <function>lo_export()</> functions to report file I/O errors properly\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</>'s processing of nested structure pointer\n      variables (Muhammad Usama)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <filename>contrib/pageinspect</>'s btree page inspection\n      functions take buffer locks while examining pages (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pgxs</> support for building loadable modules on AIX\n      (Tom Lane)\n     </para>\n\n     <para>\n      Building modules outside the original source tree didn't work on AIX.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2012j\n      for DST law changes in Cuba, Israel, Jordan, Libya, Palestine, Western\n      Samoa, and portions of Brazil.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-14\">\n  <title>Release 8.4.14</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2012-09-24</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.13.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.14</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 8.4.10,\n    see <xref linkend=\"release-8-4-10\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix planner's assignment of executor parameters, and fix executor's\n      rescan logic for CTE plan nodes (Tom Lane)\n     </para>\n\n     <para>\n      These errors could result in wrong answers from queries that scan the\n      same <literal>WITH</> subquery multiple times.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve page-splitting decisions in GiST indexes (Alexander Korotkov,\n      Robert Haas, Tom Lane)\n     </para>\n\n     <para>\n      Multi-column GiST indexes might suffer unexpected bloat due to this\n      error.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix cascading privilege revoke to stop if privileges are still held\n      (Tom Lane)\n     </para>\n\n     <para>\n      If we revoke a grant option from some role <replaceable>X</>, but\n      <replaceable>X</> still holds that option via a grant from someone\n      else, we should not recursively revoke the corresponding privilege\n      from role(s) <replaceable>Y</> that <replaceable>X</> had granted it\n      to.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix handling of <literal>SIGFPE</> when PL/Perl is in use (Andres Freund)\n     </para>\n\n     <para>\n      Perl resets the process's <literal>SIGFPE</> handler to\n      <literal>SIG_IGN</>, which could result in crashes later on.  Restore\n      the normal Postgres signal handler after initializing PL/Perl.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent PL/Perl from crashing if a recursive PL/Perl function is\n      redefined while being executed (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Work around possible misoptimization in PL/Perl (Tom Lane)\n     </para>\n\n     <para>\n      Some Linux distributions contain an incorrect version of\n      <filename>pthread.h</> that results in incorrect compiled code in\n      PL/Perl, leading to crashes if a PL/Perl function calls another one\n      that throws an error.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2012f\n      for DST law changes in Fiji\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-13\">\n  <title>Release 8.4.13</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2012-08-17</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.12.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.13</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 8.4.10,\n    see <xref linkend=\"release-8-4-10\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Prevent access to external files/URLs via XML entity references\n      (Noah Misch, Tom Lane)\n     </para>\n\n     <para>\n      <function>xml_parse()</> would attempt to fetch external files or\n      URLs as needed to resolve DTD and entity references in an XML value,\n      thus allowing unprivileged database users to attempt to fetch data\n      with the privileges of the database server.  While the external data\n      wouldn't get returned directly to the user, portions of it could be\n      exposed in error messages if the data didn't parse as valid XML; and\n      in any case the mere ability to check existence of a file might be\n      useful to an attacker.  (CVE-2012-3489)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent access to external files/URLs via <filename>contrib/xml2</>'s\n      <function>xslt_process()</> (Peter Eisentraut)\n     </para>\n\n     <para>\n      <application>libxslt</> offers the ability to read and write both\n      files and URLs through stylesheet commands, thus allowing\n      unprivileged database users to both read and write data with the\n      privileges of the database server.  Disable that through proper use\n      of <application>libxslt</>'s security options.  (CVE-2012-3488)\n     </para>\n\n     <para>\n      Also, remove <function>xslt_process()</>'s ability to fetch documents\n      and stylesheets from external files/URLs.  While this was a\n      documented <quote>feature</>, it was long regarded as a bad idea.\n      The fix for CVE-2012-3489 broke that capability, and rather than\n      expend effort on trying to fix it, we're just going to summarily\n      remove it.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent too-early recycling of btree index pages (Noah Misch)\n     </para>\n\n     <para>\n      When we allowed read-only transactions to skip assigning XIDs, we\n      introduced the possibility that a deleted btree page could be\n      recycled while a read-only transaction was still in flight to it.\n      This would result in incorrect index search results.  The probability\n      of such an error occurring in the field seems very low because of the\n      timing requirements, but nonetheless it should be fixed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix crash-safety bug with newly-created-or-reset sequences (Tom Lane)\n     </para>\n\n     <para>\n      If <command>ALTER SEQUENCE</> was executed on a freshly created or\n      reset sequence, and then precisely one <function>nextval()</> call\n      was made on it, and then the server crashed, WAL replay would restore\n      the sequence to a state in which it appeared that no\n      <function>nextval()</> had been done, thus allowing the first\n      sequence value to be returned again by the next\n      <function>nextval()</> call.  In particular this could manifest for\n      <type>serial</> columns, since creation of a serial column's sequence\n      includes an <command>ALTER SEQUENCE OWNED BY</> step.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure the <filename>backup_label</> file is fsync'd after\n      <function>pg_start_backup()</> (Dave Kerr)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Back-patch 9.1 improvement to compress the fsync request queue\n      (Robert Haas)\n     </para>\n\n     <para>\n      This improves performance during checkpoints.  The 9.1 change\n      has now seen enough field testing to seem safe to back-patch.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Only allow autovacuum to be auto-canceled by a directly blocked\n      process (Tom Lane)\n     </para>\n\n     <para>\n      The original coding could allow inconsistent behavior in some cases;\n      in particular, an autovacuum could get canceled after less than\n      <literal>deadlock_timeout</> grace period.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve logging of autovacuum cancels (Robert Haas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix log collector so that <literal>log_truncate_on_rotation</> works\n      during the very first log rotation after server start (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <literal>WITH</> attached to a nested set operation\n      (<literal>UNION</>/<literal>INTERSECT</>/<literal>EXCEPT</>)\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that a whole-row reference to a subquery doesn't include any\n      extra <literal>GROUP BY</> or <literal>ORDER BY</> columns (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow copying whole-row references in <literal>CHECK</>\n      constraints and index definitions during <command>CREATE TABLE</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      This situation can arise in <command>CREATE TABLE</> with\n      <literal>LIKE</> or <literal>INHERITS</>.  The copied whole-row\n      variable was incorrectly labeled with the row type of the original\n      table not the new one.  Rejecting the case seems reasonable for\n      <literal>LIKE</>, since the row types might well diverge later.  For\n      <literal>INHERITS</> we should ideally allow it, with an implicit\n      coercion to the parent table's row type; but that will require more\n      work than seems safe to back-patch.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak in <literal>ARRAY(SELECT ...)</> subqueries (Heikki\n      Linnakangas, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix extraction of common prefixes from regular expressions (Tom Lane)\n     </para>\n\n     <para>\n      The code could get confused by quantified parenthesized\n      subexpressions, such as <literal>^(foo)?bar</>.  This would lead to\n      incorrect index optimization of searches for such patterns.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bugs with parsing signed\n      <replaceable>hh</><literal>:</><replaceable>mm</> and\n      <replaceable>hh</><literal>:</><replaceable>mm</><literal>:</><replaceable>ss</>\n      fields in <type>interval</> constants (Amit Kapila, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Report errors properly in <filename>contrib/xml2</>'s\n      <function>xslt_process()</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2012e\n      for DST law changes in Morocco and Tokelau\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-12\">\n  <title>Release 8.4.12</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2012-06-04</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.11.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.12</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 8.4.10,\n    see <xref linkend=\"release-8-4-10\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix incorrect password transformation in\n      <filename>contrib/pgcrypto</>'s DES <function>crypt()</> function\n      (Solar Designer)\n     </para>\n\n     <para>\n      If a password string contained the byte value <literal>0x80</>, the\n      remainder of the password was ignored, causing the password to be much\n      weaker than it appeared.  With this fix, the rest of the string is\n      properly included in the DES hash.  Any stored password values that are\n      affected by this bug will thus no longer match, so the stored values may\n      need to be updated.  (CVE-2012-2143)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ignore <literal>SECURITY DEFINER</> and <literal>SET</> attributes for\n      a procedural language's call handler (Tom Lane)\n     </para>\n\n     <para>\n      Applying such attributes to a call handler could crash the server.\n      (CVE-2012-2655)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow numeric timezone offsets in <type>timestamp</> input to be up to\n      16 hours away from UTC (Tom Lane)\n     </para>\n\n     <para>\n      Some historical time zones have offsets larger than 15 hours, the\n      previous limit.  This could result in dumped data values being rejected\n      during reload.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix timestamp conversion to cope when the given time is exactly the\n      last DST transition time for the current timezone (Tom Lane)\n     </para>\n\n     <para>\n      This oversight has been there a long time, but was not noticed\n      previously because most DST-using zones are presumed to have an\n      indefinite sequence of future DST transitions.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <type>text</> to <type>name</> and <type>char</> to <type>name</>\n      casts to perform string truncation correctly in multibyte encodings\n      (Karl Schnaitter)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory copying bug in <function>to_tsquery()</> (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner's handling of outer PlaceHolderVars within subqueries (Tom\n      Lane)\n     </para>\n\n     <para>\n      This bug concerns sub-SELECTs that reference variables coming from the\n      nullable side of an outer join of the surrounding query.\n      In 9.1, queries affected by this bug would fail with <quote>ERROR:\n      Upper-level PlaceHolderVar found where not expected</>.  But in 9.0 and\n      8.4, you'd silently get possibly-wrong answers, since the value\n      transmitted into the subquery wouldn't go to null when it should.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix slow session startup when <structname>pg_attribute</> is very large\n      (Tom Lane)\n     </para>\n\n     <para>\n      If <structname>pg_attribute</> exceeds one-fourth of\n      <varname>shared_buffers</>, cache rebuilding code that is sometimes\n      needed during session start would trigger the synchronized-scan logic,\n      causing it to take many times longer than normal.  The problem was\n      particularly acute if many new sessions were starting at once.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure sequential scans check for query cancel reasonably often (Merlin\n      Moncure)\n     </para>\n\n     <para>\n      A scan encountering many consecutive pages that contain no live tuples\n      would not respond to interrupts meanwhile.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure the Windows implementation of <function>PGSemaphoreLock()</>\n      clears <varname>ImmediateInterruptOK</> before returning (Tom Lane)\n     </para>\n\n     <para>\n      This oversight meant that a query-cancel interrupt received later\n      in the same query could be accepted at an unsafe time, with\n      unpredictable but not good consequences.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Show whole-row variables safely when printing views or rules\n      (Abbas Butt, Tom Lane)\n     </para>\n\n     <para>\n      Corner cases involving ambiguous names (that is, the name could be\n      either a table or column name of the query) were printed in an\n      ambiguous way, risking that the view or rule would be interpreted\n      differently after dump and reload.  Avoid the ambiguous case by\n      attaching a no-op cast.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>COPY FROM</> to properly handle null marker strings that\n      correspond to invalid encoding (Tom Lane)\n     </para>\n\n     <para>\n      A null marker string such as <literal>E'\\\\0'</> should work, and did\n      work in the past, but the case got broken in 8.4.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure autovacuum worker processes perform stack depth checking\n      properly (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Previously, infinite recursion in a function invoked by\n      auto-<command>ANALYZE</> could crash worker processes.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix logging collector to not lose log coherency under high load (Andrew\n      Dunstan)\n     </para>\n\n     <para>\n      The collector previously could fail to reassemble large messages if it\n      got too busy.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix logging collector to ensure it will restart file rotation\n      after receiving <systemitem>SIGHUP</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix WAL replay logic for GIN indexes to not fail if the index was\n      subsequently dropped (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak in PL/pgSQL's <command>RETURN NEXT</> command (Joe\n      Conway)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/pgSQL's <command>GET DIAGNOSTICS</> command when the target\n      is the function's first variable (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix potential access off the end of memory in <application>psql</>'s\n      expanded display (<command>\\x</>) mode (Peter Eisentraut)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix several performance problems in <application>pg_dump</> when\n      the database contains many objects (Jeff Janes, Tom Lane)\n     </para>\n\n     <para>\n      <application>pg_dump</> could get very slow if the database contained\n      many schemas, or if many objects are in dependency loops, or if there\n      are many owned sequences.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/dblink</>'s <function>dblink_exec()</> to not leak\n      temporary database connections upon error (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/dblink</> to report the correct connection name in\n      error messages (Kyotaro Horiguchi)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2012c\n      for DST law changes in Antarctica, Armenia, Chile, Cuba, Falkland\n      Islands, Gaza, Haiti, Hebron, Morocco, Syria, and Tokelau Islands;\n      also historical corrections for Canada.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-11\">\n  <title>Release 8.4.11</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2012-02-27</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.10.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.11</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 8.4.10,\n    see <xref linkend=\"release-8-4-10\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Require execute permission on the trigger function for\n      <command>CREATE TRIGGER</> (Robert Haas)\n     </para>\n\n     <para>\n      This missing check could allow another user to execute a trigger\n      function with forged input data, by installing it on a table he owns.\n      This is only of significance for trigger functions marked\n      <literal>SECURITY DEFINER</>, since otherwise trigger functions run\n      as the table owner anyway.  (CVE-2012-0866)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Remove arbitrary limitation on length of common name in SSL\n      certificates (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Both <application>libpq</> and the server truncated the common name\n      extracted from an SSL certificate at 32 bytes.  Normally this would\n      cause nothing worse than an unexpected verification failure, but there\n      are some rather-implausible scenarios in which it might allow one\n      certificate holder to impersonate another.  The victim would have to\n      have a common name exactly 32 bytes long, and the attacker would have\n      to persuade a trusted CA to issue a certificate in which the common\n      name has that string as a prefix.  Impersonating a server would also\n      require some additional exploit to redirect client connections.\n      (CVE-2012-0867)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Convert newlines to spaces in names written in <application>pg_dump</>\n      comments (Robert Haas)\n     </para>\n\n     <para>\n      <application>pg_dump</> was incautious about sanitizing object names\n      that are emitted within SQL comments in its output script.  A name\n      containing a newline would at least render the script syntactically\n      incorrect.  Maliciously crafted object names could present a SQL\n      injection risk when the script is reloaded.  (CVE-2012-0868)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix btree index corruption from insertions concurrent with vacuuming\n      (Tom Lane)\n     </para>\n\n     <para>\n      An index page split caused by an insertion could sometimes cause a\n      concurrently-running <command>VACUUM</> to miss removing index entries\n      that it should remove.  After the corresponding table rows are removed,\n      the dangling index entries would cause errors (such as <quote>could not\n      read block N in file ...</>) or worse, silently wrong query results\n      after unrelated rows are re-inserted at the now-free table locations.\n      This bug has been present since release 8.2, but occurs so infrequently\n      that it was not diagnosed until now.  If you have reason to suspect\n      that it has happened in your database, reindexing the affected index\n      will fix things.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update per-column permissions, not only per-table permissions, when\n      changing table owner (Tom Lane)\n     </para>\n\n     <para>\n      Failure to do this meant that any previously granted column permissions\n      were still shown as having been granted by the old owner.  This meant\n      that neither the new owner nor a superuser could revoke the\n      now-untraceable-to-table-owner permissions.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow non-existent values for some settings in <command>ALTER\n      USER/DATABASE SET</> (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Allow <varname>default_text_search_config</>,\n      <varname>default_tablespace</>, and <varname>temp_tablespaces</> to be\n      set to names that are not known.  This is because they might be known\n      in another database where the setting is intended to be used, or for the\n      tablespace cases because the tablespace might not be created yet.  The\n      same issue was previously recognized for <varname>search_path</>, and\n      these settings now act like that one.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid crashing when we have problems deleting table files post-commit\n      (Tom Lane)\n     </para>\n\n     <para>\n      Dropping a table should lead to deleting the underlying disk files only\n      after the transaction commits.  In event of failure then (for instance,\n      because of wrong file permissions) the code is supposed to just emit a\n      warning message and go on, since it's too late to abort the\n      transaction.  This logic got broken as of release 8.4, causing such\n      situations to result in a PANIC and an unrestartable database.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Track the OID counter correctly during WAL replay, even when it wraps\n      around (Tom Lane)\n     </para>\n\n     <para>\n      Previously the OID counter would remain stuck at a high value until the\n      system exited replay mode.  The practical consequences of that are\n      usually nil, but there are scenarios wherein a standby server that's\n      been promoted to master might take a long time to advance the OID\n      counter to a reasonable value once values are needed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix regular expression back-references with <literal>*</> attached\n      (Tom Lane)\n     </para>\n\n     <para>\n      Rather than enforcing an exact string match, the code would effectively\n      accept any string that satisfies the pattern sub-expression referenced\n      by the back-reference symbol.\n     </para>\n\n     <para>\n      A similar problem still afflicts back-references that are embedded in a\n      larger quantified expression, rather than being the immediate subject\n      of the quantifier.  This will be addressed in a future\n      <productname>PostgreSQL</> release.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix recently-introduced memory leak in processing of\n      <type>inet</>/<type>cidr</> values (Heikki Linnakangas)\n     </para>\n\n     <para>\n      A patch in the December 2011 releases of <productname>PostgreSQL</>\n      caused memory leakage in these operations, which could be significant\n      in scenarios such as building a btree index on such a column.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix dangling pointer after <command>CREATE TABLE AS</>/<command>SELECT\n      INTO</> in a SQL-language function (Tom Lane)\n     </para>\n\n     <para>\n      In most cases this only led to an assertion failure in assert-enabled\n      builds, but worse consequences seem possible.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid double close of file handle in syslogger on Windows (MauMau)\n     </para>\n\n     <para>\n      Ordinarily this error was invisible, but it would cause an exception\n      when running on a debug version of Windows.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix I/O-conversion-related memory leaks in plpgsql\n      (Andres Freund, Jan Urbanski, Tom Lane)\n     </para>\n\n     <para>\n      Certain operations would leak memory until the end of the current\n      function.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <application>pg_dump</>'s handling of inherited table columns\n      (Tom Lane)\n     </para>\n\n     <para>\n      <application>pg_dump</> mishandled situations where a child column has\n      a different default expression than its parent column.  If the default\n      is textually identical to the parent's default, but not actually the\n      same (for instance, because of schema search path differences) it would\n      not be recognized as different, so that after dump and restore the\n      child would be allowed to inherit the parent's default.  Child columns\n      that are <literal>NOT NULL</> where their parent is not could also be\n      restored subtly incorrectly.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</>'s direct-to-database mode for\n      INSERT-style table data (Tom Lane)\n     </para>\n\n     <para>\n      Direct-to-database restores from archive files made with\n      <option>--inserts</> or <option>--column-inserts</> options fail when\n      using <application>pg_restore</> from a release dated September or\n      December 2011, as a result of an oversight in a fix for another\n      problem.  The archive file itself is not at fault, and text-mode\n      output is okay.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow <literal>AT</> option in <application>ecpg</>\n      <literal>DEALLOCATE</> statements (Michael Meskes)\n     </para>\n\n     <para>\n      The infrastructure to support this has been there for awhile, but\n      through an oversight there was still an error check rejecting the case.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix error in <filename>contrib/intarray</>'s <literal>int[] &amp;\n      int[]</> operator (Guillaume Lelarge)\n     </para>\n\n     <para>\n      If the smallest integer the two input arrays have in common is 1,\n      and there are smaller values in either array, then 1 would be\n      incorrectly omitted from the result.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix error detection in <filename>contrib/pgcrypto</>'s\n      <function>encrypt_iv()</> and <function>decrypt_iv()</>\n      (Marko Kreen)\n     </para>\n\n     <para>\n      These functions failed to report certain types of invalid-input errors,\n      and would instead return random garbage values for incorrect input.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix one-byte buffer overrun in <filename>contrib/test_parser</>\n      (Paul Guyot)\n     </para>\n\n     <para>\n      The code would try to read one more byte than it should, which would\n      crash in corner cases.\n      Since <filename>contrib/test_parser</> is only example code, this is\n      not a security issue in itself, but bad example code is still bad.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use <function>__sync_lock_test_and_set()</> for spinlocks on ARM, if\n      available (Martin Pitt)\n     </para>\n\n     <para>\n      This function replaces our previous use of the <literal>SWPB</>\n      instruction, which is deprecated and not available on ARMv6 and later.\n      Reports suggest that the old code doesn't fail in an obvious way on\n      recent ARM boards, but simply doesn't interlock concurrent accesses,\n      leading to bizarre failures in multiprocess operation.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use <option>-fexcess-precision=standard</> option when building with\n      gcc versions that accept it (Andrew Dunstan)\n     </para>\n\n     <para>\n      This prevents assorted scenarios wherein recent versions of gcc will\n      produce creative results.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow use of threaded Python on FreeBSD (Chris Rees)\n     </para>\n\n     <para>\n      Our configure script previously believed that this combination wouldn't\n      work; but FreeBSD fixed the problem, so remove that error check.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-10\">\n  <title>Release 8.4.10</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2011-12-05</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.9.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.10</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n   </para>\n\n   <para>\n    However, a longstanding error was discovered in the definition of the\n    <literal>information_schema.referential_constraints</> view.  If you\n    rely on correct results from that view, you should replace its\n    definition as explained in the first changelog item below.\n   </para>\n\n   <para>\n    Also, if you are upgrading from a version earlier than 8.4.8,\n    see <xref linkend=\"release-8-4-8\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix bugs in <literal>information_schema.referential_constraints</> view\n      (Tom Lane)\n     </para>\n\n     <para>\n      This view was being insufficiently careful about matching the\n      foreign-key constraint to the depended-on primary or unique key\n      constraint.  That could result in failure to show a foreign key\n      constraint at all, or showing it multiple times, or claiming that it\n      depends on a different constraint than the one it really does.\n     </para>\n\n     <para>\n      Since the view definition is installed by <application>initdb</>,\n      merely upgrading will not fix the problem.  If you need to fix this\n      in an existing installation, you can (as a superuser) drop the\n      <literal>information_schema</> schema then re-create it by sourcing\n      <filename><replaceable>SHAREDIR</>/information_schema.sql</filename>.\n      (Run <literal>pg_config --sharedir</> if you're uncertain where\n      <replaceable>SHAREDIR</> is.)  This must be repeated in each database\n      to be fixed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect replay of WAL records for GIN index updates\n      (Tom Lane)\n     </para>\n\n     <para>\n      This could result in transiently failing to find index entries after\n      a crash, or on a hot-standby server.  The problem would be repaired\n      by the next <command>VACUUM</> of the index, however.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix TOAST-related data corruption during <literal>CREATE TABLE dest AS\n      SELECT * FROM src</> or <literal>INSERT INTO dest SELECT * FROM src</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      If a table has been modified by <command>ALTER TABLE ADD COLUMN</>,\n      attempts to copy its data verbatim to another table could produce\n      corrupt results in certain corner cases.\n      The problem can only manifest in this precise form in 8.4 and later,\n      but we patched earlier versions as well in case there are other code\n      paths that could trigger the same bug.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition during toast table access from stale syscache entries\n      (Tom Lane)\n     </para>\n\n     <para>\n      The typical symptom was transient errors like <quote>missing chunk\n      number 0 for toast value NNNNN in pg_toast_2619</>, where the cited\n      toast table would always belong to a system catalog.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Track dependencies of functions on items used in parameter default\n      expressions (Tom Lane)\n     </para>\n\n     <para>\n      Previously, a referenced object could be dropped without having dropped\n      or modified the function, leading to misbehavior when the function was\n      used.  Note that merely installing this update will not fix the missing\n      dependency entries; to do that, you'd need to <command>CREATE OR\n      REPLACE</> each such function afterwards.  If you have functions whose\n      defaults depend on non-built-in objects, doing so is recommended.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow inlining of set-returning SQL functions with multiple OUT\n      parameters (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <function>DatumGetInetP()</> unpack inet datums that have a 1-byte\n      header, and add a new macro, <function>DatumGetInetPP()</>, that does\n      not (Heikki Linnakangas)\n     </para>\n\n     <para>\n      This change affects no core code, but might prevent crashes in add-on\n      code that expects <function>DatumGetInetP()</> to produce an unpacked\n      datum as per usual convention.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve locale support in <type>money</> type's input and output\n      (Tom Lane)\n     </para>\n\n     <para>\n      Aside from not supporting all standard\n      <link linkend=\"guc-lc-monetary\"><varname>lc_monetary</></link>\n      formatting options, the input and output functions were inconsistent,\n      meaning there were locales in which dumped <type>money</> values could\n      not be re-read.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't let <link\n      linkend=\"guc-transform-null-equals\"><varname>transform_null_equals</></link>\n      affect <literal>CASE foo WHEN NULL ...</> constructs\n      (Heikki Linnakangas)\n     </para>\n\n     <para>\n      <varname>transform_null_equals</> is only supposed to affect\n      <literal>foo = NULL</> expressions written directly by the user, not\n      equality checks generated internally by this form of <literal>CASE</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Change foreign-key trigger creation order to better support\n      self-referential foreign keys (Tom Lane)\n     </para>\n\n     <para>\n      For a cascading foreign key that references its own table, a row update\n      will fire both the <literal>ON UPDATE</> trigger and the\n      <literal>CHECK</> trigger as one event.  The <literal>ON UPDATE</>\n      trigger must execute first, else the <literal>CHECK</> will check a\n      non-final state of the row and possibly throw an inappropriate error.\n      However, the firing order of these triggers is determined by their\n      names, which generally sort in creation order since the triggers have\n      auto-generated names following the convention\n      <quote>RI_ConstraintTrigger_NNNN</>.  A proper fix would require\n      modifying that convention, which we will do in 9.2, but it seems risky\n      to change it in existing releases.  So this patch just changes the\n      creation order of the triggers.  Users encountering this type of error\n      should drop and re-create the foreign key constraint to get its\n      triggers into the right order.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid floating-point underflow while tracking buffer allocation rate\n      (Greg Matthews)\n     </para>\n\n     <para>\n      While harmless in itself, on certain platforms this would result in\n      annoying kernel log messages.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Preserve configuration file name and line number values when starting\n      child processes under Windows (Tom Lane)\n     </para>\n\n     <para>\n      Formerly, these would not be displayed correctly in the\n      <structname>pg_settings</> view.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Preserve blank lines within commands in <application>psql</>'s command\n      history (Robert Haas)\n     </para>\n\n     <para>\n      The former behavior could cause problems if an empty line was removed\n      from within a string literal, for example.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_dump</> to dump user-defined casts between\n      auto-generated types, such as table rowtypes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use the preferred version of <application>xsubpp</> to build PL/Perl,\n      not necessarily the operating system's main copy\n      (David Wheeler and Alex Hunsaker)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect coding in <filename>contrib/dict_int</> and\n      <filename>contrib/dict_xsyn</> (Tom Lane)\n     </para>\n\n     <para>\n      Some functions incorrectly assumed that memory returned by\n      <function>palloc()</> is guaranteed zeroed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Honor query cancel interrupts promptly in <function>pgstatindex()</>\n      (Robert Haas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure VPATH builds properly install all server header files\n      (Peter Eisentraut)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Shorten file names reported in verbose error messages (Peter Eisentraut)\n     </para>\n\n     <para>\n      Regular builds have always reported just the name of the C file\n      containing the error message call, but VPATH builds formerly\n      reported an absolute path name.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix interpretation of Windows timezone names for Central America\n      (Tom Lane)\n     </para>\n\n     <para>\n      Map <quote>Central America Standard Time</> to <literal>CST6</>, not\n      <literal>CST6CDT</>, because DST is generally not observed anywhere in\n      Central America.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2011n\n      for DST law changes in Brazil, Cuba, Fiji, Palestine, Russia, and Samoa;\n      also historical corrections for Alaska and British East Africa.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-9\">\n  <title>Release 8.4.9</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2011-09-26</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.8.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.9</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 8.4.8,\n    see <xref linkend=\"release-8-4-8\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix bugs in indexing of in-doubt HOT-updated tuples (Tom Lane)\n     </para>\n\n     <para>\n      These bugs could result in index corruption after reindexing a system\n      catalog.  They are not believed to affect user indexes.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix multiple bugs in GiST index page split processing (Heikki\n      Linnakangas)\n     </para>\n\n     <para>\n      The probability of occurrence was low, but these could lead to index\n      corruption.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible buffer overrun in <function>tsvector_concat()</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      The function could underestimate the amount of memory needed for its\n      result, leading to server crashes.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix crash in <function>xml_recv</> when processing a\n      <quote>standalone</> parameter (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <function>pg_options_to_table</> return NULL for an option with no\n      value (Tom Lane)\n     </para>\n\n     <para>\n      Previously such cases would result in a server crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid possibly accessing off the end of memory in <command>ANALYZE</>\n      and in SJIS-2004 encoding conversion (Noah Misch)\n     </para>\n\n     <para>\n      This fixes some very-low-probability server crash scenarios.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent intermittent hang in interactions of startup process with\n      bgwriter process (Simon Riggs)\n     </para>\n\n     <para>\n      This affected recovery in non-hot-standby cases.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition in relcache init file invalidation (Tom Lane)\n     </para>\n\n     <para>\n      There was a window wherein a new backend process could read a stale init\n      file but miss the inval messages that would tell it the data is stale.\n      The result would be bizarre failures in catalog accesses, typically\n      <quote>could not read block 0 in file ...</> later during startup.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak at end of a GiST index scan (Tom Lane)\n     </para>\n\n     <para>\n      Commands that perform many separate GiST index scans, such as\n      verification of a new GiST-based exclusion constraint on a table\n      already containing many rows, could transiently require large amounts of\n      memory due to this leak.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect memory accounting (leading to possible memory bloat) in\n      tuplestores supporting holdable cursors and plpgsql's <literal>RETURN\n      NEXT</> command (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix performance problem when constructing a large, lossy bitmap\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix join selectivity estimation for unique columns (Tom Lane)\n     </para>\n\n     <para>\n      This fixes an erroneous planner heuristic that could lead to poor\n      estimates of the result size of a join.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix nested PlaceHolderVar expressions that appear only in sub-select\n      target lists (Tom Lane)\n     </para>\n\n     <para>\n      This mistake could result in outputs of an outer join incorrectly\n      appearing as NULL.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow nested <literal>EXISTS</> queries to be optimized properly (Tom\n      Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix array- and path-creating functions to ensure padding bytes are\n      zeroes (Tom Lane)\n     </para>\n\n     <para>\n      This avoids some situations where the planner will think that\n      semantically-equal constants are not equal, resulting in poor\n      optimization.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>EXPLAIN</> to handle gating Result nodes within\n      inner-indexscan subplans (Tom Lane)\n     </para>\n\n     <para>\n      The usual symptom of this oversight was <quote>bogus varno</> errors.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Work around gcc 4.6.0 bug that breaks WAL replay (Tom Lane)\n     </para>\n\n     <para>\n      This could lead to loss of committed transactions after a server crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix dump bug for <literal>VALUES</> in a view (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <literal>SELECT FOR UPDATE/SHARE</> on sequences (Tom Lane)\n     </para>\n\n     <para>\n      This operation doesn't work as expected and can lead to failures.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>VACUUM</> so that it always updates\n      <literal>pg_class</>.<literal>reltuples</>/<literal>relpages</> (Tom\n      Lane)\n     </para>\n\n     <para>\n      This fixes some scenarios where autovacuum could make increasingly poor\n      decisions about when to vacuum tables.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Defend against integer overflow when computing size of a hash table (Tom\n      Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix cases where <command>CLUSTER</> might attempt to access\n      already-removed TOAST data (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix portability bugs in use of credentials control messages for\n      <quote>peer</> authentication (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix SSPI login when multiple roundtrips are required (Ahmed Shinwari,\n      Magnus Hagander)\n     </para>\n\n     <para>\n      The typical symptom of this problem was <quote>The function requested is\n      not supported</> errors during SSPI login.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Throw an error if <filename>pg_hba.conf</> contains <literal>hostssl</>\n      but SSL is disabled (Tom Lane)\n     </para>\n\n     <para>\n      This was concluded to be more user-friendly than the previous behavior\n      of silently ignoring such lines.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix typo in <function>pg_srand48</> seed initialization (Andres Freund)\n     </para>\n\n     <para>\n      This led to failure to use all bits of the provided seed.  This function\n      is not used on most platforms (only those without <function>srandom</>),\n      and the potential security exposure from a less-random-than-expected\n      seed seems minimal in any case.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid integer overflow when the sum of <literal>LIMIT</> and\n      <literal>OFFSET</> values exceeds 2^63 (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add overflow checks to <type>int4</> and <type>int8</> versions of\n      <function>generate_series()</> (Robert Haas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix trailing-zero removal in <function>to_char()</> (Marti Raudsepp)\n     </para>\n\n     <para>\n      In a format with <literal>FM</> and no digit positions\n      after the decimal point, zeroes to the left of the decimal point could\n      be removed incorrectly.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>pg_size_pretty()</> to avoid overflow for inputs close to\n      2^63 (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Weaken plpgsql's check for typmod matching in record values (Tom Lane)\n     </para>\n\n     <para>\n      An overly enthusiastic check could lead to discarding length modifiers\n      that should have been kept.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Correctly handle quotes in locale names during <application>initdb</>\n      (Heikki Linnakangas)\n     </para>\n\n     <para>\n      The case can arise with some Windows locales, such as <quote>People's\n      Republic of China</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_upgrade</> to preserve toast tables' relfrozenxids\n      during an upgrade from 8.3 (Bruce Momjian)\n     </para>\n\n     <para>\n      Failure to do this could lead to <filename>pg_clog</> files being\n      removed too soon after the upgrade.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>pg_ctl</>, support silent mode for service registrations\n      on Windows (MauMau)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>psql</>'s counting of script file line numbers during\n      <literal>COPY</> from a different file (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</>'s direct-to-database mode for\n      <varname>standard_conforming_strings</> (Tom Lane)\n     </para>\n\n     <para>\n      <application>pg_restore</> could emit incorrect commands when restoring\n      directly to a database server from an archive file that had been made\n      with <varname>standard_conforming_strings</> set to <literal>on</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Be more user-friendly about unsupported cases for parallel\n      <application>pg_restore</> (Tom Lane)\n     </para>\n\n     <para>\n      This change ensures that such cases are detected and reported before\n      any restore actions have been taken.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix write-past-buffer-end and memory leak in <application>libpq</>'s\n      LDAP service lookup code (Albe Laurenz)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>libpq</>, avoid failures when using nonblocking I/O\n      and an SSL connection (Martin Pihlak, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve libpq's handling of failures during connection startup\n      (Tom Lane)\n     </para>\n\n     <para>\n      In particular, the response to a server report of <function>fork()</>\n      failure during SSL connection startup is now saner.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <application>libpq</>'s error reporting for SSL failures (Tom\n      Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>PQsetvalue()</> to avoid possible crash when adding a new\n      tuple to a <structname>PGresult</> originally obtained from a server\n      query (Andrew Chernow)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>ecpglib</> write <type>double</> values with 15 digits\n      precision (Akira Kurosawa)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>ecpglib</>, be sure <literal>LC_NUMERIC</> setting is\n      restored after an error (Michael Meskes)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Apply upstream fix for blowfish signed-character bug (CVE-2011-2483)\n      (Tom Lane)\n     </para>\n\n     <para>\n      <filename>contrib/pg_crypto</>'s blowfish encryption code could give\n      wrong results on platforms where char is signed (which is most),\n      leading to encrypted passwords being weaker than they should be.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak in <filename>contrib/seg</> (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>pgstatindex()</> to give consistent results for empty\n      indexes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow building with perl 5.14 (Alex Hunsaker)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update configure script's method for probing existence of system\n      functions (Tom Lane)\n     </para>\n\n     <para>\n      The version of autoconf we used in 8.3 and 8.2 could be fooled by\n      compilers that perform link-time optimization.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted issues with build and install file paths containing spaces\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2011i\n      for DST law changes in Canada, Egypt, Russia, Samoa, and South Sudan.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-8\">\n  <title>Release 8.4.8</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2011-04-18</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.7.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.8</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n   </para>\n\n   <para>\n    However, if your installation was upgraded from a previous major\n    release by running <application>pg_upgrade</>, you should take\n    action to prevent possible data loss due to a now-fixed bug in\n    <application>pg_upgrade</>.  The recommended solution is to run\n    <command>VACUUM FREEZE</> on all TOAST tables.\n    More information is available at <ulink\n    url=\"http://wiki.postgresql.org/wiki/20110408pg_upgrade_fix\">\n    http://wiki.postgresql.org/wiki/20110408pg_upgrade_fix</ulink>.\n   </para>\n\n   <para>\n    Also, if you are upgrading from a version earlier than 8.4.2,\n    see <xref linkend=\"release-8-4-2\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix <application>pg_upgrade</>'s handling of TOAST tables\n      (Bruce Momjian)\n     </para>\n\n     <para>\n      The <structname>pg_class</>.<structfield>relfrozenxid</> value for\n      TOAST tables was not correctly copied into the new installation\n      during <application>pg_upgrade</>.  This could later result in\n      <literal>pg_clog</> files being discarded while they were still\n      needed to validate tuples in the TOAST tables, leading to\n      <quote>could not access status of transaction</> failures.\n     </para>\n\n     <para>\n      This error poses a significant risk of data loss for installations\n      that have been upgraded with <application>pg_upgrade</>.  This patch\n      corrects the problem for future uses of <application>pg_upgrade</>,\n      but does not in itself cure the issue in installations that have been\n      processed with a buggy version of <application>pg_upgrade</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Suppress incorrect <quote>PD_ALL_VISIBLE flag was incorrectly set</>\n      warning (Heikki Linnakangas)\n     </para>\n\n     <para>\n      <command>VACUUM</> would sometimes issue this warning in cases that\n      are actually valid.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow including a composite type in itself (Tom Lane)\n     </para>\n\n     <para>\n      This prevents scenarios wherein the server could recurse infinitely\n      while processing the composite type.  While there are some possible\n      uses for such a structure, they don't seem compelling enough to\n      justify the effort required to make sure it always works safely.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid potential deadlock during catalog cache initialization\n      (Nikhil Sontakke)\n     </para>\n\n     <para>\n      In some cases the cache loading code would acquire share lock on a\n      system index before locking the index's catalog.  This could deadlock\n      against processes trying to acquire exclusive locks in the other,\n      more standard order.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix dangling-pointer problem in <literal>BEFORE ROW UPDATE</> trigger\n      handling when there was a concurrent update to the target tuple\n      (Tom Lane)\n     </para>\n\n     <para>\n      This bug has been observed to result in intermittent <quote>cannot\n      extract system attribute from virtual tuple</> failures while trying to\n      do <literal>UPDATE RETURNING ctid</>.  There is a very small probability\n      of more serious errors, such as generating incorrect index entries for\n      the updated tuple.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <command>DROP TABLE</> when there are pending deferred trigger\n      events for the table (Tom Lane)\n     </para>\n\n     <para>\n      Formerly the <command>DROP</> would go through, leading to\n      <quote>could not open relation with OID nnn</> errors when the\n      triggers were eventually fired.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent crash triggered by constant-false WHERE conditions during\n      GEQO optimization (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve planner's handling of semi-join and anti-join cases\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix selectivity estimation for text search to account for NULLs\n      (Jesper Krogh)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve PL/pgSQL's ability to handle row types with dropped columns\n      (Pavel Stehule)\n     </para>\n\n     <para>\n      This is a back-patch of fixes previously made in 9.0.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/Python memory leak involving array slices (Daniel Popowich)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</> to cope with long lines (over 1KB) in\n      TOC files (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Put in more safeguards against crashing due to division-by-zero\n      with overly enthusiastic compiler optimization (Aurelien Jarno)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Support use of dlopen() in FreeBSD and OpenBSD on MIPS (Tom Lane)\n     </para>\n\n     <para>\n      There was a hard-wired assumption that this system function was not\n      available on MIPS hardware on these systems.  Use a compile-time test\n      instead, since more recent versions have it.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix compilation failures on HP-UX (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix version-incompatibility problem with <application>libintl</> on\n      Windows (Hiroshi Inoue)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix usage of <application>xcopy</> in Windows build scripts to\n      work correctly under Windows 7 (Andrew Dunstan)\n     </para>\n\n     <para>\n      This affects the build scripts only, not installation or usage.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix path separator used by <application>pg_regress</> on Cygwin\n      (Andrew Dunstan)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2011f\n      for DST law changes in Chile, Cuba, Falkland Islands, Morocco, Samoa,\n      and Turkey; also historical corrections for South Australia, Alaska,\n      and Hawaii.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-7\">\n  <title>Release 8.4.7</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2011-01-31</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.6.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.7</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n    However, if you are upgrading from a version earlier than 8.4.2,\n    see <xref linkend=\"release-8-4-2\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Avoid failures when <command>EXPLAIN</> tries to display a simple-form\n      <literal>CASE</> expression (Tom Lane)\n     </para>\n\n     <para>\n      If the <literal>CASE</>'s test expression was a constant, the planner\n      could simplify the <literal>CASE</> into a form that confused the\n      expression-display code, resulting in <quote>unexpected CASE WHEN\n      clause</> errors.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assignment to an array slice that is before the existing range\n      of subscripts (Tom Lane)\n     </para>\n\n     <para>\n      If there was a gap between the newly added subscripts and the first\n      pre-existing subscript, the code miscalculated how many entries needed\n      to be copied from the old array's null bitmap, potentially leading to\n      data corruption or crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid unexpected conversion overflow in planner for very distant date\n      values (Tom Lane)\n     </para>\n\n     <para>\n      The <type>date</> type supports a wider range of dates than can be\n      represented by the <type>timestamp</> types, but the planner assumed it\n      could always convert a date to timestamp with impunity.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</>'s text output for large objects (BLOBs)\n      when <varname>standard_conforming_strings</> is on (Tom Lane)\n     </para>\n\n     <para>\n      Although restoring directly to a database worked correctly, string\n      escaping was incorrect if <application>pg_restore</> was asked for\n      SQL text output and <varname>standard_conforming_strings</> had been\n      enabled in the source database.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix erroneous parsing of <type>tsquery</> values containing\n      <literal>... &amp; !(subexpression) | ...</literal> (Tom Lane)\n     </para>\n\n     <para>\n      Queries containing this combination of operators were not executed\n      correctly.  The same error existed in <filename>contrib/intarray</>'s\n      <type>query_int</> type and <filename>contrib/ltree</>'s\n      <type>ltxtquery</> type.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix buffer overrun in <filename>contrib/intarray</>'s input function\n      for the <type>query_int</> type (Apple)\n     </para>\n\n     <para>\n      This bug is a security risk since the function's return address could\n      be overwritten.  Thanks to Apple Inc's security team for reporting this\n      issue and supplying the fix.  (CVE-2010-4015)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug in <filename>contrib/seg</>'s GiST picksplit algorithm\n      (Alexander Korotkov)\n     </para>\n\n     <para>\n      This could result in considerable inefficiency, though not actually\n      incorrect answers, in a GiST index on a <type>seg</> column.\n      If you have such an index, consider <command>REINDEX</>ing it after\n      installing this update.  (This is identical to the bug that was fixed in\n      <filename>contrib/cube</> in the previous update.)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-6\">\n  <title>Release 8.4.6</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2010-12-16</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.5.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.6</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n    However, if you are upgrading from a version earlier than 8.4.2,\n    see <xref linkend=\"release-8-4-2\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Force the default\n      <link linkend=\"guc-wal-sync-method\"><varname>wal_sync_method</></link>\n      to be <literal>fdatasync</> on Linux (Tom Lane, Marti Raudsepp)\n     </para>\n\n     <para>\n      The default on Linux has actually been <literal>fdatasync</> for many\n      years, but recent kernel changes caused <productname>PostgreSQL</> to\n      choose <literal>open_datasync</> instead.  This choice did not result\n      in any performance improvement, and caused outright failures on\n      certain filesystems, notably <literal>ext4</> with the\n      <literal>data=journal</> mount option.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted bugs in WAL replay logic for GIN indexes (Tom Lane)\n     </para>\n\n     <para>\n      This could result in <quote>bad buffer id: 0</> failures or\n      corruption of index contents during replication.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix recovery from base backup when the starting checkpoint WAL record\n      is not in the same WAL segment as its redo point (Jeff Davis)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix persistent slowdown of autovacuum workers when multiple workers\n      remain active for a long time (Tom Lane)\n     </para>\n\n     <para>\n      The effective <varname>vacuum_cost_limit</> for an autovacuum worker\n      could drop to nearly zero if it processed enough tables, causing it\n      to run extremely slowly.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add support for detecting register-stack overrun on <literal>IA64</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      The <literal>IA64</> architecture has two hardware stacks.  Full\n      prevention of stack-overrun failures requires checking both.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add a check for stack overflow in <function>copyObject()</> (Tom Lane)\n     </para>\n\n     <para>\n      Certain code paths could crash due to stack overflow given a\n      sufficiently complex query.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix detection of page splits in temporary GiST indexes (Heikki\n      Linnakangas)\n     </para>\n\n     <para>\n      It is possible to have a <quote>concurrent</> page split in a\n      temporary index, if for example there is an open cursor scanning the\n      index when an insertion is done.  GiST failed to detect this case and\n      hence could deliver wrong results when execution of the cursor\n      continued.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix error checking during early connection processing (Tom Lane)\n     </para>\n\n     <para>\n      The check for too many child processes was skipped in some cases,\n      possibly leading to postmaster crash when attempting to add the new\n      child process to fixed-size arrays.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve efficiency of window functions (Tom Lane)\n     </para>\n\n     <para>\n      Certain cases where a large number of tuples needed to be read in\n      advance, but <varname>work_mem</> was large enough to allow them all\n      to be held in memory, were unexpectedly slow.\n      <function>percent_rank()</>, <function>cume_dist()</> and\n      <function>ntile()</> in particular were subject to this problem.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid memory leakage while <command>ANALYZE</>'ing complex index\n      expressions (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure an index that uses a whole-row Var still depends on its table\n      (Tom Lane)\n     </para>\n\n     <para>\n      An index declared like <literal>create index i on t (foo(t.*))</>\n      would not automatically get dropped when its table was dropped.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Do not <quote>inline</> a SQL function with multiple <literal>OUT</>\n      parameters (Tom Lane)\n     </para>\n\n     <para>\n      This avoids a possible crash due to loss of information about the\n      expected result rowtype.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Behave correctly if <literal>ORDER BY</>, <literal>LIMIT</>,\n      <literal>FOR UPDATE</>, or <literal>WITH</> is attached to the\n      <literal>VALUES</> part of <literal>INSERT ... VALUES</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix constant-folding of <literal>COALESCE()</> expressions (Tom Lane)\n     </para>\n\n     <para>\n      The planner would sometimes attempt to evaluate sub-expressions that\n      in fact could never be reached, possibly leading to unexpected errors.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix postmaster crash when connection acceptance\n      (<function>accept()</> or one of the calls made immediately after it)\n      fails, and the postmaster was compiled with GSSAPI support (Alexander\n      Chernikov)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix missed unlink of temporary files when <varname>log_temp_files</>\n      is active (Tom Lane)\n     </para>\n\n     <para>\n      If an error occurred while attempting to emit the log message, the\n      unlink was not done, resulting in accumulation of temp files.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add print functionality for <structname>InhRelation</> nodes (Tom Lane)\n     </para>\n\n     <para>\n      This avoids a failure when <varname>debug_print_parse</> is enabled\n      and certain types of query are executed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect calculation of distance from a point to a horizontal\n      line segment (Tom Lane)\n     </para>\n\n     <para>\n      This bug affected several different geometric distance-measurement\n      operators.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect calculation of transaction status in\n      <application>ecpg</> (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>PL/pgSQL</>'s handling of <quote>simple</>\n      expressions to not fail in recursion or error-recovery cases (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>PL/Python</>'s handling of set-returning functions\n      (Jan Urbanski)\n     </para>\n\n     <para>\n      Attempts to call SPI functions within the iterator generating a set\n      result would fail.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug in <filename>contrib/cube</>'s GiST picksplit algorithm\n      (Alexander Korotkov)\n     </para>\n\n     <para>\n      This could result in considerable inefficiency, though not actually\n      incorrect answers, in a GiST index on a <type>cube</> column.\n      If you have such an index, consider <command>REINDEX</>ing it after\n      installing this update.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't emit <quote>identifier will be truncated</> notices in\n      <filename>contrib/dblink</> except when creating new connections\n      (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix potential coredump on missing public key in\n      <filename>contrib/pgcrypto</> (Marti Raudsepp)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak in <filename>contrib/xml2</>'s XPath query functions\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2010o\n      for DST law changes in Fiji and Samoa;\n      also historical corrections for Hong Kong.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-5\">\n  <title>Release 8.4.5</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2010-10-04</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.4.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.5</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n    However, if you are upgrading from a version earlier than 8.4.2,\n    see <xref linkend=\"release-8-4-2\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Use a separate interpreter for each calling SQL userid in PL/Perl and\n      PL/Tcl (Tom Lane)\n     </para>\n\n     <para>\n      This change prevents security problems that can be caused by subverting\n      Perl or Tcl code that will be executed later in the same session under\n      another SQL user identity (for example, within a <literal>SECURITY\n      DEFINER</> function).  Most scripting languages offer numerous ways that\n      that might be done, such as redefining standard functions or operators\n      called by the target function.  Without this change, any SQL user with\n      Perl or Tcl language usage rights can do essentially anything with the\n      SQL privileges of the target function's owner.\n     </para>\n\n     <para>\n      The cost of this change is that intentional communication among Perl\n      and Tcl functions becomes more difficult.  To provide an escape hatch,\n      PL/PerlU and PL/TclU functions continue to use only one interpreter\n      per session.  This is not considered a security issue since all such\n      functions execute at the trust level of a database superuser already.\n     </para>\n\n     <para>\n      It is likely that third-party procedural languages that claim to offer\n      trusted execution have similar security issues.  We advise contacting\n      the authors of any PL you are depending on for security-critical\n      purposes.\n     </para>\n\n     <para>\n      Our thanks to Tim Bunce for pointing out this issue (CVE-2010-3433).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent possible crashes in <function>pg_get_expr()</> by disallowing\n      it from being called with an argument that is not one of the system\n      catalog columns it's intended to be used with\n      (Heikki Linnakangas, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Treat exit code 128 (<literal>ERROR_WAIT_NO_CHILDREN</>) as non-fatal on\n      Windows (Magnus Hagander)\n     </para>\n\n     <para>\n      Under high load, Windows processes will sometimes fail at startup with\n      this error code.  Formerly the postmaster treated this as a panic\n      condition and restarted the whole database, but that seems to be\n      an overreaction.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect placement of placeholder evaluation (Tom Lane)\n     </para>\n\n     <para>\n      This bug could result in query outputs being non-null when they\n      should be null, in cases where the inner side of an outer join\n      is a sub-select with non-strict expressions in its output list.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible duplicate scans of <literal>UNION ALL</> member relations\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <quote>cannot handle unplanned sub-select</quote> error (Tom Lane)\n     </para>\n\n     <para>\n      This occurred when a sub-select contains a join alias reference that\n      expands into an expression containing another sub-select.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix mishandling of whole-row Vars that reference a view or sub-select\n      and appear within a nested sub-select (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix mishandling of cross-type <literal>IN</> comparisons (Tom Lane)\n     </para>\n\n     <para>\n      This could result in failures if the planner tried to implement an\n      <literal>IN</> join with a sort-then-unique-then-plain-join plan.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix computation of <command>ANALYZE</> statistics for <type>tsvector</>\n      columns (Jan Urbanski)\n     </para>\n\n     <para>\n      The original coding could produce incorrect statistics, leading to\n      poor plan choices later.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve planner's estimate of memory used by <function>array_agg()</>,\n      <function>string_agg()</>, and similar aggregate functions\n      (Hitoshi Harada)\n     </para>\n\n     <para>\n      The previous drastic underestimate could lead to out-of-memory failures\n      due to inappropriate choice of a hash-aggregation plan.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix failure to mark cached plans as transient (Tom Lane)\n     </para>\n\n     <para>\n      If a plan is prepared while <command>CREATE INDEX CONCURRENTLY</> is\n      in progress for one of the referenced tables, it is supposed to be\n      re-planned once the index is ready for use.  This was not happening\n      reliably.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Reduce PANIC to ERROR in some occasionally-reported btree failure cases,\n      and provide additional detail in the resulting error messages\n      (Tom Lane)\n     </para>\n\n     <para>\n      This should improve the system's robustness with corrupted indexes.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect search logic for partial-match queries with GIN indexes\n      (Tom Lane)\n     </para>\n\n     <para>\n      Cases involving AND/OR combination of several GIN index conditions\n      didn't always give the right answer, and were sometimes much slower\n      than necessary.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent show_session_authorization() from crashing within autovacuum\n      processes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Defend against functions returning setof record where not all the\n      returned rows are actually of the same rowtype (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible corruption of pending trigger event lists during\n      subtransaction rollback (Tom Lane)\n     </para>\n\n     <para>\n      This could lead to a crash or incorrect firing of triggers.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible failure when hashing a pass-by-reference function result\n      (Tao Ma, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve merge join's handling of NULLs in the join columns (Tom Lane)\n     </para>\n\n     <para>\n      A merge join can now stop entirely upon reaching the first NULL,\n      if the sort order is such that NULLs sort high.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Take care to fsync the contents of lockfiles (both\n      <filename>postmaster.pid</> and the socket lockfile) while writing them\n      (Tom Lane)\n     </para>\n\n     <para>\n      This omission could result in corrupted lockfile contents if the\n      machine crashes shortly after postmaster start.  That could in turn\n      prevent subsequent attempts to start the postmaster from succeeding,\n      until the lockfile is manually removed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid recursion while assigning XIDs to heavily-nested\n      subtransactions (Andres Freund, Robert Haas)\n     </para>\n\n     <para>\n      The original coding could result in a crash if there was limited\n      stack space.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid holding open old WAL segments in the walwriter process\n      (Magnus Hagander, Heikki Linnakangas)\n     </para>\n\n     <para>\n      The previous coding would prevent removal of no-longer-needed segments.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <varname>log_line_prefix</>'s <literal>%i</> escape,\n      which could produce junk early in backend startup (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent misinterpretation of partially-specified relation options\n      for TOAST tables (Itagaki Takahiro)\n     </para>\n\n     <para>\n      In particular, <literal>fillfactor</> would be read as zero if any\n      other reloption had been set for the table, leading to serious bloat.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix inheritance count tracking in <command>ALTER TABLE ... ADD\n      CONSTRAINT</> (Robert Haas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible data corruption in <command>ALTER TABLE ... SET\n      TABLESPACE</> when archiving is enabled (Jeff Davis)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow <command>CREATE DATABASE</> and <command>ALTER DATABASE ... SET\n      TABLESPACE</> to be interrupted by query-cancel (Guillaume Lelarge)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <command>CREATE INDEX</>'s checking of whether proposed index\n      expressions are immutable (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>REASSIGN OWNED</> to handle operator classes and families\n      (Asko Tiidumaa)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible core dump when comparing two empty <type>tsquery</> values\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <literal>LIKE</>'s handling of patterns containing <literal>%</>\n      followed by <literal>_</> (Tom Lane)\n     </para>\n\n     <para>\n      We've fixed this before, but there were still some incorrectly-handled\n      cases.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Re-allow input of Julian dates prior to 0001-01-01 AD (Tom Lane)\n     </para>\n\n     <para>\n      Input such as <literal>'J100000'::date</> worked before 8.4,\n      but was unintentionally broken by added error-checking.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/pgSQL to throw an error, not crash, if a cursor is closed within\n      a <literal>FOR</> loop that is iterating over that cursor\n      (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In PL/Python, defend against null pointer results from\n      <function>PyCObject_AsVoidPtr</> and <function>PyCObject_FromVoidPtr</>\n      (Peter Eisentraut)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>libpq</>, fix full SSL certificate verification for the\n      case where both <literal>host</> and <literal>hostaddr</> are specified\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make psql recognize <command>DISCARD ALL</> as a command that should\n      not be encased in a transaction block in autocommit-off mode\n      (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix some issues in <application>pg_dump</>'s handling of SQL/MED objects\n      (Tom Lane)\n     </para>\n\n     <para>\n      Notably, <application>pg_dump</> would always fail if run by a\n      non-superuser, which was not intended.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <application>pg_dump</> and <application>pg_restore</>'s\n      handling of non-seekable archive files (Tom Lane, Robert Haas)\n     </para>\n\n     <para>\n      This is important for proper functioning of parallel restore.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve parallel pg_restore's ability to cope with selective restore\n      (<literal>-L</> option) (Tom Lane)\n     </para>\n\n     <para>\n      The original code tended to fail if the <literal>-L</> file commanded\n      a non-default restore ordering.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</> to process data from <literal>RETURNING</>\n      clauses correctly (Michael Meskes)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix some memory leaks in <application>ecpg</> (Zoltan Boszormenyi)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <filename>contrib/dblink</>'s handling of tables containing\n      dropped columns (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix connection leak after <quote>duplicate connection name</quote>\n      errors in <filename>contrib/dblink</> (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/dblink</> to handle connection names longer than\n      62 bytes correctly (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add <function>hstore(text, text)</>\n      function to <filename>contrib/hstore</> (Robert Haas)\n     </para>\n\n     <para>\n      This function is the recommended substitute for the now-deprecated\n      <literal>=&gt;</> operator.  It was back-patched so that future-proofed\n      code can be used with older server versions.  Note that the patch will\n      be effective only after <filename>contrib/hstore</> is installed or\n      reinstalled in a particular database.  Users might prefer to execute\n      the <command>CREATE FUNCTION</> command by hand, instead.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update build infrastructure and documentation to reflect the source code\n      repository's move from CVS to Git (Magnus Hagander and others)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2010l\n      for DST law changes in Egypt and Palestine; also historical corrections\n      for Finland.\n     </para>\n\n     <para>\n      This change also adds new names for two Micronesian timezones:\n      Pacific/Chuuk is now preferred over Pacific/Truk (and the preferred\n      abbreviation is CHUT not TRUT) and Pacific/Pohnpei is preferred over\n      Pacific/Ponape.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make Windows' <quote>N. Central Asia Standard Time</> timezone map to\n      Asia/Novosibirsk, not Asia/Almaty (Magnus Hagander)\n     </para>\n\n     <para>\n      Microsoft changed the DST behavior of this zone in the timezone update\n      from KB976098. Asia/Novosibirsk is a better match to its new behavior.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-4\">\n  <title>Release 8.4.4</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2010-05-17</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.3.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.4</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n    However, if you are upgrading from a version earlier than 8.4.2,\n    see <xref linkend=\"release-8-4-2\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Enforce restrictions in <literal>plperl</> using an opmask applied to\n      the whole interpreter, instead of using <filename>Safe.pm</>\n      (Tim Bunce, Andrew Dunstan)\n     </para>\n\n     <para>\n      Recent developments have convinced us that <filename>Safe.pm</> is too\n      insecure to rely on for making <literal>plperl</> trustable.  This\n      change removes use of <filename>Safe.pm</> altogether, in favor of using\n      a separate interpreter with an opcode mask that is always applied.\n      Pleasant side effects of the change include that it is now possible to\n      use Perl's <literal>strict</> pragma in a natural way in\n      <literal>plperl</>, and that Perl's <literal>$a</> and <literal>$b</>\n      variables work as expected in sort routines, and that function\n      compilation is significantly faster.  (CVE-2010-1169)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent PL/Tcl from executing untrustworthy code from\n      <structname>pltcl_modules</> (Tom)\n     </para>\n\n     <para>\n      PL/Tcl's feature for autoloading Tcl code from a database table\n      could be exploited for trojan-horse attacks, because there was no\n      restriction on who could create or insert into that table.  This change\n      disables the feature unless <structname>pltcl_modules</> is owned by a\n      superuser.  (However, the permissions on the table are not checked, so\n      installations that really need a less-than-secure modules table can\n      still grant suitable privileges to trusted non-superusers.)  Also,\n      prevent loading code into the unrestricted <quote>normal</> Tcl\n      interpreter unless we are really going to execute a <literal>pltclu</>\n      function.  (CVE-2010-1170)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix data corruption during WAL replay of\n      <literal>ALTER ... SET TABLESPACE</> (Tom)\n     </para>\n\n     <para>\n      When <varname>archive_mode</> is on, <literal>ALTER ... SET TABLESPACE</>\n      generates a WAL record whose replay logic was incorrect.  It could write\n      the data to the wrong place, leading to possibly-unrecoverable data\n      corruption.  Data corruption would be observed on standby slaves, and\n      could occur on the master as well if a database crash and recovery\n      occurred after committing the <literal>ALTER</> and before the next\n      checkpoint.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash if a cache reset message is received during\n      rebuild of a relcache entry (Heikki)\n     </para>\n\n     <para>\n      This error was introduced in 8.4.3 while fixing a related failure.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Apply per-function GUC settings while running the language validator\n      for the function (Itagaki Takahiro)\n     </para>\n\n     <para>\n      This avoids failures if the function's code is invalid without the\n      setting; an example is that SQL functions may not parse if the\n      <varname>search_path</> is not correct.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Do constraint exclusion for inherited <command>UPDATE</> and\n      <command>DELETE</> target tables when\n      <varname>constraint_exclusion</> = <literal>partition</> (Tom)\n     </para>\n\n     <para>\n      Due to an oversight, this setting previously only caused constraint\n      exclusion to be checked in <command>SELECT</> commands.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Do not allow an unprivileged user to reset superuser-only parameter\n      settings (Alvaro)\n     </para>\n\n     <para>\n      Previously, if an unprivileged user ran <literal>ALTER USER ... RESET\n      ALL</> for himself, or <literal>ALTER DATABASE ... RESET ALL</> for\n      a database he owns, this would remove all special parameter settings\n      for the user or database, even ones that are only supposed to be\n      changeable by a superuser.  Now, the <command>ALTER</> will only\n      remove the parameters that the user has permission to change.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid possible crash during backend shutdown if shutdown occurs\n      when a <literal>CONTEXT</> addition would be made to log entries (Tom)\n     </para>\n\n     <para>\n      In some cases the context-printing function would fail because the\n      current transaction had already been rolled back when it came time\n      to print a log message.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix erroneous handling of <literal>%r</> parameter in\n      <varname>recovery_end_command</> (Heikki)\n     </para>\n\n     <para>\n      The value always came out zero.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure the archiver process responds to changes in\n      <varname>archive_command</> as soon as possible (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/pgSQL's <literal>CASE</> statement to not fail when the\n      case expression is a query that returns no rows (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update PL/Perl's <filename>ppport.h</> for modern Perl versions\n      (Andrew)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted memory leaks in PL/Python (Andreas Freund, Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Handle empty-string connect parameters properly in ecpg (Michael)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent infinite recursion in <application>psql</> when expanding\n      a variable that refers to itself (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>psql</>'s <literal>\\copy</> to not add spaces around\n      a dot within <literal>\\copy (select ...)</> (Tom)\n     </para>\n\n     <para>\n      Addition of spaces around the decimal point in a numeric literal would\n      result in a syntax error.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid formatting failure in <application>psql</> when running in a\n      locale context that doesn't match the <varname>client_encoding</>\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix unnecessary <quote>GIN indexes do not support whole-index scans</>\n      errors for unsatisfiable queries using <filename>contrib/intarray</>\n      operators (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that <filename>contrib/pgstattuple</> functions respond to cancel\n      interrupts promptly (Tatsuhito Kasahara)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make server startup deal properly with the case that\n      <function>shmget()</> returns <literal>EINVAL</> for an existing\n      shared memory segment (Tom)\n     </para>\n\n     <para>\n      This behavior has been observed on BSD-derived kernels including macOS.\n      It resulted in an entirely-misleading startup failure complaining that\n      the shared memory request size was too large.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid possible crashes in syslogger process on Windows (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Deal more robustly with incomplete time zone information in the\n      Windows registry (Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update the set of known Windows time zone names (Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2010j\n      for DST law changes in Argentina, Australian Antarctic, Bangladesh,\n      Mexico, Morocco, Pakistan, Palestine, Russia, Syria, Tunisia;\n      also historical corrections for Taiwan.\n     </para>\n\n     <para>\n      Also, add <literal>PKST</> (Pakistan Summer Time) to the default set of\n      timezone abbreviations.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-3\">\n  <title>Release 8.4.3</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2010-03-15</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.2.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.3</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n    However, if you are upgrading from a version earlier than 8.4.2,\n    see <xref linkend=\"release-8-4-2\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Add new configuration parameter <varname>ssl_renegotiation_limit</> to\n      control how often we do session key renegotiation for an SSL connection\n      (Magnus)\n     </para>\n\n     <para>\n      This can be set to zero to disable renegotiation completely, which may\n      be required if a broken SSL library is used.  In particular, some\n      vendors are shipping stopgap patches for CVE-2009-3555 that cause\n      renegotiation attempts to fail.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible deadlock during backend startup (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crashes due to not handling errors during relcache reload\n      cleanly (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash due to use of dangling pointer to a cached plan\n      (Tatsuo)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash due to overenthusiastic invalidation of cached\n      plan for <command>ROLLBACK</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crashes when trying to recover from a failure in\n      subtransaction start (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix server memory leak associated with use of savepoints and a client\n      encoding different from server's encoding (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect WAL data emitted during end-of-recovery cleanup of a GIST\n      index page split (Yoichi Hirai)\n     </para>\n\n     <para>\n      This would result in index corruption, or even more likely an error\n      during WAL replay, if we were unlucky enough to crash during\n      end-of-recovery cleanup after having completed an incomplete GIST\n      insertion.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug in WAL redo cleanup method for GIN indexes (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect comparison of scan key in GIN index search (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <function>substring()</> for <type>bit</> types treat any negative\n      length as meaning <quote>all the rest of the string</> (Tom)\n     </para>\n\n     <para>\n      The previous coding treated only -1 that way, and would produce an\n      invalid result value for other negative values, possibly leading to\n      a crash (CVE-2010-0442).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix integer-to-bit-string conversions to handle the first fractional\n      byte correctly when the output bit width is wider than the given\n      integer by something other than a multiple of 8 bits (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix some cases of pathologically slow regular expression matching (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug occurring when trying to inline a SQL function that returns\n      a set of a composite type that contains dropped columns (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug with trying to update a field of an element of a\n      composite-type array column (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid failure when <command>EXPLAIN</> has to print a FieldStore or\n      assignment ArrayRef expression (Tom)\n     </para>\n\n     <para>\n      These cases can arise now that <command>EXPLAIN VERBOSE</> tries to\n      print plan node target lists.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid an unnecessary coercion failure in some cases where an undecorated\n      literal string appears in a subquery within\n      <command>UNION</>/<command>INTERSECT</>/<command>EXCEPT</> (Tom)\n     </para>\n\n     <para>\n      This fixes a regression for some cases that worked before 8.4.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid undesirable rowtype compatibility check failures in some cases\n      where a whole-row Var has a rowtype that contains dropped columns (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix the <literal>STOP WAL LOCATION</> entry in backup history files to\n      report the next WAL segment's name when the end location is exactly at a\n      segment boundary (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Always pass the catalog ID to an option validator function specified in\n      <command>CREATE FOREIGN DATA WRAPPER</> (Martin Pihlak)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix some more cases of temporary-file leakage (Heikki)\n     </para>\n\n     <para>\n      This corrects a problem introduced in the previous minor release.\n      One case that failed is when a plpgsql function returning set is\n      called within another function's exception handler.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add support for doing <literal>FULL JOIN ON FALSE</> (Tom)\n     </para>\n\n     <para>\n      This prevents a regression from pre-8.4 releases for some queries that\n      can now be simplified to a constant-false join condition.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve constraint exclusion processing of boolean-variable cases,\n      in particular make it possible to exclude a partition that has a\n      <quote>bool_column = false</> constraint (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent treating an <literal>INOUT</> cast as representing binary\n      compatibility (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Include column name in the message when warning about inability to\n      grant or revoke column-level privileges (Stephen Frost)\n     </para>\n\n     <para>\n      This is more useful than before and helps to prevent confusion when\n      a <command>REVOKE</> generates multiple messages, which formerly\n      appeared to be duplicates.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      When reading <filename>pg_hba.conf</> and related files, do not treat\n      <literal>@something</> as a file inclusion request if the <literal>@</>\n      appears inside quote marks; also, never treat <literal>@</> by itself\n      as a file inclusion request (Tom)\n     </para>\n\n     <para>\n      This prevents erratic behavior if a role or database name starts with\n      <literal>@</>.  If you need to include a file whose path name\n      contains spaces, you can still do so, but you must write\n      <literal>@\"/path to/file\"</> rather than putting the quotes around\n      the whole construct.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent infinite loop on some platforms if a directory is named as\n      an inclusion target in <filename>pg_hba.conf</> and related files\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible infinite loop if <function>SSL_read</> or\n      <function>SSL_write</> fails without setting <varname>errno</> (Tom)\n     </para>\n\n     <para>\n      This is reportedly possible with some Windows versions of\n      <application>openssl</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <acronym>GSSAPI</> authentication on local connections,\n      since it requires a hostname to function correctly (Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Protect <application>ecpg</> against applications freeing strings\n      unexpectedly (Michael)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>ecpg</> report the proper SQLSTATE if the connection\n      disappears (Michael)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix translation of cell contents in <application>psql</> <literal>\\d</>\n      output (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>psql</>'s <literal>numericlocale</> option to not\n      format strings it shouldn't in latex and troff output formats (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix a small per-query memory leak in <application>psql</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>psql</> return the correct exit status (3) when\n      <literal>ON_ERROR_STOP</> and <literal>--single-transaction</> are\n      both specified and an error occurs during the implied <command>COMMIT</>\n      (Bruce)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_dump</>'s output of permissions for foreign servers\n      (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash in parallel <application>pg_restore</> due to\n      out-of-range dependency IDs (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix plpgsql failure in one case where a composite column is set to NULL\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible failure when calling PL/Perl functions from PL/PerlU\n      or vice versa (Tim Bunce)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add <literal>volatile</> markings in PL/Python to avoid possible\n      compiler-specific misbehavior (Zdenek Kotala)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure PL/Tcl initializes the Tcl interpreter fully (Tom)\n     </para>\n\n     <para>\n      The only known symptom of this oversight is that the Tcl\n      <literal>clock</> command misbehaves if using Tcl 8.5 or later.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent <function>ExecutorEnd</> from being run on portals created\n      within a failed transaction or subtransaction (Tom)\n     </para>\n\n     <para>\n      This is known to cause issues when using\n      <filename>contrib/auto_explain</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent crash in <filename>contrib/dblink</> when too many key\n      columns are specified to a <function>dblink_build_sql_*</> function\n      (Rushabh Lathia, Joe Conway)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow zero-dimensional arrays in <filename>contrib/ltree</> operations\n      (Tom)\n     </para>\n\n     <para>\n      This case was formerly rejected as an error, but it's more convenient to\n      treat it the same as a zero-element array.  In particular this avoids\n      unnecessary failures when an <type>ltree</> operation is applied to the\n      result of <literal>ARRAY(SELECT ...)</> and the sub-select returns no\n      rows.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted crashes in <filename>contrib/xml2</> caused by sloppy\n      memory management (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make building of <filename>contrib/xml2</> more robust on Windows\n      (Andrew)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition in Windows signal handling (Radu Ilie)\n     </para>\n\n     <para>\n      One known symptom of this bug is that rows in <structname>pg_listener</>\n      could be dropped under heavy load.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make the configure script report failure if the C compiler does\n      not provide a working 64-bit integer datatype (Tom)\n     </para>\n\n     <para>\n      This case has been broken for some time, and no longer seems worth\n      supporting, so just reject it at configure time instead.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2010e\n      for DST law changes in Bangladesh, Chile, Fiji, Mexico, Paraguay, Samoa.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-2\">\n  <title>Release 8.4.2</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2009-12-14</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.1.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.2</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n    However, if you have any hash indexes,\n    you should <command>REINDEX</> them after updating to 8.4.2,\n    to repair possible damage.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Protect against indirect security threats caused by index functions\n      changing session-local state (Gurjeet Singh, Tom)\n     </para>\n\n     <para>\n      This change prevents allegedly-immutable index functions from possibly\n      subverting a superuser's session (CVE-2009-4136).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Reject SSL certificates containing an embedded null byte in the common\n      name (CN) field (Magnus)\n     </para>\n\n     <para>\n      This prevents unintended matching of a certificate to a server or client\n      name during SSL validation (CVE-2009-4034).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix hash index corruption (Tom)\n     </para>\n\n     <para>\n      The 8.4 change that made hash indexes keep entries sorted by hash value\n      failed to update the bucket splitting and compaction routines to\n      preserve the ordering.  So application of either of those operations\n      could lead to permanent corruption of an index, in the sense that\n      searches might fail to find entries that are present.  To deal with\n      this, it is recommended to <literal>REINDEX</> any hash indexes you may\n      have after installing this update.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash during backend-startup-time cache initialization (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid crash on empty thesaurus dictionary (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent signals from interrupting <literal>VACUUM</> at unsafe times\n      (Alvaro)\n     </para>\n\n     <para>\n      This fix prevents a PANIC if a <literal>VACUUM FULL</> is canceled\n      after it's already committed its tuple movements, as well as transient\n      errors if a plain <literal>VACUUM</> is interrupted after having\n      truncated the table.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash due to integer overflow in hash table size\n      calculation (Tom)\n     </para>\n\n     <para>\n      This could occur with extremely large planner estimates for the size of\n      a hashjoin's result.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix crash if a <literal>DROP</> is attempted on an internally-dependent\n      object (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix very rare crash in <type>inet</>/<type>cidr</> comparisons (Chris\n      Mikkelson)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that shared tuple-level locks held by prepared transactions are\n      not ignored (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix premature drop of temporary files used for a cursor that is accessed\n      within a subtransaction (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak in syslogger process when rotating to a new CSV logfile\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak in postmaster when re-parsing <filename>pg_hba.conf</>\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix Windows permission-downgrade logic (Jesse Morris)\n     </para>\n\n     <para>\n      This fixes some cases where the database failed to start on Windows,\n      often with misleading error messages such as <quote>could not locate\n      matching postgres executable</quote>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <literal>FOR UPDATE/SHARE</> in the primary query not propagate\n      into <literal>WITH</> queries (Tom)\n     </para>\n\n     <para>\n      For example, in\n<programlisting>\nWITH w AS (SELECT * FROM foo) SELECT * FROM w, bar ... FOR UPDATE\n</programlisting>\n      the <literal>FOR UPDATE</> will now affect <literal>bar</> but not\n      <literal>foo</>.  This is more useful and consistent than the original\n      8.4 behavior, which tried to propagate <literal>FOR UPDATE</> into the\n      <literal>WITH</> query but always failed due to assorted implementation\n      restrictions.  It also follows the design rule that <literal>WITH</>\n      queries are executed as if independent of the main query.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug with a <literal>WITH RECURSIVE</> query immediately inside\n      another one (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix concurrency bug in hash indexes (Tom)\n     </para>\n\n     <para>\n      Concurrent insertions could cause index scans to transiently report\n      wrong results.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect logic for GiST index page splits, when the split depends\n      on a non-first column of the index (Paul Ramsey)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix wrong search results for a multi-column GIN index with\n      <literal>fastupdate</> enabled (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bugs in WAL entry creation for GIN indexes (Tom)\n     </para>\n\n     <para>\n      These bugs were masked when <varname>full_page_writes</> was on, but\n      with it off a WAL replay failure was certain if a crash occurred before\n      the next checkpoint.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't error out if recycling or removing an old WAL file fails at the\n      end of checkpoint (Heikki)\n     </para>\n\n     <para>\n      It's better to treat the problem as non-fatal and allow the checkpoint\n      to complete.  Future checkpoints will retry the removal.  Such problems\n      are not expected in normal operation, but have been seen to be\n      caused by misdesigned Windows anti-virus and backup software.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure WAL files aren't repeatedly archived on Windows (Heikki)\n     </para>\n\n     <para>\n      This is another symptom that could happen if some other process\n      interfered with deletion of a no-longer-needed file.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PAM password processing to be more robust (Tom)\n     </para>\n\n     <para>\n      The previous code is known to fail with the combination of the Linux\n      <literal>pam_krb5</> PAM module with Microsoft Active Directory as the\n      domain controller.  It might have problems elsewhere too, since it was\n      making unjustified assumptions about what arguments the PAM stack would\n      pass to it.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Raise the maximum authentication token (Kerberos ticket) size in GSSAPI\n      and SSPI authentication methods (Ian Turner)\n     </para>\n\n     <para>\n      While the old 2000-byte limit was more than enough for Unix Kerberos\n      implementations, tickets issued by Windows Domain Controllers can be\n      much larger.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that domain constraints are enforced in constructs like\n      <literal>ARRAY[...]::domain</>, where the domain is over an array type\n      (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix foreign-key logic for some cases involving composite-type columns\n      as foreign keys (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that a cursor's snapshot is not modified after it is created\n      (Alvaro)\n     </para>\n\n     <para>\n      This could lead to a cursor delivering wrong results if later operations\n      in the same transaction modify the data the cursor is supposed to return.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <literal>CREATE TABLE</> to properly merge default expressions\n      coming from different inheritance parent tables (Tom)\n     </para>\n\n     <para>\n      This used to work but was broken in 8.4.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Re-enable collection of access statistics for sequences (Akira Kurosawa)\n     </para>\n\n     <para>\n      This used to work but was broken in 8.3.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix processing of ownership dependencies during <literal>CREATE OR\n      REPLACE FUNCTION</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect handling of <literal>WHERE</>\n      <replaceable>x</>=<replaceable>x</> conditions (Tom)\n     </para>\n\n     <para>\n      In some cases these could get ignored as redundant, but they aren't\n      &mdash; they're equivalent to <replaceable>x</> <literal>IS NOT NULL</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect plan construction when using hash aggregation to implement\n      <literal>DISTINCT</> for textually identical volatile expressions (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix Assert failure for a volatile <literal>SELECT DISTINCT ON</>\n      expression (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>ts_stat()</> to not fail on an empty <type>tsvector</>\n      value (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make text search parser accept underscores in XML attributes (Peter)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix encoding handling in <type>xml</> binary input (Heikki)\n     </para>\n\n     <para>\n      If the XML header doesn't specify an encoding, we now assume UTF-8 by\n      default; the previous handling was inconsistent.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug with calling <literal>plperl</> from <literal>plperlu</> or vice\n      versa (Tom)\n     </para>\n\n     <para>\n      An error exit from the inner function could result in crashes due to\n      failure to re-select the correct Perl interpreter for the outer function.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix session-lifespan memory leak when a PL/Perl function is redefined\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that Perl arrays are properly converted to\n      <productname>PostgreSQL</> arrays when returned by a set-returning\n      PL/Perl function (Andrew Dunstan, Abhijit Menon-Sen)\n     </para>\n\n     <para>\n      This worked correctly already for non-set-returning functions.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix rare crash in exception processing in PL/Python (Peter)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</> problem with comments in <literal>DECLARE\n      CURSOR</> statements (Michael)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</> to not treat recently-added keywords as\n      reserved words (Tom)\n     </para>\n\n     <para>\n      This affected the keywords <literal>CALLED</>, <literal>CATALOG</>,\n      <literal>DEFINER</>, <literal>ENUM</>, <literal>FOLLOWING</>,\n      <literal>INVOKER</>, <literal>OPTIONS</>, <literal>PARTITION</>,\n      <literal>PRECEDING</>, <literal>RANGE</>, <literal>SECURITY</>,\n      <literal>SERVER</>, <literal>UNBOUNDED</>, and <literal>WRAPPER</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Re-allow regular expression special characters in <application>psql</>'s\n      <literal>\\df</> function name parameter (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <filename>contrib/fuzzystrmatch</>, correct the calculation of\n      <function>levenshtein</> distances with non-default costs (Marcin Mank)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <filename>contrib/pg_standby</>, disable triggering failover with a\n      signal on Windows (Fujii Masao)\n     </para>\n\n     <para>\n      This never did anything useful, because Windows doesn't have Unix-style\n      signals, but recent changes made it actually crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Put <literal>FREEZE</> and <literal>VERBOSE</> options in the right\n      order in the <literal>VACUUM</> command that\n      <filename>contrib/vacuumdb</> produces (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible leak of connections when <filename>contrib/dblink</>\n      encounters an error (Tatsuhito Kasahara)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure <application>psql</>'s flex module is compiled with the correct\n      system header definitions (Tom)\n     </para>\n\n     <para>\n      This fixes build failures on platforms where\n      <literal>--enable-largefile</> causes incompatible changes in the\n      generated code.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make the postmaster ignore any <literal>application_name</> parameter in\n      connection request packets, to improve compatibility with future libpq\n      versions (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update the timezone abbreviation files to match current reality (Joachim\n      Wieland)\n     </para>\n\n     <para>\n      This includes adding <literal>IDT</> to the default\n      timezone abbreviation set.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2009s\n      for DST law changes in Antarctica, Argentina, Bangladesh, Fiji,\n      Novokuznetsk, Pakistan, Palestine, Samoa, Syria; also historical\n      corrections for Hong Kong.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4-1\">\n  <title>Release 8.4.1</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2009-09-09</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.4.\n   For information about new features in the 8.4 major release, see\n   <xref linkend=\"release-8-4\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.4.1</title>\n\n   <para>\n    A dump/restore is not required for those running 8.4.X.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix WAL page header initialization at the end of archive recovery\n      (Heikki)\n     </para>\n\n     <para>\n      This could lead to failure to process the WAL in a subsequent\n      archive recovery.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <quote>cannot make new WAL entries during recovery</> error (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix problem that could make expired rows visible after a crash (Tom)\n     </para>\n\n     <para>\n      This bug involved a page status bit potentially not being set\n      correctly after a server crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <command>RESET ROLE</> and <command>RESET SESSION\n      AUTHORIZATION</> inside security-definer functions (Tom, Heikki)\n     </para>\n\n     <para>\n      This covers a case that was missed in the previous patch that\n      disallowed <command>SET ROLE</> and <command>SET SESSION\n      AUTHORIZATION</> inside security-definer functions.\n      (See CVE-2007-6600)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <command>LOAD</> of an already-loaded loadable module\n      into a no-op (Tom)\n     </para>\n\n     <para>\n      Formerly, <command>LOAD</> would attempt to unload and re-load the\n      module, but this is unsafe and not all that useful.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make window function <literal>PARTITION BY</> and <literal>ORDER BY</>\n      items always be interpreted as simple expressions (Tom)\n     </para>\n\n     <para>\n      In 8.4.0 these lists were parsed following the rules used for\n      top-level <literal>GROUP BY</> and <literal>ORDER BY</> lists.\n      But this was not correct per the SQL standard, and it led to possible\n      circularity.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix several errors in planning of semi-joins (Tom)\n     </para>\n\n     <para>\n      These led to wrong query results in some cases where <literal>IN</>\n      or <literal>EXISTS</> was used together with another join.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix handling of whole-row references to subqueries that are within\n      an outer join (Tom)\n     </para>\n\n     <para>\n      An example is\n      <literal>SELECT COUNT(ss.*) FROM ... LEFT JOIN (SELECT ...) ss ON ...</>.\n      Here, <literal>ss.*</> would be treated as <literal>ROW(NULL,NULL,...)</>\n      for null-extended join rows, which is not the same as a simple NULL.\n      Now it is treated as a simple NULL.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix Windows shared-memory allocation code (Tsutomu Yamada, Magnus)\n     </para>\n\n     <para>\n      This bug led to the often-reported <quote>could not reattach\n      to shared memory</> error message.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix locale handling with plperl (Heikki)\n     </para>\n\n     <para>\n      This bug could cause the server's locale setting to change when a\n      plperl function is called, leading to data corruption.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix handling of reloptions to ensure setting one option doesn't\n      force default values for others (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that a <quote>fast shutdown</> request will forcibly terminate\n      open sessions, even if a <quote>smart shutdown</> was already in progress\n      (Fujii Masao)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid memory leak for <function>array_agg()</> in <literal>GROUP BY</>\n      queries (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Treat <function>to_char(..., 'TH')</> as an uppercase ordinal\n      suffix with <literal>'HH'</>/<literal>'HH12'</> (Heikki)\n     </para>\n\n     <para>\n      It was previously handled as <literal>'th'</> (lowercase).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Include the fractional part in the result of\n      <function>EXTRACT(second)</> and\n      <function>EXTRACT(milliseconds)</> for\n      <type>time</> and <type>time with time zone</> inputs (Tom)\n     </para>\n\n     <para>\n      This has always worked for floating-point datetime configurations,\n      but was broken in the integer datetime code.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix overflow for <literal>INTERVAL '<replaceable>x</> ms'</literal>\n      when <replaceable>x</> is more than 2 million and integer\n      datetimes are in use (Alex Hunsaker)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve performance when processing toasted values in index scans (Tom)\n     </para>\n\n     <para>\n      This is particularly useful for <ulink\n      url=\"http://postgis.net/\">PostGIS</ulink>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix a typo that disabled <varname>commit_delay</> (Jeff Janes)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Output early-startup messages to <filename>postmaster.log</> if the\n      server is started in silent mode (Tom)\n     </para>\n\n     <para>\n      Previously such error messages were discarded, leading to\n      difficulty in debugging.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Remove translated FAQs (Peter)\n     </para>\n\n     <para>\n      They are now on the <ulink\n      url=\"http://wiki.postgresql.org/wiki/FAQ\">wiki</ulink>.  The\n      main FAQ was moved to the wiki some time ago.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_ctl</> to not go into an infinite loop if\n      <filename>postgresql.conf</> is empty (Jeff Davis)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix several errors in <application>pg_dump</>'s\n      <literal>--binary-upgrade</> mode (Bruce, Tom)\n     </para>\n\n     <para>\n      <literal>pg_dump --binary-upgrade</> is used by pg_migrator.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/xml2</>'s <function>xslt_process()</> to\n      properly handle the maximum number of parameters (twenty) (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve robustness of <application>libpq</>'s code to recover\n      from errors during <command>COPY FROM STDIN</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid including conflicting readline and editline header files\n      when both libraries are installed (Zdenek Kotala)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Work around gcc bug that causes <quote>floating-point exception</>\n      instead of <quote>division by zero</> on some platforms (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2009l\n      for DST law changes in Bangladesh, Egypt, Mauritius.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-4\">\n  <title>Release 8.4</title>\n\n  <formalpara>\n   <title>Release date:</title>\n   <para>2009-07-01</para>\n  </formalpara>\n\n  <sect2>\n   <title>Overview</title>\n\n   <para>\n    After many years of development, <productname>PostgreSQL</> has\n    become feature-complete in many areas.   This release shows a\n    targeted approach to adding features (e.g., authentication,\n    monitoring, space reuse), and adds capabilities defined in the\n    later SQL standards.  The major areas of enhancement are:\n   </para>\n\n   <itemizedlist>\n\n    <!-- This list duplicates items below, but without authors or details-->\n\n    <listitem>\n     <para>\n      Windowing Functions\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Common Table Expressions and Recursive Queries\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Default and variadic parameters for functions\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Parallel Restore\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Column Permissions\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Per-database locale settings\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improved hash indexes\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improved join performance for <literal>EXISTS</> and <literal>NOT EXISTS</> queries\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Easier-to-use Warm Standby\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Automatic sizing of the Free Space Map\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Visibility Map (greatly reduces vacuum overhead for slowly-changing tables)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Version-aware psql (backslash commands work against older servers)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Support SSL certificates for user authentication\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Per-function runtime statistics\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Easy editing of functions in psql\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      New contrib modules: pg_stat_statements, auto_explain, citext, btree_gin\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n   <para>\n    The above items are explained in more detail in the sections below.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Migration to Version 8.4</title>\n\n   <para>\n    A dump/restore using <application>pg_dump</application> is\n    required for those wishing to migrate data from any previous\n    release.\n   </para>\n\n   <para>\n    Observe the following incompatibilities:\n   </para>\n\n   <sect3>\n    <title>General</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Use 64-bit integer datetimes by default (Neil Conway)\n      </para>\n\n      <para>\n       Previously this was selected by <application>configure</>'s\n       <option>--enable-integer-datetimes</> option.  To retain\n       the old behavior, build with <option>--disable-integer-datetimes</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove <application>ipcclean</> utility command (Bruce)\n      </para>\n\n      <para>\n       The utility only worked on a few platforms.  Users should use\n       their operating system tools instead.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Server Settings</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Change default setting for\n       <literal>log_min_messages</> to <literal>warning</> (previously\n       it was <literal>notice</>) to reduce log file volume (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Change default setting for <literal>max_prepared_transactions</> to\n       zero (previously it was 5) (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <literal>debug_print_parse</>, <literal>debug_print_rewritten</>,\n       and <literal>debug_print_plan</>\n       output appear at <literal>LOG</> message level, not\n       <literal>DEBUG1</> as formerly (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <literal>debug_pretty_print</> default to <literal>on</> (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove <varname>explain_pretty_print</> parameter (no longer needed) (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <varname>log_temp_files</> settable by superusers only, like other\n       logging options (Simon Riggs)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove automatic appending of the epoch timestamp when no <literal>%</>\n       escapes are present in <literal>log_filename</> (Robert Haas)\n      </para>\n\n      <para>\n       This change was made because some users wanted a fixed log filename,\n       for use with an external log rotation tool.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove <varname>log_restartpoints</> from <filename>recovery.conf</>;\n       instead use <varname>log_checkpoints</> (Simon)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove <varname>krb_realm</> and <varname>krb_server_hostname</>;\n       these are now set in <filename>pg_hba.conf</> instead (Magnus)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       There are also significant changes in <link\n       linkend=\"release-8-4-pg-hba-conf\"><filename>pg_hba.conf</></link>,\n       as described below.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Queries</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Change <command>TRUNCATE</> and <command>LOCK</> to\n       apply to child tables of the specified table(s) (Peter)\n      </para>\n\n      <para>\n       These commands now accept an <literal>ONLY</> option that prevents\n       processing child tables; this option must be used if the old\n       behavior is needed.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <command>SELECT DISTINCT</> and\n       <literal>UNION</>/<literal>INTERSECT</>/<literal>EXCEPT</>\n       no longer always produce sorted output (Tom)\n      </para>\n\n      <para>\n       Previously, these types of queries always removed duplicate rows\n       by means of Sort/Unique processing (i.e., sort then remove adjacent\n       duplicates).  Now they can be implemented by hashing, which will not\n       produce sorted output.  If an application relied on the output being\n       in sorted order, the recommended fix is to add an <literal>ORDER BY</>\n       clause.  As a short-term workaround, the previous behavior can be\n       restored by disabling <literal>enable_hashagg</>, but that is a very\n       performance-expensive fix.  <literal>SELECT DISTINCT ON</> never uses\n       hashing, however, so its behavior is unchanged.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Force child tables to inherit <literal>CHECK</> constraints from parents\n       (Alex Hunsaker, Nikhil Sontakke, Tom)\n      </para>\n\n      <para>\n       Formerly it was possible to drop such a constraint from a child\n       table, allowing rows that violate the constraint to be visible\n       when scanning the parent table.  This was deemed inconsistent,\n       as well as contrary to SQL standard.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Disallow negative <literal>LIMIT</> or <literal>OFFSET</>\n       values, rather than treating them as zero (Simon)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Disallow <command>LOCK TABLE</> outside a transaction block\n       (Tom)\n      </para>\n\n      <para>\n       Such an operation is useless because the lock would be released\n       immediately.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Sequences now contain an additional <structfield>start_value</> column\n       (Zoltan Boszormenyi)\n      </para>\n\n      <para>\n       This supports <command>ALTER SEQUENCE ... RESTART</>.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n\n   <sect3>\n    <title>Functions and Operators</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Make <type>numeric</> zero raised to a fractional power return\n       <literal>0</>, rather than throwing an error, and make\n       <type>numeric</> zero raised to the zero power return <literal>1</>,\n       rather than error (Bruce)\n      </para>\n\n      <para>\n       This matches the longstanding <type>float8</> behavior.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow unary minus of floating-point values to produce minus zero (Tom)\n      </para>\n\n      <para>\n       The changed behavior is more <acronym>IEEE</>-standard\n       compliant.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Throw an error if an escape character is the last character in\n       a <literal>LIKE</> pattern (i.e., it has nothing to escape) (Tom)\n      </para>\n\n      <para>\n       Previously, such an escape character was silently ignored,\n       thus possibly masking application logic errors.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove <literal>~=~</> and <literal>~&lt;&gt;~</> operators\n       formerly used for <literal>LIKE</> index comparisons (Tom)\n      </para>\n\n      <para>\n       Pattern indexes now use the regular equality operator.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <function>xpath()</> now passes its arguments to <application>libxml</>\n       without any changes (Andrew)\n      </para>\n\n      <para>\n       This means that the XML argument must be a well-formed XML document.\n       The previous coding attempted to allow XML fragments, but it did not\n       work well.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <function>xmlelement()</> format attribute values just like\n       content values (Peter)\n      </para>\n\n      <para>\n       Previously, attribute values were formatted according to the\n       normal SQL output behavior, which is sometimes at odds with\n       XML rules.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Rewrite memory management for <application>libxml</>-using functions\n       (Tom)\n      </para>\n\n      <para>\n       This change should avoid some compatibility problems with use of\n       <application>libxml</> in PL/Perl and other add-on code.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Adopt a faster algorithm for hash functions (Kenneth Marshall,\n       based on work of Bob Jenkins)\n      </para>\n\n      <para>\n       Many of the built-in hash functions now deliver different results on\n       little-endian and big-endian platforms.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n    <sect4>\n     <title>Temporal Functions and Operators</title>\n\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        <varname>DateStyle</> no longer controls <type>interval</> output\n        formatting; instead there is a new variable <varname>IntervalStyle</>\n        (Ron Mayer)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Improve consistency of handling of fractional seconds in\n        <type>timestamp</> and <type>interval</> output (Ron Mayer)\n       </para>\n\n       <para>\n        This may result in displaying a different number of fractional\n        digits than before, or rounding instead of truncating.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <function>to_char()</>'s localized month/day names depend\n        on <varname>LC_TIME</>, not <varname>LC_MESSAGES</> (Euler\n        Taveira de Oliveira)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Cause <function>to_date()</> and <function>to_timestamp()</>\n        to more consistently report errors for invalid input (Brendan\n        Jurd)\n       </para>\n\n       <para>\n        Previous versions would often ignore or silently misread input\n        that did not match the format string.  Such cases will now\n        result in an error.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Fix <function>to_timestamp()</> to not require upper/lower case\n        matching for meridian (<literal>AM</>/<literal>PM</>) and era\n        (<literal>BC</>/<literal>AD</>) format designations  (Brendan\n        Jurd)\n       </para>\n\n       <para>\n        For example, input value <literal>ad</> now matches the format\n        string <literal>AD</>.\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n   </sect3>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <para>\n    Below you will find a detailed account of the changes between\n    <productname>PostgreSQL</productname> 8.4 and the previous major\n    release.\n   </para>\n\n   <sect3>\n    <title>Performance</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Improve optimizer statistics calculations (Jan Urbanski, Tom)\n      </para>\n\n      <para>\n       In particular, estimates for full-text-search operators are\n       greatly improved.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <command>SELECT DISTINCT</> and\n       <literal>UNION</>/<literal>INTERSECT</>/<literal>EXCEPT</> to\n       use hashing (Tom)\n      </para>\n\n      <para>\n       This means that these types of queries no longer automatically\n       produce sorted output.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Create explicit concepts of semi-joins and anti-joins (Tom)\n      </para>\n\n      <para>\n       This work formalizes our previous ad-hoc treatment of <literal>IN\n       (SELECT ...)</> clauses, and extends it to <literal>EXISTS</> and\n       <literal>NOT EXISTS</> clauses.  It should result in significantly\n       better planning of <literal>EXISTS</> and <literal>NOT EXISTS</>\n       queries.  In general, logically equivalent <literal>IN</> and\n       <literal>EXISTS</> clauses should now have similar performance,\n       whereas previously <literal>IN</> often won.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve optimization of sub-selects beneath outer joins (Tom)\n      </para>\n\n      <para>\n       Formerly, a sub-select or view could not be optimized very well if it\n       appeared within the nullable side of an outer join and contained\n       non-strict expressions (for instance, constants) in its result list.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve the performance of <function>text_position()</> and\n       related functions by using Boyer-Moore-Horspool searching (David\n       Rowley)\n      </para>\n\n      <para>\n       This is particularly helpful for long search patterns.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Reduce I/O load of writing the statistics collection file\n       by writing the file only when requested (Martin Pihlak)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve performance for bulk inserts (Robert Haas, Simon)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Increase the default value of <varname>default_statistics_target</>\n       from <literal>10</> to <literal>100</> (Greg Sabino Mullane,\n       Tom)\n      </para>\n\n      <para>\n       The maximum value was also increased from <literal>1000</> to\n       <literal>10000</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Perform <varname>constraint_exclusion</> checking by default\n       in queries involving inheritance or <literal>UNION ALL</> (Tom)\n      </para>\n\n      <para>\n       A new <varname>constraint_exclusion</> setting,\n       <literal>partition</>, was added to specify this behavior.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow I/O read-ahead for bitmap index scans (Greg Stark)\n      </para>\n\n      <para>\n       The amount of read-ahead is controlled by\n       <varname>effective_io_concurrency</>.  This feature is available only\n       if the kernel has <function>posix_fadvise()</> support.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Inline simple set-returning <acronym>SQL</> functions in\n       <literal>FROM</> clauses (Richard Rowell)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve performance of multi-batch hash joins by providing a special\n       case for join key values that are especially common in the outer\n       relation (Bryce Cutt, Ramon Lawrence)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Reduce volume of temporary data in multi-batch hash joins\n       by suppressing <quote>physical tlist</> optimization (Michael\n       Henderson, Ramon Lawrence)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Avoid waiting for idle-in-transaction sessions during\n       <command>CREATE INDEX CONCURRENTLY</> (Simon)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve performance of shared cache invalidation (Tom)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Server</title>\n\n    <sect4>\n     <title>Settings</title>\n\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Convert many <filename>postgresql.conf</> settings to enumerated\n        values so that <literal>pg_settings</> can display the valid\n        values (Magnus)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <varname>cursor_tuple_fraction</> parameter to control the\n        fraction of a cursor's rows that the planner assumes will be\n        fetched (Robert Hell)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow underscores in the names of custom variable\n        classes in <filename>postgresql.conf</> (Tom)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title>Authentication and security</title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Remove support for the (insecure) <literal>crypt</> authentication method\n        (Magnus)\n       </para>\n\n       <para>\n        This effectively obsoletes pre-<productname>PostgreSQL</> 7.2 client\n        libraries, as there is no longer any non-plaintext password method that\n        they can use.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Support regular expressions in <filename>pg_ident.conf</>\n        (Magnus)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow <productname>Kerberos</>/<acronym>GSSAPI</> parameters\n        to be changed without restarting the postmaster (Magnus)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Support <acronym>SSL</> certificate chains in server certificate\n        file (Andrew Gierth)\n       </para>\n\n       <para>\n        Including the full certificate chain makes the client able\n        to verify the certificate without having all intermediate CA\n        certificates present in the local store, which is often the case for\n        commercial CAs.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Report appropriate error message for combination of <literal>MD5</>\n        authentication and <varname>db_user_namespace</> enabled (Bruce)\n       </para>\n      </listitem>\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4 id=\"release-8-4-pg-hba-conf\">\n     <title><filename>pg_hba.conf</></title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Change all authentication options to use <literal>name=value</>\n        syntax (Magnus)\n       </para>\n\n       <para>\n        This makes incompatible changes to the <literal>ldap</>,\n        <literal>pam</> and <literal>ident</> authentication methods. All\n        <filename>pg_hba.conf</> entries with these methods need to be\n        rewritten using the new format.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Remove the <literal>ident sameuser</> option, instead making that\n        behavior the default if no usermap is specified (Magnus)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow a usermap parameter for all external authentication methods\n        (Magnus)\n       </para>\n\n       <para>\n        Previously a usermap was only supported for <literal>ident</>\n        authentication.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <literal>clientcert</> option to control requesting of a\n        client certificate (Magnus)\n       </para>\n\n       <para>\n        Previously this was controlled by the presence of a root\n        certificate file in the server's data directory.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <literal>cert</> authentication method to allow\n        <emphasis>user</> authentication via <acronym>SSL</> certificates\n        (Magnus)\n       </para>\n\n       <para>\n        Previously <acronym>SSL</> certificates could only verify that\n        the client had access to a certificate, not authenticate a\n        user.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow <literal>krb5</>, <literal>gssapi</> and <literal>sspi</>\n        realm and <literal>krb5</> host settings to be specified in\n        <filename>pg_hba.conf</> (Magnus)\n       </para>\n\n       <para>\n        These override the settings in <filename>postgresql.conf</>.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <varname>include_realm</> parameter for <literal>krb5</>,\n        <literal>gssapi</>, and <literal>sspi</> methods (Magnus)\n       </para>\n\n       <para>\n        This allows identical usernames from different realms to be\n        authenticated as different database users using usermaps.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Parse <filename>pg_hba.conf</> fully when it is loaded,\n        so that errors are reported immediately (Magnus)\n       </para>\n\n       <para>\n        Previously, most errors in the file wouldn't be detected until clients\n        tried to connect, so an erroneous file could render the system\n        unusable.  With the new behavior, if an error is detected during\n        reload then the bad file is rejected and the postmaster continues\n        to use its old copy.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Show all parsing errors in <filename>pg_hba.conf</> instead of\n        aborting after the first one (Selena Deckelmann)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Support <literal>ident</> authentication over Unix-domain sockets\n        on <productname>Solaris</> (Garick Hamlin)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title>Continuous Archiving</title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Provide an option to <function>pg_start_backup()</> to force its\n        implied checkpoint to finish as quickly as possible (Tom)\n       </para>\n\n       <para>\n        The default behavior avoids excess I/O consumption, but that is\n        pointless if no concurrent query activity is going on.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <function>pg_stop_backup()</> wait for modified <acronym>WAL</>\n        files to be archived (Simon)\n       </para>\n\n       <para>\n        This guarantees that the backup is valid at the time\n        <function>pg_stop_backup()</> completes.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        When archiving is enabled, rotate the last WAL segment at shutdown\n        so that all transactions can be archived immediately\n        (Guillaume Smet, Heikki)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Delay <quote>smart</> shutdown while a continuous archiving base backup\n        is in progress (Laurenz Albe)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Cancel a continuous archiving base backup if <quote>fast</> shutdown\n        is requested (Laurenz Albe)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow <filename>recovery.conf</> boolean variables to take the\n        same range of string values as <filename>postgresql.conf</>\n        boolean variables\n        (Bruce)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title>Monitoring</title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Add <function>pg_conf_load_time()</> to report when\n        the <productname>PostgreSQL</> configuration files were last loaded\n        (George Gensure)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <function>pg_terminate_backend()</> to safely terminate a\n        backend (the <literal>SIGTERM</> signal works also) (Tom, Bruce)\n       </para>\n\n       <para>\n        While it's always been possible to <literal>SIGTERM</> a single\n        backend, this was previously considered unsupported; and testing\n        of the case found some bugs that are now fixed.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add ability to track user-defined functions' call counts and\n        runtimes (Martin Pihlak)\n       </para>\n\n       <para>\n        Function statistics appear in a new system view,\n        <literal>pg_stat_user_functions</>.  Tracking is controlled\n        by the new parameter <varname>track_functions</>.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow specification of the maximum query string size in\n        <literal>pg_stat_activity</> via new\n        <varname>track_activity_query_size</> parameter (Thomas Lee)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Increase the maximum line length sent to <application>syslog</>, in\n        hopes of improving performance (Tom)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add read-only configuration variables <varname>segment_size</>,\n        <varname>wal_block_size</>, and <varname>wal_segment_size</>\n        (Bernd Helmle)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        When reporting a deadlock, report the text of all queries involved\n        in the deadlock to the server log  (Itagaki Takahiro)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <function>pg_stat_get_activity(pid)</> function to return\n        information about a specific process id (Magnus)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow the location of the server's statistics file to be specified\n        via <varname>stats_temp_directory</> (Magnus)\n       </para>\n\n       <para>\n        This allows the statistics file to be placed in a\n        <acronym>RAM</>-resident directory to reduce I/O requirements.\n        On startup/shutdown, the file is copied to its traditional location\n        (<literal>$PGDATA/global/</>) so it is preserved across restarts.\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n   </sect3>\n\n   <sect3>\n    <title>Queries</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add support for <literal>WINDOW</> functions (Hitoshi Harada)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add support for <literal>WITH</> clauses (CTEs), including <literal>WITH\n       RECURSIVE</> (Yoshiyuki Asaba, Tatsuo Ishii, Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <command>TABLE</> command (Peter)\n      </para>\n\n      <para>\n       <literal>TABLE tablename</> is a SQL standard short-hand for\n       <literal>SELECT * FROM tablename</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <literal>AS</> to be optional when specifying a\n       <command>SELECT</> (or <literal>RETURNING</>) column output\n       label (Hiroshi Saito)\n      </para>\n\n      <para>\n       This works so long as the column label is not any\n       <productname>PostgreSQL</> keyword; otherwise <literal>AS</> is still\n       needed.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support set-returning functions in <command>SELECT</> result lists\n       even for functions that return their result via a tuplestore (Tom)\n      </para>\n\n      <para>\n       In particular, this means that functions written in PL/pgSQL\n       and other PL languages can now be called this way.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support set-returning functions in the output of aggregation\n       and grouping queries (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <command>SELECT FOR UPDATE</>/<literal>SHARE</> to work\n       on inheritance trees (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add infrastructure for <acronym>SQL/MED</> (Martin Pihlak,\n       Peter)\n      </para>\n\n      <para>\n       There are no remote or external <acronym>SQL/MED</> capabilities\n       yet, but this change provides a standardized and future-proof\n       system for managing connection information for modules like\n       <filename>dblink</> and <filename>plproxy</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Invalidate cached plans when referenced schemas, functions, operators,\n       or operator classes are modified (Martin Pihlak, Tom)\n      </para>\n\n      <para>\n       This improves the system's ability to respond to on-the-fly\n       DDL changes.\n      </para>\n     </listitem>\n     <listitem>\n      <para>\n       Allow comparison of composite types and allow arrays of\n       anonymous composite types (Tom)\n      </para>\n\n      <para>\n       This allows constructs such as\n       <literal>row(1, 1.1) = any (array[row(7, 7.7), row(1, 1.0)])</>.\n       This is particularly useful in recursive queries.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add support for Unicode string literal and identifier specifications\n       using code points, e.g. <literal>U&amp;'d\\0061t\\+000061'</>\n       (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Reject <literal>\\000</> in string literals and <command>COPY</> data\n       (Tom)\n      </para>\n\n      <para>\n       Previously, this was accepted but had the effect of terminating\n       the string contents.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve the parser's ability to report error locations (Tom)\n      </para>\n\n      <para>\n       An error location is now reported for many semantic errors,\n       such as mismatched datatypes, that previously could not be localized.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n    <sect4>\n     <title><command>TRUNCATE</></title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Support statement-level <literal>ON TRUNCATE</> triggers (Simon)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <literal>RESTART</>/<literal>CONTINUE IDENTITY</> options\n        for <command>TRUNCATE TABLE</>\n        (Zoltan Boszormenyi)\n       </para>\n\n       <para>\n        The start value of a sequence can be changed by <command>ALTER\n        SEQUENCE START WITH</>.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow <command>TRUNCATE tab1, tab1</> to succeed (Bruce)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add a separate <command>TRUNCATE</> permission (Robert Haas)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title><command>EXPLAIN</></title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Make <command>EXPLAIN VERBOSE</> show the output columns of each\n        plan node (Tom)\n       </para>\n\n       <para>\n        Previously <command>EXPLAIN VERBOSE</> output an internal\n        representation of the query plan.  (That behavior is now\n        available via <varname>debug_print_plan</>.)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <command>EXPLAIN</> identify subplans and initplans with\n        individual labels (Tom)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <command>EXPLAIN</> honor <varname>debug_print_plan</> (Tom)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow <command>EXPLAIN</> on <command>CREATE TABLE AS</> (Peter)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title><literal>LIMIT</>/<literal>OFFSET</></title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Allow sub-selects in <literal>LIMIT</> and <literal>OFFSET</> (Tom)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <acronym>SQL</>-standard syntax for\n        <literal>LIMIT</>/<literal>OFFSET</> capabilities (Peter)\n       </para>\n\n       <para>\n        To wit,\n        <literal>OFFSET num {ROW|ROWS} FETCH {FIRST|NEXT} [num] {ROW|ROWS}\n        ONLY</>.\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n   </sect3>\n\n   <sect3>\n    <title>Object Manipulation</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add support for column-level privileges (Stephen Frost, KaiGai\n       Kohei)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Refactor multi-object <command>DROP</> operations to reduce the\n       need for <literal>CASCADE</> (Alex Hunsaker)\n      </para>\n\n      <para>\n       For example, if table <literal>B</> has a dependency on table\n       <literal>A</>, the command <literal>DROP TABLE A, B</> no longer\n       requires the <literal>CASCADE</> option.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix various problems with concurrent <command>DROP</> commands\n       by ensuring that locks are taken before we begin to drop dependencies\n       of an object (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve reporting of dependencies during <command>DROP</>\n       commands (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>WITH [NO] DATA</> clause to <command>CREATE TABLE\n       AS</>, per the <acronym>SQL</> standard (Peter, Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add support for user-defined I/O conversion casts (Heikki)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <command>CREATE AGGREGATE</> to use an <type>internal</>\n       transition datatype (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>LIKE</> clause to <command>CREATE TYPE</> (Tom)\n      </para>\n\n      <para>\n       This simplifies creation of data types that use the same internal\n       representation as an existing type.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow specification of the type category and <quote>preferred</>\n       status for user-defined base types (Tom)\n      </para>\n\n      <para>\n       This allows more control over the coercion behavior of user-defined\n       types.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <command>CREATE OR REPLACE VIEW</> to add columns to the\n       end of a view (Robert Haas)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n    <sect4>\n     <title><command>ALTER</></title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Add <command>ALTER TYPE RENAME</> (Petr Jelinek)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <command>ALTER SEQUENCE ... RESTART</> (with no parameter) to\n        reset a sequence to its initial value (Zoltan Boszormenyi)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Modify the <command>ALTER TABLE</> syntax to allow all reasonable\n        combinations for tables, indexes, sequences, and views (Tom)\n       </para>\n\n       <para>\n        This change allows the following new syntaxes:\n\n        <itemizedlist>\n         <listitem>\n          <para>\n           <command>ALTER SEQUENCE OWNER TO</>\n          </para>\n         </listitem>\n         <listitem>\n          <para>\n           <command>ALTER VIEW ALTER COLUMN SET/DROP DEFAULT</>\n          </para>\n         </listitem>\n         <listitem>\n          <para>\n           <command>ALTER VIEW OWNER TO</>\n          </para>\n         </listitem>\n         <listitem>\n          <para>\n           <command>ALTER VIEW SET SCHEMA</>\n          </para>\n         </listitem>\n        </itemizedlist>\n\n        There is no actual new functionality here, but formerly\n        you had to say <command>ALTER TABLE</> to do these things,\n        which was confusing.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add support for the syntax <command>ALTER TABLE ... ALTER COLUMN\n        ... SET DATA TYPE</> (Peter)\n       </para>\n\n       <para>\n        This is <acronym>SQL</>-standard syntax for functionality that\n        was already supported.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <command>ALTER TABLE SET WITHOUT OIDS</> rewrite the table\n        to physically remove <type>OID</> values (Tom)\n       </para>\n\n       <para>\n        Also, add <command>ALTER TABLE SET WITH OIDS</> to rewrite the\n        table to add <type>OID</>s.\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title>Database Manipulation</title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Improve reporting of\n        <command>CREATE</>/<command>DROP</>/<command>RENAME DATABASE</>\n        failure when uncommitted prepared transactions are the cause\n        (Tom)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <varname>LC_COLLATE</> and <varname>LC_CTYPE</> into\n        per-database settings (Radek Strnad, Heikki)\n       </para>\n\n       <para>\n        This makes collation similar to encoding, which was always\n        configurable per database.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Improve checks that the database encoding, collation\n        (<varname>LC_COLLATE</>), and character classes\n        (<varname>LC_CTYPE</>) match (Heikki, Tom)\n       </para>\n\n       <para>\n        Note in particular that a new database's encoding and locale\n        settings can be changed only when copying from <literal>template0</>.\n        This prevents possibly copying data that doesn't match the settings.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <command>ALTER DATABASE SET TABLESPACE</> to move a database\n        to a new tablespace (Guillaume Lelarge, Bernd Helmle)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n   </sect3>\n\n   <sect3>\n    <title>Utility Operations</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add a <literal>VERBOSE</> option to the <command>CLUSTER</> command and\n       <application>clusterdb</> (Jim Cox)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Decrease memory requirements for recording pending trigger\n       events (Tom)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n    <sect4>\n     <title>Indexes</title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Dramatically improve the speed of building and accessing hash\n        indexes (Tom Raney, Shreya Bhargava)\n       </para>\n\n       <para>\n        This allows hash indexes to be sometimes faster than btree\n        indexes.  However, hash indexes are still not crash-safe.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make hash indexes store only the hash code, not the full value of\n        the indexed column (Xiao Meng)\n       </para>\n\n       <para>\n        This greatly reduces the size of hash indexes for long indexed\n        values, improving performance.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Implement fast update option for GIN indexes (Teodor, Oleg)\n       </para>\n\n       <para>\n        This option greatly improves update speed at a small penalty in search\n        speed.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        <literal>xxx_pattern_ops</> indexes can now be used for simple\n        equality comparisons, not only for <literal>LIKE</> (Tom)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title>Full Text Indexes</title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Remove the requirement to use <literal>@@@</> when doing\n        <acronym>GIN</> weighted lookups on full text indexes (Tom, Teodor)\n       </para>\n\n       <para>\n        The normal <literal>@@</> text search operator can be used\n        instead.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add an optimizer selectivity function for <literal>@@</> text\n        search operations (Jan Urbanski)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow prefix matching in full text searches (Teodor Sigaev,\n        Oleg Bartunov)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Support multi-column <acronym>GIN</> indexes (Teodor Sigaev)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Improve support for Nepali language and Devanagari alphabet (Teodor)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title><command>VACUUM</></title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Track free space in separate per-relation <quote>fork</> files (Heikki)\n       </para>\n\n       <para>\n        Free space discovered by <command>VACUUM</> is now recorded in\n        <filename>*_fsm</> files, rather than in a fixed-sized shared memory\n        area.  The <varname>max_fsm_pages</> and <varname>max_fsm_relations</>\n        settings have been removed, greatly simplifying administration of\n        free space management.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add a visibility map to track pages that do not require\n        vacuuming (Heikki)\n       </para>\n\n       <para>\n        This allows <command>VACUUM</> to avoid scanning all of\n        a table when only a portion of the table needs vacuuming.\n        The visibility map is stored in per-relation <quote>fork</> files.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <varname>vacuum_freeze_table_age</> parameter to control\n        when <command>VACUUM</> should ignore the visibility map and\n        do a full table scan to freeze tuples (Heikki)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Track transaction snapshots more carefully (Alvaro)\n       </para>\n\n       <para>\n        This improves <command>VACUUM</>'s ability to reclaim space\n        in the presence of long-running transactions.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add ability to specify per-relation autovacuum and <acronym>TOAST</>\n        parameters in <command>CREATE TABLE</> (Alvaro, Euler Taveira de\n        Oliveira)\n       </para>\n\n       <para>\n        Autovacuum options used to be stored in a system table.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <literal>--freeze</> option to <application>vacuumdb</>\n        (Bruce)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n   </sect3>\n\n   <sect3>\n    <title>Data Types</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add a <literal>CaseSensitive</> option for text search synonym\n       dictionaries (Simon)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve the precision of <type>NUMERIC</> division (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add basic arithmetic operators for <type>int2</> with <type>int8</>\n       (Tom)\n      </para>\n\n      <para>\n       This eliminates the need for explicit casting in some situations.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <type>UUID</> input to accept an optional hyphen after\n       every fourth digit (Robert Haas)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <literal>on</>/<literal>off</> as input for the boolean data type\n       (Itagaki Takahiro)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow spaces around <literal>NaN</> in the input string for\n       type <type>numeric</> (Sam Mason)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n    <sect4>\n     <title>Temporal Data Types</title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Reject year <literal>0 BC</> and years <literal>000</> and\n        <literal>0000</> (Tom)\n       </para>\n\n       <para>\n        Previously these were interpreted as <literal>1 BC</>.\n        (Note: years <literal>0</> and <literal>00</> are still assumed to be\n        the year 2000.)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Include <literal>SGT</> (Singapore time) in the default list of\n        known time zone abbreviations (Tom)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Support <literal>infinity</> and <literal>-infinity</> as\n        values of type <type>date</> (Tom)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make parsing of <type>interval</> literals more standard-compliant\n        (Tom, Ron Mayer)\n       </para>\n\n       <para>\n        For example, <literal>INTERVAL '1' YEAR</> now does what it's\n        supposed to.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow <type>interval</> fractional-seconds precision to be specified\n        after the <literal>second</> keyword, for <acronym>SQL</> standard\n        compliance (Tom)\n       </para>\n\n       <para>\n        Formerly the precision had to be specified after the keyword\n        <type>interval</>.  (For backwards compatibility, this syntax is still\n        supported, though deprecated.)  Data type definitions will now be\n        output using the standard format.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Support the <acronym>IS0 8601</> <type>interval</> syntax (Ron\n        Mayer, Kevin Grittner)\n       </para>\n\n       <para>\n        For example, <literal>INTERVAL 'P1Y2M3DT4H5M6.7S'</> is now\n        supported.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <varname>IntervalStyle</> parameter\n        which controls how <type>interval</> values are output (Ron Mayer)\n       </para>\n\n       <para>\n        Valid values are:  <literal>postgres</>, <literal>postgres_verbose</>,\n        <literal>sql_standard</>, <literal>iso_8601</>.  This setting also\n        controls the handling of negative <type>interval</> input when only\n        some fields have positive/negative designations.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Improve consistency of handling of fractional seconds in\n        <type>timestamp</> and <type>interval</> output (Ron Mayer)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title>Arrays</title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Improve the handling of casts applied to <literal>ARRAY[]</>\n        constructs, such as <literal>ARRAY[...]::integer[]</>\n        (Brendan Jurd)\n       </para>\n\n       <para>\n        Formerly <productname>PostgreSQL</> attempted to determine a data type\n        for the <literal>ARRAY[]</> construct without reference to the ensuing\n        cast.  This could fail unnecessarily in many cases, in particular when\n        the <literal>ARRAY[]</> construct was empty or contained only\n        ambiguous entries such as <literal>NULL</>.  Now the cast is consulted\n        to determine the type that the array elements must be.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <acronym>SQL</>-syntax <type>ARRAY</> dimensions optional\n        to match the <acronym>SQL</> standard (Peter)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <function>array_ndims()</> to return the number\n        of dimensions of an array (Robert Haas)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <function>array_length()</> to return the length\n        of an array for a specified dimension (Jim Nasby, Robert\n        Haas, Peter Eisentraut)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add aggregate function <function>array_agg()</>, which\n        returns all aggregated values as a single array (Robert Haas,\n        Jeff Davis, Peter)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <function>unnest()</>, which converts an array to\n        individual row values (Tom)\n       </para>\n\n       <para>\n        This is the opposite of <function>array_agg()</>.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <function>array_fill()</> to create arrays initialized with\n        a value (Pavel Stehule)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <function>generate_subscripts()</> to simplify generating\n        the range of an array's subscripts (Pavel Stehule)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title>Wide-Value Storage (<acronym>TOAST</>)</title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Consider <acronym>TOAST</> compression on values as short as\n        32 bytes (previously 256 bytes) (Greg Stark)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Require 25% minimum space savings before using <acronym>TOAST</>\n        compression (previously 20% for small values and any-savings-at-all\n        for large values) (Greg)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Improve <acronym>TOAST</> heuristics for rows that have a mix of large\n        and small toastable fields, so that we prefer to push large values out\n        of line and don't compress small values unnecessarily (Greg, Tom)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n   </sect3>\n\n   <sect3>\n    <title>Functions</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Document that <function>setseed()</> allows values from\n       <literal>-1</> to <literal>1</> (not just <literal>0</> to\n       <literal>1</>), and enforce the valid range (Kris Jurka)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add server-side function <function>lo_import(filename, oid)</>\n       (Tatsuo)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <function>quote_nullable()</>, which behaves like\n       <function>quote_literal()</> but returns the string <literal>NULL</> for\n       a null argument (Brendan Jurd)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve full text search <function>headline()</> function to\n       allow extracting several fragments of text (Sushant Sinha)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <function>suppress_redundant_updates_trigger()</> trigger\n       function to avoid overhead for non-data-changing updates (Andrew)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <function>div(numeric, numeric)</> to perform <type>numeric</>\n       division without rounding (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <type>timestamp</> and <type>timestamptz</> versions of\n       <function>generate_series()</> (Hitoshi Harada)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n    <sect4>\n     <title>Object Information Functions</title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Implement <function>current_query()</> for use by functions\n        that need to know the currently running query (Tomas Doran)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <function>pg_get_keywords()</> to return a list of the\n        parser keywords (Dave Page)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <function>pg_get_functiondef()</> to see a function's\n        definition (Abhijit Menon-Sen)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow the second argument of <function>pg_get_expr()</> to be zero\n        when deparsing an expression that does not contain variables (Tom)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Modify <function>pg_relation_size()</> to use <literal>regclass</>\n        (Heikki)\n       </para>\n\n       <para>\n        <function>pg_relation_size(data_type_name)</> no longer works.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <literal>boot_val</> and <literal>reset_val</> columns to\n        <literal>pg_settings</> output (Greg Smith)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add source file name and line number columns to\n        <literal>pg_settings</> output for variables set in a configuration\n        file (Magnus, Alvaro)\n       </para>\n\n       <para>\n        For security reasons, these columns are only visible to superusers.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add support for <varname>CURRENT_CATALOG</>,\n        <varname>CURRENT_SCHEMA</>, <varname>SET CATALOG</>, <varname>SET\n        SCHEMA</> (Peter)\n       </para>\n\n       <para>\n        These provide <acronym>SQL</>-standard syntax for existing features.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <function>pg_typeof()</> which returns the data type\n        of any value (Brendan Jurd)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <function>version()</> return information about whether\n        the server is a 32- or 64-bit binary (Bruce)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Fix the behavior of information schema columns\n        <structfield>is_insertable_into</> and <structfield>is_updatable</> to\n        be consistent (Peter)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Improve the behavior of information schema\n        <structfield>datetime_precision</> columns (Peter)\n       </para>\n\n       <para>\n        These columns now show zero for <type>date</> columns, and 6\n        (the default precision) for <type>time</>, <type>timestamp</>, and\n        <type>interval</> without a declared precision, rather than showing\n        null as formerly.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Convert remaining builtin set-returning functions to use\n        <literal>OUT</> parameters (Jaime Casanova)\n       </para>\n\n       <para>\n        This makes it possible to call these functions without specifying\n        a column list:  <function>pg_show_all_settings()</>,\n        <function>pg_lock_status()</>, <function>pg_prepared_xact()</>,\n        <function>pg_prepared_statement()</>, <function>pg_cursor()</>\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <function>pg_*_is_visible()</> and\n        <function>has_*_privilege()</> functions return <literal>NULL</>\n        for invalid OIDs, rather than reporting an error (Tom)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Extend <function>has_*_privilege()</> functions to allow inquiring\n        about the OR of multiple privileges in one call (Stephen\n        Frost, Tom)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <function>has_column_privilege()</> and\n        <function>has_any_column_privilege()</> functions (Stephen\n        Frost, Tom)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title>Function Creation</title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Support variadic functions (functions with a variable number\n        of arguments) (Pavel Stehule)\n       </para>\n\n       <para>\n        Only trailing arguments can be optional, and they all must be\n        of the same data type.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Support default values for function arguments (Pavel Stehule)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <command>CREATE FUNCTION ... RETURNS TABLE</> clause (Pavel\n        Stehule)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow <acronym>SQL</>-language functions to return the output\n        of an <command>INSERT</>/<command>UPDATE</>/<command>DELETE</>\n        <literal>RETURNING</> clause (Tom)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title>PL/pgSQL Server-Side Language</title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Support <literal>EXECUTE USING</> for easier insertion of data\n        values into a dynamic query string (Pavel Stehule)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow looping over the results of a cursor using a <literal>FOR</>\n        loop (Pavel Stehule)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Support <literal>RETURN QUERY EXECUTE</> (Pavel\n        Stehule)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Improve the <literal>RAISE</> command (Pavel Stehule)\n\n        <itemizedlist>\n         <listitem>\n          <para>\n           Support <literal>DETAIL</> and <literal>HINT</> fields\n          </para>\n         </listitem>\n         <listitem>\n          <para>\n           Support specification of the <literal>SQLSTATE</> error code\n          </para>\n         </listitem>\n         <listitem>\n          <para>\n           Support an exception name parameter\n          </para>\n         </listitem>\n         <listitem>\n          <para>\n           Allow <literal>RAISE</> without parameters in an exception\n           block to re-throw the current error\n          </para>\n         </listitem>\n        </itemizedlist>\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow specification of <varname>SQLSTATE</> codes\n        in <literal>EXCEPTION</> lists (Pavel Stehule)\n       </para>\n\n       <para>\n        This is useful for handling custom <varname>SQLSTATE</> codes.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Support the <literal>CASE</> statement (Pavel Stehule)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <command>RETURN QUERY</> set the special <literal>FOUND</> and\n        <command>GET DIAGNOSTICS</> <literal>ROW_COUNT</> variables\n        (Pavel Stehule)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <command>FETCH</> and <command>MOVE</> set the\n        <command>GET DIAGNOSTICS</> <literal>ROW_COUNT</> variable\n        (Andrew Gierth)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <command>EXIT</> without a label always exit the innermost\n        loop (Tom)\n       </para>\n\n       <para>\n        Formerly, if there were a <literal>BEGIN</> block more closely nested\n        than any loop, it would exit that block instead.  The new behavior\n        matches Oracle(TM) and is also what was previously stated by our own\n        documentation.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make processing of string literals and nested block comments\n        match the main SQL parser's processing (Tom)\n       </para>\n\n       <para>\n        In particular, the format string in <command>RAISE</> now works\n        the same as any other string literal, including being subject\n        to <varname>standard_conforming_strings</>.  This change also\n        fixes other cases in which valid commands would fail when\n        <varname>standard_conforming_strings</> is on.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Avoid memory leakage when the same function is called at varying\n        exception-block nesting depths (Tom)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n   </sect3>\n\n   <sect3>\n    <title>Client Applications</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Fix <literal>pg_ctl restart</> to preserve command-line arguments\n       (Bruce)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>-w</>/<literal>--no-password</> option that\n       prevents password prompting in all utilities that have a\n       <literal>-W</>/<literal>--password</> option (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove <option>-q</> (quiet) option of <application>createdb</>,\n       <application>createuser</>, <application>dropdb</>,\n       <application>dropuser</> (Peter)\n      </para>\n\n      <para>\n       These options have had no effect since <productname>PostgreSQL</>\n       8.3.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n    <sect4>\n     <title><application>psql</></title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Remove verbose startup banner; now just suggest <literal>help</>\n        (Joshua Drake)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <literal>help</> show common backslash commands (Greg\n        Sabino Mullane)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <literal>\\pset format wrapped</> mode to wrap output to the\n        screen width, or file/pipe output too if <literal>\\pset columns</>\n        is set (Bryce Nesbitt)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow all supported spellings of boolean values in <command>\\pset</>,\n        rather than just <literal>on</> and <literal>off</> (Bruce)\n       </para>\n\n       <para>\n        Formerly, any string other than <quote>off</> was silently taken\n        to mean <literal>true</>.  <application>psql</> will now complain\n        about unrecognized spellings (but still take them as <literal>true</>).\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Use the pager for wide output (Bruce)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Require a space between a one-letter backslash command and its first\n        argument (Bernd Helmle)\n       </para>\n\n       <para>\n        This removes a historical source of ambiguity.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Improve tab completion support for schema-qualified and\n        quoted identifiers (Greg Sabino Mullane)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add optional <literal>on</>/<literal>off</> argument for\n        <command>\\timing</> (David Fetter)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Display access control rights on multiple lines (Brendan\n        Jurd, Andreas Scherbaum)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <command>\\l</> show database access privileges (Andrew Gilligan)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <command>\\l+</> show database sizes, if permissions\n        allow (Andrew Gilligan)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add the <command>\\ef</> command to edit function definitions\n        (Abhijit Menon-Sen)\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title><application>psql</> \\d* commands</title>\n\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Make <command>\\d*</> commands that do not have a pattern argument\n        show system objects only if the <literal>S</> modifier is specified\n        (Greg Sabino Mullane, Bruce)\n       </para>\n\n       <para>\n        The former behavior was inconsistent across different variants\n        of <command>\\d</>, and in most cases it provided no easy way to see\n        just user objects.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Improve <command>\\d*</> commands to work with older\n        <productname>PostgreSQL</> server versions (back to 7.4),\n        not only the current server version\n        (Guillaume Lelarge)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <command>\\d</> show foreign-key constraints that reference\n        the selected table (Kenneth D'Souza)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <command>\\d</> on a sequence show its column values\n        (Euler Taveira de Oliveira)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add column storage type and other relation options to the\n        <command>\\d+</> display (Gregory Stark, Euler Taveira de\n        Oliveira)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Show relation size in <command>\\dt+</> output (Dickson S.\n        Guedes)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Show the possible values of <literal>enum</> types in <command>\\dT+</>\n        (David Fetter)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow <command>\\dC</> to accept a wildcard pattern, which matches\n        either datatype involved in the cast (Tom)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add a function type column to <command>\\df</>'s output, and add\n        options to list only selected types of functions (David Fetter)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <command>\\df</> not hide functions that take or return\n        type <type>cstring</> (Tom)\n       </para>\n\n       <para>\n        Previously, such functions were hidden because most of them are\n        datatype I/O functions, which were deemed uninteresting.  The new\n        policy about hiding system functions by default makes this wart\n        unnecessary.\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title><application>pg_dump</></title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Add a <literal>--no-tablespaces</> option to\n        <application>pg_dump</>/<application>pg_dumpall</>/<application>pg_restore</>\n        so that dumps can be restored to clusters that have non-matching\n        tablespace layouts (Gavin Roy)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Remove <option>-d</> and <option>-D</> options from\n        <application>pg_dump</> and <application>pg_dumpall</> (Tom)\n       </para>\n\n       <para>\n        These options were too frequently confused with the option to\n        select a database name in other <productname>PostgreSQL</>\n        client applications.  The functionality is still available,\n        but you must now spell out the long option name\n        <option>--inserts</> or <option>--column-inserts</>.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Remove <option>-i</>/<option>--ignore-version</> option from\n        <application>pg_dump</> and <application>pg_dumpall</> (Tom)\n       </para>\n\n       <para>\n        Use of this option does not throw an error, but it has no\n        effect.  This option was removed because the version checks\n        are necessary for safety.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Disable <varname>statement_timeout</> during dump and restore\n        (Joshua Drake)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <application>pg_dump</>/<application>pg_dumpall</> option\n        <option>--lock-wait-timeout</> (David Gould)\n       </para>\n\n       <para>\n        This allows dumps to fail if unable to acquire a shared lock\n        within the specified amount of time.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Reorder <application>pg_dump</> <literal>--data-only</> output\n        to dump tables referenced by foreign keys before\n        the referencing tables (Tom)\n       </para>\n\n       <para>\n        This allows data loads when foreign keys are already present.\n        If circular references make a safe ordering impossible, a\n        <literal>NOTICE</> is issued.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow <application>pg_dump</>, <application>pg_dumpall</>, and\n        <application>pg_restore</> to use a specified role (Benedek\n        L&aacute;szl&oacute;)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow <application>pg_restore</> to use multiple concurrent\n        connections to do the restore (Andrew)\n       </para>\n\n       <para>\n        The number of concurrent connections is controlled by the option\n        <literal>--jobs</>.  This is supported only for custom-format archives.\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n   </sect3>\n\n   <sect3>\n    <title>Programming Tools</title>\n\n    <sect4>\n     <title><application>libpq</></title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Allow the <type>OID</> to be specified when importing a large\n        object, via new function <function>lo_import_with_oid()</> (Tatsuo)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add <quote>events</> support (Andrew Chernow, Merlin Moncure)\n       </para>\n\n       <para>\n        This adds the ability to register callbacks to manage private\n        data associated with <structname>PGconn</> and <structname>PGresult</>\n        objects.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Improve error handling to allow the return of multiple\n        error messages as multi-line error reports (Magnus)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <function>PQexecParams()</> and related functions return\n        <varname>PGRES_EMPTY_QUERY</> for an empty query (Tom)\n       </para>\n\n       <para>\n        They previously returned <varname>PGRES_COMMAND_OK</>.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Document how to avoid the overhead of <function>WSACleanup()</>\n        on Windows (Andrew Chernow)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Do not rely on Kerberos tickets to determine the default database\n        username (Magnus)\n       </para>\n\n       <para>\n        Previously, a Kerberos-capable build of libpq would use the\n        principal name from any available Kerberos ticket as default\n        database username, even if the connection wasn't using Kerberos\n        authentication.  This was deemed inconsistent and confusing.\n        The default username is now determined the same way with or\n        without Kerberos.  Note however that the database username must still\n        match the ticket when Kerberos authentication is used.\n       </para>\n      </listitem>\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title><application>libpq</> <acronym>SSL</> (Secure Sockets Layer)\n      support</title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Fix certificate validation for <acronym>SSL</> connections\n        (Magnus)\n       </para>\n\n       <para>\n        <application>libpq</> now supports verifying both the certificate\n        and the name of the server when making <acronym>SSL</>\n        connections. If a root certificate is not available to use for\n        verification, <acronym>SSL</> connections will fail. The\n        <literal>sslmode</> parameter is used to enable certificate\n        verification and set the level of checking.\n        The default is still not to do any verification, allowing connections\n        to SSL-enabled servers without requiring a root certificate on the\n        client.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Support wildcard server certificates (Magnus)\n       </para>\n\n       <para>\n        If a certificate <acronym>CN</> starts with <literal>*</>, it will\n        be treated as a wildcard when matching the hostname, allowing the\n        use of the same certificate for multiple servers.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Allow the file locations for client certificates to be specified\n        (Mark Woodward, Alvaro, Magnus)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add a <function>PQinitOpenSSL</> function to allow greater control\n        over OpenSSL/libcrypto initialization (Andrew Chernow)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Make <application>libpq</> unregister its <application>OpenSSL</>\n        callbacks when no database connections remain open\n        (Bruce, Magnus, Russell Smith)\n       </para>\n\n       <para>\n        This is required for applications that unload the libpq library,\n        otherwise invalid <application>OpenSSL</> callbacks will remain.\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title><application>ecpg</></title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Add localization support for messages (Euler Taveira de\n        Oliveira)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        ecpg parser is now automatically generated from the server\n        parser (Michael)\n       </para>\n\n       <para>\n        Previously the ecpg parser was hand-maintained.\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n    <sect4>\n     <title>Server Programming Interface (<acronym>SPI</>)</title>\n     <itemizedlist>\n\n      <listitem>\n       <para>\n        Add support for single-use plans with out-of-line\n        parameters (Tom)\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Add new <varname>SPI_OK_REWRITTEN</> return code for\n        <function>SPI_execute()</> (Heikki)\n       </para>\n\n       <para>\n        This is used when a command is rewritten to another type of\n        command.\n       </para>\n      </listitem>\n\n      <listitem>\n       <para>\n        Remove unnecessary inclusions from <filename>executor/spi.h</> (Tom)\n       </para>\n\n       <para>\n        SPI-using modules might need to add some <literal>#include</>\n        lines if they were depending on <filename>spi.h</> to include\n        things for them.\n       </para>\n      </listitem>\n\n     </itemizedlist>\n\n    </sect4>\n\n   </sect3>\n\n   <sect3>\n    <title>Build Options</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Update build system to use <productname>Autoconf</> 2.61 (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Require <productname>GNU bison</> for source code builds (Peter)\n      </para>\n\n      <para>\n       This has effectively been required for several years, but now there\n       is no infrastructure claiming to support other parser tools.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <application>pg_config</> <literal>--htmldir</> option\n       (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Pass <type>float4</> by value inside the server (Zoltan\n       Boszormenyi)\n      </para>\n\n      <para>\n       Add <application>configure</> option\n       <literal>--disable-float4-byval</> to use the old behavior.\n       External C functions that use old-style (version 0) call convention\n       and pass or return <type>float4</> values will be broken by this\n       change, so you may need the <application>configure</> option if you\n       have such functions and don't want to update them.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Pass <type>float8</>, <type>int8</>, and related datatypes\n       by value inside the server on 64-bit platforms (Zoltan Boszormenyi)\n      </para>\n\n      <para>\n       Add <application>configure</> option\n       <literal>--disable-float8-byval</> to use the old behavior.\n       As above, this change might break old-style external C functions.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add configure options <literal>--with-segsize</>,\n       <literal>--with-blocksize</>, <literal>--with-wal-blocksize</>,\n       <literal>--with-wal-segsize</> (Zdenek Kotala, Tom)\n      </para>\n\n      <para>\n       This simplifies build-time control over several constants that\n       previously could only be changed by editing\n       <filename>pg_config_manual.h</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow threaded builds on <productname>Solaris</> 2.5 (Bruce)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Use the system's <function>getopt_long()</> on <productname>Solaris</>\n       (Zdenek Kotala, Tom)\n      </para>\n\n      <para>\n       This makes option processing more consistent with what Solaris users\n       expect.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add support for the <productname>Sun Studio</> compiler on\n       <productname>Linux</> (Julius Stroffek)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Append the major version number to the backend <application>gettext</>\n       domain, and the <literal>soname</> major version number to\n       libraries' <application>gettext</> domain (Peter)\n      </para>\n\n      <para>\n       This simplifies parallel installations of multiple versions.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add support for code coverage testing with <application>gcov</>\n       (Michelle Caisse)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow out-of-tree builds on <productname>Mingw</> and\n       <productname>Cygwin</> (Richard Evans)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix the use of <productname>Mingw</> as a cross-compiling source\n       platform (Peter)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Source Code</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Support 64-bit time zone data files (Heikki)\n      </para>\n\n      <para>\n       This adds support for daylight saving time (<acronym>DST</>)\n       calculations beyond the year 2038.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Deprecate use of platform's <type>time_t</> data type (Tom)\n      </para>\n\n      <para>\n       Some platforms have migrated to 64-bit <type>time_t</>, some have\n       not, and Windows can't make up its mind what it's doing.  Define\n       <type>pg_time_t</> to have the same meaning as <type>time_t</>,\n       but always be 64 bits (unless the platform has no 64-bit integer type),\n       and use that type in all module APIs and on-disk data formats.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix bug in handling of the time zone database when cross-compiling\n       (Richard Evans)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Link backend object files in one step, rather than in stages\n       (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve <application>gettext</> support to allow better translation\n       of plurals (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add message translation support to the PL languages (Alvaro, Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add more <application>DTrace</> probes (Robert Lor)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Enable <application>DTrace</> support on <application>macOS\n       Leopard</> and other non-Solaris platforms (Robert Lor)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Simplify and standardize conversions between C strings and\n       <type>text</> datums, by providing common functions for the purpose\n       (Brendan Jurd, Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Clean up the <filename>include/catalog/</> header files so that\n       frontend programs can include them without including\n       <filename>postgres.h</>\n       (Zdenek Kotala)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <type>name</> char-aligned, and suppress zero-padding of\n       <type>name</> entries in indexes (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Recover better if dynamically-loaded code executes <function>exit()</>\n       (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add a hook to let plug-ins monitor the executor (Itagaki\n       Takahiro)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add a hook to allow the planner's statistics lookup behavior to\n       be overridden (Simon Riggs)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <function>shmem_startup_hook()</> for custom shared memory\n       requirements (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Replace the index access method <function>amgetmulti</> entry point\n       with <function>amgetbitmap</>, and extend the API for\n       <function>amgettuple</> to support run-time determination of\n       operator lossiness (Heikki, Tom, Teodor)\n      </para>\n\n      <para>\n       The API for GIN and GiST opclass <function>consistent</> functions\n       has been extended as well.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add support for partial-match searches in <acronym>GIN</> indexes\n       (Teodor Sigaev, Oleg Bartunov)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Replace <structname>pg_class</> column <structfield>reltriggers</>\n       with boolean <structfield>relhastriggers</> (Simon)\n      </para>\n\n      <para>\n       Also remove unused <structname>pg_class</> columns\n       <structfield>relukeys</>, <structfield>relfkeys</>, and\n       <structfield>relrefs</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add a <structfield>relistemp</> column to <structname>pg_class</>\n       to ease identification of temporary tables (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Move platform <acronym>FAQ</>s into the main documentation\n       (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Prevent parser input files from being built with any conflicts\n       (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add support for the <literal>KOI8U</> (Ukrainian) encoding\n       (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add Japanese message translations (Japan PostgreSQL Users Group)\n      </para>\n\n      <para>\n       This used to be maintained as a separate project.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix problem when setting <varname>LC_MESSAGES</> on\n       <application>MSVC</>-built systems (Hiroshi Inoue, Hiroshi\n       Saito, Magnus)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Contrib</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add <filename>contrib/auto_explain</> to automatically run\n       <command>EXPLAIN</> on queries exceeding a specified duration\n       (Itagaki Takahiro, Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <filename>contrib/btree_gin</> to allow GIN indexes to\n       handle more datatypes (Oleg, Teodor)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <filename>contrib/citext</> to provide a case-insensitive,\n       multibyte-aware text data type (David Wheeler)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <filename>contrib/pg_stat_statements</> for server-wide\n       tracking of statement execution statistics (Itagaki Takahiro)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add duration and query mode options to <filename>contrib/pgbench</>\n       (Itagaki Takahiro)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <filename>contrib/pgbench</> use table names\n       <structname>pgbench_accounts</>, <structname>pgbench_branches</>,\n       <structname>pgbench_history</>, and <structname>pgbench_tellers</>,\n       rather than just <structname>accounts</>, <structname>branches</>,\n       <structname>history</>, and <structname>tellers</> (Tom)\n      </para>\n\n      <para>\n       This is to reduce the risk of accidentally destroying real data\n       by running <application>pgbench</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix <filename>contrib/pgstattuple</> to handle tables and\n       indexes with over 2 billion pages (Tatsuhito Kasahara)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       In <filename>contrib/fuzzystrmatch</>, add a version of the\n       Levenshtein string-distance function that allows the user to\n       specify the costs of insertion, deletion, and substitution\n       (Volkan Yazici)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <filename>contrib/ltree</> support multibyte encodings\n       (laser)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Enable <filename>contrib/dblink</> to use connection information\n       stored in the SQL/MED catalogs (Joe Conway)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve <filename>contrib/dblink</>'s reporting of errors from\n       the remote server (Joe Conway)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <filename>contrib/dblink</> set <varname>client_encoding</>\n       to match the local database's encoding (Joe Conway)\n      </para>\n\n      <para>\n       This prevents encoding problems when communicating with a remote\n       database that uses a different encoding.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make sure <filename>contrib/dblink</> uses a password supplied\n       by the user, and not accidentally taken from the server's\n       <filename>.pgpass</> file (Joe Conway)\n      </para>\n\n      <para>\n       This is a minor security enhancement.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <function>fsm_page_contents()</>\n       to <filename>contrib/pageinspect</> (Heikki)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Modify <function>get_raw_page()</> to support free space map\n       (<filename>*_fsm</>) files.  Also update\n       <filename>contrib/pg_freespacemap</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add support for multibyte encodings to <filename>contrib/pg_trgm</>\n       (Teodor)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Rewrite <filename>contrib/intagg</> to use new\n       functions <function>array_agg()</> and <function>unnest()</>\n       (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <filename>contrib/pg_standby</> recover all available WAL before\n       failover (Fujii Masao, Simon, Heikki)\n      </para>\n\n      <para>\n       To make this work safely, you now need to set the new\n       <literal>recovery_end_command</> option in <filename>recovery.conf</>\n       to clean up the trigger file after failover. <application>pg_standby</>\n       will no longer remove the trigger file itself.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <filename>contrib/pg_standby</>'s <option>-l</> option is now a no-op,\n       because it is unsafe to use a symlink (Simon)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n  </sect2>\n </sect1>\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/doc/src/sgml/release-8.2.sgml": "<!-- doc/src/sgml/release-8.2.sgml -->\n<!-- See header comment in release.sgml about typical markup -->\n\n <sect1 id=\"release-8-2-23\">\n  <title>Release 8.2.23</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2011-12-05</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.22.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <para>\n   This is expected to be the last <productname>PostgreSQL</> release\n   in the 8.2.X series.  Users are encouraged to update to a newer\n   release branch soon.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.23</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n   </para>\n\n   <para>\n    However, a longstanding error was discovered in the definition of the\n    <literal>information_schema.referential_constraints</> view.  If you\n    rely on correct results from that view, you should replace its\n    definition as explained in the first changelog item below.\n   </para>\n\n   <para>\n    Also, if you are upgrading from a version earlier than 8.2.14,\n    see <xref linkend=\"release-8-2-14\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix bugs in <literal>information_schema.referential_constraints</> view\n      (Tom Lane)\n     </para>\n\n     <para>\n      This view was being insufficiently careful about matching the\n      foreign-key constraint to the depended-on primary or unique key\n      constraint.  That could result in failure to show a foreign key\n      constraint at all, or showing it multiple times, or claiming that it\n      depends on a different constraint than the one it really does.\n     </para>\n\n     <para>\n      Since the view definition is installed by <application>initdb</>,\n      merely upgrading will not fix the problem.  If you need to fix this\n      in an existing installation, you can (as a superuser) drop the\n      <literal>information_schema</> schema then re-create it by sourcing\n      <filename><replaceable>SHAREDIR</>/information_schema.sql</filename>.\n      (Run <literal>pg_config --sharedir</> if you're uncertain where\n      <replaceable>SHAREDIR</> is.)  This must be repeated in each database\n      to be fixed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix TOAST-related data corruption during <literal>CREATE TABLE dest AS\n      SELECT * FROM src</> or <literal>INSERT INTO dest SELECT * FROM src</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      If a table has been modified by <command>ALTER TABLE ADD COLUMN</>,\n      attempts to copy its data verbatim to another table could produce\n      corrupt results in certain corner cases.\n      The problem can only manifest in this precise form in 8.4 and later,\n      but we patched earlier versions as well in case there are other code\n      paths that could trigger the same bug.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition during toast table access from stale syscache entries\n      (Tom Lane)\n     </para>\n\n     <para>\n      The typical symptom was transient errors like <quote>missing chunk\n      number 0 for toast value NNNNN in pg_toast_2619</>, where the cited\n      toast table would always belong to a system catalog.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve locale support in <type>money</> type's input and output\n      (Tom Lane)\n     </para>\n\n     <para>\n      Aside from not supporting all standard\n      <link linkend=\"guc-lc-monetary\"><varname>lc_monetary</></link>\n      formatting options, the input and output functions were inconsistent,\n      meaning there were locales in which dumped <type>money</> values could\n      not be re-read.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't let <link\n      linkend=\"guc-transform-null-equals\"><varname>transform_null_equals</></link>\n      affect <literal>CASE foo WHEN NULL ...</> constructs\n      (Heikki Linnakangas)\n     </para>\n\n     <para>\n      <varname>transform_null_equals</> is only supposed to affect\n      <literal>foo = NULL</> expressions written directly by the user, not\n      equality checks generated internally by this form of <literal>CASE</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Change foreign-key trigger creation order to better support\n      self-referential foreign keys (Tom Lane)\n     </para>\n\n     <para>\n      For a cascading foreign key that references its own table, a row update\n      will fire both the <literal>ON UPDATE</> trigger and the\n      <literal>CHECK</> trigger as one event.  The <literal>ON UPDATE</>\n      trigger must execute first, else the <literal>CHECK</> will check a\n      non-final state of the row and possibly throw an inappropriate error.\n      However, the firing order of these triggers is determined by their\n      names, which generally sort in creation order since the triggers have\n      auto-generated names following the convention\n      <quote>RI_ConstraintTrigger_NNNN</>.  A proper fix would require\n      modifying that convention, which we will do in 9.2, but it seems risky\n      to change it in existing releases.  So this patch just changes the\n      creation order of the triggers.  Users encountering this type of error\n      should drop and re-create the foreign key constraint to get its\n      triggers into the right order.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Preserve blank lines within commands in <application>psql</>'s command\n      history (Robert Haas)\n     </para>\n\n     <para>\n      The former behavior could cause problems if an empty line was removed\n      from within a string literal, for example.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use the preferred version of <application>xsubpp</> to build PL/Perl,\n      not necessarily the operating system's main copy\n      (David Wheeler and Alex Hunsaker)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Honor query cancel interrupts promptly in <function>pgstatindex()</>\n      (Robert Haas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure VPATH builds properly install all server header files\n      (Peter Eisentraut)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Shorten file names reported in verbose error messages (Peter Eisentraut)\n     </para>\n\n     <para>\n      Regular builds have always reported just the name of the C file\n      containing the error message call, but VPATH builds formerly\n      reported an absolute path name.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix interpretation of Windows timezone names for Central America\n      (Tom Lane)\n     </para>\n\n     <para>\n      Map <quote>Central America Standard Time</> to <literal>CST6</>, not\n      <literal>CST6CDT</>, because DST is generally not observed anywhere in\n      Central America.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2011n\n      for DST law changes in Brazil, Cuba, Fiji, Palestine, Russia, and Samoa;\n      also historical corrections for Alaska and British East Africa.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-22\">\n  <title>Release 8.2.22</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2011-09-26</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.21.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <para>\n   The <productname>PostgreSQL</> community will stop releasing updates\n   for the 8.2.X release series in December 2011.\n   Users are encouraged to update to a newer release branch soon.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.22</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n    However, if you are upgrading from a version earlier than 8.2.14,\n    see <xref linkend=\"release-8-2-14\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix multiple bugs in GiST index page split processing (Heikki\n      Linnakangas)\n     </para>\n\n     <para>\n      The probability of occurrence was low, but these could lead to index\n      corruption.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid possibly accessing off the end of memory in <command>ANALYZE</>\n      (Noah Misch)\n     </para>\n\n     <para>\n      This fixes a very-low-probability server crash scenario.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition in relcache init file invalidation (Tom Lane)\n     </para>\n\n     <para>\n      There was a window wherein a new backend process could read a stale init\n      file but miss the inval messages that would tell it the data is stale.\n      The result would be bizarre failures in catalog accesses, typically\n      <quote>could not read block 0 in file ...</> later during startup.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak at end of a GiST index scan (Tom Lane)\n     </para>\n\n     <para>\n      Commands that perform many separate GiST index scans, such as\n      verification of a new GiST-based exclusion constraint on a table\n      already containing many rows, could transiently require large amounts of\n      memory due to this leak.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix performance problem when constructing a large, lossy bitmap\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix array- and path-creating functions to ensure padding bytes are\n      zeroes (Tom Lane)\n     </para>\n\n     <para>\n      This avoids some situations where the planner will think that\n      semantically-equal constants are not equal, resulting in poor\n      optimization.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Work around gcc 4.6.0 bug that breaks WAL replay (Tom Lane)\n     </para>\n\n     <para>\n      This could lead to loss of committed transactions after a server crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix dump bug for <literal>VALUES</> in a view (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <literal>SELECT FOR UPDATE/SHARE</> on sequences (Tom Lane)\n     </para>\n\n     <para>\n      This operation doesn't work as expected and can lead to failures.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Defend against integer overflow when computing size of a hash table (Tom\n      Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix portability bugs in use of credentials control messages for\n      <quote>peer</> authentication (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix typo in <function>pg_srand48</> seed initialization (Andres Freund)\n     </para>\n\n     <para>\n      This led to failure to use all bits of the provided seed.  This function\n      is not used on most platforms (only those without <function>srandom</>),\n      and the potential security exposure from a less-random-than-expected\n      seed seems minimal in any case.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid integer overflow when the sum of <literal>LIMIT</> and\n      <literal>OFFSET</> values exceeds 2^63 (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add overflow checks to <type>int4</> and <type>int8</> versions of\n      <function>generate_series()</> (Robert Haas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix trailing-zero removal in <function>to_char()</> (Marti Raudsepp)\n     </para>\n\n     <para>\n      In a format with <literal>FM</> and no digit positions\n      after the decimal point, zeroes to the left of the decimal point could\n      be removed incorrectly.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>pg_size_pretty()</> to avoid overflow for inputs close to\n      2^63 (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>psql</>'s counting of script file line numbers during\n      <literal>COPY</> from a different file (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</>'s direct-to-database mode for\n      <varname>standard_conforming_strings</> (Tom Lane)\n     </para>\n\n     <para>\n      <application>pg_restore</> could emit incorrect commands when restoring\n      directly to a database server from an archive file that had been made\n      with <varname>standard_conforming_strings</> set to <literal>on</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix write-past-buffer-end and memory leak in <application>libpq</>'s\n      LDAP service lookup code (Albe Laurenz)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>libpq</>, avoid failures when using nonblocking I/O\n      and an SSL connection (Martin Pihlak, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve libpq's handling of failures during connection startup\n      (Tom Lane)\n     </para>\n\n     <para>\n      In particular, the response to a server report of <function>fork()</>\n      failure during SSL connection startup is now saner.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>ecpglib</> write <type>double</> values with 15 digits\n      precision (Akira Kurosawa)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Apply upstream fix for blowfish signed-character bug (CVE-2011-2483)\n      (Tom Lane)\n     </para>\n\n     <para>\n      <filename>contrib/pg_crypto</>'s blowfish encryption code could give\n      wrong results on platforms where char is signed (which is most),\n      leading to encrypted passwords being weaker than they should be.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak in <filename>contrib/seg</> (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>pgstatindex()</> to give consistent results for empty\n      indexes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow building with perl 5.14 (Alex Hunsaker)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update configure script's method for probing existence of system\n      functions (Tom Lane)\n     </para>\n\n     <para>\n      The version of autoconf we used in 8.3 and 8.2 could be fooled by\n      compilers that perform link-time optimization.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted issues with build and install file paths containing spaces\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2011i\n      for DST law changes in Canada, Egypt, Russia, Samoa, and South Sudan.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-21\">\n  <title>Release 8.2.21</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2011-04-18</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.20.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.21</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n    However, if you are upgrading from a version earlier than 8.2.14,\n    see <xref linkend=\"release-8-2-14\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Avoid potential deadlock during catalog cache initialization\n      (Nikhil Sontakke)\n     </para>\n\n     <para>\n      In some cases the cache loading code would acquire share lock on a\n      system index before locking the index's catalog.  This could deadlock\n      against processes trying to acquire exclusive locks in the other,\n      more standard order.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix dangling-pointer problem in <literal>BEFORE ROW UPDATE</> trigger\n      handling when there was a concurrent update to the target tuple\n      (Tom Lane)\n     </para>\n\n     <para>\n      This bug has been observed to result in intermittent <quote>cannot\n      extract system attribute from virtual tuple</> failures while trying to\n      do <literal>UPDATE RETURNING ctid</>.  There is a very small probability\n      of more serious errors, such as generating incorrect index entries for\n      the updated tuple.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <command>DROP TABLE</> when there are pending deferred trigger\n      events for the table (Tom Lane)\n     </para>\n\n     <para>\n      Formerly the <command>DROP</> would go through, leading to\n      <quote>could not open relation with OID nnn</> errors when the\n      triggers were eventually fired.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/Python memory leak involving array slices (Daniel Popowich)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</> to cope with long lines (over 1KB) in\n      TOC files (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Put in more safeguards against crashing due to division-by-zero\n      with overly enthusiastic compiler optimization (Aurelien Jarno)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Support use of dlopen() in FreeBSD and OpenBSD on MIPS (Tom Lane)\n     </para>\n\n     <para>\n      There was a hard-wired assumption that this system function was not\n      available on MIPS hardware on these systems.  Use a compile-time test\n      instead, since more recent versions have it.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix compilation failures on HP-UX (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix path separator used by <application>pg_regress</> on Cygwin\n      (Andrew Dunstan)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2011f\n      for DST law changes in Chile, Cuba, Falkland Islands, Morocco, Samoa,\n      and Turkey; also historical corrections for South Australia, Alaska,\n      and Hawaii.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-20\">\n  <title>Release 8.2.20</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2011-01-31</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.19.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.20</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n    However, if you are upgrading from a version earlier than 8.2.14,\n    see <xref linkend=\"release-8-2-14\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Avoid failures when <command>EXPLAIN</> tries to display a simple-form\n      <literal>CASE</> expression (Tom Lane)\n     </para>\n\n     <para>\n      If the <literal>CASE</>'s test expression was a constant, the planner\n      could simplify the <literal>CASE</> into a form that confused the\n      expression-display code, resulting in <quote>unexpected CASE WHEN\n      clause</> errors.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assignment to an array slice that is before the existing range\n      of subscripts (Tom Lane)\n     </para>\n\n     <para>\n      If there was a gap between the newly added subscripts and the first\n      pre-existing subscript, the code miscalculated how many entries needed\n      to be copied from the old array's null bitmap, potentially leading to\n      data corruption or crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid unexpected conversion overflow in planner for very distant date\n      values (Tom Lane)\n     </para>\n\n     <para>\n      The <type>date</> type supports a wider range of dates than can be\n      represented by the <type>timestamp</> types, but the planner assumed it\n      could always convert a date to timestamp with impunity.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</>'s text output for large objects (BLOBs)\n      when <varname>standard_conforming_strings</> is on (Tom Lane)\n     </para>\n\n     <para>\n      Although restoring directly to a database worked correctly, string\n      escaping was incorrect if <application>pg_restore</> was asked for\n      SQL text output and <varname>standard_conforming_strings</> had been\n      enabled in the source database.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix erroneous parsing of <type>tsquery</> values containing\n      <literal>... &amp; !(subexpression) | ...</literal> (Tom Lane)\n     </para>\n\n     <para>\n      Queries containing this combination of operators were not executed\n      correctly.  The same error existed in <filename>contrib/intarray</>'s\n      <type>query_int</> type and <filename>contrib/ltree</>'s\n      <type>ltxtquery</> type.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix buffer overrun in <filename>contrib/intarray</>'s input function\n      for the <type>query_int</> type (Apple)\n     </para>\n\n     <para>\n      This bug is a security risk since the function's return address could\n      be overwritten.  Thanks to Apple Inc's security team for reporting this\n      issue and supplying the fix.  (CVE-2010-4015)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug in <filename>contrib/seg</>'s GiST picksplit algorithm\n      (Alexander Korotkov)\n     </para>\n\n     <para>\n      This could result in considerable inefficiency, though not actually\n      incorrect answers, in a GiST index on a <type>seg</> column.\n      If you have such an index, consider <command>REINDEX</>ing it after\n      installing this update.  (This is identical to the bug that was fixed in\n      <filename>contrib/cube</> in the previous update.)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-19\">\n  <title>Release 8.2.19</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2010-12-16</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.18.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.19</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n    However, if you are upgrading from a version earlier than 8.2.14,\n    see <xref linkend=\"release-8-2-14\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Force the default\n      <link linkend=\"guc-wal-sync-method\"><varname>wal_sync_method</></link>\n      to be <literal>fdatasync</> on Linux (Tom Lane, Marti Raudsepp)\n     </para>\n\n     <para>\n      The default on Linux has actually been <literal>fdatasync</> for many\n      years, but recent kernel changes caused <productname>PostgreSQL</> to\n      choose <literal>open_datasync</> instead.  This choice did not result\n      in any performance improvement, and caused outright failures on\n      certain filesystems, notably <literal>ext4</> with the\n      <literal>data=journal</> mount option.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted bugs in WAL replay logic for GIN indexes (Tom Lane)\n     </para>\n\n     <para>\n      This could result in <quote>bad buffer id: 0</> failures or\n      corruption of index contents during replication.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix recovery from base backup when the starting checkpoint WAL record\n      is not in the same WAL segment as its redo point (Jeff Davis)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add support for detecting register-stack overrun on <literal>IA64</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      The <literal>IA64</> architecture has two hardware stacks.  Full\n      prevention of stack-overrun failures requires checking both.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add a check for stack overflow in <function>copyObject()</> (Tom Lane)\n     </para>\n\n     <para>\n      Certain code paths could crash due to stack overflow given a\n      sufficiently complex query.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix detection of page splits in temporary GiST indexes (Heikki\n      Linnakangas)\n     </para>\n\n     <para>\n      It is possible to have a <quote>concurrent</> page split in a\n      temporary index, if for example there is an open cursor scanning the\n      index when an insertion is done.  GiST failed to detect this case and\n      hence could deliver wrong results when execution of the cursor\n      continued.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid memory leakage while <command>ANALYZE</>'ing complex index\n      expressions (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure an index that uses a whole-row Var still depends on its table\n      (Tom Lane)\n     </para>\n\n     <para>\n      An index declared like <literal>create index i on t (foo(t.*))</>\n      would not automatically get dropped when its table was dropped.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Do not <quote>inline</> a SQL function with multiple <literal>OUT</>\n      parameters (Tom Lane)\n     </para>\n\n     <para>\n      This avoids a possible crash due to loss of information about the\n      expected result rowtype.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Behave correctly if <literal>ORDER BY</>, <literal>LIMIT</>,\n      <literal>FOR UPDATE</>, or <literal>WITH</> is attached to the\n      <literal>VALUES</> part of <literal>INSERT ... VALUES</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix constant-folding of <literal>COALESCE()</> expressions (Tom Lane)\n     </para>\n\n     <para>\n      The planner would sometimes attempt to evaluate sub-expressions that\n      in fact could never be reached, possibly leading to unexpected errors.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add print functionality for <structname>InhRelation</> nodes (Tom Lane)\n     </para>\n\n     <para>\n      This avoids a failure when <varname>debug_print_parse</> is enabled\n      and certain types of query are executed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect calculation of distance from a point to a horizontal\n      line segment (Tom Lane)\n     </para>\n\n     <para>\n      This bug affected several different geometric distance-measurement\n      operators.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>PL/pgSQL</>'s handling of <quote>simple</>\n      expressions to not fail in recursion or error-recovery cases (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>PL/Python</>'s handling of set-returning functions\n      (Jan Urbanski)\n     </para>\n\n     <para>\n      Attempts to call SPI functions within the iterator generating a set\n      result would fail.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug in <filename>contrib/cube</>'s GiST picksplit algorithm\n      (Alexander Korotkov)\n     </para>\n\n     <para>\n      This could result in considerable inefficiency, though not actually\n      incorrect answers, in a GiST index on a <type>cube</> column.\n      If you have such an index, consider <command>REINDEX</>ing it after\n      installing this update.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't emit <quote>identifier will be truncated</> notices in\n      <filename>contrib/dblink</> except when creating new connections\n      (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix potential coredump on missing public key in\n      <filename>contrib/pgcrypto</> (Marti Raudsepp)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak in <filename>contrib/xml2</>'s XPath query functions\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2010o\n      for DST law changes in Fiji and Samoa;\n      also historical corrections for Hong Kong.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-18\">\n  <title>Release 8.2.18</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2010-10-04</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.17.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.18</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n    However, if you are upgrading from a version earlier than 8.2.14,\n    see <xref linkend=\"release-8-2-14\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Use a separate interpreter for each calling SQL userid in PL/Perl and\n      PL/Tcl (Tom Lane)\n     </para>\n\n     <para>\n      This change prevents security problems that can be caused by subverting\n      Perl or Tcl code that will be executed later in the same session under\n      another SQL user identity (for example, within a <literal>SECURITY\n      DEFINER</> function).  Most scripting languages offer numerous ways that\n      that might be done, such as redefining standard functions or operators\n      called by the target function.  Without this change, any SQL user with\n      Perl or Tcl language usage rights can do essentially anything with the\n      SQL privileges of the target function's owner.\n     </para>\n\n     <para>\n      The cost of this change is that intentional communication among Perl\n      and Tcl functions becomes more difficult.  To provide an escape hatch,\n      PL/PerlU and PL/TclU functions continue to use only one interpreter\n      per session.  This is not considered a security issue since all such\n      functions execute at the trust level of a database superuser already.\n     </para>\n\n     <para>\n      It is likely that third-party procedural languages that claim to offer\n      trusted execution have similar security issues.  We advise contacting\n      the authors of any PL you are depending on for security-critical\n      purposes.\n     </para>\n\n     <para>\n      Our thanks to Tim Bunce for pointing out this issue (CVE-2010-3433).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent possible crashes in <function>pg_get_expr()</> by disallowing\n      it from being called with an argument that is not one of the system\n      catalog columns it's intended to be used with\n      (Heikki Linnakangas, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix Windows shared-memory allocation code\n      (Tsutomu Yamada, Magnus Hagander)\n     </para>\n\n     <para>\n      This bug led to the often-reported <quote>could not reattach to shared\n      memory</quote> error message.  This is a back-patch of a fix that was\n      applied to newer branches some time ago.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Treat exit code 128 (<literal>ERROR_WAIT_NO_CHILDREN</>) as non-fatal on\n      Windows (Magnus Hagander)\n     </para>\n\n     <para>\n      Under high load, Windows processes will sometimes fail at startup with\n      this error code.  Formerly the postmaster treated this as a panic\n      condition and restarted the whole database, but that seems to be\n      an overreaction.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible duplicate scans of <literal>UNION ALL</> member relations\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <quote>cannot handle unplanned sub-select</quote> error (Tom Lane)\n     </para>\n\n     <para>\n      This occurred when a sub-select contains a join alias reference that\n      expands into an expression containing another sub-select.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Reduce PANIC to ERROR in some occasionally-reported btree failure cases,\n      and provide additional detail in the resulting error messages\n      (Tom Lane)\n     </para>\n\n     <para>\n      This should improve the system's robustness with corrupted indexes.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent show_session_authorization() from crashing within autovacuum\n      processes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Defend against functions returning setof record where not all the\n      returned rows are actually of the same rowtype (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible failure when hashing a pass-by-reference function result\n      (Tao Ma, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Take care to fsync the contents of lockfiles (both\n      <filename>postmaster.pid</> and the socket lockfile) while writing them\n      (Tom Lane)\n     </para>\n\n     <para>\n      This omission could result in corrupted lockfile contents if the\n      machine crashes shortly after postmaster start.  That could in turn\n      prevent subsequent attempts to start the postmaster from succeeding,\n      until the lockfile is manually removed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid recursion while assigning XIDs to heavily-nested\n      subtransactions (Andres Freund, Robert Haas)\n     </para>\n\n     <para>\n      The original coding could result in a crash if there was limited\n      stack space.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <varname>log_line_prefix</>'s <literal>%i</> escape,\n      which could produce junk early in backend startup (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible data corruption in <command>ALTER TABLE ... SET\n      TABLESPACE</> when archiving is enabled (Jeff Davis)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow <command>CREATE DATABASE</> and <command>ALTER DATABASE ... SET\n      TABLESPACE</> to be interrupted by query-cancel (Guillaume Lelarge)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In PL/Python, defend against null pointer results from\n      <function>PyCObject_AsVoidPtr</> and <function>PyCObject_FromVoidPtr</>\n      (Peter Eisentraut)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <filename>contrib/dblink</>'s handling of tables containing\n      dropped columns (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix connection leak after <quote>duplicate connection name</quote>\n      errors in <filename>contrib/dblink</> (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/dblink</> to handle connection names longer than\n      62 bytes correctly (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add <function>hstore(text, text)</>\n      function to <filename>contrib/hstore</> (Robert Haas)\n     </para>\n\n     <para>\n      This function is the recommended substitute for the now-deprecated\n      <literal>=&gt;</> operator.  It was back-patched so that future-proofed\n      code can be used with older server versions.  Note that the patch will\n      be effective only after <filename>contrib/hstore</> is installed or\n      reinstalled in a particular database.  Users might prefer to execute\n      the <command>CREATE FUNCTION</> command by hand, instead.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update build infrastructure and documentation to reflect the source code\n      repository's move from CVS to Git (Magnus Hagander and others)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2010l\n      for DST law changes in Egypt and Palestine; also historical corrections\n      for Finland.\n     </para>\n\n     <para>\n      This change also adds new names for two Micronesian timezones:\n      Pacific/Chuuk is now preferred over Pacific/Truk (and the preferred\n      abbreviation is CHUT not TRUT) and Pacific/Pohnpei is preferred over\n      Pacific/Ponape.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make Windows' <quote>N. Central Asia Standard Time</> timezone map to\n      Asia/Novosibirsk, not Asia/Almaty (Magnus Hagander)\n     </para>\n\n     <para>\n      Microsoft changed the DST behavior of this zone in the timezone update\n      from KB976098. Asia/Novosibirsk is a better match to its new behavior.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-17\">\n  <title>Release 8.2.17</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2010-05-17</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.16.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.17</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n    However, if you are upgrading from a version earlier than 8.2.14,\n    see <xref linkend=\"release-8-2-14\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Enforce restrictions in <literal>plperl</> using an opmask applied to\n      the whole interpreter, instead of using <filename>Safe.pm</>\n      (Tim Bunce, Andrew Dunstan)\n     </para>\n\n     <para>\n      Recent developments have convinced us that <filename>Safe.pm</> is too\n      insecure to rely on for making <literal>plperl</> trustable.  This\n      change removes use of <filename>Safe.pm</> altogether, in favor of using\n      a separate interpreter with an opcode mask that is always applied.\n      Pleasant side effects of the change include that it is now possible to\n      use Perl's <literal>strict</> pragma in a natural way in\n      <literal>plperl</>, and that Perl's <literal>$a</> and <literal>$b</>\n      variables work as expected in sort routines, and that function\n      compilation is significantly faster.  (CVE-2010-1169)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent PL/Tcl from executing untrustworthy code from\n      <structname>pltcl_modules</> (Tom)\n     </para>\n\n     <para>\n      PL/Tcl's feature for autoloading Tcl code from a database table\n      could be exploited for trojan-horse attacks, because there was no\n      restriction on who could create or insert into that table.  This change\n      disables the feature unless <structname>pltcl_modules</> is owned by a\n      superuser.  (However, the permissions on the table are not checked, so\n      installations that really need a less-than-secure modules table can\n      still grant suitable privileges to trusted non-superusers.)  Also,\n      prevent loading code into the unrestricted <quote>normal</> Tcl\n      interpreter unless we are really going to execute a <literal>pltclu</>\n      function.  (CVE-2010-1170)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash if a cache reset message is received during\n      rebuild of a relcache entry (Heikki)\n     </para>\n\n     <para>\n      This error was introduced in 8.2.16 while fixing a related failure.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Do not allow an unprivileged user to reset superuser-only parameter\n      settings (Alvaro)\n     </para>\n\n     <para>\n      Previously, if an unprivileged user ran <literal>ALTER USER ... RESET\n      ALL</> for himself, or <literal>ALTER DATABASE ... RESET ALL</> for\n      a database he owns, this would remove all special parameter settings\n      for the user or database, even ones that are only supposed to be\n      changeable by a superuser.  Now, the <command>ALTER</> will only\n      remove the parameters that the user has permission to change.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid possible crash during backend shutdown if shutdown occurs\n      when a <literal>CONTEXT</> addition would be made to log entries (Tom)\n     </para>\n\n     <para>\n      In some cases the context-printing function would fail because the\n      current transaction had already been rolled back when it came time\n      to print a log message.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update PL/Perl's <filename>ppport.h</> for modern Perl versions\n      (Andrew)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted memory leaks in PL/Python (Andreas Freund, Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent infinite recursion in <application>psql</> when expanding\n      a variable that refers to itself (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>psql</>'s <literal>\\copy</> to not add spaces around\n      a dot within <literal>\\copy (select ...)</> (Tom)\n     </para>\n\n     <para>\n      Addition of spaces around the decimal point in a numeric literal would\n      result in a syntax error.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that <filename>contrib/pgstattuple</> functions respond to cancel\n      interrupts promptly (Tatsuhito Kasahara)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make server startup deal properly with the case that\n      <function>shmget()</> returns <literal>EINVAL</> for an existing\n      shared memory segment (Tom)\n     </para>\n\n     <para>\n      This behavior has been observed on BSD-derived kernels including macOS.\n      It resulted in an entirely-misleading startup failure complaining that\n      the shared memory request size was too large.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid possible crashes in syslogger process on Windows (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Deal more robustly with incomplete time zone information in the\n      Windows registry (Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update the set of known Windows time zone names (Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2010j\n      for DST law changes in Argentina, Australian Antarctic, Bangladesh,\n      Mexico, Morocco, Pakistan, Palestine, Russia, Syria, Tunisia;\n      also historical corrections for Taiwan.\n     </para>\n\n     <para>\n      Also, add <literal>PKST</> (Pakistan Summer Time) to the default set of\n      timezone abbreviations.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-16\">\n  <title>Release 8.2.16</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2010-03-15</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.15.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.16</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n    However, if you are upgrading from a version earlier than 8.2.14,\n    see <xref linkend=\"release-8-2-14\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Add new configuration parameter <varname>ssl_renegotiation_limit</> to\n      control how often we do session key renegotiation for an SSL connection\n      (Magnus)\n     </para>\n\n     <para>\n      This can be set to zero to disable renegotiation completely, which may\n      be required if a broken SSL library is used.  In particular, some\n      vendors are shipping stopgap patches for CVE-2009-3555 that cause\n      renegotiation attempts to fail.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible deadlock during backend startup (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crashes due to not handling errors during relcache reload\n      cleanly (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crashes when trying to recover from a failure in\n      subtransaction start (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix server memory leak associated with use of savepoints and a client\n      encoding different from server's encoding (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect WAL data emitted during end-of-recovery cleanup of a GIST\n      index page split (Yoichi Hirai)\n     </para>\n\n     <para>\n      This would result in index corruption, or even more likely an error\n      during WAL replay, if we were unlucky enough to crash during\n      end-of-recovery cleanup after having completed an incomplete GIST\n      insertion.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <function>substring()</> for <type>bit</> types treat any negative\n      length as meaning <quote>all the rest of the string</> (Tom)\n     </para>\n\n     <para>\n      The previous coding treated only -1 that way, and would produce an\n      invalid result value for other negative values, possibly leading to\n      a crash (CVE-2010-0442).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix integer-to-bit-string conversions to handle the first fractional\n      byte correctly when the output bit width is wider than the given\n      integer by something other than a multiple of 8 bits (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix some cases of pathologically slow regular expression matching (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix the <literal>STOP WAL LOCATION</> entry in backup history files to\n      report the next WAL segment's name when the end location is exactly at a\n      segment boundary (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix some more cases of temporary-file leakage (Heikki)\n     </para>\n\n     <para>\n      This corrects a problem introduced in the previous minor release.\n      One case that failed is when a plpgsql function returning set is\n      called within another function's exception handler.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve constraint exclusion processing of boolean-variable cases,\n      in particular make it possible to exclude a partition that has a\n      <quote>bool_column = false</> constraint (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      When reading <filename>pg_hba.conf</> and related files, do not treat\n      <literal>@something</> as a file inclusion request if the <literal>@</>\n      appears inside quote marks; also, never treat <literal>@</> by itself\n      as a file inclusion request (Tom)\n     </para>\n\n     <para>\n      This prevents erratic behavior if a role or database name starts with\n      <literal>@</>.  If you need to include a file whose path name\n      contains spaces, you can still do so, but you must write\n      <literal>@\"/path to/file\"</> rather than putting the quotes around\n      the whole construct.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent infinite loop on some platforms if a directory is named as\n      an inclusion target in <filename>pg_hba.conf</> and related files\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible infinite loop if <function>SSL_read</> or\n      <function>SSL_write</> fails without setting <varname>errno</> (Tom)\n     </para>\n\n     <para>\n      This is reportedly possible with some Windows versions of\n      <application>openssl</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>psql</>'s <literal>numericlocale</> option to not\n      format strings it shouldn't in latex and troff output formats (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>psql</> return the correct exit status (3) when\n      <literal>ON_ERROR_STOP</> and <literal>--single-transaction</> are\n      both specified and an error occurs during the implied <command>COMMIT</>\n      (Bruce)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix plpgsql failure in one case where a composite column is set to NULL\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible failure when calling PL/Perl functions from PL/PerlU\n      or vice versa (Tim Bunce)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add <literal>volatile</> markings in PL/Python to avoid possible\n      compiler-specific misbehavior (Zdenek Kotala)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure PL/Tcl initializes the Tcl interpreter fully (Tom)\n     </para>\n\n     <para>\n      The only known symptom of this oversight is that the Tcl\n      <literal>clock</> command misbehaves if using Tcl 8.5 or later.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent crash in <filename>contrib/dblink</> when too many key\n      columns are specified to a <function>dblink_build_sql_*</> function\n      (Rushabh Lathia, Joe Conway)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted crashes in <filename>contrib/xml2</> caused by sloppy\n      memory management (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make building of <filename>contrib/xml2</> more robust on Windows\n      (Andrew)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition in Windows signal handling (Radu Ilie)\n     </para>\n\n     <para>\n      One known symptom of this bug is that rows in <structname>pg_listener</>\n      could be dropped under heavy load.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2010e\n      for DST law changes in Bangladesh, Chile, Fiji, Mexico, Paraguay, Samoa.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-15\">\n  <title>Release 8.2.15</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2009-12-14</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.14.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.15</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n    However, if you are upgrading from a version earlier than 8.2.14,\n    see <xref linkend=\"release-8-2-14\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Protect against indirect security threats caused by index functions\n      changing session-local state (Gurjeet Singh, Tom)\n     </para>\n\n     <para>\n      This change prevents allegedly-immutable index functions from possibly\n      subverting a superuser's session (CVE-2009-4136).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Reject SSL certificates containing an embedded null byte in the common\n      name (CN) field (Magnus)\n     </para>\n\n     <para>\n      This prevents unintended matching of a certificate to a server or client\n      name during SSL validation (CVE-2009-4034).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash during backend-startup-time cache initialization (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent signals from interrupting <literal>VACUUM</> at unsafe times\n      (Alvaro)\n     </para>\n\n     <para>\n      This fix prevents a PANIC if a <literal>VACUUM FULL</> is canceled\n      after it's already committed its tuple movements, as well as transient\n      errors if a plain <literal>VACUUM</> is interrupted after having\n      truncated the table.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash due to integer overflow in hash table size\n      calculation (Tom)\n     </para>\n\n     <para>\n      This could occur with extremely large planner estimates for the size of\n      a hashjoin's result.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix very rare crash in <type>inet</>/<type>cidr</> comparisons (Chris\n      Mikkelson)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that shared tuple-level locks held by prepared transactions are\n      not ignored (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix premature drop of temporary files used for a cursor that is accessed\n      within a subtransaction (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect logic for GiST index page splits, when the split depends\n      on a non-first column of the index (Paul Ramsey)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't error out if recycling or removing an old WAL file fails at the\n      end of checkpoint (Heikki)\n     </para>\n\n     <para>\n      It's better to treat the problem as non-fatal and allow the checkpoint\n      to complete.  Future checkpoints will retry the removal.  Such problems\n      are not expected in normal operation, but have been seen to be\n      caused by misdesigned Windows anti-virus and backup software.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure WAL files aren't repeatedly archived on Windows (Heikki)\n     </para>\n\n     <para>\n      This is another symptom that could happen if some other process\n      interfered with deletion of a no-longer-needed file.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PAM password processing to be more robust (Tom)\n     </para>\n\n     <para>\n      The previous code is known to fail with the combination of the Linux\n      <literal>pam_krb5</> PAM module with Microsoft Active Directory as the\n      domain controller.  It might have problems elsewhere too, since it was\n      making unjustified assumptions about what arguments the PAM stack would\n      pass to it.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix processing of ownership dependencies during <literal>CREATE OR\n      REPLACE FUNCTION</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug with calling <literal>plperl</> from <literal>plperlu</> or vice\n      versa (Tom)\n     </para>\n\n     <para>\n      An error exit from the inner function could result in crashes due to\n      failure to re-select the correct Perl interpreter for the outer function.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix session-lifespan memory leak when a PL/Perl function is redefined\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that Perl arrays are properly converted to\n      <productname>PostgreSQL</> arrays when returned by a set-returning\n      PL/Perl function (Andrew Dunstan, Abhijit Menon-Sen)\n     </para>\n\n     <para>\n      This worked correctly already for non-set-returning functions.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix rare crash in exception processing in PL/Python (Peter)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure <application>psql</>'s flex module is compiled with the correct\n      system header definitions (Tom)\n     </para>\n\n     <para>\n      This fixes build failures on platforms where\n      <literal>--enable-largefile</> causes incompatible changes in the\n      generated code.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make the postmaster ignore any <literal>application_name</> parameter in\n      connection request packets, to improve compatibility with future libpq\n      versions (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update the timezone abbreviation files to match current reality (Joachim\n      Wieland)\n     </para>\n\n     <para>\n      This includes adding <literal>IDT</> and <literal>SGT</> to the default\n      timezone abbreviation set.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2009s\n      for DST law changes in Antarctica, Argentina, Bangladesh, Fiji,\n      Novokuznetsk, Pakistan, Palestine, Samoa, Syria; also historical\n      corrections for Hong Kong.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-14\">\n  <title>Release 8.2.14</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2009-09-09</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.13.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.14</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n    However, if you have any hash indexes on <type>interval</> columns,\n    you must <command>REINDEX</> them after updating to 8.2.14.\n    Also, if you are upgrading from a version earlier than 8.2.11,\n    see <xref linkend=\"release-8-2-11\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Force WAL segment switch during <function>pg_start_backup()</>\n      (Heikki)\n     </para>\n\n     <para>\n      This avoids corner cases that could render a base backup unusable.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <command>RESET ROLE</> and <command>RESET SESSION\n      AUTHORIZATION</> inside security-definer functions (Tom, Heikki)\n     </para>\n\n     <para>\n      This covers a case that was missed in the previous patch that\n      disallowed <command>SET ROLE</> and <command>SET SESSION\n      AUTHORIZATION</> inside security-definer functions.\n      (See CVE-2007-6600)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <command>LOAD</> of an already-loaded loadable module\n      into a no-op (Tom)\n     </para>\n\n     <para>\n      Formerly, <command>LOAD</> would attempt to unload and re-load the\n      module, but this is unsafe and not all that useful.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow empty passwords during LDAP authentication (Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix handling of sub-SELECTs appearing in the arguments of\n      an outer-level aggregate function (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bugs associated with fetching a whole-row value from the\n      output of a Sort or Materialize plan node (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Revert planner change that disabled partial-index and constraint\n      exclusion optimizations when there were more than 100 clauses in\n      an AND or OR list (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix hash calculation for data type <type>interval</> (Tom)\n     </para>\n\n     <para>\n      This corrects wrong results for hash joins on interval values.\n      It also changes the contents of hash indexes on interval columns.\n      If you have any such indexes, you must <command>REINDEX</> them\n      after updating.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Treat <function>to_char(..., 'TH')</> as an uppercase ordinal\n      suffix with <literal>'HH'</>/<literal>'HH12'</> (Heikki)\n     </para>\n\n     <para>\n      It was previously handled as <literal>'th'</> (lowercase).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix overflow for <literal>INTERVAL '<replaceable>x</> ms'</literal>\n      when <replaceable>x</> is more than 2 million and integer\n      datetimes are in use (Alex Hunsaker)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix calculation of distance between a point and a line segment (Tom)\n     </para>\n\n     <para>\n      This led to incorrect results from a number of geometric operators.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <type>money</> data type to work in locales where currency\n      amounts have no fractional digits, e.g. Japan (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Properly round datetime input like\n      <literal>00:12:57.9999999999999999999999999999</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix poor choice of page split point in GiST R-tree operator classes\n      (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid performance degradation in bulk inserts into GIN indexes\n      when the input values are (nearly) in sorted order (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Correctly enforce NOT NULL domain constraints in some contexts in\n      PL/pgSQL (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix portability issues in plperl initialization (Andrew Dunstan)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_ctl</> to not go into an infinite loop if\n      <filename>postgresql.conf</> is empty (Jeff Davis)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <filename>contrib/hstore</> throw an error when a key or\n      value is too long to fit in its data structure, rather than\n      silently truncating it (Andrew Gierth)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/xml2</>'s <function>xslt_process()</> to\n      properly handle the maximum number of parameters (twenty) (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve robustness of <application>libpq</>'s code to recover\n      from errors during <command>COPY FROM STDIN</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid including conflicting readline and editline header files\n      when both libraries are installed (Zdenek Kotala)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2009l\n      for DST law changes in Bangladesh, Egypt, Jordan, Pakistan,\n      Argentina/San_Luis, Cuba, Jordan (historical correction only),\n      Mauritius, Morocco, Palestine, Syria, Tunisia.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-13\">\n  <title>Release 8.2.13</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2009-03-16</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.12.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.13</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n    However, if you are upgrading from a version earlier than 8.2.11,\n    see <xref linkend=\"release-8-2-11\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Prevent error recursion crashes when encoding conversion fails (Tom)\n     </para>\n\n     <para>\n      This change extends fixes made in the last two minor releases for\n      related failure scenarios.  The previous fixes were narrowly tailored\n      for the original problem reports, but we have now recognized that\n      <emphasis>any</> error thrown by an encoding conversion function could\n      potentially lead to infinite recursion while trying to report the\n      error.  The solution therefore is to disable translation and encoding\n      conversion and report the plain-ASCII form of any error message,\n      if we find we have gotten into a recursive error reporting situation.\n      (CVE-2009-0922)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <command>CREATE CONVERSION</> with the wrong encodings\n      for the specified conversion function (Heikki)\n     </para>\n\n     <para>\n      This prevents one possible scenario for encoding conversion failure.\n      The previous change is a backstop to guard against other kinds of\n      failures in the same area.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix core dump when <function>to_char()</> is given format codes that\n      are inappropriate for the type of the data argument (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible failure in <filename>contrib/tsearch2</> when C locale is\n      used with a multi-byte encoding (Teodor)\n     </para>\n\n     <para>\n      Crashes were possible on platforms where <type>wchar_t</> is narrower\n      than <type>int</>; Windows in particular.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix extreme inefficiency in <filename>contrib/tsearch2</> parser's\n      handling of an email-like string containing multiple <literal>@</>\n      characters (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix decompilation of <literal>CASE WHEN</> with an implicit coercion\n      (Tom)\n     </para>\n\n     <para>\n      This mistake could lead to Assert failures in an Assert-enabled build,\n      or an <quote>unexpected CASE WHEN clause</> error message in other\n      cases, when trying to examine or dump a view.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible misassignment of the owner of a TOAST table's rowtype (Tom)\n     </para>\n\n     <para>\n      If <command>CLUSTER</> or a rewriting variant of <command>ALTER TABLE</>\n      were executed by someone other than the table owner, the\n      <structname>pg_type</> entry for the table's TOAST table would end up\n      marked as owned by that someone.  This caused no immediate problems,\n      since the permissions on the TOAST rowtype aren't examined by any\n      ordinary database operation.  However, it could lead to unexpected\n      failures if one later tried to drop the role that issued the command\n      (in 8.1 or 8.2), or <quote>owner of data type appears to be invalid</>\n      warnings from <application>pg_dump</> after having done so (in 8.3).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/pgSQL to not treat <literal>INTO</> after <command>INSERT</> as\n      an INTO-variables clause anywhere in the string, not only at the start;\n      in particular, don't fail for <command>INSERT INTO</> within\n      <command>CREATE RULE</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Clean up PL/pgSQL error status variables fully at block exit\n      (Ashesh Vashi and Dave Page)\n     </para>\n\n     <para>\n      This is not a problem for PL/pgSQL itself, but the omission could cause\n      the PL/pgSQL Debugger to crash while examining the state of a function.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Retry failed calls to <function>CallNamedPipe()</> on Windows\n      (Steve Marshall, Magnus)\n     </para>\n\n     <para>\n      It appears that this function can sometimes fail transiently;\n      we previously treated any failure as a hard error, which could\n      confuse <command>LISTEN</>/<command>NOTIFY</> as well as other\n      operations.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add <literal>MUST</> (Mauritius Island Summer Time) to the default list\n      of known timezone abbreviations (Xavier Bugaud)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-12\">\n  <title>Release 8.2.12</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2009-02-02</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.11.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.12</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n    However, if you are upgrading from a version earlier than 8.2.11,\n    see <xref linkend=\"release-8-2-11\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Improve handling of URLs in <function>headline()</> function (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve handling of overlength headlines in <function>headline()</>\n      function (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent possible Assert failure or misconversion if an encoding\n      conversion is created with the wrong conversion function for the\n      specified pair of encodings (Tom, Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible Assert failure if a statement executed in PL/pgSQL is\n      rewritten into another kind of statement, for example if an\n      <command>INSERT</> is rewritten into an <command>UPDATE</> (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that a snapshot is available to datatype input functions (Tom)\n     </para>\n\n     <para>\n      This primarily affects domains that are declared with <literal>CHECK</>\n      constraints involving user-defined stable or immutable functions.  Such\n      functions typically fail if no snapshot has been set.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make it safer for SPI-using functions to be used within datatype I/O;\n      in particular, to be used in domain check constraints (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid unnecessary locking of small tables in <command>VACUUM</>\n      (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix a problem that made <literal>UPDATE RETURNING tableoid</>\n      return zero instead of the correct OID (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner misestimation of selectivity when transitive equality\n      is applied to an outer-join clause (Tom)\n     </para>\n\n     <para>\n      This could result in bad plans for queries like\n      <literal>... from a left join b on a.a1 = b.b1 where a.a1 = 42 ...</>\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve optimizer's handling of long <literal>IN</> lists (Tom)\n     </para>\n\n     <para>\n      This change avoids wasting large amounts of time on such lists\n      when constraint exclusion is enabled.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that the contents of a holdable cursor don't depend on the\n      contents of TOAST tables (Tom)\n     </para>\n\n     <para>\n      Previously, large field values in a cursor result might be represented\n      as TOAST pointers, which would fail if the referenced table got dropped\n      before the cursor is read, or if the large value is deleted and then\n      vacuumed away.  This cannot happen with an ordinary cursor,\n      but it could with a cursor that is held past its creating transaction.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak when a set-returning function is terminated without\n      reading its whole result (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/dblink</>'s\n      <function>dblink_get_result(text,bool)</> function (Joe)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible garbage output from <filename>contrib/sslinfo</> functions\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>configure</> script to properly report failure when\n      unable to obtain linkage information for PL/Perl (Andrew)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make all documentation reference <literal>pgsql-bugs</> and/or\n      <literal>pgsql-hackers</> as appropriate, instead of the\n      now-decommissioned <literal>pgsql-ports</> and <literal>pgsql-patches</>\n      mailing lists (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2009a (for\n      Kathmandu and historical DST corrections in Switzerland, Cuba)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-11\">\n  <title>Release 8.2.11</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2008-11-03</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.10.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.11</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n    However, if you are upgrading from a version earlier than 8.2.7,\n    see <xref linkend=\"release-8-2-7\">.  Also, if you were running a previous\n    8.2.X release, it is recommended to <command>REINDEX</> all GiST\n    indexes after the upgrade.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix GiST index corruption due to marking the wrong index entry\n      <quote>dead</> after a deletion (Teodor)\n     </para>\n\n     <para>\n      This would result in index searches failing to find rows they\n      should have found.  Corrupted indexes can be fixed with\n      <command>REINDEX</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix backend crash when the client encoding cannot represent a localized\n      error message (Tom)\n     </para>\n\n     <para>\n      We have addressed similar issues before, but it would still fail if\n      the <quote>character has no equivalent</> message itself couldn't\n      be converted.  The fix is to disable localization and send the plain\n      ASCII error message when we detect such a situation.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash when deeply nested functions are invoked from\n      a trigger (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve optimization of <replaceable>expression</> <literal>IN</>\n      (<replaceable>expression-list</>) queries (Tom, per an idea from Robert\n      Haas)\n     </para>\n\n     <para>\n      Cases in which there are query variables on the right-hand side had been\n      handled less efficiently in 8.2.x and 8.3.x than in prior versions.\n      The fix restores 8.1 behavior for such cases.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix mis-expansion of rule queries when a sub-<literal>SELECT</> appears\n      in a function call in <literal>FROM</>,  a multi-row <literal>VALUES</>\n      list, or a <literal>RETURNING</> list (Tom)\n     </para>\n\n     <para>\n      The usual symptom of this problem is an <quote>unrecognized node type</>\n      error.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak during rescan of a hashed aggregation plan (Neil)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure an error is reported when a newly-defined PL/pgSQL trigger\n      function is invoked as a normal function (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent possible collision of <structfield>relfilenode</> numbers\n      when moving a table to another tablespace with <command>ALTER SET\n      TABLESPACE</> (Heikki)\n     </para>\n\n     <para>\n      The command tried to re-use the existing filename, instead of\n      picking one that is known unused in the destination directory.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect tsearch2 headline generation when single query\n      item matches first word of text (Sushant Sinha)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix improper display of fractional seconds in interval values when\n      using a non-ISO datestyle in an <option>--enable-integer-datetimes</>\n      build (Ron Mayer)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure <function>SPI_getvalue</> and <function>SPI_getbinval</>\n      behave correctly when the passed tuple and tuple descriptor have\n      different numbers of columns (Tom)\n     </para>\n\n     <para>\n      This situation is normal when a table has had columns added or removed,\n      but these two functions didn't handle it properly.\n      The only likely consequence is an incorrect error indication.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</>'s parsing of <command>CREATE ROLE</> (Michael)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix recent breakage of <literal>pg_ctl restart</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure <filename>pg_control</> is opened in binary mode\n      (Itagaki Takahiro)\n     </para>\n\n     <para>\n      <application>pg_controldata</> and <application>pg_resetxlog</>\n      did this incorrectly, and so could fail on Windows.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2008i (for\n      DST law changes in Argentina, Brazil, Mauritius, Syria)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-10\">\n  <title>Release 8.2.10</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2008-09-22</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.9.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.10</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n    However, if you are upgrading from a version earlier than 8.2.7,\n    see <xref linkend=\"release-8-2-7\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix bug in btree WAL recovery code (Heikki)\n     </para>\n\n     <para>\n      Recovery failed if the WAL ended partway through a page split operation.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix potential miscalculation of <structfield>datfrozenxid</> (Alvaro)\n     </para>\n\n     <para>\n      This error may explain some recent reports of failure to remove old\n      <structname>pg_clog</> data.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Widen local lock counters from 32 to 64 bits (Tom)\n     </para>\n\n     <para>\n      This responds to reports that the counters could overflow in\n      sufficiently long transactions, leading to unexpected <quote>lock is\n      already held</> errors.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible duplicate output of tuples during a GiST index scan (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix missed permissions checks when a view contains a simple\n      <literal>UNION ALL</> construct (Heikki)\n     </para>\n\n     <para>\n      Permissions for the referenced tables were checked properly, but not\n      permissions for the view itself.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add checks in executor startup to ensure that the tuples produced by an\n      <command>INSERT</> or <command>UPDATE</> will match the target table's\n      current rowtype (Tom)\n     </para>\n\n     <para>\n      <command>ALTER COLUMN TYPE</>, followed by re-use of a previously\n      cached plan, could produce this type of situation.  The check protects\n      against data corruption and/or crashes that could ensue.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible repeated drops during <command>DROP OWNED</> (Tom)\n     </para>\n\n     <para>\n      This would typically result in strange errors such as <quote>cache\n      lookup failed for relation NNN</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <literal>AT TIME ZONE</> to first try to interpret its timezone\n      argument as a timezone abbreviation, and only try it as a full timezone\n      name if that fails, rather than the other way around as formerly (Tom)\n     </para>\n\n     <para>\n      The timestamp input functions have always resolved ambiguous zone names\n      in this order.  Making <literal>AT TIME ZONE</> do so as well improves\n      consistency, and fixes a compatibility bug introduced in 8.1:\n      in ambiguous cases we now behave the same as 8.0 and before did,\n      since in the older versions <literal>AT TIME ZONE</> accepted\n      <emphasis>only</> abbreviations.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix datetime input functions to correctly detect integer overflow when\n      running on a 64-bit platform (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent integer overflows during units conversion when displaying a\n      configuration parameter that has units (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve performance of writing very long log messages to syslog (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow spaces in the suffix part of an LDAP URL in\n      <filename>pg_hba.conf</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug in backwards scanning of a cursor on a <literal>SELECT DISTINCT\n      ON</> query (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner bug with nested sub-select expressions (Tom)\n     </para>\n\n     <para>\n      If the outer sub-select has no direct dependency on the parent query,\n      but the inner one does, the outer value might not get recalculated\n      for new parent query rows.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner to estimate that <literal>GROUP BY</> expressions yielding\n      boolean results always result in two groups, regardless of the\n      expressions' contents (Tom)\n     </para>\n\n     <para>\n      This is very substantially more accurate than the regular <literal>GROUP\n      BY</> estimate for certain boolean tests like <replaceable>col</>\n      <literal>IS NULL</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/pgSQL to not fail when a <literal>FOR</> loop's target variable\n      is a record containing composite-type fields (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/Tcl to behave correctly with Tcl 8.5, and to be more careful\n      about the encoding of data sent to or from Tcl (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      On Windows, work around a Microsoft bug by preventing\n      <application>libpq</> from trying to send more than 64kB per system call\n      (Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <application>pg_dump</> and <application>pg_restore</>'s\n      error reporting after failure to send a SQL command (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_ctl</> to properly preserve postmaster\n      command-line arguments across a <literal>restart</> (Bruce)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2008f (for\n      DST law changes in Argentina, Bahamas, Brazil, Mauritius, Morocco,\n      Pakistan, Palestine, and Paraguay)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-9\">\n  <title>Release 8.2.9</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2008-06-12</para>\n  </formalpara>\n\n  <para>\n   This release contains one serious and one minor bug fix over 8.2.8.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.9</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n    However, if you are upgrading from a version earlier than 8.2.7,\n    see <xref linkend=\"release-8-2-7\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Make <function>pg_get_ruledef()</> parenthesize negative constants (Tom)\n     </para>\n\n     <para>\n      Before this fix, a negative constant in a view or rule might be dumped\n      as, say, <literal>-42::integer</>, which is subtly incorrect: it should\n      be <literal>(-42)::integer</> due to operator precedence rules.\n      Usually this would make little difference, but it could interact with\n      another recent patch to cause\n      <productname>PostgreSQL</> to reject what had been a valid\n      <command>SELECT DISTINCT</> view query.  Since this could result in\n      <application>pg_dump</> output failing to reload, it is being treated\n      as a high-priority fix.  The only released versions in which dump\n      output is actually incorrect are 8.3.1 and 8.2.7.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <command>ALTER AGGREGATE ... OWNER TO</> update\n      <structname>pg_shdepend</> (Tom)\n     </para>\n\n     <para>\n      This oversight could lead to problems if the aggregate was later\n      involved in a <command>DROP OWNED</> or <command>REASSIGN OWNED</>\n      operation.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-8\">\n  <title>Release 8.2.8</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>never released</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.7.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.8</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n    However, if you are upgrading from a version earlier than 8.2.7,\n    see <xref linkend=\"release-8-2-7\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix <literal>ERRORDATA_STACK_SIZE exceeded</literal> crash that\n      occurred on Windows when using UTF-8 database encoding and a different\n      client encoding (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>ALTER TABLE ADD COLUMN ... PRIMARY KEY</> so that the new\n      column is correctly checked to see if it's been initialized to all\n      non-nulls (Brendan Jurd)\n     </para>\n\n     <para>\n      Previous versions neglected to check this requirement at all.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible <command>CREATE TABLE</> failure when inheriting the\n      <quote>same</> constraint from multiple parent relations that\n      inherited that constraint from a common ancestor (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>pg_get_ruledef()</> to show the alias, if any, attached\n      to the target table of an <command>UPDATE</> or <command>DELETE</>\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix GIN bug that could result in a <literal>too many LWLocks\n      taken</literal> failure (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid possible crash when decompressing corrupted data\n      (Zdenek Kotala)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Repair two places where SIGTERM exit of a backend could leave corrupted\n      state in shared memory (Tom)\n     </para>\n\n     <para>\n      Neither case is very important if SIGTERM is used to shut down the\n      whole database cluster together, but there was a problem if someone\n      tried to SIGTERM individual backends.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix conversions between ISO-8859-5 and other encodings to handle\n      Cyrillic <quote>Yo</> characters (<literal>e</> and <literal>E</> with\n      two dots) (Sergey Burladyan)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix several datatype input functions, notably <function>array_in()</>,\n      that were allowing unused bytes in their results to contain\n      uninitialized, unpredictable values (Tom)\n     </para>\n\n     <para>\n      This could lead to failures in which two apparently identical literal\n      values were not seen as equal, resulting in the parser complaining\n      about unmatched <literal>ORDER BY</> and <literal>DISTINCT</>\n      expressions.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix a corner case in regular-expression substring matching\n      (<literal>substring(<replaceable>string</> from\n      <replaceable>pattern</>)</literal>) (Tom)\n     </para>\n\n     <para>\n      The problem occurs when there is a match to the pattern overall but\n      the user has specified a parenthesized subexpression and that\n      subexpression hasn't got a match.  An example is\n      <literal>substring('foo' from 'foo(bar)?')</>.\n      This should return NULL, since <literal>(bar)</> isn't matched, but\n      it was mistakenly returning the whole-pattern match instead (ie,\n      <literal>foo</>).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2008c (for\n      DST law changes in Morocco, Iraq, Choibalsan, Pakistan, Syria, Cuba, and\n      Argentina/San_Luis)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect result from <application>ecpg</>'s\n      <function>PGTYPEStimestamp_sub()</> function (Michael)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix broken GiST comparison function for <filename>contrib/tsearch2</>'s\n      <type>tsquery</> type (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crashes in <filename>contrib/cube</> functions (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix core dump in <filename>contrib/xml2</>'s\n      <function>xpath_table()</> function when the input query returns a\n      NULL value (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/xml2</>'s makefile to not override\n      <literal>CFLAGS</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <literal>DatumGetBool</> macro to not fail with <application>gcc</>\n      4.3 (Tom)\n     </para>\n\n     <para>\n      This problem affects <quote>old style</> (V0) C functions that\n      return boolean.  The fix is already in 8.3, but the need to\n      back-patch it was not realized at the time.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-7\">\n  <title>Release 8.2.7</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2008-03-17</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.6.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.7</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n    However, you might need to <command>REINDEX</> indexes on textual\n    columns after updating, if you are affected by the Windows locale\n    issue described below.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix character string comparison for Windows locales that consider\n      different character combinations as equal (Tom)\n     </para>\n\n     <para>\n      This fix applies only on Windows and only when using UTF-8\n      database encoding.  The same fix was made for all other cases\n      over two years ago, but Windows with UTF-8 uses a separate code\n      path that was not updated.  If you are using a locale that\n      considers some non-identical strings as equal, you may need to\n      <command>REINDEX</> to fix existing indexes on textual columns.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Repair potential deadlock between concurrent <command>VACUUM FULL</>\n      operations on different system catalogs (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix longstanding <command>LISTEN</>/<command>NOTIFY</>\n      race condition (Tom)\n     </para>\n\n     <para>\n      In rare cases a session that had just executed a\n      <command>LISTEN</> might not get a notification, even though\n      one would be expected because the concurrent transaction executing\n      <command>NOTIFY</> was observed to commit later.\n     </para>\n\n     <para>\n      A side effect of the fix is that a transaction that has executed\n      a not-yet-committed <command>LISTEN</> command will not see any\n      row in <structname>pg_listener</> for the <command>LISTEN</>,\n      should it choose to look; formerly it would have.  This behavior\n      was never documented one way or the other, but it is possible that\n      some applications depend on the old behavior.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <command>LISTEN</> and <command>UNLISTEN</> within a\n      prepared transaction (Tom)\n     </para>\n\n     <para>\n      This was formerly allowed but trying to do it had various unpleasant\n      consequences, notably that the originating backend could not exit\n      as long as an <command>UNLISTEN</> remained uncommitted.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow dropping a temporary table within a\n      prepared transaction (Heikki)\n     </para>\n\n     <para>\n      This was correctly disallowed by 8.1, but the check was inadvertently\n      broken in 8.2.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix rare crash when an error occurs during a query using a hash index\n      (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leaks in certain usages of set-returning functions (Neil)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix input of datetime values for February 29 in years BC (Tom)\n     </para>\n\n     <para>\n      The former coding was mistaken about which years were leap years.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <quote>unrecognized node type</> error in some variants of\n      <command>ALTER OWNER</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure <structname>pg_stat_activity</>.<structfield>waiting</> flag\n      is cleared when a lock wait is aborted (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix handling of process permissions on Windows Vista (Dave, Magnus)\n     </para>\n\n     <para>\n      In particular, this fix allows starting the server as the Administrator\n      user.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2008a\n      (in particular, recent Chile changes); adjust timezone abbreviation\n      <literal>VET</> (Venezuela) to mean UTC-4:30, not UTC-4:00 (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_ctl</> to correctly extract the postmaster's port\n      number from command-line options (Itagaki Takahiro, Tom)\n     </para>\n\n     <para>\n      Previously, <literal>pg_ctl start -w</> could try to contact the\n      postmaster on the wrong port, leading to bogus reports of startup\n      failure.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use <option>-fwrapv</> to defend against possible misoptimization\n      in recent <application>gcc</> versions (Tom)\n     </para>\n\n     <para>\n      This is known to be necessary when building <productname>PostgreSQL</>\n      with <application>gcc</> 4.3 or later.\n     </para>\n    </listitem>\n\n\n    <listitem>\n     <para>\n      Correctly enforce <varname>statement_timeout</> values longer\n      than <literal>INT_MAX</> microseconds (about 35 minutes) (Tom)\n     </para>\n\n     <para>\n      This bug affects only builds with <option>--enable-integer-datetimes</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <quote>unexpected PARAM_SUBLINK ID</> planner error when\n      constant-folding simplifies a sub-select (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix logical errors in constraint-exclusion handling of <literal>IS\n      NULL</> and <literal>NOT</> expressions (Tom)\n     </para>\n\n     <para>\n      The planner would sometimes exclude partitions that should not\n      have been excluded because of the possibility of NULL results.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix another cause of <quote>failed to build any N-way joins</>\n      planner errors (Tom)\n     </para>\n\n     <para>\n      This could happen in cases where a clauseless join needed to be\n      forced before a join clause could be exploited.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect constant propagation in outer-join planning (Tom)\n     </para>\n\n     <para>\n      The planner could sometimes incorrectly conclude that a variable\n      could be constrained to be equal to a constant, leading\n      to wrong query results.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix display of constant expressions in <literal>ORDER BY</>\n      and <literal>GROUP BY</> (Tom)\n     </para>\n\n     <para>\n      An explicitly casted constant would be shown incorrectly.  This could\n      for example lead to corruption of a view definition during\n      dump and reload.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>libpq</> to handle NOTICE messages correctly\n      during COPY OUT (Tom)\n     </para>\n\n     <para>\n      This failure has only been observed to occur when a user-defined\n      datatype's output routine issues a NOTICE, but there is no\n      guarantee it couldn't happen due to other causes.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-6\">\n  <title>Release 8.2.6</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2008-01-07</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.5,\n   including fixes for significant security issues.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.6</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Prevent functions in indexes from executing with the privileges of\n      the user running <command>VACUUM</>, <command>ANALYZE</>, etc (Tom)\n     </para>\n\n     <para>\n      Functions used in index expressions and partial-index\n      predicates are evaluated whenever a new table entry is made.  It has\n      long been understood that this poses a risk of trojan-horse code\n      execution if one modifies a table owned by an untrustworthy user.\n      (Note that triggers, defaults, check constraints, etc. pose the\n      same type of risk.)  But functions in indexes pose extra danger\n      because they will be executed by routine maintenance operations\n      such as <command>VACUUM FULL</>, which are commonly performed\n      automatically under a superuser account.  For example, a nefarious user\n      can execute code with superuser privileges by setting up a\n      trojan-horse index definition and waiting for the next routine vacuum.\n      The fix arranges for standard maintenance operations\n      (including <command>VACUUM</>, <command>ANALYZE</>, <command>REINDEX</>,\n      and <command>CLUSTER</>) to execute as the table owner rather than\n      the calling user, using the same privilege-switching mechanism already\n      used for <literal>SECURITY DEFINER</> functions.  To prevent bypassing\n      this security measure, execution of <command>SET SESSION\n      AUTHORIZATION</> and <command>SET ROLE</> is now forbidden within a\n      <literal>SECURITY DEFINER</> context.  (CVE-2007-6600)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Repair assorted bugs in the regular-expression package (Tom, Will Drewry)\n     </para>\n\n     <para>\n      Suitably crafted regular-expression patterns could cause crashes,\n      infinite or near-infinite looping, and/or massive memory consumption,\n      all of which pose denial-of-service hazards for applications that\n      accept regex search patterns from untrustworthy sources.\n      (CVE-2007-4769, CVE-2007-4772, CVE-2007-6067)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Require non-superusers who use <filename>/contrib/dblink</> to use only\n      password authentication, as a security measure (Joe)\n     </para>\n\n     <para>\n      The fix that appeared for this in 8.2.5 was incomplete, as it plugged\n      the hole for only some <filename>dblink</> functions.  (CVE-2007-6601,\n      CVE-2007-3278)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bugs in WAL replay for GIN indexes (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix GIN index build to work properly when\n      <varname>maintenance_work_mem</> is 4GB or more (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2007k\n      (in particular, recent Argentina changes) (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve planner's handling of LIKE/regex estimation in non-C locales\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planning-speed problem for deep outer-join nests, as well as\n      possible poor choice of join order (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner failure in some cases of <literal>WHERE false AND var IN\n      (SELECT ...)</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <command>CREATE TABLE ... SERIAL</> and\n      <command>ALTER SEQUENCE ... OWNED BY</> not change the\n      <function>currval()</> state of the sequence (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Preserve the tablespace and storage parameters of indexes that are\n      rebuilt by <command>ALTER TABLE ... ALTER COLUMN TYPE</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make archive recovery always start a new WAL timeline, rather than only\n      when a recovery stop time was used (Simon)\n     </para>\n\n     <para>\n      This avoids a corner-case risk of trying to overwrite an existing\n      archived copy of the last WAL segment, and seems simpler and cleaner\n      than the original definition.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <command>VACUUM</> not use all of <varname>maintenance_work_mem</>\n      when the table is too small for it to be useful (Alvaro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix potential crash in <function>translate()</> when using a multibyte\n      database encoding (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <function>corr()</> return the correct result for negative\n      correlation values (Neil)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix overflow in <literal>extract(epoch from interval)</> for intervals\n      exceeding 68 years (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/Perl to not fail when a UTF-8 regular expression is used\n      in a trusted function (Andrew)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/Perl to cope when platform's Perl defines type <literal>bool</>\n      as <literal>int</> rather than <literal>char</> (Tom)\n     </para>\n\n     <para>\n      While this could theoretically happen anywhere, no standard build of\n      Perl did things this way ... until <productname>macOS</> 10.5.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/Python to work correctly with Python 2.5 on 64-bit machines\n      (Marko Kreen)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/Python to not crash on long exception messages (Alvaro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_dump</> to correctly handle inheritance child tables\n      that have default expressions different from their parent's (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>libpq</> crash when <varname>PGPASSFILE</> refers\n      to a file that is not a plain file (Martin Pitt)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      <application>ecpg</> parser fixes (Michael)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <filename>contrib/pgcrypto</> defend against\n      <application>OpenSSL</> libraries that fail on keys longer than 128\n      bits; which is the case at least on some Solaris versions (Marko Kreen)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <filename>contrib/tablefunc</>'s <function>crosstab()</> handle\n      NULL rowid as a category in its own right, rather than crashing (Joe)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <type>tsvector</> and <type>tsquery</> output routines to\n      escape backslashes correctly (Teodor, Bruce)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix crash of <function>to_tsvector()</> on huge input strings (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Require a specific version of <productname>Autoconf</> to be used\n      when re-generating the <command>configure</> script (Peter)\n     </para>\n\n     <para>\n      This affects developers and packagers only.  The change was made\n      to prevent accidental use of untested combinations of\n      <productname>Autoconf</> and <productname>PostgreSQL</> versions.\n      You can remove the version check if you really want to use a\n      different <productname>Autoconf</> version, but it's\n      your responsibility whether the result works or not.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update <function>gettimeofday</> configuration check so that\n      <productname>PostgreSQL</> can be built on newer versions of\n      <productname>MinGW</> (Magnus)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-5\">\n  <title>Release 8.2.5</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2007-09-17</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.4.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.5</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Prevent index corruption when a transaction inserts rows and\n      then aborts close to the end of a concurrent <command>VACUUM</>\n      on the same table (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <literal>ALTER DOMAIN ADD CONSTRAINT</> for cases involving\n      domains over domains (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <command>CREATE DOMAIN ... DEFAULT NULL</> work properly (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix some planner problems with outer joins, notably poor\n      size estimation for <literal>t1 LEFT JOIN t2 WHERE t2.col IS NULL</>\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow the <type>interval</> data type to accept input consisting only of\n      milliseconds or microseconds (Neil)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow timezone name to appear before the year in <type>timestamp</> input (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fixes for <acronym>GIN</> indexes used by <filename>/contrib/tsearch2</> (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Speed up rtree index insertion (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix excessive logging of <acronym>SSL</> error messages (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix logging so that log messages are never interleaved when using\n      the syslogger process (Andrew)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix crash when <varname>log_min_error_statement</> logging runs out\n      of memory (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect handling of some foreign-key corner cases (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>stddev_pop(numeric)</> and <function>var_pop(numeric)</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent <command>REINDEX</> and <command>CLUSTER</> from failing\n      due to attempting to process temporary tables of other sessions (Alvaro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update the time zone database rules, particularly New Zealand's upcoming changes (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Windows socket and semaphore improvements (Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <command>pg_ctl -w</> work properly in Windows service mode (Dave Page)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory allocation bug when using <application>MIT Kerberos</> on Windows (Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Suppress timezone name (<literal>%Z</>) in log timestamps on Windows\n      because of possible encoding mismatches (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Require non-superusers who use <filename>/contrib/dblink</> to use only\n      password authentication, as a security measure (Joe)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Restrict <filename>/contrib/pgstattuple</> functions to superusers, for security reasons (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Do not let <filename>/contrib/intarray</> try to make its GIN opclass\n      the default (this caused problems at dump/restore) (Tom)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-4\">\n  <title>Release 8.2.4</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2007-04-23</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.3,\n   including a security fix.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.4</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Support explicit placement of the temporary-table schema within\n      <varname>search_path</>, and disable searching it for functions\n      and operators (Tom)\n     </para>\n\n     <para>\n      This is needed to allow a security-definer function to set a\n      truly secure value of <varname>search_path</>.  Without it,\n      an unprivileged SQL user can use temporary objects to execute code\n      with the privileges of the security-definer function (CVE-2007-2138).\n      See <command>CREATE FUNCTION</> for more information.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <varname>shared_preload_libraries</> for Windows\n      by forcing reload in each backend (Korry Douglas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>to_char()</> so it properly upper/lower cases localized day or month\n      names (Pavel Stehule)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      <filename>/contrib/tsearch2</> crash fixes (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Require <command>COMMIT PREPARED</> to be executed in the same\n      database as the transaction was prepared in (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow <command>pg_dump</> to do binary backups larger than two gigabytes\n      on Windows (Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      New traditional (Taiwan) Chinese <acronym>FAQ</> (Zhou Daojing)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent the statistics collector from writing to disk too frequently (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix potential-data-corruption bug in how <command>VACUUM FULL</> handles\n      <command>UPDATE</> chains (Tom, Pavan Deolasee)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug in domains that use array types (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>pg_dump</> so it can dump a serial column's sequence\n      using <option>-t</> when not also dumping the owning table\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Planner fixes, including improving outer join and bitmap scan\n      selection logic (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible wrong answers or crash when a PL/pgSQL function tries\n      to <literal>RETURN</> from within an <literal>EXCEPTION</> block\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PANIC during enlargement of a hash index (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix POSIX-style timezone specs to follow new USA DST rules (Tom)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-3\">\n  <title>Release 8.2.3</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2007-02-07</para>\n  </formalpara>\n\n  <para>\n   This release contains two fixes from 8.2.2.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.3</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Remove overly-restrictive check for type length in constraints and\n      functional indexes(Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix optimization so MIN/MAX in subqueries can again use indexes (Tom)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-2\">\n  <title>Release 8.2.2</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2007-02-05</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.1, including\n   a security fix.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.2</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.X.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Remove security vulnerabilities that allowed connected users\n      to read backend memory (Tom)\n     </para>\n\n     <para>\n      The vulnerabilities involve suppressing the normal check that a SQL\n      function returns the data type it's declared to, and changing the\n      data type of a table column (CVE-2007-0555, CVE-2007-0556).  These\n      errors can easily be exploited to cause a backend crash, and in\n      principle might be used to read database content that the user\n      should not be able to access.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix not-so-rare-anymore bug wherein btree index page splits could fail\n      due to choosing an infeasible split point (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix Borland C compile scripts (L Bayuk)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Properly handle <function>to_char('CC')</> for years ending in\n      <literal>00</> (Tom)\n     </para>\n\n     <para>\n      Year 2000 is in the twentieth century, not the twenty-first.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      <filename>/contrib/tsearch2</> localization improvements (Tatsuo, Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect permission check in\n      <literal>information_schema.key_column_usage</> view (Tom)\n     </para>\n\n     <para>\n      The symptom is <quote>relation with OID nnnnn does not exist</> errors.\n      To get this fix without using <command>initdb</>, use <command>CREATE OR\n      REPLACE VIEW</> to install the corrected definition found in\n      <filename>share/information_schema.sql</>.  Note you will need to do\n      this in each database.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <command>VACUUM</> performance for databases with many tables (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix for rare Assert() crash triggered by <literal>UNION</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix potentially incorrect results from index searches using\n      <literal>ROW</> inequality conditions (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Tighten security of multi-byte character processing for UTF8 sequences\n      over three bytes long (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bogus <quote>permission denied</> failures occurring on Windows\n      due to attempts to fsync already-deleted files (Magnus, Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug that could cause the statistics collector\n      to hang on Windows (Magnus)\n     </para>\n\n     <para>\n      This would in turn lead to autovacuum not working.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crashes when an already-in-use PL/pgSQL function is\n      updated (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve PL/pgSQL handling of domain types (Sergiy Vyshnevetskiy, Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible errors in processing PL/pgSQL exception blocks (Tom)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2-1\">\n  <title>Release 8.2.1</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2007-01-08</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.2.\n   For information about new features in the 8.2 major release, see\n   <xref linkend=\"release-8-2\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.2.1</title>\n\n   <para>\n    A dump/restore is not required for those running 8.2.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix crash with <literal>SELECT</> ... <literal>LIMIT ALL</> (also\n      <literal>LIMIT NULL</>) (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      <filename>Several /contrib/tsearch2</> fixes (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      On Windows, make log messages coming from the operating system use\n      <acronym>ASCII</> encoding (Hiroshi Saito)\n     </para>\n\n     <para>\n      This fixes a conversion problem when there is a mismatch between\n      the encoding of the operating system and database server.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix Windows linking of <application>pg_dump</> using\n      <filename>win32.mak</>\n      (Hiroshi Saito)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner mistakes for outer join queries (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix several problems in queries involving sub-SELECTs (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix potential crash in SPI during subtransaction abort (Tom)\n     </para>\n\n     <para>\n      This affects all PL functions since they all use SPI.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve build speed of <acronym>PDF</> documentation (Peter)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Re-add <acronym>JST</> (Japan) timezone abbreviation (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve optimization decisions related to index scans (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Have <application>psql</> print multi-byte combining characters as\n      before, rather than output as <literal>\\u</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve index usage of regular expressions that use parentheses (Tom)\n     </para>\n\n     <para>\n      This improves <application>psql</> <literal>\\d</> performance also.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>pg_dumpall</> assume that databases have public\n      <literal>CONNECT</> privilege, when dumping from a pre-8.2 server (Tom)\n     </para>\n\n     <para>\n      This preserves the previous behavior that anyone can connect to a\n      database if allowed by <filename>pg_hba.conf</>.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-2\">\n  <title>Release 8.2</title>\n\n  <formalpara>\n   <title>Release date:</title>\n   <para>2006-12-05</para>\n  </formalpara>\n\n  <sect2>\n   <title>Overview</title>\n\n   <para>\n    This release adds many functionality and performance improvements that\n    were requested by users, including:\n\n   <itemizedlist>\n\n     <listitem>\n      <para>\n       Query language enhancements including <command>INSERT/UPDATE/DELETE\n       RETURNING</command>, multirow <literal>VALUES</literal> lists, and\n       optional target-table alias in\n       <command>UPDATE</>/<command>DELETE</command>\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Index creation without blocking concurrent\n       <command>INSERT</>/<command>UPDATE</>/<command>DELETE</>\n       operations\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Many query optimization improvements, including support for\n       reordering outer joins\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improved sorting performance with lower memory usage\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       More efficient locking with better concurrency\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       More efficient vacuuming\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Easier administration of warm standby servers\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       New <literal>FILLFACTOR</literal> support for tables and indexes\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Monitoring, logging, and performance tuning additions\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       More control over creating and dropping objects\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Table inheritance relationships can be defined\n       for and removed from pre-existing tables\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <command>COPY TO</command> can copy the output of an arbitrary\n       <command>SELECT</command> statement\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Array improvements, including nulls in arrays\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Aggregate-function improvements, including multiple-input\n       aggregates and SQL:2003 statistical functions\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Many <filename>contrib/</filename> improvements\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Migration to Version 8.2</title>\n\n   <para>\n    A dump/restore using <application>pg_dump</application> is\n    required for those wishing to migrate data from any previous\n    release.\n   </para>\n\n   <para>\n    Observe the following incompatibilities:\n   </para>\n\n   <itemizedlist>\n\n     <listitem>\n      <para>\n       Set <link\n       linkend=\"guc-escape-string-warning\"><varname>escape_string_warning</></link>\n       to <literal>on</> by default (Bruce)\n      </para>\n\n      <para>\n       This issues a warning if backslash escapes are used in\n       <link linkend=\"sql-syntax-strings\">non-escape (non-<literal>E''</>)\n       strings</link>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Change the <link linkend=\"sql-syntax-row-constructors\">row\n       constructor syntax</link> (<literal>ROW(...)</>) so that\n       list elements <literal>foo.*</> will be expanded to a list\n       of their member fields, rather than creating a nested\n       row type field as formerly (Tom)\n      </para>\n\n      <para>\n       The new behavior is substantially more useful since it\n       allows, for example, triggers to check for data changes\n       with <literal>IF row(new.*) IS DISTINCT FROM row(old.*)</>.\n       The old behavior is still available by omitting <literal>.*</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <link linkend=\"row-wise-comparison\">row comparisons</link>\n       follow <acronym>SQL</> standard semantics and allow them\n       to be used in index scans (Tom)\n      </para>\n\n      <para>\n       Previously, row = and &lt;&gt; comparisons followed the\n       standard but &lt; &lt;= &gt; &gt;= did not.  A row comparison\n       can now be used as an index constraint for a multicolumn\n       index matching the row value.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <link linkend=\"functions-comparison\">row <literal>IS <optional>NOT</> NULL</literal></link>\n       tests follow <acronym>SQL</> standard semantics (Tom)\n      </para>\n\n      <para>\n       The former behavior conformed to the standard for simple cases\n       with <literal>IS NULL</>, but <literal>IS NOT NULL</> would return\n       true if any row field was non-null, whereas the standard says it\n       should return true only when all fields are non-null.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <link linkend=\"SQL-SET-CONSTRAINTS\"><command>SET\n       CONSTRAINT</></link> affect only one constraint (Kris Jurka)\n      </para>\n\n      <para>\n       In previous releases, <command>SET CONSTRAINT</> modified\n       all constraints with a matching name.  In this release,\n       the schema search path is used to modify only the first\n       matching constraint.  A schema specification is also\n       supported.  This more nearly conforms to the SQL standard.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove <literal>RULE</> permission for tables, for security reasons\n       (Tom)\n      </para>\n\n      <para>\n       As of this release, only a table's owner can create or modify\n       rules for the table.  For backwards compatibility,\n       <command>GRANT</>/<command>REVOKE RULE</> is still accepted,\n       but it does nothing.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Array comparison improvements (Tom)\n      </para>\n\n      <para>\n       Now array dimensions are also compared.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Change <link linkend=\"functions-array\">array concatenation</link>\n       to match documented behavior (Tom)\n      </para>\n\n      <para>\n       This changes the previous behavior where concatenation\n       would modify the array lower bound.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make command-line options of <application>postmaster</>\n       and <link linkend=\"app-postgres\"><application>postgres</></link>\n       identical (Peter)\n      </para>\n\n      <para>\n       This allows the postmaster to pass arguments to each backend\n       without using <literal>-o</>.  Note that some options are now\n       only available as long-form options, because there were conflicting\n       single-letter options.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Deprecate use of <application>postmaster</> symbolic link (Peter)\n      </para>\n\n      <para>\n       <application>postmaster</> and <application>postgres</>\n       commands now act identically, with the behavior determined\n       by command-line options.  The <application>postmaster</> symbolic link is\n       kept for compatibility, but is not really needed.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Change <link\n       linkend=\"guc-log-duration\"><varname>log_duration</></link>\n       to output even if the query is not output (Tom)\n      </para>\n\n      <para>\n       In prior releases, <varname>log_duration</> only printed if\n       the query appeared earlier in the log.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <link\n       linkend=\"functions-formatting\"><function>to_char(time)</></link>\n       and <link\n       linkend=\"functions-formatting\"><function>to_char(interval)</></link>\n       treat <literal>HH</> and <literal>HH12</> as 12-hour\n       intervals\n      </para>\n\n      <para>\n       Most applications should use <literal>HH24</> unless they\n       want a 12-hour display.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Zero unmasked bits in conversion from <link\n       linkend=\"datatype-inet\"><type>INET</></link> to <link\n       linkend=\"datatype-inet\"><type>CIDR</></link> (Tom)\n      </para>\n\n      <para>\n       This ensures that the converted value is actually valid for\n       <type>CIDR</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove <varname>australian_timezones</> configuration variable\n       (Joachim Wieland)\n      </para>\n\n      <para>\n       This variable has been superseded by a more general facility\n       for configuring timezone abbreviations.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve cost estimation for nested-loop index scans (Tom)\n      </para>\n\n      <para>\n       This might eliminate the need to set unrealistically small\n       values of <link\n       linkend=\"guc-random-page-cost\"><varname>random_page_cost</></link>.\n       If you have been using a very small <varname>random_page_cost</>,\n       please recheck your test cases.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Change behavior of <command>pg_dump</> <literal>-n</> and\n       <literal>-t</> options.  (Greg Sabino Mullane)\n      </para>\n      <para>\n       See the <command>pg_dump</> manual page for details.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Change <link linkend=\"libpq\"><application>libpq</></link>\n       <function>PQdsplen()</> to return a useful value (Martijn\n       van Oosterhout)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Declare <link linkend=\"libpq\"><application>libpq</></link>\n       <function>PQgetssl()</> as returning <literal>void *</>,\n       rather than <literal>SSL *</> (Martijn van Oosterhout)\n      </para>\n\n      <para>\n       This allows applications to use the function without including\n       the OpenSSL headers.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       C-language loadable modules must now include a\n       <link linkend=\"xfunc-c-dynload\"><literal>PG_MODULE_MAGIC</></link>\n       macro call for version compatibility checking\n       (Martijn van Oosterhout)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       For security's sake, modules used by a PL/PerlU function are no\n       longer available to PL/Perl functions (Andrew)\n      </para>\n      <note>\n       <para>\n        This also implies that data can no longer be shared between a PL/Perl\n        function and a PL/PerlU function.\n        Some Perl installations have not been compiled with the correct flags\n        to allow multiple interpreters to exist within a single process.\n        In this situation PL/Perl and PL/PerlU cannot both be used in a\n        single backend. The solution is to get a Perl installation which\n        supports multiple interpreters.\n       </para>\n      </note>\n     </listitem>\n\n     <listitem>\n      <para>\n       In <filename>contrib/xml2/</>, rename <function>xml_valid()</> to\n       <function>xml_is_well_formed()</> (Tom)\n      </para>\n\n      <para>\n       <function>xml_valid()</> will remain for backward compatibility,\n       but its behavior will change to do schema checking in a future\n       release.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove <filename>contrib/ora2pg/</>, now at <ulink\n       url=\"http://www.samse.fr/GPL/ora2pg\"></ulink>\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove contrib modules that have been migrated to PgFoundry:\n       <filename>adddepend</>, <filename>dbase</>, <filename>dbmirror</>,\n       <filename>fulltextindex</>, <filename>mac</>, <filename>userlock</>\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove abandoned contrib modules:\n       <filename>mSQL-interface</>, <filename>tips</>\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove <acronym>QNX</> and <acronym>BEOS</> ports (Bruce)\n      </para>\n\n      <para>\n       These ports no longer had active maintainers.\n      </para>\n     </listitem>\n\n   </itemizedlist>\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <para>\n    Below you will find a detailed account of the\n    changes between <productname>PostgreSQL</productname> 8.2 and\n    the previous major release.\n   </para>\n\n   <sect3>\n    <title>Performance Improvements</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Allow the planner to reorder <link linkend=\"queries-join\">outer\n       joins</link> in some circumstances (Tom)\n      </para>\n\n      <para>\n       In previous releases, outer joins would always be evaluated in\n       the order written in the query. This change allows the\n       query optimizer to consider reordering outer joins, in cases where\n       it can determine that the join order can be changed without\n       altering the meaning of the query.  This can make a\n       considerable performance difference for queries involving\n       multiple outer joins or mixed inner and outer joins.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve efficiency of <link\n       linkend=\"functions-comparisons\"><literal>IN</>\n       (list-of-expressions)</link> clauses (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve sorting speed and reduce memory usage (Simon, Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve subtransaction performance (Alvaro, Itagaki Takahiro,\n       Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>FILLFACTOR</> to <link\n       linkend=\"SQL-CREATETABLE\">table</link> and <link\n       linkend=\"SQL-CREATEINDEX\">index</link> creation (ITAGAKI\n       Takahiro)\n      </para>\n\n      <para>\n       This leaves extra free space in each table or index page,\n       allowing improved performance as the database grows.  This\n       is particularly valuable to maintain clustering.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Increase default values for <link\n       linkend=\"guc-shared-buffers\"><varname>shared_buffers</></link>\n       and <varname>max_fsm_pages</>\n       (Andrew)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve locking performance by breaking the lock manager tables into\n       sections\n       (Tom)\n      </para>\n\n      <para>\n       This allows locking to be more fine-grained, reducing\n       contention.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Reduce locking requirements of sequential scans (Qingqing\n       Zhou)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Reduce locking required for database creation and destruction\n       (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve the optimizer's selectivity estimates for <link\n       linkend=\"functions-like\"><literal>LIKE</></link>, <link\n       linkend=\"functions-like\"><literal>ILIKE</></link>, and\n       <link linkend=\"functions-posix-regexp\">regular expression</link>\n       operations (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve planning of joins to <link linkend=\"ddl-inherit\">inherited\n       tables</link> and <link linkend=\"queries-union\"><literal>UNION\n       ALL</></link> views (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <link linkend=\"guc-constraint-exclusion\">constraint\n       exclusion</link> to be applied to <link\n       linkend=\"ddl-inherit\">inherited</link> <command>UPDATE</> and\n       <command>DELETE</> queries (Tom)\n      </para>\n\n      <para>\n       <command>SELECT</> already honored constraint exclusion.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve planning of constant <literal>WHERE</> clauses, such as\n       a condition that depends only on variables inherited from an\n       outer query level (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Protocol-level unnamed prepared statements are re-planned\n       for each set of <literal>BIND</> values (Tom)\n      </para>\n\n      <para>\n       This improves performance because the exact parameter values\n       can be used in the plan.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Speed up vacuuming of B-Tree indexes (Heikki Linnakangas,\n       Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Avoid extra scan of tables without indexes during <link\n       linkend=\"SQL-VACUUM\"><command>VACUUM</></link> (Greg Stark)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve multicolumn <link linkend=\"GiST\"><acronym>GiST</></link>\n       indexing (Oleg, Teodor)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove dead index entries before B-Tree page split (Junji\n       Teramoto)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Server Changes</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Allow a forced switch to a new transaction log file (Simon, Tom)\n      </para>\n\n      <para>\n       This is valuable for keeping warm standby slave servers\n       in sync with the master.  Transaction log file switching now also happens\n       automatically during <link\n       linkend=\"functions-admin\"><function>pg_stop_backup()</></link>.\n       This ensures that all\n       transaction log files needed for recovery can be archived immediately.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <acronym>WAL</> informational functions (Simon)\n      </para>\n\n      <para>\n       Add functions for interrogating the current transaction log insertion\n       point and determining <acronym>WAL</> filenames from the\n       hex <acronym>WAL</> locations displayed by <link\n       linkend=\"functions-admin\"><function>pg_stop_backup()</></link>\n       and related functions.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve recovery from a crash during <acronym>WAL</> replay (Simon)\n      </para>\n\n      <para>\n       The server now does periodic checkpoints during <acronym>WAL</>\n       recovery, so if there is a crash, future <acronym>WAL</>\n       recovery is shortened.  This also eliminates the need for\n       warm standby servers to replay the entire log since the\n       base backup if they crash.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve reliability of long-term <acronym>WAL</> replay\n       (Heikki, Simon, Tom)\n      </para>\n\n      <para>\n       Formerly, trying to roll forward through more than 2 billion\n       transactions would not work due to XID wraparound.  This meant\n       warm standby servers had to be reloaded\n       from fresh base backups periodically.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link\n       linkend=\"guc-archive-timeout\"><varname>archive_timeout</></link>\n       to force transaction log file switches at a given interval (Simon)\n      </para>\n\n      <para>\n       This enforces a maximum replication delay for warm standby servers.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add native <link linkend=\"auth-ldap\"><acronym>LDAP</></link>\n       authentication (Magnus Hagander)\n      </para>\n\n      <para>\n       This is particularly useful for platforms that do not\n       support <acronym>PAM</>, such as Windows.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"sql-grant-description-objects\"><literal>GRANT\n       CONNECT ON DATABASE</></link> (Gevik Babakhani)\n      </para>\n\n      <para>\n       This gives SQL-level control over database access.  It works as\n       an additional filter on top of the existing\n       <link linkend=\"auth-pg-hba-conf\"><filename>pg_hba.conf</></link>\n       controls.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add support for <link linkend=\"ssl-tcp\"><acronym>SSL</>\n       Certificate Revocation List</link> (<acronym>CRL</>) files\n       (Libor Hoho&scaron;)\n      </para>\n\n      <para>\n       The server and <application>libpq</> both recognize <acronym>CRL</>\n       files now.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <link linkend=\"GiST\"><acronym>GiST</></link> indexes are\n       now clusterable (Teodor)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove routine autovacuum server log entries (Bruce)\n      </para>\n\n      <para>\n       <link\n       linkend=\"monitoring-stats-views-table\"><literal>pg_stat_activity</></link>\n       now shows autovacuum activity.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Track maximum XID age within individual tables, instead of whole databases (Alvaro)\n      </para>\n\n      <para>\n       This reduces the overhead involved in preventing transaction\n       ID wraparound, by avoiding unnecessary VACUUMs.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add last vacuum and analyze timestamp columns to the stats\n       collector (Larry Rosenman)\n      </para>\n\n      <para>\n       These values now appear in the <link\n       linkend=\"monitoring-stats-views-table\"><literal>pg_stat_*_tables</></link>\n       system views.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve performance of statistics monitoring, especially\n       <varname>stats_command_string</>\n       (Tom, Bruce)\n      </para>\n\n      <para>\n       This release enables <varname>stats_command_string</> by\n       default, now that its overhead is minimal.  This means\n       <link\n       linkend=\"monitoring-stats-views-table\"><literal>pg_stat_activity</></link>\n       will now show all active queries by default.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add a <literal>waiting</> column to <link\n       linkend=\"monitoring-stats-views-table\"><literal>pg_stat_activity</></link>\n       (Tom)\n      </para>\n\n      <para>\n       This allows <structname>pg_stat_activity</> to show all the\n       information included in the <application>ps</> display.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add configuration parameter <link\n       linkend=\"guc-update-process-title\"><varname>update_process_title</></link>\n       to control whether the <application>ps</> display is updated\n       for every command (Bruce)\n      </para>\n\n      <para>\n       On platforms where it is expensive to update the <application>ps</>\n       display, it might be worthwhile to turn this off and rely solely on\n       <structname>pg_stat_activity</> for status information.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow units to be specified in configuration settings\n       (Peter)\n      </para>\n\n      <para>\n       For example, you can now set <link\n       linkend=\"guc-shared-buffers\"><varname>shared_buffers</></link>\n       to <literal>32MB</> rather than mentally converting sizes.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add support for <link linkend=\"config-setting\">include\n       directives</link> in <filename>postgresql.conf</> (Joachim\n       Wieland)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve logging of protocol-level prepare/bind/execute\n       messages (Bruce, Tom)\n      </para>\n\n      <para>\n       Such logging now shows statement names, bind parameter\n       values, and the text of the query being executed.  Also,\n       the query text is properly included in logged error messages\n       when enabled by <varname>log_min_error_statement</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Prevent <link\n       linkend=\"guc-max-stack-depth\"><varname>max_stack_depth</></link>\n       from being set to unsafe values\n      </para>\n\n      <para>\n       On platforms where we can determine the actual kernel stack depth\n       limit (which is most), make sure that the initial default value of\n       <varname>max_stack_depth</> is safe, and reject attempts to set it\n       to unsafely large values.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Enable highlighting of error location in query in more\n       cases (Tom)\n      </para>\n\n      <para>\n       The server is now able to report a specific error location for\n       some semantic errors (such as unrecognized column name), rather\n       than just for basic syntax errors as before.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix <quote>failed to re-find parent key</> errors in\n       <command>VACUUM</> (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Clean out <filename>pg_internal.init</> cache files during server\n       restart (Simon)\n      </para>\n\n      <para>\n       This avoids a hazard that the cache files might contain stale\n       data after PITR recovery.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix race condition for truncation of a large relation across a\n       gigabyte boundary by <command>VACUUM</> (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix bug causing needless deadlock errors on row-level locks (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix bugs affecting multi-gigabyte hash indexes (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Each backend process is now its own process group leader (Tom)\n      </para>\n\n      <para>\n       This allows query cancel to abort subprocesses invoked from a\n       backend or archive/recovery process.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Query Changes</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"SQL-INSERT\"><command>INSERT</></link>/<link\n       linkend=\"SQL-UPDATE\"><command>UPDATE</></link>/<link\n       linkend=\"SQL-DELETE\"><command>DELETE</></link>\n       <literal>RETURNING</> (Jonah Harris, Tom)\n      </para>\n\n      <para>\n       This allows these commands to return values, such as the\n       computed serial key for a new row.  In the <command>UPDATE</>\n       case, values from the updated version of the row are returned.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add support for multiple-row <link\n       linkend=\"queries-values\"><literal>VALUES</></link> clauses,\n       per SQL standard (Joe, Tom)\n      </para>\n\n      <para>\n       This allows <command>INSERT</> to insert multiple rows of\n       constants, or queries to generate result sets using constants.\n       For example, <literal>INSERT ...  VALUES (...), (...),\n       ....</>, and <literal>SELECT * FROM (VALUES (...), (...),\n       ....) AS alias(f1, ...)</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <link linkend=\"SQL-UPDATE\"><command>UPDATE</></link>\n       and <link linkend=\"SQL-DELETE\"><command>DELETE</></link>\n       to use an alias for the target table (Atsushi Ogawa)\n      </para>\n\n      <para>\n       The SQL standard does not permit an alias in these commands, but\n       many database systems allow one anyway for notational convenience.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <link linkend=\"SQL-UPDATE\"><command>UPDATE</></link>\n       to set multiple columns with a list of values (Susanne\n       Ebrecht)\n      </para>\n\n      <para>\n       This is basically a short-hand for assigning the columns\n       and values in pairs.  The syntax is <literal>UPDATE tab\n       SET (<replaceable>column</>, ...) = (<replaceable>val</>, ...)</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make row comparisons work per standard (Tom)\n      </para>\n\n      <para>\n       The forms &lt;, &lt;=, &gt;, &gt;= now compare rows lexicographically,\n       that is, compare the first elements, if equal compare the second\n       elements, and so on.  Formerly they expanded to an AND condition\n       across all the elements, which was neither standard nor very useful.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"SQL-TRUNCATE\"><literal>CASCADE</></link>\n       option to <command>TRUNCATE</> (Joachim Wieland)\n      </para>\n\n      <para>\n       This causes <command>TRUNCATE</> to automatically include all tables\n       that reference the specified table(s) via foreign keys.  While\n       convenient, this is a dangerous tool &mdash; use with caution!\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support <literal>FOR UPDATE</> and <literal>FOR SHARE</>\n       in the same <link linkend=\"SQL-INSERT\"><literal>SELECT</></link>\n       command (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"functions-comparisons\"><literal>IS NOT\n       DISTINCT FROM</></link> (Pavel Stehule)\n      </para>\n\n      <para>\n       This operator is similar to equality (<literal>=</>), but\n       evaluates to true when both left and right operands are\n       <literal>NULL</>, and to false when just one is, rather than\n       yielding <literal>NULL</> in these cases.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve the length output used by <link\n       linkend=\"queries-union\"><literal>UNION</></link>/<literal>INTERSECT</>/<literal>EXCEPT</>\n       (Tom)\n      </para>\n\n      <para>\n       When all corresponding columns are of the same defined length, that\n       length is used for the result, rather than a generic length.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <link linkend=\"functions-like\"><literal>ILIKE</></link>\n       to work for multi-byte encodings (Tom)\n      </para>\n\n      <para>\n       Internally, <literal>ILIKE</> now calls <function>lower()</>\n       and then uses <literal>LIKE</>.  Locale-specific regular\n       expression patterns still do not work in these encodings.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Enable <link\n       linkend=\"guc-standard-conforming-strings\"><varname>standard_conforming_strings</></link>\n       to be turned <literal>on</> (Kevin Grittner)\n      </para>\n\n      <para>\n       This allows backslash escaping in strings to be disabled,\n       making <productname>PostgreSQL</> more\n       standards-compliant.  The default is <literal>off</> for backwards\n       compatibility, but future releases will default this to <literal>on</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Do not flatten subqueries that contain <literal>volatile</>\n       functions in their target lists (Jaime Casanova)\n      </para>\n\n      <para>\n       This prevents surprising behavior due to multiple evaluation\n       of a <literal>volatile</> function (such as <function>random()</>\n       or <function>nextval()</>).  It might cause performance\n       degradation in the presence of functions that are unnecessarily\n       marked as <literal>volatile</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add system views <link\n       linkend=\"view-pg-prepared-statements\"><literal>pg_prepared_statements</></link>\n       and <link\n       linkend=\"view-pg-cursors\"><literal>pg_cursors</></link>\n       to show prepared statements and open cursors (Joachim Wieland, Neil)\n      </para>\n\n      <para>\n       These are very useful in pooled connection setups.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support portal parameters in <link\n       linkend=\"SQL-EXPLAIN\"><command>EXPLAIN</></link> and <link\n       linkend=\"SQL-EXECUTE\"><command>EXECUTE</></link> (Tom)\n      </para>\n\n      <para>\n       This allows, for example, <acronym>JDBC</> <literal>?</> parameters to\n       work in these commands.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       If <acronym>SQL</>-level <link\n       linkend=\"SQL-PREPARE\"><command>PREPARE</></link> parameters\n       are unspecified, infer their types from the content of the\n       query (Neil)\n      </para>\n\n      <para>\n       Protocol-level <command>PREPARE</> already did this.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <literal>LIMIT</> and <literal>OFFSET</> to exceed\n       two billion (Dhanaraj M)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Object Manipulation Changes</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add <literal>TABLESPACE</> clause to <link\n       linkend=\"SQL-CREATETABLEAS\"><command>CREATE TABLE AS</></link>\n       (Neil)\n      </para>\n\n      <para>\n       This allows a tablespace to be specified for the new table.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>ON COMMIT</> clause to <link\n       linkend=\"SQL-CREATETABLEAS\"><command>CREATE TABLE AS</></link>\n       (Neil)\n      </para>\n\n      <para>\n       This allows temporary tables to be truncated or dropped on\n       transaction commit.  The default behavior is for the table\n       to remain until the session ends.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>INCLUDING CONSTRAINTS</> to <link\n       linkend=\"SQL-CREATETABLE\"><command>CREATE TABLE LIKE</></link>\n       (Greg Stark)\n      </para>\n\n      <para>\n       This allows easy copying of <literal>CHECK</> constraints to a new\n       table.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow the creation of placeholder (shell) <link\n       linkend=\"SQL-CREATETYPE\">types</link> (Martijn van Oosterhout)\n      </para>\n\n      <para>\n       A shell type declaration creates a type name, without specifying\n       any of the details of the type.  Making a shell type is useful\n       because it allows cleaner declaration of the type's input/output\n       functions, which must exist before the type can be defined <quote>for\n       real</>.  The syntax is <command>CREATE TYPE <replaceable\n       class=\"parameter\">typename</replaceable></>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <link linkend=\"SQL-CREATEAGGREGATE\">Aggregate functions</link>\n       now support multiple input parameters (Sergey Koposov, Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add new aggregate creation <link\n       linkend=\"SQL-CREATEAGGREGATE\">syntax</link> (Tom)\n      </para>\n\n      <para>\n       The new syntax is <command>CREATE AGGREGATE\n       <replaceable>aggname</> (<replaceable>input_type</>)\n       (<replaceable>parameter_list</>)</command>.  This more\n       naturally supports the new multi-parameter aggregate\n       functionality.  The previous syntax is still supported.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link\n       linkend=\"SQL-ALTERROLE\"><command>ALTER ROLE PASSWORD NULL</></link>\n       to remove a previously set role password (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <command>DROP</> object <literal>IF EXISTS</> for many\n       object types (Andrew)\n      </para>\n\n      <para>\n       This allows <command>DROP</> operations on non-existent\n       objects without generating an error.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"SQL-DROP-OWNED\"><literal>DROP OWNED</></link>\n       to drop all objects owned by a role (Alvaro)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"SQL-REASSIGN-OWNED\"><literal>REASSIGN\n       OWNED</></link> to reassign ownership of all objects owned\n       by a role (Alvaro)\n      </para>\n\n      <para>\n       This, and <literal>DROP OWNED</> above, facilitate dropping\n       roles.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"SQL-GRANT\"><command>GRANT ON SEQUENCE</></link>\n       syntax (Bruce)\n      </para>\n\n      <para>\n       This was added for setting sequence-specific permissions.\n       <literal>GRANT ON TABLE</> for sequences is still supported\n       for backward compatibility.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"SQL-GRANT\"><literal>USAGE</></link>\n       permission for sequences that allows only <function>currval()</>\n       and <function>nextval()</>, not <function>setval()</>\n       (Bruce)\n      </para>\n\n      <para>\n       <literal>USAGE</> permission allows more fine-grained\n       control over sequence access.  Granting <literal>USAGE</>\n       allows users to increment\n       a sequence, but prevents them from setting the sequence to\n       an arbitrary value using <function>setval()</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"SQL-ALTERTABLE\"><literal>ALTER TABLE\n       [ NO ] INHERIT</></link> (Greg Stark)\n      </para>\n\n      <para>\n       This allows inheritance to be adjusted dynamically, rather than\n       just at table creation and destruction.  This is very valuable\n       when using inheritance to implement table partitioning.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <link linkend=\"SQL-COMMENT\">comments</link> on global\n       objects to be stored globally (Kris Jurka)\n      </para>\n\n      <para>\n       Previously, comments attached to databases were stored in individual\n       databases, making them ineffective, and there was no provision\n       at all for comments on roles or tablespaces.  This change adds a new\n       shared catalog <link\n       linkend=\"catalog-pg-shdescription\"><structname>pg_shdescription</structname></link>\n       and stores comments on databases, roles, and tablespaces therein.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Utility Command Changes</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add option to allow indexes to be created without blocking\n       concurrent writes to the table (Greg Stark, Tom)\n      </para>\n\n      <para>\n       The new syntax is <link linkend=\"SQL-CREATEINDEX\"><command>CREATE\n       INDEX CONCURRENTLY</></link>.  The default behavior is\n       still to block table modification while an index is being\n       created.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Provide <link linkend=\"functions-advisory-locks\">advisory\n       locking</link> functionality (Abhijit Menon-Sen, Tom)\n      </para>\n\n      <para>\n       This is a new locking API designed to replace what used to be\n       in /contrib/userlock.  The userlock code is now on pgfoundry.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <link linkend=\"SQL-COPY\"><command>COPY</></link> to\n       dump a <command>SELECT</> query (Zoltan Boszormenyi, Karel\n       Zak)\n      </para>\n\n      <para>\n       This allows <command>COPY</> to dump arbitrary <acronym>SQL</>\n       queries. The syntax is <literal>COPY (SELECT ...) TO</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make the <link linkend=\"SQL-COPY\"><command>COPY</></link>\n       command return a command tag that includes the number of\n       rows copied (Volkan YAZICI)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <link linkend=\"SQL-VACUUM\"><command>VACUUM</></link>\n       to expire rows without being affected by other concurrent\n       <command>VACUUM</> operations (Hannu Krossing, Alvaro, Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <link linkend=\"APP-INITDB\"><application>initdb</></link>\n       detect the operating system locale and set the default\n       <varname>DateStyle</> accordingly (Peter)\n      </para>\n\n      <para>\n       This makes it more likely that the installed\n       <filename>postgresql.conf</> <varname>DateStyle</> value will\n       be as desired.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Reduce number of progress messages displayed by <application>initdb</> (Tom)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Date/Time Changes</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Allow full timezone names in <link\n       linkend=\"datatype-datetime\"><type>timestamp</></link> input values\n       (Joachim Wieland)\n      </para>\n\n      <para>\n       For example, <literal>'2006-05-24 21:11\n       America/New_York'::timestamptz</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support configurable timezone abbreviations (Joachim Wieland)\n      </para>\n\n      <para>\n       A desired set of timezone abbreviations can be chosen via the\n       configuration parameter <link\n       linkend=\"guc-timezone-abbreviations\"><varname>timezone_abbreviations</></link>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link\n       linkend=\"view-pg-timezone-abbrevs\"><varname>pg_timezone_abbrevs</></link>\n       and <link\n       linkend=\"view-pg-timezone-names\"><varname>pg_timezone_names</></link>\n       views to show supported timezones (Magnus Hagander)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link\n       linkend=\"functions-datetime-table\"><function>clock_timestamp()</></link>,\n       <link\n       linkend=\"functions-datetime-table\"><function>statement_timestamp()</></link>,\n       and <link\n       linkend=\"functions-datetime-table\"><function>transaction_timestamp()</></link>\n       (Bruce)\n      </para>\n\n      <para>\n       <function>clock_timestamp()</> is the current wall-clock time,\n       <function>statement_timestamp()</> is the time the current\n       statement arrived at the server, and\n       <function>transaction_timestamp()</> is an alias for\n       <function>now()</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <link\n       linkend=\"functions-formatting\"><function>to_char()</></link>\n       to print localized month and day names (Euler Taveira de\n       Oliveira)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <link\n       linkend=\"functions-formatting\"><function>to_char(time)</></link>\n       and <link\n       linkend=\"functions-formatting\"><function>to_char(interval)</></link>\n       to output <acronym>AM</>/<acronym>PM</> specifications\n       (Bruce)\n      </para>\n\n      <para>\n       Intervals and times are treated as 24-hour periods, e.g.\n       <literal>25 hours</> is considered <acronym>AM</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add new function <link\n       linkend=\"functions-datetime-table\"><function>justify_interval()</></link>\n       to adjust interval units (Mark Dilger)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow timezone offsets up to 14:59 away from GMT\n      </para>\n\n      <para>\n       Kiribati uses GMT+14, so we'd better accept that.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Interval computation improvements (Michael Glaesemann, Bruce)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Other Data Type and Function Changes</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Allow arrays to contain <literal>NULL</> elements (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow assignment to array elements not contiguous with the existing\n       entries (Tom)\n      </para>\n\n      <para>\n       The intervening array positions will be filled with nulls.\n       This is per SQL standard.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       New built-in <link linkend=\"functions-array\">operators</link>\n       for array-subset comparisons (<literal>@&gt;</>,\n       <literal>&lt;@</>, <literal>&amp;&amp;</>) (Teodor, Tom)\n      </para>\n\n      <para>\n       These operators can be indexed for many data types using\n       <acronym>GiST</> or <acronym>GIN</> indexes.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add convenient arithmetic <link\n       linkend=\"cidr-inet-operators-table\">operations</link> on\n       <type>INET</>/<type>CIDR</> values (Stephen R. van den\n       Berg)\n      </para>\n\n      <para>\n       The new operators are <literal>&amp;</> (and), <literal>|</>\n       (or), <literal>~</> (not), <type>inet</> <literal>+</> <type>int8</>,\n       <type>inet</> <literal>-</> <type>int8</>, and\n       <type>inet</> <literal>-</> <type>inet</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add new <link\n       linkend=\"functions-aggregate-statistics-table\">aggregate functions</link>\n       from SQL:2003 (Neil)\n      </para>\n\n      <para>\n       The new functions are <function>var_pop()</>,\n       <function>var_samp()</>, <function>stddev_pop()</>, and\n       <function>stddev_samp()</>.  <function>var_samp()</> and\n       <function>stddev_samp()</> are merely renamings of the\n       existing aggregates <function>variance()</> and\n       <function>stddev()</>.  The latter names remain available\n       for backward compatibility.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add SQL:2003 statistical <link\n       linkend=\"functions-aggregate-statistics-table\">aggregates</link>\n       (Sergey Koposov)\n      </para>\n\n      <para>\n       New functions:  <function>regr_intercept()</>,\n       <function>regr_slope()</>, <function>regr_r2()</>,\n       <function>corr()</>, <function>covar_samp()</>,\n       <function>covar_pop()</>, <function>regr_avgx()</>,\n       <function>regr_avgy()</>, <function>regr_sxy()</>,\n       <function>regr_sxx()</>, <function>regr_syy()</>,\n       <function>regr_count()</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <link linkend=\"SQL-CREATEDOMAIN\">domains</link> to be\n       based on other domains (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Properly enforce domain <link\n       linkend=\"ddl-constraints\"><literal>CHECK</></link> constraints\n       everywhere (Neil, Tom)\n      </para>\n\n      <para>\n       For example, the result of a user-defined function that is\n       declared to return a domain type is now checked against the\n       domain's constraints. This closes a significant hole in the domain\n       implementation.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix problems with dumping renamed <link\n       linkend=\"datatype-serial\"><type>SERIAL</></link> columns\n       (Tom)\n      </para>\n\n      <para>\n       The fix is to dump a <type>SERIAL</> column by explicitly\n       specifying its <literal>DEFAULT</> and sequence elements,\n       and reconstructing the <type>SERIAL</> column on reload\n       using a new <link linkend=\"SQL-ALTERSEQUENCE\"><command>ALTER\n       SEQUENCE OWNED BY</></link> command.  This also allows\n       dropping a <type>SERIAL</> column specification.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add a server-side sleep function <link\n       linkend=\"functions-datetime-delay\"><function>pg_sleep()</></link>\n       (Joachim Wieland)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add all comparison operators for the <link\n       linkend=\"datatype-oid\"><type>tid</></link> (tuple id) data\n       type (Mark Kirkwood, Greg Stark, Tom)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>PL/pgSQL Server-Side Language Changes</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add <literal>TG_table_name</> and <literal>TG_table_schema</> to\n       trigger parameters (Andrew)\n      </para>\n\n      <para>\n       <literal>TG_relname</> is now deprecated.  Comparable\n       changes have been made in the trigger parameters for the other\n       PLs as well.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <literal>FOR</> statements to return values to scalars\n       as well as records and row types (Pavel Stehule)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add a <literal>BY</> clause to the <literal>FOR</> loop,\n       to control the iteration increment (Jaime Casanova)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>STRICT</> to <link\n       linkend=\"plpgsql-statements-sql-onerow\"><command>SELECT\n       INTO</></link> (Matt Miller)\n      </para>\n\n      <para>\n       <literal>STRICT</> mode throws an exception if more or less\n       than one row is returned by the <command>SELECT</>, for\n       <productname>Oracle PL/SQL</> compatibility.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>PL/Perl Server-Side Language Changes</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add <literal>table_name</> and <literal>table_schema</> to\n       trigger parameters (Adam Sj&oslash;gren)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add prepared queries (Dmitry Karasik)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <literal>$_TD</> trigger data a global variable (Andrew)\n      </para>\n\n      <para>\n       Previously, it was lexical, which caused unexpected sharing\n       violations.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Run PL/Perl and PL/PerlU in separate interpreters, for security\n       reasons (Andrew)\n      </para>\n      <para>\n       In consequence, they can no longer share data nor loaded modules.\n       Also, if Perl has not been compiled with the requisite flags to\n       allow multiple interpreters, only one of these languages can be used\n       in any given backend process.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>PL/Python Server-Side Language Changes</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Named parameters are passed as ordinary variables, as well as in the\n       <literal>args[]</> array (Sven Suursoho)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>table_name</> and <literal>table_schema</> to\n       trigger parameters (Andrew)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow returning of composite types and result sets (Sven Suursoho)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Return result-set as <literal>list</>, <literal>iterator</>,\n       or <literal>generator </>(Sven Suursoho)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow functions to return <literal>void</> (Neil)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Python 2.5 is now supported (Tom)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title><link linkend=\"APP-PSQL\"><application>psql</></link> Changes</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add new command <literal>\\password</> for changing role\n       password with client-side password encryption (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <literal>\\c</> to connect to a new host and port\n       number (David, Volkan YAZICI)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add tablespace display to <literal>\\l+</> (Philip Yarra)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve <literal>\\df</> slash command to include the argument\n       names and modes (<literal>OUT</> or <literal>INOUT</>) of\n       the function (David Fetter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support binary <command>COPY</> (Andreas Pflug)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add option to run the entire session in a single transaction\n       (Simon)\n      </para>\n\n      <para>\n       Use option <literal>-1</> or <literal>--single-transaction</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support for automatically retrieving <command>SELECT</>\n       results in batches using a cursor (Chris Mair)\n      </para>\n\n      <para>\n       This is enabled using <command>\\set FETCH_COUNT\n       <replaceable>n</></command>. This\n       feature allows large result sets to be retrieved in\n       <application>psql</> without attempting to buffer the entire\n       result set in memory.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make multi-line values align in the proper column\n       (Martijn van Oosterhout)\n      </para>\n\n      <para>\n       Field values containing newlines are now displayed in a more\n       readable fashion.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Save multi-line statements as a single entry, rather than\n       one line at a time (Sergey E. Koposov)\n      </para>\n\n      <para>\n       This makes up-arrow recall of queries easier.  (This is\n       not available on Windows, because that platform uses the native\n       command-line editing present in the operating system.)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make the line counter 64-bit so it can handle files with more\n       than two billion lines (David Fetter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Report both the returned data and the command status tag\n       for <command>INSERT</>/<command>UPDATE</>/<command>DELETE\n       RETURNING</> (Tom)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title><link linkend=\"APP-PGDUMP\"><application>pg_dump</></link> Changes</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Allow complex selection of objects to be included or excluded\n       by <application>pg_dump</> (Greg Sabino Mullane)\n      </para>\n\n      <para>\n       <application>pg_dump</> now supports multiple <literal>-n</>\n       (schema) and <literal>-t</> (table) options, and adds\n       <literal>-N</> and <literal>-T</> options to exclude objects.\n       Also, the arguments of these switches can now be wild-card expressions\n       rather than single object names, for example\n       <literal>-t 'foo*'</>, and a schema can be part of\n       a <literal>-t</> or <literal>-T</> switch, for example\n       <literal>-t schema1.table1</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"APP-PGRESTORE\"><application>pg_restore</></link>\n       <literal>--no-data-for-failed-tables</> option to suppress\n       loading data if table creation failed (i.e., the table already\n       exists) (Martin Pitt)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"APP-PGRESTORE\"><application>pg_restore</></link>\n       option to run the entire session in a single transaction\n       (Simon)\n      </para>\n\n      <para>\n       Use option <literal>-1</> or <literal>--single-transaction</>.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title><link linkend=\"libpq\"><application>libpq</></link> Changes</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add <link\n       linkend=\"libpq-misc\"><function>PQencryptPassword()</></link>\n       to encrypt passwords (Tom)\n      </para>\n\n      <para>\n       This allows passwords to be sent pre-encrypted for commands\n       like <link linkend=\"SQL-ALTERROLE\"><command>ALTER ROLE ...\n       PASSWORD</></link>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add function <link\n       linkend=\"libpq-threading\"><function>PQisthreadsafe()</></link>\n       (Bruce)\n      </para>\n\n      <para>\n       This allows applications to query the thread-safety status\n       of the library.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link\n       linkend=\"libpq-exec-main\"><function>PQdescribePrepared()</></link>,\n       <link\n       linkend=\"libpq-exec-main\"><function>PQdescribePortal()</></link>,\n       and related functions to return information about previously\n       prepared statements and open cursors (Volkan YAZICI)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <link linkend=\"libpq-ldap\"><acronym>LDAP</></link> lookups\n       from <link\n       linkend=\"libpq-pgservice\"><filename>pg_service.conf</></link>\n       (Laurenz Albe)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow a hostname in <link\n       linkend=\"libpq-pgpass\"><filename>~/.pgpass</></link>\n       to match the default socket directory (Bruce)\n      </para>\n\n      <para>\n       A blank hostname continues to match any Unix-socket connection,\n       but this addition allows entries that are specific to one of\n       several postmasters on the machine.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title><link linkend=\"ecpg\"><application>ecpg</></link> Changes</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Allow <link linkend=\"SQL-SHOW\"><command>SHOW</></link> to\n       put its result into a variable (Joachim Wieland)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"SQL-COPY\"><command>COPY TO STDOUT</></link>\n       (Joachim Wieland)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add regression tests (Joachim Wieland, Michael)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Major source code cleanups (Joachim Wieland, Michael)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title><application>Windows</> Port</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Allow <acronym>MSVC</> to compile the <productname>PostgreSQL</>\n       server (Magnus, Hiroshi Saito)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <acronym>MSVC</> support for utility commands and <link\n       linkend=\"APP-PGDUMP\"><application>pg_dump</></link> (Hiroshi\n       Saito)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add support for Windows code pages <literal>1253</>,\n       <literal>1254</>, <literal>1255</>, and <literal>1257</>\n       (Kris Jurka)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Drop privileges on startup, so that the server can be started from\n       an administrative account (Magnus)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Stability fixes (Qingqing Zhou, Magnus)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add native semaphore implementation (Qingqing Zhou)\n      </para>\n\n      <para>\n       The previous code mimicked SysV semaphores.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Source Code Changes</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"GIN\"><acronym>GIN</></link> (Generalized\n       Inverted iNdex) index access method (Teodor, Oleg)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove R-tree indexing (Tom)\n      </para>\n\n      <para>\n       Rtree has been re-implemented using <link\n       linkend=\"GiST\"><acronym>GiST</></link>. Among other\n       differences, this means that rtree indexes now have support\n       for crash recovery via write-ahead logging (WAL).\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Reduce libraries needlessly linked into the backend (Martijn\n       van Oosterhout, Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add a configure flag to allow libedit to be preferred over\n       <acronym>GNU</> readline (Bruce)\n      </para>\n\n      <para>\n       Use configure <link\n       linkend=\"configure\"><literal>--with-libedit-preferred</></link>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow installation into directories containing spaces\n       (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve ability to relocate installation directories (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add support for <productname>Solaris x86_64</> using the\n       <productname>Solaris</> compiler (Pierre Girard, Theo\n       Schlossnagle, Bruce)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <application>DTrace</> support (Robert Lor)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>PG_VERSION_NUM</> for use by third-party\n       applications wanting to test the backend version in C using &gt;\n       and &lt; comparisons (Bruce)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>XLOG_BLCKSZ</> as independent from <literal>BLCKSZ</>\n       (Mark Wong)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>LWLOCK_STATS</> define to report locking\n       activity (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Emit warnings for unknown <application>configure</> options\n       (Martijn van Oosterhout)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add server support for <quote>plugin</> libraries\n       that can be used for add-on tasks such as debugging and performance\n       measurement (Korry Douglas)\n      </para>\n\n      <para>\n       This consists of two features: a table of <quote>rendezvous\n       variables</> that allows separately-loaded shared libraries to\n       communicate, and a new configuration parameter <link\n       linkend=\"guc-local-preload-libraries\"><varname>local_preload_libraries</></link>\n       that allows libraries to be loaded into specific sessions without\n       explicit cooperation from the client application.  This allows\n       external add-ons to implement features such as a PL/pgSQL debugger.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Rename existing configuration parameter\n       <varname>preload_libraries</> to <link\n       linkend=\"guc-shared-preload-libraries\"><varname>shared_preload_libraries</></link>\n       (Tom)\n      </para>\n\n      <para>\n       This was done for clarity in comparison to\n       <varname>local_preload_libraries</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add new configuration parameter <link\n       linkend=\"guc-server-version-num\"><varname>server_version_num</></link>\n       (Greg Sabino Mullane)\n      </para>\n\n      <para>\n       This is like <varname>server_version</varname>, but is an\n       integer, e.g.  <literal>80200</>. This allows applications to\n       make version checks more easily.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add a configuration parameter <link\n       linkend=\"guc-seq-page-cost\"><varname>seq_page_cost</></link>\n       (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Re-implement the <link linkend=\"regress\">regression test</link> script as a C program\n       (Magnus, Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow loadable modules to allocate shared memory and\n       lightweight locks (Marc Munro)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add automatic initialization and finalization of dynamically\n       loaded libraries (Ralf Engelschall, Tom)\n      </para>\n\n      <para>\n       New <link linkend=\"xfunc-c-dynload\">functions</link>\n       <function>_PG_init()</> and <function>_PG_fini()</> are\n       called if the library defines such symbols.  Hence we no\n       longer need to specify an initialization function in\n       <varname>shared_preload_libraries</>; we can assume that\n       the library used the <function>_PG_init()</> convention\n       instead.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link\n       linkend=\"xfunc-c-dynload\"><literal>PG_MODULE_MAGIC</></link>\n       header block to all shared object files (Martijn van\n       Oosterhout)\n      </para>\n\n      <para>\n       The magic block prevents version mismatches between loadable object\n       files and servers.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n        Add shared library support for AIX (Laurenz Albe)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       New <link linkend=\"datatype-xml\"><acronym>XML</></link>\n       documentation section (Bruce)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Contrib Changes</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Major tsearch2 improvements (Oleg, Teodor)\n      </para>\n\n      <itemizedlist>\n\n       <listitem>\n        <para>\n         multibyte encoding support, including <acronym>UTF8</>\n        </para>\n       </listitem>\n       <listitem>\n        <para>\n         query rewriting support\n        </para>\n       </listitem>\n       <listitem>\n        <para>\n         improved ranking functions\n        </para>\n       </listitem>\n       <listitem>\n        <para>\n         thesaurus dictionary support\n        </para>\n       </listitem>\n       <listitem>\n        <para>\n         Ispell dictionaries now recognize <application>MySpell</>\n         format, used by <application>OpenOffice</>\n        </para>\n       </listitem>\n       <listitem>\n        <para>\n         <acronym>GIN</> support\n        </para>\n       </listitem>\n\n      </itemizedlist>\n\n     </listitem>\n\n     <listitem>\n      <para>\n       Add adminpack module containing <application>Pgadmin</> administration\n       functions (Dave)\n      </para>\n\n      <para>\n       These functions provide additional file system access\n       routines not present in the default <productname>PostgreSQL</>\n       server.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add sslinfo module (Victor Wagner)\n      </para>\n\n      <para>\n       Reports information about the current connection's <acronym>SSL</>\n       certificate.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add pgrowlocks module (Tatsuo)\n      </para>\n\n      <para>\n       This shows row locking information for a specified table.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add hstore module (Oleg, Teodor)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add isn module, replacing isbn_issn (Jeremy Kronuz)\n      </para>\n\n      <para>\n       This new implementation supports <acronym>EAN13</>, <acronym>UPC</>,\n       <acronym>ISBN</> (books), <acronym>ISMN</> (music), and\n       <acronym>ISSN</> (serials).\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add index information functions to pgstattuple (ITAGAKI Takahiro,\n       Satoshi Nagayasu)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add pg_freespacemap module to display free space map information\n       (Mark Kirkwood)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       pgcrypto now has all planned functionality (Marko Kreen)\n      </para>\n      <itemizedlist>\n       <listitem>\n        <para>\n         Include iMath library in pgcrypto to have the public-key encryption\n         functions always available.\n        </para>\n       </listitem>\n       <listitem>\n        <para>\n         Add SHA224 algorithm that was missing in OpenBSD code.\n        </para>\n       </listitem>\n       <listitem>\n        <para>\n         Activate builtin code for SHA224/256/384/512 hashes on older\n         OpenSSL to have those algorithms always available.\n        </para>\n       </listitem>\n       <listitem>\n        <para>\n         New function gen_random_bytes() that returns cryptographically strong\n         randomness.  Useful for generating encryption keys.\n        </para>\n       </listitem>\n       <listitem>\n        <para>\n         Remove digest_exists(), hmac_exists() and cipher_exists() functions.\n        </para>\n       </listitem>\n      </itemizedlist>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improvements to cube module (Joshua Reich)\n      </para>\n\n      <para>\n       New functions are <function>cube(float[])</>,\n       <function>cube(float[], float[])</>, and\n       <function>cube_subset(cube, int4[])</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add async query capability to dblink (Kai Londenberg,\n       Joe Conway)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       New operators for array-subset comparisons (<literal>@&gt;</>,\n       <literal>&lt;@</>, <literal>&amp;&amp;</>) (Tom)\n      </para>\n\n      <para>\n       Various contrib packages already had these operators for their\n       datatypes, but the naming wasn't consistent.  We have now added\n       consistently named array-subset comparison operators to the core code\n       and all the contrib packages that have such functionality.\n       (The old names remain available, but are deprecated.)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add uninstall scripts for all contrib packages that have install\n       scripts (David, Josh Drake)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n  </sect2>\n </sect1>\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/doc/src/sgml/release-8.3.sgml": "<!-- doc/src/sgml/release-8.3.sgml -->\n<!-- See header comment in release.sgml about typical markup -->\n\n <sect1 id=\"release-8-3-23\">\n  <title>Release 8.3.23</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2013-02-07</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.22.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <para>\n   This is expected to be the last <productname>PostgreSQL</> release\n   in the 8.3.X series.  Users are encouraged to update to a newer\n   release branch soon.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.23</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 8.3.17,\n    see <xref linkend=\"release-8-3-17\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Prevent execution of <function>enum_recv</> from SQL (Tom Lane)\n     </para>\n\n     <para>\n      The function was misdeclared, allowing a simple SQL command to crash the\n      server.  In principle an attacker might be able to use it to examine the\n      contents of server memory.  Our thanks to Sumit Soni (via Secunia SVCRP)\n      for reporting this issue.  (CVE-2013-0255)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix SQL grammar to allow subscripting or field selection from a\n      sub-SELECT result (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Protect against race conditions when scanning\n      <structname>pg_tablespace</> (Stephen Frost, Tom Lane)\n     </para>\n\n     <para>\n      <command>CREATE DATABASE</> and <command>DROP DATABASE</> could\n      misbehave if there were concurrent updates of\n      <structname>pg_tablespace</> entries.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent <command>DROP OWNED</> from trying to drop whole databases or\n      tablespaces (&Aacute;lvaro Herrera)\n     </para>\n\n     <para>\n      For safety, ownership of these objects must be reassigned, not dropped.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent misbehavior when a <symbol>RowExpr</> or <symbol>XmlExpr</>\n      is parse-analyzed twice (Andres Freund, Tom Lane)\n     </para>\n\n     <para>\n      This mistake could be user-visible in contexts such as\n      <literal>CREATE TABLE LIKE INCLUDING INDEXES</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve defenses against integer overflow in hashtable sizing\n      calculations (Jeff Davis)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that non-ASCII prompt strings are translated to the correct\n      code page on Windows (Alexander Law, Noah Misch)\n     </para>\n\n     <para>\n      This bug affected <application>psql</> and some other client programs.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash in <application>psql</>'s <command>\\?</> command\n      when not connected to a database (Meng Qingzhong)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix one-byte buffer overrun in <application>libpq</>'s\n      <function>PQprintTuples</> (Xi Wang)\n     </para>\n\n     <para>\n      This ancient function is not used anywhere by\n      <productname>PostgreSQL</> itself, but it might still be used by some\n      client code.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Rearrange configure's tests for supplied functions so it is not\n      fooled by bogus exports from libedit/libreadline (Christoph Berg)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure Windows build number increases over time (Magnus Hagander)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>pgxs</> build executables with the right\n      <literal>.exe</> suffix when cross-compiling for Windows\n      (Zoltan Boszormenyi)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add new timezone abbreviation <literal>FET</> (Tom Lane)\n     </para>\n\n     <para>\n      This is now used in some eastern-European time zones.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-22\">\n  <title>Release 8.3.22</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2012-12-06</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.21.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <para>\n   The <productname>PostgreSQL</> community will stop releasing updates\n   for the 8.3.X release series in February 2013.\n   Users are encouraged to update to a newer release branch soon.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.22</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 8.3.17,\n    see <xref linkend=\"release-8-3-17\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix multiple bugs associated with <command>CREATE INDEX\n      CONCURRENTLY</> (Andres Freund, Tom Lane)\n     </para>\n\n     <para>\n      Fix <command>CREATE INDEX CONCURRENTLY</> to use\n      in-place updates when changing the state of an index's\n      <structname>pg_index</> row.  This prevents race conditions that could\n      cause concurrent sessions to miss updating the target index, thus\n      resulting in corrupt concurrently-created indexes.\n     </para>\n\n     <para>\n      Also, fix various other operations to ensure that they ignore\n      invalid indexes resulting from a failed <command>CREATE INDEX\n      CONCURRENTLY</> command.  The most important of these is\n      <command>VACUUM</>, because an auto-vacuum could easily be launched\n      on the table before corrective action can be taken to fix or remove\n      the invalid index.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid corruption of internal hash tables when out of memory\n      (Hitoshi Harada)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planning of non-strict equivalence clauses above outer joins\n      (Tom Lane)\n     </para>\n\n     <para>\n      The planner could derive incorrect constraints from a clause equating\n      a non-strict construct to something else, for example\n      <literal>WHERE COALESCE(foo, 0) = 0</>\n      when <literal>foo</> is coming from the nullable side of an outer join.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve planner's ability to prove exclusion constraints from\n      equivalence classes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix partial-row matching in hashed subplans to handle cross-type cases\n      correctly (Tom Lane)\n     </para>\n\n     <para>\n      This affects multicolumn <literal>NOT IN</> subplans, such as\n      <literal>WHERE (a, b) NOT IN (SELECT x, y FROM ...)</>\n      when for instance <literal>b</> and <literal>y</> are <type>int4</>\n      and <type>int8</> respectively.  This mistake led to wrong answers\n      or crashes depending on the specific datatypes involved.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Acquire buffer lock when re-fetching the old tuple for an\n      <literal>AFTER ROW UPDATE/DELETE</> trigger (Andres Freund)\n     </para>\n\n     <para>\n      In very unusual circumstances, this oversight could result in passing\n      incorrect data to the precheck logic for a foreign-key enforcement\n      trigger.  That could result in a crash, or in an incorrect decision\n      about whether to fire the trigger.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>REASSIGN OWNED</> to handle grants on tablespaces\n      (&Aacute;lvaro Herrera)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ignore incorrect <structname>pg_attribute</> entries for system\n      columns for views (Tom Lane)\n     </para>\n\n     <para>\n      Views do not have any system columns.  However, we forgot to\n      remove such entries when converting a table to a view.  That's fixed\n      properly for 9.3 and later, but in previous branches we need to defend\n      against existing mis-converted views.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix rule printing to dump <literal>INSERT INTO <replaceable>table</>\n      DEFAULT VALUES</literal> correctly (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Guard against stack overflow when there are too many\n      <literal>UNION</>/<literal>INTERSECT</>/<literal>EXCEPT</> clauses\n      in a query (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent platform-dependent failures when dividing the minimum possible\n      integer value by -1 (Xi Wang, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible access past end of string in date parsing\n      (Hitoshi Harada)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Produce an understandable error message if the length of the path name\n      for a Unix-domain socket exceeds the platform-specific limit\n      (Tom Lane, Andrew Dunstan)\n     </para>\n\n     <para>\n      Formerly, this would result in something quite unhelpful, such as\n      <quote>Non-recoverable failure in name resolution</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leaks when sending composite column values to the client\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>pg_ctl</> more robust about reading the\n      <filename>postmaster.pid</> file (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Fix race conditions and possible file descriptor leakage.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash in <application>psql</> if incorrectly-encoded data\n      is presented and the <varname>client_encoding</> setting is a\n      client-only encoding, such as SJIS (Jiang Guiqing)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bugs in the <filename>restore.sql</> script emitted by\n      <application>pg_dump</> in <literal>tar</> output format (Tom Lane)\n     </para>\n\n     <para>\n      The script would fail outright on tables whose names include\n      upper-case characters.  Also, make the script capable of restoring\n      data in <option>--inserts</> mode as well as the regular COPY mode.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</> to accept POSIX-conformant\n      <literal>tar</> files (Brian Weaver, Tom Lane)\n     </para>\n\n     <para>\n      The original coding of <application>pg_dump</>'s <literal>tar</>\n      output mode produced files that are not fully conformant with the\n      POSIX standard.  This has been corrected for version 9.3.  This\n      patch updates previous branches so that they will accept both the\n      incorrect and the corrected formats, in hopes of avoiding\n      compatibility problems when 9.3 comes out.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_resetxlog</> to locate <filename>postmaster.pid</>\n      correctly when given a relative path to the data directory (Tom Lane)\n     </para>\n\n     <para>\n      This mistake could lead to <application>pg_resetxlog</> not noticing\n      that there is an active postmaster using the data directory.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>libpq</>'s <function>lo_import()</> and\n      <function>lo_export()</> functions to report file I/O errors properly\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</>'s processing of nested structure pointer\n      variables (Muhammad Usama)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <filename>contrib/pageinspect</>'s btree page inspection\n      functions take buffer locks while examining pages (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pgxs</> support for building loadable modules on AIX\n      (Tom Lane)\n     </para>\n\n     <para>\n      Building modules outside the original source tree didn't work on AIX.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2012j\n      for DST law changes in Cuba, Israel, Jordan, Libya, Palestine, Western\n      Samoa, and portions of Brazil.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-21\">\n  <title>Release 8.3.21</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2012-09-24</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.20.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <para>\n   The <productname>PostgreSQL</> community will stop releasing updates\n   for the 8.3.X release series in February 2013.\n   Users are encouraged to update to a newer release branch soon.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.21</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 8.3.17,\n    see <xref linkend=\"release-8-3-17\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Improve page-splitting decisions in GiST indexes (Alexander Korotkov,\n      Robert Haas, Tom Lane)\n     </para>\n\n     <para>\n      Multi-column GiST indexes might suffer unexpected bloat due to this\n      error.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix cascading privilege revoke to stop if privileges are still held\n      (Tom Lane)\n     </para>\n\n     <para>\n      If we revoke a grant option from some role <replaceable>X</>, but\n      <replaceable>X</> still holds that option via a grant from someone\n      else, we should not recursively revoke the corresponding privilege\n      from role(s) <replaceable>Y</> that <replaceable>X</> had granted it\n      to.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix handling of <literal>SIGFPE</> when PL/Perl is in use (Andres Freund)\n     </para>\n\n     <para>\n      Perl resets the process's <literal>SIGFPE</> handler to\n      <literal>SIG_IGN</>, which could result in crashes later on.  Restore\n      the normal Postgres signal handler after initializing PL/Perl.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent PL/Perl from crashing if a recursive PL/Perl function is\n      redefined while being executed (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Work around possible misoptimization in PL/Perl (Tom Lane)\n     </para>\n\n     <para>\n      Some Linux distributions contain an incorrect version of\n      <filename>pthread.h</> that results in incorrect compiled code in\n      PL/Perl, leading to crashes if a PL/Perl function calls another one\n      that throws an error.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2012f\n      for DST law changes in Fiji\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-20\">\n  <title>Release 8.3.20</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2012-08-17</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.19.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <para>\n   The <productname>PostgreSQL</> community will stop releasing updates\n   for the 8.3.X release series in February 2013.\n   Users are encouraged to update to a newer release branch soon.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.20</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 8.3.17,\n    see <xref linkend=\"release-8-3-17\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Prevent access to external files/URLs via XML entity references\n      (Noah Misch, Tom Lane)\n     </para>\n\n     <para>\n      <function>xml_parse()</> would attempt to fetch external files or\n      URLs as needed to resolve DTD and entity references in an XML value,\n      thus allowing unprivileged database users to attempt to fetch data\n      with the privileges of the database server.  While the external data\n      wouldn't get returned directly to the user, portions of it could be\n      exposed in error messages if the data didn't parse as valid XML; and\n      in any case the mere ability to check existence of a file might be\n      useful to an attacker.  (CVE-2012-3489)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent access to external files/URLs via <filename>contrib/xml2</>'s\n      <function>xslt_process()</> (Peter Eisentraut)\n     </para>\n\n     <para>\n      <application>libxslt</> offers the ability to read and write both\n      files and URLs through stylesheet commands, thus allowing\n      unprivileged database users to both read and write data with the\n      privileges of the database server.  Disable that through proper use\n      of <application>libxslt</>'s security options.  (CVE-2012-3488)\n     </para>\n\n     <para>\n      Also, remove <function>xslt_process()</>'s ability to fetch documents\n      and stylesheets from external files/URLs.  While this was a\n      documented <quote>feature</>, it was long regarded as a bad idea.\n      The fix for CVE-2012-3489 broke that capability, and rather than\n      expend effort on trying to fix it, we're just going to summarily\n      remove it.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent too-early recycling of btree index pages (Noah Misch)\n     </para>\n\n     <para>\n      When we allowed read-only transactions to skip assigning XIDs, we\n      introduced the possibility that a deleted btree page could be\n      recycled while a read-only transaction was still in flight to it.\n      This would result in incorrect index search results.  The probability\n      of such an error occurring in the field seems very low because of the\n      timing requirements, but nonetheless it should be fixed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix crash-safety bug with newly-created-or-reset sequences (Tom Lane)\n     </para>\n\n     <para>\n      If <command>ALTER SEQUENCE</> was executed on a freshly created or\n      reset sequence, and then precisely one <function>nextval()</> call\n      was made on it, and then the server crashed, WAL replay would restore\n      the sequence to a state in which it appeared that no\n      <function>nextval()</> had been done, thus allowing the first\n      sequence value to be returned again by the next\n      <function>nextval()</> call.  In particular this could manifest for\n      <type>serial</> columns, since creation of a serial column's sequence\n      includes an <command>ALTER SEQUENCE OWNED BY</> step.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure the <filename>backup_label</> file is fsync'd after\n      <function>pg_start_backup()</> (Dave Kerr)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Back-patch 9.1 improvement to compress the fsync request queue\n      (Robert Haas)\n     </para>\n\n     <para>\n      This improves performance during checkpoints.  The 9.1 change\n      has now seen enough field testing to seem safe to back-patch.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Only allow autovacuum to be auto-canceled by a directly blocked\n      process (Tom Lane)\n     </para>\n\n     <para>\n      The original coding could allow inconsistent behavior in some cases;\n      in particular, an autovacuum could get canceled after less than\n      <literal>deadlock_timeout</> grace period.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve logging of autovacuum cancels (Robert Haas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix log collector so that <literal>log_truncate_on_rotation</> works\n      during the very first log rotation after server start (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that a whole-row reference to a subquery doesn't include any\n      extra <literal>GROUP BY</> or <literal>ORDER BY</> columns (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow copying whole-row references in <literal>CHECK</>\n      constraints and index definitions during <command>CREATE TABLE</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      This situation can arise in <command>CREATE TABLE</> with\n      <literal>LIKE</> or <literal>INHERITS</>.  The copied whole-row\n      variable was incorrectly labeled with the row type of the original\n      table not the new one.  Rejecting the case seems reasonable for\n      <literal>LIKE</>, since the row types might well diverge later.  For\n      <literal>INHERITS</> we should ideally allow it, with an implicit\n      coercion to the parent table's row type; but that will require more\n      work than seems safe to back-patch.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak in <literal>ARRAY(SELECT ...)</> subqueries (Heikki\n      Linnakangas, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix extraction of common prefixes from regular expressions (Tom Lane)\n     </para>\n\n     <para>\n      The code could get confused by quantified parenthesized\n      subexpressions, such as <literal>^(foo)?bar</>.  This would lead to\n      incorrect index optimization of searches for such patterns.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Report errors properly in <filename>contrib/xml2</>'s\n      <function>xslt_process()</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2012e\n      for DST law changes in Morocco and Tokelau\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-19\">\n  <title>Release 8.3.19</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2012-06-04</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.18.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.19</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 8.3.17,\n    see <xref linkend=\"release-8-3-17\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix incorrect password transformation in\n      <filename>contrib/pgcrypto</>'s DES <function>crypt()</> function\n      (Solar Designer)\n     </para>\n\n     <para>\n      If a password string contained the byte value <literal>0x80</>, the\n      remainder of the password was ignored, causing the password to be much\n      weaker than it appeared.  With this fix, the rest of the string is\n      properly included in the DES hash.  Any stored password values that are\n      affected by this bug will thus no longer match, so the stored values may\n      need to be updated.  (CVE-2012-2143)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ignore <literal>SECURITY DEFINER</> and <literal>SET</> attributes for\n      a procedural language's call handler (Tom Lane)\n     </para>\n\n     <para>\n      Applying such attributes to a call handler could crash the server.\n      (CVE-2012-2655)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow numeric timezone offsets in <type>timestamp</> input to be up to\n      16 hours away from UTC (Tom Lane)\n     </para>\n\n     <para>\n      Some historical time zones have offsets larger than 15 hours, the\n      previous limit.  This could result in dumped data values being rejected\n      during reload.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix timestamp conversion to cope when the given time is exactly the\n      last DST transition time for the current timezone (Tom Lane)\n     </para>\n\n     <para>\n      This oversight has been there a long time, but was not noticed\n      previously because most DST-using zones are presumed to have an\n      indefinite sequence of future DST transitions.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <type>text</> to <type>name</> and <type>char</> to <type>name</>\n      casts to perform string truncation correctly in multibyte encodings\n      (Karl Schnaitter)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory copying bug in <function>to_tsquery()</> (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix slow session startup when <structname>pg_attribute</> is very large\n      (Tom Lane)\n     </para>\n\n     <para>\n      If <structname>pg_attribute</> exceeds one-fourth of\n      <varname>shared_buffers</>, cache rebuilding code that is sometimes\n      needed during session start would trigger the synchronized-scan logic,\n      causing it to take many times longer than normal.  The problem was\n      particularly acute if many new sessions were starting at once.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure sequential scans check for query cancel reasonably often (Merlin\n      Moncure)\n     </para>\n\n     <para>\n      A scan encountering many consecutive pages that contain no live tuples\n      would not respond to interrupts meanwhile.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure the Windows implementation of <function>PGSemaphoreLock()</>\n      clears <varname>ImmediateInterruptOK</> before returning (Tom Lane)\n     </para>\n\n     <para>\n      This oversight meant that a query-cancel interrupt received later\n      in the same query could be accepted at an unsafe time, with\n      unpredictable but not good consequences.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Show whole-row variables safely when printing views or rules\n      (Abbas Butt, Tom Lane)\n     </para>\n\n     <para>\n      Corner cases involving ambiguous names (that is, the name could be\n      either a table or column name of the query) were printed in an\n      ambiguous way, risking that the view or rule would be interpreted\n      differently after dump and reload.  Avoid the ambiguous case by\n      attaching a no-op cast.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure autovacuum worker processes perform stack depth checking\n      properly (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Previously, infinite recursion in a function invoked by\n      auto-<command>ANALYZE</> could crash worker processes.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix logging collector to not lose log coherency under high load (Andrew\n      Dunstan)\n     </para>\n\n     <para>\n      The collector previously could fail to reassemble large messages if it\n      got too busy.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix logging collector to ensure it will restart file rotation\n      after receiving <systemitem>SIGHUP</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/pgSQL's <command>GET DIAGNOSTICS</> command when the target\n      is the function's first variable (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix several performance problems in <application>pg_dump</> when\n      the database contains many objects (Jeff Janes, Tom Lane)\n     </para>\n\n     <para>\n      <application>pg_dump</> could get very slow if the database contained\n      many schemas, or if many objects are in dependency loops, or if there\n      are many owned sequences.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/dblink</>'s <function>dblink_exec()</> to not leak\n      temporary database connections upon error (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2012c\n      for DST law changes in Antarctica, Armenia, Chile, Cuba, Falkland\n      Islands, Gaza, Haiti, Hebron, Morocco, Syria, and Tokelau Islands;\n      also historical corrections for Canada.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-18\">\n  <title>Release 8.3.18</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2012-02-27</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.17.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.18</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n   </para>\n\n   <para>\n    However, if you are upgrading from a version earlier than 8.3.17,\n    see <xref linkend=\"release-8-3-17\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Require execute permission on the trigger function for\n      <command>CREATE TRIGGER</> (Robert Haas)\n     </para>\n\n     <para>\n      This missing check could allow another user to execute a trigger\n      function with forged input data, by installing it on a table he owns.\n      This is only of significance for trigger functions marked\n      <literal>SECURITY DEFINER</>, since otherwise trigger functions run\n      as the table owner anyway.  (CVE-2012-0866)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Convert newlines to spaces in names written in <application>pg_dump</>\n      comments (Robert Haas)\n     </para>\n\n     <para>\n      <application>pg_dump</> was incautious about sanitizing object names\n      that are emitted within SQL comments in its output script.  A name\n      containing a newline would at least render the script syntactically\n      incorrect.  Maliciously crafted object names could present a SQL\n      injection risk when the script is reloaded.  (CVE-2012-0868)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix btree index corruption from insertions concurrent with vacuuming\n      (Tom Lane)\n     </para>\n\n     <para>\n      An index page split caused by an insertion could sometimes cause a\n      concurrently-running <command>VACUUM</> to miss removing index entries\n      that it should remove.  After the corresponding table rows are removed,\n      the dangling index entries would cause errors (such as <quote>could not\n      read block N in file ...</>) or worse, silently wrong query results\n      after unrelated rows are re-inserted at the now-free table locations.\n      This bug has been present since release 8.2, but occurs so infrequently\n      that it was not diagnosed until now.  If you have reason to suspect\n      that it has happened in your database, reindexing the affected index\n      will fix things.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow non-existent values for some settings in <command>ALTER\n      USER/DATABASE SET</> (Heikki Linnakangas)\n     </para>\n\n     <para>\n      Allow <varname>default_text_search_config</>,\n      <varname>default_tablespace</>, and <varname>temp_tablespaces</> to be\n      set to names that are not known.  This is because they might be known\n      in another database where the setting is intended to be used, or for the\n      tablespace cases because the tablespace might not be created yet.  The\n      same issue was previously recognized for <varname>search_path</>, and\n      these settings now act like that one.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Track the OID counter correctly during WAL replay, even when it wraps\n      around (Tom Lane)\n     </para>\n\n     <para>\n      Previously the OID counter would remain stuck at a high value until the\n      system exited replay mode.  The practical consequences of that are\n      usually nil, but there are scenarios wherein a standby server that's\n      been promoted to master might take a long time to advance the OID\n      counter to a reasonable value once values are needed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix regular expression back-references with <literal>*</> attached\n      (Tom Lane)\n     </para>\n\n     <para>\n      Rather than enforcing an exact string match, the code would effectively\n      accept any string that satisfies the pattern sub-expression referenced\n      by the back-reference symbol.\n     </para>\n\n     <para>\n      A similar problem still afflicts back-references that are embedded in a\n      larger quantified expression, rather than being the immediate subject\n      of the quantifier.  This will be addressed in a future\n      <productname>PostgreSQL</> release.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix recently-introduced memory leak in processing of\n      <type>inet</>/<type>cidr</> values (Heikki Linnakangas)\n     </para>\n\n     <para>\n      A patch in the December 2011 releases of <productname>PostgreSQL</>\n      caused memory leakage in these operations, which could be significant\n      in scenarios such as building a btree index on such a column.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid double close of file handle in syslogger on Windows (MauMau)\n     </para>\n\n     <para>\n      Ordinarily this error was invisible, but it would cause an exception\n      when running on a debug version of Windows.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix I/O-conversion-related memory leaks in plpgsql\n      (Andres Freund, Jan Urbanski, Tom Lane)\n     </para>\n\n     <para>\n      Certain operations would leak memory until the end of the current\n      function.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <application>pg_dump</>'s handling of inherited table columns\n      (Tom Lane)\n     </para>\n\n     <para>\n      <application>pg_dump</> mishandled situations where a child column has\n      a different default expression than its parent column.  If the default\n      is textually identical to the parent's default, but not actually the\n      same (for instance, because of schema search path differences) it would\n      not be recognized as different, so that after dump and restore the\n      child would be allowed to inherit the parent's default.  Child columns\n      that are <literal>NOT NULL</> where their parent is not could also be\n      restored subtly incorrectly.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</>'s direct-to-database mode for\n      INSERT-style table data (Tom Lane)\n     </para>\n\n     <para>\n      Direct-to-database restores from archive files made with\n      <option>--inserts</> or <option>--column-inserts</> options fail when\n      using <application>pg_restore</> from a release dated September or\n      December 2011, as a result of an oversight in a fix for another\n      problem.  The archive file itself is not at fault, and text-mode\n      output is okay.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix error in <filename>contrib/intarray</>'s <literal>int[] &amp;\n      int[]</> operator (Guillaume Lelarge)\n     </para>\n\n     <para>\n      If the smallest integer the two input arrays have in common is 1,\n      and there are smaller values in either array, then 1 would be\n      incorrectly omitted from the result.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix error detection in <filename>contrib/pgcrypto</>'s\n      <function>encrypt_iv()</> and <function>decrypt_iv()</>\n      (Marko Kreen)\n     </para>\n\n     <para>\n      These functions failed to report certain types of invalid-input errors,\n      and would instead return random garbage values for incorrect input.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix one-byte buffer overrun in <filename>contrib/test_parser</>\n      (Paul Guyot)\n     </para>\n\n     <para>\n      The code would try to read one more byte than it should, which would\n      crash in corner cases.\n      Since <filename>contrib/test_parser</> is only example code, this is\n      not a security issue in itself, but bad example code is still bad.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use <function>__sync_lock_test_and_set()</> for spinlocks on ARM, if\n      available (Martin Pitt)\n     </para>\n\n     <para>\n      This function replaces our previous use of the <literal>SWPB</>\n      instruction, which is deprecated and not available on ARMv6 and later.\n      Reports suggest that the old code doesn't fail in an obvious way on\n      recent ARM boards, but simply doesn't interlock concurrent accesses,\n      leading to bizarre failures in multiprocess operation.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use <option>-fexcess-precision=standard</> option when building with\n      gcc versions that accept it (Andrew Dunstan)\n     </para>\n\n     <para>\n      This prevents assorted scenarios wherein recent versions of gcc will\n      produce creative results.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow use of threaded Python on FreeBSD (Chris Rees)\n     </para>\n\n     <para>\n      Our configure script previously believed that this combination wouldn't\n      work; but FreeBSD fixed the problem, so remove that error check.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-17\">\n  <title>Release 8.3.17</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2011-12-05</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.16.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.17</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n   </para>\n\n   <para>\n    However, a longstanding error was discovered in the definition of the\n    <literal>information_schema.referential_constraints</> view.  If you\n    rely on correct results from that view, you should replace its\n    definition as explained in the first changelog item below.\n   </para>\n\n   <para>\n    Also, if you are upgrading from a version earlier than 8.3.8,\n    see <xref linkend=\"release-8-3-8\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix bugs in <literal>information_schema.referential_constraints</> view\n      (Tom Lane)\n     </para>\n\n     <para>\n      This view was being insufficiently careful about matching the\n      foreign-key constraint to the depended-on primary or unique key\n      constraint.  That could result in failure to show a foreign key\n      constraint at all, or showing it multiple times, or claiming that it\n      depends on a different constraint than the one it really does.\n     </para>\n\n     <para>\n      Since the view definition is installed by <application>initdb</>,\n      merely upgrading will not fix the problem.  If you need to fix this\n      in an existing installation, you can (as a superuser) drop the\n      <literal>information_schema</> schema then re-create it by sourcing\n      <filename><replaceable>SHAREDIR</>/information_schema.sql</filename>.\n      (Run <literal>pg_config --sharedir</> if you're uncertain where\n      <replaceable>SHAREDIR</> is.)  This must be repeated in each database\n      to be fixed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix TOAST-related data corruption during <literal>CREATE TABLE dest AS\n      SELECT * FROM src</> or <literal>INSERT INTO dest SELECT * FROM src</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      If a table has been modified by <command>ALTER TABLE ADD COLUMN</>,\n      attempts to copy its data verbatim to another table could produce\n      corrupt results in certain corner cases.\n      The problem can only manifest in this precise form in 8.4 and later,\n      but we patched earlier versions as well in case there are other code\n      paths that could trigger the same bug.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition during toast table access from stale syscache entries\n      (Tom Lane)\n     </para>\n\n     <para>\n      The typical symptom was transient errors like <quote>missing chunk\n      number 0 for toast value NNNNN in pg_toast_2619</>, where the cited\n      toast table would always belong to a system catalog.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <function>DatumGetInetP()</> unpack inet datums that have a 1-byte\n      header, and add a new macro, <function>DatumGetInetPP()</>, that does\n      not (Heikki Linnakangas)\n     </para>\n\n     <para>\n      This change affects no core code, but might prevent crashes in add-on\n      code that expects <function>DatumGetInetP()</> to produce an unpacked\n      datum as per usual convention.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve locale support in <type>money</> type's input and output\n      (Tom Lane)\n     </para>\n\n     <para>\n      Aside from not supporting all standard\n      <link linkend=\"guc-lc-monetary\"><varname>lc_monetary</></link>\n      formatting options, the input and output functions were inconsistent,\n      meaning there were locales in which dumped <type>money</> values could\n      not be re-read.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't let <link\n      linkend=\"guc-transform-null-equals\"><varname>transform_null_equals</></link>\n      affect <literal>CASE foo WHEN NULL ...</> constructs\n      (Heikki Linnakangas)\n     </para>\n\n     <para>\n      <varname>transform_null_equals</> is only supposed to affect\n      <literal>foo = NULL</> expressions written directly by the user, not\n      equality checks generated internally by this form of <literal>CASE</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Change foreign-key trigger creation order to better support\n      self-referential foreign keys (Tom Lane)\n     </para>\n\n     <para>\n      For a cascading foreign key that references its own table, a row update\n      will fire both the <literal>ON UPDATE</> trigger and the\n      <literal>CHECK</> trigger as one event.  The <literal>ON UPDATE</>\n      trigger must execute first, else the <literal>CHECK</> will check a\n      non-final state of the row and possibly throw an inappropriate error.\n      However, the firing order of these triggers is determined by their\n      names, which generally sort in creation order since the triggers have\n      auto-generated names following the convention\n      <quote>RI_ConstraintTrigger_NNNN</>.  A proper fix would require\n      modifying that convention, which we will do in 9.2, but it seems risky\n      to change it in existing releases.  So this patch just changes the\n      creation order of the triggers.  Users encountering this type of error\n      should drop and re-create the foreign key constraint to get its\n      triggers into the right order.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid floating-point underflow while tracking buffer allocation rate\n      (Greg Matthews)\n     </para>\n\n     <para>\n      While harmless in itself, on certain platforms this would result in\n      annoying kernel log messages.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Preserve blank lines within commands in <application>psql</>'s command\n      history (Robert Haas)\n     </para>\n\n     <para>\n      The former behavior could cause problems if an empty line was removed\n      from within a string literal, for example.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_dump</> to dump user-defined casts between\n      auto-generated types, such as table rowtypes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use the preferred version of <application>xsubpp</> to build PL/Perl,\n      not necessarily the operating system's main copy\n      (David Wheeler and Alex Hunsaker)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect coding in <filename>contrib/dict_int</> and\n      <filename>contrib/dict_xsyn</> (Tom Lane)\n     </para>\n\n     <para>\n      Some functions incorrectly assumed that memory returned by\n      <function>palloc()</> is guaranteed zeroed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Honor query cancel interrupts promptly in <function>pgstatindex()</>\n      (Robert Haas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure VPATH builds properly install all server header files\n      (Peter Eisentraut)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Shorten file names reported in verbose error messages (Peter Eisentraut)\n     </para>\n\n     <para>\n      Regular builds have always reported just the name of the C file\n      containing the error message call, but VPATH builds formerly\n      reported an absolute path name.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix interpretation of Windows timezone names for Central America\n      (Tom Lane)\n     </para>\n\n     <para>\n      Map <quote>Central America Standard Time</> to <literal>CST6</>, not\n      <literal>CST6CDT</>, because DST is generally not observed anywhere in\n      Central America.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2011n\n      for DST law changes in Brazil, Cuba, Fiji, Palestine, Russia, and Samoa;\n      also historical corrections for Alaska and British East Africa.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-16\">\n  <title>Release 8.3.16</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2011-09-26</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.15.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.16</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n    However, if you are upgrading from a version earlier than 8.3.8,\n    see <xref linkend=\"release-8-3-8\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix bugs in indexing of in-doubt HOT-updated tuples (Tom Lane)\n     </para>\n\n     <para>\n      These bugs could result in index corruption after reindexing a system\n      catalog.  They are not believed to affect user indexes.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix multiple bugs in GiST index page split processing (Heikki\n      Linnakangas)\n     </para>\n\n     <para>\n      The probability of occurrence was low, but these could lead to index\n      corruption.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible buffer overrun in <function>tsvector_concat()</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      The function could underestimate the amount of memory needed for its\n      result, leading to server crashes.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix crash in <function>xml_recv</> when processing a\n      <quote>standalone</> parameter (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid possibly accessing off the end of memory in <command>ANALYZE</>\n      and in SJIS-2004 encoding conversion (Noah Misch)\n     </para>\n\n     <para>\n      This fixes some very-low-probability server crash scenarios.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition in relcache init file invalidation (Tom Lane)\n     </para>\n\n     <para>\n      There was a window wherein a new backend process could read a stale init\n      file but miss the inval messages that would tell it the data is stale.\n      The result would be bizarre failures in catalog accesses, typically\n      <quote>could not read block 0 in file ...</> later during startup.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak at end of a GiST index scan (Tom Lane)\n     </para>\n\n     <para>\n      Commands that perform many separate GiST index scans, such as\n      verification of a new GiST-based exclusion constraint on a table\n      already containing many rows, could transiently require large amounts of\n      memory due to this leak.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix performance problem when constructing a large, lossy bitmap\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix array- and path-creating functions to ensure padding bytes are\n      zeroes (Tom Lane)\n     </para>\n\n     <para>\n      This avoids some situations where the planner will think that\n      semantically-equal constants are not equal, resulting in poor\n      optimization.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Work around gcc 4.6.0 bug that breaks WAL replay (Tom Lane)\n     </para>\n\n     <para>\n      This could lead to loss of committed transactions after a server crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix dump bug for <literal>VALUES</> in a view (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <literal>SELECT FOR UPDATE/SHARE</> on sequences (Tom Lane)\n     </para>\n\n     <para>\n      This operation doesn't work as expected and can lead to failures.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Defend against integer overflow when computing size of a hash table (Tom\n      Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix cases where <command>CLUSTER</> might attempt to access\n      already-removed TOAST data (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix portability bugs in use of credentials control messages for\n      <quote>peer</> authentication (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix SSPI login when multiple roundtrips are required (Ahmed Shinwari,\n      Magnus Hagander)\n     </para>\n\n     <para>\n      The typical symptom of this problem was <quote>The function requested is\n      not supported</> errors during SSPI login.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix typo in <function>pg_srand48</> seed initialization (Andres Freund)\n     </para>\n\n     <para>\n      This led to failure to use all bits of the provided seed.  This function\n      is not used on most platforms (only those without <function>srandom</>),\n      and the potential security exposure from a less-random-than-expected\n      seed seems minimal in any case.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid integer overflow when the sum of <literal>LIMIT</> and\n      <literal>OFFSET</> values exceeds 2^63 (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add overflow checks to <type>int4</> and <type>int8</> versions of\n      <function>generate_series()</> (Robert Haas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix trailing-zero removal in <function>to_char()</> (Marti Raudsepp)\n     </para>\n\n     <para>\n      In a format with <literal>FM</> and no digit positions\n      after the decimal point, zeroes to the left of the decimal point could\n      be removed incorrectly.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>pg_size_pretty()</> to avoid overflow for inputs close to\n      2^63 (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>pg_ctl</>, support silent mode for service registrations\n      on Windows (MauMau)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>psql</>'s counting of script file line numbers during\n      <literal>COPY</> from a different file (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</>'s direct-to-database mode for\n      <varname>standard_conforming_strings</> (Tom Lane)\n     </para>\n\n     <para>\n      <application>pg_restore</> could emit incorrect commands when restoring\n      directly to a database server from an archive file that had been made\n      with <varname>standard_conforming_strings</> set to <literal>on</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix write-past-buffer-end and memory leak in <application>libpq</>'s\n      LDAP service lookup code (Albe Laurenz)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>libpq</>, avoid failures when using nonblocking I/O\n      and an SSL connection (Martin Pihlak, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve libpq's handling of failures during connection startup\n      (Tom Lane)\n     </para>\n\n     <para>\n      In particular, the response to a server report of <function>fork()</>\n      failure during SSL connection startup is now saner.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <application>libpq</>'s error reporting for SSL failures (Tom\n      Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>ecpglib</> write <type>double</> values with 15 digits\n      precision (Akira Kurosawa)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <application>ecpglib</>, be sure <literal>LC_NUMERIC</> setting is\n      restored after an error (Michael Meskes)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Apply upstream fix for blowfish signed-character bug (CVE-2011-2483)\n      (Tom Lane)\n     </para>\n\n     <para>\n      <filename>contrib/pg_crypto</>'s blowfish encryption code could give\n      wrong results on platforms where char is signed (which is most),\n      leading to encrypted passwords being weaker than they should be.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak in <filename>contrib/seg</> (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>pgstatindex()</> to give consistent results for empty\n      indexes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow building with perl 5.14 (Alex Hunsaker)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update configure script's method for probing existence of system\n      functions (Tom Lane)\n     </para>\n\n     <para>\n      The version of autoconf we used in 8.3 and 8.2 could be fooled by\n      compilers that perform link-time optimization.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted issues with build and install file paths containing spaces\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2011i\n      for DST law changes in Canada, Egypt, Russia, Samoa, and South Sudan.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-15\">\n  <title>Release 8.3.15</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2011-04-18</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.14.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.15</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n    However, if you are upgrading from a version earlier than 8.3.8,\n    see <xref linkend=\"release-8-3-8\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Disallow including a composite type in itself (Tom Lane)\n     </para>\n\n     <para>\n      This prevents scenarios wherein the server could recurse infinitely\n      while processing the composite type.  While there are some possible\n      uses for such a structure, they don't seem compelling enough to\n      justify the effort required to make sure it always works safely.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid potential deadlock during catalog cache initialization\n      (Nikhil Sontakke)\n     </para>\n\n     <para>\n      In some cases the cache loading code would acquire share lock on a\n      system index before locking the index's catalog.  This could deadlock\n      against processes trying to acquire exclusive locks in the other,\n      more standard order.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix dangling-pointer problem in <literal>BEFORE ROW UPDATE</> trigger\n      handling when there was a concurrent update to the target tuple\n      (Tom Lane)\n     </para>\n\n     <para>\n      This bug has been observed to result in intermittent <quote>cannot\n      extract system attribute from virtual tuple</> failures while trying to\n      do <literal>UPDATE RETURNING ctid</>.  There is a very small probability\n      of more serious errors, such as generating incorrect index entries for\n      the updated tuple.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <command>DROP TABLE</> when there are pending deferred trigger\n      events for the table (Tom Lane)\n     </para>\n\n     <para>\n      Formerly the <command>DROP</> would go through, leading to\n      <quote>could not open relation with OID nnn</> errors when the\n      triggers were eventually fired.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/Python memory leak involving array slices (Daniel Popowich)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</> to cope with long lines (over 1KB) in\n      TOC files (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Put in more safeguards against crashing due to division-by-zero\n      with overly enthusiastic compiler optimization (Aurelien Jarno)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Support use of dlopen() in FreeBSD and OpenBSD on MIPS (Tom Lane)\n     </para>\n\n     <para>\n      There was a hard-wired assumption that this system function was not\n      available on MIPS hardware on these systems.  Use a compile-time test\n      instead, since more recent versions have it.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix compilation failures on HP-UX (Heikki Linnakangas)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix version-incompatibility problem with <application>libintl</> on\n      Windows (Hiroshi Inoue)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix usage of <application>xcopy</> in Windows build scripts to\n      work correctly under Windows 7 (Andrew Dunstan)\n     </para>\n\n     <para>\n      This affects the build scripts only, not installation or usage.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix path separator used by <application>pg_regress</> on Cygwin\n      (Andrew Dunstan)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2011f\n      for DST law changes in Chile, Cuba, Falkland Islands, Morocco, Samoa,\n      and Turkey; also historical corrections for South Australia, Alaska,\n      and Hawaii.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-14\">\n  <title>Release 8.3.14</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2011-01-31</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.13.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.14</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n    However, if you are upgrading from a version earlier than 8.3.8,\n    see <xref linkend=\"release-8-3-8\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Avoid failures when <command>EXPLAIN</> tries to display a simple-form\n      <literal>CASE</> expression (Tom Lane)\n     </para>\n\n     <para>\n      If the <literal>CASE</>'s test expression was a constant, the planner\n      could simplify the <literal>CASE</> into a form that confused the\n      expression-display code, resulting in <quote>unexpected CASE WHEN\n      clause</> errors.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assignment to an array slice that is before the existing range\n      of subscripts (Tom Lane)\n     </para>\n\n     <para>\n      If there was a gap between the newly added subscripts and the first\n      pre-existing subscript, the code miscalculated how many entries needed\n      to be copied from the old array's null bitmap, potentially leading to\n      data corruption or crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid unexpected conversion overflow in planner for very distant date\n      values (Tom Lane)\n     </para>\n\n     <para>\n      The <type>date</> type supports a wider range of dates than can be\n      represented by the <type>timestamp</> types, but the planner assumed it\n      could always convert a date to timestamp with impunity.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_restore</>'s text output for large objects (BLOBs)\n      when <varname>standard_conforming_strings</> is on (Tom Lane)\n     </para>\n\n     <para>\n      Although restoring directly to a database worked correctly, string\n      escaping was incorrect if <application>pg_restore</> was asked for\n      SQL text output and <varname>standard_conforming_strings</> had been\n      enabled in the source database.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix erroneous parsing of <type>tsquery</> values containing\n      <literal>... &amp; !(subexpression) | ...</literal> (Tom Lane)\n     </para>\n\n     <para>\n      Queries containing this combination of operators were not executed\n      correctly.  The same error existed in <filename>contrib/intarray</>'s\n      <type>query_int</> type and <filename>contrib/ltree</>'s\n      <type>ltxtquery</> type.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix buffer overrun in <filename>contrib/intarray</>'s input function\n      for the <type>query_int</> type (Apple)\n     </para>\n\n     <para>\n      This bug is a security risk since the function's return address could\n      be overwritten.  Thanks to Apple Inc's security team for reporting this\n      issue and supplying the fix.  (CVE-2010-4015)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug in <filename>contrib/seg</>'s GiST picksplit algorithm\n      (Alexander Korotkov)\n     </para>\n\n     <para>\n      This could result in considerable inefficiency, though not actually\n      incorrect answers, in a GiST index on a <type>seg</> column.\n      If you have such an index, consider <command>REINDEX</>ing it after\n      installing this update.  (This is identical to the bug that was fixed in\n      <filename>contrib/cube</> in the previous update.)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-13\">\n  <title>Release 8.3.13</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2010-12-16</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.12.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.13</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n    However, if you are upgrading from a version earlier than 8.3.8,\n    see <xref linkend=\"release-8-3-8\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Force the default\n      <link linkend=\"guc-wal-sync-method\"><varname>wal_sync_method</></link>\n      to be <literal>fdatasync</> on Linux (Tom Lane, Marti Raudsepp)\n     </para>\n\n     <para>\n      The default on Linux has actually been <literal>fdatasync</> for many\n      years, but recent kernel changes caused <productname>PostgreSQL</> to\n      choose <literal>open_datasync</> instead.  This choice did not result\n      in any performance improvement, and caused outright failures on\n      certain filesystems, notably <literal>ext4</> with the\n      <literal>data=journal</> mount option.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted bugs in WAL replay logic for GIN indexes (Tom Lane)\n     </para>\n\n     <para>\n      This could result in <quote>bad buffer id: 0</> failures or\n      corruption of index contents during replication.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix recovery from base backup when the starting checkpoint WAL record\n      is not in the same WAL segment as its redo point (Jeff Davis)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix persistent slowdown of autovacuum workers when multiple workers\n      remain active for a long time (Tom Lane)\n     </para>\n\n     <para>\n      The effective <varname>vacuum_cost_limit</> for an autovacuum worker\n      could drop to nearly zero if it processed enough tables, causing it\n      to run extremely slowly.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add support for detecting register-stack overrun on <literal>IA64</>\n      (Tom Lane)\n     </para>\n\n     <para>\n      The <literal>IA64</> architecture has two hardware stacks.  Full\n      prevention of stack-overrun failures requires checking both.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add a check for stack overflow in <function>copyObject()</> (Tom Lane)\n     </para>\n\n     <para>\n      Certain code paths could crash due to stack overflow given a\n      sufficiently complex query.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix detection of page splits in temporary GiST indexes (Heikki\n      Linnakangas)\n     </para>\n\n     <para>\n      It is possible to have a <quote>concurrent</> page split in a\n      temporary index, if for example there is an open cursor scanning the\n      index when an insertion is done.  GiST failed to detect this case and\n      hence could deliver wrong results when execution of the cursor\n      continued.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid memory leakage while <command>ANALYZE</>'ing complex index\n      expressions (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure an index that uses a whole-row Var still depends on its table\n      (Tom Lane)\n     </para>\n\n     <para>\n      An index declared like <literal>create index i on t (foo(t.*))</>\n      would not automatically get dropped when its table was dropped.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Do not <quote>inline</> a SQL function with multiple <literal>OUT</>\n      parameters (Tom Lane)\n     </para>\n\n     <para>\n      This avoids a possible crash due to loss of information about the\n      expected result rowtype.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Behave correctly if <literal>ORDER BY</>, <literal>LIMIT</>,\n      <literal>FOR UPDATE</>, or <literal>WITH</> is attached to the\n      <literal>VALUES</> part of <literal>INSERT ... VALUES</> (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix constant-folding of <literal>COALESCE()</> expressions (Tom Lane)\n     </para>\n\n     <para>\n      The planner would sometimes attempt to evaluate sub-expressions that\n      in fact could never be reached, possibly leading to unexpected errors.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix postmaster crash when connection acceptance\n      (<function>accept()</> or one of the calls made immediately after it)\n      fails, and the postmaster was compiled with GSSAPI support (Alexander\n      Chernikov)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix missed unlink of temporary files when <varname>log_temp_files</>\n      is active (Tom Lane)\n     </para>\n\n     <para>\n      If an error occurred while attempting to emit the log message, the\n      unlink was not done, resulting in accumulation of temp files.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add print functionality for <structname>InhRelation</> nodes (Tom Lane)\n     </para>\n\n     <para>\n      This avoids a failure when <varname>debug_print_parse</> is enabled\n      and certain types of query are executed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect calculation of distance from a point to a horizontal\n      line segment (Tom Lane)\n     </para>\n\n     <para>\n      This bug affected several different geometric distance-measurement\n      operators.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>PL/pgSQL</>'s handling of <quote>simple</>\n      expressions to not fail in recursion or error-recovery cases (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>PL/Python</>'s handling of set-returning functions\n      (Jan Urbanski)\n     </para>\n\n     <para>\n      Attempts to call SPI functions within the iterator generating a set\n      result would fail.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug in <filename>contrib/cube</>'s GiST picksplit algorithm\n      (Alexander Korotkov)\n     </para>\n\n     <para>\n      This could result in considerable inefficiency, though not actually\n      incorrect answers, in a GiST index on a <type>cube</> column.\n      If you have such an index, consider <command>REINDEX</>ing it after\n      installing this update.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't emit <quote>identifier will be truncated</> notices in\n      <filename>contrib/dblink</> except when creating new connections\n      (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix potential coredump on missing public key in\n      <filename>contrib/pgcrypto</> (Marti Raudsepp)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak in <filename>contrib/xml2</>'s XPath query functions\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2010o\n      for DST law changes in Fiji and Samoa;\n      also historical corrections for Hong Kong.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-12\">\n  <title>Release 8.3.12</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2010-10-04</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.11.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.12</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n    However, if you are upgrading from a version earlier than 8.3.8,\n    see <xref linkend=\"release-8-3-8\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Use a separate interpreter for each calling SQL userid in PL/Perl and\n      PL/Tcl (Tom Lane)\n     </para>\n\n     <para>\n      This change prevents security problems that can be caused by subverting\n      Perl or Tcl code that will be executed later in the same session under\n      another SQL user identity (for example, within a <literal>SECURITY\n      DEFINER</> function).  Most scripting languages offer numerous ways that\n      that might be done, such as redefining standard functions or operators\n      called by the target function.  Without this change, any SQL user with\n      Perl or Tcl language usage rights can do essentially anything with the\n      SQL privileges of the target function's owner.\n     </para>\n\n     <para>\n      The cost of this change is that intentional communication among Perl\n      and Tcl functions becomes more difficult.  To provide an escape hatch,\n      PL/PerlU and PL/TclU functions continue to use only one interpreter\n      per session.  This is not considered a security issue since all such\n      functions execute at the trust level of a database superuser already.\n     </para>\n\n     <para>\n      It is likely that third-party procedural languages that claim to offer\n      trusted execution have similar security issues.  We advise contacting\n      the authors of any PL you are depending on for security-critical\n      purposes.\n     </para>\n\n     <para>\n      Our thanks to Tim Bunce for pointing out this issue (CVE-2010-3433).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent possible crashes in <function>pg_get_expr()</> by disallowing\n      it from being called with an argument that is not one of the system\n      catalog columns it's intended to be used with\n      (Heikki Linnakangas, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Treat exit code 128 (<literal>ERROR_WAIT_NO_CHILDREN</>) as non-fatal on\n      Windows (Magnus Hagander)\n     </para>\n\n     <para>\n      Under high load, Windows processes will sometimes fail at startup with\n      this error code.  Formerly the postmaster treated this as a panic\n      condition and restarted the whole database, but that seems to be\n      an overreaction.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect usage of non-strict OR joinclauses in Append indexscans\n      (Tom Lane)\n     </para>\n\n     <para>\n      This is a back-patch of an 8.4 fix that was missed in the 8.3 branch.\n      This corrects an error introduced in 8.3.8 that could cause incorrect\n      results for outer joins when the inner relation is an inheritance tree\n      or <literal>UNION ALL</> subquery.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible duplicate scans of <literal>UNION ALL</> member relations\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <quote>cannot handle unplanned sub-select</quote> error (Tom Lane)\n     </para>\n\n     <para>\n      This occurred when a sub-select contains a join alias reference that\n      expands into an expression containing another sub-select.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix failure to mark cached plans as transient (Tom Lane)\n     </para>\n\n     <para>\n      If a plan is prepared while <command>CREATE INDEX CONCURRENTLY</> is\n      in progress for one of the referenced tables, it is supposed to be\n      re-planned once the index is ready for use.  This was not happening\n      reliably.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Reduce PANIC to ERROR in some occasionally-reported btree failure cases,\n      and provide additional detail in the resulting error messages\n      (Tom Lane)\n     </para>\n\n     <para>\n      This should improve the system's robustness with corrupted indexes.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent show_session_authorization() from crashing within autovacuum\n      processes (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Defend against functions returning setof record where not all the\n      returned rows are actually of the same rowtype (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible failure when hashing a pass-by-reference function result\n      (Tao Ma, Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve merge join's handling of NULLs in the join columns (Tom Lane)\n     </para>\n\n     <para>\n      A merge join can now stop entirely upon reaching the first NULL,\n      if the sort order is such that NULLs sort high.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Take care to fsync the contents of lockfiles (both\n      <filename>postmaster.pid</> and the socket lockfile) while writing them\n      (Tom Lane)\n     </para>\n\n     <para>\n      This omission could result in corrupted lockfile contents if the\n      machine crashes shortly after postmaster start.  That could in turn\n      prevent subsequent attempts to start the postmaster from succeeding,\n      until the lockfile is manually removed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid recursion while assigning XIDs to heavily-nested\n      subtransactions (Andres Freund, Robert Haas)\n     </para>\n\n     <para>\n      The original coding could result in a crash if there was limited\n      stack space.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid holding open old WAL segments in the walwriter process\n      (Magnus Hagander, Heikki Linnakangas)\n     </para>\n\n     <para>\n      The previous coding would prevent removal of no-longer-needed segments.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <varname>log_line_prefix</>'s <literal>%i</> escape,\n      which could produce junk early in backend startup (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible data corruption in <command>ALTER TABLE ... SET\n      TABLESPACE</> when archiving is enabled (Jeff Davis)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow <command>CREATE DATABASE</> and <command>ALTER DATABASE ... SET\n      TABLESPACE</> to be interrupted by query-cancel (Guillaume Lelarge)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>REASSIGN OWNED</> to handle operator classes and families\n      (Asko Tiidumaa)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible core dump when comparing two empty <type>tsquery</> values\n      (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <literal>LIKE</>'s handling of patterns containing <literal>%</>\n      followed by <literal>_</> (Tom Lane)\n     </para>\n\n     <para>\n      We've fixed this before, but there were still some incorrectly-handled\n      cases.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In PL/Python, defend against null pointer results from\n      <function>PyCObject_AsVoidPtr</> and <function>PyCObject_FromVoidPtr</>\n      (Peter Eisentraut)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make psql recognize <command>DISCARD ALL</> as a command that should\n      not be encased in a transaction block in autocommit-off mode\n      (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</> to process data from <literal>RETURNING</>\n      clauses correctly (Michael Meskes)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <filename>contrib/dblink</>'s handling of tables containing\n      dropped columns (Tom Lane)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix connection leak after <quote>duplicate connection name</quote>\n      errors in <filename>contrib/dblink</> (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/dblink</> to handle connection names longer than\n      62 bytes correctly (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add <function>hstore(text, text)</>\n      function to <filename>contrib/hstore</> (Robert Haas)\n     </para>\n\n     <para>\n      This function is the recommended substitute for the now-deprecated\n      <literal>=&gt;</> operator.  It was back-patched so that future-proofed\n      code can be used with older server versions.  Note that the patch will\n      be effective only after <filename>contrib/hstore</> is installed or\n      reinstalled in a particular database.  Users might prefer to execute\n      the <command>CREATE FUNCTION</> command by hand, instead.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update build infrastructure and documentation to reflect the source code\n      repository's move from CVS to Git (Magnus Hagander and others)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2010l\n      for DST law changes in Egypt and Palestine; also historical corrections\n      for Finland.\n     </para>\n\n     <para>\n      This change also adds new names for two Micronesian timezones:\n      Pacific/Chuuk is now preferred over Pacific/Truk (and the preferred\n      abbreviation is CHUT not TRUT) and Pacific/Pohnpei is preferred over\n      Pacific/Ponape.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make Windows' <quote>N. Central Asia Standard Time</> timezone map to\n      Asia/Novosibirsk, not Asia/Almaty (Magnus Hagander)\n     </para>\n\n     <para>\n      Microsoft changed the DST behavior of this zone in the timezone update\n      from KB976098. Asia/Novosibirsk is a better match to its new behavior.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-11\">\n  <title>Release 8.3.11</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2010-05-17</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.10.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.11</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n    However, if you are upgrading from a version earlier than 8.3.8,\n    see <xref linkend=\"release-8-3-8\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Enforce restrictions in <literal>plperl</> using an opmask applied to\n      the whole interpreter, instead of using <filename>Safe.pm</>\n      (Tim Bunce, Andrew Dunstan)\n     </para>\n\n     <para>\n      Recent developments have convinced us that <filename>Safe.pm</> is too\n      insecure to rely on for making <literal>plperl</> trustable.  This\n      change removes use of <filename>Safe.pm</> altogether, in favor of using\n      a separate interpreter with an opcode mask that is always applied.\n      Pleasant side effects of the change include that it is now possible to\n      use Perl's <literal>strict</> pragma in a natural way in\n      <literal>plperl</>, and that Perl's <literal>$a</> and <literal>$b</>\n      variables work as expected in sort routines, and that function\n      compilation is significantly faster.  (CVE-2010-1169)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent PL/Tcl from executing untrustworthy code from\n      <structname>pltcl_modules</> (Tom)\n     </para>\n\n     <para>\n      PL/Tcl's feature for autoloading Tcl code from a database table\n      could be exploited for trojan-horse attacks, because there was no\n      restriction on who could create or insert into that table.  This change\n      disables the feature unless <structname>pltcl_modules</> is owned by a\n      superuser.  (However, the permissions on the table are not checked, so\n      installations that really need a less-than-secure modules table can\n      still grant suitable privileges to trusted non-superusers.)  Also,\n      prevent loading code into the unrestricted <quote>normal</> Tcl\n      interpreter unless we are really going to execute a <literal>pltclu</>\n      function.  (CVE-2010-1170)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash if a cache reset message is received during\n      rebuild of a relcache entry (Heikki)\n     </para>\n\n     <para>\n      This error was introduced in 8.3.10 while fixing a related failure.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Apply per-function GUC settings while running the language validator\n      for the function (Itagaki Takahiro)\n     </para>\n\n     <para>\n      This avoids failures if the function's code is invalid without the\n      setting; an example is that SQL functions may not parse if the\n      <varname>search_path</> is not correct.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Do not allow an unprivileged user to reset superuser-only parameter\n      settings (Alvaro)\n     </para>\n\n     <para>\n      Previously, if an unprivileged user ran <literal>ALTER USER ... RESET\n      ALL</> for himself, or <literal>ALTER DATABASE ... RESET ALL</> for\n      a database he owns, this would remove all special parameter settings\n      for the user or database, even ones that are only supposed to be\n      changeable by a superuser.  Now, the <command>ALTER</> will only\n      remove the parameters that the user has permission to change.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid possible crash during backend shutdown if shutdown occurs\n      when a <literal>CONTEXT</> addition would be made to log entries (Tom)\n     </para>\n\n     <para>\n      In some cases the context-printing function would fail because the\n      current transaction had already been rolled back when it came time\n      to print a log message.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure the archiver process responds to changes in\n      <varname>archive_command</> as soon as possible (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update PL/Perl's <filename>ppport.h</> for modern Perl versions\n      (Andrew)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted memory leaks in PL/Python (Andreas Freund, Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent infinite recursion in <application>psql</> when expanding\n      a variable that refers to itself (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>psql</>'s <literal>\\copy</> to not add spaces around\n      a dot within <literal>\\copy (select ...)</> (Tom)\n     </para>\n\n     <para>\n      Addition of spaces around the decimal point in a numeric literal would\n      result in a syntax error.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix unnecessary <quote>GIN indexes do not support whole-index scans</>\n      errors for unsatisfiable queries using <filename>contrib/intarray</>\n      operators (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that <filename>contrib/pgstattuple</> functions respond to cancel\n      interrupts promptly (Tatsuhito Kasahara)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make server startup deal properly with the case that\n      <function>shmget()</> returns <literal>EINVAL</> for an existing\n      shared memory segment (Tom)\n     </para>\n\n     <para>\n      This behavior has been observed on BSD-derived kernels including macOS.\n      It resulted in an entirely-misleading startup failure complaining that\n      the shared memory request size was too large.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid possible crashes in syslogger process on Windows (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Deal more robustly with incomplete time zone information in the\n      Windows registry (Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update the set of known Windows time zone names (Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2010j\n      for DST law changes in Argentina, Australian Antarctic, Bangladesh,\n      Mexico, Morocco, Pakistan, Palestine, Russia, Syria, Tunisia;\n      also historical corrections for Taiwan.\n     </para>\n\n     <para>\n      Also, add <literal>PKST</> (Pakistan Summer Time) to the default set of\n      timezone abbreviations.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-10\">\n  <title>Release 8.3.10</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2010-03-15</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.9.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.10</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n    However, if you are upgrading from a version earlier than 8.3.8,\n    see <xref linkend=\"release-8-3-8\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Add new configuration parameter <varname>ssl_renegotiation_limit</> to\n      control how often we do session key renegotiation for an SSL connection\n      (Magnus)\n     </para>\n\n     <para>\n      This can be set to zero to disable renegotiation completely, which may\n      be required if a broken SSL library is used.  In particular, some\n      vendors are shipping stopgap patches for CVE-2009-3555 that cause\n      renegotiation attempts to fail.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible deadlock during backend startup (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crashes due to not handling errors during relcache reload\n      cleanly (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash due to use of dangling pointer to a cached plan\n      (Tatsuo)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crashes when trying to recover from a failure in\n      subtransaction start (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix server memory leak associated with use of savepoints and a client\n      encoding different from server's encoding (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect WAL data emitted during end-of-recovery cleanup of a GIST\n      index page split (Yoichi Hirai)\n     </para>\n\n     <para>\n      This would result in index corruption, or even more likely an error\n      during WAL replay, if we were unlucky enough to crash during\n      end-of-recovery cleanup after having completed an incomplete GIST\n      insertion.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <function>substring()</> for <type>bit</> types treat any negative\n      length as meaning <quote>all the rest of the string</> (Tom)\n     </para>\n\n     <para>\n      The previous coding treated only -1 that way, and would produce an\n      invalid result value for other negative values, possibly leading to\n      a crash (CVE-2010-0442).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix integer-to-bit-string conversions to handle the first fractional\n      byte correctly when the output bit width is wider than the given\n      integer by something other than a multiple of 8 bits (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix some cases of pathologically slow regular expression matching (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted crashes in <type>xml</> processing caused by sloppy\n      memory management (Tom)\n     </para>\n\n     <para>\n      This is a back-patch of changes first applied in 8.4.  The 8.3 code\n      was known buggy, but the new code was sufficiently different to not\n      want to back-patch it until it had gotten some field testing.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug with trying to update a field of an element of a\n      composite-type array column (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix the <literal>STOP WAL LOCATION</> entry in backup history files to\n      report the next WAL segment's name when the end location is exactly at a\n      segment boundary (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix some more cases of temporary-file leakage (Heikki)\n     </para>\n\n     <para>\n      This corrects a problem introduced in the previous minor release.\n      One case that failed is when a plpgsql function returning set is\n      called within another function's exception handler.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve constraint exclusion processing of boolean-variable cases,\n      in particular make it possible to exclude a partition that has a\n      <quote>bool_column = false</> constraint (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      When reading <filename>pg_hba.conf</> and related files, do not treat\n      <literal>@something</> as a file inclusion request if the <literal>@</>\n      appears inside quote marks; also, never treat <literal>@</> by itself\n      as a file inclusion request (Tom)\n     </para>\n\n     <para>\n      This prevents erratic behavior if a role or database name starts with\n      <literal>@</>.  If you need to include a file whose path name\n      contains spaces, you can still do so, but you must write\n      <literal>@\"/path to/file\"</> rather than putting the quotes around\n      the whole construct.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent infinite loop on some platforms if a directory is named as\n      an inclusion target in <filename>pg_hba.conf</> and related files\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible infinite loop if <function>SSL_read</> or\n      <function>SSL_write</> fails without setting <varname>errno</> (Tom)\n     </para>\n\n     <para>\n      This is reportedly possible with some Windows versions of\n      <application>openssl</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <acronym>GSSAPI</> authentication on local connections,\n      since it requires a hostname to function correctly (Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>ecpg</> report the proper SQLSTATE if the connection\n      disappears (Michael)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>psql</>'s <literal>numericlocale</> option to not\n      format strings it shouldn't in latex and troff output formats (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>psql</> return the correct exit status (3) when\n      <literal>ON_ERROR_STOP</> and <literal>--single-transaction</> are\n      both specified and an error occurs during the implied <command>COMMIT</>\n      (Bruce)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix plpgsql failure in one case where a composite column is set to NULL\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible failure when calling PL/Perl functions from PL/PerlU\n      or vice versa (Tim Bunce)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add <literal>volatile</> markings in PL/Python to avoid possible\n      compiler-specific misbehavior (Zdenek Kotala)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure PL/Tcl initializes the Tcl interpreter fully (Tom)\n     </para>\n\n     <para>\n      The only known symptom of this oversight is that the Tcl\n      <literal>clock</> command misbehaves if using Tcl 8.5 or later.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent crash in <filename>contrib/dblink</> when too many key\n      columns are specified to a <function>dblink_build_sql_*</> function\n      (Rushabh Lathia, Joe Conway)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow zero-dimensional arrays in <filename>contrib/ltree</> operations\n      (Tom)\n     </para>\n\n     <para>\n      This case was formerly rejected as an error, but it's more convenient to\n      treat it the same as a zero-element array.  In particular this avoids\n      unnecessary failures when an <type>ltree</> operation is applied to the\n      result of <literal>ARRAY(SELECT ...)</> and the sub-select returns no\n      rows.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix assorted crashes in <filename>contrib/xml2</> caused by sloppy\n      memory management (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make building of <filename>contrib/xml2</> more robust on Windows\n      (Andrew)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race condition in Windows signal handling (Radu Ilie)\n     </para>\n\n     <para>\n      One known symptom of this bug is that rows in <structname>pg_listener</>\n      could be dropped under heavy load.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2010e\n      for DST law changes in Bangladesh, Chile, Fiji, Mexico, Paraguay, Samoa.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-9\">\n  <title>Release 8.3.9</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2009-12-14</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.8.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.9</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n    However, if you are upgrading from a version earlier than 8.3.8,\n    see <xref linkend=\"release-8-3-8\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Protect against indirect security threats caused by index functions\n      changing session-local state (Gurjeet Singh, Tom)\n     </para>\n\n     <para>\n      This change prevents allegedly-immutable index functions from possibly\n      subverting a superuser's session (CVE-2009-4136).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Reject SSL certificates containing an embedded null byte in the common\n      name (CN) field (Magnus)\n     </para>\n\n     <para>\n      This prevents unintended matching of a certificate to a server or client\n      name during SSL validation (CVE-2009-4034).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash during backend-startup-time cache initialization (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid crash on empty thesaurus dictionary (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent signals from interrupting <literal>VACUUM</> at unsafe times\n      (Alvaro)\n     </para>\n\n     <para>\n      This fix prevents a PANIC if a <literal>VACUUM FULL</> is canceled\n      after it's already committed its tuple movements, as well as transient\n      errors if a plain <literal>VACUUM</> is interrupted after having\n      truncated the table.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash due to integer overflow in hash table size\n      calculation (Tom)\n     </para>\n\n     <para>\n      This could occur with extremely large planner estimates for the size of\n      a hashjoin's result.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix very rare crash in <type>inet</>/<type>cidr</> comparisons (Chris\n      Mikkelson)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that shared tuple-level locks held by prepared transactions are\n      not ignored (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix premature drop of temporary files used for a cursor that is accessed\n      within a subtransaction (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak in syslogger process when rotating to a new CSV logfile\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix Windows permission-downgrade logic (Jesse Morris)\n     </para>\n\n     <para>\n      This fixes some cases where the database failed to start on Windows,\n      often with misleading error messages such as <quote>could not locate\n      matching postgres executable</quote>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect logic for GiST index page splits, when the split depends\n      on a non-first column of the index (Paul Ramsey)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Don't error out if recycling or removing an old WAL file fails at the\n      end of checkpoint (Heikki)\n     </para>\n\n     <para>\n      It's better to treat the problem as non-fatal and allow the checkpoint\n      to complete.  Future checkpoints will retry the removal.  Such problems\n      are not expected in normal operation, but have been seen to be\n      caused by misdesigned Windows anti-virus and backup software.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure WAL files aren't repeatedly archived on Windows (Heikki)\n     </para>\n\n     <para>\n      This is another symptom that could happen if some other process\n      interfered with deletion of a no-longer-needed file.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PAM password processing to be more robust (Tom)\n     </para>\n\n     <para>\n      The previous code is known to fail with the combination of the Linux\n      <literal>pam_krb5</> PAM module with Microsoft Active Directory as the\n      domain controller.  It might have problems elsewhere too, since it was\n      making unjustified assumptions about what arguments the PAM stack would\n      pass to it.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Raise the maximum authentication token (Kerberos ticket) size in GSSAPI\n      and SSPI authentication methods (Ian Turner)\n     </para>\n\n     <para>\n      While the old 2000-byte limit was more than enough for Unix Kerberos\n      implementations, tickets issued by Windows Domain Controllers can be\n      much larger.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Re-enable collection of access statistics for sequences (Akira Kurosawa)\n     </para>\n\n     <para>\n      This used to work but was broken in 8.3.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix processing of ownership dependencies during <literal>CREATE OR\n      REPLACE FUNCTION</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect handling of <literal>WHERE</>\n      <replaceable>x</>=<replaceable>x</> conditions (Tom)\n     </para>\n\n     <para>\n      In some cases these could get ignored as redundant, but they aren't\n      &mdash; they're equivalent to <replaceable>x</> <literal>IS NOT NULL</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make text search parser accept underscores in XML attributes (Peter)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix encoding handling in <type>xml</> binary input (Heikki)\n     </para>\n\n     <para>\n      If the XML header doesn't specify an encoding, we now assume UTF-8 by\n      default; the previous handling was inconsistent.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug with calling <literal>plperl</> from <literal>plperlu</> or vice\n      versa (Tom)\n     </para>\n\n     <para>\n      An error exit from the inner function could result in crashes due to\n      failure to re-select the correct Perl interpreter for the outer function.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix session-lifespan memory leak when a PL/Perl function is redefined\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that Perl arrays are properly converted to\n      <productname>PostgreSQL</> arrays when returned by a set-returning\n      PL/Perl function (Andrew Dunstan, Abhijit Menon-Sen)\n     </para>\n\n     <para>\n      This worked correctly already for non-set-returning functions.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix rare crash in exception processing in PL/Python (Peter)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      In <filename>contrib/pg_standby</>, disable triggering failover with a\n      signal on Windows (Fujii Masao)\n     </para>\n\n     <para>\n      This never did anything useful, because Windows doesn't have Unix-style\n      signals, but recent changes made it actually crash.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure <application>psql</>'s flex module is compiled with the correct\n      system header definitions (Tom)\n     </para>\n\n     <para>\n      This fixes build failures on platforms where\n      <literal>--enable-largefile</> causes incompatible changes in the\n      generated code.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make the postmaster ignore any <literal>application_name</> parameter in\n      connection request packets, to improve compatibility with future libpq\n      versions (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update the timezone abbreviation files to match current reality (Joachim\n      Wieland)\n     </para>\n\n     <para>\n      This includes adding <literal>IDT</> and <literal>SGT</> to the default\n      timezone abbreviation set.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2009s\n      for DST law changes in Antarctica, Argentina, Bangladesh, Fiji,\n      Novokuznetsk, Pakistan, Palestine, Samoa, Syria; also historical\n      corrections for Hong Kong.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-8\">\n  <title>Release 8.3.8</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2009-09-09</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.7.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.8</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n    However, if you have any hash indexes on <type>interval</> columns,\n    you must <command>REINDEX</> them after updating to 8.3.8.\n    Also, if you are upgrading from a version earlier than 8.3.5,\n    see <xref linkend=\"release-8-3-5\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix Windows shared-memory allocation code (Tsutomu Yamada, Magnus)\n     </para>\n\n     <para>\n      This bug led to the often-reported <quote>could not reattach\n      to shared memory</> error message.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Force WAL segment switch during <function>pg_start_backup()</>\n      (Heikki)\n     </para>\n\n     <para>\n      This avoids corner cases that could render a base backup unusable.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <command>RESET ROLE</> and <command>RESET SESSION\n      AUTHORIZATION</> inside security-definer functions (Tom, Heikki)\n     </para>\n\n     <para>\n      This covers a case that was missed in the previous patch that\n      disallowed <command>SET ROLE</> and <command>SET SESSION\n      AUTHORIZATION</> inside security-definer functions.\n      (See CVE-2007-6600)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <command>LOAD</> of an already-loaded loadable module\n      into a no-op (Tom)\n     </para>\n\n     <para>\n      Formerly, <command>LOAD</> would attempt to unload and re-load the\n      module, but this is unsafe and not all that useful.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow empty passwords during LDAP authentication (Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix handling of sub-SELECTs appearing in the arguments of\n      an outer-level aggregate function (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bugs associated with fetching a whole-row value from the\n      output of a Sort or Materialize plan node (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent <varname>synchronize_seqscans</> from changing the results of\n      scrollable and <literal>WITH HOLD</> cursors (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Revert planner change that disabled partial-index and constraint\n      exclusion optimizations when there were more than 100 clauses in\n      an AND or OR list (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix hash calculation for data type <type>interval</> (Tom)\n     </para>\n\n     <para>\n      This corrects wrong results for hash joins on interval values.\n      It also changes the contents of hash indexes on interval columns.\n      If you have any such indexes, you must <command>REINDEX</> them\n      after updating.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Treat <function>to_char(..., 'TH')</> as an uppercase ordinal\n      suffix with <literal>'HH'</>/<literal>'HH12'</> (Heikki)\n     </para>\n\n     <para>\n      It was previously handled as <literal>'th'</> (lowercase).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix overflow for <literal>INTERVAL '<replaceable>x</> ms'</literal>\n      when <replaceable>x</> is more than 2 million and integer\n      datetimes are in use (Alex Hunsaker)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix calculation of distance between a point and a line segment (Tom)\n     </para>\n\n     <para>\n      This led to incorrect results from a number of geometric operators.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <type>money</> data type to work in locales where currency\n      amounts have no fractional digits, e.g. Japan (Itagaki Takahiro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <literal>LIKE</> for case where pattern contains <literal>%_</>\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Properly round datetime input like\n      <literal>00:12:57.9999999999999999999999999999</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leaks in XML operations (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix poor choice of page split point in GiST R-tree operator classes\n      (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that a <quote>fast shutdown</> request will forcibly terminate\n      open sessions, even if a <quote>smart shutdown</> was already in progress\n      (Fujii Masao)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid performance degradation in bulk inserts into GIN indexes\n      when the input values are (nearly) in sorted order (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Correctly enforce NOT NULL domain constraints in some contexts in\n      PL/pgSQL (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix portability issues in plperl initialization (Andrew Dunstan)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_ctl</> to not go into an infinite loop if\n      <filename>postgresql.conf</> is empty (Jeff Davis)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <application>pg_dump</>'s efficiency when there are\n      many large objects (Tamas Vincze)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use <literal>SIGUSR1</>, not <literal>SIGQUIT</>, as the\n      failover signal for <application>pg_standby</> (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>pg_standby</>'s <literal>maxretries</> option\n      behave as documented (Fujii Masao)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <filename>contrib/hstore</> throw an error when a key or\n      value is too long to fit in its data structure, rather than\n      silently truncating it (Andrew Gierth)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/xml2</>'s <function>xslt_process()</> to\n      properly handle the maximum number of parameters (twenty) (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve robustness of <application>libpq</>'s code to recover\n      from errors during <command>COPY FROM STDIN</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid including conflicting readline and editline header files\n      when both libraries are installed (Zdenek Kotala)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2009l\n      for DST law changes in Bangladesh, Egypt, Jordan, Pakistan,\n      Argentina/San_Luis, Cuba, Jordan (historical correction only),\n      Mauritius, Morocco, Palestine, Syria, Tunisia.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-7\">\n  <title>Release 8.3.7</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2009-03-16</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.6.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.7</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n    However, if you are upgrading from a version earlier than 8.3.5,\n    see <xref linkend=\"release-8-3-5\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Prevent error recursion crashes when encoding conversion fails (Tom)\n     </para>\n\n     <para>\n      This change extends fixes made in the last two minor releases for\n      related failure scenarios.  The previous fixes were narrowly tailored\n      for the original problem reports, but we have now recognized that\n      <emphasis>any</> error thrown by an encoding conversion function could\n      potentially lead to infinite recursion while trying to report the\n      error.  The solution therefore is to disable translation and encoding\n      conversion and report the plain-ASCII form of any error message,\n      if we find we have gotten into a recursive error reporting situation.\n      (CVE-2009-0922)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <command>CREATE CONVERSION</> with the wrong encodings\n      for the specified conversion function (Heikki)\n     </para>\n\n     <para>\n      This prevents one possible scenario for encoding conversion failure.\n      The previous change is a backstop to guard against other kinds of\n      failures in the same area.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>xpath()</> to not modify the path expression unless\n      necessary, and to make a saner attempt at it when necessary (Andrew)\n     </para>\n\n     <para>\n      The SQL standard suggests that <function>xpath</> should work on data\n      that is a document fragment, but <application>libxml</> doesn't support\n      that, and indeed it's not clear that this is sensible according to the\n      XPath standard.  <function>xpath</> attempted to work around this\n      mismatch by modifying both the data and the path expression, but the\n      modification was buggy and could cause valid searches to fail.  Now,\n      <function>xpath</> checks whether the data is in fact a well-formed\n      document, and if so invokes <application>libxml</> with no change to the\n      data or path expression.  Otherwise, a different modification method\n      that is somewhat less likely to fail is used.\n     </para>\n\n     <note>\n      <para>\n       The new modification method is still not 100% satisfactory, and it\n       seems likely that no real solution is possible.  This patch should\n       therefore be viewed as a band-aid to keep from breaking existing\n       applications unnecessarily.  It is likely that\n       <productname>PostgreSQL</> 8.4 will simply reject use of\n       <function>xpath</> on data that is not a well-formed document.\n      </para>\n     </note>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix core dump when <function>to_char()</> is given format codes that\n      are inappropriate for the type of the data argument (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible failure in text search when C locale is used with\n      a multi-byte encoding (Teodor)\n     </para>\n\n     <para>\n      Crashes were possible on platforms where <type>wchar_t</> is narrower\n      than <type>int</>; Windows in particular.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix extreme inefficiency in text search parser's handling of an\n      email-like string containing multiple <literal>@</> characters (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner problem with sub-<command>SELECT</> in the output list\n      of a larger subquery (Tom)\n     </para>\n\n     <para>\n      The known symptom of this bug is a <quote>failed to locate grouping\n      columns</> error that is dependent on the datatype involved;\n      but there could be other issues as well.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix decompilation of <literal>CASE WHEN</> with an implicit coercion\n      (Tom)\n     </para>\n\n     <para>\n      This mistake could lead to Assert failures in an Assert-enabled build,\n      or an <quote>unexpected CASE WHEN clause</> error message in other\n      cases, when trying to examine or dump a view.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible misassignment of the owner of a TOAST table's rowtype (Tom)\n     </para>\n\n     <para>\n      If <command>CLUSTER</> or a rewriting variant of <command>ALTER TABLE</>\n      were executed by someone other than the table owner, the\n      <structname>pg_type</> entry for the table's TOAST table would end up\n      marked as owned by that someone.  This caused no immediate problems,\n      since the permissions on the TOAST rowtype aren't examined by any\n      ordinary database operation.  However, it could lead to unexpected\n      failures if one later tried to drop the role that issued the command\n      (in 8.1 or 8.2), or <quote>owner of data type appears to be invalid</>\n      warnings from <application>pg_dump</> after having done so (in 8.3).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Change <command>UNLISTEN</> to exit quickly if the current session has\n      never executed any <command>LISTEN</> command (Tom)\n     </para>\n\n     <para>\n      Most of the time this is not a particularly useful optimization, but\n      since <command>DISCARD ALL</> invokes <command>UNLISTEN</>, the previous\n      coding caused a substantial performance problem for applications that\n      made heavy use of <command>DISCARD ALL</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/pgSQL to not treat <literal>INTO</> after <command>INSERT</> as\n      an INTO-variables clause anywhere in the string, not only at the start;\n      in particular, don't fail for <command>INSERT INTO</> within\n      <command>CREATE RULE</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Clean up PL/pgSQL error status variables fully at block exit\n      (Ashesh Vashi and Dave Page)\n     </para>\n\n     <para>\n      This is not a problem for PL/pgSQL itself, but the omission could cause\n      the PL/pgSQL Debugger to crash while examining the state of a function.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Retry failed calls to <function>CallNamedPipe()</> on Windows\n      (Steve Marshall, Magnus)\n     </para>\n\n     <para>\n      It appears that this function can sometimes fail transiently;\n      we previously treated any failure as a hard error, which could\n      confuse <command>LISTEN</>/<command>NOTIFY</> as well as other\n      operations.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add <literal>MUST</> (Mauritius Island Summer Time) to the default list\n      of known timezone abbreviations (Xavier Bugaud)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-6\">\n  <title>Release 8.3.6</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2009-02-02</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.5.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.6</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n    However, if you are upgrading from a version earlier than 8.3.5,\n    see <xref linkend=\"release-8-3-5\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Make <command>DISCARD ALL</> release advisory locks, in addition\n      to everything it already did (Tom)\n     </para>\n\n     <para>\n      This was decided to be the most appropriate behavior.  This could\n      affect existing applications, however.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix whole-index GiST scans to work correctly (Teodor)\n     </para>\n\n     <para>\n      This error could cause rows to be lost if a table is clustered\n      on a GiST index.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix crash of <literal>xmlconcat(NULL)</> (Peter)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash in <literal>ispell</> dictionary if high-bit-set\n      characters are used as flags (Teodor)\n     </para>\n\n     <para>\n      This is known to be done by one widely available Norwegian dictionary,\n      and the same condition may exist in others.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix misordering of <application>pg_dump</> output for composite types\n      (Tom)\n     </para>\n\n     <para>\n      The most likely problem was for user-defined operator classes to\n      be dumped after indexes or views that needed them.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve handling of URLs in <function>headline()</> function (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve handling of overlength headlines in <function>headline()</>\n      function (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent possible Assert failure or misconversion if an encoding\n      conversion is created with the wrong conversion function for the\n      specified pair of encodings (Tom, Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible Assert failure if a statement executed in PL/pgSQL is\n      rewritten into another kind of statement, for example if an\n      <command>INSERT</> is rewritten into an <command>UPDATE</> (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that a snapshot is available to datatype input functions (Tom)\n     </para>\n\n     <para>\n      This primarily affects domains that are declared with <literal>CHECK</>\n      constraints involving user-defined stable or immutable functions.  Such\n      functions typically fail if no snapshot has been set.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make it safer for SPI-using functions to be used within datatype I/O;\n      in particular, to be used in domain check constraints (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid unnecessary locking of small tables in <command>VACUUM</>\n      (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix a problem that sometimes kept <command>ALTER TABLE ENABLE/DISABLE\n      RULE</> from being recognized by active sessions (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix a problem that made <literal>UPDATE RETURNING tableoid</>\n      return zero instead of the correct OID (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow functions declared as taking <type>ANYARRAY</> to work on\n      the <structname>pg_statistic</> columns of that type (Tom)\n     </para>\n\n     <para>\n      This used to work, but was unintentionally broken in 8.3.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner misestimation of selectivity when transitive equality\n      is applied to an outer-join clause (Tom)\n     </para>\n\n     <para>\n      This could result in bad plans for queries like\n      <literal>... from a left join b on a.a1 = b.b1 where a.a1 = 42 ...</>\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve optimizer's handling of long <literal>IN</> lists (Tom)\n     </para>\n\n     <para>\n      This change avoids wasting large amounts of time on such lists\n      when constraint exclusion is enabled.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent synchronous scan during GIN index build (Tom)\n     </para>\n\n     <para>\n      Because GIN is optimized for inserting tuples in increasing TID order,\n      choosing to use a synchronous scan could slow the build by a factor of\n      three or more.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure that the contents of a holdable cursor don't depend on the\n      contents of TOAST tables (Tom)\n     </para>\n\n     <para>\n      Previously, large field values in a cursor result might be represented\n      as TOAST pointers, which would fail if the referenced table got dropped\n      before the cursor is read, or if the large value is deleted and then\n      vacuumed away.  This cannot happen with an ordinary cursor,\n      but it could with a cursor that is held past its creating transaction.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak when a set-returning function is terminated without\n      reading its whole result (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix encoding conversion problems in XML functions when the database\n      encoding isn't UTF-8 (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/dblink</>'s\n      <function>dblink_get_result(text,bool)</> function (Joe)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible garbage output from <filename>contrib/sslinfo</> functions\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect behavior of <filename>contrib/tsearch2</> compatibility\n      trigger when it's fired more than once in a command (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible mis-signaling in autovacuum (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Support running as a service on Windows 7 beta (Dave and Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</>'s handling of varchar structs (Michael)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>configure</> script to properly report failure when\n      unable to obtain linkage information for PL/Perl (Andrew)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make all documentation reference <literal>pgsql-bugs</> and/or\n      <literal>pgsql-hackers</> as appropriate, instead of the\n      now-decommissioned <literal>pgsql-ports</> and <literal>pgsql-patches</>\n      mailing lists (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2009a (for\n      Kathmandu and historical DST corrections in Switzerland, Cuba)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-5\">\n  <title>Release 8.3.5</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2008-11-03</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.4.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.5</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n    However, if you are upgrading from a version earlier than 8.3.1,\n    see <xref linkend=\"release-8-3-1\">.  Also, if you were running a previous\n    8.3.X release, it is recommended to <command>REINDEX</> all GiST\n    indexes after the upgrade.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix GiST index corruption due to marking the wrong index entry\n      <quote>dead</> after a deletion (Teodor)\n     </para>\n\n     <para>\n      This would result in index searches failing to find rows they\n      should have found.  Corrupted indexes can be fixed with\n      <command>REINDEX</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix backend crash when the client encoding cannot represent a localized\n      error message (Tom)\n     </para>\n\n     <para>\n      We have addressed similar issues before, but it would still fail if\n      the <quote>character has no equivalent</> message itself couldn't\n      be converted.  The fix is to disable localization and send the plain\n      ASCII error message when we detect such a situation.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash in <type>bytea</>-to-XML mapping (Michael McMaster)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash when deeply nested functions are invoked from\n      a trigger (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve optimization of <replaceable>expression</> <literal>IN</>\n      (<replaceable>expression-list</>) queries (Tom, per an idea from Robert\n      Haas)\n     </para>\n\n     <para>\n      Cases in which there are query variables on the right-hand side had been\n      handled less efficiently in 8.2.x and 8.3.x than in prior versions.\n      The fix restores 8.1 behavior for such cases.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix mis-expansion of rule queries when a sub-<literal>SELECT</> appears\n      in a function call in <literal>FROM</>,  a multi-row <literal>VALUES</>\n      list, or a <literal>RETURNING</> list (Tom)\n     </para>\n\n     <para>\n      The usual symptom of this problem is an <quote>unrecognized node type</>\n      error.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix Assert failure during rescan of an <literal>IS NULL</>\n      search of a GiST index (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leak during rescan of a hashed aggregation plan (Neil)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure an error is reported when a newly-defined PL/pgSQL trigger\n      function is invoked as a normal function (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Force a checkpoint before <command>CREATE DATABASE</> starts to copy\n      files (Heikki)\n     </para>\n\n     <para>\n      This prevents a possible failure if files had recently been deleted\n      in the source database.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent possible collision of <structfield>relfilenode</> numbers\n      when moving a table to another tablespace with <command>ALTER SET\n      TABLESPACE</> (Heikki)\n     </para>\n\n     <para>\n      The command tried to re-use the existing filename, instead of\n      picking one that is known unused in the destination directory.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect text search headline generation when single query\n      item matches first word of text (Sushant Sinha)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix improper display of fractional seconds in interval values when\n      using a non-ISO datestyle in an <option>--enable-integer-datetimes</>\n      build (Ron Mayer)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <literal>ILIKE</> compare characters case-insensitively\n      even when they're escaped (Andrew)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure <command>DISCARD</> is handled properly by statement logging (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect logging of last-completed-transaction time during\n      PITR recovery (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure <function>SPI_getvalue</> and <function>SPI_getbinval</>\n      behave correctly when the passed tuple and tuple descriptor have\n      different numbers of columns (Tom)\n     </para>\n\n     <para>\n      This situation is normal when a table has had columns added or removed,\n      but these two functions didn't handle it properly.\n      The only likely consequence is an incorrect error indication.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Mark <varname>SessionReplicationRole</> as <literal>PGDLLIMPORT</>\n      so it can be used by <application>Slony</> on Windows (Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix small memory leak when using <application>libpq</>'s\n      <literal>gsslib</> parameter (Magnus)\n     </para>\n\n     <para>\n      The space used by the parameter string was not freed at connection\n      close.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure <application>libgssapi</> is linked into <application>libpq</>\n      if needed (Markus Schaaf)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</>'s parsing of <command>CREATE ROLE</> (Michael)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix recent breakage of <literal>pg_ctl restart</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure <filename>pg_control</> is opened in binary mode\n      (Itagaki Takahiro)\n     </para>\n\n     <para>\n      <application>pg_controldata</> and <application>pg_resetxlog</>\n      did this incorrectly, and so could fail on Windows.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2008i (for\n      DST law changes in Argentina, Brazil, Mauritius, Syria)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-4\">\n  <title>Release 8.3.4</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2008-09-22</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.3.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.4</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n    However, if you are upgrading from a version earlier than 8.3.1,\n    see <xref linkend=\"release-8-3-1\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix bug in btree WAL recovery code (Heikki)\n     </para>\n\n     <para>\n      Recovery failed if the WAL ended partway through a page split operation.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix potential use of wrong cutoff XID for HOT page pruning (Alvaro)\n     </para>\n\n     <para>\n      This error created a risk of corruption in system\n      catalogs that are consulted by <command>VACUUM</>: dead tuple versions\n      might be removed too soon.  The impact of this on actual database\n      operations would be minimal, since the system doesn't follow MVCC\n      rules while examining catalogs, but it might result in transiently\n      wrong output from <application>pg_dump</> or other client programs.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix potential miscalculation of <structfield>datfrozenxid</> (Alvaro)\n     </para>\n\n     <para>\n      This error may explain some recent reports of failure to remove old\n      <structname>pg_clog</> data.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect HOT updates after <structname>pg_class</> is reindexed\n      (Tom)\n     </para>\n\n     <para>\n      Corruption of <structname>pg_class</> could occur if <literal>REINDEX\n      TABLE pg_class</> was followed in the same session by an <literal>ALTER\n      TABLE RENAME</> or <literal>ALTER TABLE SET SCHEMA</> command.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix missed <quote>combo cid</> case (Karl Schnaitter)\n     </para>\n\n     <para>\n      This error made rows incorrectly invisible to a transaction in which they\n      had been deleted by multiple subtransactions that all aborted.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent autovacuum from crashing if the table it's currently\n      checking is deleted at just the wrong time (Alvaro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Widen local lock counters from 32 to 64 bits (Tom)\n     </para>\n\n     <para>\n      This responds to reports that the counters could overflow in\n      sufficiently long transactions, leading to unexpected <quote>lock is\n      already held</> errors.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible duplicate output of tuples during a GiST index scan (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Regenerate foreign key checking queries from scratch when either\n      table is modified (Tom)\n     </para>\n\n     <para>\n      Previously, 8.3 would attempt to replan the query, but would work from\n      previously generated query text.  This led to failures if a\n      table or column was renamed.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix missed permissions checks when a view contains a simple\n      <literal>UNION ALL</> construct (Heikki)\n     </para>\n\n     <para>\n      Permissions for the referenced tables were checked properly, but not\n      permissions for the view itself.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add checks in executor startup to ensure that the tuples produced by an\n      <command>INSERT</> or <command>UPDATE</> will match the target table's\n      current rowtype (Tom)\n     </para>\n\n     <para>\n      This situation is believed to be impossible in 8.3, but it can happen in\n      prior releases, so a check seems prudent.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible repeated drops during <command>DROP OWNED</> (Tom)\n     </para>\n\n     <para>\n      This would typically result in strange errors such as <quote>cache\n      lookup failed for relation NNN</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix several memory leaks in XML operations (Kris Jurka, Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>xmlserialize()</> to raise error properly for\n      unacceptable target data type (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix a couple of places that mis-handled multibyte characters in text\n      search configuration file parsing (Tom)\n     </para>\n\n     <para>\n      Certain characters occurring in configuration files would always cause\n      <quote>invalid byte sequence for encoding</> failures.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Provide file name and line number location for all errors reported\n      in text search configuration files (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <literal>AT TIME ZONE</> to first try to interpret its timezone\n      argument as a timezone abbreviation, and only try it as a full timezone\n      name if that fails, rather than the other way around as formerly (Tom)\n     </para>\n\n     <para>\n      The timestamp input functions have always resolved ambiguous zone names\n      in this order.  Making <literal>AT TIME ZONE</> do so as well improves\n      consistency, and fixes a compatibility bug introduced in 8.1:\n      in ambiguous cases we now behave the same as 8.0 and before did,\n      since in the older versions <literal>AT TIME ZONE</> accepted\n      <emphasis>only</> abbreviations.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix datetime input functions to correctly detect integer overflow when\n      running on a 64-bit platform (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent integer overflows during units conversion when displaying a\n      configuration parameter that has units (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve performance of writing very long log messages to syslog (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow spaces in the suffix part of an LDAP URL in\n      <filename>pg_hba.conf</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix bug in backwards scanning of a cursor on a <literal>SELECT DISTINCT\n      ON</> query (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner bug that could improperly push down <literal>IS NULL</>\n      tests below an outer join (Tom)\n     </para>\n\n     <para>\n      This was triggered by occurrence of <literal>IS NULL</> tests for\n      the same relation in all arms of an upper <literal>OR</> clause.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner bug with nested sub-select expressions (Tom)\n     </para>\n\n     <para>\n      If the outer sub-select has no direct dependency on the parent query,\n      but the inner one does, the outer value might not get recalculated\n      for new parent query rows.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner to estimate that <literal>GROUP BY</> expressions yielding\n      boolean results always result in two groups, regardless of the\n      expressions' contents (Tom)\n     </para>\n\n     <para>\n      This is very substantially more accurate than the regular <literal>GROUP\n      BY</> estimate for certain boolean tests like <replaceable>col</>\n      <literal>IS NULL</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/pgSQL to not fail when a <literal>FOR</> loop's target variable\n      is a record containing composite-type fields (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix PL/Tcl to behave correctly with Tcl 8.5, and to be more careful\n      about the encoding of data sent to or from Tcl (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve performance of <function>PQescapeBytea()</> (Rudolf Leitgeb)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      On Windows, work around a Microsoft bug by preventing\n      <application>libpq</> from trying to send more than 64kB per system call\n      (Magnus)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</> to handle variables properly in <command>SET</>\n      commands (Michael)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <application>pg_dump</> and <application>pg_restore</>'s\n      error reporting after failure to send a SQL command (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_ctl</> to properly preserve postmaster\n      command-line arguments across a <literal>restart</> (Bruce)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix erroneous WAL file cutoff point calculation in\n      <application>pg_standby</> (Simon)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2008f (for\n      DST law changes in Argentina, Bahamas, Brazil, Mauritius, Morocco,\n      Pakistan, Palestine, and Paraguay)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-3\">\n  <title>Release 8.3.3</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2008-06-12</para>\n  </formalpara>\n\n  <para>\n   This release contains one serious and one minor bug fix over 8.3.2.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.3</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n    However, if you are upgrading from a version earlier than 8.3.1,\n    see <xref linkend=\"release-8-3-1\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Make <function>pg_get_ruledef()</> parenthesize negative constants (Tom)\n     </para>\n\n     <para>\n      Before this fix, a negative constant in a view or rule might be dumped\n      as, say, <literal>-42::integer</>, which is subtly incorrect: it should\n      be <literal>(-42)::integer</> due to operator precedence rules.\n      Usually this would make little difference, but it could interact with\n      another recent patch to cause\n      <productname>PostgreSQL</> to reject what had been a valid\n      <command>SELECT DISTINCT</> view query.  Since this could result in\n      <application>pg_dump</> output failing to reload, it is being treated\n      as a high-priority fix.  The only released versions in which dump\n      output is actually incorrect are 8.3.1 and 8.2.7.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <command>ALTER AGGREGATE ... OWNER TO</> update\n      <structname>pg_shdepend</> (Tom)\n     </para>\n\n     <para>\n      This oversight could lead to problems if the aggregate was later\n      involved in a <command>DROP OWNED</> or <command>REASSIGN OWNED</>\n      operation.\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-2\">\n  <title>Release 8.3.2</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>never released</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.1.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.2</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n    However, if you are upgrading from a version earlier than 8.3.1,\n    see <xref linkend=\"release-8-3-1\">.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix <literal>ERRORDATA_STACK_SIZE exceeded</literal> crash that\n      occurred on Windows when using UTF-8 database encoding and a different\n      client encoding (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect archive truncation point calculation for the\n      <literal>%r</> macro in <varname>restore_command</> parameters\n      (Simon)\n     </para>\n\n     <para>\n      This could lead to data loss if a warm-standby script relied on\n      <literal>%r</> to decide when to throw away WAL segment files.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>ALTER TABLE ADD COLUMN ... PRIMARY KEY</> so that the new\n      column is correctly checked to see if it's been initialized to all\n      non-nulls (Brendan Jurd)\n     </para>\n\n     <para>\n      Previous versions neglected to check this requirement at all.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <command>REASSIGN OWNED</> so that it works on procedural\n      languages too (Alvaro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix problems with <command>SELECT FOR UPDATE/SHARE</> occurring as a\n      subquery in a query with a non-<command>SELECT</> top-level operation\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible <command>CREATE TABLE</> failure when inheriting the\n      <quote>same</> constraint from multiple parent relations that\n      inherited that constraint from a common ancestor (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>pg_get_ruledef()</> to show the alias, if any, attached\n      to the target table of an <command>UPDATE</> or <command>DELETE</>\n      (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Restore the pre-8.3 behavior that an out-of-range block number in a\n      TID being used in a TidScan plan results in silently not matching any\n      rows (Tom)\n     </para>\n\n     <para>\n      8.3.0 and 8.3.1 threw an error instead.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix GIN bug that could result in a <literal>too many LWLocks\n      taken</literal> failure (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix broken GiST comparison function for <type>tsquery</> (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <function>tsvector_update_trigger()</> and <function>ts_stat()</>\n      to accept domains over the types they expect to work with (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix failure to support enum data types as foreign keys (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid possible crash when decompressing corrupted data\n      (Zdenek Kotala)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix race conditions between delayed unlinks and <command>DROP\n      DATABASE</> (Heikki)\n     </para>\n\n     <para>\n      In the worst case this could result in deleting a newly created table\n      in a new database that happened to get the same OID as the\n      recently-dropped one; but of course that is an extremely\n      low-probability scenario.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Repair two places where SIGTERM exit of a backend could leave corrupted\n      state in shared memory (Tom)\n     </para>\n\n     <para>\n      Neither case is very important if SIGTERM is used to shut down the\n      whole database cluster together, but there was a problem if someone\n      tried to SIGTERM individual backends.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crash due to incorrect plan generated for an\n      <literal><replaceable>x</> IN (SELECT <replaceable>y</>\n      FROM ...)</literal> clause when <replaceable>x</> and <replaceable>y</>\n      have different data types; and make sure the behavior is semantically\n      correct when the conversion from <replaceable>y</>'s type to\n      <replaceable>x</>'s type is lossy (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix oversight that prevented the planner from substituting known Param\n      values as if they were constants (Tom)\n     </para>\n\n     <para>\n      This mistake partially disabled optimization of unnamed\n      extended-Query statements in 8.3.0 and 8.3.1: in particular the\n      LIKE-to-indexscan optimization would never be applied if the LIKE\n      pattern was passed as a parameter, and constraint exclusion\n      depending on a parameter value didn't work either.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner failure when an indexable <function>MIN</> or\n      <function>MAX</> aggregate is used with <literal>DISTINCT</> or\n      <literal>ORDER BY</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix planner to ensure it never uses a <quote>physical tlist</> for a\n      plan node that is feeding a Sort node (Tom)\n     </para>\n\n     <para>\n      This led to the sort having to push around more data than it really\n      needed to, since unused column values were included in the sorted\n      data.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid unnecessary copying of query strings (Tom)\n     </para>\n\n     <para>\n      This fixes a performance problem introduced in 8.3.0 when a very large\n      number of commands are submitted as a single query string.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <function>TransactionIdIsCurrentTransactionId()</> use binary\n      search instead of linear search when checking child-transaction XIDs\n      (Heikki)\n     </para>\n\n     <para>\n      This fixes some cases in which 8.3.0 was significantly\n      slower than earlier releases.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix conversions between ISO-8859-5 and other encodings to handle\n      Cyrillic <quote>Yo</> characters (<literal>e</> and <literal>E</> with\n      two dots) (Sergey Burladyan)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix several datatype input functions, notably <function>array_in()</>,\n      that were allowing unused bytes in their results to contain\n      uninitialized, unpredictable values (Tom)\n     </para>\n\n     <para>\n      This could lead to failures in which two apparently identical literal\n      values were not seen as equal, resulting in the parser complaining\n      about unmatched <literal>ORDER BY</> and <literal>DISTINCT</>\n      expressions.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix a corner case in regular-expression substring matching\n      (<literal>substring(<replaceable>string</> from\n      <replaceable>pattern</>)</literal>) (Tom)\n     </para>\n\n     <para>\n      The problem occurs when there is a match to the pattern overall but\n      the user has specified a parenthesized subexpression and that\n      subexpression hasn't got a match.  An example is\n      <literal>substring('foo' from 'foo(bar)?')</>.\n      This should return NULL, since <literal>(bar)</> isn't matched, but\n      it was mistakenly returning the whole-pattern match instead (ie,\n      <literal>foo</>).\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Prevent cancellation of an auto-vacuum that was launched to prevent\n      XID wraparound (Alvaro)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Improve <command>ANALYZE</>'s handling of in-doubt tuples (those\n      inserted or deleted by a not-yet-committed transaction) so that the\n      counts it reports to the stats collector are more likely to be correct\n      (Pavan Deolasee)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>initdb</> to reject a relative path for its\n      <literal>--xlogdir</> (<literal>-X</>) option (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <application>psql</> print tab characters as an appropriate\n      number of spaces, rather than <literal>\\x09</literal> as was done in\n      8.3.0 and 8.3.1 (Bruce)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2008c (for\n      DST law changes in Morocco, Iraq, Choibalsan, Pakistan, Syria, Cuba, and\n      Argentina/San_Luis)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add <function>ECPGget_PGconn()</> function to\n      <application>ecpglib</> (Michael)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect result from <application>ecpg</>'s\n      <function>PGTYPEStimestamp_sub()</> function (Michael)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix handling of continuation line markers in <application>ecpg</>\n      (Michael)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible crashes in <filename>contrib/cube</> functions (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix core dump in <filename>contrib/xml2</>'s\n      <function>xpath_table()</> function when the input query returns a\n      NULL value (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <filename>contrib/xml2</>'s makefile to not override\n      <literal>CFLAGS</>, and make it auto-configure properly for\n      <application>libxslt</> present or not (Tom)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3-1\">\n  <title>Release 8.3.1</title>\n\n  <formalpara>\n  <title>Release date:</title>\n  <para>2008-03-17</para>\n  </formalpara>\n\n  <para>\n   This release contains a variety of fixes from 8.3.0.\n   For information about new features in the 8.3 major release, see\n   <xref linkend=\"release-8-3\">.\n  </para>\n\n  <sect2>\n   <title>Migration to Version 8.3.1</title>\n\n   <para>\n    A dump/restore is not required for those running 8.3.X.\n    However, you might need to <command>REINDEX</> indexes on textual\n    columns after updating, if you are affected by the Windows locale\n    issue described below.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Fix character string comparison for Windows locales that consider\n      different character combinations as equal (Tom)\n     </para>\n\n     <para>\n      This fix applies only on Windows and only when using UTF-8\n      database encoding.  The same fix was made for all other cases\n      over two years ago, but Windows with UTF-8 uses a separate code\n      path that was not updated.  If you are using a locale that\n      considers some non-identical strings as equal, you may need to\n      <command>REINDEX</> to fix existing indexes on textual columns.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Repair corner-case bugs in <command>VACUUM FULL</> (Tom)\n     </para>\n\n     <para>\n      A potential deadlock between concurrent <command>VACUUM FULL</>\n      operations on different system catalogs was introduced in 8.2.\n      This has now been corrected.  8.3 made this worse because the\n      deadlock could occur within a critical code section, making it\n      a PANIC rather than just ERROR condition.\n     </para>\n\n     <para>\n      Also, a <command>VACUUM FULL</> that failed partway through\n      vacuuming a system catalog could result in cache corruption in\n      concurrent database sessions.\n     </para>\n\n     <para>\n      Another <command>VACUUM FULL</> bug introduced in 8.3 could\n      result in a crash or out-of-memory report when dealing with\n      pages containing no live tuples.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix misbehavior of foreign key checks involving <type>character</>\n      or <type>bit</> columns (Tom)\n     </para>\n\n     <para>\n      If the referencing column were of a different but compatible type\n      (for instance <type>varchar</>), the constraint was enforced incorrectly.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid needless deadlock failures in no-op foreign-key checks (Stephan\n      Szabo, Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible core dump when re-planning a prepared query (Tom)\n     </para>\n\n     <para>\n      This bug affected only protocol-level prepare operations, not\n      SQL <command>PREPARE</>, and so tended to be seen only with\n      JDBC, DBI, and other client-side drivers that use prepared\n      statements heavily.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix possible failure when re-planning a query that calls an SPI-using\n      function (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix failure in row-wise comparisons involving columns of different\n      datatypes (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix longstanding <command>LISTEN</>/<command>NOTIFY</>\n      race condition (Tom)\n     </para>\n\n     <para>\n      In rare cases a session that had just executed a\n      <command>LISTEN</> might not get a notification, even though\n      one would be expected because the concurrent transaction executing\n      <command>NOTIFY</> was observed to commit later.\n     </para>\n\n     <para>\n      A side effect of the fix is that a transaction that has executed\n      a not-yet-committed <command>LISTEN</> command will not see any\n      row in <structname>pg_listener</> for the <command>LISTEN</>,\n      should it choose to look; formerly it would have.  This behavior\n      was never documented one way or the other, but it is possible that\n      some applications depend on the old behavior.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow <command>LISTEN</> and <command>UNLISTEN</> within a\n      prepared transaction (Tom)\n     </para>\n\n     <para>\n      This was formerly allowed but trying to do it had various unpleasant\n      consequences, notably that the originating backend could not exit\n      as long as an <command>UNLISTEN</> remained uncommitted.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disallow dropping a temporary table within a\n      prepared transaction (Heikki)\n     </para>\n\n     <para>\n      This was correctly disallowed by 8.1, but the check was inadvertently\n      broken in 8.2 and 8.3.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix rare crash when an error occurs during a query using a hash index\n      (Heikki)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect comparison of <type>tsquery</> values (Teodor)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix incorrect behavior of <literal>LIKE</> with non-ASCII characters\n      in single-byte encodings (Rolf Jentsch)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Disable <function>xmlvalidate</> (Tom)\n     </para>\n\n     <para>\n      This function should have been removed before 8.3 release, but\n      was inadvertently left in the source code.  It poses a small\n      security risk since unprivileged users could use it to read the\n      first few characters of any file accessible to the server.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix memory leaks in certain usages of set-returning functions (Neil)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Make <function>encode(<replaceable>bytea</>, 'escape')</> convert all\n      high-bit-set byte values into <literal>\\</><replaceable>nnn</> octal\n      escape sequences (Tom)\n     </para>\n\n     <para>\n      This is necessary to avoid encoding problems when the database\n      encoding is multi-byte.  This change could pose compatibility issues\n      for applications that are expecting specific results from\n      <function>encode</>.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix input of datetime values for February 29 in years BC (Tom)\n     </para>\n\n     <para>\n      The former coding was mistaken about which years were leap years.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <quote>unrecognized node type</> error in some variants of\n      <command>ALTER OWNER</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Avoid tablespace permissions errors in <command>CREATE TABLE LIKE\n      INCLUDING INDEXES</> (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Ensure <structname>pg_stat_activity</>.<structfield>waiting</> flag\n      is cleared when a lock wait is aborted (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix handling of process permissions on Windows Vista (Dave, Magnus)\n     </para>\n\n     <para>\n      In particular, this fix allows starting the server as the Administrator\n      user.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Update time zone data files to <application>tzdata</> release 2008a\n      (in particular, recent Chile changes); adjust timezone abbreviation\n      <literal>VET</> (Venezuela) to mean UTC-4:30, not UTC-4:00 (Tom)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>ecpg</> problems with arrays (Michael)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Fix <application>pg_ctl</> to correctly extract the postmaster's port\n      number from command-line options (Itagaki Takahiro, Tom)\n     </para>\n\n     <para>\n      Previously, <literal>pg_ctl start -w</> could try to contact the\n      postmaster on the wrong port, leading to bogus reports of startup\n      failure.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Use <option>-fwrapv</> to defend against possible misoptimization\n      in recent <application>gcc</> versions (Tom)\n     </para>\n\n     <para>\n      This is known to be necessary when building <productname>PostgreSQL</>\n      with <application>gcc</> 4.3 or later.\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Enable building <filename>contrib/uuid-ossp</> with MSVC (Hiroshi Saito)\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n  </sect2>\n </sect1>\n\n <sect1 id=\"release-8-3\">\n  <title>Release 8.3</title>\n\n  <formalpara>\n   <title>Release date:</title>\n   <para>2008-02-04</para>\n  </formalpara>\n\n  <sect2>\n   <title>Overview</title>\n\n   <para>\n    With significant new functionality and performance enhancements,\n    this release represents a major leap forward for\n    <productname>PostgreSQL</>. This was made possible by a growing\n    community that has dramatically accelerated the pace of\n    development. This release adds the following major features:\n   </para>\n\n   <itemizedlist>\n\n    <listitem>\n     <para>\n      Full text search is integrated into the core database system\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Support for the SQL/XML standard, including new operators and an\n      <type>XML</type> data type\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Enumerated data types (<type>ENUM</type>)\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Arrays of composite types\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Universally Unique Identifier (<type>UUID</>) data type\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Add control over whether <literal>NULL</>s sort first or last\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Updatable cursors\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Server configuration parameters can now be set on a per-function\n      basis\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      User-defined types can now have type modifiers\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Automatically re-plan cached queries when table\n      definitions change or statistics are updated\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Numerous improvements in logging and statistics collection\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Support Security Service Provider Interface (<acronym>SSPI</>) for\n      authentication on Windows\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Support multiple concurrent autovacuum processes, and other\n      autovacuum improvements\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Allow the whole <productname>PostgreSQL</> distribution to be compiled\n      with <productname>Microsoft Visual C++</>\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n   <para>\n    Major performance improvements are listed below.  Most of\n    these enhancements are automatic and do not require user changes or\n    tuning:\n   </para>\n\n  <itemizedlist>\n\n    <listitem>\n     <para>\n      Asynchronous commit delays writes to WAL during transaction commit\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Checkpoint writes can be spread over a longer time period to smooth\n      the I/O spike during each checkpoint\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Heap-Only Tuples (<acronym>HOT</>) accelerate space reuse for\n      most <command>UPDATE</>s and <command>DELETE</>s\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Just-in-time background writer strategy improves disk write\n      efficiency\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Using non-persistent transaction IDs for read-only transactions\n      reduces overhead and <command>VACUUM</> requirements\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Per-field and per-row storage overhead has been reduced\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Large sequential scans no longer force out frequently used\n      cached pages\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      Concurrent large sequential scans can now share disk reads\n     </para>\n    </listitem>\n\n    <listitem>\n     <para>\n      <literal>ORDER BY ... LIMIT</> can be done without sorting\n     </para>\n    </listitem>\n\n   </itemizedlist>\n\n   <para>\n    The above items are explained in more detail in the sections below.\n   </para>\n\n  </sect2>\n\n  <sect2>\n   <title>Migration to Version 8.3</title>\n\n   <para>\n    A dump/restore using <application>pg_dump</application> is\n    required for those wishing to migrate data from any previous\n    release.\n   </para>\n\n   <para>\n    Observe the following incompatibilities:\n   </para>\n\n   <sect3>\n    <title>General</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Non-character data types are no longer automatically cast to\n       <type>TEXT</> (Peter, Tom)\n      </para>\n\n      <para>\n       Previously, if a non-character value was supplied to an operator or\n       function that requires <type>text</> input, it was automatically\n       cast to <type>text</>, for most (though not all) built-in data types.\n       This no longer happens: an explicit cast to <type>text</> is now\n       required for all non-character-string types.  For example, these\n       expressions formerly worked:\n\n<programlisting>\nsubstr(current_date, 1, 4)\n23 LIKE '2%'\n</programlisting>\n\n       but will now draw <quote>function does not exist</> and <quote>operator\n       does not exist</> errors respectively.  Use an explicit cast instead:\n\n<programlisting>\nsubstr(current_date::text, 1, 4)\n23::text LIKE '2%'\n</programlisting>\n\n       (Of course, you can use the more verbose <literal>CAST()</> syntax too.)\n       The reason for the change is that these automatic casts too often caused\n       surprising behavior.  An example is that in previous releases, this\n       expression was accepted but did not do what was expected:\n\n<programlisting>\ncurrent_date &lt; 2017-11-17\n</programlisting>\n\n       This is actually comparing a date to an integer, which should be\n       (and now is) rejected &mdash; but in the presence of automatic\n       casts both sides were cast to <type>text</> and a textual comparison\n       was done, because the <literal>text &lt; text</> operator was able\n       to match the expression when no other <literal>&lt;</> operator could.\n      </para>\n\n      <para>\n       Types <type>char(<replaceable>n</>)</type> and\n       <type>varchar(<replaceable>n</>)</type> still cast to <type>text</>\n       automatically.  Also, automatic casting to <type>text</> still works for\n       inputs to the concatenation (<literal>||</>) operator, so long as least\n       one input is a character-string type.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n        Full text search features from <filename>contrib/tsearch2</> have\n        been moved into the core server, with some minor syntax changes\n      </para>\n\n      <para>\n       <filename>contrib/tsearch2</> now contains a compatibility\n       interface.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <literal>ARRAY(SELECT ...)</literal>, where the <command>SELECT</>\n       returns no rows, now returns an empty array, rather than NULL\n       (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       The array type name for a base data type is no longer always the base\n       type's name with an underscore prefix\n      </para>\n\n      <para>\n       The old naming convention is still honored when possible, but\n       application code should no longer depend on it. Instead\n       use the new <literal>pg_type.typarray</literal> column to\n       identify the array data type associated with a given type.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <literal>ORDER BY ... USING</> <replaceable>operator</> must now\n       use a less-than or greater-than <replaceable>operator</> that is\n       defined in a btree operator class\n      </para>\n\n      <para>\n       This restriction was added to prevent inconsistent results.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <command>SET LOCAL</command> changes now persist until\n       the end of the outermost transaction, unless rolled back (Tom)\n      </para>\n\n      <para>\n       Previously <command>SET LOCAL</command>'s effects were lost\n       after subtransaction commit (<command>RELEASE SAVEPOINT</>\n       or exit from a PL/pgSQL exception block).\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Commands rejected in transaction blocks are now also rejected in\n       multiple-statement query strings (Tom)\n      </para>\n\n      <para>\n       For example, <literal>\"BEGIN; DROP DATABASE; COMMIT\"</> will now be\n       rejected even if submitted as a single query message.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <command>ROLLBACK</> outside a transaction block now\n       issues <literal>NOTICE</> instead of <literal>WARNING</> (Bruce)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Prevent <command>NOTIFY</command>/<command>LISTEN</command>/<command>UNLISTEN</command>\n       from accepting schema-qualified names (Bruce)\n      </para>\n\n      <para>\n       Formerly, these commands accepted <literal>schema.relation</> but\n       ignored the schema part, which was confusing.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <command>ALTER SEQUENCE</> no longer affects the sequence's\n       <function>currval()</> state (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Foreign keys now must match indexable conditions for\n       cross-data-type references (Tom)\n      </para>\n\n      <para>\n       This improves semantic consistency and helps avoid\n       performance problems.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Restrict object size functions to users who have reasonable\n       permissions to view such information (Tom)\n      </para>\n\n      <para>\n       For example, <function>pg_database_size()</function> now requires\n       <literal>CONNECT</> permission, which is granted to everyone by\n       default. <function>pg_tablespace_size()</function> requires\n       <literal>CREATE</> permission in the tablespace, or is allowed if\n       the tablespace is the default tablespace for the database.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove the undocumented <literal>!!=</> (not in) operator (Tom)\n      </para>\n\n      <para>\n       <literal>NOT IN (SELECT ...)</literal> is the proper way to\n       perform this operation.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Internal hashing functions are now more uniformly-distributed (Tom)\n      </para>\n\n      <para>\n       If application code was computing and storing hash values using\n       internal <productname>PostgreSQL</> hashing functions, the hash\n       values must be regenerated.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       C-code conventions for handling variable-length data values\n       have changed (Greg Stark, Tom)\n      </para>\n\n      <para>\n       The new <function>SET_VARSIZE()</> macro <emphasis>must</> be used\n       to set the length of generated <type>varlena</> values. Also, it\n       might be necessary to expand (<quote>de-TOAST</quote>) input values\n       in more cases.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Continuous archiving no longer reports each successful archive\n       operation to the server logs unless <literal>DEBUG</> level is used\n       (Simon)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n    </sect3>\n\n    <sect3>\n     <title>Configuration Parameters</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Numerous changes in administrative server parameters\n      </para>\n\n      <para>\n       <varname>bgwriter_lru_percent</>,\n       <varname>bgwriter_all_percent</>,\n       <varname>bgwriter_all_maxpages</>,\n       <varname>stats_start_collector</>, and\n       <varname>stats_reset_on_server_start</> are removed.\n       <varname>redirect_stderr</> is renamed to\n       <varname>logging_collector</>.\n       <varname>stats_command_string</> is renamed to\n       <varname>track_activities</>.\n       <varname>stats_block_level</> and <varname>stats_row_level</>\n       are merged into <varname>track_counts</>.\n       A new boolean configuration parameter, <varname>archive_mode</>,\n       controls archiving. Autovacuum's default settings have changed.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove <varname>stats_start_collector</varname> parameter (Tom)\n      </para>\n\n      <para>\n       We now always start the collector process, unless <acronym>UDP</>\n       socket creation fails.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove <varname>stats_reset_on_server_start</varname> parameter (Tom)\n      </para>\n\n      <para>\n       This was removed because <function>pg_stat_reset()</function>\n       can be used for this purpose.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Commenting out a parameter in <filename>postgresql.conf</> now\n       causes it to revert to its default value (Joachim Wieland)\n      </para>\n\n      <para>\n       Previously, commenting out an entry left the parameter's value unchanged\n       until the next server restart.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n    </sect3>\n\n\n    <sect3>\n     <title>Character Encodings</title>\n\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add more checks for invalidly-encoded data (Andrew)\n      </para>\n\n      <para>\n       This change plugs some holes that existed in literal backslash\n       escape string processing and <command>COPY</command> escape\n       processing. Now the de-escaped string is rechecked to see if the\n       result created an invalid multi-byte character.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Disallow database encodings that are inconsistent with the server's\n       locale setting (Tom)\n      </para>\n\n      <para>\n       On most platforms, <literal>C</> locale is the only locale that\n       will work with any database encoding.  Other locale settings imply\n       a specific encoding and will misbehave if the database encoding\n       is something different.  (Typical symptoms include bogus textual\n       sort order and wrong results from <function>upper()</> or\n       <function>lower()</>.)  The server now rejects attempts to create\n       databases that have an incompatible encoding.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Ensure that <function>chr()</function> cannot create\n       invalidly-encoded values (Andrew)\n      </para>\n\n      <para>\n       In UTF8-encoded databases the argument of <function>chr()</function> is\n       now treated as a Unicode code point. In other multi-byte encodings\n       <function>chr()</function>'s argument must designate a 7-bit ASCII\n       character.  Zero is no longer accepted.\n       <function>ascii()</function> has been adjusted to match.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Adjust <function>convert()</function> behavior to ensure encoding\n       validity (Andrew)\n      </para>\n\n      <para>\n       The two argument form of <function>convert()</function> has been\n       removed. The three argument form now takes a <type>bytea</type>\n       first argument and returns a <type>bytea</type>. To cover the\n       loss of functionality, three new functions have been added:\n      </para>\n\n      <itemizedlist>\n       <listitem>\n        <para>\n         <function>convert_from(bytea, name)</function> returns\n         <type>text</> &mdash; converts the first argument from the named\n         encoding to the database encoding\n        </para>\n       </listitem>\n\n       <listitem>\n        <para>\n         <function>convert_to(text, name)</function> returns\n         <type>bytea</> &mdash; converts the first argument from the\n         database encoding to the named encoding\n        </para>\n       </listitem>\n\n       <listitem>\n        <para>\n         <function>length(bytea, name)</function> returns\n         <type>integer</> &mdash; gives the length of the first\n         argument in characters in the named encoding\n        </para>\n       </listitem>\n      </itemizedlist>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove <literal>convert(argument USING conversion_name)</literal>\n       (Andrew)\n      </para>\n\n      <para>\n       Its behavior did not match the SQL standard.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make JOHAB encoding client-only (Tatsuo)\n      </para>\n\n      <para>\n       JOHAB is not safe as a server-side encoding.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n  </sect2>\n\n  <sect2>\n   <title>Changes</title>\n\n   <para>\n    Below you will find a detailed account of the\n    changes between <productname>PostgreSQL</productname> 8.3 and\n    the previous major release.\n   </para>\n\n   <sect3>\n    <title>Performance</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Asynchronous commit delays writes to WAL during transaction commit\n       (Simon)\n      </para>\n\n      <para>\n       This feature dramatically increases performance for short data-modifying\n       transactions.  The disadvantage is that because disk writes are delayed,\n       if the database or operating system crashes before data is written to\n       the disk, committed data will be lost.  This feature is useful for\n       applications that can accept some data loss.  Unlike turning off\n       <varname>fsync</varname>, using asynchronous commit does not put\n       database consistency at risk; the worst case is that after a crash the\n       last few reportedly-committed transactions might not be committed after\n       all.\n       This feature is enabled by turning off <varname>synchronous_commit</>\n       (which can be done per-session or per-transaction, if some transactions\n       are critical and others are not).\n       <varname>wal_writer_delay</> can be adjusted to control the maximum\n       delay before transactions actually reach disk.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Checkpoint writes can be spread over a longer time period to smooth\n       the I/O spike during each checkpoint (Itagaki Takahiro and Heikki\n       Linnakangas)\n      </para>\n\n      <para>\n       Previously all modified buffers were forced to disk as quickly as\n       possible during a\n       checkpoint, causing an I/O spike that decreased server performance.\n       This new approach spreads out disk writes during checkpoints,\n       reducing peak I/O usage. (User-requested and shutdown checkpoints\n       are still written as quickly as possible.)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Heap-Only Tuples (<acronym>HOT</>) accelerate space reuse for most\n       <command>UPDATE</>s and <command>DELETE</>s (Pavan Deolasee, with\n       ideas from many others)\n      </para>\n\n      <para>\n       <command>UPDATE</>s and <command>DELETE</>s leave dead tuples\n       behind, as do failed <command>INSERT</>s.  Previously only\n       <command>VACUUM</> could reclaim space taken by dead tuples. With\n       <acronym>HOT</> dead tuple space can be automatically reclaimed at\n       the time of <command>INSERT</> or <command>UPDATE</> if no changes\n       are made to indexed columns.  This allows for more consistent\n       performance.  Also, <acronym>HOT</> avoids adding duplicate index\n       entries.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Just-in-time background writer strategy improves disk write\n       efficiency (Greg Smith, Itagaki Takahiro)\n      </para>\n\n      <para>\n       This greatly reduces the need for manual tuning of the background\n       writer.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Per-field and per-row storage overhead have been reduced\n       (Greg Stark, Heikki Linnakangas)\n      </para>\n\n      <para>\n       Variable-length data types with data values less than 128 bytes long\n       will see a storage decrease of 3 to 6 bytes. For example, two adjacent\n       <type>char(1)</type> fields now use 4 bytes instead of 16. Row headers\n       are also 4 bytes shorter than before.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Using non-persistent transaction IDs for read-only transactions\n       reduces overhead and <command>VACUUM</> requirements (Florian Pflug)\n      </para>\n\n      <para>\n       Non-persistent transaction IDs do not increment the global\n       transaction counter. Therefore, they reduce the load on\n       <structname>pg_clog</> and increase the time between forced\n       vacuums to prevent transaction ID wraparound.\n       Other performance\n       improvements were also made that should improve concurrency.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Avoid incrementing the command counter after a read-only command (Tom)\n      </para>\n\n      <para>\n       There was formerly a hard limit of 2<superscript>32</>\n       (4 billion) commands per transaction.  Now only commands that\n       actually changed the database count, so while this limit still\n       exists, it should be significantly less annoying.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Create a dedicated <acronym>WAL</> writer process to off-load\n       work from backends (Simon)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Skip unnecessary WAL writes for <command>CLUSTER</command> and\n       <command>COPY</command> (Simon)\n      </para>\n\n      <para>\n       Unless WAL archiving is enabled, the system now avoids WAL writes\n       for <command>CLUSTER</command> and just <function>fsync()</>s the\n       table at the end of the command.  It also does the same for\n       <command>COPY</command> if the table was created in the same\n       transaction.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Large sequential scans no longer force out frequently used\n       cached pages (Simon, Heikki, Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Concurrent large sequential scans can now share disk reads (Jeff Davis)\n      </para>\n\n      <para>\n       This is accomplished by starting the new sequential scan in the\n       middle of the table (where another sequential scan is already\n       in-progress) and wrapping around to the beginning to finish.  This\n       can affect the order of returned rows in a query that does not\n       specify <literal>ORDER BY</>.  The <varname>synchronize_seqscans</>\n       configuration parameter can be used to disable this if necessary.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <literal>ORDER BY ... LIMIT</> can be done without sorting\n       (Greg Stark)\n      </para>\n\n      <para>\n       This is done by sequentially scanning the table and tracking just\n       the <quote>top N</> candidate rows, rather than performing a\n       full sort of the entire table.  This is useful when there is no\n       matching index and the <literal>LIMIT</> is not large.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Put a rate limit on messages sent to the statistics\n       collector by backends\n       (Tom)\n      </para>\n\n      <para>\n       This reduces overhead for short transactions, but might sometimes\n       increase the delay before statistics are tallied.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve hash join performance for cases with many NULLs (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Speed up operator lookup for cases with non-exact datatype matches (Tom)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Server</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Autovacuum is now enabled by default (Alvaro)\n      </para>\n\n      <para>\n       Several changes were made to eliminate disadvantages of having\n       autovacuum enabled, thereby justifying the change in default.\n       Several other autovacuum parameter defaults were also modified.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support multiple concurrent autovacuum processes (Alvaro, Itagaki\n       Takahiro)\n      </para>\n\n      <para>\n       This allows multiple vacuums to run concurrently.  This prevents\n       vacuuming of a large table from delaying vacuuming of smaller tables.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Automatically re-plan cached queries when table\n       definitions change or statistics are updated (Tom)\n      </para>\n\n      <para>\n       Previously PL/pgSQL functions that referenced temporary tables\n       would fail if the temporary table was dropped and recreated\n       between function invocations, unless <literal>EXECUTE</> was\n       used.  This improvement fixes that problem and many related issues.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add a <varname>temp_tablespaces</varname> parameter to control\n       the tablespaces for temporary tables and files (Jaime Casanova,\n       Albert Cervera, Bernd Helmle)\n      </para>\n\n      <para>\n       This parameter defines a list of tablespaces to be used.  This\n       enables spreading the I/O load across multiple tablespaces. A random\n       tablespace is chosen each time a temporary object is created.\n       Temporary files are no longer stored in per-database\n       <filename>pgsql_tmp/</filename> directories but in per-tablespace\n       directories.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Place temporary tables' TOAST tables in special schemas named\n       <literal>pg_toast_temp_<replaceable>nnn</></literal> (Tom)\n      </para>\n\n      <para>\n       This allows low-level code to recognize these tables as temporary,\n       which enables various optimizations such as not WAL-logging changes\n       and using local rather than shared buffers for access. This also\n       fixes a bug wherein backends unexpectedly held open file references\n       to temporary TOAST tables.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix problem that a constant flow of new connection requests could\n       indefinitely delay the postmaster from completing a shutdown or\n       a crash restart (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Guard against a very-low-probability data loss scenario by preventing\n       re-use of a deleted table's relfilenode until after the next\n       checkpoint (Heikki)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix <command>CREATE CONSTRAINT TRIGGER</>\n       to convert old-style foreign key trigger definitions into regular\n       foreign key constraints (Tom)\n      </para>\n\n      <para>\n       This will ease porting of foreign key constraints carried forward from\n       pre-7.3 databases, if they were never converted using\n       <filename>contrib/adddepend</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix <literal>DEFAULT NULL</> to override inherited defaults (Tom)\n      </para>\n\n      <para>\n       <literal>DEFAULT NULL</> was formerly considered a noise phrase, but it\n       should (and now does) override non-null defaults that would otherwise\n       be inherited from a parent table or domain.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add new encodings EUC_JIS_2004 and SHIFT_JIS_2004 (Tatsuo)\n      </para>\n\n      <para>\n       These new encodings can be converted to and from UTF-8.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Change server startup log message from <quote>database system is\n       ready</quote> to <quote>database system is ready to accept\n       connections</quote>, and adjust its timing\n      </para>\n\n      <para>\n       The message now appears only when the postmaster is really ready\n       to accept connections.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Monitoring</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add <varname>log_autovacuum_min_duration</varname> parameter to\n       support configurable logging of autovacuum activity (Simon, Alvaro)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <varname>log_lock_waits</varname> parameter to log lock waiting\n       (Simon)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <varname>log_temp_files</varname> parameter to log temporary\n       file usage (Bill Moran)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <varname>log_checkpoints</varname> parameter to improve logging\n       of checkpoints (Greg Smith, Heikki)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <varname>log_line_prefix</varname> now supports\n       <literal>%s</literal> and <literal>%c</literal> escapes in all\n       processes (Andrew)\n      </para>\n\n      <para>\n       Previously these escapes worked only for user sessions, not for\n       background database processes.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <varname>log_restartpoints</varname> to control logging of\n       point-in-time recovery restart points (Simon)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Last transaction end time is now logged at end of recovery and at\n       each logged restart point (Simon)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Autovacuum now reports its activity start time in\n       <literal>pg_stat_activity</literal> (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow server log output in comma-separated value (CSV) format (Arul\n       Shaji, Greg Smith, Andrew Dunstan)\n      </para>\n\n      <para>\n       CSV-format log files can easily be loaded into a database table for\n       subsequent analysis.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Use PostgreSQL-supplied timezone support for formatting timestamps\n       displayed in the server log (Tom)\n      </para>\n\n      <para>\n       This avoids Windows-specific problems with localized time zone\n       names that are in the wrong encoding. There is a new\n       <varname>log_timezone</> parameter that controls the timezone\n       used in log messages, independently of the client-visible\n       <varname>timezone</> parameter.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       New system view <literal>pg_stat_bgwriter</literal> displays\n       statistics about background writer activity (Magnus)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add new columns for database-wide tuple statistics to\n       <literal>pg_stat_database</literal> (Magnus)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add an <literal>xact_start</literal> (transaction start time) column to\n       <literal>pg_stat_activity</literal> (Neil)\n      </para>\n\n      <para>\n       This makes it easier to identify long-running transactions.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>n_live_tuples</> and <literal>n_dead_tuples</> columns\n       to <literal>pg_stat_all_tables</literal> and related views (Glen\n       Parker)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Merge <varname>stats_block_level</> and <varname>stats_row_level</>\n       parameters into a single parameter <varname>track_counts</>, which\n       controls all messages sent to the statistics collector process\n       (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Rename <varname>stats_command_string</varname> parameter to\n       <varname>track_activities</varname> (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix statistical counting of live and dead tuples to recognize that\n       committed and aborted transactions have different effects (Tom)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Authentication</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Support Security Service Provider Interface (<acronym>SSPI</>) for\n       authentication on Windows (Magnus)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support GSSAPI authentication (Henry Hotz, Magnus)\n      </para>\n\n      <para>\n       This should be preferred to native Kerberos authentication because\n       GSSAPI is an industry standard.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support a global SSL configuration file (Victor Wagner)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <varname>ssl_ciphers</> parameter to control accepted SSL ciphers\n       (Victor Wagner)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add a Kerberos realm parameter, <varname>krb_realm</> (Magnus)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Write-Ahead Log (<acronym>WAL</>) and Continuous Archiving</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Change the timestamps recorded in transaction WAL records from\n       time_t to TimestampTz representation (Tom)\n      </para>\n\n      <para>\n       This provides sub-second resolution in WAL, which can be useful for\n       point-in-time recovery.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Reduce WAL disk space needed by warm standby servers (Simon)\n      </para>\n\n      <para>\n       This change allows a warm standby server to pass the name of the earliest\n       still-needed WAL file to the recovery script, allowing automatic removal\n       of no-longer-needed WAL files.  This is done using <literal>%r</> in\n       the <varname>restore_command</varname> parameter of\n       <filename>recovery.conf</filename>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       New boolean configuration parameter, <varname>archive_mode</>,\n       controls archiving (Simon)\n      </para>\n\n      <para>\n       Previously setting <varname>archive_command</> to an empty string\n       turned off archiving. Now <varname>archive_mode</> turns archiving\n       on and off, independently of <varname>archive_command</>. This is\n       useful for stopping archiving temporarily.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Queries</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Full text search is integrated into the core database\n       system (Teodor, Oleg)\n      </para>\n\n      <para>\n       Text search has been improved, moved into the core code, and is now\n       installed by default.  <filename>contrib/tsearch2</> now contains\n       a compatibility interface.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add control over whether <literal>NULL</>s sort first or last (Teodor, Tom)\n      </para>\n\n      <para>\n       The syntax is <literal>ORDER BY ... NULLS FIRST/LAST</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow per-column ascending/descending (<literal>ASC</>/<literal>DESC</>)\n       ordering options for indexes (Teodor, Tom)\n      </para>\n\n      <para>\n       Previously a query using <literal>ORDER BY</> with mixed\n       <literal>ASC</>/<literal>DESC</> specifiers could not fully use\n       an index. Now an index can be fully used in such cases if the\n       index was created with matching\n       <literal>ASC</>/<literal>DESC</> specifications.\n       <literal>NULL</> sort order within an index can be controlled, too.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <literal>col IS NULL</> to use an index (Teodor)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Updatable cursors (Arul Shaji, Tom)\n      </para>\n\n      <para>\n       This eliminates the need to reference a primary key to\n       <command>UPDATE</> or <command>DELETE</> rows returned by a cursor.\n       The syntax is <literal>UPDATE/DELETE WHERE CURRENT OF</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <literal>FOR UPDATE</literal> in cursors (Arul Shaji, Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Create a general mechanism that supports casts to and from the\n       standard string types (<type>TEXT</type>, <type>VARCHAR</type>,\n       <type>CHAR</type>) for <emphasis>every</emphasis> datatype, by\n       invoking the datatype's I/O functions (Tom)\n      </para>\n\n      <para>\n       Previously, such casts were available only for types that had\n       specialized function(s) for the purpose.\n       These new casts are assignment-only in the to-string direction,\n       explicit-only in the other direction, and therefore should create no\n       surprising behavior.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <literal>UNION</> and related constructs to return a domain\n       type, when all inputs are of that domain type (Tom)\n      </para>\n\n      <para>\n       Formerly, the output would be considered to be of the domain's base\n       type.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow limited hashing when using two different data types (Tom)\n      </para>\n\n      <para>\n       This allows hash joins, hash indexes, hashed subplans, and hash\n       aggregation to be used in situations involving cross-data-type\n       comparisons, if the data types have compatible hash functions.\n       Currently, cross-data-type hashing support exists for\n       <type>smallint</type>/<type>integer</type>/<type>bigint</type>,\n       and for <type>float4</type>/<type>float8</type>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve optimizer logic for detecting when variables are equal\n       in a <literal>WHERE</> clause (Tom)\n      </para>\n\n      <para>\n       This allows mergejoins to work with descending sort orders, and\n       improves recognition of redundant sort columns.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve performance when planning large inheritance trees in\n       cases where most tables are excluded by constraints (Tom)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Object Manipulation</title>\n    <itemizedlist>\n\n     <listitem>\n\n      <para>\n       Arrays of composite types (David Fetter, Andrew, Tom)\n      </para>\n\n      <para>\n       In addition to arrays of explicitly-declared composite types,\n       arrays of the rowtypes of regular tables and views are now\n       supported, except for rowtypes of system catalogs, sequences, and TOAST\n       tables.\n      </para>\n\n     </listitem>\n\n     <listitem>\n      <para>\n       Server configuration parameters can now be set on a per-function\n       basis (Tom)\n      </para>\n\n      <para>\n       For example, functions can now set their own\n       <varname>search_path</> to prevent unexpected behavior if a\n       different <varname>search_path</> exists at run-time.  Security\n       definer functions should set <varname>search_path</varname> to\n       avoid security loopholes.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <command>CREATE/ALTER FUNCTION</command> now supports\n       <literal>COST</literal> and <literal>ROWS</literal> options (Tom)\n      </para>\n\n      <para>\n       <literal>COST</literal> allows specification of the cost of a\n       function call.  <literal>ROWS</literal> allows specification of\n       the average number or rows returned by a set-returning function.\n       These values are used by the optimizer in choosing the best plan.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Implement <command>CREATE TABLE LIKE ...  INCLUDING\n       INDEXES</command> (Trevor Hardcastle, Nikhil Sontakke, Neil)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <command>CREATE INDEX CONCURRENTLY</command> to ignore\n       transactions in other databases (Simon)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <command>ALTER VIEW ... RENAME TO</command> and <command>ALTER\n       SEQUENCE ... RENAME TO</command> (David Fetter, Neil)\n      </para>\n\n      <para>\n       Previously this could only be done via <command>ALTER TABLE ...\n       RENAME TO</command>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <command>CREATE/DROP/RENAME DATABASE</> wait briefly for\n       conflicting backends to exit before failing (Tom)\n      </para>\n\n      <para>\n       This increases the likelihood that these commands will succeed.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow triggers and rules to be deactivated in groups using a\n       configuration parameter, for replication purposes (Jan)\n      </para>\n\n      <para>\n       This allows replication systems to disable triggers and rewrite\n       rules as a group without modifying the system catalogs directly.\n       The behavior is controlled by <command>ALTER TABLE</> and a new\n       parameter <varname>session_replication_role</varname>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       User-defined types can now have type modifiers (Teodor, Tom)\n      </para>\n\n      <para>\n       This allows a user-defined type to take a modifier, like\n       <type>ssnum(7)</>.  Previously only built-in\n       data types could have modifiers.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Utility Commands</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Non-superuser database owners now are able to add trusted procedural\n       languages to their databases by default (Jeremy Drake)\n      </para>\n\n      <para>\n       While this is reasonably safe, some administrators might wish to\n       revoke the privilege. It is controlled by\n       <structname>pg_pltemplate</>.<structfield>tmpldbacreate</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow a session's current parameter setting to be used as the\n       default for future sessions (Tom)\n      </para>\n\n      <para>\n       This is done with <literal>SET ... FROM CURRENT</literal> in\n       <command>CREATE/ALTER FUNCTION</command>, <command>ALTER\n       DATABASE</command>, or <command>ALTER ROLE</command>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Implement new commands <command>DISCARD ALL</command>,\n       <command>DISCARD PLANS</command>, <command>DISCARD\n       TEMPORARY</command>, <command>CLOSE ALL</command>, and\n       <command>DEALLOCATE ALL</command> (Marko Kreen, Neil)\n      </para>\n\n      <para>\n       These commands simplify resetting a database session to its initial\n       state, and are particularly useful for connection-pooling software.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <command>CLUSTER</command> MVCC-safe (Heikki Linnakangas)\n      </para>\n\n      <para>\n       Formerly, <command>CLUSTER</command> would discard all tuples\n       that were committed dead, even if there were still transactions\n       that should be able to see them under MVCC visibility rules.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add new <command>CLUSTER</command> syntax: <literal>CLUSTER\n       <replaceable>table</> USING <replaceable>index</></literal>\n       (Holger Schurig)\n     </para>\n\n      <para>\n       The old <command>CLUSTER</command> syntax is still supported, but\n       the new form is considered more logical.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix <command>EXPLAIN</command> so it can show complex plans\n       more accurately (Tom)\n      </para>\n\n      <para>\n       References to subplan outputs are now always shown correctly,\n       instead of using <literal>?column<replaceable>N</>?</literal>\n       for complicated cases.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Limit the amount of information reported when a user is dropped\n       (Alvaro)\n      </para>\n\n      <para>\n       Previously, dropping (or attempting to drop) a user who owned many\n       objects could result in large <literal>NOTICE</literal> or\n       <literal>ERROR</literal> messages listing all these objects; this\n       caused problems for some client applications.  The length of the\n       message is now limited, although a full list is still sent to the\n       server log.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Data Types</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Support for the SQL/XML standard, including new operators and an\n       <type>XML</type> data type (Nikolay Samokhvalov, Pavel Stehule, Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Enumerated data types (<type>ENUM</type>) (Tom Dunstan)\n      </para>\n\n      <para>\n       This feature provides convenient support for fields that have a\n       small, fixed set of allowed values.  An example of creating an\n       <literal>ENUM</> type is\n       <literal>CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy')</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Universally Unique Identifier (<type>UUID</>) data type (Gevik\n       Babakhani, Neil)\n      </para>\n\n      <para>\n       This closely matches <acronym>RFC</> 4122.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Widen the <type>MONEY</type> data type to 64 bits (D'Arcy Cain)\n      </para>\n\n      <para>\n       This greatly increases the range of supported <type>MONEY</>\n       values.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix <type>float4</type>/<type>float8</type> to handle\n       <literal>Infinity</> and <literal>NAN</> (Not A Number)\n       consistently (Bruce)\n      </para>\n\n      <para>\n       The code formerly was not consistent about distinguishing\n       <literal>Infinity</> from overflow conditions.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow leading and trailing whitespace during input of\n       <type>boolean</type> values (Neil)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Prevent <command>COPY</> from using digits and lowercase letters as\n       delimiters (Tom)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Functions</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add new regular expression functions\n       <function>regexp_matches()</function>,\n       <function>regexp_split_to_array()</function>, and\n       <function>regexp_split_to_table()</function> (Jeremy Drake, Neil)\n      </para>\n\n      <para>\n       These functions provide extraction of regular expression\n       subexpressions and allow splitting a string using a POSIX regular\n       expression.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <function>lo_truncate()</function> for large object truncation\n       (Kris Jurka)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Implement <function>width_bucket()</function> for the <type>float8</>\n       data type (Neil)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <function>pg_stat_clear_snapshot()</function> to discard\n       statistics snapshots collected during the current transaction\n       (Tom)\n      </para>\n\n      <para>\n       The first request for statistics in a transaction takes a statistics\n       snapshot that does not change during the transaction.  This function\n       allows the snapshot to be discarded and a new snapshot loaded during\n       the next statistics query. This is particularly useful for PL/pgSQL\n       functions, which are confined to a single transaction.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>isodow</> option to <function>EXTRACT()</> and\n       <function>date_part()</> (Bruce)\n      </para>\n\n      <para>\n       This returns the day of the week, with Sunday as seven.\n       (<literal>dow</> returns Sunday as zero.)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>ID</> (ISO day of week) and <literal>IDDD</> (ISO\n       day of year) format codes for <function>to_char()</>,\n       <function>to_date()</>, and <function>to_timestamp()</> (Brendan\n       Jurd)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <function>to_timestamp()</> and <function>to_date()</>\n       assume <literal>TM</literal> (trim) option for potentially\n       variable-width fields (Bruce)\n      </para>\n\n      <para>\n       This matches <productname>Oracle</>'s behavior.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix off-by-one conversion error in\n       <function>to_date()</function>/<function>to_timestamp()</function>\n       <literal>D</> (non-ISO day of week) fields (Bruce)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <function>setseed()</function> return void, rather than a\n       useless integer value (Neil)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add a hash function for <type>NUMERIC</type> (Neil)\n      </para>\n\n      <para>\n       This allows hash indexes and hash-based plans to be used with\n       <type>NUMERIC</type> columns.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve efficiency of\n       <literal>LIKE</literal>/<literal>ILIKE</literal>, especially for\n       multi-byte character sets like UTF-8 (Andrew, Itagaki Takahiro)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make <function>currtid()</function> functions require\n       <literal>SELECT</literal> privileges on the target table (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add several <function>txid_*()</function> functions to query\n       active transaction IDs (Jan)\n      </para>\n\n      <para>\n       This is useful for various replication solutions.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>PL/pgSQL Server-Side Language</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add scrollable cursor support, including directional control in\n       <command>FETCH</command> (Pavel Stehule)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <literal>IN</literal> as an alternative to\n       <literal>FROM</literal> in PL/pgSQL's <command>FETCH</command>\n       statement, for consistency with the backend's\n       <command>FETCH</command> command (Pavel Stehule)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <command>MOVE</command> to PL/pgSQL (Magnus, Pavel Stehule,\n       Neil)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Implement <command>RETURN QUERY</command> (Pavel Stehule, Neil)\n      </para>\n\n      <para>\n       This adds convenient syntax for PL/pgSQL set-returning functions\n       that want to return the result of a query.  <command>RETURN QUERY</>\n       is easier and more efficient than a loop\n       around <command>RETURN NEXT</command>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow function parameter names to be qualified with the\n       function's name (Tom)\n      </para>\n\n      <para>\n       For example, <literal>myfunc.myvar</>. This is particularly\n       useful for specifying variables in a query where the variable\n       name might match a column name.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make qualification of variables with block labels work properly (Tom)\n      </para>\n\n      <para>\n       Formerly, outer-level block labels could unexpectedly interfere with\n       recognition of inner-level record or row references.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Tighten requirements for <literal>FOR</literal> loop\n       <literal>STEP</> values (Tom)\n      </para>\n\n      <para>\n       Prevent non-positive <literal>STEP</> values, and handle\n       loop overflows.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve accuracy when reporting syntax error locations (Tom)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Other Server-Side Languages</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Allow type-name arguments to PL/Perl\n       <function>spi_prepare()</function> to be data type aliases in\n       addition to names found in <literal>pg_type</literal> (Andrew)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow type-name arguments to PL/Python\n       <function>plpy.prepare()</function> to be data type aliases in\n       addition to names found in <literal>pg_type</literal> (Andrew)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow type-name arguments to PL/Tcl <function>spi_prepare</> to\n       be data type aliases in addition to names found in\n       <literal>pg_type</literal> (Andrew)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Enable PL/PythonU to compile on Python 2.5 (Marko Kreen)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support a true PL/Python boolean type in compatible Python versions\n       (Python 2.3 and later) (Marko Kreen)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix PL/Tcl problems with thread-enabled <filename>libtcl</> spawning\n       multiple threads within the backend (Steve Marshall, Paul Bayer,\n       Doug Knight)\n      </para>\n\n      <para>\n       This caused all sorts of unpleasantness.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title><link linkend=\"APP-PSQL\"><application>psql</></link></title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       List disabled triggers separately in <literal>\\d</literal> output\n       (Brendan Jurd)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       In <literal>\\d</literal> patterns, always match <literal>$</literal>\n       literally (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Show aggregate return types in <literal>\\da</literal> output\n       (Greg Sabino Mullane)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add the function's volatility status to the output of\n       <literal>\\df+</literal> (Neil)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>\\prompt</literal> capability (Chad Wagner)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <literal>\\pset</literal>, <literal>\\t</literal>, and\n       <literal>\\x</literal> to specify <literal>on</> or <literal>off</>,\n       rather than just toggling (Chad Wagner)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <literal>\\sleep</> capability (Jan)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Enable <literal>\\timing</> output for <literal>\\copy</> (Andrew)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve <literal>\\timing</literal> resolution on Windows\n       (Itagaki Takahiro)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Flush <literal>\\o</> output after each backslash command (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Correctly detect and report errors while reading a <literal>-f</>\n       input file (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove <literal>-u</> option (this option has long been deprecated)\n       (Tom)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title><link linkend=\"APP-PGDUMP\"><application>pg_dump</></link></title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add <literal>--tablespaces-only</> and <literal>--roles-only</>\n       options to <application>pg_dumpall</application> (Dave Page)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add an output file option to\n       <application>pg_dumpall</application> (Dave Page)\n      </para>\n\n      <para>\n       This is primarily useful on Windows, where output redirection of\n       child <application>pg_dump</application> processes does not work.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <application>pg_dumpall</> to accept an initial-connection\n       database name rather than the default\n       <literal>template1</literal> (Dave Page)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       In <literal>-n</> and <literal>-t</> switches, always match\n       <literal>$</literal> literally (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve performance when a database has thousands of objects (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Remove <literal>-u</> option (this option has long been deprecated)\n       (Tom)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Other Client Applications</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       In <application>initdb</>, allow the location of the\n       <filename>pg_xlog</filename> directory to be specified\n       (Euler Taveira de Oliveira)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Enable server core dump generation in <application>pg_regress</>\n       on supported operating systems (Andrew)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add a <literal>-t</> (timeout) parameter to <application>pg_ctl</>\n       (Bruce)\n      </para>\n\n      <para>\n       This controls how long <application>pg_ctl</> will wait when waiting\n       for server startup or shutdown.  Formerly the timeout was hard-wired\n       as 60 seconds.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add a <application>pg_ctl</> option to control generation\n       of server core dumps (Andrew)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow Control-C to cancel <application>clusterdb</>,\n       <application>reindexdb</>, and <application>vacuumdb</> (Itagaki\n       Takahiro, Magnus)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Suppress command tag output for <application>createdb</>,\n       <application>createuser</>, <application>dropdb</>, and\n       <application>dropuser</> (Peter)\n      </para>\n\n      <para>\n       The <literal>--quiet</> option is ignored and will be removed in 8.4.\n       Progress messages when acting on all databases now go to stdout\n       instead of stderr because they are not actually errors.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title><link linkend=\"libpq\"><application>libpq</></link></title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Interpret the <literal>dbName</> parameter of\n       <function>PQsetdbLogin()</> as a <literal>conninfo</> string if\n       it contains an equals sign (Andrew)\n      </para>\n\n      <para>\n       This allows use of <literal>conninfo</> strings in client\n       programs that still use <literal>PQsetdbLogin()</>.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support a global <acronym>SSL</> configuration file (Victor\n       Wagner)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add environment variable <varname>PGSSLKEY</> to control\n       <acronym>SSL</> hardware keys (Victor Wagner)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <function>lo_truncate()</function> for large object\n       truncation (Kris Jurka)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <function>PQconnectionNeedsPassword()</function> that returns\n       true if the server required a password but none was supplied\n       (Joe Conway, Tom)\n      </para>\n\n      <para>\n       If this returns true after a failed connection attempt, a client\n       application should prompt the user for a password.  In the past\n       applications have had to check for a specific error message string to\n       decide whether a password is needed; that approach is now\n       deprecated.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <function>PQconnectionUsedPassword()</function> that returns\n       true if the supplied password was actually used\n       (Joe Conway, Tom)\n      </para>\n\n      <para>\n       This is useful in some security contexts where it is important\n       to know whether a user-supplied password is actually valid.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title><link linkend=\"ecpg\"><application>ecpg</></link></title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Use V3 frontend/backend protocol (Michael)\n      </para>\n\n      <para>\n       This adds support for server-side prepared statements.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Use native threads, instead of pthreads, on Windows (Magnus)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Improve thread-safety of ecpglib (Itagaki Takahiro)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Make the ecpg libraries export only necessary API symbols (Michael)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title><application>Windows</> Port</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Allow the whole <productname>PostgreSQL</> distribution to be compiled\n       with <productname>Microsoft Visual C++</> (Magnus and others)\n      </para>\n\n      <para>\n       This allows Windows-based developers to use familiar development\n       and debugging tools.\n       Windows executables made with Visual C++ might also have better\n       stability and performance than those made with other tool sets.\n       The client-only Visual C++ build scripts have been removed.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Drastically reduce postmaster's memory usage when it has many child\n       processes (Magnus)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow regression tests to be started by an administrative\n       user (Magnus)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add native shared memory implementation (Magnus)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Server Programming Interface (<acronym>SPI</>)</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add cursor-related functionality in SPI (Pavel Stehule)\n      </para>\n\n      <para>\n       Allow access to the cursor-related planning options, and add\n       <command>FETCH</>/<command>MOVE</> routines.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow execution of cursor commands through\n       <function>SPI_execute</function> (Tom)\n      </para>\n\n      <para>\n       The macro <literal>SPI_ERROR_CURSOR</> still exists but will\n       never be returned.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       SPI plan pointers are now declared as <literal>SPIPlanPtr</> instead of\n       <literal>void *</> (Tom)\n      </para>\n\n      <para>\n       This does not break application code, but switching is\n       recommended to help catch simple programming mistakes.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Build Options</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Add <application>configure</> option <literal>--enable-profiling</>\n       to enable code profiling (works only with <application>gcc</>)\n       (Korry Douglas and Nikhil Sontakke)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <application>configure</> option <literal>--with-system-tzdata</>\n       to use the operating system's time zone database (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Fix <acronym>PGXS</> so extensions can be built against PostgreSQL\n       installations whose <application>pg_config</> program does not\n       appear first in the <varname>PATH</> (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Support <command>gmake draft</command> when building the\n       <acronym>SGML</> documentation (Bruce)\n      </para>\n\n      <para>\n       Unless <literal>draft</> is used, the documentation build will\n       now be repeated if necessary to ensure the index is up-to-date.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Source Code</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Rename macro <literal>DLLIMPORT</> to <literal>PGDLLIMPORT</> to\n       avoid conflicting with third party includes (like Tcl) that\n       define <literal>DLLIMPORT</> (Magnus)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Create <quote>operator families</quote> to improve planning of\n       queries involving cross-data-type comparisons (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Update GIN <function>extractQuery()</> API to allow signalling\n       that nothing can satisfy the query (Teodor)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Move <literal>NAMEDATALEN</> definition from\n       <filename>postgres_ext.h</> to <filename>pg_config_manual.h</>\n       (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Provide <function>strlcpy()</function> and\n       <function>strlcat()</function> on all platforms, and replace\n       error-prone uses of <function>strncpy()</function>,\n       <function>strncat()</function>, etc (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Create hooks to let an external plugin monitor (or even replace) the\n       planner and create plans for hypothetical situations (Gurjeet\n       Singh, Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Create a function variable <literal>join_search_hook</> to let plugins\n       override the join search order portion of the planner (Julius\n       Stroffek)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <function>tas()</> support for Renesas' M32R processor\n       (Kazuhiro Inaoka)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <function>quote_identifier()</function> and\n       <application>pg_dump</application> no longer quote keywords that are\n       unreserved according to the grammar (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Change the on-disk representation of the <type>NUMERIC</type>\n       data type so that the <structfield>sign_dscale</> word comes\n       before the weight (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Use <acronym>SYSV</> semaphores rather than POSIX on Darwin\n       &gt;= 6.0, i.e., macOS 10.2 and up (Chris Marcellino)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <link linkend=\"acronyms\">acronym</link> and <link\n       linkend=\"creating-cluster-nfs\">NFS</link> documentation\n       sections (Bruce)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       \"Postgres\" is now documented as an accepted alias for\n       \"PostgreSQL\" (Peter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add documentation about preventing database server spoofing when\n       the server is down (Bruce)\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n\n   <sect3>\n    <title>Contrib</title>\n    <itemizedlist>\n\n     <listitem>\n      <para>\n       Move <filename>contrib</> <filename>README</> content into the\n       main <productname>PostgreSQL</> documentation (Albert Cervera i\n       Areny)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <filename>contrib/pageinspect</filename> module for low-level\n       page inspection (Simon, Heikki)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <filename>contrib/pg_standby</filename> module for controlling\n       warm standby operation (Simon)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <filename>contrib/uuid-ossp</filename> module for generating\n       <type>UUID</> values using the OSSP UUID library (Peter)\n      </para>\n\n      <para>\n       Use <application>configure</>\n       <literal>--with-ossp-uuid</literal> to activate. This takes\n       advantage of the new <type>UUID</type> builtin type.\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add <filename>contrib/dict_int</filename>,\n       <filename>contrib/dict_xsyn</filename>, and\n       <filename>contrib/test_parser</filename> modules to provide\n       sample add-on text search dictionary templates and parsers\n       (Sergey Karpov)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Allow <application>contrib/pgbench</> to set the fillfactor (Pavan\n       Deolasee)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add timestamps to <application>contrib/pgbench</> <literal>-l</>\n       (Greg Smith)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add usage count statistics to\n       <filename>contrib/pgbuffercache</filename> (Greg Smith)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add GIN support for <filename>contrib/hstore</> (Teodor)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Add GIN support for <filename>contrib/pg_trgm</> (Guillaume Smet, Teodor)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Update OS/X startup scripts in\n       <filename>contrib/start-scripts</filename> (Mark Cotner, David\n       Fetter)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Restrict <function>pgrowlocks()</function> and\n       <function>dblink_get_pkey()</function> to users who have\n       <literal>SELECT</literal> privilege on the target table (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       Restrict <filename>contrib/pgstattuple</filename> functions to\n       superusers (Tom)\n      </para>\n     </listitem>\n\n     <listitem>\n      <para>\n       <filename>contrib/xml2</filename> is deprecated and planned for\n       removal in 8.4 (Peter)\n      </para>\n\n      <para>\n       The new XML support in core PostgreSQL supersedes this module.\n      </para>\n     </listitem>\n\n    </itemizedlist>\n\n   </sect3>\n  </sect2>\n </sect1>\n",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/doc/src/sgml/html/release-8-4-8.html": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>E.171.\u00a0Release 8.4.8</title><link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheet.css\" /><link rev=\"made\" href=\"pgsql-docs@postgresql.org\" /><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.79.1\" /><link rel=\"prev\" href=\"release-8-4-9.html\" title=\"E.170.\u00a0Release 8.4.9\" /><link rel=\"next\" href=\"release-8-4-7.html\" title=\"E.172.\u00a0Release 8.4.7\" /></head><body><div xmlns=\"http://www.w3.org/TR/xhtml1/transitional\" class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"5\" align=\"center\">E.171.\u00a0Release 8.4.8</th></tr><tr><td width=\"10%\" align=\"left\"><a accesskey=\"p\" href=\"release-8-4-9.html\" title=\"E.170.\u00a0Release 8.4.9\">Prev</a>\u00a0</td><td width=\"10%\" align=\"left\"><a accesskey=\"u\" href=\"release.html\" title=\"Appendix\u00a0E.\u00a0Release Notes\">Up</a></td><th width=\"60%\" align=\"center\">Appendix\u00a0E.\u00a0Release Notes</th><td width=\"10%\" align=\"right\"><a accesskey=\"h\" href=\"index.html\" title=\"PostgreSQL 10.6 Documentation\">Home</a></td><td width=\"10%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"release-8-4-7.html\" title=\"E.172.\u00a0Release 8.4.7\">Next</a></td></tr></table><hr></hr></div><div class=\"sect1\" id=\"RELEASE-8-4-8\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\">E.171.\u00a0Release 8.4.8</h2></div></div></div><div class=\"toc\"><dl class=\"toc\"><dt><span class=\"sect2\"><a href=\"release-8-4-8.html#id-1.11.6.175.4\">E.171.1. Migration to Version 8.4.8</a></span></dt><dt><span class=\"sect2\"><a href=\"release-8-4-8.html#id-1.11.6.175.5\">E.171.2. Changes</a></span></dt></dl></div><p><strong>Release date:\u00a0</strong>2011-04-18</p><p>   This release contains a variety of fixes from 8.4.7.\n   For information about new features in the 8.4 major release, see\n   <a class=\"xref\" href=\"release-8-4.html\" title=\"E.179.\u00a0Release 8.4\">Section\u00a0E.179</a>.\n  </p><div class=\"sect2\" id=\"id-1.11.6.175.4\"><div class=\"titlepage\"><div><div><h3 class=\"title\">E.171.1.\u00a0Migration to Version 8.4.8</h3></div></div></div><p>    A dump/restore is not required for those running 8.4.X.\n   </p><p>    However, if your installation was upgraded from a previous major\n    release by running <span class=\"application\">pg_upgrade</span>, you should take\n    action to prevent possible data loss due to a now-fixed bug in\n    <span class=\"application\">pg_upgrade</span>.  The recommended solution is to run\n    <code class=\"command\">VACUUM FREEZE</code> on all TOAST tables.\n    More information is available at <a class=\"ulink\" href=\"http://wiki.postgresql.org/wiki/20110408pg_upgrade_fix\" target=\"_top\">    http://wiki.postgresql.org/wiki/20110408pg_upgrade_fix</a>.\n   </p><p>    Also, if you are upgrading from a version earlier than 8.4.2,\n    see <a class=\"xref\" href=\"release-8-4-2.html\" title=\"E.177.\u00a0Release 8.4.2\">Section\u00a0E.177</a>.\n   </p></div><div class=\"sect2\" id=\"id-1.11.6.175.5\"><div class=\"titlepage\"><div><div><h3 class=\"title\">E.171.2.\u00a0Changes</h3></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>      Fix <span class=\"application\">pg_upgrade</span>'s handling of TOAST tables\n      (Bruce Momjian)\n     </p><p>      The <code class=\"structname\">pg_class</code>.<code class=\"structfield\">relfrozenxid</code> value for\n      TOAST tables was not correctly copied into the new installation\n      during <span class=\"application\">pg_upgrade</span>.  This could later result in\n      <code class=\"literal\">pg_clog</code> files being discarded while they were still\n      needed to validate tuples in the TOAST tables, leading to\n      <span class=\"quote\">\u201c<span class=\"quote\">could not access status of transaction</span>\u201d</span> failures.\n     </p><p>      This error poses a significant risk of data loss for installations\n      that have been upgraded with <span class=\"application\">pg_upgrade</span>.  This patch\n      corrects the problem for future uses of <span class=\"application\">pg_upgrade</span>,\n      but does not in itself cure the issue in installations that have been\n      processed with a buggy version of <span class=\"application\">pg_upgrade</span>.\n     </p></li><li class=\"listitem\"><p>      Suppress incorrect <span class=\"quote\">\u201c<span class=\"quote\">PD_ALL_VISIBLE flag was incorrectly set</span>\u201d</span>\n      warning (Heikki Linnakangas)\n     </p><p>      <code class=\"command\">VACUUM</code> would sometimes issue this warning in cases that\n      are actually valid.\n     </p></li><li class=\"listitem\"><p>      Disallow including a composite type in itself (Tom Lane)\n     </p><p>      This prevents scenarios wherein the server could recurse infinitely\n      while processing the composite type.  While there are some possible\n      uses for such a structure, they don't seem compelling enough to\n      justify the effort required to make sure it always works safely.\n     </p></li><li class=\"listitem\"><p>      Avoid potential deadlock during catalog cache initialization\n      (Nikhil Sontakke)\n     </p><p>      In some cases the cache loading code would acquire share lock on a\n      system index before locking the index's catalog.  This could deadlock\n      against processes trying to acquire exclusive locks in the other,\n      more standard order.\n     </p></li><li class=\"listitem\"><p>      Fix dangling-pointer problem in <code class=\"literal\">BEFORE ROW UPDATE</code> trigger\n      handling when there was a concurrent update to the target tuple\n      (Tom Lane)\n     </p><p>      This bug has been observed to result in intermittent <span class=\"quote\">\u201c<span class=\"quote\">cannot\n      extract system attribute from virtual tuple</span>\u201d</span> failures while trying to\n      do <code class=\"literal\">UPDATE RETURNING ctid</code>.  There is a very small probability\n      of more serious errors, such as generating incorrect index entries for\n      the updated tuple.\n     </p></li><li class=\"listitem\"><p>      Disallow <code class=\"command\">DROP TABLE</code> when there are pending deferred trigger\n      events for the table (Tom Lane)\n     </p><p>      Formerly the <code class=\"command\">DROP</code> would go through, leading to\n      <span class=\"quote\">\u201c<span class=\"quote\">could not open relation with OID nnn</span>\u201d</span> errors when the\n      triggers were eventually fired.\n     </p></li><li class=\"listitem\"><p>      Prevent crash triggered by constant-false WHERE conditions during\n      GEQO optimization (Tom Lane)\n     </p></li><li class=\"listitem\"><p>      Improve planner's handling of semi-join and anti-join cases\n      (Tom Lane)\n     </p></li><li class=\"listitem\"><p>      Fix selectivity estimation for text search to account for NULLs\n      (Jesper Krogh)\n     </p></li><li class=\"listitem\"><p>      Improve PL/pgSQL's ability to handle row types with dropped columns\n      (Pavel Stehule)\n     </p><p>      This is a back-patch of fixes previously made in 9.0.\n     </p></li><li class=\"listitem\"><p>      Fix PL/Python memory leak involving array slices (Daniel Popowich)\n     </p></li><li class=\"listitem\"><p>      Fix <span class=\"application\">pg_restore</span> to cope with long lines (over 1KB) in\n      TOC files (Tom Lane)\n     </p></li><li class=\"listitem\"><p>      Put in more safeguards against crashing due to division-by-zero\n      with overly enthusiastic compiler optimization (Aurelien Jarno)\n     </p></li><li class=\"listitem\"><p>      Support use of dlopen() in FreeBSD and OpenBSD on MIPS (Tom Lane)\n     </p><p>      There was a hard-wired assumption that this system function was not\n      available on MIPS hardware on these systems.  Use a compile-time test\n      instead, since more recent versions have it.\n     </p></li><li class=\"listitem\"><p>      Fix compilation failures on HP-UX (Heikki Linnakangas)\n     </p></li><li class=\"listitem\"><p>      Fix version-incompatibility problem with <span class=\"application\">libintl</span> on\n      Windows (Hiroshi Inoue)\n     </p></li><li class=\"listitem\"><p>      Fix usage of <span class=\"application\">xcopy</span> in Windows build scripts to\n      work correctly under Windows 7 (Andrew Dunstan)\n     </p><p>      This affects the build scripts only, not installation or usage.\n     </p></li><li class=\"listitem\"><p>      Fix path separator used by <span class=\"application\">pg_regress</span> on Cygwin\n      (Andrew Dunstan)\n     </p></li><li class=\"listitem\"><p>      Update time zone data files to <span class=\"application\">tzdata</span> release 2011f\n      for DST law changes in Chile, Cuba, Falkland Islands, Morocco, Samoa,\n      and Turkey; also historical corrections for South Australia, Alaska,\n      and Hawaii.\n     </p></li></ul></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"release-8-4-9.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"release.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"release-8-4-7.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">E.170.\u00a0Release 8.4.9\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0E.172.\u00a0Release 8.4.7</td></tr></table></div></body></html>",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/doc/src/sgml/html/release-9-0-4.html": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>E.152.\u00a0Release 9.0.4</title><link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheet.css\" /><link rev=\"made\" href=\"pgsql-docs@postgresql.org\" /><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.79.1\" /><link rel=\"prev\" href=\"release-9-0-5.html\" title=\"E.151.\u00a0Release 9.0.5\" /><link rel=\"next\" href=\"release-9-0-3.html\" title=\"E.153.\u00a0Release 9.0.3\" /></head><body><div xmlns=\"http://www.w3.org/TR/xhtml1/transitional\" class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"5\" align=\"center\">E.152.\u00a0Release 9.0.4</th></tr><tr><td width=\"10%\" align=\"left\"><a accesskey=\"p\" href=\"release-9-0-5.html\" title=\"E.151.\u00a0Release 9.0.5\">Prev</a>\u00a0</td><td width=\"10%\" align=\"left\"><a accesskey=\"u\" href=\"release.html\" title=\"Appendix\u00a0E.\u00a0Release Notes\">Up</a></td><th width=\"60%\" align=\"center\">Appendix\u00a0E.\u00a0Release Notes</th><td width=\"10%\" align=\"right\"><a accesskey=\"h\" href=\"index.html\" title=\"PostgreSQL 10.6 Documentation\">Home</a></td><td width=\"10%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"release-9-0-3.html\" title=\"E.153.\u00a0Release 9.0.3\">Next</a></td></tr></table><hr></hr></div><div class=\"sect1\" id=\"RELEASE-9-0-4\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\">E.152.\u00a0Release 9.0.4</h2></div></div></div><div class=\"toc\"><dl class=\"toc\"><dt><span class=\"sect2\"><a href=\"release-9-0-4.html#id-1.11.6.156.4\">E.152.1. Migration to Version 9.0.4</a></span></dt><dt><span class=\"sect2\"><a href=\"release-9-0-4.html#id-1.11.6.156.5\">E.152.2. Changes</a></span></dt></dl></div><p><strong>Release date:\u00a0</strong>2011-04-18</p><p>   This release contains a variety of fixes from 9.0.3.\n   For information about new features in the 9.0 major release, see\n   <a class=\"xref\" href=\"release-9-0.html\" title=\"E.156.\u00a0Release 9.0\">Section\u00a0E.156</a>.\n  </p><div class=\"sect2\" id=\"id-1.11.6.156.4\"><div class=\"titlepage\"><div><div><h3 class=\"title\">E.152.1.\u00a0Migration to Version 9.0.4</h3></div></div></div><p>    A dump/restore is not required for those running 9.0.X.\n   </p><p>    However, if your installation was upgraded from a previous major\n    release by running <span class=\"application\">pg_upgrade</span>, you should take\n    action to prevent possible data loss due to a now-fixed bug in\n    <span class=\"application\">pg_upgrade</span>.  The recommended solution is to run\n    <code class=\"command\">VACUUM FREEZE</code> on all TOAST tables.\n    More information is available at <a class=\"ulink\" href=\"http://wiki.postgresql.org/wiki/20110408pg_upgrade_fix\" target=\"_top\">    http://wiki.postgresql.org/wiki/20110408pg_upgrade_fix</a>.\n   </p></div><div class=\"sect2\" id=\"id-1.11.6.156.5\"><div class=\"titlepage\"><div><div><h3 class=\"title\">E.152.2.\u00a0Changes</h3></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>      Fix <span class=\"application\">pg_upgrade</span>'s handling of TOAST tables\n      (Bruce Momjian)\n     </p><p>      The <code class=\"structname\">pg_class</code>.<code class=\"structfield\">relfrozenxid</code> value for\n      TOAST tables was not correctly copied into the new installation\n      during <span class=\"application\">pg_upgrade</span>.  This could later result in\n      <code class=\"literal\">pg_clog</code> files being discarded while they were still\n      needed to validate tuples in the TOAST tables, leading to\n      <span class=\"quote\">\u201c<span class=\"quote\">could not access status of transaction</span>\u201d</span> failures.\n     </p><p>      This error poses a significant risk of data loss for installations\n      that have been upgraded with <span class=\"application\">pg_upgrade</span>.  This patch\n      corrects the problem for future uses of <span class=\"application\">pg_upgrade</span>,\n      but does not in itself cure the issue in installations that have been\n      processed with a buggy version of <span class=\"application\">pg_upgrade</span>.\n     </p></li><li class=\"listitem\"><p>      Suppress incorrect <span class=\"quote\">\u201c<span class=\"quote\">PD_ALL_VISIBLE flag was incorrectly set</span>\u201d</span>\n      warning (Heikki Linnakangas)\n     </p><p>      <code class=\"command\">VACUUM</code> would sometimes issue this warning in cases that\n      are actually valid.\n     </p></li><li class=\"listitem\"><p>      Use better SQLSTATE error codes for hot standby conflict cases\n      (Tatsuo Ishii and Simon Riggs)\n     </p><p>      All retryable conflict errors now have an error code that indicates\n      that a retry is possible.  Also, session closure due to the database\n      being dropped on the master is now reported as\n      <code class=\"literal\">ERRCODE_DATABASE_DROPPED</code>, rather than\n      <code class=\"literal\">ERRCODE_ADMIN_SHUTDOWN</code>, so that connection poolers can\n      handle the situation correctly.\n     </p></li><li class=\"listitem\"><p>      Prevent intermittent hang in interactions of startup process with\n      bgwriter process (Simon Riggs)\n     </p><p>      This affected recovery in non-hot-standby cases.\n     </p></li><li class=\"listitem\"><p>      Disallow including a composite type in itself (Tom Lane)\n     </p><p>      This prevents scenarios wherein the server could recurse infinitely\n      while processing the composite type.  While there are some possible\n      uses for such a structure, they don't seem compelling enough to\n      justify the effort required to make sure it always works safely.\n     </p></li><li class=\"listitem\"><p>      Avoid potential deadlock during catalog cache initialization\n      (Nikhil Sontakke)\n     </p><p>      In some cases the cache loading code would acquire share lock on a\n      system index before locking the index's catalog.  This could deadlock\n      against processes trying to acquire exclusive locks in the other,\n      more standard order.\n     </p></li><li class=\"listitem\"><p>      Fix dangling-pointer problem in <code class=\"literal\">BEFORE ROW UPDATE</code> trigger\n      handling when there was a concurrent update to the target tuple\n      (Tom Lane)\n     </p><p>      This bug has been observed to result in intermittent <span class=\"quote\">\u201c<span class=\"quote\">cannot\n      extract system attribute from virtual tuple</span>\u201d</span> failures while trying to\n      do <code class=\"literal\">UPDATE RETURNING ctid</code>.  There is a very small probability\n      of more serious errors, such as generating incorrect index entries for\n      the updated tuple.\n     </p></li><li class=\"listitem\"><p>      Disallow <code class=\"command\">DROP TABLE</code> when there are pending deferred trigger\n      events for the table (Tom Lane)\n     </p><p>      Formerly the <code class=\"command\">DROP</code> would go through, leading to\n      <span class=\"quote\">\u201c<span class=\"quote\">could not open relation with OID nnn</span>\u201d</span> errors when the\n      triggers were eventually fired.\n     </p></li><li class=\"listitem\"><p>      Allow <span class=\"quote\">\u201c<span class=\"quote\">replication</span>\u201d</span> as a user name in\n      <code class=\"filename\">pg_hba.conf</code> (Andrew Dunstan)\n     </p><p>      <span class=\"quote\">\u201c<span class=\"quote\">replication</span>\u201d</span> is special in the database name column, but it\n      was mistakenly also treated as special in the user name column.\n     </p></li><li class=\"listitem\"><p>      Prevent crash triggered by constant-false WHERE conditions during\n      GEQO optimization (Tom Lane)\n     </p></li><li class=\"listitem\"><p>      Improve planner's handling of semi-join and anti-join cases\n      (Tom Lane)\n     </p></li><li class=\"listitem\"><p>      Fix handling of <code class=\"literal\">SELECT FOR UPDATE</code> in a sub-SELECT\n      (Tom Lane)\n     </p><p>      This bug typically led to <span class=\"quote\">\u201c<span class=\"quote\">cannot extract system attribute from\n      virtual tuple</span>\u201d</span> errors.\n     </p></li><li class=\"listitem\"><p>      Fix selectivity estimation for text search to account for NULLs\n      (Jesper Krogh)\n     </p></li><li class=\"listitem\"><p>      Fix get_actual_variable_range() to support hypothetical indexes\n      injected by an index adviser plugin (Gurjeet Singh)\n     </p></li><li class=\"listitem\"><p>      Fix PL/Python memory leak involving array slices (Daniel Popowich)\n     </p></li><li class=\"listitem\"><p>      Allow <span class=\"application\">libpq</span>'s SSL initialization to succeed when\n      user's home directory is unavailable (Tom Lane)\n     </p><p>      If the SSL mode is such that a root certificate file is not required,\n      there is no need to fail.  This change restores the behavior to what\n      it was in pre-9.0 releases.\n     </p></li><li class=\"listitem\"><p>      Fix <span class=\"application\">libpq</span> to return a useful error message for errors\n      detected in <code class=\"function\">conninfo_array_parse</code> (Joseph Adams)\n     </p><p>      A typo caused the library to return NULL, rather than the\n      <code class=\"structname\">PGconn</code> structure containing the error message, to the\n      application.\n     </p></li><li class=\"listitem\"><p>      Fix <span class=\"application\">ecpg</span> preprocessor's handling of float constants\n      (Heikki Linnakangas)\n     </p></li><li class=\"listitem\"><p>      Fix parallel <span class=\"application\">pg_restore</span> to handle comments on\n      POST_DATA items correctly (Arnd Hannemann)\n     </p></li><li class=\"listitem\"><p>      Fix <span class=\"application\">pg_restore</span> to cope with long lines (over 1KB) in\n      TOC files (Tom Lane)\n     </p></li><li class=\"listitem\"><p>      Put in more safeguards against crashing due to division-by-zero\n      with overly enthusiastic compiler optimization (Aurelien Jarno)\n     </p></li><li class=\"listitem\"><p>      Support use of dlopen() in FreeBSD and OpenBSD on MIPS (Tom Lane)\n     </p><p>      There was a hard-wired assumption that this system function was not\n      available on MIPS hardware on these systems.  Use a compile-time test\n      instead, since more recent versions have it.\n     </p></li><li class=\"listitem\"><p>      Fix compilation failures on HP-UX (Heikki Linnakangas)\n     </p></li><li class=\"listitem\"><p>      Avoid crash when trying to write to the Windows console very early\n      in process startup (Rushabh Lathia)\n     </p></li><li class=\"listitem\"><p>      Support building with MinGW 64 bit compiler for Windows\n      (Andrew Dunstan)\n     </p></li><li class=\"listitem\"><p>      Fix version-incompatibility problem with <span class=\"application\">libintl</span> on\n      Windows (Hiroshi Inoue)\n     </p></li><li class=\"listitem\"><p>      Fix usage of <span class=\"application\">xcopy</span> in Windows build scripts to\n      work correctly under Windows 7 (Andrew Dunstan)\n     </p><p>      This affects the build scripts only, not installation or usage.\n     </p></li><li class=\"listitem\"><p>      Fix path separator used by <span class=\"application\">pg_regress</span> on Cygwin\n      (Andrew Dunstan)\n     </p></li><li class=\"listitem\"><p>      Update time zone data files to <span class=\"application\">tzdata</span> release 2011f\n      for DST law changes in Chile, Cuba, Falkland Islands, Morocco, Samoa,\n      and Turkey; also historical corrections for South Australia, Alaska,\n      and Hawaii.\n     </p></li></ul></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"release-9-0-5.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"release.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"release-9-0-3.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">E.151.\u00a0Release 9.0.5\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0E.153.\u00a0Release 9.0.3</td></tr></table></div></body></html>",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/doc/src/sgml/html/release-8-2-21.html": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>E.206.\u00a0Release 8.2.21</title><link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheet.css\" /><link rev=\"made\" href=\"pgsql-docs@postgresql.org\" /><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.79.1\" /><link rel=\"prev\" href=\"release-8-2-22.html\" title=\"E.205.\u00a0Release 8.2.22\" /><link rel=\"next\" href=\"release-8-2-20.html\" title=\"E.207.\u00a0Release 8.2.20\" /></head><body><div xmlns=\"http://www.w3.org/TR/xhtml1/transitional\" class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"5\" align=\"center\">E.206.\u00a0Release 8.2.21</th></tr><tr><td width=\"10%\" align=\"left\"><a accesskey=\"p\" href=\"release-8-2-22.html\" title=\"E.205.\u00a0Release 8.2.22\">Prev</a>\u00a0</td><td width=\"10%\" align=\"left\"><a accesskey=\"u\" href=\"release.html\" title=\"Appendix\u00a0E.\u00a0Release Notes\">Up</a></td><th width=\"60%\" align=\"center\">Appendix\u00a0E.\u00a0Release Notes</th><td width=\"10%\" align=\"right\"><a accesskey=\"h\" href=\"index.html\" title=\"PostgreSQL 10.6 Documentation\">Home</a></td><td width=\"10%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"release-8-2-20.html\" title=\"E.207.\u00a0Release 8.2.20\">Next</a></td></tr></table><hr></hr></div><div class=\"sect1\" id=\"RELEASE-8-2-21\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\">E.206.\u00a0Release 8.2.21</h2></div></div></div><div class=\"toc\"><dl class=\"toc\"><dt><span class=\"sect2\"><a href=\"release-8-2-21.html#id-1.11.6.210.4\">E.206.1. Migration to Version 8.2.21</a></span></dt><dt><span class=\"sect2\"><a href=\"release-8-2-21.html#id-1.11.6.210.5\">E.206.2. Changes</a></span></dt></dl></div><p><strong>Release date:\u00a0</strong>2011-04-18</p><p>   This release contains a variety of fixes from 8.2.20.\n   For information about new features in the 8.2 major release, see\n   <a class=\"xref\" href=\"release-8-2.html\" title=\"E.227.\u00a0Release 8.2\">Section\u00a0E.227</a>.\n  </p><div class=\"sect2\" id=\"id-1.11.6.210.4\"><div class=\"titlepage\"><div><div><h3 class=\"title\">E.206.1.\u00a0Migration to Version 8.2.21</h3></div></div></div><p>    A dump/restore is not required for those running 8.2.X.\n    However, if you are upgrading from a version earlier than 8.2.14,\n    see <a class=\"xref\" href=\"release-8-2-14.html\" title=\"E.213.\u00a0Release 8.2.14\">Section\u00a0E.213</a>.\n   </p></div><div class=\"sect2\" id=\"id-1.11.6.210.5\"><div class=\"titlepage\"><div><div><h3 class=\"title\">E.206.2.\u00a0Changes</h3></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>      Avoid potential deadlock during catalog cache initialization\n      (Nikhil Sontakke)\n     </p><p>      In some cases the cache loading code would acquire share lock on a\n      system index before locking the index's catalog.  This could deadlock\n      against processes trying to acquire exclusive locks in the other,\n      more standard order.\n     </p></li><li class=\"listitem\"><p>      Fix dangling-pointer problem in <code class=\"literal\">BEFORE ROW UPDATE</code> trigger\n      handling when there was a concurrent update to the target tuple\n      (Tom Lane)\n     </p><p>      This bug has been observed to result in intermittent <span class=\"quote\">\u201c<span class=\"quote\">cannot\n      extract system attribute from virtual tuple</span>\u201d</span> failures while trying to\n      do <code class=\"literal\">UPDATE RETURNING ctid</code>.  There is a very small probability\n      of more serious errors, such as generating incorrect index entries for\n      the updated tuple.\n     </p></li><li class=\"listitem\"><p>      Disallow <code class=\"command\">DROP TABLE</code> when there are pending deferred trigger\n      events for the table (Tom Lane)\n     </p><p>      Formerly the <code class=\"command\">DROP</code> would go through, leading to\n      <span class=\"quote\">\u201c<span class=\"quote\">could not open relation with OID nnn</span>\u201d</span> errors when the\n      triggers were eventually fired.\n     </p></li><li class=\"listitem\"><p>      Fix PL/Python memory leak involving array slices (Daniel Popowich)\n     </p></li><li class=\"listitem\"><p>      Fix <span class=\"application\">pg_restore</span> to cope with long lines (over 1KB) in\n      TOC files (Tom Lane)\n     </p></li><li class=\"listitem\"><p>      Put in more safeguards against crashing due to division-by-zero\n      with overly enthusiastic compiler optimization (Aurelien Jarno)\n     </p></li><li class=\"listitem\"><p>      Support use of dlopen() in FreeBSD and OpenBSD on MIPS (Tom Lane)\n     </p><p>      There was a hard-wired assumption that this system function was not\n      available on MIPS hardware on these systems.  Use a compile-time test\n      instead, since more recent versions have it.\n     </p></li><li class=\"listitem\"><p>      Fix compilation failures on HP-UX (Heikki Linnakangas)\n     </p></li><li class=\"listitem\"><p>      Fix path separator used by <span class=\"application\">pg_regress</span> on Cygwin\n      (Andrew Dunstan)\n     </p></li><li class=\"listitem\"><p>      Update time zone data files to <span class=\"application\">tzdata</span> release 2011f\n      for DST law changes in Chile, Cuba, Falkland Islands, Morocco, Samoa,\n      and Turkey; also historical corrections for South Australia, Alaska,\n      and Hawaii.\n     </p></li></ul></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"release-8-2-22.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"release.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"release-8-2-20.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">E.205.\u00a0Release 8.2.22\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0E.207.\u00a0Release 8.2.20</td></tr></table></div></body></html>",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/doc/src/sgml/html/release-8-3-15.html": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>E.188.\u00a0Release 8.3.15</title><link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheet.css\" /><link rev=\"made\" href=\"pgsql-docs@postgresql.org\" /><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.79.1\" /><link rel=\"prev\" href=\"release-8-3-16.html\" title=\"E.187.\u00a0Release 8.3.16\" /><link rel=\"next\" href=\"release-8-3-14.html\" title=\"E.189.\u00a0Release 8.3.14\" /></head><body><div xmlns=\"http://www.w3.org/TR/xhtml1/transitional\" class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"5\" align=\"center\">E.188.\u00a0Release 8.3.15</th></tr><tr><td width=\"10%\" align=\"left\"><a accesskey=\"p\" href=\"release-8-3-16.html\" title=\"E.187.\u00a0Release 8.3.16\">Prev</a>\u00a0</td><td width=\"10%\" align=\"left\"><a accesskey=\"u\" href=\"release.html\" title=\"Appendix\u00a0E.\u00a0Release Notes\">Up</a></td><th width=\"60%\" align=\"center\">Appendix\u00a0E.\u00a0Release Notes</th><td width=\"10%\" align=\"right\"><a accesskey=\"h\" href=\"index.html\" title=\"PostgreSQL 10.6 Documentation\">Home</a></td><td width=\"10%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"release-8-3-14.html\" title=\"E.189.\u00a0Release 8.3.14\">Next</a></td></tr></table><hr></hr></div><div class=\"sect1\" id=\"RELEASE-8-3-15\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\">E.188.\u00a0Release 8.3.15</h2></div></div></div><div class=\"toc\"><dl class=\"toc\"><dt><span class=\"sect2\"><a href=\"release-8-3-15.html#id-1.11.6.192.4\">E.188.1. Migration to Version 8.3.15</a></span></dt><dt><span class=\"sect2\"><a href=\"release-8-3-15.html#id-1.11.6.192.5\">E.188.2. Changes</a></span></dt></dl></div><p><strong>Release date:\u00a0</strong>2011-04-18</p><p>   This release contains a variety of fixes from 8.3.14.\n   For information about new features in the 8.3 major release, see\n   <a class=\"xref\" href=\"release-8-3.html\" title=\"E.203.\u00a0Release 8.3\">Section\u00a0E.203</a>.\n  </p><div class=\"sect2\" id=\"id-1.11.6.192.4\"><div class=\"titlepage\"><div><div><h3 class=\"title\">E.188.1.\u00a0Migration to Version 8.3.15</h3></div></div></div><p>    A dump/restore is not required for those running 8.3.X.\n    However, if you are upgrading from a version earlier than 8.3.8,\n    see <a class=\"xref\" href=\"release-8-3-8.html\" title=\"E.195.\u00a0Release 8.3.8\">Section\u00a0E.195</a>.\n   </p></div><div class=\"sect2\" id=\"id-1.11.6.192.5\"><div class=\"titlepage\"><div><div><h3 class=\"title\">E.188.2.\u00a0Changes</h3></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>      Disallow including a composite type in itself (Tom Lane)\n     </p><p>      This prevents scenarios wherein the server could recurse infinitely\n      while processing the composite type.  While there are some possible\n      uses for such a structure, they don't seem compelling enough to\n      justify the effort required to make sure it always works safely.\n     </p></li><li class=\"listitem\"><p>      Avoid potential deadlock during catalog cache initialization\n      (Nikhil Sontakke)\n     </p><p>      In some cases the cache loading code would acquire share lock on a\n      system index before locking the index's catalog.  This could deadlock\n      against processes trying to acquire exclusive locks in the other,\n      more standard order.\n     </p></li><li class=\"listitem\"><p>      Fix dangling-pointer problem in <code class=\"literal\">BEFORE ROW UPDATE</code> trigger\n      handling when there was a concurrent update to the target tuple\n      (Tom Lane)\n     </p><p>      This bug has been observed to result in intermittent <span class=\"quote\">\u201c<span class=\"quote\">cannot\n      extract system attribute from virtual tuple</span>\u201d</span> failures while trying to\n      do <code class=\"literal\">UPDATE RETURNING ctid</code>.  There is a very small probability\n      of more serious errors, such as generating incorrect index entries for\n      the updated tuple.\n     </p></li><li class=\"listitem\"><p>      Disallow <code class=\"command\">DROP TABLE</code> when there are pending deferred trigger\n      events for the table (Tom Lane)\n     </p><p>      Formerly the <code class=\"command\">DROP</code> would go through, leading to\n      <span class=\"quote\">\u201c<span class=\"quote\">could not open relation with OID nnn</span>\u201d</span> errors when the\n      triggers were eventually fired.\n     </p></li><li class=\"listitem\"><p>      Fix PL/Python memory leak involving array slices (Daniel Popowich)\n     </p></li><li class=\"listitem\"><p>      Fix <span class=\"application\">pg_restore</span> to cope with long lines (over 1KB) in\n      TOC files (Tom Lane)\n     </p></li><li class=\"listitem\"><p>      Put in more safeguards against crashing due to division-by-zero\n      with overly enthusiastic compiler optimization (Aurelien Jarno)\n     </p></li><li class=\"listitem\"><p>      Support use of dlopen() in FreeBSD and OpenBSD on MIPS (Tom Lane)\n     </p><p>      There was a hard-wired assumption that this system function was not\n      available on MIPS hardware on these systems.  Use a compile-time test\n      instead, since more recent versions have it.\n     </p></li><li class=\"listitem\"><p>      Fix compilation failures on HP-UX (Heikki Linnakangas)\n     </p></li><li class=\"listitem\"><p>      Fix version-incompatibility problem with <span class=\"application\">libintl</span> on\n      Windows (Hiroshi Inoue)\n     </p></li><li class=\"listitem\"><p>      Fix usage of <span class=\"application\">xcopy</span> in Windows build scripts to\n      work correctly under Windows 7 (Andrew Dunstan)\n     </p><p>      This affects the build scripts only, not installation or usage.\n     </p></li><li class=\"listitem\"><p>      Fix path separator used by <span class=\"application\">pg_regress</span> on Cygwin\n      (Andrew Dunstan)\n     </p></li><li class=\"listitem\"><p>      Update time zone data files to <span class=\"application\">tzdata</span> release 2011f\n      for DST law changes in Chile, Cuba, Falkland Islands, Morocco, Samoa,\n      and Turkey; also historical corrections for South Australia, Alaska,\n      and Hawaii.\n     </p></li></ul></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"release-8-3-16.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"release.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"release-8-3-14.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">E.187.\u00a0Release 8.3.16\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0E.189.\u00a0Release 8.3.14</td></tr></table></div></body></html>"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/bin/pg_config/po/nb.po",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/timezone/tznames/Europe.txt",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/backend/utils/mb/conversion_procs/README.euc_jp",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/port/win32.ico",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/mb/expected/big5.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/mb/expected/mule_internal.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/mb/expected/euc_kr.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/mb/expected/sjis.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/mb/expected/euc_jp.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/mb/expected/gb18030.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/mb/expected/euc_cn.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/mb/expected/euc_tw.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/mb/sql/big5.sql",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/mb/sql/euc_cn.sql",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/mb/sql/gb18030.sql",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/mb/sql/euc_jp.sql",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/mb/sql/mule_internal.sql",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/mb/sql/euc_tw.sql",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/mb/sql/sjis.sql",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/mb/sql/euc_kr.sql",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/gr_GR.ISO8859-7/test-gr-sort.in",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/gr_GR.ISO8859-7/test-gr-select.sql.in",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/gr_GR.ISO8859-7/test-gr.sql.in",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/gr_GR.ISO8859-7/expected/test-gr-sort.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/gr_GR.ISO8859-7/expected/gr-ctype.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/gr_GR.ISO8859-7/expected/test-gr-varchar.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/gr_GR.ISO8859-7/expected/test-gr-char.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/gr_GR.ISO8859-7/expected/test-gr-text.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/gr_GR.ISO8859-7/expected/test-gr-select.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-to-win1251/test-koi8.sql.in",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-to-win1251/test-koi8-sort.in",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-to-win1251/test-koi8-select.sql.in",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-to-win1251/expected/test-koi8-varchar.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-to-win1251/expected/test-koi8-sort.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-to-win1251/expected/test-koi8-text.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-to-win1251/expected/test-koi8-select.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-to-win1251/expected/test-koi8-char.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/de_DE.ISO8859-1/test-de-sort.in",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/de_DE.ISO8859-1/test-de.sql.in",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/de_DE.ISO8859-1/test-de-upper.sql.in",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/de_DE.ISO8859-1/test-de-select.sql.in",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/de_DE.ISO8859-1/expected/test-de-upper-char.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/de_DE.ISO8859-1/expected/test-de-select.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/de_DE.ISO8859-1/expected/test-de-text.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/de_DE.ISO8859-1/expected/de-ctype.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/de_DE.ISO8859-1/expected/test-de-sort.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/de_DE.ISO8859-1/expected/test-de-upper-text.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/de_DE.ISO8859-1/expected/test-de-upper-varchar.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/de_DE.ISO8859-1/expected/test-de-char.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/de_DE.ISO8859-1/expected/test-de-varchar.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-r/test-koi8.sql.in",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-r/test-koi8-sort.in",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-r/test-koi8-select.sql.in",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-r/expected/test-koi8-varchar.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-r/expected/koi8-ctype.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-r/expected/test-koi8-sort.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-r/expected/test-koi8-text.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-r/expected/test-koi8-select.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/src/test/locale/koi8-r/expected/test-koi8-char.sql.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/contrib/unaccent/expected/unaccent.out",
        "/tmp/vanessa/spack-stage/spack-stage-postgresql-10.6-qggpexdcng2qymfchhzhi6suu72bsmwp/spack-src/contrib/unaccent/sql/unaccent.sql"
    ],
    "total_files": 6546
}