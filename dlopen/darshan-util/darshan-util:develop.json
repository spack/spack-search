{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/99_darshan-low-level-direct-libdarshanutils-interaction.ipynb": "{\n \"cells\": [\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"# Direct Interaction with libdarshan-util.so\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"**Note:** In general be advised to use this interface with care until the API stablelized. Many parts of the functionality exposed here used to be for internal use by the command-line utilities only. For very performance sensitive analysis and for troubleshooting this notebook documents how to directly interface with libdarshan-util.so none the less.\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"A relatively convienient interface with C libraries is offered through CFFI:\\n\",\n    \"https://cffi.readthedocs.io/en/latest/\\n\",\n    \"\\n\",\n    \"\\\"C Foreign Function Interface for Python. Interact with almost any C code from Python, based on C-like declarations that you can often copy-paste from header files or documentation.\\\"\\n\",\n    \"\\n\",\n    \"To use, ensure cffi is installed:\\n\",\n    \"\\n\",\n    \"    pip install cffi\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 3,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"import cffi\\n\",\n    \"import ctypes\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"CFFI can used in multiple different configruations allowing for different performance trade offs.\\n\",\n    \"For PyDarshan we assume the library is proved as an already compiled binary (with CFFI in ABI mode), this way only valid header information for data types and function signatures have to be provided.\\n\",\n    \"A valid set of headers is provided as part of `darshan.api_def_c`:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 6,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"from darshan.api_def_c import load_darshan_header\\n\",\n    \"API_def_c = load_darshan_header()\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Setting up CFFI then only requires to initialize the Foreign Function Interface, and then load a shared library as follows:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 10,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"ffi = cffi.FFI()\\n\",\n    \"ffi.cdef(API_def_c)\\n\",\n    \"\\n\",\n    \"libdutil = None\\n\",\n    \"libdutil = ffi.dlopen(\\\"libdarshan-util.so\\\")\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Libdarshan-util provides functionality to interace with Darshan Log files. Analog to the typical C POSIX API darshan logs have first to be opened which returns a file handle which the user has to provide any followup operations.\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"The simplest interaction with library is just obtaining the library version which is hard coded into the library and can be obtained via \u00b4darshan_log_get_lib_version()\u00b4 which returns a char*.\\n\",\n    \"Similar to native C, a variable to hold the reference to the version string has to be provided which can be achieved like so and then gets populated by invoking the actual library function which is exposed as part of the CFFI Object:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 20,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"ver = ffi.new(\\\"char **\\\")\\n\",\n    \"ver = libdutil.darshan_log_get_lib_version()\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Before the string can be accessed as a normal Python object it needs to be transformed as follows:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 23,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"'3.2.1'\"\n      ]\n     },\n     \"execution_count\": 23,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"version = ffi.string(ver).decode(\\\"utf-8\\\")\\n\",\n    \"version\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"### Fetching Records\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"A darshan log contains besides some metadata describing the instrumented execution primarily log records collected by the different modules in compressed form. To access these a number of library interactions have to be performed to capture individual records.\\n\",\n    \"\\n\",\n    \"    1) Open the log and optain a log handle\\n\",\n    \"    2) Request individual log records by requesting records for a particular index\\n\",\n    \"    \\n\",\n    \"Module indexes are defined in \u00b4darshan-log-format.h\u00b4:\\n\",\n    \"\\n\",\n    \"    #define DARSHAN_MODULE_IDS \\\\\\n\",\n    \"        X(DARSHAN_NULL_MOD,     \\\"NULL\\\",     DARSHAN_NULL_VER,       NULL) \\\\\\n\",\n    \"        X(DARSHAN_POSIX_MOD,    \\\"POSIX\\\",    DARSHAN_POSIX_VER,      &posix_logutils) \\\\\\n\",\n    \"        X(DARSHAN_MPIIO_MOD,    \\\"MPI-IO\\\",   DARSHAN_MPIIO_VER,      &mpiio_logutils) \\\\\\n\",\n    \"        X(DARSHAN_H5F_MOD,      \\\"H5F\\\",      DARSHAN_H5F_VER,        &hdf5_file_logutils) \\\\\\n\",\n    \"        X(DARSHAN_H5D_MOD,      \\\"H5D\\\",      DARSHAN_H5D_VER,        &hdf5_dataset_logutils) \\\\\\n\",\n    \"        X(DARSHAN_PNETCDF_MOD,  \\\"PNETCDF\\\",  DARSHAN_PNETCDF_VER,    &pnetcdf_logutils) \\\\\\n\",\n    \"        X(DARSHAN_BGQ_MOD,      \\\"BG/Q\\\",     DARSHAN_BGQ_VER,        &bgq_logutils) \\\\\\n\",\n    \"        X(DARSHAN_LUSTRE_MOD,   \\\"LUSTRE\\\",   DARSHAN_LUSTRE_VER,     &lustre_logutils) \\\\\\n\",\n    \"        X(DARSHAN_STDIO_MOD,    \\\"STDIO\\\",    DARSHAN_STDIO_VER,      &stdio_logutils) \\\\\\n\",\n    \"        /* DXT */ \\\\\\n\",\n    \"        X(DXT_POSIX_MOD,       \\\"DXT_POSIX\\\",  DXT_POSIX_VER,         &dxt_posix_logutils) \\\\\\n\",\n    \"        X(DXT_MPIIO_MOD,       \\\"DXT_MPIIO\\\",  DXT_MPIIO_VER,         &dxt_mpiio_logutils) \\\\\\n\",\n    \"        X(DARSHAN_MDHIM_MOD,   \\\"MDHIM\\\",      DARSHAN_MDHIM_VER,     &mdhim_logutils)\\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 29,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"# open the log\\n\",\n    \"handle = libdutil.darshan_log_open(\\\"example-logs/example.darshan\\\".encode())\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 34,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"# fetch a posix record\\n\",\n    \"buf = ffi.new(\\\"void **\\\")\\n\",\n    \"r = libdutil.darshan_log_get_record(handle, 1, buf)\\n\",\n    \"rbuf = ffi.cast(\\\"struct darshan_posix_file **\\\", buf)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 36,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"['base_rec', 'counters', 'fcounters']\"\n      ]\n     },\n     \"execution_count\": 36,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"dir(rbuf[0])\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 52,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"'id: 6301063301082038805, rank: -1'\"\n      ]\n     },\n     \"execution_count\": 52,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"\\\"id: {}, rank: {}\\\".format(rbuf[0].base_rec.id, rbuf[0].base_rec.rank)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 50,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"[2049, -1, -1, 0, 16402, 16404, 0, 0, 0, 0, -1, -1, 0, 0, 0, 2199023259968, 0, 2199023261831, 0, 0, 0, 16384, 0, 0, 8, 16401, 1048576, 0, 134217728, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 14, 0, 0, 0, 0, 0, 0, 16384, 0, 274743689216, 274743691264, 0, 0, 10240, 4096, 0, 0, 134217728, 272, 544, 328, 16384, 8, 2, 2, 597, 1073741824, 1312, 1073741824]\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"print([counter for counter in rbuf[0].counters])\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 51,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"[3.9191410541534424, 0.0, 3.940063953399658, 3.927093982696533, 3.936579942703247, 0.0, 115.0781660079956, 115.77035808563232, 0.0, 100397.60042190552, 11.300841808319092, 0.0, 17.940945863723755, 20.436099529266357, 85.47495031356812, 0.0, 0.0]\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"print([counter for counter in rbuf[0].fcounters])\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": []\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.6.10\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 4\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/darshan/discover_darshan.py": "# -*- coding: utf-8 -*-\n\n\"\"\"Auxiliary to discover darshan-util install directory.\"\"\"\n\n\nimport os\n\nimport logging\nlogger = logging.getLogger(__name__)\n\n\nverbose_discovery = False\nif verbose_discovery:\n    logging.basicConfig()           # ensure out streams exist\n    logger.setLevel(logging.DEBUG)  # set log-level\n\n\ndef check_version(ffi=None, libdutil=None):\n    \"\"\"\n    Get version from shared library or pkg-config and return info.\n\n    :return: Path to a darshan-util installation.\n    \"\"\"\n    lib_version = None\n\n\n    # query library directly (preferred)\n    if ffi is not None and libdutil is not None:\n        ver = ffi.new(\"char **\")\n        ver = libdutil.darshan_log_get_lib_version()\n        lib_version = ffi.string(ver).decode(\"utf-8\")\n        logger.debug(f\" Found lib_version={lib_version} via ffi.\")\n\n    # pkgconfig fallback\n    if lib_version is None:\n        logger.warning(\"WARNING: Using pk-config fallback.\")\n        import subprocess\n        args = ['pkg-config', '--modversion', 'darshan-util']\n        p = subprocess.Popen(args, shell=False, stdout=subprocess.PIPE, stderr=subprocess.PIPE, cwd='.')\n        out,err = p.communicate()\n        retval = p.wait()\n        lib_version = out.decode('ascii').strip()\n        logger.debug(f\" Found lib_version={lib_version} via pkgconfig.\")\n\n\n    import darshan\n   \n    package_version = darshan.__darshanutil_version__.split(\".\")\n    lib_version = lib_version.split(\".\")\n    \n    if package_version[0:3] != lib_version[0:3]:\n        from darshan.error import DarshanVersionError\n        raise DarshanVersionError(\n                target_version = \".\".join(package_version[0:3]),\n                provided_version = \".\".join(lib_version), \n                msg=\"This version of PyDarshan\")\n\n\n    return lib_version\n\n\n\ndef discover_darshan_pkgconfig():\n    \"\"\"\n    Discovers an existing darshan-util installation and returns the appropriate\n    path to a shared object for use with Python's CFFI.\n\n    :return: Path to a darshan-util installation.\n    \"\"\"\n\n    import subprocess\n\n    args = ['pkg-config', '--path', 'darshan-util']\n    p = subprocess.Popen(args, shell=False, stdout=subprocess.PIPE, stderr=subprocess.PIPE, cwd='.')\n    out,err = p.communicate()\n    retval = p.wait()\n\n    path = os.path.dirname(out.decode('ascii').strip())\n\n    if path:\n        return os.path.realpath(path + '/../../')\n    else:\n        raise RuntimeError('Could not discover darshan! Is darshan-util installed?')\n\n\ndef discover_darshan_shutil():\n    \"\"\"\n    Discovers an existing darshan-util installation and returns the appropriate\n    path to a shared object for use with Python's CFFI.\n\n    :return: Path to a darshan-util installation.\n    \"\"\"\n    \n    import shutil    \n    path = shutil.which('darshan-parser')\n   \n    if path:\n        return os.path.realpath(path + '/../../')\n    else:\n        raise RuntimeError('Could not discover darshan! Is darshan-util installed and set in your PATH?')\n\n\ndef discover_darshan_wheel():\n    \"\"\"\n    Discovers darshan-util if installed as as part of the wheel.\n\n    :return: Path to a darshan-util installation.\n    \"\"\"\n\n    path = os.path.dirname(__file__)\n\n    if path:\n        return os.path.realpath(path + '/../darshan.libs')\n    else:\n        raise RuntimeError('Could not discover darshan! Is darshan-util installed and set in your PATH?')\n\n\ndef discover_darshan_pyinstaller():\n    \"\"\"\n    Discovers darshan-util if installed as as part of a pyinstaller bundle.\n\n    :return: Path to a darshan-util installation.\n    \"\"\"\n\n    path = os.path.dirname(__file__)\n\n    if path:\n        return os.path.realpath(path + '/../')\n    else:\n        raise RuntimeError('Could not discover darshan! Is darshan-util installed and set in your PATH?')\n\n\n\ndef find_utils(ffi, libdutil):\n    \"\"\"\n    Try different methods to discover darshan-util:\n\n    Precedence:\n    1) Try if the current environment allows dlopen to load libdarshan-util\n    2) Try if darshan-parser is exposed via PATH, and attempt loading relative to it.\n    3) Try if darshan is exposed via pkgconfig\n    4) Fallback on binary distributed along with Python package\n\n    Args:\n        ffi: existing ffi instance to use\n        libdutil: reference to libdutil to populate\n\n    \"\"\"\n    if libdutil is None:\n        try:\n            libdutil = ffi.dlopen(\"libdarshan-util.so\")\n        except:\n            libdutil = None\n\n    if libdutil is None:\n        try:\n            library_path = discover_darshan_shutil()\n            logger.debug(f\"Attempting library_path={library_path} via shutil discovery.\")\n            libdutil = ffi.dlopen(library_path + \"/lib/libdarshan-util.so\")\n        except:\n            libdutil = None\n\n    if libdutil is None:\n        try:\n            library_path = discover_darshan_pkgconfig()\n            logger.debug(f\"Attempting library_path={library_path} via pkgconfig discovery.\")\n            libdutil = ffi.dlopen(library_path + \"/lib/libdarshan-util.so\")\n        except:\n            libdutil = None\n\n    if libdutil is None:\n        try:\n            darshan_path = discover_darshan_wheel()\n            import glob\n            library_path = glob.glob(f'{darshan_path}/libdarshan-util*.so')[0]\n            logger.debug(f\"Attempting library_path={library_path} in case of binary wheel.\")\n            save = os.getcwd()\n            os.chdir(darshan_path)\n            libdutil = ffi.dlopen(library_path)\n            os.chdir(save)\n        except:\n            libdutil = None\n\n    if libdutil is None:\n        try:\n            darshan_path = discover_darshan_pyinstaller()\n            import glob\n            library_path = glob.glob(f'{darshan_path}/libdarshan-util*.so')[0]\n            logger.debug(f\"Attempting library_path={library_path} for pyinstaller bundles.\")\n            save = os.getcwd()\n            os.chdir(darshan_path)\n            libdutil = ffi.dlopen(library_path)\n            os.chdir(save)\n        except:\n            libdutil = None\n  \n    \n\n    if libdutil is None:\n        raise RuntimeError('Could not find libdarshan-util.so! Is darshan-util installed? Please ensure one of the the following: 1) export LD_LIBRARY_PATH=<path-to-libdarshan-util.so>, or 2) darshan-parser can found using the PATH variable, or 3) pkg-config can resolve pkg-config --path darshan-util, or 4) install a wheel that includes darshan-utils via pip.')\n\n    return libdutil\n\n\n\ndef load_darshan_header():\n    \"\"\"\n    Returns a CFFI compatible header for darshan-utlil as a string.\n\n    :return: String with a CFFI compatible header for darshan-util.\n    \"\"\"\n\n    curdir, curfile = os.path.split(__file__)\n    filepath = os.path.join(curdir, 'data', 'darshan-api.h')\n    # filepath = os.path.join(curdir, 'data', 'generated.h')\n\n    logger.debug(f\" load_darshan_header using filepath={filepath}\")\n\n    with open(filepath, 'r') as f:\n        try:\n            return f.read()\n        except IOError:\n            raise RuntimeError('Failed to read API definition header for darshan.')\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.2.1.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.3.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.0.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.3.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.5.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.8.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.0.1.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.8.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.6.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.7.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.2.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.5.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.4.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.4.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.0.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.1.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.2.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.2.0.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.1.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.7.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.0.0.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.6.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.0.1.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.0.0.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/pcarns_cp_id25476_1-16-15155_2.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/perf/harms_IOR_id350892_2-9-74258_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/perf/harms_partshared_id354969_2-25-56979_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/perf/harms_IOR_id350665_2-8-78651_12.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/perf/harms_IOR_id350690_2-8-83458_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.7_id178062_12-31-64875_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/pcarns_mpi-io-test-x86_64-2.2.8_id12451_8-28-46056-5041743303181360857_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.0.0_id180936_12-31-64879_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.2.9_id259616_5-6-66953-5018725671498589377_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.3.1_id426989_3-13-61875-4723177368895607730_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86_64-2.2.0_id3850_2-29-36600-13333843235489639491_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86_64-2.0.2_id15172_12-8-37621-274509493643487663_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.12_id178062_12-31-64874_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.0.2_id205555_12-8-36850-17729250439914587931_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86-64-2.2.4_id20631_12-13-43744-16977121959925885678_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86-2.0.0_id3251_7-16-33980_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.2.5_id100_1-1-168-10859250841018226043_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/pcarns_mpi-io-test-x86_64-2.2.9_id8751_5-6-43885-16506732777848558488_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86_64-2.1.1_id20947_6-23-63417-274509493643487663_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.6_id178062_12-31-64878_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.5_id178062_12-31-64872_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.10_id178062_12-31-64874_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/pcarns_mpi-io-test-x86_64-2.3.1_id13154_3-13-47125-7023224190677163982_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86_64-2.0.0_id16795_7-16-38059_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.11_id178062_12-31-64875_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86-64-2.2.6_id23755_4-23-38771-2124448682003854839_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.0_id178062_12-31-64877_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.1.1_id240158_6-23-63667-13564362473375795675_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.8_id178062_12-31-64878_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.4_id178062_12-31-64876_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.2.5_id60773_2-26-55789-7981255518662743653_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.15_id178062_12-31-64878_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.9_id178062_12-31-64880_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.2.6_id80230_4-23-63443-13434414552960059406_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.1_id178062_12-31-64874_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86-2.0.2_id18650_12-7-37315-16484262108403302634_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.2.0_id100_2-29-58016-11764280592576253912_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.2_id178062_12-31-64879_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86-2.1.1_id19454_6-23-43783-16484262108403302634_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86_64-2.2.5_id5824_2-27-41403-11500169623986228326_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.13_id178062_12-31-64878_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.2.4_id100_12-13-62209-215568122286385789_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.2.4_id47560_12-13-67385-3671058397549123273_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.14_id178062_12-31-64878_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.2.8_id121829_8-28-59756-8698475815754165825_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.3_id178062_12-31-64875_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.2.6_id100_1-1-169-3365979776611785968_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/.git/objects/pack/pack-d0bfc87331d214c13b16d1e3253a8ccf548a91f1.idx",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/.git/objects/pack/pack-d0bfc87331d214c13b16d1e3253a8ccf548a91f1.pack",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/tests/input/sample.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/tests/input/noposixopens.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/tests/input/sample-goodost.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/tests/input/sample-badost.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/tests/input/noposix.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/tests/input/darshanlogs/2017/3/20/glock_dbscan_read_id4478544_3-20-7800-15217972833987807816_1.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/tests/input/darshanlogs/2017/3/20/glock_vpicio_uni_id4478544_3-20-7667-18385393005962577517_1.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/sample.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/example2.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/dxt.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/sample-badost.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/example.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/ior_hdf5_example.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/noposix.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/tutorial/ior_hdf5_example.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/darshan-graph/pq_app_read_id71344_7-31-5658-2037904274838284930_55623.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/darshan-graph/pq_app_read_id71317_7-31-5657-2037904274838284930_55623.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/darshan-graph/pq_app_readAB_writeC_id71326_7-31-5658-2037904274838284930_55623.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/darshan-graph/pq_app_write_id71310_7-31-5657-2037904274838284930_55623.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/darshan-graph/pq_app_write_id71296_7-31-5657-2037904274838284930_55623.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/darshan-graph/pq_app_write_id71303_7-31-5657-2037904274838284930_55623.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/example-logs/sample.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/example-logs/example2.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/example-logs/dxt.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/example-logs/shane_macsio_id29959_5-22-32552-7035573431850780836_1590156158.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/example-logs/sample-badost.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/example-logs/example.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/example-logs/ior_hdf5_example.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/pydarshan/examples/example-logs/noposix.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-util/extern/uthash-1.9.2.tar.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/darshan-runtime/doc/DXT-overhead.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-develop-c4i2wxtvekoac4tms422wnozutxg5jd6/spack-src/doc/darshan-dev-modular-runtime.png"
    ],
    "total_files": 409
}