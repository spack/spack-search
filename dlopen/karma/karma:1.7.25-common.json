{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/programmer-manual/node17.html": "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<!--Converted with LaTeX2HTML 96.1-h (September 30, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->\n<HTML>\n<HEAD>\n<TITLE>Dynamic Extensions</TITLE>\n<META NAME=\"description\" CONTENT=\"Dynamic Extensions\">\n<META NAME=\"keywords\" CONTENT=\"book\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<LINK REL=STYLESHEET HREF=\"book.css\">\n</HEAD>\n<BODY LANG=\"EN\" >\n <A NAME=\"tex2html870\" HREF=\"node18.html\"><IMG WIDTH=37 HEIGHT=24 ALIGN=BOTTOM ALT=\"next\" SRC=\"../images/icons/next_motif.gif\"></A> <A NAME=\"tex2html868\" HREF=\"book.html\"><IMG WIDTH=26 HEIGHT=24 ALIGN=BOTTOM ALT=\"up\" SRC=\"../images/icons/up_motif.gif\"></A> <A NAME=\"tex2html862\" HREF=\"node16.html\"><IMG WIDTH=63 HEIGHT=24 ALIGN=BOTTOM ALT=\"previous\" SRC=\"../images/icons/previous_motif.gif\"></A> <A NAME=\"tex2html872\" HREF=\"node1.html\"><IMG WIDTH=65 HEIGHT=24 ALIGN=BOTTOM ALT=\"contents\" SRC=\"../images/icons/contents_motif.gif\"></A> <A NAME=\"tex2html873\" HREF=\"node21.html\"><IMG WIDTH=43 HEIGHT=24 ALIGN=BOTTOM ALT=\"index\" SRC=\"../images/icons/index_motif.gif\"></A> <A NAME=\"tex2html1\" HREF=\"../index.html\">Karma Home Page</A><BR>\n<B> Next:</B> <A NAME=\"tex2html871\" HREF=\"node18.html\">Graphics without Widgets</A>\n<B>Up:</B> <A NAME=\"tex2html869\" HREF=\"book.html\">Karma Programming Manual</A>\n<B> Previous:</B> <A NAME=\"tex2html863\" HREF=\"node16.html\">Image Display Tool</A>\n<BR> <P>\n<H1><A NAME=\"SECTION001700000000000000000\">Dynamic Extensions</A></H1>\n<A NAME=\"extensions\">&#160;</A><A NAME=\"2043\">&#160;</A>\n<P>\nDynamic extensions are a mechanism whereby you can have your own code\nautomatically loaded and executed by parts of the Karma library. This\nrequires that your operating system supports building shared objects\n(often called shared libraries) and that loading of shared objects is\nsupported by the <B>dlopen()</B> function.\n<P>\n<H1><A NAME=\"SECTION001710000000000000000\">Rationale</A></H1>\n<P>\nAn alternative to dynamic extensions is to modify the source code for\na Karma module or some part of the library. Modifying the code is\nappropriate for a generic change (if you submit the code I can include\nit in the mainstream Karma release), but if it's something specific to\nyour own work environment it might not be appropriate to include it in\nthe mainstream Karma. Maintaining your own private versions of pieces\nof Karma can quickly become a maintenance nightmare, since newer\nversions of Karma will contain bugfixes and improvements but don't\ninclude your private changes. Simply replacing the Karma version of\nsome module or part of the library with your own version may not work,\nsince other parts of Karma may depend on new features which your code\ndoes not have. Merging in your changes with each new source release of\nKarma involves work, and does not solve the problem if you want to\ninstall a new beta (binary-only) release of Karma, since you won't\nhave access to the source code changes until the next source release.\n<P>\nOther changes you may wish to make to Karma may require linking with\nextra libraries. This is something that is unlikely to be included in\nthe mainstream Karma release, since it introduces dependencies on\nlibraries not commonly available.\n<P>\nTo solve these problems, dynamic extensions are supported. These\nprovide a way to have your own changes integrated into the library or\na module, maintaining binary compatibility between different releases\nof Karma. The aim is to allow you to include your own code without\nhaving to worry about maintenance when you install a newer version of\nKarma.\n<P>\n<H1><A NAME=\"SECTION001720000000000000000\">Architecture</A></H1>\n<P>\nKarma defines many ``services'' which can be extended in defined\nways. A service may be a module (i.e. the entire application), a\nwidget or some other part of the library. Each service will call\ncertain known functions within the relevant extension at defined\npoints in the execution of the service. There are three main classes\nof services:\n<UL>\n<LI> packages\n<LI> widgets\n<LI> modules\n</UL><H2><A NAME=\"SECTION001721000000000000000\">Package Services</A></H2>\n<P>\nThe service name for a package is the name of the package itself. For\nexample, the <A NAME=\"tex2html285\" HREF=\"../lib/foreign.html\"><B>foreign</B></A> package defines the <TT>foreign</TT>\nservice. Each package will call known extension functions specific to\nthat package. You will need to read the package-specific documentation\nto determine which extension functions are defined for that package.\n<P>\n<H2><A NAME=\"SECTION001722000000000000000\">Widget Services</A></H2>\n<P>\nThe service name for a widget is the class name of the widget. For\nexample, the <A NAME=\"tex2html286\" HREF=\"../lib/Filepopup.html\"><B>Filepopup</B></A> widget (section <A HREF=\"node14.html#Filepopup\">13.17.2</A>)\ndefines the service <TT>Filepopup</TT>. Widgets may call the following\nknown functions:\n<P>\n<UL>\n<LI> <B>ClassInitialise</B> this is called only once when the widget\nclass is initialised\n<LI> <B>WidgetInitialise</B> this is called as the last stage of\ninitialisation of a widget instance\n<LI> <B>WidgetRealise</B> this is called as the last stage of\nrealisation of a widget instance\n<LI> <B>WidgetDestroy</B> this is called as the last stage of\ndestruction of a widget instance\n<P>\n</UL>\n<P>\nEach of these functions has the same interface definition as the\ngeneric Xt class member functions. Note that not all widgets currently\ncall these extension functions. The widgets will be changed as\nrequired (most widgets will probably never have extensions written for\nthem by anybody). See the chapter on widgets (section <A HREF=\"node14.html#widgets\">13</A>)\nwhere each widget documents any extension functions it calls.\n<P>\n<H2><A NAME=\"SECTION001723000000000000000\">Module Services</A></H2>\n<P>\nThe service name for a module is the name of the module\nitself. Modules may call the following known functions:\n<P>\n<UL>\n<LI> <B>Xt_AppInitialise</B> this is called only once when the Xt\napplication context is created (this only applies to Xt-based\nprogrammes)\n<LI> <B>Xt_InEventLoop</B> this is called only once when the Xt main\nevent loop starts (this only applies to Xt-based\nprogrammes)\n<P>\n</UL><H1><A NAME=\"SECTION001730000000000000000\">Creating an Extension</A></H1>\n<P>\nYou will need to compile your C source code with whatever option your\ncompiler uses for generating position-independent code. You may wish\nto include <TT>$KARMAINCLUDEPATH/gmakedefs/general.h1</TT> in your\nGNUmakefile because it defines make variables with the correct\ncompiler flags that you require for your platform. Once you have\ncompiled your C code, you will need to use the linker to generate a\nshared object with extension <TT>.so</TT> which may then be dynamically\nloaded. An example <TT>GNUmakefile</TT> is shown below:\n<P>\n<PRE>include $(KARMAINCLUDEPATH)/gmakedefs/general.h1\n\nmyobject.so: mysource.o\n        $(LDso) -o myobject.so mysource.o</PRE>\n<P>\nThis uses the implicit rule in <B>&lt;gmake&gt;</B> to compile the source\nfile into an object. If necessary, you may define the <TT>CFLAGS</TT>\nvariable to provide extra compile flags (the implicit rule uses this\nvariable).\n<P>\n<H1><A NAME=\"SECTION001740000000000000000\">Configuration</A></H1>\n<P>\nA single file is used to configure the extensions available. Your\npersonal configuration file is scanned first, and is called <TT>\n<IMG WIDTH=12 HEIGHT=5 ALIGN=BOTTOM ALT=\"tex2html_wrap_inline5797\" SRC=\"img4.gif\">/.karma/extensions</TT> which specifies which shared objects are\navailable for the various services. After that the <TT>\n$KARMABASE/site/share/extensions</TT> file is scanned to load any extensions\nprovided by your local <B>Karma</B> installer. Finally the <TT>\n$KARMABASE/share/extensions</TT> file is scanned to load any extensions\nprovided with the Karma distribution. The format of this file is as\nfollows:\n<P>\n<PRE>SO_DIRS  directories\nSERVICE  servicename objects</PRE>\n<P>\nwhere:\n<P>\n<UL>\n<LI> <TT>directories</TT> is a colon-separated list of\ndirectories containing shared objects. Simple Bourne Shell-like\nexpansion of environment variables is supported (such as the\n``<IMG WIDTH=12 HEIGHT=5 ALIGN=BOTTOM ALT=\"tex2html_wrap_inline5797\" SRC=\"img4.gif\">'', <TT>$variable</TT>, <TT>${variable}</TT> and <TT>\n${variable:-word}</TT> notations). This aids the\nmaintenance of extensions for different platforms\n<LI> <TT>servicename</TT> is the name of a service\n<LI> <TT>objects</TT> is the name of one or more objects (separated by\nwhitespace) without the trailing <TT>.so</TT> extension\n</UL>\n<P>\nIt is legal to list the same service multiple times: this simply\nconcatenates the list of objects for that service. Functions will be\ncalled in the same order in which the configuration files were\nscanned.\n<P>\n<H1><A NAME=\"SECTION001750000000000000000\">Example</A></H1>\n<P>\nThe following is an example of an extension for the\n<A NAME=\"tex2html287\" HREF=\"../lib/Filepopup.html\"><B>Filepopup</B></A> widget (section <A HREF=\"node14.html#Filepopup\">13.17.2</A>) which defines the\nservice <TT>Filepopup</TT>. It adds a few accelerator buttons to the file\nbrowser. Note how there is no state defined in the extension: using\nstatic variables must be done with caution, since the same <TT>\nWidgetInitialise</TT> function is called several times, once for each\nwidget that is created.\n<P>\nTo use this, my <TT><IMG WIDTH=12 HEIGHT=5 ALIGN=BOTTOM ALT=\"tex2html_wrap_inline5797\" SRC=\"img4.gif\">/.karma/extensions</TT> file contains the\nfollowing:\n<P>\n<PRE>SO_DIRS  ~/.karma/lib/$MACHINE_OS\nSERVICE  Filepopup myobject</PRE>\n<P>\nAnd the code to implement this follows:\n<P>\n<PRE>/*  This extension adds some accelerator buttons to a Filepopup widget\n    Copyright (C) 1997-1998  Richard Gooch\n    This code is distributed under the GNU General Public License\n*/\n#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;X11/Intrinsic.h&gt;\n#include &lt;X11/Xos.h&gt;\n#include &lt;X11/StringDefs.h&gt;\n#include &lt;X11/Xaw/Command.h&gt;\n#include &lt;karma.h&gt;\n#include &lt;karma_a.h&gt;\n#include &lt;Xkw/Filepopup.h&gt;\n#include &lt;Xkw/Filewin.h&gt;\n\n\n/*  Private functions  */\nSTATIC_FUNCTION (Widget add_button,\n                 (Widget box, CONST char *label, CONST char *directory) );\nSTATIC_FUNCTION (void chdir_cbk, (Widget w, XtPointer client_data,\n                                  XtPointer call_data) );\n\n\n/*  Public functions follow  */\n\nflag WidgetInitialise (Widget Request, Widget New)\n{\n    Widget box;\n\n    XtVaGetValues (New, XkwNboxWidget, &amp;box, NULL);\n    /*  Add the various personalised buttons  */\n    add_button (box, &quot;/&quot;, &quot;/&quot;);\n    add_button (box, &quot;/data&quot;, &quot;/data&quot;);\n    add_button (box, &quot;/cdrom&quot;, &quot;/cdrom&quot;);\n    return (TRUE);\n}   /*  End Function WidgetInitialise  */\n\n\n/*  Private functions follow */\n\nstatic Widget add_button (Widget box, CONST char *label, CONST char *directory)\n/*  [SUMMARY] Add a button to a box.\n    &lt;box&gt; The enclosing box widget.\n    &lt;upper&gt; The widget under which the new widget should be placed.\n    &lt;left&gt; The widget to the left of where the widget should be placed.\n    &lt;label&gt; The label to appear in the button. The pointer must remain valid.\n    &lt;directory&gt; The directory to change to when the button is pressed. The\n    pointer must remain valid.\n    [RETURNS] The new button widget.\n*/\n{\n    Widget w;\n\n    w = XtVaCreateManagedWidget (&quot;button&quot;, commandWidgetClass, box,\n                                 XtNlabel, label,\n                                 NULL);\n    XtAddCallback (w, XtNcallback, chdir_cbk, (XtPointer) directory);\n    return (w);\n}   /*  End Function add_button  */\n\nstatic void chdir_cbk (Widget w, XtPointer client_data, XtPointer call_data)\n{\n    Widget filewin, parent, filepopup;\n    CONST char *dirname = (CONST char *) client_data;\n    static char function_name[] = &quot;Filepopup-ext_chdir_cbk&quot;;\n\n    for ( parent = XtParent (w), filepopup = NULL;\n          (filepopup == NULL) &amp;&amp; (parent != NULL);\n          parent = XtParent (parent) )\n    {\n        if ( XtIsFilepopup (parent) ) filepopup = parent;\n    }\n    if (filepopup == NULL)\n    {\n        fprintf (stderr, &quot;Could not find a Filepopup ancestor\\n&quot;);\n        a_prog_bug (function_name);\n    }\n    XtVaGetValues (filepopup, XkwNfilewinWidget, &amp;filewin, NULL);\n    XkwFilewinChangeDirectory (filewin, dirname);\n}   /*  End Function chdir_cbk  */</PRE>\n<P>\nNote how the exported function <TT>WidgetInitialise</TT> returns a\nboolean value. <B>All</B> extension functions must return either <TT>\nTRUE</TT> or <TT>FALSE</TT>.\n<P>\n<HR><A NAME=\"tex2html870\" HREF=\"node18.html\"><IMG WIDTH=37 HEIGHT=24 ALIGN=BOTTOM ALT=\"next\" SRC=\"../images/icons/next_motif.gif\"></A> <A NAME=\"tex2html868\" HREF=\"book.html\"><IMG WIDTH=26 HEIGHT=24 ALIGN=BOTTOM ALT=\"up\" SRC=\"../images/icons/up_motif.gif\"></A> <A NAME=\"tex2html862\" HREF=\"node16.html\"><IMG WIDTH=63 HEIGHT=24 ALIGN=BOTTOM ALT=\"previous\" SRC=\"../images/icons/previous_motif.gif\"></A> <A NAME=\"tex2html872\" HREF=\"node1.html\"><IMG WIDTH=65 HEIGHT=24 ALIGN=BOTTOM ALT=\"contents\" SRC=\"../images/icons/contents_motif.gif\"></A> <A NAME=\"tex2html873\" HREF=\"node21.html\"><IMG WIDTH=43 HEIGHT=24 ALIGN=BOTTOM ALT=\"index\" SRC=\"../images/icons/index_motif.gif\"></A> <A NAME=\"tex2html1\" HREF=\"../index.html\">Karma Home Page</A><BR>\n<B> Next:</B> <A NAME=\"tex2html871\" HREF=\"node18.html\">Graphics without Widgets</A>\n<B>Up:</B> <A NAME=\"tex2html869\" HREF=\"book.html\">Karma Programming Manual</A>\n<B> Previous:</B> <A NAME=\"tex2html863\" HREF=\"node16.html\">Image Display Tool</A>\n<P><ADDRESS>\n<I>Richard Gooch <BR>\nMon Aug 14 22:12:47 PDT 2006</I>\n</ADDRESS>\n</BODY>\n</HTML>\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/share/signing-keys/rgooch.1B912A8C.gpg",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/karma-1.7.25/amd64_Linux_libc6.3/.cshrc",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/karma-1.7.25/amd64_Linux_libc6.3/.karmarc",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/karma-1.7.25/amd64_Linux_libc6.3/.login",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/karma-1.7.25/amd64_Linux_libc6.3/lib/libkarmaX11.so.1.7.25",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/karma-1.7.25/amd64_Linux_libc6.3/lib/libkarma.so.1.7.25",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/karma-1.7.25/amd64_Linux_libc6.3/lib/libkarmawidgets.so.1.7.25",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/karma-1.7.25/amd64_Linux_libc6.3/lib/libkarmaX11.so",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/karma-1.7.25/amd64_Linux_libc6.3/lib/libkarmawidgets.so",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/karma-1.7.25/amd64_Linux_libc6.3/lib/libkarmagraphics.so",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/karma-1.7.25/amd64_Linux_libc6.3/lib/libkarma.so",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/karma-1.7.25/amd64_Linux_libc6.3/lib/libkarmagraphics.so.1.7.25",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/karma-1.7.25/amd64_Linux_libc6.3/lib/libkarmaXt.so",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/karma-1.7.25/amd64_Linux_libc6.3/lib/libkarmaXt.so.1.7.25",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/TickerTape.class",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/karma-request-email.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/karma-beta-request-email.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/debate.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/bg.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/karmalogo-small-t.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/icons/previous_group_motif.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/icons/previous_motif.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/icons/contents_motif.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/icons/next_motif_gr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/icons/foot_motif.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/icons/previous_motif_gr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/icons/index_motif.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/icons/next_motif.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/icons/up_motif.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/icons/previous_group_motif_gr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/icons/next_group_motif.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/icons/cross_ref_motif.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/icons/next_group_motif_gr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/images/icons/up_motif_gr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/tool-screen-snapshots/koords.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/tool-screen-snapshots/krenzo.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/tool-screen-snapshots/kvis.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/tool-screen-snapshots/kshell.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/tool-screen-snapshots/kpvslice.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/tool-screen-snapshots/kslice_3d.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img10.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img18.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img14.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img15.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img22.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img6.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img7.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img13.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img17.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img19.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img5.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img3.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img9.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img8.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img11.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img12.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img20.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img21.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/user-manual/img4.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/widget-snapshots/ViewDatasets.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/widget-snapshots/Cmapwinpopup.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/widget-snapshots/OverlayEditorControl.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/widget-snapshots/Dataclip.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/widget-snapshots/MomentGenerator.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/widget-snapshots/Filepopup.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/widget-snapshots/ZoomPolicy.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/widget-snapshots/TracePopup.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/widget-snapshots/AnimateControl.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/widget-snapshots/View2Datasets.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/widget-snapshots/IntensityPolicy.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/widget-snapshots/ImageDisplay.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/widget-snapshots/LoadAndDecimate.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/widget-snapshots/DressingControl.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/widget-snapshots/DataBrowser.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/widget-snapshots/Postscript.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/tool-snapshots/xray/hg_subs.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/tool-snapshots/xray/hg_mono.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/tool-snapshots/xray/main.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/tool-snapshots/khuei/main.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/programmer-manual/img2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/programmer-manual/img6.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/programmer-manual/img5.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/programmer-manual/img3.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/programmer-manual/img1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-karma-1.7.25-common-6xabcyi4stuk5kiiaiweyrhrsnfgfyh5/spack-src/www/programmer-manual/img4.gif"
    ],
    "total_files": 1963
}