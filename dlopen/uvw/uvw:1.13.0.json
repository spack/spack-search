{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-uvw-1.13.0-zev67cgostswvj2cctgnwmgduuarj6u6/spack-src/src/uvw/lib.hpp": "#pragma once\n\n\n#include <memory>\n#include <string>\n#include <type_traits>\n#include <utility>\n#include <uv.h>\n#include \"loop.hpp\"\n#include \"underlying_type.hpp\"\n\n\nnamespace uvw {\n\n\n/**\n * @brief The SharedLib class.\n *\n * `uvw` provides cross platform utilities for loading shared libraries and\n * retrieving symbols from them, by means of the API offered by `libuv`.\n */\nclass SharedLib final: public UnderlyingType<SharedLib, uv_lib_t> {\npublic:\n    explicit SharedLib(ConstructorAccess ca, std::shared_ptr<Loop> ref, std::string filename) noexcept\n        : UnderlyingType{ca, std::move(ref)}\n    {\n        opened = (0 == uv_dlopen(filename.data(), get()));\n    }\n\n    ~SharedLib() noexcept {\n        uv_dlclose(get());\n    }\n\n    /**\n     * @brief Checks if the library has been correctly opened.\n     * @return True if the library is opened, false otherwise.\n     */\n    explicit operator bool() const noexcept { return opened; }\n\n    /**\n     * @brief Retrieves a data pointer from a dynamic library.\n     *\n     * `F` shall be a valid function type (as an example, `void(int)`).<br/>\n     * It is legal for a symbol to map to `nullptr`.\n     *\n     * @param name The symbol to be retrieved.\n     * @return A valid function pointer in case of success, `nullptr` otherwise.\n     */\n    template<typename F>\n    F * sym(std::string name) {\n        static_assert(std::is_function<F>::value, \"!\");\n        F *func;\n        auto err = uv_dlsym(get(), name.data(), reinterpret_cast<void**>(&func));\n        if(err) { func = nullptr; }\n        return func;\n    }\n\n    /**\n     * @brief Returns the last error message, if any.\n     * @return The last error message, if any.\n     */\n    const char * error() const noexcept {\n        return uv_dlerror(get());\n    }\n\nprivate:\n    bool opened;\n};\n\n\n}\n"
    },
    "skipped": [],
    "total_files": 75
}