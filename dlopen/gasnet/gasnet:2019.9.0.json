{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-gasnet-2019.9.0-4evf7f2vy4rwdltpz5ir4xbvf5z5rxyu/spack-src/tests/upcr-harness/external-upcxx/harness.conf": "# This suite is independent of UPC compiler:\nKnownFailureAnySpec\n\n# ------------------------------------------\n# Single-threaded tests\n# ------------------------------------------\n\nBEGIN_DEFAULT_CONFIG\nFlags:          \nFiles:          \nDynamicThreads: $DEFAULT$\nStaticThreads:  0\nProcPerNode:    1\nPthreads:       0\nCompileResult:  pass\nPassExpr:       SUCCESS\nFailExpr:       ERROR\nExitCode:       0\nBuildCmd:       make,notrans\nAppArgs:        \nAppEnv:\t        report_file=-\nTimeLimit:      $DEFAULT$\nRequireFeature: gasnet,upcxx\nProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC\nRunCmd:         ./launcher -np %N %P %A\nMakeFlags:      debug   ; DBGSYM=1 OPTLEV=0 ASSERT=1 UPCXX_CODEMODE=debug\nMakeFlags:      nodebug ; DBGSYM=0 OPTLEV=3 ASSERT=0 UPCXX_CODEMODE=O3\nSaveOutput: 1\nEND_DEFAULT_CONFIG\n\n# ------------------------------------------\n# Tests to compile, but not run\n\nTestName:\t_upcxx\nCompileTimeLimit: 4 * $DEFAULT$\n# So this test can match the \"runnable\" filter:\nRunCmd:         true\nPassExpr:       0\n\nTestName:\t_upcxx-inst-SEQ\nCompileTimeLimit: 4 * $DEFAULT$\nWarningFilter:  all ; 'WARNING: .* platform has not been validated.*?\\nWARNING:.*?'\n# So this test can match the \"runnable\" filter:\nRunCmd:         true\nPassExpr:       0\n\n# ------------------------------------------\n# Tests that don't use GASNet\n# Can only be safely launched as a local executable\n\nTestName:       hello-seq\nDynamicThreads: 1\nRunCmd:         %P %A\nPassExpr:       ^Hello world\n\nTestName:       future-seq\nDynamicThreads: 1\nRunCmd:         %P %A\n\nTestName:       multifile-seq\nDynamicThreads: 1\nRunCmd:         %P %A\nPassExpr:       ^Hello from\n\nTestName:       serialization-seq\nDynamicThreads: 1\nRunCmd:         %P %A\n\n# ------------------------------------------\n# General Tests:\n\nTestName:       hello_gasnet-seq\nPassExpr:       ^Hello from 0\n\nTestName:       hello_upcxx-seq\nPassExpr:       ^Hello from 0\n\nTestName:       dist_object-seq\n\nTestName:       barrier-seq\n\nTestName:       rpc_barrier-seq\n\nTestName:       rpc_ff_ring-seq\n\nTestName:       rput-seq\n\nTestName:       rput_rpc_cx-seq\n\nTestName:       atomics-seq\n\nTestName:       collectives-seq\n\nTestName:       local_team-seq\n\nTestName:       uts_ranks-seq\n\nTestName:       vis-seq\n#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 127 (Mac+gcc+VIS breaks on lpc operation with seq and par)\n\nTestName:       vis_stress-seq\n\nTestName:       alloc-seq\nAppArgs:        10\nFileLimit:      100 + 2200 * $THREADS$\n\nTestName:       copy-seq\nFailExpr:       WARNING: UPC.. CUDA support\n\n# ------------------------------------------\n# Benchmarks:\n# The BenchmarkResult units below are in bytes/sec, but there's no way to express that in harness\n\nTestName:       put_flood-seq\nTimeLimit:      2*$DEFAULT$\nBenchmarkResult: size=8, kind=\"lat\", how=\"upcxx\".*?bw=([^,]+)(,)\n#KnownFailure:     run-all ; (cc_clang || cc_gnu) && nodebug ; issue 184 (bench/put_flood crashes on clang-7/opt/Linux)\n\nTestName:       nebr_exchange-seq\nBenchmarkResult: bw=([^,]+),.*?via=\"rput\"(,)\nKnownFailure:   run-crash ; os_cygwin && cc_clang ; issue 188 (bench/nebr_exchange crash on Cygwin/clang)\n\nTestName:       cuda_microbenchmark-seq\nAppArgs:        10 10\nAppEnv:         UPCXX_SHARED_HEAP_SIZE=1GB\nBenchmarkResult: message size = 4194304 byte.*?\\n\\s*Local GPU -> Remote GPU:[^,]+, ([^ ]+) (GB/s)\nRequireFeature: upcxx_cuda\n\n# ------------------------------------------\n# Regression suite:\n\nTestName: \tissue88-seq\n\nTestName: \tissue108-seq\n\nTestName: \tissue128-seq\n\nTestName: \tissue138-seq\nAppEnv:         UPCXX_SHARED_HEAP_SIZE=128MB\n\nTestName: \tissue140-seq\nTimeLimit:      $DEFAULT$ / 4\n#KnownFailure:   run-time ; all ; issue 140 (upcxx::discharge() does not discharge remote_cx::as_rpc())\n\nTestName: \tissue141-seq\n\nTestName: \tissue142-seq\nKnownFailure:   run-all ; debug ; issue 142 (UPCXX_THREADMODE=seq breaks after liberate_master_persona())\n\nTestName: \tissue170-seq\n\nTestName: \tissue185-seq\nTimeLimit:      0\n\nTestName: \tissue210-seq\n\nTestName: \tissue219-seq\nTimeLimit:      0\n\nTestName: \tissue223-seq\nPassExpr:       done.\n\nTestName: \tissue224-seq\nTimeLimit:      0\n\nTestName: \tissue234-seq\n#KnownFailure:   compile-all ; ; issue 234 (Generalized operation completion for barrier_async and broadcast)\n\nTestName: \tissue242-seq\nAppArgs:        100 \nAppEnv:         GASNET_BACKTRACE=0  # skip backtraces for known crash\nKnownFailure:   run-crash ; ; issue 242 (Lack of backpressure in RPC injection leads to obscure memory-exhaustion crashes)\n\n# ------------------------------------------\n# Guide examples:\n\nTestName:       hello-world-seq\nPassExpr:       ^Hello world from\n\nTestName:       compute-pi-seq\nAppArgs:        10000\nPassExpr:       ^pi estimate: 3.1\n\nTestName:       compute-pi-multi-examples-seq\nAppArgs:        10000\n\nTestName:       rb1d-av-seq\nPassExpr:       ^Converged at\n\nTestName:       dmap-test-seq\n\nTestName:       dmap-async-insert-test-seq\n\nTestName:       dmap-async-find-test-seq\n\nTestName:       dmap-quiescence-test-seq\n\nTestName:       dmap-atomics-test-seq\n\nTestName:       dmap-conjoined-test-seq\n\nTestName:       dmap-promises-test-seq\n\nTestName:       team_simple-seq\n\nTestName:       team_advanced-seq\n\nTestName:       non-contig-example-seq\n\nTestName:       view-histogram1-seq\n\nTestName:       view-histogram2-seq\n\nTestName:       h-d-seq\nFailExpr:       Failure\nPassExpr:       Success\nRequireFeature: upcxx_cuda\n\nTestName:       h-d-remote-seq\nFailExpr:       Failure\nPassExpr:       Success\nRequireFeature: upcxx_cuda\n\n# ------------------------------------------\n# upcxx-extras\n\nTestName:       allocator-example-seq\n\n# ------------------------------------------\n# misc examples\n\nTestName:       cuda_vecadd-seq\nRequireFeature: upcxx_cuda_compute_30\n\n# ------------------------------------------\n# Multi-threaded tests\n# ------------------------------------------\n\nBEGIN_DEFAULT_CONFIG\nFlags:          \nFiles:          \nDynamicThreads: $DEFAULT$\nStaticThreads:  0\nProcPerNode:    1\nPthreads:       0\nCompileResult:  pass\nPassExpr:       SUCCESS\nFailExpr:       ERROR\nExitCode:       0\nBuildCmd:       make,notrans\nAppArgs:        \nAppEnv:\t        report_file=-\nTimeLimit:      $DEFAULT$\nRequireFeature: gasnet_has_par,upcxx\nProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC\nRunCmd:         ./launcher -np %N %P %A\nMakeFlags:      debug   ; DBGSYM=1 OPTLEV=0 ASSERT=1 UPCXX_CODEMODE=debug\nMakeFlags:      nodebug ; DBGSYM=0 OPTLEV=3 ASSERT=0 UPCXX_CODEMODE=O3\nSaveOutput: 1\nEND_DEFAULT_CONFIG\n\n# ------------------------------------------\n# Tests to compile, but not run\n\nTestName:\t_upcxx-inst-PAR\nCompileTimeLimit: 4 * $DEFAULT$\nWarningFilter:  all ; 'WARNING: .* platform has not been validated.*?\\nWARNING:.*?'\n# `clang++ -std=c++14 -pedantic` warns if (as is the case in some of our automated\n# testing) GASNet configure's value of `CXX` lacks `-pedantic` and thus detects\n# support for this attribute.\nWarningFilter:  cc_clang ; '.*?warning: use of the .fallthrough. attribute is a C\\+\\+.. extension.*?'\n# So this test can match the \"runnable\" filter:\nRunCmd:         true\nPassExpr:       0\n\n# ------------------------------------------\n# Tests that don't use GASNet\n# Can only be safely launched as a local executable\n\nTestName:       hello_threads-par\nDynamicThreads: 1\nRunCmd:         %P %A\nPassExpr:       ^Done\nMakeFlags: static_link ; UPCXX_TEST_FLAGS=\"-Wl,--whole-archive -lpthread -Wl,--no-whole-archive\"\n#KnownFailure:   run-crash ; os_cnl ; Bug 3813 - Crashes using C++11 threads on Cray systems\n\nTestName:       serialization-par\nDynamicThreads: 1\nRunCmd:         %P %A\n\nTestName:       uts_threads-par\nDynamicThreads: 1\nRunCmd:         %P %A\nMakeFlags: static_link ; UPCXX_TEST_FLAGS=\"-Wl,--whole-archive -lpthread -Wl,--no-whole-archive\"\n#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 49 (uts_{threads,hybrid,omp_ranks}/lpc_barrier crash on (High)Sierra w/ g++)\n#KnownFailure:   run-crash ; os_cnl ; Bug 3813 - Crashes using C++11 threads on Cray systems\n\nTestName:       lpc_barrier-par\nDynamicThreads: 1\nRunCmd:         %P %A\nMakeFlags: static_link ; UPCXX_TEST_FLAGS=\"-Wl,--whole-archive -lpthread -Wl,--no-whole-archive\"\n#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 49 (uts_{threads,hybrid,omp_ranks}/lpc_barrier crash on (High)Sierra w/ g++)\n#KnownFailure:   run-crash ; os_cnl ; Bug 3813 - Crashes using C++11 threads on Cray systems\n\nTestName:       uts_omp-par\nDynamicThreads: 1\nRunCmd:         %P %A\nProhibitFeature: missing_openmp\n#MakeFlags:      UPCXX_TEST_FLAGS=\"-fopenmp\"  # added by nobs\nAppEnv:         OMP_NUM_THREADS=10\n#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 92 (aka issue 49)\n# OpenMP library yields this warning on Cray systems:\nWarningFilter:   all ; '.*?warning: Using .dlopen. in statically linked applications.*?'\n\n# ------------------------------------------\n# General Tests:\n\nTestName:       hello_gasnet-par\nPassExpr:       ^Hello from 0\n\nTestName:       hello_upcxx-par\nPassExpr:       ^Hello from 0\n\nTestName:       dist_object-par\n\nTestName:       barrier-par\n\nTestName:       rpc_barrier-par\n\nTestName:       rpc_ff_ring-par\n\nTestName:       rput-par\n\nTestName:       rput_rpc_cx-par\n\nTestName:       rput_thread-par\n\nTestName:       atomics-par\n\nTestName:       collectives-par\n\nTestName:       local_team-par\n\nTestName:       vis-par\n#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 127 (Mac+gcc+VIS breaks on lpc operation with seq and par)\n\nTestName:       vis_stress-par\n\nTestName:       alloc-par\nAppArgs:        10\nFileLimit:      100 + 2200 * $THREADS$\n\nTestName:       copy-par\nFailExpr:       WARNING: UPC.. CUDA support\n\nTestName:       view-par\n\nTestName:       uts_ranks-par\n\nTestName:       uts_hybrid-par\n#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 49 (uts_{threads,hybrid,omp_ranks}/lpc_barrier crash on (High)Sierra w/ g++)\n\nTestName:       uts_omp_ranks-par\nProhibitFeature: missing_openmp\n#MakeFlags:      UPCXX_TEST_FLAGS=\"-fopenmp\"  # added by nobs\nAppEnv:         OMP_NUM_THREADS=4\n#KnownFailure:   run-crash ; os_darwin && cc_gnu ; issue 49 (uts_{threads,hybrid,omp_ranks}/lpc_barrier crash on (High)Sierra w/ g++)\n#KnownFailure:   run-all ; os_linux && cc_clang ; issue 93 (uts_omp_ranks crash w/ clang on Linux/x86-64)\n# OpenMP library yields this warning on Cray systems:\nWarningFilter:   all ; '.*?warning: Using .dlopen. in statically linked applications.*?'\n\nTestName:       rput_omp-par\nProhibitFeature: missing_openmp\n#MakeFlags:      UPCXX_TEST_FLAGS=\"-fopenmp\"  # added by nobs\nAppEnv:         OMP_NUM_THREADS=4\n# OpenMP library yields this warning on Cray systems:\nWarningFilter:   all ; '.*?warning: Using .dlopen. in statically linked applications.*?'\n\n# ------------------------------------------\n# Benchmarks:\n\nTestName:       put_flood-par\nTimeLimit:      2*$DEFAULT$\nBenchmarkResult: size=8, kind=\"lat\", how=\"upcxx\".*?bw=([^,]+)(,)\n#KnownFailure:     run-all ; (cc_clang || cc_gnu) && nodebug ; issue 184 (bench/put_flood crashes on clang-7/opt/Linux)\n\nTestName:       nebr_exchange-par\nBenchmarkResult: bw=([^,]+),.*?via=\"rput\"(,)\nKnownFailure:   run-crash ; os_cygwin && cc_clang ; issue 188 (bench/nebr_exchange crash on Cygwin/clang)\n\nTestName:       cuda_microbenchmark-par\nAppArgs:        10 10\nAppEnv:         UPCXX_SHARED_HEAP_SIZE=1GB\nBenchmarkResult: message size = 4194304 byte.*?\\n\\s*Local GPU -> Remote GPU:[^,]+, ([^ ]+) (GB/s)\nRequireFeature: gasnet_has_par,upcxx_cuda\n\n# ------------------------------------------\n# Regression suite:\n\nTestName: \tissue88-par\n\nTestName: \tissue108-par\n\nTestName: \tissue128-par\n\nTestName: \tissue138-par\nAppEnv:         UPCXX_SHARED_HEAP_SIZE=128MB\n\nTestName: \tissue140-par\nTimeLimit:      $DEFAULT$ / 4\n#KnownFailure:   run-time ; all ; issue 140 (upcxx::discharge() does not discharge remote_cx::as_rpc())\n\nTestName: \tissue141-par\n\nTestName: \tissue142-par\n\nTestName: \tissue168-par\nTimeLimit:      $DEFAULT$ / 4  # expected to deadlock and time out\n#KnownFailure:   run-all ; ; issue 168 (upcxx::progress_required always return 0 for rpc chain with cx as lpc)\n\nTestName: \tissue170-par\n\nTestName: \tissue185-par\nTimeLimit:      0\n\nTestName: \tissue210-par\n\nTestName: \tissue219-par\nTimeLimit:      0\n\nTestName: \tissue223-par\nPassExpr:       done.\n\nTestName: \tissue224-par\nTimeLimit:      0\n\nTestName: \tissue234-par\n#KnownFailure:   compile-all ; ; issue 234 (Generalized operation completion for barrier_async and broadcast)\n\nTestName: \tissue242-par\nAppArgs:        100 \nAppEnv:         GASNET_BACKTRACE=0  # skip backtraces for known crash\nKnownFailure:   run-crash ; ; issue 242 (Lack of backpressure in RPC injection leads to obscure memory-exhaustion crashes)\n\n# ------------------------------------------\n# Guide examples:\n\nTestName:       hello-world-par\nPassExpr:       ^Hello world from\n\nTestName:       compute-pi-par\nAppArgs:        10000\nPassExpr:       ^pi estimate: 3.1\n\nTestName:       compute-pi-multi-examples-par\nAppArgs:        10000\n\nTestName:       rb1d-av-par\nPassExpr:       ^Converged at\n\nTestName:       dmap-test-par\n\nTestName:       dmap-async-insert-test-par\n\nTestName:       dmap-async-find-test-par\n\nTestName:       dmap-quiescence-test-par\n\nTestName:       dmap-atomics-test-par\n\nTestName:       dmap-conjoined-test-par\n\nTestName:       dmap-promises-test-par\n\nTestName:       team_simple-par\n\nTestName:       team_advanced-par\n\nTestName:       non-contig-example-par\n\nTestName:       view-histogram1-par\n\nTestName:       view-histogram2-par\n\nTestName:       view-matrix-tasks-par\n\n# persona-example spins 11 threads/proc, leading to overcommit,\n# so turn down the proc count and iteration count\nTestName:       persona-example-par\nDynamicThreads: 2\nAppArgs:        1000\nAppEnv:         UPCXX_OVERSUBSCRIBED=1\nKnownFailure:   run-time ; upcxx_lpc_inbox_locked ; issue 245 (persona-example deadlocks with UPCXX_LPC_INBOX=locked)\n\nTestName:       persona-example-rputs-par\n\nTestName:       h-d-par\nFailExpr:       Failure\nPassExpr:       Success\nRequireFeature: gasnet_has_par,upcxx_cuda\n\nTestName:       h-d-remote-par\nFailExpr:       Failure\nPassExpr:       Success\nRequireFeature: gasnet_has_par,upcxx_cuda\n\n# ------------------------------------------\n# upcxx-extras\n\nTestName:       allocator-example-par\n\n# ------------------------------------------\n# misc examples\n\nTestName:       cuda_vecadd-par\nRequireFeature: gasnet_has_par,upcxx_cuda_compute_30\n\n# ------------------------------------------\n# upcxx-extras : guppie\n# ------------------------------------------\n\nBEGIN_DEFAULT_CONFIG\nFlags:          \nFiles:          \nDynamicThreads: $DEFAULT$\nStaticThreads:  0\nProcPerNode:    1\nPthreads:       0\nCompileResult:  pass\nPassExpr:       passed\nFailExpr:       ERROR\nExitCode:       0\nBuildCmd:       make,notrans\nAppArgs:        \nAppEnv:\nTimeLimit:      $DEFAULT$\nRequireFeature: gasnet,upcxx\nProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC\nRunCmd:         ./launcher -np %N %P %A\n# Note \"reset\" of LDFLAGS avoids problems with those in harness environment\nMakeFlags:      debug   ; DBGSYM=1 OPTLEV=0 ASSERT=1 UPCXX_CODEMODE=debug LDFLAGS=\nMakeFlags:      nodebug ; DBGSYM=0 OPTLEV=3 ASSERT=0 UPCXX_CODEMODE=O3    LDFLAGS=\nSaveOutput: 1\nBenchmarkResult: rate\\s*=\\s*(\\S+)\\s*(Mup/s)\nAppArgs: \t-l20 -m1 -h0\nEND_DEFAULT_CONFIG\n\nTestName:       guppie-rma-seq\nAppArgs: \t-l20 -m1 -h0.10\n\nTestName:       guppie-amo-seq\n\nTestName:       guppie-amo-pipe-seq\n\nTestName:       guppie-rpc-seq\n\nTestName:       guppie-rpc_ff-seq\n\nTestName:       guppie-rma-par\nRequireFeature: gasnet_has_par,upcxx\nAppArgs: \t-l20 -m1 -h0.10\n\nTestName:       guppie-amo-par\nRequireFeature: gasnet_has_par,upcxx\n\nTestName:       guppie-amo-pipe-par\nRequireFeature: gasnet_has_par,upcxx\n\nTestName:       guppie-rpc-par\nRequireFeature: gasnet_has_par,upcxx\n\nTestName:       guppie-rpc_ff-par\nRequireFeature: gasnet_has_par,upcxx\n\n# ------------------------------------------\n# upcxx-extras : jac3d\n# ------------------------------------------\n\nBEGIN_DEFAULT_CONFIG\nFlags:          \nFiles:          \nDynamicThreads: $DEFAULT$\nStaticThreads:  0\nProcPerNode:    1\nPthreads:       0\nCompileResult:  pass\nPassExpr:       SUCCESS\nFailExpr:       FAIL\nExitCode:       0\nBuildCmd:       make,notrans\nAppEnv:\nTimeLimit:      $DEFAULT$\nProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC\nRunCmd:         ./launcher -np %N %P %A\nMakeFlags:      debug   ; OPT=-g\nMakeFlags:      nodebug ; OPT=-O3\nSaveOutput: 1\nBenchmarkResult: GFLOPS\\s*:\\s*([^\\n]+)\\n(?:.|\\n)*?(Gflops)\nAppArgs: \t-N 256 -i 1000 \nEND_DEFAULT_CONFIG\n\nTestName:       jac3d-seq\nRequireFeature: upcxx_cuda_compute_30\n\nTestName:       jac3d-par\nRequireFeature: gasnet_has_par,upcxx_cuda_compute_30\n\n# ------------------------------------------\n# upcxx-extras : extend-add\n# ------------------------------------------\n\nBEGIN_DEFAULT_CONFIG\nFlags:          \nFiles:          \nDynamicThreads: $DEFAULT$\nStaticThreads:  0\nProcPerNode:    1\nPthreads:       0\nCompileResult:  pass\nPassExpr:       SUCCESS\nFailExpr:       FAIL\nExitCode:       0\nBuildCmd:       make,notrans\nAppEnv:\nTimeLimit:      $DEFAULT$ * 3\nProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC\nRunCmd:         ./launcher -np %N %P %A\n# Note \"reset\" of LDFLAGS avoids problems with those in harness environment\nMakeFlags:      debug   ; OPT=-g  LDFLAGS=\nMakeFlags:      nodebug ; OPT=\"-O3 -DNDEBUG\" LDFLAGS=\nMakeFlags:      cc_pgi ; UPCXX_EXTENDADD_EXTRA=\"-w -Mnoopenmp\"\nSaveOutput: 1\nBenchmarkResult: multifrontal_factorization maximum value:\\s*([^\\s]+)\\s*(s)\nAppEnv:         UPCXX_SHARED_HEAP_SIZE=1GB\nAppArgs: \t!UPCXX_EXTENDADD_INPUTPATH!/audikw_1/audikw_1_$THREADS$.dmp  \nEND_DEFAULT_CONFIG\n\nTestName:       extend-add_upcxx-seq\nRequireFeature: upcxx,upcxx_extendadd\n\nTestName:       extend-add_upcxx-par\nRequireFeature: gasnet_has_par,upcxx,upcxx_extendadd\n\nTestName:       extend-add_mpi_p2p-seq\nRunCmd:         ./launcher-mpi -np %N %P %A\nRequireFeature: upcxx,upcxx_extendadd,gasnet_has_mpi\n\nTestName:       extend-add_mpi_collective-seq\nRunCmd:         ./launcher-mpi -np %N %P %A\nRequireFeature: upcxx,upcxx_extendadd,gasnet_has_mpi\n\n# ------------------------------------------\n# UPC interoperability\n# ------------------------------------------\n\nBEGIN_DEFAULT_CONFIG\nFlags:          \nFiles:          \nDynamicThreads: $DEFAULT$\nStaticThreads:  0\nProcPerNode:    1\nPthreads:       0\nCompileResult:  pass\nPassExpr:       SUCCESS\nFailExpr:       ERROR\nExitCode:       0\nBuildCmd:       make,notrans\nAppArgs:        \nAppEnv:         GASNET_MAX_SEGSIZE=64MB UPC_SHARED_HEAP_SIZE=64MB UPCXX_SHARED_HEAP_SIZE=32MB\nTimeLimit:      $DEFAULT$\nRequireFeature: gasnet,upcxx\nProhibitFeature: hack_for_nonupc_test  # mark this suite as non-UPC\nRunCmd:         ./launcher -np %N %P %A\nMakeFlags:      debug   ; DBGSYM=1 OPTLEV=0 ASSERT=1 UPCXX_CODEMODE=debug\nMakeFlags:      nodebug ; DBGSYM=0 OPTLEV=3 ASSERT=0 UPCXX_CODEMODE=O3\nSaveOutput: 1\nEND_DEFAULT_CONFIG\n\nTestName:       upc-main_upc-seq\n\nTestName:       upc-main_upcxx-seq\n\nTestName:       upc-alloc-seq\nAppArgs:        10 32\nFileLimit:      1200 + 2000 * $THREADS$\n\nTestName:       upc-arrval_upc-seq\n\nTestName:       upc-arrval_upcxx-seq\n\n# PAR UPC interop requires upcr/configure --enable-uses-threads and harness -add_feature=uses_threads_support\n\nTestName:       upc-main_upc-par\nRequireFeature: gasnet_has_par,upcxx,uses_threads_support\n\nTestName:       upc-main_upcxx-par\nRequireFeature: gasnet_has_par,upcxx,uses_threads_support\n\nTestName:       upc-alloc-par\nRequireFeature: gasnet_has_par,upcxx,uses_threads_support\nAppArgs:        10 32\nFileLimit:      1200 + 2000 * $THREADS$\n\nTestName:       upc-arrval_upc-par\nRequireFeature: gasnet_has_par,upcxx,uses_threads_support\n\nTestName:       upc-arrval_upcxx-par\nRequireFeature: gasnet_has_par,upcxx,uses_threads_support\n\n# upcc -pthreads tests, require PAR UPC++ but not -uses-threads\n#\nTestName:       upc-pth_main_upc-par\nRequireFeature: pthread_support,upcxx\n\nTestName:       upc-pth_arrval_upc-par\nRequireFeature: pthread_support,upcxx\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-gasnet-2019.9.0-4evf7f2vy4rwdltpz5ir4xbvf5z5rxyu/spack-src/tests/upcr-harness/external-legion/harness.conf": "# This suite is independent of UPC compiler:\nKnownFailureAnySpec\n\nBEGIN_DEFAULT_CONFIG\nMakeFlags:      \nFlags:          \nFiles:          \nDynamicThreads: $DEFAULT$\nStaticThreads:  0\nProcPerNode:    1\nPthreads:       0\nCompileResult:  pass\nPassExpr:       SUCCESS!\nFailExpr:       ERROR\nExitCode:       0\nBuildCmd:       make,notrans\nAppArgs:        \nAppEnv:         network_udp; GASNET_QUIET=1\nTimeLimit:      $DEFAULT$\nRequireFeature: gasnet_has_par,legion\n# debug: HSL issues\n# segment_everything: heap management\n# hack_for_nonupc_test: mark this suite as non-UPC\nProhibitFeature: debug,segment_everything,hack_for_nonupc_test\nRunCmd:         ./launcher -np %N %P %A\nWarningFilter:  os_cnl ; .*?warning: Using .dlopen. in statically linked applications.*?\nWarningFilter:  cc_intel ; .*?warning .*?: option .-Wno-strict-overflow. not supported.*?\nWarningFilter:  cc_intel ; .*?warning .*?: ignoring unknown option .-Wno-strict-overflow.*?\nEND_DEFAULT_CONFIG\n\n# ------------------------------------------\n# Tests to compile, but not run\n\nTestName:\t_legion\nCompileTimeLimit: 4 * $DEFAULT$\n# So this test can match the \"runnable\" filter:\nRunCmd:         true\nPassExpr:       0\n\n# ------------------------------------------\n# Examples directory:\n\nTestName:       circuit\n\nTestName:       ghost\nAppArgs:        -ll:cpu 4\nPassExpr:       Test completed.\n\nTestName:       ghost_pull\nAppArgs:        -ll:cpu 4\nPassExpr:       Test completed.\n\nTestName:       realm_saxpy\nWarningFilter:  cc_clang ; .*?warning: .*?Wenum-compare-switch.*?\n\nTestName:       spmd_cgsolver\nAppArgs:        -ll:cpu 4\nPassExpr:       spmd tasks complete\n\nTestName:       virtual_map\nPassExpr:       0\n\n# ------------------------------------------\n# Tutorials directory:\n\nTestName:       hello_world\nPassExpr:       Hello World!\nSaveOutput:     1 # Helps debug spawner\n\nTestName:       tasks_and_futures\nPassExpr:       Fibonacci\\(6\\) = 8\n\nTestName:       index_tasks\nPassExpr:       All checks passed!\n\nTestName:       global_vars\nPassExpr:       0 # No output verification\n\nTestName:       logical_regions\nPassExpr:       Successfully cleaned up all of our resources\n\nTestName:       physical_regions\n\nTestName:       privileges\n\nTestName:       partitioning\n\nTestName:       multiple_partitions\n\nTestName:       custom_mapper\n\n# ------------------------------------------\n# Test directory:\n\nTestName:       attach_file_mini\nPassExpr:       0 # No output verification\nKnownFailure:   run-all; os_darwin ; https://github.com/StanfordLegion/legion/issues/213\n\n# ------------------------------------------\n# Clean up - MUST BE LAST\nTestName:\t_legion_clean\nRequireFeature: gasnet_has_par,legion,legion_clean\n# So this test can match the \"runnable\" filter:\nRunCmd:         true\nPassExpr:       0\n# ------------------------------------------\n# DO NOT ADD ANY TESTS BELOW THIS LINE\n"
    },
    "skipped": [],
    "total_files": 372
}