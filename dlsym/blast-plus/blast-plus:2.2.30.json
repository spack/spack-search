{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/corelib/ncbidll.cpp": "/*  $Id: ncbidll.cpp 311608 2011-07-12 16:01:42Z gouriano $\n * ===========================================================================\n *\n *                            PUBLIC DOMAIN NOTICE\n *               National Center for Biotechnology Information\n *\n *  This software/database is a \"United States Government Work\" under the\n *  terms of the United States Copyright Act.  It was written as part of\n *  the author's official duties as a United States Government employee and\n *  thus cannot be copyrighted.  This software/database is freely available\n *  to the public for use. The National Library of Medicine and the U.S.\n *  Government have not placed any restriction on its use or reproduction.\n *\n *  Although all reasonable efforts have been taken to ensure the accuracy\n *  and reliability of the software and data, the NLM and the U.S.\n *  Government do not and cannot warrant the performance or results that\n *  may be obtained by using this software or data. The NLM and the U.S.\n *  Government disclaim all warranties, express or implied, including\n *  warranties of performance, merchantability or fitness for any particular\n *  purpose.\n *\n *  Please cite the author in any work or product based on this material.\n *\n * ===========================================================================\n *\n * Author: Vladimir Ivanov, Denis Vakatov\n *\n * File Description:\n *   Portable DLL handling\n *\n */\n\n#include <ncbi_pch.hpp>\n#include <corelib/ncbidll.hpp>\n#include <corelib/ncbifile.hpp>\n#include <corelib/ncbiapp.hpp>\n#include <corelib/error_codes.hpp>\n#include \"ncbisys.hpp\"\n\n\n#if defined(NCBI_OS_MSWIN)\n#  include <corelib/ncbi_os_mswin.hpp>\n#elif defined(NCBI_OS_UNIX)\n#  ifdef NCBI_OS_DARWIN\n#    include <mach-o/dyld.h>\n#  endif\n#  ifdef HAVE_DLFCN_H\n#    include <dlfcn.h>\n#    ifndef RTLD_LOCAL /* missing on Cygwin? */\n#      define RTLD_LOCAL 0\n#    endif\n#  endif\n#else\n#  error \"Class CDll defined only for MS Windows and UNIX platforms\"\n#endif\n\n#if defined(NCBI_OS_MSWIN)\n#  pragma warning (disable : 4191)\n#endif\n\n\n#define NCBI_USE_ERRCODE_X   Corelib_Dll\n\n\nBEGIN_NCBI_SCOPE\n\n\n// Platform-dependent DLL handle type definition\nstruct SDllHandle {\n#if defined(NCBI_OS_MSWIN)\n    HMODULE handle;\n#elif defined(NCBI_OS_UNIX)\n    void*   handle;\n#endif\n};\n\n// Check flag bits\n#define F_ISSET(mask) ((m_Flags & (mask)) == (mask))\n// Clean up an all non-default bits in group if all bits are set\n#define F_CLEAN_REDUNDANT(group) \\\n    if (F_ISSET(group)) m_Flags &= ~unsigned((group) & ~unsigned(fDefault))\n\n\nCDll::CDll(const string& name, TFlags flags)\n{\n    x_Init(kEmptyStr, name, flags);\n}\n\nCDll::CDll(const string& path, const string& name, TFlags flags)\n{\n    x_Init(path, name, flags);\n}\n\nCDll::CDll(const string& name, ELoad when_to_load, EAutoUnload auto_unload,\n           EBasename treate_as)\n{\n    x_Init(kEmptyStr, name,\n           TFlags(when_to_load) | TFlags(auto_unload) | TFlags(treate_as));\n}\n\n\nCDll::CDll(const string& path, const string& name, ELoad when_to_load,\n           EAutoUnload auto_unload, EBasename treate_as)\n{\n    x_Init(path, name,\n           TFlags(when_to_load) | TFlags(auto_unload) | TFlags(treate_as));\n}\n\n\nCDll::~CDll()\n{\n    // Unload DLL automaticaly\n    if ( F_ISSET(fAutoUnload) ) {\n        try {\n            Unload();\n        } catch(CException& e) {\n            NCBI_REPORT_EXCEPTION_X(1, \"CDll destructor\", e);\n        }\n    }\n    delete m_Handle;\n}\n\n\nvoid CDll::x_Init(const string& path, const string& name, TFlags flags)\n{\n    // Save flags\n    m_Flags = flags;\n\n    // Reset redundant flags\n    F_CLEAN_REDUNDANT(fLoadNow    | fLoadLater);\n    F_CLEAN_REDUNDANT(fAutoUnload | fNoAutoUnload);\n    F_CLEAN_REDUNDANT(fBaseName   | fExactName);\n    F_CLEAN_REDUNDANT(fGlobal     | fLocal);\n\n    // Init members\n    m_Handle = 0;\n    string x_name = name;\n#if defined(NCBI_OS_MSWIN)\n    NStr::ToLower(x_name);\n#endif\n    // Process DLL name\n    if (F_ISSET(fBaseName)  &&\n        name.find_first_of(\":/\\\\\") == NPOS  &&\n        !CDirEntry::MatchesMask(name.c_str(),\n                                NCBI_PLUGIN_PREFIX \"*\" NCBI_PLUGIN_MIN_SUFFIX\n                                \"*\")\n        ) {\n        // \"name\" is basename\n        x_name = NCBI_PLUGIN_PREFIX + x_name + NCBI_PLUGIN_SUFFIX;\n    }\n    m_Name = CDirEntry::ConcatPath(path, x_name);\n    // Load DLL now if indicated\n    if (F_ISSET(fLoadNow)) {\n        Load();\n    }\n}\n\n\nvoid CDll::Load(void)\n{\n    // DLL is already loaded\n    if ( m_Handle ) {\n        return;\n    }\n    // Load DLL\n    _TRACE(\"Loading dll: \"<<m_Name);\n#if defined(NCBI_OS_MSWIN)\n    UINT errMode = SetErrorMode(SEM_FAILCRITICALERRORS);\n    HMODULE handle = LoadLibrary(_T_XCSTRING(m_Name));\n    SetErrorMode(errMode);\n#elif defined(NCBI_OS_UNIX)\n#  ifdef HAVE_DLFCN_H\n    int flags = RTLD_LAZY | (F_ISSET(fLocal) ? RTLD_LOCAL : RTLD_GLOBAL);\n    void* handle = dlopen(m_Name.c_str(), flags);\n#  else\n    void* handle = 0;\n#  endif\n#endif\n    if ( !handle ) {\n        x_ThrowException(\"CDll::Load\");\n    }\n    m_Handle = new SDllHandle;\n    m_Handle->handle = handle;\n}\n\n\nvoid CDll::Unload(void)\n{\n    // DLL is not loaded\n    if ( !m_Handle ) {\n        return;\n    }\n    _TRACE(\"Unloading dll: \"<<m_Name);\n    // Unload DLL\n#if defined(NCBI_OS_MSWIN)\n    BOOL unloaded = FreeLibrary(m_Handle->handle);\n#elif defined(NCBI_OS_UNIX)\n#  ifdef HAVE_DLFCN_H\n    bool unloaded = dlclose(m_Handle->handle) == 0;\n#  else\n    bool unloaded = false;\n#  endif\n#endif\n    if ( !unloaded ) {\n        x_ThrowException(\"CDll::Unload\");\n    }\n\n    delete m_Handle;\n    m_Handle = 0;\n}\n\n\nCDll::TEntryPoint CDll::GetEntryPoint(const string& name)\n{\n    // If DLL is not yet loaded\n    if ( !m_Handle ) {\n        Load();\n    }\n    _TRACE(\"Getting entry point: \"<<name);\n    TEntryPoint entry;\n\n    // Return address of entry (function or data)\n#if defined(NCBI_OS_MSWIN)\n    FARPROC ptr = GetProcAddress(m_Handle->handle, name.c_str());\n#elif defined(NCBI_OS_DARWIN)\n    NSModule module = (NSModule)m_Handle->handle;\n    NSSymbol nssymbol = NSLookupSymbolInModule(module, name.c_str());\n    void* ptr = 0;\n    ptr = NSAddressOfSymbol(nssymbol);\n    if (ptr == NULL) {\n        ptr = dlsym (m_Handle->handle, name.c_str());\n    }\n#elif defined(NCBI_OS_UNIX)  &&  defined(HAVE_DLFCN_H)\n    void* ptr = 0;\n    ptr = dlsym(m_Handle->handle, name.c_str());\n#else\n    void* ptr = 0;\n#endif\n    entry.func = (FEntryPoint)ptr;\n    entry.data = ptr;\n    return entry;\n}\n\n\nvoid CDll::x_ThrowException(const string& what)\n{\n#if defined(NCBI_OS_MSWIN)\n    TXChar* ptr = NULL;\n    FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER |\n                  FORMAT_MESSAGE_FROM_SYSTEM |\n                  FORMAT_MESSAGE_IGNORE_INSERTS,\n                  NULL, GetLastError(),\n                  MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n                  (TXChar*) &ptr, 0, NULL);\n    string errmsg = ptr ? _T_CSTRING(ptr) : \"unknown reason\";\n    LocalFree(ptr);\n#elif defined(NCBI_OS_UNIX)\n#  ifdef HAVE_DLFCN_H\n    const char* errmsg = dlerror();\n    if ( !errmsg ) {\n        errmsg = \"unknown reason\";\n    }\n#  else\n    const char* errmsg = \"No DLL support on this platform.\";\n#  endif\n#endif\n\n    NCBI_THROW(CCoreException, eDll, what + \" [\" + m_Name +\"]: \" + errmsg);\n}\n\n\nCDllResolver::CDllResolver(const string& entry_point_name,\n                           CDll::EAutoUnload unload)\n    : m_AutoUnloadDll(unload)\n{\n    m_EntryPoinNames.push_back(entry_point_name);\n}\n\nCDllResolver::CDllResolver(const vector<string>& entry_point_names,\n                           CDll::EAutoUnload unload)\n    : m_AutoUnloadDll(unload)\n{\n    m_EntryPoinNames = entry_point_names;\n}\n\nCDllResolver::~CDllResolver()\n{\n    Unload();\n}\n\nbool CDllResolver::TryCandidate(const string& file_name,\n                                const string& driver_name)\n{\n    try {\n        CDll* dll = new CDll(file_name, CDll::fLoadNow | CDll::fNoAutoUnload);\n        CDll::TEntryPoint p;\n\n        SResolvedEntry entry_point(dll);\n\n        ITERATE(vector<string>, it, m_EntryPoinNames) {\n            string entry_point_name;\n\n            const string& dll_name = dll->GetName();\n\n            if ( !dll_name.empty() ) {\n                string base_name;\n                CDirEntry::SplitPath(dll_name, 0, &base_name, 0);\n                NStr::Replace(*it,\n                              \"${basename}\", base_name, entry_point_name);\n\n                if (!driver_name.empty()) {\n                    NStr::Replace(*it,\n                            \"${driver}\", driver_name, entry_point_name);\n                }\n            }\n\n            // Check for the BASE library name macro\n\n            if ( entry_point_name.empty() )\n                continue;\n            p = dll->GetEntryPoint(entry_point_name);\n            if ( p.data ) {\n                entry_point.entry_points.push_back(SNamedEntryPoint(entry_point_name, p));\n            }\n        } // ITERATE\n\n        if ( entry_point.entry_points.empty() ) {\n            dll->Unload();\n            delete dll;\n            return false;\n        }\n\n        m_ResolvedEntries.push_back(entry_point);\n    }\n    catch (CCoreException& ex)\n    {\n        if (ex.GetErrCode() != CCoreException::eDll)\n            throw;\n        return false;\n    }\n\n    return true;\n}\n\nstatic inline\nstring s_GetProgramPath(void)\n{\n    string dir;\n    CDirEntry::SplitPath\n        (CNcbiApplication::GetAppName(CNcbiApplication::eFullName), &dir);\n    return dir;\n}\n\nvoid CDllResolver::x_AddExtraDllPath(vector<string>& paths, TExtraDllPath which)\n{\n    // Nothing to do\n\n    if (which == fNoExtraDllPath) {\n        return;\n    }\n\n    // Add program executable path\n\n    if ((which & fProgramPath) != 0) {\n        string dir = s_GetProgramPath();\n        if ( !dir.empty() ) {\n            paths.push_back(dir);\n        }\n    }\n\n    // Add systems directories\n\n    if ((which & fSystemDllPath) != 0) {\n#if defined(NCBI_OS_MSWIN)\n        // Get Windows system directories\n        TXChar buf[MAX_PATH+1];\n        UINT len = GetSystemDirectory(buf, MAX_PATH+1);\n        if (len>0  &&  len<=MAX_PATH) {\n            paths.push_back(_T_STDSTRING(buf));\n        }\n        len = GetWindowsDirectory(buf, MAX_PATH+1);\n        if (len>0  &&  len<=MAX_PATH) {\n            paths.push_back(_T_STDSTRING(buf));\n        }\n        // Parse PATH environment variable\n        const TXChar* env = NcbiSys_getenv(_TX(\"PATH\"));\n        if (env  &&  *env) {\n            NStr::Tokenize(_T_STDSTRING(env), \";\", paths);\n        }\n\n#elif defined(NCBI_OS_UNIX)\n        // From LD_LIBRARY_PATH environment variable\n        const char* env = getenv(\"LD_LIBRARY_PATH\");\n        if (env  &&  *env) {\n            NStr::Tokenize(env, \":\", paths);\n        }\n#endif\n    }\n\n    // Add hardcoded runpath\n\n    if ((which & fToolkitDllPath) != 0) {\n        const char* runpath = NCBI_GetRunpath();\n        if (runpath  &&  *runpath) {\n#  if defined(NCBI_OS_MSWIN)\n            NStr::Tokenize(runpath, \";\", paths);\n#  elif defined(NCBI_OS_UNIX)\n            vector<string> tokenized;\n            NStr::Tokenize(runpath, \":\", tokenized);\n            ITERATE(vector<string>, i, tokenized) {\n                if (i->find(\"$ORIGIN\") == NPOS) {\n                    paths.push_back(*i);\n                } else {\n                    string dir = s_GetProgramPath();\n                    if ( !dir.empty() ) {\n                        // Need to know the $ORIGIN else discard path.\n                        paths.push_back(NStr::Replace(*i, \"$ORIGIN\", dir));\n                    }\n                }\n            }\n#  else\n            paths.push_back(runpath);\n#  endif\n        }\n    }\n\n    return;\n}\n\nvoid CDllResolver::Unload()\n{\n    NON_CONST_ITERATE(TEntries, it, m_ResolvedEntries) {\n        if ( m_AutoUnloadDll == CDll::eAutoUnload ) {\n            it->dll->Unload();\n        }\n        delete it->dll;\n    }\n    m_ResolvedEntries.resize(0);\n}\n\n\nEND_NCBI_SCOPE\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/serial/datatool/testdata/data/set.bin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/serial/datatool/testdata/res/set.bin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/util/compress/bzip2/bzip2.txt",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/util/compress/bzip2/bzip2.1.preformatted",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/util/compress/bzip2/manual.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/objtools/blast/seqdb_reader/SeqDB-design-1.sxi",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/objtools/blast/blastdb_format/unit_test/data/mask-data-db.pab",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/objtools/blast/blastdb_format/unit_test/data/seqp.psi",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/objtools/blast/blastdb_format/unit_test/data/mask-data-db.paa",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/objtools/blast/blastdb_format/unit_test/data/mask-data-db.pnd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/objtools/blast/blastdb_format/unit_test/data/seqp.pnd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/objtools/blast/blastdb_format/unit_test/data/mask-data-db.pac",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/objtools/blast/blastdb_format/unit_test/data/seqp.phr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/objtools/blast/blastdb_format/unit_test/data/seqp.pin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/objtools/blast/blastdb_format/unit_test/data/mask-data-db.pin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/objtools/blast/blastdb_format/unit_test/data/seqp.pni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/objtools/blast/blastdb_format/unit_test/data/mask-data-db.pni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/objtools/blast/blastdb_format/unit_test/data/mask-data-db.phr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/objtools/blast/gene_info_reader/unit_test/data/geneinfo.g2o",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/objtools/blast/gene_info_reader/unit_test/data/geneinfo.i2o",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/objects/seqfeat/SubSource.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/build-system/project_tree_builder_gui/bin/ptbgui.jar",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/build-system/project_tree_builder_gui/bin/lib/swing-layout-1.0.4.jar",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/build-system/project_tree_builder_gui/bin/lib/swing-layout-1.0.3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/build-system/project_tree_builder/ncbilogo.ico",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/long-tis.nin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/nrshort.old.phr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/seqn.nhr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/long-tis.nsq",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/mask-data-db.pab",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/user-column-db.pog",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/ntshort.old.nsq",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/seqp.psi",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/mini-gnomon.psi",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/seqn.nnd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/sparse_id.nhr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/mask-data-db.paa",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/wp_nr.ppd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/ntshort.nsi",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/long-tis.nhr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/ntshort.nhr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/wgs.ABDC.gil",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/seqn.nni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/user-column-db.pni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/prot345b.gil",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/user-column-db.pin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/nrshort.old.pni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/mask-data-db.pnd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/ntshort.old.nni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/wp_nr.psi",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/nrshort.pog",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/ntshort.old.nnd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/broken-mask-data-db.phr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/mini-gnomon.pin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/ntshort.nin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/sparse_id.nin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/wp_nr.pnd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/nrshort.old.psi",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/nrshort.old.pin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/broken-mask-data-db.psi",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/mini-gnomon.phr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/seqp.pnd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/mask-data-db.pac",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/seqn.nin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/wp_nr.pni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/ntshort.nnd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/seqp.phr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/f555.nhr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/user-column-db.psi",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/ntshort.nni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/user-column-db.pnd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/wp_nr.phr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/mask-data-db.pog",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/broken-mask-data-db.pni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/nrshort.old.pog",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/seqp.pin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/seqp.pog",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/wp_nr.pin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/wp_nr.ppi",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/seqn.nsi",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/seqn.nog",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/f556.nsq",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/f556.nhr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/short-tis.nsq",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/ntshort.nsq",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/mask-data-db.pin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/nrshort.old.pnd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/broken-mask-data-db.pin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/nrshort.pnd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/short-tis.nhr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/sparse_id.nsq",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/wgs.AADN.gil",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/ntshort.old.nhr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/long-tis.nti",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/ntshort.nog",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/f555.nsq",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/wp_nr.pog",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/nrshort.psi",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/seqp.pni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/broken-mask-data-db.pnd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/nrshort.phr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/mask-data-db.pni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/short-tis.nti",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/mask-data-db.phr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/short-tis.ntd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/user-column-db.phr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/seqn.nsq",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/ntshort.old.nog",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/long-tis.ntd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/mini-gnomon.pog",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/short-tis.nin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/broken-mask-data-db.pab",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/ntshort.old.nin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/sparse_id.nni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/f555.nin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/nrshort.pni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/nrshort.pin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/seqdb_reader/data/ranges/evenp.msk",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/rpstest_be.pnd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/seqn.nhr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/nt.41646578.nab",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/seqp.psi",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/seqn.nnd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/rpstest_le.rps",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/deltatest_nocbs.pin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/rpstest_be.loo",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/deltatest.freq",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/seqn.nni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/rpstest_le.pin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/deltatest.pin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/nt.41646578.nin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/deltatest_nocbs.phr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/rpstest_be.phr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/nt.41646578.nsq",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/deltatest.rps",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/deltatest_nocbs.rps",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/nt.41646578.naa",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/seqp.pnd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/deltatest.loo",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/seqn.nin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/rpstest_le.freq",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/seqp.phr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/deltatest_nocbs.obsr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/rpstest_le.pnd",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/rpstest_be.rps",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/seqp.pin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/seqn.nsi",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/rpstest_le.pni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/rpstest_le.loo",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/nt.41646578.nog",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/rpstest_be.pin",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/seqp.pni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/deltatest.obsr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/rpstest_be.pni",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/nt.41646578.nac",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/nt.41646578.nhr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/deltatest_nocbs.wcounts",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/seqn.nsq",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/rpstest_le.phr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/deltatest_nocbs.loo",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/deltatest.phr",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/unit_tests/api/data/deltatest.wcounts",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/src/algo/blast/dbindex/README.usage",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/include/corelib/mswin_no_popup.h",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/include/objtools/blast/seqdb_reader/impl/seqdbatlas.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/compilers/msvc900_prj/ncbilogo.ico",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/compilers/vs2012/ncbilogo.ico",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/compilers/msvc1000_prj/ncbilogo.ico",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/compilers/unix/cxx_filter.WorkShop.sh",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/compilers/vs2013/ncbilogo.ico",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/compilers/xCode/cpp.icns",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/compilers/xCode/Application.applescript",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/compilers/xCode/English.lproj/InfoPlist.strings",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/compilers/xCode/English.lproj/MainMenu.nib/keyedobjects.nib",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/compilers/xCode/English.lproj/InstallLibsPanel.nib/keyedobjects.nib",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/scripts/projects/blast/post_build/win/ncbilogo.ico",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/scripts/projects/blast/post_build/macosx/large-Blue_ncbi_logo.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/scripts/projects/blast/post_build/macosx/uninstall_ncbi_blast.zip",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/scripts/projects/igblast/post_build/win/ncbilogo.ico",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/scripts/projects/igblast/post_build/macosx/large-Blue_ncbi_logo.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-blast-plus-2.2.30-pdkdy2ipgjs3p5a3pgbw2umqkymlkewj/spack-src/c++/scripts/projects/igblast/post_build/macosx/uninstall_ncbi_igblast.zip"
    ],
    "total_files": 4581
}