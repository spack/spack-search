{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/aclocal.m4": "dnl $LynxId: aclocal.m4,v 1.252 2018/07/08 15:22:44 tom Exp $\ndnl Macros for auto-configure script.\ndnl by Thomas E. Dickey <dickey@invisible-island.net>\ndnl and Jim Spath <jspath@mail.bcpl.lib.md.us>\ndnl and Philippe De Muyter <phdm@macqel.be>\ndnl\ndnl Created: 1997/01/28\ndnl\ndnl The autoconf used in Lynx development is GNU autoconf 2.13 or 2.52, patched\ndnl by Thomas Dickey.  See your local GNU archives, and this URL:\ndnl https://invisible-island.net/autoconf/autoconf.html\ndnl\ndnl ---------------------------------------------------------------------------\ndnl\ndnl Copyright 1997-2017,2018 by Thomas E. Dickey\ndnl\ndnl Permission to use, copy, modify, and distribute this software and its\ndnl documentation for any purpose and without fee is hereby granted,\ndnl provided that the above copyright notice appear in all copies and that\ndnl both that copyright notice and this permission notice appear in\ndnl supporting documentation, and that the name of the above listed\ndnl copyright holder(s) not be used in advertising or publicity pertaining\ndnl to distribution of the software without specific, written prior\ndnl permission.\ndnl\ndnl THE ABOVE LISTED COPYRIGHT HOLDER(S) DISCLAIM ALL WARRANTIES WITH REGARD\ndnl TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\ndnl AND FITNESS, IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE\ndnl LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\ndnl WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\ndnl ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\ndnl OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\ndnl\ndnl ---------------------------------------------------------------------------\ndnl A few macros (the AM_xxx ones) are originally from gettext 0.10.35 (but\ndnl are modified), and are part of this file due to mechanical limitations of\ndnl autoconf.\ndnl ---------------------------------------------------------------------------\ndnl ---------------------------------------------------------------------------\ndnl AM_GNU_GETTEXT version: 14 updated: 2015/04/15 19:08:48\ndnl --------------\ndnl Usage: Just like AM_WITH_NLS, which see.\nAC_DEFUN([AM_GNU_GETTEXT],\n  [AC_REQUIRE([AC_PROG_MAKE_SET])dnl\n   AC_REQUIRE([AC_CANONICAL_HOST])dnl\n   AC_REQUIRE([AC_PROG_RANLIB])dnl\n   AC_REQUIRE([AC_HEADER_STDC])dnl\n   AC_REQUIRE([AC_C_INLINE])dnl\n   AC_REQUIRE([AC_TYPE_OFF_T])dnl\n   AC_REQUIRE([AC_TYPE_SIZE_T])dnl\n   AC_REQUIRE([AC_FUNC_ALLOCA])dnl\n   AC_REQUIRE([AC_FUNC_MMAP])dnl\n   AC_REQUIRE([jm_GLIBC21])dnl\n   AC_REQUIRE([CF_PROG_CC])dnl\n\n   AC_CHECK_HEADERS([argz.h limits.h locale.h nl_types.h malloc.h stddef.h \\\nstdlib.h string.h unistd.h sys/param.h])\n   AC_CHECK_FUNCS([feof_unlocked fgets_unlocked getcwd getegid geteuid \\\ngetgid getuid mempcpy munmap putenv setenv setlocale stpcpy strchr strcasecmp \\\nstrdup strtoul tsearch __argz_count __argz_stringify __argz_next])\n\n   AM_ICONV\n   AM_LANGINFO_CODESET\n   AM_LC_MESSAGES\n   AM_WITH_NLS([$1],[$2],[$3],[$4])\n\n   if test \"x$CATOBJEXT\" != \"x\"; then\n     if test \"x$ALL_LINGUAS\" = \"x\"; then\n       LINGUAS=\n     else\n       AC_MSG_CHECKING(for catalogs to be installed)\n       NEW_LINGUAS=\n       for presentlang in $ALL_LINGUAS; do\n         useit=no\n         for desiredlang in ${LINGUAS-$ALL_LINGUAS}; do\n           # Use the presentlang catalog if desiredlang is\n           #   a. equal to presentlang, or\n           #   b. a variant of presentlang (because in this case,\n           #      presentlang can be used as a fallback for messages\n           #      which are not translated in the desiredlang catalog).\n           case \"$desiredlang\" in\n             (\"$presentlang\"*) useit=yes;;\n           esac\n         done\n         if test $useit = yes; then\n           NEW_LINGUAS=\"$NEW_LINGUAS $presentlang\"\n         fi\n       done\n       LINGUAS=$NEW_LINGUAS\n       AC_MSG_RESULT($LINGUAS)\n     fi\n\n     dnl Construct list of names of catalog files to be constructed.\n     if test -n \"$LINGUAS\"; then\n       for lang in $LINGUAS; do CATALOGS=\"$CATALOGS $lang$CATOBJEXT\"; done\n     fi\n   fi\n\n   dnl Enable libtool support if the surrounding package wishes it.\n   INTL_LIBTOOL_SUFFIX_PREFIX=ifelse([$1], use-libtool, [l], [])\n   AC_SUBST(INTL_LIBTOOL_SUFFIX_PREFIX)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl AM_ICONV version: 12 updated: 2007/07/30 19:12:03\ndnl --------\ndnl Inserted as requested by gettext 0.10.40\ndnl File from /usr/share/aclocal\ndnl iconv.m4\ndnl ====================\ndnl serial AM2\ndnl\ndnl From Bruno Haible.\ndnl\ndnl ====================\ndnl Modified to use CF_FIND_LINKAGE and CF_ADD_SEARCHPATH, to broaden the\ndnl range of locations searched.  Retain the same cache-variable naming to\ndnl allow reuse with the other gettext macros -Thomas E Dickey\nAC_DEFUN([AM_ICONV],\n[\n  dnl Some systems have iconv in libc, some have it in libiconv (OSF/1 and\n  dnl those with the standalone portable GNU libiconv installed).\n\n  AC_ARG_WITH([libiconv-prefix],\n[  --with-libiconv-prefix=DIR\n                          search for libiconv in DIR/include and DIR/lib], [\n    CF_ADD_OPTIONAL_PATH($withval, libiconv)\n   ])\n\n  AC_CACHE_CHECK(for iconv, am_cv_func_iconv, [\n    CF_FIND_LINKAGE(CF__ICONV_HEAD,\n      CF__ICONV_BODY,\n      iconv,\n      am_cv_func_iconv=yes,\n      am_cv_func_iconv=[\"no, consider installing GNU libiconv\"])])\n\n  if test \"$am_cv_func_iconv\" = yes; then\n    AC_DEFINE(HAVE_ICONV, 1, [Define if you have the iconv() function.])\n\n    AC_CACHE_CHECK([if the declaration of iconv() needs const.],\n\t\t   am_cv_proto_iconv_const,[\n      AC_TRY_COMPILE(CF__ICONV_HEAD [\nextern\n#ifdef __cplusplus\n\"C\"\n#endif\n#if defined(__STDC__) || defined(__cplusplus)\nsize_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);\n#else\nsize_t iconv();\n#endif\n],[], am_cv_proto_iconv_const=no,\n      am_cv_proto_iconv_const=yes)])\n\n    if test \"$am_cv_proto_iconv_const\" = yes ; then\n      am_cv_proto_iconv_arg1=\"const\"\n    else\n      am_cv_proto_iconv_arg1=\"\"\n    fi\n\n    AC_DEFINE_UNQUOTED(ICONV_CONST, $am_cv_proto_iconv_arg1,\n      [Define as const if the declaration of iconv() needs const.])\n  fi\n\n  LIBICONV=\n  if test \"$cf_cv_find_linkage_iconv\" = yes; then\n    CF_ADD_INCDIR($cf_cv_header_path_iconv)\n    if test -n \"$cf_cv_library_file_iconv\" ; then\n      LIBICONV=\"-liconv\"\n      CF_ADD_LIBDIR($cf_cv_library_path_iconv)\n    fi\n  fi\n\n  AC_SUBST(LIBICONV)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl AM_LANGINFO_CODESET version: 4 updated: 2015/04/18 08:56:57\ndnl -------------------\ndnl Inserted as requested by gettext 0.10.40\ndnl File from /usr/share/aclocal\ndnl codeset.m4\ndnl ====================\ndnl serial AM1\ndnl\ndnl From Bruno Haible.\nAC_DEFUN([AM_LANGINFO_CODESET],\n[\nAC_CACHE_CHECK([for nl_langinfo and CODESET], am_cv_langinfo_codeset,\n\t[AC_TRY_LINK([#include <langinfo.h>],\n\t[char* cs = nl_langinfo(CODESET);],\n\tam_cv_langinfo_codeset=yes,\n\tam_cv_langinfo_codeset=no)\n\t])\n\tif test $am_cv_langinfo_codeset = yes; then\n\t\tAC_DEFINE(HAVE_LANGINFO_CODESET, 1,\n\t\t[Define if you have <langinfo.h> and nl_langinfo(CODESET).])\n\tfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl AM_LC_MESSAGES version: 5 updated: 2015/05/10 19:52:14\ndnl --------------\ndnl Inserted as requested by gettext 0.10.40\ndnl File from /usr/share/aclocal\ndnl lcmessage.m4\ndnl ====================\ndnl Check whether LC_MESSAGES is available in <locale.h>.\ndnl Ulrich Drepper <drepper@cygnus.com>, 1995.\ndnl\ndnl This file can be copied and used freely without restrictions.  It can\ndnl be used in projects which are not available under the GNU General Public\ndnl License or the GNU Library General Public License but which still want\ndnl to provide support for the GNU gettext functionality.\ndnl Please note that the actual code of the GNU gettext library is covered\ndnl by the GNU Library General Public License, and the rest of the GNU\ndnl gettext package package is covered by the GNU General Public License.\ndnl They are *not* in the public domain.\ndnl\ndnl serial 2\ndnl\nAC_DEFUN([AM_LC_MESSAGES],\n[if test $ac_cv_header_locale_h = yes; then\n\tAC_CACHE_CHECK([for LC_MESSAGES], am_cv_val_LC_MESSAGES,\n\t\t[AC_TRY_LINK([#include <locale.h>], [return LC_MESSAGES],\n\t\tam_cv_val_LC_MESSAGES=yes, am_cv_val_LC_MESSAGES=no)])\n\tif test $am_cv_val_LC_MESSAGES = yes; then\n\t\tAC_DEFINE(HAVE_LC_MESSAGES, 1,\n\t\t[Define if your <locale.h> file defines LC_MESSAGES.])\n\tfi\nfi])dnl\ndnl ---------------------------------------------------------------------------\ndnl AM_PATH_PROG_WITH_TEST version: 9 updated: 2015/04/15 19:08:48\ndnl ----------------------\ndnl Inserted as requested by gettext 0.10.40\ndnl File from /usr/share/aclocal\ndnl progtest.m4\ndnl ====================\ndnl Search path for a program which passes the given test.\ndnl Ulrich Drepper <drepper@cygnus.com>, 1996.\ndnl\ndnl This file can be copied and used freely without restrictions.  It can\ndnl be used in projects which are not available under the GNU General Public\ndnl License or the GNU Library General Public License but which still want\ndnl to provide support for the GNU gettext functionality.\ndnl Please note that the actual code of the GNU gettext library is covered\ndnl by the GNU Library General Public License, and the rest of the GNU\ndnl gettext package package is covered by the GNU General Public License.\ndnl They are *not* in the public domain.\ndnl\ndnl serial 2\ndnl\ndnl AM_PATH_PROG_WITH_TEST(VARIABLE, PROG-TO-CHECK-FOR,\ndnl   TEST-PERFORMED-ON-FOUND_PROGRAM [, VALUE-IF-NOT-FOUND [, PATH]])\nAC_DEFUN([AM_PATH_PROG_WITH_TEST],\n[# Extract the first word of \"$2\", so it can be a program name with args.\nAC_REQUIRE([CF_PATHSEP])\nset dummy $2; ac_word=[$]2\nAC_MSG_CHECKING([for $ac_word])\nAC_CACHE_VAL(ac_cv_path_$1,\n[case \"[$]$1\" in\n  ([[\\\\/]*|?:[\\\\/]]*)\n  ac_cv_path_$1=\"[$]$1\" # Let the user override the test with a path.\n  ;;\n  (*)\n  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}${PATH_SEPARATOR}\"\n  for ac_dir in ifelse([$5], , $PATH, [$5]); do\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f $ac_dir/$ac_word$ac_exeext; then\n      if [$3]; then\n\tac_cv_path_$1=\"$ac_dir/$ac_word$ac_exeext\"\n\tbreak\n      fi\n    fi\n  done\n  IFS=\"$ac_save_ifs\"\ndnl If no 4th arg is given, leave the cache variable unset,\ndnl so AC_PATH_PROGS will keep looking.\nifelse([$4], , , [  test -z \"[$]ac_cv_path_$1\" && ac_cv_path_$1=\"$4\"\n])dnl\n  ;;\nesac])dnl\n$1=\"$ac_cv_path_$1\"\nif test ifelse([$4], , [-n \"[$]$1\"], [\"[$]$1\" != \"$4\"]); then\n  AC_MSG_RESULT([$]$1)\nelse\n  AC_MSG_RESULT(no)\nfi\nAC_SUBST($1)dnl\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl AM_WITH_NLS version: 29 updated: 2018/02/21 21:26:03\ndnl -----------\ndnl Inserted as requested by gettext 0.10.40\ndnl File from /usr/share/aclocal\ndnl gettext.m4\ndnl ====================\ndnl Macro to add for using GNU gettext.\ndnl Ulrich Drepper <drepper@cygnus.com>, 1995.\ndnl ====================\ndnl Modified to use CF_FIND_LINKAGE and CF_ADD_SEARCHPATH, to broaden the\ndnl range of locations searched.  Retain the same cache-variable naming to\ndnl allow reuse with the other gettext macros -Thomas E Dickey\ndnl ====================\ndnl\ndnl This file can be copied and used freely without restrictions.  It can\ndnl be used in projects which are not available under the GNU General Public\ndnl License or the GNU Library General Public License but which still want\ndnl to provide support for the GNU gettext functionality.\ndnl Please note that the actual code of the GNU gettext library is covered\ndnl by the GNU Library General Public License, and the rest of the GNU\ndnl gettext package package is covered by the GNU General Public License.\ndnl They are *not* in the public domain.\ndnl\ndnl serial 10\ndnl\ndnl Usage: AM_WITH_NLS([TOOLSYMBOL], [NEEDSYMBOL], [LIBDIR], [ENABLED]).\ndnl If TOOLSYMBOL is specified and is 'use-libtool', then a libtool library\ndnl    $(top_builddir)/intl/libintl.la will be created (shared and/or static,\ndnl    depending on --{enable,disable}-{shared,static} and on the presence of\ndnl    AM-DISABLE-SHARED). Otherwise, a static library\ndnl    $(top_builddir)/intl/libintl.a will be created.\ndnl If NEEDSYMBOL is specified and is 'need-ngettext', then GNU gettext\ndnl    implementations (in libc or libintl) without the ngettext() function\ndnl    will be ignored.\ndnl LIBDIR is used to find the intl libraries.  If empty,\ndnl    the value `$(top_builddir)/intl/' is used.\ndnl ENABLED is used to control the default for the related --enable-nls, since\ndnl    not all application developers want this feature by default, e.g., lynx.\ndnl\ndnl The result of the configuration is one of three cases:\ndnl 1) GNU gettext, as included in the intl subdirectory, will be compiled\ndnl    and used.\ndnl    Catalog format: GNU --> install in $(datadir)\ndnl    Catalog extension: .mo after installation, .gmo in source tree\ndnl 2) GNU gettext has been found in the system's C library.\ndnl    Catalog format: GNU --> install in $(datadir)\ndnl    Catalog extension: .mo after installation, .gmo in source tree\ndnl 3) No internationalization, always use English msgid.\ndnl    Catalog format: none\ndnl    Catalog extension: none\ndnl The use of .gmo is historical (it was needed to avoid overwriting the\ndnl GNU format catalogs when building on a platform with an X/Open gettext),\ndnl but we keep it in order not to force irrelevant filename changes on the\ndnl maintainers.\ndnl\nAC_DEFUN([AM_WITH_NLS],\n[AC_MSG_CHECKING([whether NLS is requested])\n  dnl Default is enabled NLS\n  ifelse([$4],,[\n  AC_ARG_ENABLE(nls,\n    [  --disable-nls           do not use Native Language Support],\n    USE_NLS=$enableval, USE_NLS=yes)],[\n  AC_ARG_ENABLE(nls,\n    [  --enable-nls            use Native Language Support],\n    USE_NLS=$enableval, USE_NLS=no)])\n  AC_MSG_RESULT($USE_NLS)\n  AC_SUBST(USE_NLS)\n\n  BUILD_INCLUDED_LIBINTL=no\n  USE_INCLUDED_LIBINTL=no\n  INTLLIBS=\n\n  dnl If we use NLS figure out what method\n  if test \"$USE_NLS\" = \"yes\"; then\n    dnl We need to process the po/ directory.\n    POSUB=po\n    AC_DEFINE(ENABLE_NLS, 1,\n      [Define to 1 if translation of program messages to the user's native language\n is requested.])\n    AC_MSG_CHECKING([whether included gettext is requested])\n    AC_ARG_WITH(included-gettext,\n      [  --with-included-gettext use the GNU gettext library included here],\n      nls_cv_force_use_gnu_gettext=$withval,\n      nls_cv_force_use_gnu_gettext=no)\n    AC_MSG_RESULT($nls_cv_force_use_gnu_gettext)\n\n    nls_cv_use_gnu_gettext=\"$nls_cv_force_use_gnu_gettext\"\n    if test \"$nls_cv_force_use_gnu_gettext\" != \"yes\"; then\n      dnl User does not insist on using GNU NLS library.  Figure out what\n      dnl to use.  If GNU gettext is available we use this.  Else we may have\n      dnl to fall back to GNU NLS library.\n      CATOBJEXT=NONE\n\n      dnl Save these (possibly-set) variables for reference.  If the user\n      dnl overrode these to provide full pathnames, then warn if not actually\n      dnl GNU gettext, but do not override their values.  Also, if they were\n      dnl overridden, suppress the part of the library test which prevents it\n      dnl from finding anything other than GNU gettext.  Doing this also\n      dnl suppresses a bogus search for the intl library.\n      cf_save_msgfmt_path=\"$MSGFMT\"\n      cf_save_xgettext_path=\"$XGETTEXT\"\n\n      dnl Search for GNU msgfmt in the PATH.\n      AM_PATH_PROG_WITH_TEST(MSGFMT, msgfmt,\n          [$ac_dir/$ac_word --statistics /dev/null >/dev/null 2>&1], :)\n      AC_PATH_PROG(GMSGFMT, gmsgfmt, $MSGFMT)\n      AC_SUBST(MSGFMT)\n\n      dnl Search for GNU xgettext in the PATH.\n      AM_PATH_PROG_WITH_TEST(XGETTEXT, xgettext,\n          [$ac_dir/$ac_word --omit-header /dev/null >/dev/null 2>&1], :)\n\n      cf_save_OPTS_1=\"$CPPFLAGS\"\n      if test \"x$cf_save_msgfmt_path\" = \"x$MSGFMT\" && \\\n         test \"x$cf_save_xgettext_path\" = \"x$XGETTEXT\" ; then\n          CF_ADD_CFLAGS(-DIGNORE_MSGFMT_HACK)\n      fi\n\n      cf_save_LIBS_1=\"$LIBS\"\n      CF_ADD_LIBS($LIBICONV)\n\n      CF_FIND_LINKAGE(CF__INTL_HEAD,\n        CF__INTL_BODY($2),\n        intl,\n        cf_cv_func_gettext=yes,\n        cf_cv_func_gettext=no)\n\n      AC_MSG_CHECKING([for libintl.h and gettext()])\n      AC_MSG_RESULT($cf_cv_func_gettext)\n\n      LIBS=\"$cf_save_LIBS_1\"\n      CPPFLAGS=\"$cf_save_OPTS_1\"\n\n      if test \"$cf_cv_func_gettext\" = yes ; then\n        AC_DEFINE(HAVE_LIBINTL_H,1,[Define to 1 if we have libintl.h])\n\n        dnl If an already present or preinstalled GNU gettext() is found,\n        dnl use it.  But if this macro is used in GNU gettext, and GNU\n        dnl gettext is already preinstalled in libintl, we update this\n        dnl libintl.  (Cf. the install rule in intl/Makefile.in.)\n        if test \"$PACKAGE\" != gettext; then\n          AC_DEFINE(HAVE_GETTEXT, 1,\n              [Define if the GNU gettext() function is already present or preinstalled.])\n\n          CF_ADD_INCDIR($cf_cv_header_path_intl)\n\n          if test -n \"$cf_cv_library_file_intl\" ; then\n            dnl If iconv() is in a separate libiconv library, then anyone\n            dnl linking with libintl{.a,.so} also needs to link with\n            dnl libiconv.\n            INTLLIBS=\"$cf_cv_library_file_intl $LIBICONV\"\n            CF_ADD_LIBDIR($cf_cv_library_path_intl,INTLLIBS)\n          fi\n\n          gt_save_LIBS=\"$LIBS\"\n          LIBS=\"$LIBS $INTLLIBS\"\n          AC_CHECK_FUNCS(dcgettext)\n          LIBS=\"$gt_save_LIBS\"\n\n          CATOBJEXT=.gmo\n        fi\n      elif test -z \"$MSGFMT\" || test -z \"$XGETTEXT\" ; then\n        AC_MSG_WARN(disabling NLS feature)\n        sed -e /ENABLE_NLS/d confdefs.h >confdefs.tmp\n        mv confdefs.tmp confdefs.h\n        ALL_LINGUAS=\n        CATOBJEXT=.ignored\n        MSGFMT=\":\"\n        GMSGFMT=\":\"\n        XGETTEXT=\":\"\n        POSUB=\n        BUILD_INCLUDED_LIBINTL=no\n        USE_INCLUDED_LIBINTL=no\n        USE_NLS=no\n        nls_cv_use_gnu_gettext=no\n      fi\n\n      if test \"$CATOBJEXT\" = \"NONE\"; then\n        dnl GNU gettext is not found in the C library.\n        dnl Fall back on GNU gettext library.\n        nls_cv_use_gnu_gettext=maybe\n      fi\n    fi\n\n    if test \"$nls_cv_use_gnu_gettext\" != \"no\"; then\n      CATOBJEXT=.gmo\n      if test -f $srcdir/intl/libintl.h ; then\n        dnl Mark actions used to generate GNU NLS library.\n        INTLOBJS=\"\\$(GETTOBJS)\"\n        BUILD_INCLUDED_LIBINTL=yes\n        USE_INCLUDED_LIBINTL=yes\n        INTLLIBS=\"ifelse([$3],[],\\$(top_builddir)/intl,[$3])/libintl.ifelse([$1], use-libtool, [l], [])a $LIBICONV\"\n        LIBS=`echo \" $LIBS \" | sed -e 's/ -lintl / /' -e 's/^ //' -e 's/ $//'`\n      elif test \"$nls_cv_use_gnu_gettext\" = \"yes\"; then\n        nls_cv_use_gnu_gettext=no\n        AC_MSG_WARN(no NLS library is packaged with this application)\n      fi\n    fi\n\n    dnl Test whether we really found GNU msgfmt.\n    if test \"$GMSGFMT\" != \":\"; then\n      if $GMSGFMT --statistics /dev/null >/dev/null 2>&1; then\n        : ;\n      else\n        AC_MSG_WARN([found msgfmt program is not GNU msgfmt])\n      fi\n    fi\n\n    dnl Test whether we really found GNU xgettext.\n    if test \"$XGETTEXT\" != \":\"; then\n      if $XGETTEXT --omit-header /dev/null >/dev/null 2>&1; then\n        : ;\n      else\n        AC_MSG_WARN([found xgettext program is not GNU xgettext])\n      fi\n    fi\n  fi\n\n  if test \"$XGETTEXT\" != \":\"; then\n    AC_OUTPUT_COMMANDS(\n     [for ac_file in $CONFIG_FILES; do\n\n        # Support \"outfile[:infile[:infile...]]\"\n        case \"$ac_file\" in\n          (*:*) ac_file=`echo \"$ac_file\"|sed 's%:.*%%'` ;;\n        esac\n\n        # PO directories have a Makefile.in generated from Makefile.inn.\n        case \"$ac_file\" in\n        (*/[Mm]akefile.in)\n          # Adjust a relative srcdir.\n          ac_dir=`echo \"$ac_file\"|sed 's%/[^/][^/]*$%%'`\n          ac_dir_suffix=\"/`echo \"$ac_dir\"|sed 's%^\\./%%'`\"\n          ac_dots=`echo \"$ac_dir_suffix\"|sed 's%/[^/]*%../%g'`\n          ac_base=`basename $ac_file .in`\n          # In autoconf-2.13 it is called $ac_given_srcdir.\n          # In autoconf-2.50 it is called $srcdir.\n          test -n \"$ac_given_srcdir\" || ac_given_srcdir=\"$srcdir\"\n\n          case \"$ac_given_srcdir\" in\n            (.)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;\n            (/*) top_srcdir=\"$ac_given_srcdir\" ;;\n            (*)  top_srcdir=\"$ac_dots$ac_given_srcdir\" ;;\n          esac\n\n          if test -f \"$ac_given_srcdir/$ac_dir/POTFILES.in\"; then\n            rm -f \"$ac_dir/POTFILES\"\n            test -n \"$as_me\" && echo \"$as_me: creating $ac_dir/POTFILES\" || echo \"creating $ac_dir/POTFILES\"\n            sed -e \"/^#/d\" -e \"/^[ \t]*\\$/d\" -e \"s,.*,     $top_srcdir/& \\\\\\\\,\" -e \"\\$s/\\(.*\\) \\\\\\\\/\\1/\" < \"$ac_given_srcdir/$ac_dir/POTFILES.in\" > \"$ac_dir/POTFILES\"\n            test -n \"$as_me\" && echo \"$as_me: creating $ac_dir/$ac_base\" || echo \"creating $ac_dir/$ac_base\"\n            sed -e \"/POTFILES =/r $ac_dir/POTFILES\" \"$ac_dir/$ac_base.in\" > \"$ac_dir/$ac_base\"\n          fi\n          ;;\n        esac\n      done])\n\n    dnl If this is used in GNU gettext we have to set BUILD_INCLUDED_LIBINTL\n    dnl to 'yes' because some of the testsuite requires it.\n    if test \"$PACKAGE\" = gettext; then\n      BUILD_INCLUDED_LIBINTL=yes\n    fi\n\n    dnl intl/plural.c is generated from intl/plural.y. It requires bison,\n    dnl because plural.y uses bison specific features. It requires at least\n    dnl bison-1.26 because earlier versions generate a plural.c that doesn't\n    dnl compile.\n    dnl bison is only needed for the maintainer (who touches plural.y). But in\n    dnl order to avoid separate Makefiles or --enable-maintainer-mode, we put\n    dnl the rule in general Makefile. Now, some people carelessly touch the\n    dnl files or have a broken \"make\" program, hence the plural.c rule will\n    dnl sometimes fire. To avoid an error, defines BISON to \":\" if it is not\n    dnl present or too old.\n    if test \"$nls_cv_use_gnu_gettext\" = \"yes\"; then\n      AC_CHECK_PROGS([INTLBISON], [bison])\n      if test -z \"$INTLBISON\"; then\n        ac_verc_fail=yes\n      else\n        dnl Found it, now check the version.\n        AC_MSG_CHECKING([version of bison])\nchangequote(<<,>>)dnl\n        ac_prog_version=`$INTLBISON --version 2>&1 | sed -n 's/^.*GNU Bison.* \\([0-9]*\\.[0-9.]*\\).*$/\\1/p'`\n        case $ac_prog_version in\n          ('') ac_prog_version=\"v. ?.??, bad\"; ac_verc_fail=yes;;\n          (1.2[6-9]*|1.[3-9][0-9]*|[2-9].*)\nchangequote([,])dnl\n             ac_prog_version=\"$ac_prog_version, ok\"; ac_verc_fail=no;;\n          (*) ac_prog_version=\"$ac_prog_version, bad\"; ac_verc_fail=yes;;\n        esac\n      AC_MSG_RESULT([$ac_prog_version])\n      fi\n      if test $ac_verc_fail = yes; then\n        INTLBISON=:\n      fi\n    fi\n\n    dnl These rules are solely for the distribution goal.  While doing this\n    dnl we only have to keep exactly one list of the available catalogs\n    dnl in configure.in.\n    for lang in $ALL_LINGUAS; do\n      GMOFILES=\"$GMOFILES $lang.gmo\"\n      POFILES=\"$POFILES $lang.po\"\n    done\n  fi\n\n  dnl Make all variables we use known to autoconf.\n  AC_SUBST(BUILD_INCLUDED_LIBINTL)\n  AC_SUBST(USE_INCLUDED_LIBINTL)\n  AC_SUBST(CATALOGS)\n  AC_SUBST(CATOBJEXT)\n  AC_SUBST(GMOFILES)\n  AC_SUBST(INTLLIBS)\n  AC_SUBST(INTLOBJS)\n  AC_SUBST(POFILES)\n  AC_SUBST(POSUB)\n\n  dnl For backward compatibility. Some configure.ins may be using this.\n  nls_cv_header_intl=\n  nls_cv_header_libgt=\n\n  dnl For backward compatibility. Some Makefiles may be using this.\n  DATADIRNAME=share\n  AC_SUBST(DATADIRNAME)\n\n  dnl For backward compatibility. Some Makefiles may be using this.\n  INSTOBJEXT=.mo\n  AC_SUBST(INSTOBJEXT)\n\n  dnl For backward compatibility. Some Makefiles may be using this.\n  GENCAT=gencat\n  AC_SUBST(GENCAT)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ACVERSION_CHECK version: 5 updated: 2014/06/04 19:11:49\ndnl ------------------\ndnl Conditionally generate script according to whether we're using a given autoconf.\ndnl\ndnl $1 = version to compare against\ndnl $2 = code to use if AC_ACVERSION is at least as high as $1.\ndnl $3 = code to use if AC_ACVERSION is older than $1.\ndefine([CF_ACVERSION_CHECK],\n[\nifdef([AC_ACVERSION], ,[ifdef([AC_AUTOCONF_VERSION],[m4_copy([AC_AUTOCONF_VERSION],[AC_ACVERSION])],[m4_copy([m4_PACKAGE_VERSION],[AC_ACVERSION])])])dnl\nifdef([m4_version_compare],\n[m4_if(m4_version_compare(m4_defn([AC_ACVERSION]), [$1]), -1, [$3], [$2])],\n[CF_ACVERSION_COMPARE(\nAC_PREREQ_CANON(AC_PREREQ_SPLIT([$1])),\nAC_PREREQ_CANON(AC_PREREQ_SPLIT(AC_ACVERSION)), AC_ACVERSION, [$2], [$3])])])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ACVERSION_COMPARE version: 3 updated: 2012/10/03 18:39:53\ndnl --------------------\ndnl CF_ACVERSION_COMPARE(MAJOR1, MINOR1, TERNARY1,\ndnl                      MAJOR2, MINOR2, TERNARY2,\ndnl                      PRINTABLE2, not FOUND, FOUND)\ndefine([CF_ACVERSION_COMPARE],\n[ifelse(builtin([eval], [$2 < $5]), 1,\n[ifelse([$8], , ,[$8])],\n[ifelse([$9], , ,[$9])])])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ADD_CFLAGS version: 13 updated: 2017/02/25 18:57:40\ndnl -------------\ndnl Copy non-preprocessor flags to $CFLAGS, preprocessor flags to $CPPFLAGS\ndnl The second parameter if given makes this macro verbose.\ndnl\ndnl Put any preprocessor definitions that use quoted strings in $EXTRA_CPPFLAGS,\ndnl to simplify use of $CPPFLAGS in compiler checks, etc., that are easily\ndnl confused by the quotes (which require backslashes to keep them usable).\nAC_DEFUN([CF_ADD_CFLAGS],\n[\ncf_fix_cppflags=no\ncf_new_cflags=\ncf_new_cppflags=\ncf_new_extra_cppflags=\n\nfor cf_add_cflags in $1\ndo\ncase $cf_fix_cppflags in\n(no)\n\tcase $cf_add_cflags in\n\t(-undef|-nostdinc*|-I*|-D*|-U*|-E|-P|-C)\n\t\tcase $cf_add_cflags in\n\t\t(-D*)\n\t\t\tcf_tst_cflags=`echo ${cf_add_cflags} |sed -e 's/^-D[[^=]]*='\\''\\\"[[^\"]]*//'`\n\n\t\t\ttest \"x${cf_add_cflags}\" != \"x${cf_tst_cflags}\" \\\n\t\t\t\t&& test -z \"${cf_tst_cflags}\" \\\n\t\t\t\t&& cf_fix_cppflags=yes\n\n\t\t\tif test $cf_fix_cppflags = yes ; then\n\t\t\t\tCF_APPEND_TEXT(cf_new_extra_cppflags,$cf_add_cflags)\n\t\t\t\tcontinue\n\t\t\telif test \"${cf_tst_cflags}\" = \"\\\"'\" ; then\n\t\t\t\tCF_APPEND_TEXT(cf_new_extra_cppflags,$cf_add_cflags)\n\t\t\t\tcontinue\n\t\t\tfi\n\t\t\t;;\n\t\tesac\n\t\tcase \"$CPPFLAGS\" in\n\t\t(*$cf_add_cflags)\n\t\t\t;;\n\t\t(*)\n\t\t\tcase $cf_add_cflags in\n\t\t\t(-D*)\n\t\t\t\tcf_tst_cppflags=`echo \"x$cf_add_cflags\" | sed -e 's/^...//' -e 's/=.*//'`\n\t\t\t\tCF_REMOVE_DEFINE(CPPFLAGS,$CPPFLAGS,$cf_tst_cppflags)\n\t\t\t\t;;\n\t\t\tesac\n\t\t\tCF_APPEND_TEXT(cf_new_cppflags,$cf_add_cflags)\n\t\t\t;;\n\t\tesac\n\t\t;;\n\t(*)\n\t\tCF_APPEND_TEXT(cf_new_cflags,$cf_add_cflags)\n\t\t;;\n\tesac\n\t;;\n(yes)\n\tCF_APPEND_TEXT(cf_new_extra_cppflags,$cf_add_cflags)\n\n\tcf_tst_cflags=`echo ${cf_add_cflags} |sed -e 's/^[[^\"]]*\"'\\''//'`\n\n\ttest \"x${cf_add_cflags}\" != \"x${cf_tst_cflags}\" \\\n\t\t&& test -z \"${cf_tst_cflags}\" \\\n\t\t&& cf_fix_cppflags=no\n\t;;\nesac\ndone\n\nif test -n \"$cf_new_cflags\" ; then\n\tifelse([$2],,,[CF_VERBOSE(add to \\$CFLAGS $cf_new_cflags)])\n\tCF_APPEND_TEXT(CFLAGS,$cf_new_cflags)\nfi\n\nif test -n \"$cf_new_cppflags\" ; then\n\tifelse([$2],,,[CF_VERBOSE(add to \\$CPPFLAGS $cf_new_cppflags)])\n\tCF_APPEND_TEXT(CPPFLAGS,$cf_new_cppflags)\nfi\n\nif test -n \"$cf_new_extra_cppflags\" ; then\n\tifelse([$2],,,[CF_VERBOSE(add to \\$EXTRA_CPPFLAGS $cf_new_extra_cppflags)])\n\tCF_APPEND_TEXT(EXTRA_CPPFLAGS,$cf_new_extra_cppflags)\nfi\n\nAC_SUBST(EXTRA_CPPFLAGS)\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ADD_INCDIR version: 14 updated: 2015/05/25 20:53:04\ndnl -------------\ndnl Add an include-directory to $CPPFLAGS.  Don't add /usr/include, since it's\ndnl redundant.  We don't normally need to add -I/usr/local/include for gcc,\ndnl but old versions (and some misinstalled ones) need that.  To make things\ndnl worse, gcc 3.x may give error messages if -I/usr/local/include is added to\ndnl the include-path).\nAC_DEFUN([CF_ADD_INCDIR],\n[\nif test -n \"$1\" ; then\n  for cf_add_incdir in $1\n  do\n\twhile test $cf_add_incdir != /usr/include\n\tdo\n\t  if test -d $cf_add_incdir\n\t  then\n\t\tcf_have_incdir=no\n\t\tif test -n \"$CFLAGS$CPPFLAGS\" ; then\n\t\t  # a loop is needed to ensure we can add subdirs of existing dirs\n\t\t  for cf_test_incdir in $CFLAGS $CPPFLAGS ; do\n\t\t\tif test \".$cf_test_incdir\" = \".-I$cf_add_incdir\" ; then\n\t\t\t  cf_have_incdir=yes; break\n\t\t\tfi\n\t\t  done\n\t\tfi\n\n\t\tif test \"$cf_have_incdir\" = no ; then\n\t\t  if test \"$cf_add_incdir\" = /usr/local/include ; then\n\t\t\tif test \"$GCC\" = yes\n\t\t\tthen\n\t\t\t  cf_save_CPPFLAGS=$CPPFLAGS\n\t\t\t  CPPFLAGS=\"$CPPFLAGS -I$cf_add_incdir\"\n\t\t\t  AC_TRY_COMPILE([#include <stdio.h>],\n\t\t\t\t  [printf(\"Hello\")],\n\t\t\t\t  [],\n\t\t\t\t  [cf_have_incdir=yes])\n\t\t\t  CPPFLAGS=$cf_save_CPPFLAGS\n\t\t\tfi\n\t\t  fi\n\t\tfi\n\n\t\tif test \"$cf_have_incdir\" = no ; then\n\t\t  CF_VERBOSE(adding $cf_add_incdir to include-path)\n\t\t  ifelse([$2],,CPPFLAGS,[$2])=\"$ifelse([$2],,CPPFLAGS,[$2]) -I$cf_add_incdir\"\n\n\t\t  cf_top_incdir=`echo $cf_add_incdir | sed -e 's%/include/.*$%/include%'`\n\t\t  test \"$cf_top_incdir\" = \"$cf_add_incdir\" && break\n\t\t  cf_add_incdir=\"$cf_top_incdir\"\n\t\telse\n\t\t  break\n\t\tfi\n\t  else\n\t\tbreak\n\t  fi\n\tdone\n  done\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ADD_LIB version: 2 updated: 2010/06/02 05:03:05\ndnl ----------\ndnl Add a library, used to enforce consistency.\ndnl\ndnl $1 = library to add, without the \"-l\"\ndnl $2 = variable to update (default $LIBS)\nAC_DEFUN([CF_ADD_LIB],[CF_ADD_LIBS(-l$1,ifelse($2,,LIBS,[$2]))])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ADD_LIBDIR version: 10 updated: 2015/04/18 08:56:57\ndnl -------------\ndnl\tAdds to the library-path\ndnl\ndnl\tSome machines have trouble with multiple -L options.\ndnl\ndnl $1 is the (list of) directory(s) to add\ndnl $2 is the optional name of the variable to update (default LDFLAGS)\ndnl\nAC_DEFUN([CF_ADD_LIBDIR],\n[\nif test -n \"$1\" ; then\n\tfor cf_add_libdir in $1\n\tdo\n\t\tif test $cf_add_libdir = /usr/lib ; then\n\t\t\t:\n\t\telif test -d $cf_add_libdir\n\t\tthen\n\t\t\tcf_have_libdir=no\n\t\t\tif test -n \"$LDFLAGS$LIBS\" ; then\n\t\t\t\t# a loop is needed to ensure we can add subdirs of existing dirs\n\t\t\t\tfor cf_test_libdir in $LDFLAGS $LIBS ; do\n\t\t\t\t\tif test \".$cf_test_libdir\" = \".-L$cf_add_libdir\" ; then\n\t\t\t\t\t\tcf_have_libdir=yes; break\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\tfi\n\t\t\tif test \"$cf_have_libdir\" = no ; then\n\t\t\t\tCF_VERBOSE(adding $cf_add_libdir to library-path)\n\t\t\t\tifelse([$2],,LDFLAGS,[$2])=\"-L$cf_add_libdir $ifelse([$2],,LDFLAGS,[$2])\"\n\t\t\tfi\n\t\tfi\n\tdone\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ADD_LIBS version: 2 updated: 2014/07/13 14:33:27\ndnl -----------\ndnl Add one or more libraries, used to enforce consistency.  Libraries are\ndnl prepended to an existing list, since their dependencies are assumed to\ndnl already exist in the list.\ndnl\ndnl $1 = libraries to add, with the \"-l\", etc.\ndnl $2 = variable to update (default $LIBS)\nAC_DEFUN([CF_ADD_LIBS],[\ncf_add_libs=\"$1\"\n# Filter out duplicates - this happens with badly-designed \".pc\" files...\nfor cf_add_1lib in [$]ifelse($2,,LIBS,[$2])\ndo\n\tfor cf_add_2lib in $cf_add_libs\n\tdo\n\t\tif test \"x$cf_add_1lib\" = \"x$cf_add_2lib\"\n\t\tthen\n\t\t\tcf_add_1lib=\n\t\t\tbreak\n\t\tfi\n\tdone\n\ttest -n \"$cf_add_1lib\" && cf_add_libs=\"$cf_add_libs $cf_add_1lib\"\ndone\nifelse($2,,LIBS,[$2])=\"$cf_add_libs\"\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ADD_LIB_AFTER version: 3 updated: 2013/07/09 21:27:22\ndnl ----------------\ndnl Add a given library after another, e.g., following the one it satisfies a\ndnl dependency for.\ndnl\ndnl $1 = the first library\ndnl $2 = its dependency\nAC_DEFUN([CF_ADD_LIB_AFTER],[\nCF_VERBOSE(...before $LIBS)\nLIBS=`echo \"$LIBS\" | sed -e \"s/[[ \t]][[ \t]]*/ /g\" -e \"s%$1 %$1 $2 %\" -e 's%  % %g'`\nCF_VERBOSE(...after  $LIBS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ADD_OPTIONAL_PATH version: 3 updated: 2015/05/10 19:52:14\ndnl --------------------\ndnl Add an optional search-path to the compile/link variables.\ndnl See CF_WITH_PATH\ndnl\ndnl $1 = shell variable containing the result of --with-XXX=[DIR]\ndnl $2 = module to look for.\nAC_DEFUN([CF_ADD_OPTIONAL_PATH],[\ncase \"$1\" in\n(no)\n\t;;\n(yes)\n\t;;\n(*)\n\tCF_ADD_SEARCHPATH([$1], [AC_MSG_ERROR(cannot find $2 under $1)])\n\t;;\nesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ADD_SEARCHPATH version: 5 updated: 2009/01/11 20:40:21\ndnl -----------------\ndnl Set $CPPFLAGS and $LDFLAGS with the directories given via the parameter.\ndnl They can be either the common root of include- and lib-directories, or the\ndnl lib-directory (to allow for things like lib64 directories).\ndnl See also CF_FIND_LINKAGE.\ndnl\ndnl $1 is the list of colon-separated directory names to search.\ndnl $2 is the action to take if a parameter does not yield a directory.\nAC_DEFUN([CF_ADD_SEARCHPATH],\n[\nAC_REQUIRE([CF_PATHSEP])\nfor cf_searchpath in `echo \"$1\" | tr $PATH_SEPARATOR ' '`; do\n\tif test -d $cf_searchpath/include; then\n\t\tCF_ADD_INCDIR($cf_searchpath/include)\n\telif test -d $cf_searchpath/../include ; then\n\t\tCF_ADD_INCDIR($cf_searchpath/../include)\n\tifelse([$2],,,[else\n$2])\n\tfi\n\tif test -d $cf_searchpath/lib; then\n\t\tCF_ADD_LIBDIR($cf_searchpath/lib)\n\telif test -d $cf_searchpath ; then\n\t\tCF_ADD_LIBDIR($cf_searchpath)\n\tifelse([$2],,,[else\n$2])\n\tfi\ndone\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_ADD_SUBDIR_PATH version: 4 updated: 2013/10/08 17:47:05\ndnl ------------------\ndnl Append to a search-list for a nonstandard header/lib-file\ndnl\t$1 = the variable to return as result\ndnl\t$2 = the package name\ndnl\t$3 = the subdirectory, e.g., bin, include or lib\ndnl $4 = the directory under which we will test for subdirectories\ndnl $5 = a directory that we do not want $4 to match\nAC_DEFUN([CF_ADD_SUBDIR_PATH],\n[\ntest \"x$4\" != \"x$5\" && \\\ntest -d \"$4\" && \\\nifelse([$5],NONE,,[(test -z \"$5\" || test x$5 = xNONE || test \"x$4\" != \"x$5\") &&]) {\n\ttest -n \"$verbose\" && echo \"\t... testing for $3-directories under $4\"\n\ttest -d $4/$3 &&          $1=\"[$]$1 $4/$3\"\n\ttest -d $4/$3/$2 &&       $1=\"[$]$1 $4/$3/$2\"\n\ttest -d $4/$3/$2/$3 &&    $1=\"[$]$1 $4/$3/$2/$3\"\n\ttest -d $4/$2/$3 &&       $1=\"[$]$1 $4/$2/$3\"\n\ttest -d $4/$2/$3/$2 &&    $1=\"[$]$1 $4/$2/$3/$2\"\n}\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ALT_CHAR_SET version: 8 updated: 2012/11/08 20:57:52\ndnl ---------------\ndnl Check for existence of alternate-character-set support in curses, so we\ndnl can decide to use it for box characters.\ndnl\nAC_DEFUN([CF_ALT_CHAR_SET],\n[\nAC_MSG_CHECKING([if curses supports alternate-character set])\nAC_CACHE_VAL(cf_cv_alt_char_set,[\nfor mapname in acs_map _acs_map\ndo\n\tAC_TRY_LINK([\n#include <${cf_cv_ncurses_header:-curses.h}>\n\t],[chtype x = $mapname['l']; $mapname['m'] = 0],\n\t[cf_cv_alt_char_set=$mapname\n\t break],\n\t[cf_cv_alt_char_set=no])\ndone\n\t])\nAC_MSG_RESULT($cf_cv_alt_char_set)\ntest $cf_cv_alt_char_set != no && AC_DEFINE_UNQUOTED(ALT_CHAR_SET,$cf_cv_alt_char_set,[Define to 1 if if curses supports alternate-character set])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ANSI_CC_CHECK version: 13 updated: 2012/10/06 11:17:15\ndnl ----------------\ndnl This was originally adapted from the macros 'fp_PROG_CC_STDC' and\ndnl 'fp_C_PROTOTYPES' in the sharutils 4.2 distribution.\nAC_DEFUN([CF_ANSI_CC_CHECK],\n[\nCF_CC_ENV_FLAGS\n\nAC_CACHE_CHECK(for ${CC:-cc} option to accept ANSI C, cf_cv_ansi_cc,[\ncf_cv_ansi_cc=no\ncf_save_CFLAGS=\"$CFLAGS\"\ncf_save_CPPFLAGS=\"$CPPFLAGS\"\n# Don't try gcc -ansi; that turns off useful extensions and\n# breaks some systems' header files.\n# AIX\t\t\t-qlanglvl=ansi\n# Ultrix and OSF/1\t-std1\n# HP-UX\t\t\t-Aa -D_HPUX_SOURCE\n# SVR4\t\t\t-Xc\n# UnixWare 1.2\t\t(cannot use -Xc, since ANSI/POSIX clashes)\nfor cf_arg in \"-DCC_HAS_PROTOS\" \\\n\t\"\" \\\n\t-qlanglvl=ansi \\\n\t-std1 \\\n\t-Ae \\\n\t\"-Aa -D_HPUX_SOURCE\" \\\n\t-Xc\ndo\n\tCF_ADD_CFLAGS($cf_arg)\n\tAC_TRY_COMPILE(\n[\n#ifndef CC_HAS_PROTOS\n#if !defined(__STDC__) || (__STDC__ != 1)\nchoke me\n#endif\n#endif\n],[\n\tint test (int i, double x);\n\tstruct s1 {int (*f) (int a);};\n\tstruct s2 {int (*f) (double a);};],\n\t[cf_cv_ansi_cc=\"$cf_arg\"; break])\ndone\nCFLAGS=\"$cf_save_CFLAGS\"\nCPPFLAGS=\"$cf_save_CPPFLAGS\"\n])\n\nif test \"$cf_cv_ansi_cc\" != \"no\"; then\nif test \".$cf_cv_ansi_cc\" != \".-DCC_HAS_PROTOS\"; then\n\tCF_ADD_CFLAGS($cf_cv_ansi_cc)\nelse\n\tAC_DEFINE(CC_HAS_PROTOS,1,[Define to 1 if C compiler supports prototypes])\nfi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ANSI_CC_REQD version: 4 updated: 2008/03/23 14:48:54\ndnl ---------------\ndnl For programs that must use an ANSI compiler, obtain compiler options that\ndnl will make it recognize prototypes.  We'll do preprocessor checks in other\ndnl macros, since tools such as unproto can fake prototypes, but only part of\ndnl the preprocessor.\nAC_DEFUN([CF_ANSI_CC_REQD],\n[AC_REQUIRE([CF_ANSI_CC_CHECK])\nif test \"$cf_cv_ansi_cc\" = \"no\"; then\n\tAC_MSG_ERROR(\n[Your compiler does not appear to recognize prototypes.\nYou have the following choices:\n\ta. adjust your compiler options\n\tb. get an up-to-date compiler\n\tc. use a wrapper such as unproto])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_APPEND_TEXT version: 1 updated: 2017/02/25 18:58:55\ndnl --------------\ndnl use this macro for appending text without introducing an extra blank at\ndnl the beginning\ndefine([CF_APPEND_TEXT],\n[\n\ttest -n \"[$]$1\" && $1=\"[$]$1 \"\n\t$1=\"[$]{$1}$2\"\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ARG_DISABLE version: 3 updated: 1999/03/30 17:24:31\ndnl --------------\ndnl Allow user to disable a normally-on option.\nAC_DEFUN([CF_ARG_DISABLE],\n[CF_ARG_OPTION($1,[$2],[$3],[$4],yes)])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ARG_ENABLE version: 3 updated: 1999/03/30 17:24:31\ndnl -------------\ndnl Allow user to enable a normally-off option.\nAC_DEFUN([CF_ARG_ENABLE],\n[CF_ARG_OPTION($1,[$2],[$3],[$4],no)])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ARG_OPTION version: 5 updated: 2015/05/10 19:52:14\ndnl -------------\ndnl Restricted form of AC_ARG_ENABLE that ensures user doesn't give bogus\ndnl values.\ndnl\ndnl Parameters:\ndnl $1 = option name\ndnl $2 = help-string\ndnl $3 = action to perform if option is not default\ndnl $4 = action if perform if option is default\ndnl $5 = default option value (either 'yes' or 'no')\nAC_DEFUN([CF_ARG_OPTION],\n[AC_ARG_ENABLE([$1],[$2],[test \"$enableval\" != ifelse([$5],no,yes,no) && enableval=ifelse([$5],no,no,yes)\n\tif test \"$enableval\" != \"$5\" ; then\nifelse([$3],,[    :]dnl\n,[    $3]) ifelse([$4],,,[\n\telse\n\t\t$4])\n\tfi],[enableval=$5 ifelse([$4],,,[\n\t$4\n])dnl\n])])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_AR_FLAGS version: 6 updated: 2015/10/10 15:25:05\ndnl -----------\ndnl Check for suitable \"ar\" (archiver) options for updating an archive.\ndnl\ndnl In particular, handle some obsolete cases where the \"-\" might be omitted,\ndnl as well as a workaround for breakage of make's archive rules by the GNU\ndnl binutils \"ar\" program.\nAC_DEFUN([CF_AR_FLAGS],[\nAC_REQUIRE([CF_PROG_AR])\n\nAC_CACHE_CHECK(for options to update archives, cf_cv_ar_flags,[\n\tcf_cv_ar_flags=unknown\n\tfor cf_ar_flags in -curvU -curv curv -crv crv -cqv cqv -rv rv\n\tdo\n\n\t\t# check if $ARFLAGS already contains this choice\n\t\tif test \"x$ARFLAGS\" != \"x\" ; then\n\t\t\tcf_check_ar_flags=`echo \"x$ARFLAGS\" | sed -e \"s/$cf_ar_flags\\$//\" -e \"s/$cf_ar_flags / /\"`\n\t\t\tif test \"x$ARFLAGS\" != \"$cf_check_ar_flags\" ; then\n\t\t\t\tcf_cv_ar_flags=\n\t\t\t\tbreak\n\t\t\tfi\n\t\tfi\n\n\t\trm -f conftest.$ac_cv_objext\n\t\trm -f conftest.a\n\n\t\tcat >conftest.$ac_ext <<EOF\n#line __oline__ \"configure\"\nint\ttestdata[[3]] = { 123, 456, 789 };\nEOF\n\t\tif AC_TRY_EVAL(ac_compile) ; then\n\t\t\techo \"$AR $ARFLAGS $cf_ar_flags conftest.a conftest.$ac_cv_objext\" >&AC_FD_CC\n\t\t\t$AR $ARFLAGS $cf_ar_flags conftest.a conftest.$ac_cv_objext 2>&AC_FD_CC 1>/dev/null\n\t\t\tif test -f conftest.a ; then\n\t\t\t\tcf_cv_ar_flags=$cf_ar_flags\n\t\t\t\tbreak\n\t\t\tfi\n\t\telse\n\t\t\tCF_VERBOSE(cannot compile test-program)\n\t\t\tbreak\n\t\tfi\n\tdone\n\trm -f conftest.a conftest.$ac_ext conftest.$ac_cv_objext\n])\n\nif test -n \"$ARFLAGS\" ; then\n\tif test -n \"$cf_cv_ar_flags\" ; then\n\t\tARFLAGS=\"$ARFLAGS $cf_cv_ar_flags\"\n\tfi\nelse\n\tARFLAGS=$cf_cv_ar_flags\nfi\n\nAC_SUBST(ARFLAGS)\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_BOOL_DEFS version: 5 updated: 2012/11/08 20:57:52\ndnl ------------\ndnl Check if curses.h defines TRUE/FALSE (it does under SVr4).\nAC_DEFUN([CF_BOOL_DEFS],\n[\nAC_MSG_CHECKING(if TRUE/FALSE are defined)\nAC_CACHE_VAL(cf_cv_bool_defs,[\nAC_TRY_COMPILE([\n#include <${cf_cv_ncurses_header:-curses.h}>\n#include <stdio.h>],[int x = TRUE, y = FALSE],\n\t[cf_cv_bool_defs=yes],\n\t[cf_cv_bool_defs=no])])\nAC_MSG_RESULT($cf_cv_bool_defs)\nif test \"$cf_cv_bool_defs\" = no ; then\n\tAC_DEFINE(TRUE,(1),[Define to TRUE if curses.h does not define])\n\tAC_DEFINE(FALSE,(0),[Define to FALSE if curses.h does not define])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_BUILD_CC version: 8 updated: 2018/01/04 20:31:04\ndnl -----------\ndnl If we're cross-compiling, allow the user to override the tools and their\ndnl options.  The configure script is oriented toward identifying the host\ndnl compiler, etc., but we need a build compiler to generate parts of the\ndnl source.\ndnl\ndnl $1 = default for $CPPFLAGS\ndnl $2 = default for $LIBS\nAC_DEFUN([CF_BUILD_CC],[\nCF_ACVERSION_CHECK(2.52,,\n\t[AC_REQUIRE([CF_PROG_EXT])])\nif test \"$cross_compiling\" = yes ; then\n\n\t# defaults that we might want to override\n\t: ${BUILD_CFLAGS:=''}\n\t: ${BUILD_CPPFLAGS:='ifelse([$1],,,[$1])'}\n\t: ${BUILD_LDFLAGS:=''}\n\t: ${BUILD_LIBS:='ifelse([$2],,,[$2])'}\n\t: ${BUILD_EXEEXT:='$x'}\n\t: ${BUILD_OBJEXT:='o'}\n\n\tAC_ARG_WITH(build-cc,\n\t\t[  --with-build-cc=XXX     the build C compiler ($BUILD_CC)],\n\t\t[BUILD_CC=\"$withval\"],\n\t\t[AC_CHECK_PROGS(BUILD_CC, [gcc clang c99 c89 cc cl],none)])\n\tAC_MSG_CHECKING(for native build C compiler)\n\tAC_MSG_RESULT($BUILD_CC)\n\n\tAC_MSG_CHECKING(for native build C preprocessor)\n\tAC_ARG_WITH(build-cpp,\n\t\t[  --with-build-cpp=XXX    the build C preprocessor ($BUILD_CPP)],\n\t\t[BUILD_CPP=\"$withval\"],\n\t\t[BUILD_CPP='${BUILD_CC} -E'])\n\tAC_MSG_RESULT($BUILD_CPP)\n\n\tAC_MSG_CHECKING(for native build C flags)\n\tAC_ARG_WITH(build-cflags,\n\t\t[  --with-build-cflags=XXX the build C compiler-flags ($BUILD_CFLAGS)],\n\t\t[BUILD_CFLAGS=\"$withval\"])\n\tAC_MSG_RESULT($BUILD_CFLAGS)\n\n\tAC_MSG_CHECKING(for native build C preprocessor-flags)\n\tAC_ARG_WITH(build-cppflags,\n\t\t[  --with-build-cppflags=XXX the build C preprocessor-flags ($BUILD_CPPFLAGS)],\n\t\t[BUILD_CPPFLAGS=\"$withval\"])\n\tAC_MSG_RESULT($BUILD_CPPFLAGS)\n\n\tAC_MSG_CHECKING(for native build linker-flags)\n\tAC_ARG_WITH(build-ldflags,\n\t\t[  --with-build-ldflags=XXX the build linker-flags ($BUILD_LDFLAGS)],\n\t\t[BUILD_LDFLAGS=\"$withval\"])\n\tAC_MSG_RESULT($BUILD_LDFLAGS)\n\n\tAC_MSG_CHECKING(for native build linker-libraries)\n\tAC_ARG_WITH(build-libs,\n\t\t[  --with-build-libs=XXX   the build libraries (${BUILD_LIBS})],\n\t\t[BUILD_LIBS=\"$withval\"])\n\tAC_MSG_RESULT($BUILD_LIBS)\n\n\t# this assumes we're on Unix.\n\tBUILD_EXEEXT=\n\tBUILD_OBJEXT=o\n\n\t: ${BUILD_CC:='${CC}'}\n\n\tif ( test \"$BUILD_CC\" = \"$CC\" || test \"$BUILD_CC\" = '${CC}' ) ; then\n\t\tAC_MSG_ERROR([Cross-build requires two compilers.\nUse --with-build-cc to specify the native compiler.])\n\tfi\n\nelse\n\t: ${BUILD_CC:='${CC}'}\n\t: ${BUILD_CPP:='${CPP}'}\n\t: ${BUILD_CFLAGS:='${CFLAGS}'}\n\t: ${BUILD_CPPFLAGS:='${CPPFLAGS}'}\n\t: ${BUILD_LDFLAGS:='${LDFLAGS}'}\n\t: ${BUILD_LIBS:='${LIBS}'}\n\t: ${BUILD_EXEEXT:='$x'}\n\t: ${BUILD_OBJEXT:='o'}\nfi\n\nAC_SUBST(BUILD_CC)\nAC_SUBST(BUILD_CPP)\nAC_SUBST(BUILD_CFLAGS)\nAC_SUBST(BUILD_CPPFLAGS)\nAC_SUBST(BUILD_LDFLAGS)\nAC_SUBST(BUILD_LIBS)\nAC_SUBST(BUILD_EXEEXT)\nAC_SUBST(BUILD_OBJEXT)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_BUNDLED_INTL version: 18 updated: 2015/05/10 19:52:14\ndnl ---------------\ndnl Top-level macro for configuring an application with a bundled copy of\ndnl the intl and po directories for gettext.\ndnl\ndnl $1 specifies either Makefile or makefile, defaulting to the former.\ndnl $2 if nonempty sets the option to --enable-nls rather than to --disable-nls\ndnl\ndnl Sets variables which can be used to substitute in makefiles:\ndnl\tGT_YES       - \"#\" comment unless building intl library, otherwise empty\ndnl\tGT_NO        - \"#\" comment if building intl library, otherwise empty\ndnl\tINTLDIR_MAKE - to make ./intl directory\ndnl\tMSG_DIR_MAKE - to make ./po directory\ndnl\tSUB_MAKEFILE - list of makefiles in ./intl, ./po directories\ndnl\ndnl Defines:\ndnl\tHAVE_LIBGETTEXT_H if we're using ./intl\ndnl\tNLS_TEXTDOMAIN\ndnl\ndnl Environment:\ndnl\tALL_LINGUAS if set, lists the root names of the \".po\" files.\ndnl\tCONFIG_H assumed to be \"config.h\"\ndnl\tPACKAGE must be set, used as default for textdomain\ndnl\tVERSION may be set, otherwise extract from \"VERSION\" file.\ndnl\nAC_DEFUN([CF_BUNDLED_INTL],[\ncf_makefile=ifelse($1,,Makefile,$1)\n\ndnl Set of available languages (based on source distribution).  Note that\ndnl setting $LINGUAS overrides $ALL_LINGUAS.  Some environments set $LINGUAS\ndnl rather than $LC_ALL\ntest -z \"$ALL_LINGUAS\" && ALL_LINGUAS=`test -d $srcdir/po && cd $srcdir/po && echo *.po|sed -e 's/\\.po//g' -e 's/*//'`\n\n# Allow override of \"config.h\" definition:\n: ${CONFIG_H:=config.h}\nAC_SUBST(CONFIG_H)\n\nif test -z \"$PACKAGE\" ; then\n\tAC_MSG_ERROR([[CF_BUNDLED_INTL] used without setting [PACKAGE] variable])\nfi\n\nif test -z \"$VERSION\" ; then\nif test -f $srcdir/VERSION ; then\n\tVERSION=`sed -e '2,$d' $srcdir/VERSION|cut -f1`\nelse\n\tVERSION=unknown\nfi\nfi\nAC_SUBST(VERSION)\n\nAM_GNU_GETTEXT(,,,[$2])\n\nif test \"$USE_NLS\" = yes ; then\n\tAC_ARG_WITH(textdomain,\n\t\t[  --with-textdomain=PKG   NLS text-domain (default is package name)],\n\t\t[NLS_TEXTDOMAIN=$withval],\n\t\t[NLS_TEXTDOMAIN=$PACKAGE])\n\tAC_DEFINE_UNQUOTED(NLS_TEXTDOMAIN,\"$NLS_TEXTDOMAIN\",[Define to the nls textdomain value])\n\tAC_SUBST(NLS_TEXTDOMAIN)\nfi\n\nINTLDIR_MAKE=\nMSG_DIR_MAKE=\nSUB_MAKEFILE=\n\ndnl this updates SUB_MAKEFILE and MSG_DIR_MAKE:\nCF_OUR_MESSAGES($1)\n\nif test \"$USE_INCLUDED_LIBINTL\" = yes ; then\n\tif test \"$nls_cv_force_use_gnu_gettext\" = yes ; then\n\t\t:\n\telif test \"$nls_cv_use_gnu_gettext\" = yes ; then\n\t\t:\n\telse\n\t\tINTLDIR_MAKE=\"#\"\n\tfi\n\tif test -z \"$INTLDIR_MAKE\"; then\n\t\tAC_DEFINE(HAVE_LIBGETTEXT_H,1,[Define to 1 if we have libgettext.h])\n\t\tfor cf_makefile in \\\n\t\t\t$srcdir/intl/Makefile.in \\\n\t\t\t$srcdir/intl/makefile.in\n\t\tdo\n\t\t\tif test -f \"$cf_makefile\" ; then\n\t\t\t\tSUB_MAKEFILE=\"$SUB_MAKEFILE `echo \\\"${cf_makefile}\\\"|sed -e 's,^'$srcdir/',,' -e 's/\\.in$//'`:${cf_makefile}\"\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\tfi\nelse\n\tINTLDIR_MAKE=\"#\"\n\tif test \"$USE_NLS\" = yes ; then\n\t\tAC_CHECK_HEADERS(libintl.h)\n\tfi\nfi\n\nif test -z \"$INTLDIR_MAKE\" ; then\n\tCPPFLAGS=\"$CPPFLAGS -I../intl\"\nfi\n\ndnl FIXME:  we use this in lynx (the alternative is a spurious dependency upon\ndnl GNU make)\nif test \"$BUILD_INCLUDED_LIBINTL\" = yes ; then\n\tGT_YES=\"#\"\n\tGT_NO=\nelse\n\tGT_YES=\n\tGT_NO=\"#\"\nfi\n\nAC_SUBST(INTLDIR_MAKE)\nAC_SUBST(MSG_DIR_MAKE)\nAC_SUBST(GT_YES)\nAC_SUBST(GT_NO)\n\ndnl FIXME:  the underlying AM_GNU_GETTEXT macro either needs some fixes or a\ndnl little documentation.  It doesn't define anything so that we can ifdef our\ndnl own code, except ENABLE_NLS, which is too vague to be of any use.\n\nif test \"$USE_INCLUDED_LIBINTL\" = yes ; then\n\tif test \"$nls_cv_force_use_gnu_gettext\" = yes ; then\n\t\tAC_DEFINE(HAVE_GETTEXT,1,[Define to 1 if we have gettext function])\n\telif test \"$nls_cv_use_gnu_gettext\" = yes ; then\n\t\tAC_DEFINE(HAVE_GETTEXT,1,[Define to 1 if we have gettext function])\n\tfi\n\tif test -n \"$nls_cv_header_intl\" ; then\n\t\tAC_DEFINE(HAVE_LIBINTL_H,1,[Define to 1 if we have header-file for libintl])\n\tfi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CC_ENV_FLAGS version: 8 updated: 2017/09/23 08:50:24\ndnl ---------------\ndnl Check for user's environment-breakage by stuffing CFLAGS/CPPFLAGS content\ndnl into CC.  This will not help with broken scripts that wrap the compiler\ndnl with options, but eliminates a more common category of user confusion.\ndnl\ndnl In particular, it addresses the problem of being able to run the C\ndnl preprocessor in a consistent manner.\ndnl\ndnl Caveat: this also disallows blanks in the pathname for the compiler, but\ndnl the nuisance of having inconsistent settings for compiler and preprocessor\ndnl outweighs that limitation.\nAC_DEFUN([CF_CC_ENV_FLAGS],\n[\n# This should have been defined by AC_PROG_CC\n: ${CC:=cc}\n\nAC_MSG_CHECKING(\\$CC variable)\ncase \"$CC\" in\n(*[[\\ \\\t]]-*)\n\tAC_MSG_RESULT(broken)\n\tAC_MSG_WARN(your environment misuses the CC variable to hold CFLAGS/CPPFLAGS options)\n\t# humor him...\n\tcf_prog=`echo \"$CC\" | sed -e 's/\t/ /g' -e 's/[[ ]]* / /g' -e 's/[[ ]]*[[ ]]-[[^ ]].*//'`\n\tcf_flags=`echo \"$CC\" | ${AWK:-awk} -v prog=\"$cf_prog\" '{ printf(\"%s\", [substr]([$]0,1+length(prog))); }'`\n\tCC=\"$cf_prog\"\n\tfor cf_arg in $cf_flags\n\tdo\n\t\tcase \"x$cf_arg\" in\n\t\t(x-[[IUDfgOW]]*)\n\t\t\tCF_ADD_CFLAGS($cf_arg)\n\t\t\t;;\n\t\t(*)\n\t\t\tCC=\"$CC $cf_arg\"\n\t\t\t;;\n\t\tesac\n\tdone\n\tCF_VERBOSE(resulting CC: '$CC')\n\tCF_VERBOSE(resulting CFLAGS: '$CFLAGS')\n\tCF_VERBOSE(resulting CPPFLAGS: '$CPPFLAGS')\n\t;;\n(*)\n\tAC_MSG_RESULT(ok)\n\t;;\nesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CHECK_CACHE version: 12 updated: 2012/10/02 20:55:03\ndnl --------------\ndnl Check if we're accidentally using a cache from a different machine.\ndnl Derive the system name, as a check for reusing the autoconf cache.\ndnl\ndnl If we've packaged config.guess and config.sub, run that (since it does a\ndnl better job than uname).  Normally we'll use AC_CANONICAL_HOST, but allow\ndnl an extra parameter that we may override, e.g., for AC_CANONICAL_SYSTEM\ndnl which is useful in cross-compiles.\ndnl\ndnl Note: we would use $ac_config_sub, but that is one of the places where\ndnl autoconf 2.5x broke compatibility with autoconf 2.13\nAC_DEFUN([CF_CHECK_CACHE],\n[\nif test -f $srcdir/config.guess || test -f $ac_aux_dir/config.guess ; then\n\tifelse([$1],,[AC_CANONICAL_HOST],[$1])\n\tsystem_name=\"$host_os\"\nelse\n\tsystem_name=\"`(uname -s -r) 2>/dev/null`\"\n\tif test -z \"$system_name\" ; then\n\t\tsystem_name=\"`(hostname) 2>/dev/null`\"\n\tfi\nfi\ntest -n \"$system_name\" && AC_DEFINE_UNQUOTED(SYSTEM_NAME,\"$system_name\",[Define to the system name.])\nAC_CACHE_VAL(cf_cv_system_name,[cf_cv_system_name=\"$system_name\"])\n\ntest -z \"$system_name\" && system_name=\"$cf_cv_system_name\"\ntest -n \"$cf_cv_system_name\" && AC_MSG_RESULT(Configuring for $cf_cv_system_name)\n\nif test \".$system_name\" != \".$cf_cv_system_name\" ; then\n\tAC_MSG_RESULT(Cached system name ($system_name) does not agree with actual ($cf_cv_system_name))\n\tAC_MSG_ERROR(\"Please remove config.cache and try again.\")\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CHECK_CFLAGS version: 3 updated: 2014/07/22 05:32:57\ndnl ---------------\ndnl Conditionally add to $CFLAGS and $CPPFLAGS values which are derived from\ndnl a build-configuration such as imake.  These have the pitfall that they\ndnl often contain compiler-specific options which we cannot use, mixed with\ndnl preprocessor options that we usually can.\nAC_DEFUN([CF_CHECK_CFLAGS],\n[\nCF_VERBOSE(checking additions to CFLAGS)\ncf_check_cflags=\"$CFLAGS\"\ncf_check_cppflags=\"$CPPFLAGS\"\nCF_ADD_CFLAGS($1,yes)\nif test \"x$cf_check_cflags\" != \"x$CFLAGS\" ; then\nAC_TRY_LINK([#include <stdio.h>],[printf(\"Hello world\");],,\n\t[CF_VERBOSE(test-compile failed.  Undoing change to \\$CFLAGS)\n\t if test \"x$cf_check_cppflags\" != \"x$CPPFLAGS\" ; then\n\t\t CF_VERBOSE(but keeping change to \\$CPPFLAGS)\n\t fi\n\t CFLAGS=\"$cf_check_flags\"])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CHECK_ERRNO version: 12 updated: 2015/04/18 08:56:57\ndnl --------------\ndnl Check for data that is usually declared in <stdio.h> or <errno.h>, e.g.,\ndnl the 'errno' variable.  Define a DECL_xxx symbol if we must declare it\ndnl ourselves.\ndnl\ndnl $1 = the name to check\ndnl $2 = the assumed type\nAC_DEFUN([CF_CHECK_ERRNO],\n[\nAC_CACHE_CHECK(if external $1 is declared, cf_cv_dcl_$1,[\n\tAC_TRY_COMPILE([\n#ifdef HAVE_STDLIB_H\n#include <stdlib.h>\n#endif\n#include <stdio.h>\n#include <sys/types.h>\n#include <errno.h> ],\n\tifelse([$2],,int,[$2]) x = (ifelse([$2],,int,[$2])) $1,\n\t[cf_cv_dcl_$1=yes],\n\t[cf_cv_dcl_$1=no])\n])\n\nif test \"$cf_cv_dcl_$1\" = no ; then\n\tCF_UPPER(cf_result,decl_$1)\n\tAC_DEFINE_UNQUOTED($cf_result)\nfi\n\n# It's possible (for near-UNIX clones) that the data doesn't exist\nCF_CHECK_EXTERN_DATA($1,ifelse([$2],,int,[$2]))\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CHECK_EXTERN_DATA version: 4 updated: 2015/04/18 08:56:57\ndnl --------------------\ndnl Check for existence of external data in the current set of libraries.  If\ndnl we can modify it, it's real enough.\ndnl $1 = the name to check\ndnl $2 = its type\nAC_DEFUN([CF_CHECK_EXTERN_DATA],\n[\nAC_CACHE_CHECK(if external $1 exists, cf_cv_have_$1,[\n\tAC_TRY_LINK([\n#undef $1\nextern $2 $1;\n],\n\t[$1 = 2],\n\t[cf_cv_have_$1=yes],\n\t[cf_cv_have_$1=no])\n])\n\nif test \"$cf_cv_have_$1\" = yes ; then\n\tCF_UPPER(cf_result,have_$1)\n\tAC_DEFINE_UNQUOTED($cf_result)\nfi\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CHECK_FUNCDECL version: 7 updated: 2009/10/15 19:39:18\ndnl -----------------\ndnl Check if a function is declared by including a set of include files.\ndnl Invoke the corresponding actions according to whether it is found or not.\ndnl\ndnl Gcc (unlike other compilers) will only warn about the miscast assignment\ndnl in the first test, but most compilers will oblige with an error in the\ndnl second test.\ndnl\ndnl CF_CHECK_FUNCDECL(INCLUDES, FUNCTION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]])\nAC_DEFUN([CF_CHECK_FUNCDECL],\n[\nAC_MSG_CHECKING([for $2 declaration])\nAC_CACHE_VAL(ac_cv_func_decl_$2,\n[AC_TRY_COMPILE([$1],\n[#ifndef $2\nextern\tint\t$2();\n#endif],[\nAC_TRY_COMPILE([$1],\n[#ifndef $2\nint\t(*p)() = $2;\n#endif],[\neval \"ac_cv_func_decl_$2=yes\"],[\neval \"ac_cv_func_decl_$2=no\"])],[\neval \"ac_cv_func_decl_$2=yes\"])])\nif eval \"test \\\"`echo '$ac_cv_func_'decl_$2`\\\" = yes\"; then\n  AC_MSG_RESULT(yes)\n  ifelse([$3], , :, [$3])\nelse\n  AC_MSG_RESULT(no)\nifelse([$4], , , [$4\n])dnl\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CHECK_FUNCDECLS version: 4 updated: 1999/03/30 12:24:31\ndnl ------------------\ndnl Check if functions are declared by including a set of include files.\ndnl and define DECL_XXX if not.\ndnl\ndnl CF_CHECK_FUNCDECLS(INCLUDES, FUNCTION... [, ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]])\nAC_DEFUN([CF_CHECK_FUNCDECLS],\n[for ac_func in $2\ndo\nCF_CHECK_FUNCDECL([$1], $ac_func,\n[$3],\n[\n  CF_UPPER(ac_tr_func,DECL_$ac_func)\n  AC_DEFINE_UNQUOTED($ac_tr_func) $4])dnl\ndone\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CHECK_IPV6 version: 3 updated: 2004/01/22 17:38:22\ndnl -------------\ndnl Check for IPV6 configuration.\nAC_DEFUN([CF_CHECK_IPV6],[\nCF_FIND_IPV6_TYPE\nCF_FIND_IPV6_LIBS\n\nCF_FUNC_GETADDRINFO\n\nif test \"$cf_cv_getaddrinfo\" != \"yes\"; then\n\tif test \"$cf_cv_ipv6type\" != \"linux\"; then\n\t\tAC_MSG_WARN(\n[You must get working getaddrinfo() function,\nor you can specify \"--disable-ipv6\"])\n\telse\n\t\tAC_MSG_WARN(\n[The getaddrinfo() implementation on your system seems be buggy.\nYou should upgrade your system library to the newest version\nof GNU C library (aka glibc).])\n\tfi\nfi\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CHECK_SIZEOF version: 3 updated: 2018/02/21 21:26:03\ndnl ---------------\ndnl Improve on AC_CHECK_SIZEOF for cases when the build-environment is\ndnl deficient, e.g., if someone tries to build in busybox.  Use the second\ndnl parameter as the fallback value.\ndnl\ndnl By the way, 2.13/2.52 differ in AC_CHECK_SIZEOF regarding the types they\ndnl can detect; the former includes only stdio.h for types while the latter\ndnl includes several header files.\nAC_DEFUN([CF_CHECK_SIZEOF],[\nAC_CHECK_SIZEOF([$1],[$2])\nif test \"${ac_cv_type_$1+set}\" = set; then\n\tcf_cv_sizeof=\"$ac_cv_sizeof_$1\"\n\tif test \"${ac_cv_sizeof_$1+set}\" != set; then\n\t\tAC_MSG_WARN(using $2 for sizeof $1)\n\t\tac_cv_sizeof_$1=$2\n\telif test \"x${ac_cv_sizeof_$1}\" = x0; then\n\t\tAC_MSG_WARN([sizeof $1 not found, using $2])\n\t\tac_cv_sizeof_$1=$2\n\tfi\n\tif test \"x$ac_cv_sizeof_$1\" != \"x$cf_cv_sizeof\"\n\tthen\n\t\tCF_UPPER(cf_cv_type,sizeof_$1)\n\t\tsed -e \"s/\\([[ \t]]$cf_cv_type[[ \t]]\\).*/\\1$ac_cv_sizeof_$1/\" confdefs.h >conftest.val\n\t\tmv conftest.val confdefs.h\n\tfi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CHECK_SSL_X509 version: 5 updated: 2014/11/30 18:19:56\ndnl -----------------\ndnl Check for X509 support in the SSL library.\ndefine([CF_CHECK_SSL_X509],[\nAC_MSG_CHECKING(for X509 support)\nAC_TRY_LINK(CF__SSL_HEAD [\n#if defined(USE_GNUTLS_INCL)\n#include <gnutls/x509.h>\n#else\n#include <openssl/x509.h>\n#endif\n],\n\t[X509_verify_cert_error_string(X509_STORE_CTX_get_error(NULL))],\n\t[cf_x509_support=yes],\n\t[cf_x509_support=no])\nAC_MSG_RESULT($cf_x509_support)\n\nif test \"$cf_x509_support\" = yes ; then\n\tAC_DEFINE(USE_X509_SUPPORT)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CHECK_TYPE version: 3 updated: 2012/10/04 05:24:07\ndnl -------------\ndnl Add a 3rd parameter to AC_CHECK_TYPE, working around autoconf 2.5x's\ndnl deliberate incompatibility.\ndnl\t$1 = name of type to check for\ndnl\t$2 = default type\ndnl\t$3 = additional #include's and related preprocessor lines.\nifdef([m4_HAS_AC_CT_FOURARGS], [m4_undefine([m4_HAS_AC_CT_FOURARGS])])dnl\nifelse(m4_PACKAGE_VERSION, [fnord_acsalt], [],\n[ifdef([m4_version_compare],[m4_define([m4_HAS_AC_CT_FOURARGS])])])dnl\nAC_DEFUN([CF_CHECK_TYPE],\n[\nifdef([m4_HAS_AC_CT_FOURARGS],[\n\tAC_CHECK_TYPE([$1],ac_cv_type_$1=yes,ac_cv_type_$1=no,[$3])\n\t],[\n\tAC_MSG_CHECKING(for $1)\n\tAC_TRY_COMPILE([\n#if STDC_HEADERS\n#include <stdlib.h>\n#include <stddef.h>\n#endif\n$3\n],[\n\tstatic $1 dummy; if (sizeof(dummy)) return 0; else return 1;],\n\tac_cv_type_$1=yes,\n\tac_cv_type_$1=no)\n\tAC_MSG_RESULT($ac_cv_type_$1)\n])dnl\nif test $ac_cv_type_$1 = no; then\n\tAC_DEFINE($1, $2, Define to $2 if $1 is not declared)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CLANG_COMPILER version: 2 updated: 2013/11/19 19:23:35\ndnl -----------------\ndnl Check if the given compiler is really clang.  clang's C driver defines\ndnl __GNUC__ (fooling the configure script into setting $GCC to yes) but does\ndnl not ignore some gcc options.\ndnl\ndnl This macro should be run \"soon\" after AC_PROG_CC or AC_PROG_CPLUSPLUS, to\ndnl ensure that it is not mistaken for gcc/g++.  It is normally invoked from\ndnl the wrappers for gcc and g++ warnings.\ndnl\ndnl $1 = GCC (default) or GXX\ndnl $2 = CLANG_COMPILER (default)\ndnl $3 = CFLAGS (default) or CXXFLAGS\nAC_DEFUN([CF_CLANG_COMPILER],[\nifelse([$2],,CLANG_COMPILER,[$2])=no\n\nif test \"$ifelse([$1],,[$1],GCC)\" = yes ; then\n\tAC_MSG_CHECKING(if this is really Clang ifelse([$1],GXX,C++,C) compiler)\n\tcf_save_CFLAGS=\"$ifelse([$3],,CFLAGS,[$3])\"\n\tifelse([$3],,CFLAGS,[$3])=\"$ifelse([$3],,CFLAGS,[$3]) -Qunused-arguments\"\n\tAC_TRY_COMPILE([],[\n#ifdef __clang__\n#else\nmake an error\n#endif\n],[ifelse([$2],,CLANG_COMPILER,[$2])=yes\ncf_save_CFLAGS=\"$cf_save_CFLAGS -Qunused-arguments\"\n],[])\n\tifelse([$3],,CFLAGS,[$3])=\"$cf_save_CFLAGS\"\n\tAC_MSG_RESULT($ifelse([$2],,CLANG_COMPILER,[$2]))\nfi\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_COLOR_CURSES version: 8 updated: 2012/11/08 20:57:52\ndnl ---------------\ndnl Check if curses supports color.  (Note that while SVr3 curses supports\ndnl color, it does this differently from SVr4 curses; more work would be needed\ndnl to accommodate SVr3).\ndnl\nAC_DEFUN([CF_COLOR_CURSES],\n[\nAC_MSG_CHECKING(if curses supports color attributes)\nAC_CACHE_VAL(cf_cv_color_curses,[\n\tAC_TRY_LINK([\n#include <${cf_cv_ncurses_header:-curses.h}>\n],\n\t[chtype x = COLOR_BLUE;\n\t has_colors();\n\t start_color();\n#ifndef NCURSES_BROKEN\n\t wbkgd(curscr, getbkgd(stdscr)); /* X/Open XPG4 aka SVr4 Curses */\n#endif\n\t],\n\t[cf_cv_color_curses=yes],\n\t[cf_cv_color_curses=no])\n\t])\nAC_MSG_RESULT($cf_cv_color_curses)\nif test $cf_cv_color_curses = yes ; then\n\tAC_DEFINE(COLOR_CURSES,1,[Define to 1 if if curses supports color attributes])\n\ttest \".$cf_cv_ncurses_broken\" != .yes && AC_DEFINE(HAVE_GETBKGD,1,[Define to 1 if curses has getbkgd function])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CURSES_CHTYPE version: 8 updated: 2012/10/06 08:57:51\ndnl ----------------\ndnl Test if curses defines 'chtype' (usually a 'long' type for SysV curses).\nAC_DEFUN([CF_CURSES_CHTYPE],\n[\nAC_REQUIRE([CF_CURSES_CPPFLAGS])dnl\nAC_CACHE_CHECK(for chtype typedef,cf_cv_chtype_decl,[\n\tAC_TRY_COMPILE([#include <${cf_cv_ncurses_header:-curses.h}>],\n\t\t[chtype foo],\n\t\t[cf_cv_chtype_decl=yes],\n\t\t[cf_cv_chtype_decl=no])])\nif test $cf_cv_chtype_decl = yes ; then\n\tAC_DEFINE(HAVE_TYPE_CHTYPE,1,[Define to 1 if chtype is declared])\n\tAC_CACHE_CHECK(if chtype is scalar or struct,cf_cv_chtype_type,[\n\t\tAC_TRY_COMPILE([#include <${cf_cv_ncurses_header:-curses.h}>],\n\t\t\t[chtype foo; long x = foo],\n\t\t\t[cf_cv_chtype_type=scalar],\n\t\t\t[cf_cv_chtype_type=struct])])\n\tif test $cf_cv_chtype_type = scalar ; then\n\t\tAC_DEFINE(TYPE_CHTYPE_IS_SCALAR,1,[Define to 1 if chtype is a scaler/integer])\n\tfi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CURSES_CONFIG version: 2 updated: 2006/10/29 11:06:27\ndnl ----------------\ndnl Tie together the configure-script macros for curses.  It may be ncurses,\ndnl but unless asked, we do not make a special search for ncurses.  However,\ndnl still check for the ncurses version number, for use in other macros.\nAC_DEFUN([CF_CURSES_CONFIG],\n[\nCF_CURSES_CPPFLAGS\nCF_NCURSES_VERSION\nCF_CURSES_LIBS\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CURSES_CPPFLAGS version: 12 updated: 2015/04/15 19:08:48\ndnl ------------------\ndnl Look for the curses headers.\nAC_DEFUN([CF_CURSES_CPPFLAGS],[\n\nAC_CACHE_CHECK(for extra include directories,cf_cv_curses_incdir,[\ncf_cv_curses_incdir=no\ncase $host_os in\n(hpux10.*)\n\tif test \"x$cf_cv_screen\" = \"xcurses_colr\"\n\tthen\n\t\ttest -d /usr/include/curses_colr && \\\n\t\tcf_cv_curses_incdir=\"-I/usr/include/curses_colr\"\n\tfi\n\t;;\n(sunos3*|sunos4*)\n\tif test \"x$cf_cv_screen\" = \"xcurses_5lib\"\n\tthen\n\t\ttest -d /usr/5lib && \\\n\t\ttest -d /usr/5include && \\\n\t\tcf_cv_curses_incdir=\"-I/usr/5include\"\n\tfi\n\t;;\nesac\n])\ntest \"$cf_cv_curses_incdir\" != no && CPPFLAGS=\"$CPPFLAGS $cf_cv_curses_incdir\"\n\nCF_CURSES_HEADER\nCF_TERM_HEADER\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CURSES_FUNCS version: 19 updated: 2018/01/03 04:47:33\ndnl ---------------\ndnl Curses-functions are a little complicated, since a lot of them are macros.\nAC_DEFUN([CF_CURSES_FUNCS],\n[\nAC_REQUIRE([CF_CURSES_CPPFLAGS])dnl\nAC_REQUIRE([CF_XOPEN_CURSES])\nAC_REQUIRE([CF_CURSES_TERM_H])\nAC_REQUIRE([CF_CURSES_UNCTRL_H])\nfor cf_func in $1\ndo\n\tCF_UPPER(cf_tr_func,$cf_func)\n\tAC_MSG_CHECKING(for ${cf_func})\n\tCF_MSG_LOG(${cf_func})\n\tAC_CACHE_VAL(cf_cv_func_$cf_func,[\n\t\teval cf_result='$ac_cv_func_'$cf_func\n\t\tif test \".$cf_result\" != \".no\"; then\n\t\t\tAC_TRY_LINK(CF__CURSES_HEAD,\n\t\t\t[\n#ifndef ${cf_func}\nlong foo = (long)(&${cf_func});\nfprintf(stderr, \"testing linkage of $cf_func:%p\\n\", (void *)foo);\nif (foo + 1234L > 5678L)\n\t${cf_cv_main_return:-return}(foo != 0);\n#endif\n\t\t\t],\n\t\t\t[cf_result=yes],\n\t\t\t[cf_result=no])\n\t\tfi\n\t\teval 'cf_cv_func_'$cf_func'=$cf_result'\n\t])\n\t# use the computed/retrieved cache-value:\n\teval 'cf_result=$cf_cv_func_'$cf_func\n\tAC_MSG_RESULT($cf_result)\n\tif test $cf_result != no; then\n\t\tAC_DEFINE_UNQUOTED(HAVE_${cf_tr_func})\n\tfi\ndone\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CURSES_HEADER version: 5 updated: 2015/04/23 20:35:30\ndnl ----------------\ndnl Find a \"curses\" header file, e.g,. \"curses.h\", or one of the more common\ndnl variations of ncurses' installs.\ndnl\ndnl $1 = ncurses when looking for ncurses, or is empty\nAC_DEFUN([CF_CURSES_HEADER],[\nAC_CACHE_CHECK(if we have identified curses headers,cf_cv_ncurses_header,[\ncf_cv_ncurses_header=none\nfor cf_header in \\\n\tncurses.h ifelse($1,,,[$1/ncurses.h]) \\\n\tcurses.h ifelse($1,,,[$1/curses.h]) ifelse($1,,[ncurses/ncurses.h ncurses/curses.h])\ndo\nAC_TRY_COMPILE([#include <${cf_header}>],\n\t[initscr(); tgoto(\"?\", 0,0)],\n\t[cf_cv_ncurses_header=$cf_header; break],[])\ndone\n])\n\nif test \"$cf_cv_ncurses_header\" = none ; then\n\tAC_MSG_ERROR(No curses header-files found)\nfi\n\n# cheat, to get the right #define's for HAVE_NCURSES_H, etc.\nAC_CHECK_HEADERS($cf_cv_ncurses_header)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CURSES_LIBS version: 41 updated: 2017/12/31 19:23:43\ndnl --------------\ndnl Look for the curses libraries.  Older curses implementations may require\ndnl termcap/termlib to be linked as well.  Call CF_CURSES_CPPFLAGS first.\nAC_DEFUN([CF_CURSES_LIBS],[\n\nAC_REQUIRE([CF_CURSES_CPPFLAGS])dnl\nAC_MSG_CHECKING(if we have identified curses libraries)\nAC_TRY_LINK([#include <${cf_cv_ncurses_header:-curses.h}>],\n\t[initscr(); tgoto(\"?\", 0,0)],\n\tcf_result=yes,\n\tcf_result=no)\nAC_MSG_RESULT($cf_result)\n\nif test \"$cf_result\" = no ; then\ncase $host_os in\n(freebsd*)\n\tAC_CHECK_LIB(mytinfo,tgoto,[CF_ADD_LIBS(-lmytinfo)])\n\t;;\n(hpux10.*)\n\t# Looking at HPUX 10.20, the Hcurses library is the oldest (1997), cur_colr\n\t# next (1998), and xcurses \"newer\" (2000).  There is no header file for\n\t# Hcurses; the subdirectory curses_colr has the headers (curses.h and\n\t# term.h) for cur_colr\n\tif test \"x$cf_cv_screen\" = \"xcurses_colr\"\n\tthen\n\t\tAC_CHECK_LIB(cur_colr,initscr,[\n\t\t\tCF_ADD_LIBS(-lcur_colr)\n\t\t\tac_cv_func_initscr=yes\n\t\t\t],[\n\t\tAC_CHECK_LIB(Hcurses,initscr,[\n\t\t\t# HP's header uses __HP_CURSES, but user claims _HP_CURSES.\n\t\t\tCF_ADD_LIBS(-lHcurses)\n\t\t\tCPPFLAGS=\"$CPPFLAGS -D__HP_CURSES -D_HP_CURSES\"\n\t\t\tac_cv_func_initscr=yes\n\t\t\t])])\n\tfi\n\t;;\n(linux*)\n\tcase `arch 2>/dev/null` in\n\t(x86_64)\n\t\tif test -d /lib64\n\t\tthen\n\t\t\tCF_ADD_LIBDIR(/lib64)\n\t\telse\n\t\t\tCF_ADD_LIBDIR(/lib)\n\t\tfi\n\t\t;;\n\t(*)\n\t\tCF_ADD_LIBDIR(/lib)\n\t\t;;\n\tesac\n\t;;\n(sunos3*|sunos4*)\n\tif test \"x$cf_cv_screen\" = \"xcurses_5lib\"\n\tthen\n\t\tif test -d /usr/5lib ; then\n\t\t\tCF_ADD_LIBDIR(/usr/5lib)\n\t\t\tCF_ADD_LIBS(-lcurses -ltermcap)\n\t\tfi\n\tfi\n\tac_cv_func_initscr=yes\n\t;;\nesac\n\nif test \".$ac_cv_func_initscr\" != .yes ; then\n\tcf_save_LIBS=\"$LIBS\"\n\n\tif test \".${cf_cv_ncurses_version:-no}\" != .no\n\tthen\n\t\tcf_check_list=\"ncurses curses cursesX\"\n\telse\n\t\tcf_check_list=\"cursesX curses ncurses\"\n\tfi\n\n\t# Check for library containing tgoto.  Do this before curses library\n\t# because it may be needed to link the test-case for initscr.\n\tif test \"x$cf_term_lib\" = x\n\tthen\n\t\tAC_CHECK_FUNC(tgoto,[cf_term_lib=predefined],[\n\t\t\tfor cf_term_lib in $cf_check_list otermcap termcap tinfo termlib unknown\n\t\t\tdo\n\t\t\t\tAC_CHECK_LIB($cf_term_lib,tgoto,[\n\t\t\t\t\t: ${cf_nculib_root:=$cf_term_lib}\n\t\t\t\t\tbreak\n\t\t\t\t])\n\t\t\tdone\n\t\t])\n\tfi\n\n\t# Check for library containing initscr\n\ttest \"$cf_term_lib\" != predefined && test \"$cf_term_lib\" != unknown && LIBS=\"-l$cf_term_lib $cf_save_LIBS\"\n\tif test \"x$cf_curs_lib\" = x\n\tthen\n\t\tfor cf_curs_lib in $cf_check_list xcurses jcurses pdcurses unknown\n\t\tdo\n\t\t\tLIBS=\"-l$cf_curs_lib $cf_save_LIBS\"\n\t\t\tif test \"$cf_term_lib\" = unknown || test \"$cf_term_lib\" = \"$cf_curs_lib\" ; then\n\t\t\t\tAC_MSG_CHECKING(if we can link with $cf_curs_lib library)\n\t\t\t\tAC_TRY_LINK([#include <${cf_cv_ncurses_header:-curses.h}>],\n\t\t\t\t\t[initscr()],\n\t\t\t\t\t[cf_result=yes],\n\t\t\t\t\t[cf_result=no])\n\t\t\t\tAC_MSG_RESULT($cf_result)\n\t\t\t\ttest $cf_result = yes && break\n\t\t\telif test \"$cf_curs_lib\" = \"$cf_term_lib\" ; then\n\t\t\t\tcf_result=no\n\t\t\telif test \"$cf_term_lib\" != predefined ; then\n\t\t\t\tAC_MSG_CHECKING(if we need both $cf_curs_lib and $cf_term_lib libraries)\n\t\t\t\tAC_TRY_LINK([#include <${cf_cv_ncurses_header:-curses.h}>],\n\t\t\t\t\t[initscr(); tgoto((char *)0, 0, 0);],\n\t\t\t\t\t[cf_result=no],\n\t\t\t\t\t[\n\t\t\t\t\tLIBS=\"-l$cf_curs_lib -l$cf_term_lib $cf_save_LIBS\"\n\t\t\t\t\tAC_TRY_LINK([#include <${cf_cv_ncurses_header:-curses.h}>],\n\t\t\t\t\t\t[initscr()],\n\t\t\t\t\t\t[cf_result=yes],\n\t\t\t\t\t\t[cf_result=error])\n\t\t\t\t\t])\n\t\t\t\tAC_MSG_RESULT($cf_result)\n\t\t\t\ttest $cf_result != error && break\n\t\t\tfi\n\t\tdone\n\tfi\n\ttest $cf_curs_lib = unknown && AC_MSG_ERROR(no curses library found)\nfi\nfi\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CURSES_TERM_H version: 11 updated: 2015/04/15 19:08:48\ndnl ----------------\ndnl SVr4 curses should have term.h as well (where it puts the definitions of\ndnl the low-level interface).  This may not be true in old/broken implementations,\ndnl as well as in misconfigured systems (e.g., gcc configured for Solaris 2.4\ndnl running with Solaris 2.5.1).\nAC_DEFUN([CF_CURSES_TERM_H],\n[\nAC_REQUIRE([CF_CURSES_CPPFLAGS])dnl\n\nAC_CACHE_CHECK(for term.h, cf_cv_term_header,[\n\n# If we found <ncurses/curses.h>, look for <ncurses/term.h>, but always look\n# for <term.h> if we do not find the variant.\n\ncf_header_list=\"term.h ncurses/term.h ncursesw/term.h\"\n\ncase ${cf_cv_ncurses_header:-curses.h} in\n(*/*)\n\tcf_header_item=`echo ${cf_cv_ncurses_header:-curses.h} | sed -e 's%\\..*%%' -e 's%/.*%/%'`term.h\n\tcf_header_list=\"$cf_header_item $cf_header_list\"\n\t;;\nesac\n\nfor cf_header in $cf_header_list\ndo\n\tAC_TRY_COMPILE([\n#include <${cf_cv_ncurses_header:-curses.h}>\n#include <${cf_header}>],\n\t[WINDOW *x],\n\t[cf_cv_term_header=$cf_header\n\t break],\n\t[cf_cv_term_header=no])\ndone\n\ncase $cf_cv_term_header in\n(no)\n\t# If curses is ncurses, some packagers still mess it up by trying to make\n\t# us use GNU termcap.  This handles the most common case.\n\tfor cf_header in ncurses/term.h ncursesw/term.h\n\tdo\n\t\tAC_TRY_COMPILE([\n#include <${cf_cv_ncurses_header:-curses.h}>\n#ifdef NCURSES_VERSION\n#include <${cf_header}>\n#else\nmake an error\n#endif],\n\t\t\t[WINDOW *x],\n\t\t\t[cf_cv_term_header=$cf_header\n\t\t\t break],\n\t\t\t[cf_cv_term_header=no])\n\tdone\n\t;;\nesac\n])\n\ncase $cf_cv_term_header in\n(term.h)\n\tAC_DEFINE(HAVE_TERM_H,1,[Define to 1 if we have term.h])\n\t;;\n(ncurses/term.h)\n\tAC_DEFINE(HAVE_NCURSES_TERM_H,1,[Define to 1 if we have ncurses/term.h])\n\t;;\n(ncursesw/term.h)\n\tAC_DEFINE(HAVE_NCURSESW_TERM_H,1,[Define to 1 if we have ncursesw/term.h])\n\t;;\nesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CURSES_UNCTRL_H version: 4 updated: 2015/04/15 19:08:48\ndnl ------------------\ndnl Any X/Open curses implementation must have unctrl.h, but ncurses packages\ndnl may put it in a subdirectory (along with ncurses' other headers, of\ndnl course).  Packages which put the headers in inconsistent locations are\ndnl broken).\nAC_DEFUN([CF_CURSES_UNCTRL_H],\n[\nAC_REQUIRE([CF_CURSES_CPPFLAGS])dnl\n\nAC_CACHE_CHECK(for unctrl.h, cf_cv_unctrl_header,[\n\n# If we found <ncurses/curses.h>, look for <ncurses/unctrl.h>, but always look\n# for <unctrl.h> if we do not find the variant.\n\ncf_header_list=\"unctrl.h ncurses/unctrl.h ncursesw/unctrl.h\"\n\ncase ${cf_cv_ncurses_header:-curses.h} in\n(*/*)\n\tcf_header_item=`echo ${cf_cv_ncurses_header:-curses.h} | sed -e 's%\\..*%%' -e 's%/.*%/%'`unctrl.h\n\tcf_header_list=\"$cf_header_item $cf_header_list\"\n\t;;\nesac\n\nfor cf_header in $cf_header_list\ndo\n\tAC_TRY_COMPILE([\n#include <${cf_cv_ncurses_header:-curses.h}>\n#include <${cf_header}>],\n\t[WINDOW *x],\n\t[cf_cv_unctrl_header=$cf_header\n\t break],\n\t[cf_cv_unctrl_header=no])\ndone\n])\n\ncase $cf_cv_unctrl_header in\n(no)\n\tAC_MSG_WARN(unctrl.h header not found)\n\t;;\nesac\n\ncase $cf_cv_unctrl_header in\n(unctrl.h)\n\tAC_DEFINE(HAVE_UNCTRL_H,1,[Define to 1 if we have unctrl.h])\n\t;;\n(ncurses/unctrl.h)\n\tAC_DEFINE(HAVE_NCURSES_UNCTRL_H,1,[Define to 1 if we have ncurses/unctrl.h])\n\t;;\n(ncursesw/unctrl.h)\n\tAC_DEFINE(HAVE_NCURSESW_UNCTRL_H,1,[Define to 1 if we have ncursesw/unctrl.h])\n\t;;\nesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CURS_PERFORMANCE version: 5 updated: 2012/11/08 20:57:52\ndnl -------------------\ndnl Solaris 2.x curses provides a \"performance\" tradeoff according to whether\ndnl CURS_PERFORMANCE is defined.  If defined, the implementation defines macros\ndnl that access the WINDOW structure.  Otherwise, function calls are used.\nAC_DEFUN([CF_CURS_PERFORMANCE],\n[\nAC_MSG_CHECKING([for curses performance tradeoff])\nAC_CACHE_VAL(cf_cv_curs_performance,[\n    cf_cv_curs_performance=no\n    AC_TRY_COMPILE([\n#include <${cf_cv_ncurses_header:-curses.h}>],[\n#if defined(wbkgdset) && defined(clearok) && defined(getbkgd)\n\tint x = ERR;\n#else\n\tint x = ;\t/* force an error */\n#endif\n\t],[\n\tAC_TRY_COMPILE([\n#define CURS_PERFORMANCE\n#include <${cf_cv_ncurses_header:-curses.h}>],[\n#if defined(wbkgdset) && defined(clearok) && defined(getbkgd)\n\tint x = ;\t/* force an error */\n#else\n\tint x = ERR;\n#endif\n\t],[cf_cv_curs_performance=yes])])])\nAC_MSG_RESULT($cf_cv_curs_performance)\ntest $cf_cv_curs_performance = yes && AC_DEFINE(CURS_PERFORMANCE,1,[Define to 1 ifr curses performance tradeoff available])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CURS_TOUCHLINE version: 5 updated: 2015/04/15 19:08:48\ndnl -----------------\ndnl Check for the flavor of the touchline function, to distinguish between BSD\ndnl and SYSV.  This is needed on NetBSD 1.5 which has a partial implementation\ndnl of SVR4 curses.\nAC_DEFUN([CF_CURS_TOUCHLINE],[\nAC_CACHE_CHECK(for curses touchline function,cf_cv_curs_touchline,[\n\tAC_TRY_LINK([\n#include <${cf_cv_ncurses_header:-curses.h}>],\n\t[touchline(stdscr, 1,2,3);],\n\t[cf_cv_curs_touchline=bsd],\n\t[AC_TRY_LINK([\n#include <${cf_cv_ncurses_header:-curses.h}>],\n\t\t[touchline(stdscr, 1,2);],\n\t\t[cf_cv_curs_touchline=sysv],\n\t\t[cf_cv_curs_touchline=bsd])])])\ncase \"$cf_cv_curs_touchline\" in\n(bsd)\n\tAC_DEFINE(HAVE_BSD_TOUCHLINE,1,[Define to 1 if curses has bsd-style touchline])\n\t;;\n(sysv)\n\tAC_DEFINE(HAVE_SYSV_TOUCHLINE,1,[Define to 1 if curses has sysv-style touchline])\n\t;;\nesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_DEFINE_PROG version: 4 updated: 2012/11/08 20:57:52\ndnl --------------\ndnl Check for a program in the given list $3, defining the corresponding\ndnl program variable $2.\ndnl\nAC_DEFUN([CF_DEFINE_PROG],[\nAC_MSG_CHECKING(for $1)\nAC_CACHE_VAL(cf_cv_$2,[\n\tcf_cv_$2=unknown\n\tfor cv_path in $3\n\tdo\n\t\tif test -f $cv_path ; then\n\t\t\tcf_cv_$2=$cv_path\n\t\t\tbreak\n\t\tfi\n\tdone\n\t])\nAC_MSG_RESULT($cf_cv_$2)\nAC_DEFINE_UNQUOTED($2,\"$cf_cv_$2\",[Define to program from list])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_DIRNAME version: 4 updated: 2002/12/21 19:25:52\ndnl ----------\ndnl \"dirname\" is not portable, so we fake it with a shell script.\nAC_DEFUN([CF_DIRNAME],[$1=`echo $2 | sed -e 's%/[[^/]]*$%%'`])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_DISABLE_ECHO version: 13 updated: 2015/04/18 08:56:57\ndnl ---------------\ndnl You can always use \"make -n\" to see the actual options, but it's hard to\ndnl pick out/analyze warning messages when the compile-line is long.\ndnl\ndnl Sets:\ndnl\tECHO_LT - symbol to control if libtool is verbose\ndnl\tECHO_LD - symbol to prefix \"cc -o\" lines\ndnl\tRULE_CC - symbol to put before implicit \"cc -c\" lines (e.g., .c.o)\ndnl\tSHOW_CC - symbol to put before explicit \"cc -c\" lines\ndnl\tECHO_CC - symbol to put before any \"cc\" line\ndnl\nAC_DEFUN([CF_DISABLE_ECHO],[\nAC_MSG_CHECKING(if you want to see long compiling messages)\nCF_ARG_DISABLE(echo,\n\t[  --disable-echo          do not display \"compiling\" commands],\n\t[\n\tECHO_LT='--silent'\n\tECHO_LD='@echo linking [$]@;'\n\tRULE_CC='@echo compiling [$]<'\n\tSHOW_CC='@echo compiling [$]@'\n\tECHO_CC='@'\n],[\n\tECHO_LT=''\n\tECHO_LD=''\n\tRULE_CC=''\n\tSHOW_CC=''\n\tECHO_CC=''\n])\nAC_MSG_RESULT($enableval)\nAC_SUBST(ECHO_LT)\nAC_SUBST(ECHO_LD)\nAC_SUBST(RULE_CC)\nAC_SUBST(SHOW_CC)\nAC_SUBST(ECHO_CC)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_DISABLE_RPATH_HACK version: 2 updated: 2011/02/13 13:31:33\ndnl ---------------------\ndnl The rpath-hack makes it simpler to build programs, particularly with the\ndnl *BSD ports which may have essential libraries in unusual places.  But it\ndnl can interfere with building an executable for the base system.  Use this\ndnl option in that case.\nAC_DEFUN([CF_DISABLE_RPATH_HACK],\n[\nAC_MSG_CHECKING(if rpath-hack should be disabled)\nCF_ARG_DISABLE(rpath-hack,\n\t[  --disable-rpath-hack    don't add rpath options for additional libraries],\n\t[cf_disable_rpath_hack=yes],\n\t[cf_disable_rpath_hack=no])\nAC_MSG_RESULT($cf_disable_rpath_hack)\nif test \"$cf_disable_rpath_hack\" = no ; then\n\tCF_RPATH_HACK\nfi\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_ERRNO version: 5 updated: 1997/11/30 12:44:39\ndnl --------\ndnl Check if 'errno' is declared in <errno.h>\nAC_DEFUN([CF_ERRNO],\n[\nCF_CHECK_ERRNO(errno)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_FANCY_CURSES version: 6 updated: 2012/11/08 20:57:52\ndnl ---------------\nAC_DEFUN([CF_FANCY_CURSES],\n[\nAC_MSG_CHECKING(if curses supports fancy attributes)\nAC_CACHE_VAL(cf_cv_fancy_curses,[\n\tAC_TRY_LINK([\n#include <${cf_cv_ncurses_header:-curses.h}>\n],\n\t[attrset(A_UNDERLINE|A_BOLD|A_REVERSE);\n\t wattrset(stdscr, A_BLINK|A_DIM);\n\t attroff(A_BOLD);\n\t keypad(stdscr,TRUE);\n\t],\n\t[cf_cv_fancy_curses=yes],\n\t[cf_cv_fancy_curses=no])\n\t])\nAC_MSG_RESULT($cf_cv_fancy_curses)\ntest $cf_cv_fancy_curses = yes && AC_DEFINE(FANCY_CURSES,1,[Define to 1 if curses supports fancy attributes])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_FIND_IPV6_LIBS version: 8 updated: 2015/04/15 19:08:48\ndnl -----------------\ndnl Based on the IPV6 stack type, look for the corresponding library.\nAC_DEFUN([CF_FIND_IPV6_LIBS],[\nAC_REQUIRE([CF_FIND_IPV6_TYPE])\n\ncf_ipv6lib=none\ncf_ipv6dir=none\n\nAC_MSG_CHECKING(for IPv6 library if required)\ncase $cf_cv_ipv6type in\n(solaris)\n\t;;\n(inria)\n\t;;\n(kame)\n\tdnl http://www.kame.net/\n\tcf_ipv6lib=inet6\n\tcf_ipv6dir=v6\n\t;;\n(linux-glibc)\n\t;;\n(linux-libinet6)\n\tdnl http://www.v6.linux.or.jp/\n\tcf_ipv6lib=inet6\n\tcf_ipv6dir=inet6\n\t;;\n(toshiba)\n\tcf_ipv6lib=inet6\n\tcf_ipv6dir=v6\n\t;;\n(v6d)\n\tcf_ipv6lib=v6\n\tcf_ipv6dir=v6\n\t;;\n(zeta)\n\tcf_ipv6lib=inet6\n\tcf_ipv6dir=v6\n\t;;\nesac\nAC_MSG_RESULT($cf_ipv6lib)\n\nif test \"$cf_ipv6lib\" != \"none\"; then\n\n\tAC_TRY_LINK([\n#include <sys/types.h>\n#include <netdb.h>\n#include <netinet/in.h>\n#include <netinet/ip6.h>],\n\t[getaddrinfo(0, 0, 0, 0)],,[\n\tCF_HEADER_PATH(cf_search,$cf_ipv6dir)\n\tfor cf_incdir in $cf_search\n\tdo\n\t\tcf_header=$cf_incdir/netinet/ip6.h\n\t\tif test -f $cf_header\n\t\tthen\n\t\t\tCF_ADD_INCDIR($cf_incdir)\n\t\t\ttest -n \"$verbose\" && echo \"\t... found $cf_header\" 1>&AC_FD_MSG\n\t\t\tbreak\n\t\tfi\n\t\ttest -n \"$verbose\" && echo \"\t... tested $cf_header\" 1>&AC_FD_MSG\n\tdone\n\t])\n\n\tCF_FIND_LIBRARY([$cf_ipv6lib],[$cf_ipv6dir],[\n#include <sys/types.h>\n#include <netdb.h>\n#include <netinet/in.h>\n#include <netinet/ip6.h>],\n\t[getaddrinfo(0, 0, 0, 0)],\n\t[getaddrinfo],\n\tnoexit)\n\tif test $cf_found_library = no ; then\n\t\tAC_MSG_ERROR(\n[No $cf_ipv6lib library found, cannot continue.  You must fetch lib$cf_ipv6lib.a\nfrom an appropriate IPv6 kit and compile beforehand.])\n\tfi\nfi\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_FIND_IPV6_TYPE version: 6 updated: 2015/04/15 19:08:48\ndnl -----------------\nAC_DEFUN([CF_FIND_IPV6_TYPE],[\nAC_CACHE_CHECK(ipv6 stack type, cf_cv_ipv6type, [\ncf_cv_ipv6type=unknown\nfor i in solaris inria kame linux-glibc linux-libinet6 toshiba v6d zeta\ndo\n\tcase $i in\n\t(solaris)\n\t\tif test \"SunOS\" = \"`uname -s`\"\n\t\tthen\n\t\t  if test -f /usr/include/netinet/ip6.h\n\t\t  then\n\t\t\tcf_cv_ipv6type=$i\n\t\t  fi\n\t\tfi\n\t\t;;\n\t(inria)\n\t\tdnl http://www.kame.net/\n\t\tAC_EGREP_CPP(yes, [\n#include <netinet/in.h>\n#ifdef IPV6_INRIA_VERSION\nyes\n#endif],\t[cf_cv_ipv6type=$i])\n\t\t;;\n\t(kame)\n\t\tdnl http://www.kame.net/\n\t\tAC_EGREP_CPP(yes, [\n#include <netinet/in.h>\n#ifdef __KAME__\nyes\n#endif],\t[cf_cv_ipv6type=$i])\n\t\t;;\n\t(linux-glibc)\n\t\tdnl http://www.v6.linux.or.jp/\n\t\tAC_EGREP_CPP(yes, [\n#include <features.h>\n#if defined(__GLIBC__) && __GLIBC__ >= 2 && __GLIBC_MINOR__ >= 1\nyes\n#endif],\t[cf_cv_ipv6type=$i])\n\t\t;;\n\t(linux-libinet6)\n\t\tdnl http://www.v6.linux.or.jp/\n\t\tif test -d /usr/inet6\n\t\tthen\n\t\t\tcf_cv_ipv6type=$i\n\t\telif test -f /usr/include/netinet/ip6.h\n\t\tthen\n\t\t\tcf_cv_ipv6type=$i\n\t\tfi\n\t\t;;\n\t(toshiba)\n\t\tAC_EGREP_CPP(yes, [\n#include <sys/param.h>\n#ifdef _TOSHIBA_INET6\nyes\n#endif],\t[cf_cv_ipv6type=$i])\n\t\t;;\n\t(v6d)\n\t\tAC_EGREP_CPP(yes, [\n#include </usr/local/v6/include/sys/v6config.h>\n#ifdef __V6D__\nyes\n#endif],\t[cf_cv_ipv6type=$i])\n\t\t;;\n\t(zeta)\n\t\tAC_EGREP_CPP(yes, [\n#include <sys/param.h>\n#ifdef _ZETA_MINAMI_INET6\nyes\n#endif],\t[cf_cv_ipv6type=$i])\n\t\t;;\n\tesac\n\tif test \"$cf_cv_ipv6type\" != \"unknown\"; then\n\t\tbreak\n\tfi\ndone\n])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_FIND_LIBRARY version: 9 updated: 2008/03/23 14:48:54\ndnl ---------------\ndnl Look for a non-standard library, given parameters for AC_TRY_LINK.  We\ndnl prefer a standard location, and use -L options only if we do not find the\ndnl library in the standard library location(s).\ndnl\t$1 = library name\ndnl\t$2 = library class, usually the same as library name\ndnl\t$3 = includes\ndnl\t$4 = code fragment to compile/link\ndnl\t$5 = corresponding function-name\ndnl\t$6 = flag, nonnull if failure should not cause an error-exit\ndnl\ndnl Sets the variable \"$cf_libdir\" as a side-effect, so we can see if we had\ndnl to use a -L option.\nAC_DEFUN([CF_FIND_LIBRARY],\n[\n\teval 'cf_cv_have_lib_'$1'=no'\n\tcf_libdir=\"\"\n\tAC_CHECK_FUNC($5,\n\t\teval 'cf_cv_have_lib_'$1'=yes',[\n\t\tcf_save_LIBS=\"$LIBS\"\n\t\tAC_MSG_CHECKING(for $5 in -l$1)\n\t\tLIBS=\"-l$1 $LIBS\"\n\t\tAC_TRY_LINK([$3],[$4],\n\t\t\t[AC_MSG_RESULT(yes)\n\t\t\t eval 'cf_cv_have_lib_'$1'=yes'\n\t\t\t],\n\t\t\t[AC_MSG_RESULT(no)\n\t\t\tCF_LIBRARY_PATH(cf_search,$2)\n\t\t\tfor cf_libdir in $cf_search\n\t\t\tdo\n\t\t\t\tAC_MSG_CHECKING(for -l$1 in $cf_libdir)\n\t\t\t\tLIBS=\"-L$cf_libdir -l$1 $cf_save_LIBS\"\n\t\t\t\tAC_TRY_LINK([$3],[$4],\n\t\t\t\t\t[AC_MSG_RESULT(yes)\n\t\t\t \t\t eval 'cf_cv_have_lib_'$1'=yes'\n\t\t\t\t\t break],\n\t\t\t\t\t[AC_MSG_RESULT(no)\n\t\t\t\t\t LIBS=\"$cf_save_LIBS\"])\n\t\t\tdone\n\t\t\t])\n\t\t])\neval 'cf_found_library=[$]cf_cv_have_lib_'$1\nifelse($6,,[\nif test $cf_found_library = no ; then\n\tAC_MSG_ERROR(Cannot link $1 library)\nfi\n])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_FIND_LINKAGE version: 20 updated: 2015/04/18 08:56:57\ndnl ---------------\ndnl Find a library (specifically the linkage used in the code fragment),\ndnl searching for it if it is not already in the library path.\ndnl See also CF_ADD_SEARCHPATH.\ndnl\ndnl Parameters (4-on are optional):\ndnl     $1 = headers for library entrypoint\ndnl     $2 = code fragment for library entrypoint\ndnl     $3 = the library name without the \"-l\" option or \".so\" suffix.\ndnl     $4 = action to perform if successful (default: update CPPFLAGS, etc)\ndnl     $5 = action to perform if not successful\ndnl     $6 = module name, if not the same as the library name\ndnl     $7 = extra libraries\ndnl\ndnl Sets these variables:\ndnl     $cf_cv_find_linkage_$3 - yes/no according to whether linkage is found\ndnl     $cf_cv_header_path_$3 - include-directory if needed\ndnl     $cf_cv_library_path_$3 - library-directory if needed\ndnl     $cf_cv_library_file_$3 - library-file if needed, e.g., -l$3\nAC_DEFUN([CF_FIND_LINKAGE],[\n\n# If the linkage is not already in the $CPPFLAGS/$LDFLAGS configuration, these\n# will be set on completion of the AC_TRY_LINK below.\ncf_cv_header_path_$3=\ncf_cv_library_path_$3=\n\nCF_MSG_LOG([Starting [FIND_LINKAGE]($3,$6)])\n\ncf_save_LIBS=\"$LIBS\"\n\nAC_TRY_LINK([$1],[$2],[\n\tcf_cv_find_linkage_$3=yes\n\tcf_cv_header_path_$3=/usr/include\n\tcf_cv_library_path_$3=/usr/lib\n],[\n\nLIBS=\"-l$3 $7 $cf_save_LIBS\"\n\nAC_TRY_LINK([$1],[$2],[\n\tcf_cv_find_linkage_$3=yes\n\tcf_cv_header_path_$3=/usr/include\n\tcf_cv_library_path_$3=/usr/lib\n\tcf_cv_library_file_$3=\"-l$3\"\n],[\n\tcf_cv_find_linkage_$3=no\n\tLIBS=\"$cf_save_LIBS\"\n\n\tCF_VERBOSE(find linkage for $3 library)\n\tCF_MSG_LOG([Searching for headers in [FIND_LINKAGE]($3,$6)])\n\n\tcf_save_CPPFLAGS=\"$CPPFLAGS\"\n\tcf_test_CPPFLAGS=\"$CPPFLAGS\"\n\n\tCF_HEADER_PATH(cf_search,ifelse([$6],,[$3],[$6]))\n\tfor cf_cv_header_path_$3 in $cf_search\n\tdo\n\t\tif test -d $cf_cv_header_path_$3 ; then\n\t\t\tCF_VERBOSE(... testing $cf_cv_header_path_$3)\n\t\t\tCPPFLAGS=\"$cf_save_CPPFLAGS -I$cf_cv_header_path_$3\"\n\t\t\tAC_TRY_COMPILE([$1],[$2],[\n\t\t\t\tCF_VERBOSE(... found $3 headers in $cf_cv_header_path_$3)\n\t\t\t\tcf_cv_find_linkage_$3=maybe\n\t\t\t\tcf_test_CPPFLAGS=\"$CPPFLAGS\"\n\t\t\t\tbreak],[\n\t\t\t\tCPPFLAGS=\"$cf_save_CPPFLAGS\"\n\t\t\t\t])\n\t\tfi\n\tdone\n\n\tif test \"$cf_cv_find_linkage_$3\" = maybe ; then\n\n\t\tCF_MSG_LOG([Searching for $3 library in [FIND_LINKAGE]($3,$6)])\n\n\t\tcf_save_LIBS=\"$LIBS\"\n\t\tcf_save_LDFLAGS=\"$LDFLAGS\"\n\n\t\tifelse([$6],,,[\n\t\tCPPFLAGS=\"$cf_test_CPPFLAGS\"\n\t\tLIBS=\"-l$3 $7 $cf_save_LIBS\"\n\t\tAC_TRY_LINK([$1],[$2],[\n\t\t\tCF_VERBOSE(... found $3 library in system)\n\t\t\tcf_cv_find_linkage_$3=yes])\n\t\t\tCPPFLAGS=\"$cf_save_CPPFLAGS\"\n\t\t\tLIBS=\"$cf_save_LIBS\"\n\t\t\t])\n\n\t\tif test \"$cf_cv_find_linkage_$3\" != yes ; then\n\t\t\tCF_LIBRARY_PATH(cf_search,$3)\n\t\t\tfor cf_cv_library_path_$3 in $cf_search\n\t\t\tdo\n\t\t\t\tif test -d $cf_cv_library_path_$3 ; then\n\t\t\t\t\tCF_VERBOSE(... testing $cf_cv_library_path_$3)\n\t\t\t\t\tCPPFLAGS=\"$cf_test_CPPFLAGS\"\n\t\t\t\t\tLIBS=\"-l$3 $7 $cf_save_LIBS\"\n\t\t\t\t\tLDFLAGS=\"$cf_save_LDFLAGS -L$cf_cv_library_path_$3\"\n\t\t\t\t\tAC_TRY_LINK([$1],[$2],[\n\t\t\t\t\tCF_VERBOSE(... found $3 library in $cf_cv_library_path_$3)\n\t\t\t\t\tcf_cv_find_linkage_$3=yes\n\t\t\t\t\tcf_cv_library_file_$3=\"-l$3\"\n\t\t\t\t\tbreak],[\n\t\t\t\t\tCPPFLAGS=\"$cf_save_CPPFLAGS\"\n\t\t\t\t\tLIBS=\"$cf_save_LIBS\"\n\t\t\t\t\tLDFLAGS=\"$cf_save_LDFLAGS\"\n\t\t\t\t\t])\n\t\t\t\tfi\n\t\t\tdone\n\t\t\tCPPFLAGS=\"$cf_save_CPPFLAGS\"\n\t\t\tLDFLAGS=\"$cf_save_LDFLAGS\"\n\t\tfi\n\n\telse\n\t\tcf_cv_find_linkage_$3=no\n\tfi\n\t],$7)\n])\n\nLIBS=\"$cf_save_LIBS\"\n\nif test \"$cf_cv_find_linkage_$3\" = yes ; then\nifelse([$4],,[\n\tCF_ADD_INCDIR($cf_cv_header_path_$3)\n\tCF_ADD_LIBDIR($cf_cv_library_path_$3)\n\tCF_ADD_LIB($3)\n],[$4])\nelse\nifelse([$5],,AC_MSG_WARN(Cannot find $3 library),[$5])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_FIONBIO version: 3 updated: 2012/11/08 20:57:52\ndnl ----------\ndnl Check for availability of fcntl versus ioctl(,FIONBIO,).  Lynx uses this\ndnl for Sequent (ptx), and it is needed for OS/2 EMX.\nAC_DEFUN([CF_FIONBIO],\n[\nAC_CACHE_CHECK(if we should use fcntl or ioctl,cf_cv_fionbio,[\nAC_TRY_LINK([\n#include <sys/types.h>\n#include <sys/ioctl.h>\n],[\n        int ret = ioctl(0, FIONBIO, (char *)0);\n\t],[cf_cv_fionbio=ioctl],[\nAC_TRY_LINK([\n#include <sys/types.h>\n#if HAVE_FCNTL_H\n#include <fcntl.h>\n#else\n#if HAVE_SYS_FCNTL_H\n#include <sys/fcntl.h>\n#endif\n#endif],[\n        int ret = fcntl(0, F_SETFL, O_NONBLOCK);\n\t],\n\t[cf_cv_fionbio=fcntl],\n\t[cf_cv_fionbio=unknown])])\n])\ntest \"$cf_cv_fionbio\" = \"fcntl\" && AC_DEFINE(USE_FCNTL,1,[Define to 1 if we should use fcntl])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_FUNC_CURSES_VERSION version: 7 updated: 2017/05/10 18:31:29\ndnl ----------------------\ndnl Solaris has a data item 'curses_version', which confuses AC_CHECK_FUNCS.\ndnl It's a character string \"SVR4\", not documented.\nAC_DEFUN([CF_FUNC_CURSES_VERSION],\n[\nAC_CACHE_CHECK(for function curses_version, cf_cv_func_curses_version,[\nAC_TRY_RUN([\n#include <${cf_cv_ncurses_header:-curses.h}>\nint main(void)\n{\n\tchar temp[1024];\n\tsprintf(temp, \"%s\\n\", curses_version());\n\t${cf_cv_main_return:-return}(0);\n}]\n,[cf_cv_func_curses_version=yes]\n,[cf_cv_func_curses_version=no]\n,[cf_cv_func_curses_version=unknown])\nrm -f core])\ntest \"$cf_cv_func_curses_version\" = yes && AC_DEFINE(HAVE_CURSES_VERSION,1,[Define to 1 if we have curses_version function])\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_FUNC_GETADDRINFO version: 9 updated: 2017/05/10 18:31:29\ndnl -------------------\ndnl Look for a working version of getaddrinfo(), for IPV6 support.\nAC_DEFUN([CF_FUNC_GETADDRINFO],[\nAC_CACHE_CHECK(working getaddrinfo, cf_cv_getaddrinfo,[\nAC_TRY_RUN([\n#include <sys/types.h>\n#include <netdb.h>\n#include <string.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n\n#define expect(a,b) if (strcmp(a,b) != 0) goto bad\n\nint main(void)\n{\n   int passive, gaierr, inet4 = 0, inet6 = 0;\n   struct addrinfo hints, *ai, *aitop;\n   char straddr[INET6_ADDRSTRLEN], strport[16];\n\n   for (passive = 0; passive <= 1; passive++) {\n     memset(&hints, 0, sizeof(hints));\n     hints.ai_family = AF_UNSPEC;\n     hints.ai_flags = passive ? AI_PASSIVE : 0;\n     hints.ai_socktype = SOCK_STREAM;\n     if ((gaierr = getaddrinfo(NULL, \"54321\", &hints, &aitop)) != 0) {\n       (void)gai_strerror(gaierr);\n       goto bad;\n     }\n     for (ai = aitop; ai; ai = ai->ai_next) {\n       if (ai->ai_addr == NULL ||\n           ai->ai_addrlen == 0 ||\n           getnameinfo(ai->ai_addr, ai->ai_addrlen,\n                       straddr, sizeof(straddr), strport, sizeof(strport),\n                       NI_NUMERICHOST|NI_NUMERICSERV) != 0) {\n         goto bad;\n       }\n       switch (ai->ai_family) {\n       case AF_INET:\n         expect(strport, \"54321\");\n         if (passive) {\n           expect(straddr, \"0.0.0.0\");\n         } else {\n           expect(straddr, \"127.0.0.1\");\n         }\n         inet4++;\n         break;\n       case AF_INET6:\n         expect(strport, \"54321\");\n         if (passive) {\n           expect(straddr, \"::\");\n         } else {\n           expect(straddr, \"::1\");\n         }\n         inet6++;\n         break;\n       case AF_UNSPEC:\n         goto bad;\n         break;\n       default:\n         /* another family support? */\n         break;\n       }\n     }\n   }\n\n   if (!(inet4 == 0 || inet4 == 2))\n     goto bad;\n   if (!(inet6 == 0 || inet6 == 2))\n     goto bad;\n\n   if (aitop)\n     freeaddrinfo(aitop);\n   ${cf_cv_main_return:-return}(0);\n\n  bad:\n   if (aitop)\n     freeaddrinfo(aitop);\n   ${cf_cv_main_return:-return}(1);\n}\n],\n[cf_cv_getaddrinfo=yes],\n[cf_cv_getaddrinfo=no],\n[cf_cv_getaddrinfo=unknown])\n])\nif test \"$cf_cv_getaddrinfo\" = yes ; then\n\tAC_DEFINE(HAVE_GAI_STRERROR,1,[Define to 1 if we have gai_strerror function])\n\tAC_DEFINE(HAVE_GETADDRINFO,1,[Define to 1 if we have getaddrinfo function])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_FUNC_LSTAT version: 3 updated: 2012/11/08 20:57:52\ndnl -------------\ndnl A conventional existence-check for 'lstat' won't work with the Linux\ndnl version of gcc 2.7.0, since the symbol is defined only within <sys/stat.h>\ndnl as an inline function.\ndnl\ndnl So much for portability.\nAC_DEFUN([CF_FUNC_LSTAT],\n[\nAC_MSG_CHECKING(for lstat)\nAC_CACHE_VAL(ac_cv_func_lstat,[\nAC_TRY_LINK([\n#include <sys/types.h>\n#include <sys/stat.h>],\n\t[lstat(\".\", (struct stat *)0)],\n\t[ac_cv_func_lstat=yes],\n\t[ac_cv_func_lstat=no])\n\t])\nAC_MSG_RESULT($ac_cv_func_lstat )\nif test $ac_cv_func_lstat = yes; then\n\tAC_DEFINE(HAVE_LSTAT,1,[Define to 1 if we have lstat])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_FUNC_SIGACTION version: 3 updated: 2012/11/08 20:57:52\ndnl -----------------\ndnl Check if we have the sigaction function and related structures.\nAC_DEFUN([CF_FUNC_SIGACTION],[\nAC_CACHE_CHECK(for sigaction and structs,cf_cv_func_sigaction,[\nAC_TRY_LINK([\n#include <sys/types.h>\n#include <signal.h>],\n\t[struct sigaction act;\n\tact.sa_handler = SIG_DFL;\n#ifdef SA_RESTART\n\tact.sa_flags |= SA_RESTART;\n#endif /* SA_RESTART */\n\tsigaction(1, &act, 0);\n\t],\n\t[cf_cv_func_sigaction=yes],\n\t[cf_cv_func_sigaction=no])\n])\ntest \"$cf_cv_func_sigaction\" = yes && AC_DEFINE(HAVE_SIGACTION,1,[Define to 1 if we have sigaction])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_FUNC_WAIT version: 3 updated: 2012/10/06 08:57:51\ndnl ------------\ndnl Test for the presence of <sys/wait.h>, 'union wait', arg-type of 'wait()'\ndnl and/or 'waitpid()'.\ndnl\ndnl Note that we cannot simply grep for 'union wait' in the wait.h file,\ndnl because some Posix systems turn this on only when a BSD variable is\ndnl defined.\ndnl\ndnl I don't use AC_HEADER_SYS_WAIT, because it defines HAVE_SYS_WAIT_H, which\ndnl would conflict with an attempt to test that header directly.\ndnl\nAC_DEFUN([CF_FUNC_WAIT],\n[\nAC_REQUIRE([CF_UNION_WAIT])\nif test $cf_cv_type_unionwait = yes; then\n\n\tAC_MSG_CHECKING(if union wait can be used as wait-arg)\n\tAC_CACHE_VAL(cf_cv_arg_union_wait,[\n\t\tAC_TRY_COMPILE($cf_wait_headers,\n \t\t\t[union wait x; wait(&x)],\n\t\t\t[cf_cv_arg_union_wait=yes],\n\t\t\t[cf_cv_arg_union_wait=no])\n\t\t])\n\tAC_MSG_RESULT($cf_cv_arg_union_wait)\n\ttest $cf_cv_arg_union_wait = yes && AC_DEFINE(WAIT_USES_UNION,1,[Define to 1 if wait() uses a union parameter])\n\n\tAC_MSG_CHECKING(if union wait can be used as waitpid-arg)\n\tAC_CACHE_VAL(cf_cv_arg_union_waitpid,[\n\t\tAC_TRY_COMPILE($cf_wait_headers,\n \t\t\t[union wait x; waitpid(0, &x, 0)],\n\t\t\t[cf_cv_arg_union_waitpid=yes],\n\t\t\t[cf_cv_arg_union_waitpid=no])\n\t\t])\n\tAC_MSG_RESULT($cf_cv_arg_union_waitpid)\n\ttest $cf_cv_arg_union_waitpid = yes && AC_DEFINE(WAITPID_USES_UNION,1,[Define to 1 if waitpid() uses a union parameter])\n\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GCC_ATTRIBUTES version: 17 updated: 2015/04/12 15:39:00\ndnl -----------------\ndnl Test for availability of useful gcc __attribute__ directives to quiet\ndnl compiler warnings.  Though useful, not all are supported -- and contrary\ndnl to documentation, unrecognized directives cause older compilers to barf.\nAC_DEFUN([CF_GCC_ATTRIBUTES],\n[\nif test \"$GCC\" = yes\nthen\ncat > conftest.i <<EOF\n#ifndef GCC_PRINTF\n#define GCC_PRINTF 0\n#endif\n#ifndef GCC_SCANF\n#define GCC_SCANF 0\n#endif\n#ifndef GCC_NORETURN\n#define GCC_NORETURN /* nothing */\n#endif\n#ifndef GCC_UNUSED\n#define GCC_UNUSED /* nothing */\n#endif\nEOF\nif test \"$GCC\" = yes\nthen\n\tAC_CHECKING([for $CC __attribute__ directives])\ncat > conftest.$ac_ext <<EOF\n#line __oline__ \"${as_me:-configure}\"\n#include \"confdefs.h\"\n#include \"conftest.h\"\n#include \"conftest.i\"\n#if\tGCC_PRINTF\n#define GCC_PRINTFLIKE(fmt,var) __attribute__((format(printf,fmt,var)))\n#else\n#define GCC_PRINTFLIKE(fmt,var) /*nothing*/\n#endif\n#if\tGCC_SCANF\n#define GCC_SCANFLIKE(fmt,var)  __attribute__((format(scanf,fmt,var)))\n#else\n#define GCC_SCANFLIKE(fmt,var)  /*nothing*/\n#endif\nextern void wow(char *,...) GCC_SCANFLIKE(1,2);\nextern void oops(char *,...) GCC_PRINTFLIKE(1,2) GCC_NORETURN;\nextern void foo(void) GCC_NORETURN;\nint main(int argc GCC_UNUSED, char *argv[[]] GCC_UNUSED) { return 0; }\nEOF\n\tcf_printf_attribute=no\n\tcf_scanf_attribute=no\n\tfor cf_attribute in scanf printf unused noreturn\n\tdo\n\t\tCF_UPPER(cf_ATTRIBUTE,$cf_attribute)\n\t\tcf_directive=\"__attribute__(($cf_attribute))\"\n\t\techo \"checking for $CC $cf_directive\" 1>&AC_FD_CC\n\n\t\tcase $cf_attribute in\n\t\t(printf)\n\t\t\tcf_printf_attribute=yes\n\t\t\tcat >conftest.h <<EOF\n#define GCC_$cf_ATTRIBUTE 1\nEOF\n\t\t\t;;\n\t\t(scanf)\n\t\t\tcf_scanf_attribute=yes\n\t\t\tcat >conftest.h <<EOF\n#define GCC_$cf_ATTRIBUTE 1\nEOF\n\t\t\t;;\n\t\t(*)\n\t\t\tcat >conftest.h <<EOF\n#define GCC_$cf_ATTRIBUTE $cf_directive\nEOF\n\t\t\t;;\n\t\tesac\n\n\t\tif AC_TRY_EVAL(ac_compile); then\n\t\t\ttest -n \"$verbose\" && AC_MSG_RESULT(... $cf_attribute)\n\t\t\tcat conftest.h >>confdefs.h\n\t\t\tcase $cf_attribute in\n\t\t\t(noreturn)\n\t\t\t\tAC_DEFINE_UNQUOTED(GCC_NORETURN,$cf_directive,[Define to noreturn-attribute for gcc])\n\t\t\t\t;;\n\t\t\t(printf)\n\t\t\t\tcf_value='/* nothing */'\n\t\t\t\tif test \"$cf_printf_attribute\" != no ; then\n\t\t\t\t\tcf_value='__attribute__((format(printf,fmt,var)))'\n\t\t\t\t\tAC_DEFINE(GCC_PRINTF,1,[Define to 1 if the compiler supports gcc-like printf attribute.])\n\t\t\t\tfi\n\t\t\t\tAC_DEFINE_UNQUOTED(GCC_PRINTFLIKE(fmt,var),$cf_value,[Define to printf-attribute for gcc])\n\t\t\t\t;;\n\t\t\t(scanf)\n\t\t\t\tcf_value='/* nothing */'\n\t\t\t\tif test \"$cf_scanf_attribute\" != no ; then\n\t\t\t\t\tcf_value='__attribute__((format(scanf,fmt,var)))'\n\t\t\t\t\tAC_DEFINE(GCC_SCANF,1,[Define to 1 if the compiler supports gcc-like scanf attribute.])\n\t\t\t\tfi\n\t\t\t\tAC_DEFINE_UNQUOTED(GCC_SCANFLIKE(fmt,var),$cf_value,[Define to sscanf-attribute for gcc])\n\t\t\t\t;;\n\t\t\t(unused)\n\t\t\t\tAC_DEFINE_UNQUOTED(GCC_UNUSED,$cf_directive,[Define to unused-attribute for gcc])\n\t\t\t\t;;\n\t\t\tesac\n\t\tfi\n\tdone\nelse\n\tfgrep define conftest.i >>confdefs.h\nfi\nrm -rf conftest*\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GCC_VERSION version: 7 updated: 2012/10/18 06:46:33\ndnl --------------\ndnl Find version of gcc\nAC_DEFUN([CF_GCC_VERSION],[\nAC_REQUIRE([AC_PROG_CC])\nGCC_VERSION=none\nif test \"$GCC\" = yes ; then\n\tAC_MSG_CHECKING(version of $CC)\n\tGCC_VERSION=\"`${CC} --version 2>/dev/null | sed -e '2,$d' -e 's/^.*(GCC[[^)]]*) //' -e 's/^.*(Debian[[^)]]*) //' -e 's/^[[^0-9.]]*//' -e 's/[[^0-9.]].*//'`\"\n\ttest -z \"$GCC_VERSION\" && GCC_VERSION=unknown\n\tAC_MSG_RESULT($GCC_VERSION)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GCC_WARNINGS version: 32 updated: 2015/04/12 15:39:00\ndnl ---------------\ndnl Check if the compiler supports useful warning options.  There's a few that\ndnl we don't use, simply because they're too noisy:\ndnl\ndnl\t-Wconversion (useful in older versions of gcc, but not in gcc 2.7.x)\ndnl\t-Wredundant-decls (system headers make this too noisy)\ndnl\t-Wtraditional (combines too many unrelated messages, only a few useful)\ndnl\t-Wwrite-strings (too noisy, but should review occasionally).  This\ndnl\t\tis enabled for ncurses using \"--enable-const\".\ndnl\t-pedantic\ndnl\ndnl Parameter:\ndnl\t$1 is an optional list of gcc warning flags that a particular\ndnl\t\tapplication might want to use, e.g., \"no-unused\" for\ndnl\t\t-Wno-unused\ndnl Special:\ndnl\tIf $with_ext_const is \"yes\", add a check for -Wwrite-strings\ndnl\nAC_DEFUN([CF_GCC_WARNINGS],\n[\nAC_REQUIRE([CF_GCC_VERSION])\nCF_INTEL_COMPILER(GCC,INTEL_COMPILER,CFLAGS)\nCF_CLANG_COMPILER(GCC,CLANG_COMPILER,CFLAGS)\n\ncat > conftest.$ac_ext <<EOF\n#line __oline__ \"${as_me:-configure}\"\nint main(int argc, char *argv[[]]) { return (argv[[argc-1]] == 0) ; }\nEOF\n\nif test \"$INTEL_COMPILER\" = yes\nthen\n# The \"-wdXXX\" options suppress warnings:\n# remark #1419: external declaration in primary source file\n# remark #1683: explicit conversion of a 64-bit integral type to a smaller integral type (potential portability problem)\n# remark #1684: conversion from pointer to same-sized integral type (potential portability problem)\n# remark #193: zero used for undefined preprocessing identifier\n# remark #593: variable \"curs_sb_left_arrow\" was set but never used\n# remark #810: conversion from \"int\" to \"Dimension={unsigned short}\" may lose significant bits\n# remark #869: parameter \"tw\" was never referenced\n# remark #981: operands are evaluated in unspecified order\n# warning #279: controlling expression is constant\n\n\tAC_CHECKING([for $CC warning options])\n\tcf_save_CFLAGS=\"$CFLAGS\"\n\tEXTRA_CFLAGS=\"-Wall\"\n\tfor cf_opt in \\\n\t\twd1419 \\\n\t\twd1683 \\\n\t\twd1684 \\\n\t\twd193 \\\n\t\twd593 \\\n\t\twd279 \\\n\t\twd810 \\\n\t\twd869 \\\n\t\twd981\n\tdo\n\t\tCFLAGS=\"$cf_save_CFLAGS $EXTRA_CFLAGS -$cf_opt\"\n\t\tif AC_TRY_EVAL(ac_compile); then\n\t\t\ttest -n \"$verbose\" && AC_MSG_RESULT(... -$cf_opt)\n\t\t\tEXTRA_CFLAGS=\"$EXTRA_CFLAGS -$cf_opt\"\n\t\tfi\n\tdone\n\tCFLAGS=\"$cf_save_CFLAGS\"\n\nelif test \"$GCC\" = yes\nthen\n\tAC_CHECKING([for $CC warning options])\n\tcf_save_CFLAGS=\"$CFLAGS\"\n\tEXTRA_CFLAGS=\n\tcf_warn_CONST=\"\"\n\ttest \"$with_ext_const\" = yes && cf_warn_CONST=\"Wwrite-strings\"\n\tcf_gcc_warnings=\"Wignored-qualifiers Wlogical-op Wvarargs\"\n\ttest \"x$CLANG_COMPILER\" = xyes && cf_gcc_warnings=\n\tfor cf_opt in W Wall \\\n\t\tWbad-function-cast \\\n\t\tWcast-align \\\n\t\tWcast-qual \\\n\t\tWdeclaration-after-statement \\\n\t\tWextra \\\n\t\tWinline \\\n\t\tWmissing-declarations \\\n\t\tWmissing-prototypes \\\n\t\tWnested-externs \\\n\t\tWpointer-arith \\\n\t\tWshadow \\\n\t\tWstrict-prototypes \\\n\t\tWundef $cf_gcc_warnings $cf_warn_CONST $1\n\tdo\n\t\tCFLAGS=\"$cf_save_CFLAGS $EXTRA_CFLAGS -$cf_opt\"\n\t\tif AC_TRY_EVAL(ac_compile); then\n\t\t\ttest -n \"$verbose\" && AC_MSG_RESULT(... -$cf_opt)\n\t\t\tcase $cf_opt in\n\t\t\t(Wcast-qual)\n\t\t\t\tCPPFLAGS=\"$CPPFLAGS -DXTSTRINGDEFINES\"\n\t\t\t\t;;\n\t\t\t(Winline)\n\t\t\t\tcase $GCC_VERSION in\n\t\t\t\t([[34]].*)\n\t\t\t\t\tCF_VERBOSE(feature is broken in gcc $GCC_VERSION)\n\t\t\t\t\tcontinue;;\n\t\t\t\tesac\n\t\t\t\t;;\n\t\t\t(Wpointer-arith)\n\t\t\t\tcase $GCC_VERSION in\n\t\t\t\t([[12]].*)\n\t\t\t\t\tCF_VERBOSE(feature is broken in gcc $GCC_VERSION)\n\t\t\t\t\tcontinue;;\n\t\t\t\tesac\n\t\t\t\t;;\n\t\t\tesac\n\t\t\tEXTRA_CFLAGS=\"$EXTRA_CFLAGS -$cf_opt\"\n\t\tfi\n\tdone\n\tCFLAGS=\"$cf_save_CFLAGS\"\nfi\nrm -rf conftest*\n\nAC_SUBST(EXTRA_CFLAGS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GNUTLS version: 25 updated: 2016/04/15 20:48:40\ndnl ---------\ndnl Check for gnutls library (TLS \"is\" SSL)\ndnl $1 = the [optional] directory in which the library may be found\ndnl $2 = the [optional] stub file to provide OpenSSL compatibility\nAC_DEFUN([CF_GNUTLS],[\n\tAC_REQUIRE([CF_PKG_CONFIG])\n\tcf_cv_have_gnutls=no\n\tcf_cv_pkg_config_ssl=no\n\n\tCF_ADD_OPTIONAL_PATH($1, [ssl library])\n\n\tcf_pkg_gnutls=none\n\tif test \"x$PKG_CONFIG\" != xnone; then\n\t\tcf_pkg_gnutls=ifelse([$2],,gnutls-openssl,gnutls)\n\t\tcase $1 in\n\t\t(no)\n\t\t\t;;\n\t\t(yes) # if no explicit directory given, try pkg-config\n\t\t\tCF_VERBOSE(checking pkg-config for $cf_pkg_gnutls)\n\t\t\tif \"$PKG_CONFIG\" --exists $cf_pkg_gnutls ; then\n\t\t\t\tCF_VERBOSE(... found $cf_pkg_gnutls in pkg-config)\n\t\t\t\tcf_cv_have_gnutls=yes\n\t\t\t\tcf_cv_pkg_config_ssl=yes\n\n\t\t\t\tcf_cflags_ssl=`$PKG_CONFIG --cflags $cf_pkg_gnutls`\n\t\t\t\tcf_libs_ssl=`$PKG_CONFIG --libs $cf_pkg_gnutls`\n\n\t\t\t\tif test -n \"$cf_cflags_ssl\" ; then\n\t\t\t\t\tcase \"$cf_cflags_ssl\" in\n\t\t\t\t\t(*-I*)\n\t\t\t\t\t\tcf_cv_header_path_gnutls=`echo \"$cf_cflags_ssl\" | sed -e 's/^.*-I//' -e 's/ .*//'`\n\t\t\t\t\t\t;;\n\t\t\t\t\t(*)\n\t\t\t\t\t\tcf_cv_header_path_gnutls=/usr/include\n\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\tif test -d $cf_cv_header_path_gnutls/gnutls ; then\n\t\t\t\t\t\tcf_cv_header_path_gnutls=$cf_cv_header_path_gnutls/gnutls\n\t\t\t\t\tfi\n\t\t\t\t\tCF_ADD_CFLAGS($cf_cflags_ssl)\n\t\t\t\tfi\n\n\t\t\t\tif test -n \"$cf_libs_ssl\" ; then\n\t\t\t\t\tcase \"x$cf_libs_ssl\" in\n\t\t\t\t\t(*-L*)\n\t\t\t\t\t\tcf_cv_library_path_gnutls=`echo \"$cf_libs_ssl\" | sed -e 's/^.*-L//' -e 's/ .*//'`\n\t\t\t\t\t\t;;\n\t\t\t\t\t(*)\n\t\t\t\t\t\tcf_cv_library_path_gnutls=/usr/lib\n\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\tCF_VERBOSE(adding $cf_libs_ssl to LIBS)\n\t\t\t\t\tCF_ADD_LIBS($cf_libs_ssl)\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tCF_VERBOSE(... did not find $cf_pkg_gnutls in pkg-config)\n\t\t\t\tcf_pkg_gnutls=none\n\t\t\tfi\n\t\t\t;;\n\t\tesac\n\tfi\n\n\tifelse([$2],,\n\t\t[AC_DEFINE(USE_GNUTLS_INCL,1,[Define to 1 if we should include gnutls headers])],\n\t\t[AC_DEFINE(USE_GNUTLS_FUNCS,1,[Define to 1 if we should use gnutls functions])])\n\n\tif test \"$cf_cv_have_gnutls\" = no ; then\n\t\tcf_gnutls_CPPFLAGS=$CPPFLAGS\n\n\t\tCF_FIND_LINKAGE(CF__SSL_HEAD,\n\t\t\tCF__SSL_BODY,\n\t\t\tgnutls,\n\t\t\tcf_cv_have_gnutls=yes,\n\t\t\tcf_cv_have_gnutls=no,\n\t\t\t,\n\t\t\tifelse([$2],,[-lgnutls-openssl]))\n\n\t\tCPPFLAGS=$cf_gnutls_CPPFLAGS\n\tfi\n\n\tif test \"$cf_cv_have_gnutls\" = yes ; then\n\t\tif test -n \"$cf_cv_header_path_gnutls\" ; then\n\t\t\tAC_DEFINE(USE_SSL)\n\t\t\tcase $cf_cv_header_path_gnutls in\n\t\t\t(/usr/include/gnutls)\n\t\t\t\t;;\n\t\t\t(*)\n\t\t\t\tCF_ADD_INCDIR($cf_cv_header_path_gnutls)\n\t\t\t\t;;\n\t\t\tesac\n\t\tfi\n\t\tif test -n \"$cf_cv_library_path_gnutls\" ; then\n\t\t\tCF_ADD_LIBDIR($cf_cv_library_path_gnutls)\n\t\tfi\n\t\tCF_ADD_LIBS(-lgnutls)\n\t\tAC_CHECK_FUNCS(gnutls_protocol_set_priority)\n\t\tAC_CHECK_FUNC(gnutls_rnd,\n\t\t\t\t[AC_DEFINE(HAVE_GNUTLS_RND)],\n\t\t\t\t[CF_ADD_LIBS(-lgcrypt)])\n\n\t\tifelse([$2],,\n\t\t\t[if test \"$cf_pkg_gnutls\" = none ; then\n\t\t\t\tAC_CHECK_LIB(gnutls-openssl,SSL_connect,\n\t\t\t\t\t[CF_ADD_LIBS(-lgnutls-openssl)],\n\t\t\t\t\t[AC_CHECK_LIB(gnutls-extra,SSL_connect,\n\t\t\t\t\t[CF_ADD_LIBS(-lgnutls-extra)],\n\t\t\t\t\t[AC_MSG_ERROR(cannot find gnutls openssl functions)])])\n\t\t\tfi],[EXTRA_OBJS=\"$EXTRA_OBJS $2\"])\n\n\t\tCF_CHECK_SSL_X509\n\tfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GNU_SOURCE version: 7 updated: 2016/08/05 05:15:37\ndnl -------------\ndnl Check if we must define _GNU_SOURCE to get a reasonable value for\ndnl _XOPEN_SOURCE, upon which many POSIX definitions depend.  This is a defect\ndnl (or misfeature) of glibc2, which breaks portability of many applications,\ndnl since it is interwoven with GNU extensions.\ndnl\ndnl Well, yes we could work around it...\nAC_DEFUN([CF_GNU_SOURCE],\n[\nAC_CACHE_CHECK(if we must define _GNU_SOURCE,cf_cv_gnu_source,[\nAC_TRY_COMPILE([#include <sys/types.h>],[\n#ifndef _XOPEN_SOURCE\nmake an error\n#endif],\n\t[cf_cv_gnu_source=no],\n\t[cf_save=\"$CPPFLAGS\"\n\t CPPFLAGS=\"$CPPFLAGS -D_GNU_SOURCE\"\n\t AC_TRY_COMPILE([#include <sys/types.h>],[\n#ifdef _XOPEN_SOURCE\nmake an error\n#endif],\n\t[cf_cv_gnu_source=no],\n\t[cf_cv_gnu_source=yes])\n\tCPPFLAGS=\"$cf_save\"\n\t])\n])\n\nif test \"$cf_cv_gnu_source\" = yes\nthen\nAC_CACHE_CHECK(if we should also define _DEFAULT_SOURCE,cf_cv_default_source,[\nCPPFLAGS=\"$CPPFLAGS -D_GNU_SOURCE\"\n\tAC_TRY_COMPILE([#include <sys/types.h>],[\n#ifdef _DEFAULT_SOURCE\nmake an error\n#endif],\n\t\t[cf_cv_default_source=no],\n\t\t[cf_cv_default_source=yes])\n\t])\ntest \"$cf_cv_default_source\" = yes && CPPFLAGS=\"$CPPFLAGS -D_DEFAULT_SOURCE\"\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_HEADER_PATH version: 13 updated: 2015/04/15 19:08:48\ndnl --------------\ndnl Construct a search-list of directories for a nonstandard header-file\ndnl\ndnl Parameters\ndnl\t$1 = the variable to return as result\ndnl\t$2 = the package name\nAC_DEFUN([CF_HEADER_PATH],\n[\n$1=\n\n# collect the current set of include-directories from compiler flags\ncf_header_path_list=\"\"\nif test -n \"${CFLAGS}${CPPFLAGS}\" ; then\n\tfor cf_header_path in $CPPFLAGS $CFLAGS\n\tdo\n\t\tcase $cf_header_path in\n\t\t(-I*)\n\t\t\tcf_header_path=`echo \".$cf_header_path\" |sed -e 's/^...//' -e 's,/include$,,'`\n\t\t\tCF_ADD_SUBDIR_PATH($1,$2,include,$cf_header_path,NONE)\n\t\t\tcf_header_path_list=\"$cf_header_path_list [$]$1\"\n\t\t\t;;\n\t\tesac\n\tdone\nfi\n\n# add the variations for the package we are looking for\nCF_SUBDIR_PATH($1,$2,include)\n\ntest \"$includedir\" != NONE && \\\ntest \"$includedir\" != \"/usr/include\" && \\\ntest -d \"$includedir\" && {\n\ttest -d $includedir &&    $1=\"[$]$1 $includedir\"\n\ttest -d $includedir/$2 && $1=\"[$]$1 $includedir/$2\"\n}\n\ntest \"$oldincludedir\" != NONE && \\\ntest \"$oldincludedir\" != \"/usr/include\" && \\\ntest -d \"$oldincludedir\" && {\n\ttest -d $oldincludedir    && $1=\"[$]$1 $oldincludedir\"\n\ttest -d $oldincludedir/$2 && $1=\"[$]$1 $oldincludedir/$2\"\n}\n\n$1=\"[$]$1 $cf_header_path_list\"\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_HELP_MESSAGE version: 3 updated: 1998/01/14 10:56:23\ndnl ---------------\ndnl Insert text into the help-message, for readability, from AC_ARG_WITH.\nAC_DEFUN([CF_HELP_MESSAGE],\n[AC_DIVERT_HELP([$1])dnl\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_INET_ADDR version: 7 updated: 2013/10/08 17:47:05\ndnl ------------\ndnl For Lynx, check if the libraries we have found give us inet_aton, or\ndnl inet_addr.  If not, try to find the latter function with -lbind or\ndnl -lresolv, and put that on the end of the libraries, i.e., after the network\ndnl libraries.\ndnl\ndnl FIXME: the inner cases will probably need work on the header files.\nAC_DEFUN([CF_INET_ADDR],[\nAC_CACHE_CHECK(for inet_aton function,cf_cv_have_inet_aton,[\nAC_TRY_LINK(CF__INET_HEAD,[inet_aton(0, (struct in_addr *)0)],\n    [cf_cv_have_inet_aton=yes],\n    [cf_cv_have_inet_aton=no])])\nif test \"$cf_cv_have_inet_aton\" = yes ; then\n    AC_DEFINE(HAVE_INET_ATON,1,[Define to 1 if we have inet_aton])\nelse\n    AC_CACHE_CHECK(for inet_addr function,cf_cv_have_inet_addr,[\n    AC_TRY_LINK(CF__INET_HEAD,[inet_addr(0)],\n\t[cf_cv_have_inet_addr=yes],\n\t[cf_cv_have_inet_addr=no])])\n    if test \"$cf_cv_have_inet_addr\" = no ; then\n\tAC_CACHE_CHECK(for library with inet_addr,cf_cv_lib_inet_addr,[\n\t    cf_save_LIBS=\"$LIBS\"\n\t    for cf_inetlib in -lbind -lresolv\n\t    do\n\t\tLIBS=\"$cf_save_LIBS $cf_inetlib\"\n\t\tAC_TRY_LINK([#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n\t\t],[inet_addr(0)],\n\t\t    [cf_cv_lib_inet_addr=$cf_inetlib],\n\t\t    [cf_cv_lib_inet_addr=no])\n\t\tLIBS=\"$cf_save_LIBS\"\n\t\ttest \"$cf_cv_lib_inet_addr\" != no && break\n\t    done\n\t])\n\tif test \"$cf_cv_lib_inet_addr\" != no ; then\n\t    CF_ADD_LIBS($cf_cv_lib_inet_addr)\n\telse\n\t    AC_MSG_WARN(Unable to find library for inet_addr function)\n\tfi\n    fi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_INTEL_COMPILER version: 7 updated: 2015/04/12 15:39:00\ndnl -----------------\ndnl Check if the given compiler is really the Intel compiler for Linux.  It\ndnl tries to imitate gcc, but does not return an error when it finds a mismatch\ndnl between prototypes, e.g., as exercised by CF_MISSING_CHECK.\ndnl\ndnl This macro should be run \"soon\" after AC_PROG_CC or AC_PROG_CPLUSPLUS, to\ndnl ensure that it is not mistaken for gcc/g++.  It is normally invoked from\ndnl the wrappers for gcc and g++ warnings.\ndnl\ndnl $1 = GCC (default) or GXX\ndnl $2 = INTEL_COMPILER (default) or INTEL_CPLUSPLUS\ndnl $3 = CFLAGS (default) or CXXFLAGS\nAC_DEFUN([CF_INTEL_COMPILER],[\nAC_REQUIRE([AC_CANONICAL_HOST])\nifelse([$2],,INTEL_COMPILER,[$2])=no\n\nif test \"$ifelse([$1],,[$1],GCC)\" = yes ; then\n\tcase $host_os in\n\t(linux*|gnu*)\n\t\tAC_MSG_CHECKING(if this is really Intel ifelse([$1],GXX,C++,C) compiler)\n\t\tcf_save_CFLAGS=\"$ifelse([$3],,CFLAGS,[$3])\"\n\t\tifelse([$3],,CFLAGS,[$3])=\"$ifelse([$3],,CFLAGS,[$3]) -no-gcc\"\n\t\tAC_TRY_COMPILE([],[\n#ifdef __INTEL_COMPILER\n#else\nmake an error\n#endif\n],[ifelse([$2],,INTEL_COMPILER,[$2])=yes\ncf_save_CFLAGS=\"$cf_save_CFLAGS -we147\"\n],[])\n\t\tifelse([$3],,CFLAGS,[$3])=\"$cf_save_CFLAGS\"\n\t\tAC_MSG_RESULT($ifelse([$2],,INTEL_COMPILER,[$2]))\n\t\t;;\n\tesac\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_LARGEFILE version: 10 updated: 2017/01/21 11:06:25\ndnl ------------\ndnl Add checks for large file support.\nAC_DEFUN([CF_LARGEFILE],[\nifdef([AC_FUNC_FSEEKO],[\n\tAC_SYS_LARGEFILE\n\tif test \"$enable_largefile\" != no ; then\n\tAC_FUNC_FSEEKO\n\n\t# Normally we would collect these definitions in the config.h,\n\t# but (like _XOPEN_SOURCE), some environments rely on having these\n\t# defined before any of the system headers are included.  Another\n\t# case comes up with C++, e.g., on AIX the compiler compiles the\n\t# header files by themselves before looking at the body files it is\n\t# told to compile.  For ncurses, those header files do not include\n\t# the config.h\n\ttest \"$ac_cv_sys_large_files\"      != no && CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES \"\n\ttest \"$ac_cv_sys_largefile_source\" != no && CPPFLAGS=\"$CPPFLAGS -D_LARGEFILE_SOURCE \"\n\ttest \"$ac_cv_sys_file_offset_bits\" != no && CPPFLAGS=\"$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits \"\n\n\tAC_CACHE_CHECK(whether to use struct dirent64, cf_cv_struct_dirent64,[\n\t\tAC_TRY_COMPILE([\n#pragma GCC diagnostic error \"-Wincompatible-pointer-types\"\n#include <sys/types.h>\n#include <dirent.h>\n\t\t],[\n\t\t/* if transitional largefile support is setup, this is true */\n\t\textern struct dirent64 * readdir(DIR *);\n\t\tstruct dirent64 *x = readdir((DIR *)0);\n\t\tstruct dirent *y = readdir((DIR *)0);\n\t\tint z = x - y;\n\t\t],\n\t\t[cf_cv_struct_dirent64=yes],\n\t\t[cf_cv_struct_dirent64=no])\n\t])\n\ttest \"$cf_cv_struct_dirent64\" = yes && AC_DEFINE(HAVE_STRUCT_DIRENT64,1,[Define to 1 if we have struct dirent64])\n\tfi\n])\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_LASTLOG version: 5 updated: 2012/10/04 20:12:20\ndnl ----------\ndnl Check for header defining _PATH_LASTLOG, or failing that, see if the lastlog\ndnl file exists.\nAC_DEFUN([CF_LASTLOG],\n[\nAC_CHECK_HEADERS(lastlog.h paths.h)\nAC_CACHE_CHECK(for lastlog path,cf_cv_path_lastlog,[\nAC_TRY_COMPILE([\n#include <sys/types.h>\n#ifdef HAVE_LASTLOG_H\n#include <lastlog.h>\n#else\n#ifdef HAVE_PATHS_H\n#include <paths.h>\n#endif\n#endif],[char *path = _PATH_LASTLOG],\n\t[cf_cv_path_lastlog=\"_PATH_LASTLOG\"],\n\t[if test -f /usr/adm/lastlog ; then\n\t \tcf_cv_path_lastlog=/usr/adm/lastlog\n\telse\n\t\tcf_cv_path_lastlog=no\n\tfi])\n])\ntest $cf_cv_path_lastlog != no && AC_DEFINE(USE_LASTLOG,1,[Define to 1 if we can define lastlog pathname])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_LD_RPATH_OPT version: 7 updated: 2016/02/20 18:01:19\ndnl ---------------\ndnl For the given system and compiler, find the compiler flags to pass to the\ndnl loader to use the \"rpath\" feature.\nAC_DEFUN([CF_LD_RPATH_OPT],\n[\nAC_REQUIRE([CF_CHECK_CACHE])\n\nLD_RPATH_OPT=\nAC_MSG_CHECKING(for an rpath option)\ncase $cf_cv_system_name in\n(irix*)\n\tif test \"$GCC\" = yes; then\n\t\tLD_RPATH_OPT=\"-Wl,-rpath,\"\n\telse\n\t\tLD_RPATH_OPT=\"-rpath \"\n\tfi\n\t;;\n(linux*|gnu*|k*bsd*-gnu|freebsd*)\n\tLD_RPATH_OPT=\"-Wl,-rpath,\"\n\t;;\n(openbsd[[2-9]].*|mirbsd*)\n\tLD_RPATH_OPT=\"-Wl,-rpath,\"\n\t;;\n(dragonfly*)\n\tLD_RPATH_OPT=\"-rpath \"\n\t;;\n(netbsd*)\n\tLD_RPATH_OPT=\"-Wl,-rpath,\"\n\t;;\n(osf*|mls+*)\n\tLD_RPATH_OPT=\"-rpath \"\n\t;;\n(solaris2*)\n\tLD_RPATH_OPT=\"-R\"\n\t;;\n(*)\n\t;;\nesac\nAC_MSG_RESULT($LD_RPATH_OPT)\n\ncase \"x$LD_RPATH_OPT\" in\n(x-R*)\n\tAC_MSG_CHECKING(if we need a space after rpath option)\n\tcf_save_LIBS=\"$LIBS\"\n\tCF_ADD_LIBS(${LD_RPATH_OPT}$libdir)\n\tAC_TRY_LINK(, , cf_rpath_space=no, cf_rpath_space=yes)\n\tLIBS=\"$cf_save_LIBS\"\n\tAC_MSG_RESULT($cf_rpath_space)\n\ttest \"$cf_rpath_space\" = yes && LD_RPATH_OPT=\"$LD_RPATH_OPT \"\n\t;;\nesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_LIBRARY_PATH version: 10 updated: 2015/04/15 19:08:48\ndnl ---------------\ndnl Construct a search-list of directories for a nonstandard library-file\ndnl\ndnl Parameters\ndnl\t$1 = the variable to return as result\ndnl\t$2 = the package name\nAC_DEFUN([CF_LIBRARY_PATH],\n[\n$1=\ncf_library_path_list=\"\"\nif test -n \"${LDFLAGS}${LIBS}\" ; then\n\tfor cf_library_path in $LDFLAGS $LIBS\n\tdo\n\t\tcase $cf_library_path in\n\t\t(-L*)\n\t\t\tcf_library_path=`echo \".$cf_library_path\" |sed -e 's/^...//' -e 's,/lib$,,'`\n\t\t\tCF_ADD_SUBDIR_PATH($1,$2,lib,$cf_library_path,NONE)\n\t\t\tcf_library_path_list=\"$cf_library_path_list [$]$1\"\n\t\t\t;;\n\t\tesac\n\tdone\nfi\n\nCF_SUBDIR_PATH($1,$2,lib)\n\n$1=\"$cf_library_path_list [$]$1\"\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_LOCALE version: 5 updated: 2012/10/06 11:17:15\ndnl ---------\ndnl Check if we have setlocale() and its header, <locale.h>\ndnl The optional parameter $1 tells what to do if we do have locale support.\nAC_DEFUN([CF_LOCALE],\n[\nAC_MSG_CHECKING(for setlocale())\nAC_CACHE_VAL(cf_cv_locale,[\nAC_TRY_LINK([#include <locale.h>],\n\t[setlocale(LC_ALL, \"\")],\n\t[cf_cv_locale=yes],\n\t[cf_cv_locale=no])\n\t])\nAC_MSG_RESULT($cf_cv_locale)\ntest $cf_cv_locale = yes && { ifelse($1,,AC_DEFINE(LOCALE,1,[Define to 1 if we have locale support]),[$1]) }\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_MAKEFLAGS version: 18 updated: 2018/02/21 21:26:03\ndnl ------------\ndnl Some 'make' programs support ${MAKEFLAGS}, some ${MFLAGS}, to pass 'make'\ndnl options to lower-levels.  It's very useful for \"make -n\" -- if we have it.\ndnl (GNU 'make' does both, something POSIX 'make', which happens to make the\ndnl ${MAKEFLAGS} variable incompatible because it adds the assignments :-)\nAC_DEFUN([CF_MAKEFLAGS],\n[\nAC_CACHE_CHECK(for makeflags variable, cf_cv_makeflags,[\n\tcf_cv_makeflags=''\n\tfor cf_option in '-${MAKEFLAGS}' '${MFLAGS}'\n\tdo\n\t\tcat >cf_makeflags.tmp <<CF_EOF\nSHELL = $SHELL\nall :\n\t@ echo '.$cf_option'\nCF_EOF\n\t\tcf_result=`${MAKE:-make} -k -f cf_makeflags.tmp 2>/dev/null | fgrep -v \"ing directory\" | sed -e 's,[[ \t]]*$,,'`\n\t\tcase \"$cf_result\" in\n\t\t(.*k|.*kw)\n\t\t\tcf_result=`${MAKE:-make} -k -f cf_makeflags.tmp CC=cc 2>/dev/null`\n\t\t\tcase \"$cf_result\" in\n\t\t\t(.*CC=*)\tcf_cv_makeflags=\n\t\t\t\t;;\n\t\t\t(*)\tcf_cv_makeflags=$cf_option\n\t\t\t\t;;\n\t\t\tesac\n\t\t\tbreak\n\t\t\t;;\n\t\t(.-)\n\t\t\t;;\n\t\t(*)\n\t\t\tCF_MSG_LOG(given option \\\"$cf_option\\\", no match \\\"$cf_result\\\")\n\t\t\t;;\n\t\tesac\n\tdone\n\trm -f cf_makeflags.tmp\n])\n\nAC_SUBST(cf_cv_makeflags)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_MAKE_TAGS version: 6 updated: 2010/10/23 15:52:32\ndnl ------------\ndnl Generate tags/TAGS targets for makefiles.  Do not generate TAGS if we have\ndnl a monocase filesystem.\nAC_DEFUN([CF_MAKE_TAGS],[\nAC_REQUIRE([CF_MIXEDCASE_FILENAMES])\n\nAC_CHECK_PROGS(CTAGS, exctags ctags)\nAC_CHECK_PROGS(ETAGS, exetags etags)\n\nAC_CHECK_PROG(MAKE_LOWER_TAGS, ${CTAGS:-ctags}, yes, no)\n\nif test \"$cf_cv_mixedcase\" = yes ; then\n\tAC_CHECK_PROG(MAKE_UPPER_TAGS, ${ETAGS:-etags}, yes, no)\nelse\n\tMAKE_UPPER_TAGS=no\nfi\n\nif test \"$MAKE_UPPER_TAGS\" = yes ; then\n\tMAKE_UPPER_TAGS=\nelse\n\tMAKE_UPPER_TAGS=\"#\"\nfi\n\nif test \"$MAKE_LOWER_TAGS\" = yes ; then\n\tMAKE_LOWER_TAGS=\nelse\n\tMAKE_LOWER_TAGS=\"#\"\nfi\n\nAC_SUBST(CTAGS)\nAC_SUBST(ETAGS)\n\nAC_SUBST(MAKE_UPPER_TAGS)\nAC_SUBST(MAKE_LOWER_TAGS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_MATH_LIB version: 9 updated: 2017/01/21 11:06:25\ndnl -----------\ndnl Checks for libraries.  At least one UNIX system, Apple Macintosh\ndnl Rhapsody 5.5, does not have -lm.  We cannot use the simpler\ndnl AC_CHECK_LIB(m,sin), because that fails for C++.\nAC_DEFUN([CF_MATH_LIB],\n[\nAC_CACHE_CHECK(if -lm needed for math functions,\n\tcf_cv_need_libm,[\n\tAC_TRY_LINK([\n\t#include <stdio.h>\n\t#include <stdlib.h>\n\t#include <math.h>\n\t],\n\t[double x = rand(); printf(\"result = %g\\n\", ]ifelse([$2],,sin(x),$2)[)],\n\t[cf_cv_need_libm=no],\n\t[cf_cv_need_libm=yes])])\nif test \"$cf_cv_need_libm\" = yes\nthen\nifelse($1,,[\n\tCF_ADD_LIB(m)\n],[$1=-lm])\nfi\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_MIXEDCASE_FILENAMES version: 7 updated: 2015/04/12 15:39:00\ndnl ----------------------\ndnl Check if the file-system supports mixed-case filenames.  If we're able to\ndnl create a lowercase name and see it as uppercase, it doesn't support that.\nAC_DEFUN([CF_MIXEDCASE_FILENAMES],\n[\nAC_CACHE_CHECK(if filesystem supports mixed-case filenames,cf_cv_mixedcase,[\nif test \"$cross_compiling\" = yes ; then\n\tcase $target_alias in\n\t(*-os2-emx*|*-msdosdjgpp*|*-cygwin*|*-msys*|*-mingw*|*-uwin*)\n\t\tcf_cv_mixedcase=no\n\t\t;;\n\t(*)\n\t\tcf_cv_mixedcase=yes\n\t\t;;\n\tesac\nelse\n\trm -f conftest CONFTEST\n\techo test >conftest\n\tif test -f CONFTEST ; then\n\t\tcf_cv_mixedcase=no\n\telse\n\t\tcf_cv_mixedcase=yes\n\tfi\n\trm -f conftest CONFTEST\nfi\n])\ntest \"$cf_cv_mixedcase\" = yes && AC_DEFINE(MIXEDCASE_FILENAMES,1,[Define to 1 if filesystem supports mixed-case filenames.])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_MSG_LOG version: 5 updated: 2010/10/23 15:52:32\ndnl ----------\ndnl Write a debug message to config.log, along with the line number in the\ndnl configure script.\nAC_DEFUN([CF_MSG_LOG],[\necho \"${as_me:-configure}:__oline__: testing $* ...\" 1>&AC_FD_CC\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_NCURSES_BROKEN version: 8 updated: 2012/11/08 20:57:52\ndnl -----------------\ndnl Check for pre-1.9.9g ncurses (among other problems, the most obvious is\ndnl that color combinations don't work).\nAC_DEFUN([CF_NCURSES_BROKEN],\n[\nAC_REQUIRE([CF_NCURSES_VERSION])\nif test \"$cf_cv_ncurses_version\" != no ; then\nAC_MSG_CHECKING(for obsolete/broken version of ncurses)\nAC_CACHE_VAL(cf_cv_ncurses_broken,[\nAC_TRY_COMPILE([\n#include <${cf_cv_ncurses_header:-curses.h}>],[\n#if defined(NCURSES_VERSION) && defined(wgetbkgd)\n\tmake an error\n#else\n\tint x = 1\n#endif\n],\n\t[cf_cv_ncurses_broken=no],\n\t[cf_cv_ncurses_broken=yes])\n])\nAC_MSG_RESULT($cf_cv_ncurses_broken)\nif test \"$cf_cv_ncurses_broken\" = yes ; then\n\tAC_MSG_WARN(hmm... you should get an up-to-date version of ncurses)\n\tAC_DEFINE(NCURSES_BROKEN,1,[Define to 1 if you have an obsolete version of ncurses])\nfi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_NCURSES_CC_CHECK version: 4 updated: 2007/07/29 10:39:05\ndnl -------------------\ndnl Check if we can compile with ncurses' header file\ndnl $1 is the cache variable to set\ndnl $2 is the header-file to include\ndnl $3 is the root name (ncurses or ncursesw)\nAC_DEFUN([CF_NCURSES_CC_CHECK],[\n\tAC_TRY_COMPILE([\n]ifelse($3,ncursesw,[\n#define _XOPEN_SOURCE_EXTENDED\n#undef  HAVE_LIBUTF8_H\t/* in case we used CF_UTF8_LIB */\n#define HAVE_LIBUTF8_H\t/* to force ncurses' header file to use cchar_t */\n])[\n#include <$2>],[\n#ifdef NCURSES_VERSION\n]ifelse($3,ncursesw,[\n#ifndef WACS_BSSB\n\tmake an error\n#endif\n])[\nprintf(\"%s\\n\", NCURSES_VERSION);\n#else\n#ifdef __NCURSES_H\nprintf(\"old\\n\");\n#else\n\tmake an error\n#endif\n#endif\n\t]\n\t,[$1=$2]\n\t,[$1=no])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_NCURSES_CONFIG version: 20 updated: 2018/01/03 04:47:33\ndnl -----------------\ndnl Tie together the configure-script macros for ncurses, preferring these in\ndnl order:\ndnl a) \".pc\" files for pkg-config, using $NCURSES_CONFIG_PKG\ndnl b) the \"-config\" script from ncurses, using $NCURSES_CONFIG\ndnl c) just plain libraries\ndnl\ndnl $1 is the root library name (default: \"ncurses\")\nAC_DEFUN([CF_NCURSES_CONFIG],[\nAC_REQUIRE([CF_PKG_CONFIG])\ncf_ncuconfig_root=ifelse($1,,ncurses,$1)\ncf_have_ncuconfig=no\n\nif test \"x${PKG_CONFIG:=none}\" != xnone; then\n\tAC_MSG_CHECKING(pkg-config for $cf_ncuconfig_root)\n\tif \"$PKG_CONFIG\" --exists $cf_ncuconfig_root ; then\n\t\tAC_MSG_RESULT(yes)\n\n\t\tAC_MSG_CHECKING(if the $cf_ncuconfig_root package files work)\n\t\tcf_have_ncuconfig=unknown\n\n\t\tcf_save_CPPFLAGS=\"$CPPFLAGS\"\n\t\tcf_save_LIBS=\"$LIBS\"\n\n\t\tCPPFLAGS=\"$CPPFLAGS `$PKG_CONFIG --cflags $cf_ncuconfig_root`\"\n\t\tCF_ADD_LIBS(`$PKG_CONFIG --libs $cf_ncuconfig_root`)\n\n\t\tAC_TRY_LINK([#include <${cf_cv_ncurses_header:-curses.h}>],\n\t\t\t[initscr(); mousemask(0,0); tgoto((char *)0, 0, 0);],\n\t\t\t[AC_TRY_RUN([#include <${cf_cv_ncurses_header:-curses.h}>\n\t\t\t\tint main(void)\n\t\t\t\t{ char *xx = curses_version(); return (xx == 0); }],\n\t\t\t\t[cf_have_ncuconfig=yes],\n\t\t\t\t[cf_have_ncuconfig=no],\n\t\t\t\t[cf_have_ncuconfig=maybe])],\n\t\t\t[cf_have_ncuconfig=no])\n\t\tAC_MSG_RESULT($cf_have_ncuconfig)\n\t\ttest \"$cf_have_ncuconfig\" = maybe && cf_have_ncuconfig=yes\n\t\tif test \"$cf_have_ncuconfig\" != \"yes\"\n\t\tthen\n\t\t\tCPPFLAGS=\"$cf_save_CPPFLAGS\"\n\t\t\tLIBS=\"$cf_save_LIBS\"\n\t\t\tNCURSES_CONFIG_PKG=none\n\t\telse\n\t\t\tAC_DEFINE(NCURSES,1,[Define to 1 if we are using ncurses headers/libraries])\n\t\t\tNCURSES_CONFIG_PKG=$cf_ncuconfig_root\n\t\t\tCF_TERM_HEADER\n\t\tfi\n\n\telse\n\t\tAC_MSG_RESULT(no)\n\t\tNCURSES_CONFIG_PKG=none\n\tfi\nelse\n\tNCURSES_CONFIG_PKG=none\nfi\n\nif test \"x$cf_have_ncuconfig\" = \"xno\"; then\n\tcf_ncurses_config=\"${cf_ncuconfig_root}${NCURSES_CONFIG_SUFFIX}-config\"; echo \"Looking for ${cf_ncurses_config}\"\n\n\tCF_ACVERSION_CHECK(2.52,\n\t\t[AC_CHECK_TOOLS(NCURSES_CONFIG, ${cf_ncurses_config} ${cf_ncuconfig_root}6-config ${cf_ncuconfig_root}6-config ${cf_ncuconfig_root}5-config, none)],\n\t\t[AC_PATH_PROGS(NCURSES_CONFIG,  ${cf_ncurses_config} ${cf_ncuconfig_root}6-config ${cf_ncuconfig_root}6-config ${cf_ncuconfig_root}5-config, none)])\n\n\tif test \"$NCURSES_CONFIG\" != none ; then\n\n\t\tCPPFLAGS=\"$CPPFLAGS `$NCURSES_CONFIG --cflags`\"\n\t\tCF_ADD_LIBS(`$NCURSES_CONFIG --libs`)\n\n\t\t# even with config script, some packages use no-override for curses.h\n\t\tCF_CURSES_HEADER(ifelse($1,,ncurses,$1))\n\n\t\tdnl like CF_NCURSES_CPPFLAGS\n\t\tAC_DEFINE(NCURSES,1,[Define to 1 if we are using ncurses headers/libraries])\n\n\t\tdnl like CF_NCURSES_LIBS\n\t\tCF_UPPER(cf_nculib_ROOT,HAVE_LIB$cf_ncuconfig_root)\n\t\tAC_DEFINE_UNQUOTED($cf_nculib_ROOT)\n\n\t\tdnl like CF_NCURSES_VERSION\n\t\tcf_cv_ncurses_version=`$NCURSES_CONFIG --version`\n\n\telse\n\n\t\tCF_NCURSES_CPPFLAGS(ifelse($1,,ncurses,$1))\n\t\tCF_NCURSES_LIBS(ifelse($1,,ncurses,$1))\n\n\tfi\nelse\n\tNCURSES_CONFIG=none\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_NCURSES_CPPFLAGS version: 21 updated: 2012/10/06 08:57:51\ndnl -------------------\ndnl Look for the SVr4 curses clone 'ncurses' in the standard places, adjusting\ndnl the CPPFLAGS variable so we can include its header.\ndnl\ndnl The header files may be installed as either curses.h, or ncurses.h (would\ndnl be obsolete, except that some packagers prefer this name to distinguish it\ndnl from a \"native\" curses implementation).  If not installed for overwrite,\ndnl the curses.h file would be in an ncurses subdirectory (e.g.,\ndnl /usr/include/ncurses), but someone may have installed overwriting the\ndnl vendor's curses.  Only very old versions (pre-1.9.2d, the first autoconf'd\ndnl version) of ncurses don't define either __NCURSES_H or NCURSES_VERSION in\ndnl the header.\ndnl\ndnl If the installer has set $CFLAGS or $CPPFLAGS so that the ncurses header\ndnl is already in the include-path, don't even bother with this, since we cannot\ndnl easily determine which file it is.  In this case, it has to be <curses.h>.\ndnl\ndnl The optional parameter gives the root name of the library, in case it is\ndnl not installed as the default curses library.  That is how the\ndnl wide-character version of ncurses is installed.\nAC_DEFUN([CF_NCURSES_CPPFLAGS],\n[AC_REQUIRE([CF_WITH_CURSES_DIR])\n\nAC_PROVIDE([CF_CURSES_CPPFLAGS])dnl\ncf_ncuhdr_root=ifelse($1,,ncurses,$1)\n\ntest -n \"$cf_cv_curses_dir\" && \\\ntest \"$cf_cv_curses_dir\" != \"no\" && { \\\n  CF_ADD_INCDIR($cf_cv_curses_dir/include/$cf_ncuhdr_root)\n}\n\nAC_CACHE_CHECK(for $cf_ncuhdr_root header in include-path, cf_cv_ncurses_h,[\n\tcf_header_list=\"$cf_ncuhdr_root/curses.h $cf_ncuhdr_root/ncurses.h\"\n\t( test \"$cf_ncuhdr_root\" = ncurses || test \"$cf_ncuhdr_root\" = ncursesw ) && cf_header_list=\"$cf_header_list curses.h ncurses.h\"\n\tfor cf_header in $cf_header_list\n\tdo\n\t\tCF_NCURSES_CC_CHECK(cf_cv_ncurses_h,$cf_header,$1)\n\t\ttest \"$cf_cv_ncurses_h\" != no && break\n\tdone\n])\n\nCF_NCURSES_HEADER\nCF_TERM_HEADER\n\n# some applications need this, but should check for NCURSES_VERSION\nAC_DEFINE(NCURSES,1,[Define to 1 if we are using ncurses headers/libraries])\n\nCF_NCURSES_VERSION\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_NCURSES_HEADER version: 4 updated: 2015/04/15 19:08:48\ndnl -----------------\ndnl Find a \"curses\" header file, e.g,. \"curses.h\", or one of the more common\ndnl variations of ncurses' installs.\ndnl\ndnl See also CF_CURSES_HEADER, which sets the same cache variable.\nAC_DEFUN([CF_NCURSES_HEADER],[\n\nif test \"$cf_cv_ncurses_h\" != no ; then\n\tcf_cv_ncurses_header=$cf_cv_ncurses_h\nelse\n\nAC_CACHE_CHECK(for $cf_ncuhdr_root include-path, cf_cv_ncurses_h2,[\n\ttest -n \"$verbose\" && echo\n\tCF_HEADER_PATH(cf_search,$cf_ncuhdr_root)\n\ttest -n \"$verbose\" && echo search path $cf_search\n\tcf_save2_CPPFLAGS=\"$CPPFLAGS\"\n\tfor cf_incdir in $cf_search\n\tdo\n\t\tCF_ADD_INCDIR($cf_incdir)\n\t\tfor cf_header in \\\n\t\t\tncurses.h \\\n\t\t\tcurses.h\n\t\tdo\n\t\t\tCF_NCURSES_CC_CHECK(cf_cv_ncurses_h2,$cf_header,$1)\n\t\t\tif test \"$cf_cv_ncurses_h2\" != no ; then\n\t\t\t\tcf_cv_ncurses_h2=$cf_incdir/$cf_header\n\t\t\t\ttest -n \"$verbose\" && echo $ac_n \"\t... found $ac_c\" 1>&AC_FD_MSG\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\ttest -n \"$verbose\" && echo \"\t... tested $cf_incdir/$cf_header\" 1>&AC_FD_MSG\n\t\tdone\n\t\tCPPFLAGS=\"$cf_save2_CPPFLAGS\"\n\t\ttest \"$cf_cv_ncurses_h2\" != no && break\n\tdone\n\ttest \"$cf_cv_ncurses_h2\" = no && AC_MSG_ERROR(not found)\n\t])\n\n\tCF_DIRNAME(cf_1st_incdir,$cf_cv_ncurses_h2)\n\tcf_cv_ncurses_header=`basename $cf_cv_ncurses_h2`\n\tif test `basename $cf_1st_incdir` = $cf_ncuhdr_root ; then\n\t\tcf_cv_ncurses_header=$cf_ncuhdr_root/$cf_cv_ncurses_header\n\tfi\n\tCF_ADD_INCDIR($cf_1st_incdir)\n\nfi\n\n# Set definitions to allow ifdef'ing for ncurses.h\n\ncase $cf_cv_ncurses_header in\n(*ncurses.h)\n\tAC_DEFINE(HAVE_NCURSES_H,1,[Define to 1 if we have ncurses.h])\n\t;;\nesac\n\ncase $cf_cv_ncurses_header in\n(ncurses/curses.h|ncurses/ncurses.h)\n\tAC_DEFINE(HAVE_NCURSES_NCURSES_H,1,[Define to 1 if we have ncurses/ncurses.h])\n\t;;\n(ncursesw/curses.h|ncursesw/ncurses.h)\n\tAC_DEFINE(HAVE_NCURSESW_NCURSES_H,1,[Define to 1 if we have ncursesw/ncurses.h])\n\t;;\nesac\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_NCURSES_LIBS version: 17 updated: 2015/04/15 19:08:48\ndnl ---------------\ndnl Look for the ncurses library.  This is a little complicated on Linux,\ndnl because it may be linked with the gpm (general purpose mouse) library.\ndnl Some distributions have gpm linked with (bsd) curses, which makes it\ndnl unusable with ncurses.  However, we don't want to link with gpm unless\ndnl ncurses has a dependency, since gpm is normally set up as a shared library,\ndnl and the linker will record a dependency.\ndnl\ndnl The optional parameter gives the root name of the library, in case it is\ndnl not installed as the default curses library.  That is how the\ndnl wide-character version of ncurses is installed.\nAC_DEFUN([CF_NCURSES_LIBS],\n[AC_REQUIRE([CF_NCURSES_CPPFLAGS])\n\ncf_nculib_root=ifelse($1,,ncurses,$1)\n\t# This works, except for the special case where we find gpm, but\n\t# ncurses is in a nonstandard location via $LIBS, and we really want\n\t# to link gpm.\ncf_ncurses_LIBS=\"\"\ncf_ncurses_SAVE=\"$LIBS\"\nAC_CHECK_LIB(gpm,Gpm_Open,\n\t[AC_CHECK_LIB(gpm,initscr,\n\t\t[LIBS=\"$cf_ncurses_SAVE\"],\n\t\t[cf_ncurses_LIBS=\"-lgpm\"])])\n\ncase $host_os in\n(freebsd*)\n\t# This is only necessary if you are linking against an obsolete\n\t# version of ncurses (but it should do no harm, since it's static).\n\tif test \"$cf_nculib_root\" = ncurses ; then\n\t\tAC_CHECK_LIB(mytinfo,tgoto,[cf_ncurses_LIBS=\"-lmytinfo $cf_ncurses_LIBS\"])\n\tfi\n\t;;\nesac\n\nCF_ADD_LIBS($cf_ncurses_LIBS)\n\nif ( test -n \"$cf_cv_curses_dir\" && test \"$cf_cv_curses_dir\" != \"no\" )\nthen\n\tCF_ADD_LIBS(-l$cf_nculib_root)\nelse\n\tCF_FIND_LIBRARY($cf_nculib_root,$cf_nculib_root,\n\t\t[#include <${cf_cv_ncurses_header:-curses.h}>],\n\t\t[initscr()],\n\t\tinitscr)\nfi\n\nif test -n \"$cf_ncurses_LIBS\" ; then\n\tAC_MSG_CHECKING(if we can link $cf_nculib_root without $cf_ncurses_LIBS)\n\tcf_ncurses_SAVE=\"$LIBS\"\n\tfor p in $cf_ncurses_LIBS ; do\n\t\tq=`echo $LIBS | sed -e \"s%$p %%\" -e \"s%$p$%%\"`\n\t\tif test \"$q\" != \"$LIBS\" ; then\n\t\t\tLIBS=\"$q\"\n\t\tfi\n\tdone\n\tAC_TRY_LINK([#include <${cf_cv_ncurses_header:-curses.h}>],\n\t\t[initscr(); mousemask(0,0); tgoto((char *)0, 0, 0);],\n\t\t[AC_MSG_RESULT(yes)],\n\t\t[AC_MSG_RESULT(no)\n\t\t LIBS=\"$cf_ncurses_SAVE\"])\nfi\n\nCF_UPPER(cf_nculib_ROOT,HAVE_LIB$cf_nculib_root)\nAC_DEFINE_UNQUOTED($cf_nculib_ROOT)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_NCURSES_VERSION version: 15 updated: 2017/05/09 19:26:10\ndnl ------------------\ndnl Check for the version of ncurses, to aid in reporting bugs, etc.\ndnl Call CF_CURSES_CPPFLAGS first, or CF_NCURSES_CPPFLAGS.  We don't use\ndnl AC_REQUIRE since that does not work with the shell's if/then/else/fi.\nAC_DEFUN([CF_NCURSES_VERSION],\n[\nAC_REQUIRE([CF_CURSES_CPPFLAGS])dnl\nAC_CACHE_CHECK(for ncurses version, cf_cv_ncurses_version,[\n\tcf_cv_ncurses_version=no\n\tcf_tempfile=out$$\n\trm -f $cf_tempfile\n\tAC_TRY_RUN([\n#include <${cf_cv_ncurses_header:-curses.h}>\n#include <stdio.h>\nint main(void)\n{\n\tFILE *fp = fopen(\"$cf_tempfile\", \"w\");\n#ifdef NCURSES_VERSION\n# ifdef NCURSES_VERSION_PATCH\n\tfprintf(fp, \"%s.%d\\n\", NCURSES_VERSION, NCURSES_VERSION_PATCH);\n# else\n\tfprintf(fp, \"%s\\n\", NCURSES_VERSION);\n# endif\n#else\n# ifdef __NCURSES_H\n\tfprintf(fp, \"old\\n\");\n# else\n\tmake an error\n# endif\n#endif\n\t${cf_cv_main_return:-return}(0);\n}],[\n\tcf_cv_ncurses_version=`cat $cf_tempfile`],,[\n\n\t# This will not work if the preprocessor splits the line after the\n\t# Autoconf token.  The 'unproto' program does that.\n\tcat > conftest.$ac_ext <<EOF\n#include <${cf_cv_ncurses_header:-curses.h}>\n#undef Autoconf\n#ifdef NCURSES_VERSION\nAutoconf NCURSES_VERSION\n#else\n#ifdef __NCURSES_H\nAutoconf \"old\"\n#endif\n;\n#endif\nEOF\n\tcf_try=\"$ac_cpp conftest.$ac_ext 2>&AC_FD_CC | grep '^Autoconf ' >conftest.out\"\n\tAC_TRY_EVAL(cf_try)\n\tif test -f conftest.out ; then\n\t\tcf_out=`cat conftest.out | sed -e 's%^Autoconf %%' -e 's%^[[^\"]]*\"%%' -e 's%\".*%%'`\n\t\ttest -n \"$cf_out\" && cf_cv_ncurses_version=\"$cf_out\"\n\t\trm -f conftest.out\n\tfi\n])\n\trm -f $cf_tempfile\n])\ntest \"$cf_cv_ncurses_version\" = no || AC_DEFINE(NCURSES,1,[Define to 1 if we are using ncurses headers/libraries])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_NETLIBS version: 11 updated: 2015/04/15 19:08:48\ndnl ----------\ndnl After checking for functions in the default $LIBS, make a further check\ndnl for the functions that are netlib-related (these aren't always in the\ndnl libc, etc., and have to be handled specially because there are conflicting\ndnl and broken implementations.\ndnl Common library requirements (in order):\ndnl\t-lresolv -lsocket -lnsl\ndnl\t-lnsl -lsocket\ndnl\t-lsocket\ndnl\t-lbsd\ndnl\t-lnetwork\nAC_DEFUN([CF_NETLIBS],[\ncf_test_netlibs=no\n\nAC_MSG_CHECKING(for network libraries)\n\nAC_CACHE_VAL(cf_cv_netlibs,[\nAC_MSG_RESULT(working...)\n\ncf_cv_netlibs=\"\"\ncf_test_netlibs=yes\n\ncase $host_os in\n(mingw*)\n\tAC_CHECK_HEADERS( windows.h winsock.h winsock2.h )\n\n\tif test \"$ac_cv_header_winsock2_h\" = \"yes\" ; then\n\t\tcf_winsock_lib=\"-lws2_32\"\n\telif test \"$ac_cv_header_winsock_h\" = \"yes\" ; then\n\t\tcf_winsock_lib=\"-lwsock32\"\n\tfi\n\n\tcf_save_LIBS=\"$LIBS\"\n\tCF_ADD_LIBS($cf_winsock_lib)\n\n\tAC_TRY_LINK([\n#ifdef HAVE_WINDOWS_H\n#undef WIN32_LEAN_AND_MEAN\n#define WIN32_LEAN_AND_MEAN\n#include <windows.h>\n#ifdef HAVE_WINSOCK2_H\n#include <winsock2.h>\n#else\n#ifdef HAVE_WINSOCK_H\n#include <winsock.h>\n#endif\n#endif\n#endif\n],[\n\tchar buffer[1024];\n\tgethostname(buffer, sizeof(buffer));],\n\t[cf_cv_netlibs=\"$cf_winsock_lib $cf_cv_netlibs\"],\n\t[AC_MSG_ERROR(Cannot link against winsock library)])\n\n\tLIBS=\"$cf_save_LIBS\"\n\t;;\n(*)\n\tAC_CHECK_FUNCS(gethostname,,[\n\t\tCF_RECHECK_FUNC(gethostname,nsl,cf_cv_netlibs,[\n\t\t\tCF_RECHECK_FUNC(gethostname,socket,cf_cv_netlibs)])])\n\n\tAC_CHECK_LIB(inet, main, cf_cv_netlibs=\"-linet $cf_cv_netlibs\")\n\n\tif test \"$ac_cv_func_lsocket\" != no ; then\n\tAC_CHECK_FUNCS(socket,,[\n\t\tCF_RECHECK_FUNC(socket,socket,cf_cv_netlibs,[\n\t\t\tCF_RECHECK_FUNC(socket,bsd,cf_cv_netlibs)])])\n\tfi\n\n\tAC_CHECK_FUNCS(gethostbyname,,[\n\t\tCF_RECHECK_FUNC(gethostbyname,nsl,cf_cv_netlibs)])\n\n\tAC_CHECK_FUNCS(inet_ntoa,,[\n\t\tCF_RECHECK_FUNC(inet_ntoa,nsl,cf_cv_netlibs)])\n\n\tAC_CHECK_FUNCS(gethostbyname,,[\n\t\tCF_RECHECK_FUNC(gethostbyname,network,cf_cv_netlibs)])\n\n\tAC_CHECK_FUNCS(strcasecmp,,[\n\t\tCF_RECHECK_FUNC(strcasecmp,resolv,cf_cv_netlibs)])\n\t;;\nesac\n])\n\ncase $cf_cv_netlibs in\n(*ws2_32*)\n\tAC_DEFINE(USE_WINSOCK2_H,1,[Define to 1 if we should include winsock2.h])\n\t;;\nesac\n\nCF_ADD_LIBS($cf_cv_netlibs)\ntest $cf_test_netlibs = no && echo \"$cf_cv_netlibs\" >&AC_FD_MSG\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_NGROUPS version: 4 updated: 2012/11/08 20:57:52\ndnl ----------\ndnl Check for the symbol NGROUPS\nAC_DEFUN([CF_NGROUPS],\n[\nAC_MSG_CHECKING(if NGROUPS is defined)\nAC_CACHE_VAL(cf_cv_ngroups,[\nAC_TRY_COMPILE([\n#if HAVE_SYS_PARAM_H\n#include <sys/param.h>\n#endif\n#if HAVE_LIMITS_H\n#include <limits.h>\n#endif\n],[int x = NGROUPS],\n\t[cf_cv_ngroups=yes],\n\t[AC_TRY_COMPILE([\n#if HAVE_SYS_PARAM_H\n#include <sys/param.h>\n#endif\n#if HAVE_LIMITS_H\n#include <limits.h>\n#endif\n],[int x = NGROUPS_MAX],\n\t\t[cf_cv_ngroups=NGROUPS_MAX],\n\t\t[cf_cv_ngroups=no])\n\t])\nAC_MSG_RESULT($cf_cv_ngroups)\n])\nif test \"$cf_cv_ngroups\" = no ; then\n\tAC_DEFINE(NGROUPS,16,[Define to maximum number of groups])\nelif test \"$cf_cv_ngroups\" = NGROUPS_MAX ; then\n\tAC_DEFINE(NGROUPS,NGROUPS_MAX)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_NO_LEAKS_OPTION version: 6 updated: 2015/04/12 15:39:00\ndnl ------------------\ndnl see CF_WITH_NO_LEAKS\nAC_DEFUN([CF_NO_LEAKS_OPTION],[\nAC_MSG_CHECKING(if you want to use $1 for testing)\nAC_ARG_WITH($1,\n\t[$2],\n\t[AC_DEFINE_UNQUOTED($3,1,\"Define to 1 if you want to use $1 for testing.\")ifelse([$4],,[\n\t $4\n])\n\t: ${with_cflags:=-g}\n\t: ${with_no_leaks:=yes}\n\t with_$1=yes],\n\t[with_$1=])\nAC_MSG_RESULT(${with_$1:-no})\n\ncase .$with_cflags in\n(.*-g*)\n\tcase .$CFLAGS in\n\t(.*-g*)\n\t\t;;\n\t(*)\n\t\tCF_ADD_CFLAGS([-g])\n\t\t;;\n\tesac\n\t;;\nesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_NSS_COMPAT version: 5 updated: 2015/04/15 19:08:48\ndnl -------------\ndnl Check for NSS compatible SSL libraries\ndnl $1 = the [optional] directory in which the library may be found\nAC_DEFUN([CF_NSS_COMPAT],[\ncheck=`pkg-config --version 2>/dev/null`\nif test -n \"$check\" ; then\n\tcf_ssl_library=`pkg-config --libs nss`\n\tcf_ssl_cflags=`pkg-config --cflags nss`\nelse\n\t# Without pkg-config, we'll kludge in some defaults\n\tcf_ssl_library=\"-lssl3 -lsmime3 -lnss3 -lplds4 -lplc4 -lnspr4 -lpthread -ldl\"\n\tcf_ssl_cflags=\"-I/usr/include/nss3 -I/usr/include/nspr4\"\nfi\ncf_ssl_library=\"-lnss_compat_ossl $cf_ssl_library\"\n\ncase \"$1\" in\n(no)\n\tcf_ssl_root=\n\t;;\n(yes)\n\tAC_CHECK_LIB(nss_compat_ossl, SSL_get_version,[],[\n\t\tcf_ssl_root=/usr/local/nss_compat_ossl\n\t\tif test -d $cf_ssl_root ; then\n\t\t\tCF_VERBOSE(assume it is in $cf_ssl_root)\n\t\t\tcf_ssl_library=\"-L$cf_ssl_root/lib $cf_ssl_library\"\n\t\telse\n\t\t\tAC_MSG_ERROR(cannot find NSS compilant libraries)\n\t\tfi\n\t],\n\t[-lnss_compat_ossl])\n\t;;\n(*)\n\tif test -d $1 ; then\n\t\tif test -d $1/include ; then\n\t\t\tcf_ssl_root=$1\n\t\telif test -d $1/../include ; then\n\t\t\tcf_ssl_root=$1/..\n\t\telse\n\t\t\tAC_MSG_ERROR(cannot find NSS compilant library under $1)\n\t\tfi\n\t\tcf_ssl_library=\"-L$cf_ssl_root/lib $cf_ssl_library\"\n\telse\n\t\tAC_MSG_WARN(expected a directory: $1)\n\tfi\n\t;;\nesac\nCF_ADD_LIBS($cf_ssl_library)\n\ncf_ssl_subincs=yes\nif test -n \"$cf_ssl_root\" ; then\n\tif test -d $cf_ssl_root/include ; then\n\t\tcf_ssl_cflags=\"-I$cf_ssl_root/include  $cf_ssl_cflags\"\n\t\ttest -d $cf_ssl_root/include/nss_compat_ossl || cf_ssl_subincs=no\n\tfi\nfi\nCF_ADD_CFLAGS($cf_ssl_cflags)\n\nif test \"$cf_ssl_subincs\" = yes ; then\nAC_MSG_CHECKING(for NSS compilant include directory)\nAC_TRY_COMPILE([\n#include <stdio.h>\n#include <nss_compat_ossl/nss_compat_ossl.h>],\n\t[SSL_shutdown((SSL *)0)],\n\t[cf_ssl_incl=yes],\n\t[cf_ssl_incl=no])\nAC_MSG_RESULT($cf_ssl_incl)\ntest \"$cf_ssl_incl\" = yes && AC_DEFINE(USE_NSS_COMPAT_INCL,1,[Define to 1 if we should use nss compatibility header])\nfi\n\nAC_MSG_CHECKING(if we can link to NSS compilant library)\nAC_TRY_LINK([\n#include <stdio.h>\n#ifdef USE_NSS_COMPAT_INCL\n#include <nss_compat_ossl/nss_compat_ossl.h>\n#else\n#include <ssl.h>\n#endif\n],\n\t[SSL_shutdown((SSL *)0)],\n\t[cf_ssl_library=yes],\n\t[cf_ssl_library=no])\nAC_MSG_RESULT($cf_ssl_library)\nif test \"$cf_ssl_library\" = yes ; then\n\tAC_DEFINE(USE_SSL,1,[Define to 1 if we should use SSL])\n\tAC_DEFINE(USE_X509_SUPPORT,1,[Define to 1 if the SSL library provides X509 support])\nelse\n\tAC_MSG_ERROR(Cannot link with NSS compilant libraries)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_OUR_MESSAGES version: 7 updated: 2004/09/12 19:45:55\ndnl ---------------\ndnl Check if we use the messages included with this program\ndnl\ndnl $1 specifies either Makefile or makefile, defaulting to the former.\ndnl\ndnl Sets variables which can be used to substitute in makefiles:\ndnl\tMSG_DIR_MAKE - to make ./po directory\ndnl\tSUB_MAKEFILE - makefile in ./po directory (see CF_BUNDLED_INTL)\ndnl\nAC_DEFUN([CF_OUR_MESSAGES],\n[\ncf_makefile=ifelse($1,,Makefile,$1)\n\nuse_our_messages=no\nif test \"$USE_NLS\" = yes ; then\nif test -d $srcdir/po ; then\nAC_MSG_CHECKING(if we should use included message-library)\n\tAC_ARG_ENABLE(included-msgs,\n\t[  --disable-included-msgs use included messages, for i18n support],\n\t[use_our_messages=$enableval],\n\t[use_our_messages=yes])\nfi\nAC_MSG_RESULT($use_our_messages)\nfi\n\nMSG_DIR_MAKE=\"#\"\nif test \"$use_our_messages\" = yes\nthen\n\tSUB_MAKEFILE=\"$SUB_MAKEFILE po/$cf_makefile.in:$srcdir/po/$cf_makefile.inn\"\n\tMSG_DIR_MAKE=\nfi\n\nAC_SUBST(MSG_DIR_MAKE)\nAC_SUBST(SUB_MAKEFILE)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PATHSEP version: 7 updated: 2015/04/12 15:39:00\ndnl ----------\ndnl Provide a value for the $PATH and similar separator (or amend the value\ndnl as provided in autoconf 2.5x).\nAC_DEFUN([CF_PATHSEP],\n[\n\tAC_MSG_CHECKING(for PATH separator)\n\tcase $cf_cv_system_name in\n\t(os2*)\tPATH_SEPARATOR=';'  ;;\n\t(*)\t${PATH_SEPARATOR:=':'}  ;;\n\tesac\nifelse([$1],,,[$1=$PATH_SEPARATOR])\n\tAC_SUBST(PATH_SEPARATOR)\n\tAC_MSG_RESULT($PATH_SEPARATOR)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PATH_PROG version: 9 updated: 2012/10/04 20:12:20\ndnl ------------\ndnl Check for a given program, defining corresponding symbol.\ndnl\t$1 = environment variable, which is suffixed by \"_PATH\" in the #define.\ndnl\t$2 = program name to find.\ndnl\t$3 = optional list of additional program names to test.\ndnl\ndnl If there is more than one token in the result, #define the remaining tokens\ndnl to $1_ARGS.  We need this for 'install' in particular.\ndnl\ndnl FIXME: we should allow this to be overridden by environment variables\ndnl\nAC_DEFUN([CF_PATH_PROG],[\nAC_REQUIRE([CF_PATHSEP])\ntest -z \"[$]$1\" && $1=$2\nAC_PATH_PROGS($1,[$]$1 $2 $3,[$]$1)\n\ncf_path_prog=\"\"\ncf_path_args=\"\"\nIFS=\"${IFS:- \t}\"; cf_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR\"\nfor cf_temp in $ac_cv_path_$1\ndo\n\tif test -z \"$cf_path_prog\" ; then\n\t\tif test \"$with_full_paths\" = yes ; then\n\t\t\tCF_PATH_SYNTAX(cf_temp,break)\n\t\t\tcf_path_prog=\"$cf_temp\"\n\t\telse\n\t\t\tcf_path_prog=\"`basename $cf_temp`\"\n\t\tfi\n\telif test -z \"$cf_path_args\" ; then\n\t\tcf_path_args=\"$cf_temp\"\n\telse\n\t\tcf_path_args=\"$cf_path_args $cf_temp\"\n\tfi\ndone\nIFS=\"$cf_save_ifs\"\n\nif test -n \"$cf_path_prog\" ; then\n\tCF_MSG_LOG(defining path for ${cf_path_prog})\n\tAC_DEFINE_UNQUOTED($1_PATH,\"$cf_path_prog\",Define to pathname $1)\n\ttest -n \"$cf_path_args\" && AC_DEFINE_UNQUOTED($1_ARGS,\"$cf_path_args\",Define to provide args for $1)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PATH_SYNTAX version: 16 updated: 2015/04/18 08:56:57\ndnl --------------\ndnl Check the argument to see that it looks like a pathname.  Rewrite it if it\ndnl begins with one of the prefix/exec_prefix variables, and then again if the\ndnl result begins with 'NONE'.  This is necessary to work around autoconf's\ndnl delayed evaluation of those symbols.\nAC_DEFUN([CF_PATH_SYNTAX],[\nif test \"x$prefix\" != xNONE; then\n\tcf_path_syntax=\"$prefix\"\nelse\n\tcf_path_syntax=\"$ac_default_prefix\"\nfi\n\ncase \".[$]$1\" in\n(.\\[$]\\(*\\)*|.\\'*\\'*)\n\t;;\n(..|./*|.\\\\*)\n\t;;\n(.[[a-zA-Z]]:[[\\\\/]]*) # OS/2 EMX\n\t;;\n(.\\[$]{*prefix}*|.\\[$]{*dir}*)\n\teval $1=\"[$]$1\"\n\tcase \".[$]$1\" in\n\t(.NONE/*)\n\t\t$1=`echo [$]$1 | sed -e s%NONE%$cf_path_syntax%`\n\t\t;;\n\tesac\n\t;;\n(.no|.NONE/*)\n\t$1=`echo [$]$1 | sed -e s%NONE%$cf_path_syntax%`\n\t;;\n(*)\n\tifelse([$2],,[AC_MSG_ERROR([expected a pathname, not \\\"[$]$1\\\"])],$2)\n\t;;\nesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PDCURSES_W32 version: 1 updated: 2013/10/07 06:13:11\ndnl ---------------\ndnl Configure for PDCurses' Win32 library, checking for definitions as well\ndnl which are needed to use its header file correctly.\nAC_DEFUN([CF_PDCURSES_W32],[\n\nAC_CHECK_LIB(pdcurses,initscr,[\n\tCF_ADD_LIBS(-lpdcurses)\n\tcf_cv_term_header=no\n\tcf_cv_unctrl_header=no\n\tAC_CHECK_FUNC(winwstr,[AC_DEFINE(PDC_WIDE)])\n\tAC_CHECK_FUNC(pdcurses_dll_iname,[AC_DEFINE(PDC_DLL_BUILD)])\n])\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PDCURSES_X11 version: 13 updated: 2012/10/06 16:39:58\ndnl ---------------\ndnl Configure for PDCurses' X11 library\nAC_DEFUN([CF_PDCURSES_X11],[\nAC_REQUIRE([CF_X_ATHENA])\n\nCF_ACVERSION_CHECK(2.52,\n\t[AC_CHECK_TOOLS(XCURSES_CONFIG, xcurses-config, none)],\n\t[AC_PATH_PROGS(XCURSES_CONFIG, xcurses-config, none)])\n\nif test \"$XCURSES_CONFIG\" != none ; then\n\nCPPFLAGS=\"$CPPFLAGS `$XCURSES_CONFIG --cflags`\"\nCF_ADD_LIBS(`$XCURSES_CONFIG --libs`)\n\ncf_cv_lib_XCurses=yes\n\nelse\n\nLDFLAGS=\"$LDFLAGS $X_LIBS\"\nCF_CHECK_CFLAGS($X_CFLAGS)\nAC_CHECK_LIB(X11,XOpenDisplay,\n\t[CF_ADD_LIBS(-lX11)],,\n\t[$X_PRE_LIBS $LIBS $X_EXTRA_LIBS])\nAC_CACHE_CHECK(for XCurses library,cf_cv_lib_XCurses,[\nCF_ADD_LIBS(-lXCurses)\nAC_TRY_LINK([\n#include <xcurses.h>\nchar *XCursesProgramName = \"test\";\n],[XCursesExit();],\n[cf_cv_lib_XCurses=yes],\n[cf_cv_lib_XCurses=no])\n])\n\nfi\n\nif test $cf_cv_lib_XCurses = yes ; then\n\tAC_DEFINE(UNIX,1,[Define to 1 if using PDCurses on Unix])\n\tAC_DEFINE(XCURSES,1,[Define to 1 if using PDCurses on Unix])\n\tAC_CHECK_HEADER(xcurses.h, AC_DEFINE(HAVE_XCURSES,1,[Define to 1 if using PDCurses on Unix]))\nelse\n\tAC_MSG_ERROR(Cannot link with XCurses)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PKG_CONFIG version: 10 updated: 2015/04/26 18:06:58\ndnl -------------\ndnl Check for the package-config program, unless disabled by command-line.\nAC_DEFUN([CF_PKG_CONFIG],\n[\nAC_MSG_CHECKING(if you want to use pkg-config)\nAC_ARG_WITH(pkg-config,\n\t[  --with-pkg-config{=path} enable/disable use of pkg-config],\n\t[cf_pkg_config=$withval],\n\t[cf_pkg_config=yes])\nAC_MSG_RESULT($cf_pkg_config)\n\ncase $cf_pkg_config in\n(no)\n\tPKG_CONFIG=none\n\t;;\n(yes)\n\tCF_ACVERSION_CHECK(2.52,\n\t\t[AC_PATH_TOOL(PKG_CONFIG, pkg-config, none)],\n\t\t[AC_PATH_PROG(PKG_CONFIG, pkg-config, none)])\n\t;;\n(*)\n\tPKG_CONFIG=$withval\n\t;;\nesac\n\ntest -z \"$PKG_CONFIG\" && PKG_CONFIG=none\nif test \"$PKG_CONFIG\" != none ; then\n\tCF_PATH_SYNTAX(PKG_CONFIG)\nelif test \"x$cf_pkg_config\" != xno ; then\n\tAC_MSG_WARN(pkg-config is not installed)\nfi\n\nAC_SUBST(PKG_CONFIG)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_POSIX_C_SOURCE version: 9 updated: 2015/04/12 15:39:00\ndnl -----------------\ndnl Define _POSIX_C_SOURCE to the given level, and _POSIX_SOURCE if needed.\ndnl\ndnl\tPOSIX.1-1990\t\t\t\t_POSIX_SOURCE\ndnl\tPOSIX.1-1990 and\t\t\t_POSIX_SOURCE and\ndnl\t\tPOSIX.2-1992 C-Language\t\t\t_POSIX_C_SOURCE=2\ndnl\t\tBindings Option\ndnl\tPOSIX.1b-1993\t\t\t\t_POSIX_C_SOURCE=199309L\ndnl\tPOSIX.1c-1996\t\t\t\t_POSIX_C_SOURCE=199506L\ndnl\tX/Open 2000\t\t\t\t_POSIX_C_SOURCE=200112L\ndnl\ndnl Parameters:\ndnl\t$1 is the nominal value for _POSIX_C_SOURCE\nAC_DEFUN([CF_POSIX_C_SOURCE],\n[\ncf_POSIX_C_SOURCE=ifelse([$1],,199506L,[$1])\n\ncf_save_CFLAGS=\"$CFLAGS\"\ncf_save_CPPFLAGS=\"$CPPFLAGS\"\n\nCF_REMOVE_DEFINE(cf_trim_CFLAGS,$cf_save_CFLAGS,_POSIX_C_SOURCE)\nCF_REMOVE_DEFINE(cf_trim_CPPFLAGS,$cf_save_CPPFLAGS,_POSIX_C_SOURCE)\n\nAC_CACHE_CHECK(if we should define _POSIX_C_SOURCE,cf_cv_posix_c_source,[\n\tCF_MSG_LOG(if the symbol is already defined go no further)\n\tAC_TRY_COMPILE([#include <sys/types.h>],[\n#ifndef _POSIX_C_SOURCE\nmake an error\n#endif],\n\t[cf_cv_posix_c_source=no],\n\t[cf_want_posix_source=no\n\t case .$cf_POSIX_C_SOURCE in\n\t (.[[12]]??*)\n\t\tcf_cv_posix_c_source=\"-D_POSIX_C_SOURCE=$cf_POSIX_C_SOURCE\"\n\t\t;;\n\t (.2)\n\t\tcf_cv_posix_c_source=\"-D_POSIX_C_SOURCE=$cf_POSIX_C_SOURCE\"\n\t\tcf_want_posix_source=yes\n\t\t;;\n\t (.*)\n\t\tcf_want_posix_source=yes\n\t\t;;\n\t esac\n\t if test \"$cf_want_posix_source\" = yes ; then\n\t\tAC_TRY_COMPILE([#include <sys/types.h>],[\n#ifdef _POSIX_SOURCE\nmake an error\n#endif],[],\n\t\tcf_cv_posix_c_source=\"$cf_cv_posix_c_source -D_POSIX_SOURCE\")\n\t fi\n\t CF_MSG_LOG(ifdef from value $cf_POSIX_C_SOURCE)\n\t CFLAGS=\"$cf_trim_CFLAGS\"\n\t CPPFLAGS=\"$cf_trim_CPPFLAGS $cf_cv_posix_c_source\"\n\t CF_MSG_LOG(if the second compile does not leave our definition intact error)\n\t AC_TRY_COMPILE([#include <sys/types.h>],[\n#ifndef _POSIX_C_SOURCE\nmake an error\n#endif],,\n\t [cf_cv_posix_c_source=no])\n\t CFLAGS=\"$cf_save_CFLAGS\"\n\t CPPFLAGS=\"$cf_save_CPPFLAGS\"\n\t])\n])\n\nif test \"$cf_cv_posix_c_source\" != no ; then\n\tCFLAGS=\"$cf_trim_CFLAGS\"\n\tCPPFLAGS=\"$cf_trim_CPPFLAGS\"\n\tCF_ADD_CFLAGS($cf_cv_posix_c_source)\nfi\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_AR version: 1 updated: 2009/01/01 20:15:22\ndnl ----------\ndnl Check for archiver \"ar\".\nAC_DEFUN([CF_PROG_AR],[\nAC_CHECK_TOOL(AR, ar, ar)\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_CC version: 4 updated: 2014/07/12 18:57:58\ndnl ----------\ndnl standard check for CC, plus followup sanity checks\ndnl $1 = optional parameter to pass to AC_PROG_CC to specify compiler name\nAC_DEFUN([CF_PROG_CC],[\nifelse($1,,[AC_PROG_CC],[AC_PROG_CC($1)])\nCF_GCC_VERSION\nCF_ACVERSION_CHECK(2.52,\n\t[AC_PROG_CC_STDC],\n\t[CF_ANSI_CC_REQD])\nCF_CC_ENV_FLAGS\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_CPP_COMMENTS version: 1 updated: 2017/07/02 14:31:07\ndnl --------------------\ndnl Ask for preprocessor \"-C\" option if we can get it.\nAC_DEFUN([CF_PROG_CPP_COMMENTS],[\nAC_REQUIRE([AC_PROG_CPP])\nAC_MSG_CHECKING(if preprocessor -C option works)\nAC_CACHE_VAL(cf_cv_prog_cpp_comments,[\ncf_cv_prog_cpp_comments=no\ncat >conftest.c <<CF_EOF\nint main(void)\n{\n\t/* COMMENT */\n\treturn 0;\n}\nCF_EOF\nif ( $CPP -C conftest.c >conftest.i 2>/dev/null )\nthen\n\tif ( grep COMMENT conftest.i >/dev/null 2>/dev/null )\n\tthen\n\t\tcf_cv_prog_cpp_comments=yes\n\tfi\nfi\nrm -f conftest.[[ci]]\n])\nAC_MSG_RESULT($cf_cv_prog_cpp_comments)\nif test x$cf_cv_prog_cpp_comments = xyes\nthen\n\tCPP=\"$CPP -C\"\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_EXT version: 13 updated: 2015/04/18 09:03:58\ndnl -----------\ndnl Compute $PROG_EXT, used for non-Unix ports, such as OS/2 EMX.\nAC_DEFUN([CF_PROG_EXT],\n[\nAC_REQUIRE([CF_CHECK_CACHE])\ncase $cf_cv_system_name in\n(os2*)\n\tCFLAGS=\"$CFLAGS -Zmt\"\n\tCPPFLAGS=\"$CPPFLAGS -D__ST_MT_ERRNO__\"\n\tCXXFLAGS=\"$CXXFLAGS -Zmt\"\n\t# autoconf's macro sets -Zexe and suffix both, which conflict:w\n\tLDFLAGS=\"$LDFLAGS -Zmt -Zcrtdll\"\n\tac_cv_exeext=.exe\n\t;;\nesac\n\nAC_EXEEXT\nAC_OBJEXT\n\nPROG_EXT=\"$EXEEXT\"\nAC_SUBST(PROG_EXT)\ntest -n \"$PROG_EXT\" && AC_DEFINE_UNQUOTED(PROG_EXT,\"$PROG_EXT\",[Define to the program extension (normally blank)])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_LINT version: 3 updated: 2016/05/22 15:25:54\ndnl ------------\nAC_DEFUN([CF_PROG_LINT],\n[\nAC_CHECK_PROGS(LINT, lint cppcheck splint)\nAC_SUBST(LINT_OPTS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_RANLIB version: 1 updated: 2009/01/01 20:15:22\ndnl --------------\ndnl Check for ranlib.\ndnl\ndnl TODO: make this conditionally depend on autoconf version, since the later\ndnl versions of autoconf use check-tool.\nAC_DEFUN([CF_PROG_RANLIB],[\nAC_CHECK_TOOL(RANLIB, ranlib, ':')\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_RECHECK_FUNC version: 3 updated: 2000/10/18 19:29:13\ndnl ---------------\ndnl Re-check on a function to see if we can pick it up by adding a library.\ndnl\t$1 = function to check\ndnl\t$2 = library to check in\ndnl\t$3 = environment to update (e.g., $LIBS)\ndnl\t$4 = what to do if this fails\ndnl\ndnl This uses 'unset' if the shell happens to support it, but leaves the\ndnl configuration variable set to 'unknown' if not.  This is a little better\ndnl than the normal autoconf test, which gives misleading results if a test\ndnl for the function is made (e.g., with AC_CHECK_FUNC) after this macro is\ndnl used (autoconf does not distinguish between a null token and one that is\ndnl set to 'no').\nAC_DEFUN([CF_RECHECK_FUNC],[\nAC_CHECK_LIB($2,$1,[\n\tCF_UPPER(cf_tr_func,$1)\n\tAC_DEFINE_UNQUOTED(HAVE_$cf_tr_func)\n\tac_cv_func_$1=yes\n\tif test \"$cf_used_lib_$2\" != yes ; then cf_used_lib_$2=yes; $3=\"-l$2 [$]$3\"; fi],[\n\tac_cv_func_$1=unknown\n\tunset ac_cv_func_$1 2>/dev/null\n\t$4],\n\t[[$]$3])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_REMOVE_BROKEN version: 4 updated: 2012/11/08 20:57:52\ndnl ----------------\ndnl Check for broken definition of 'remove()'.  This is (in particular) broken\ndnl on the older version of SCO (I'd cite version if I knew where to look) by\ndnl having <stdio.h> #define remove to __unlink, which appears in no library.\ndnl\ndnl Fortuitously, we can combine this with a more general test: do we have\ndnl 'unlink()' but no 'remove()'.  Note, however, that we cannot simply #define\ndnl remove to unlink, but have to make a fallback function.\ndnl\nAC_DEFUN([CF_REMOVE_BROKEN],\n[\nAC_MSG_CHECKING(for broken/missing definition of remove)\nAC_CACHE_VAL(cf_cv_baddef_remove,[\nAC_TRY_LINK(\n\t[#include <stdio.h>],\n\t[remove(\"dummy\")],\n\t[cf_cv_baddef_remove=no],\n\t[AC_TRY_LINK(\n\t\t[#include <stdio.h>\n\t\tint __unlink(name) { return unlink(name); } ],\n\t\t[remove(\"dummy\")],\n\t\t[cf_cv_baddef_remove=yes],\n\t\t[cf_cv_baddef_remove=unknown])\n\t])\n])\nAC_MSG_RESULT($cf_cv_baddef_remove)\ntest \"$cf_cv_baddef_remove\" != no && AC_DEFINE(NEED_REMOVE,1,[Define to 1 if we should use remove rather than unlink])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_REMOVE_DEFINE version: 3 updated: 2010/01/09 11:05:50\ndnl ----------------\ndnl Remove all -U and -D options that refer to the given symbol from a list\ndnl of C compiler options.  This works around the problem that not all\ndnl compilers process -U and -D options from left-to-right, so a -U option\ndnl cannot be used to cancel the effect of a preceding -D option.\ndnl\ndnl $1 = target (which could be the same as the source variable)\ndnl $2 = source (including '$')\ndnl $3 = symbol to remove\ndefine([CF_REMOVE_DEFINE],\n[\n$1=`echo \"$2\" | \\\n\tsed\t-e 's/-[[UD]]'\"$3\"'\\(=[[^ \t]]*\\)\\?[[ \t]]/ /g' \\\n\t\t-e 's/-[[UD]]'\"$3\"'\\(=[[^ \t]]*\\)\\?[$]//g'`\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_RPATH_HACK version: 11 updated: 2013/09/01 13:02:00\ndnl -------------\nAC_DEFUN([CF_RPATH_HACK],\n[\nAC_REQUIRE([CF_LD_RPATH_OPT])\nAC_MSG_CHECKING(for updated LDFLAGS)\nif test -n \"$LD_RPATH_OPT\" ; then\n\tAC_MSG_RESULT(maybe)\n\n\tAC_CHECK_PROGS(cf_ldd_prog,ldd,no)\n\tcf_rpath_list=\"/usr/lib /lib\"\n\tif test \"$cf_ldd_prog\" != no\n\tthen\n\t\tcf_rpath_oops=\n\nAC_TRY_LINK([#include <stdio.h>],\n\t\t[printf(\"Hello\");],\n\t\t[cf_rpath_oops=`$cf_ldd_prog conftest$ac_exeext | fgrep ' not found' | sed -e 's% =>.*$%%' |sort | uniq`\n\t\t cf_rpath_list=`$cf_ldd_prog conftest$ac_exeext | fgrep / | sed -e 's%^.*[[ \t]]/%/%' -e 's%/[[^/]][[^/]]*$%%' |sort | uniq`])\n\n\t\t# If we passed the link-test, but get a \"not found\" on a given library,\n\t\t# this could be due to inept reconfiguration of gcc to make it only\n\t\t# partly honor /usr/local/lib (or whatever).  Sometimes this behavior\n\t\t# is intentional, e.g., installing gcc in /usr/bin and suppressing the\n\t\t# /usr/local libraries.\n\t\tif test -n \"$cf_rpath_oops\"\n\t\tthen\n\t\t\tfor cf_rpath_src in $cf_rpath_oops\n\t\t\tdo\n\t\t\t\tfor cf_rpath_dir in \\\n\t\t\t\t\t/usr/local \\\n\t\t\t\t\t/usr/pkg \\\n\t\t\t\t\t/opt/sfw\n\t\t\t\tdo\n\t\t\t\t\tif test -f $cf_rpath_dir/lib/$cf_rpath_src\n\t\t\t\t\tthen\n\t\t\t\t\t\tCF_VERBOSE(...adding -L$cf_rpath_dir/lib to LDFLAGS for $cf_rpath_src)\n\t\t\t\t\t\tLDFLAGS=\"$LDFLAGS -L$cf_rpath_dir/lib\"\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\tdone\n\t\tfi\n\tfi\n\n\tCF_VERBOSE(...checking EXTRA_LDFLAGS $EXTRA_LDFLAGS)\n\n\tCF_RPATH_HACK_2(LDFLAGS)\n\tCF_RPATH_HACK_2(LIBS)\n\n\tCF_VERBOSE(...checked EXTRA_LDFLAGS $EXTRA_LDFLAGS)\nelse\n\tAC_MSG_RESULT(no)\nfi\nAC_SUBST(EXTRA_LDFLAGS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_RPATH_HACK_2 version: 7 updated: 2015/04/12 15:39:00\ndnl ---------------\ndnl Do one set of substitutions for CF_RPATH_HACK, adding an rpath option to\ndnl EXTRA_LDFLAGS for each -L option found.\ndnl\ndnl $cf_rpath_list contains a list of directories to ignore.\ndnl\ndnl $1 = variable name to update.  The LDFLAGS variable should be the only one,\ndnl      but LIBS often has misplaced -L options.\nAC_DEFUN([CF_RPATH_HACK_2],\n[\nCF_VERBOSE(...checking $1 [$]$1)\n\ncf_rpath_dst=\nfor cf_rpath_src in [$]$1\ndo\n\tcase $cf_rpath_src in\n\t(-L*)\n\n\t\t# check if this refers to a directory which we will ignore\n\t\tcf_rpath_skip=no\n\t\tif test -n \"$cf_rpath_list\"\n\t\tthen\n\t\t\tfor cf_rpath_item in $cf_rpath_list\n\t\t\tdo\n\t\t\t\tif test \"x$cf_rpath_src\" = \"x-L$cf_rpath_item\"\n\t\t\t\tthen\n\t\t\t\t\tcf_rpath_skip=yes\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\t\tfi\n\n\t\tif test \"$cf_rpath_skip\" = no\n\t\tthen\n\t\t\t# transform the option\n\t\t\tif test \"$LD_RPATH_OPT\" = \"-R \" ; then\n\t\t\t\tcf_rpath_tmp=`echo \"$cf_rpath_src\" |sed -e \"s%-L%-R %\"`\n\t\t\telse\n\t\t\t\tcf_rpath_tmp=`echo \"$cf_rpath_src\" |sed -e \"s%-L%$LD_RPATH_OPT%\"`\n\t\t\tfi\n\n\t\t\t# if we have not already added this, add it now\n\t\t\tcf_rpath_tst=`echo \"$EXTRA_LDFLAGS\" | sed -e \"s%$cf_rpath_tmp %%\"`\n\t\t\tif test \"x$cf_rpath_tst\" = \"x$EXTRA_LDFLAGS\"\n\t\t\tthen\n\t\t\t\tCF_VERBOSE(...Filter $cf_rpath_src ->$cf_rpath_tmp)\n\t\t\t\tEXTRA_LDFLAGS=\"$cf_rpath_tmp $EXTRA_LDFLAGS\"\n\t\t\tfi\n\t\tfi\n\t\t;;\n\tesac\n\tcf_rpath_dst=\"$cf_rpath_dst $cf_rpath_src\"\ndone\n$1=$cf_rpath_dst\n\nCF_VERBOSE(...checked $1 [$]$1)\nAC_SUBST(EXTRA_LDFLAGS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SET_ERRNO version: 6 updated: 2017/05/10 18:31:29\ndnl ------------\ndnl Check if 'errno' is declared in a fashion that lets us set it.\nAC_DEFUN([CF_SET_ERRNO],\n[\nAC_CACHE_CHECK(if we can set errno,cf_cv_set_errno,[\nAC_TRY_RUN([\n#include <errno.h>\nint main(void)\n{\n\terrno = 255;\n\t${cf_cv_main_return:-return}(errno != 255);\n}],\n\t[cf_cv_set_errno=yes],\n\t[cf_cv_set_errno=no],\n\t[AC_TRY_LINK(\n\t\t[#include <errno.h>],\n\t\t[errno = 255],\n\t\t[cf_cv_set_errno=maybe],\n\t\t[cf_cv_set_errno=no])])\n])\ntest \"$cf_cv_set_errno\" != no && AC_DEFINE(CAN_SET_ERRNO,1,[Define to 1 if we can set errno])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SIGWINCH version: 1 updated: 2006/04/02 16:41:09\ndnl -----------\ndnl Use this macro after CF_XOPEN_SOURCE, but do not require it (not all\ndnl programs need this test).\ndnl\ndnl This is really a MacOS X 10.4.3 workaround.  Defining _POSIX_C_SOURCE\ndnl forces SIGWINCH to be undefined (breaks xterm, ncurses).  Oddly, the struct\ndnl winsize declaration is left alone - we may revisit this if Apple choose to\ndnl break that part of the interface as well.\nAC_DEFUN([CF_SIGWINCH],\n[\nAC_CACHE_CHECK(if SIGWINCH is defined,cf_cv_define_sigwinch,[\n\tAC_TRY_COMPILE([\n#include <sys/types.h>\n#include <sys/signal.h>\n],[int x = SIGWINCH],\n\t[cf_cv_define_sigwinch=yes],\n\t[AC_TRY_COMPILE([\n#undef _XOPEN_SOURCE\n#undef _POSIX_SOURCE\n#undef _POSIX_C_SOURCE\n#include <sys/types.h>\n#include <sys/signal.h>\n],[int x = SIGWINCH],\n\t[cf_cv_define_sigwinch=maybe],\n\t[cf_cv_define_sigwinch=no])\n])\n])\n\nif test \"$cf_cv_define_sigwinch\" = maybe ; then\nAC_CACHE_CHECK(for actual SIGWINCH definition,cf_cv_fixup_sigwinch,[\ncf_cv_fixup_sigwinch=unknown\ncf_sigwinch=32\nwhile test $cf_sigwinch != 1\ndo\n\tAC_TRY_COMPILE([\n#undef _XOPEN_SOURCE\n#undef _POSIX_SOURCE\n#undef _POSIX_C_SOURCE\n#include <sys/types.h>\n#include <sys/signal.h>\n],[\n#if SIGWINCH != $cf_sigwinch\nmake an error\n#endif\nint x = SIGWINCH],\n\t[cf_cv_fixup_sigwinch=$cf_sigwinch\n\t break])\n\ncf_sigwinch=`expr $cf_sigwinch - 1`\ndone\n])\n\n\tif test \"$cf_cv_fixup_sigwinch\" != unknown ; then\n\t\tCPPFLAGS=\"$CPPFLAGS -DSIGWINCH=$cf_cv_fixup_sigwinch\"\n\tfi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SIZECHANGE version: 11 updated: 2015/04/18 08:56:57\ndnl -------------\ndnl Check for definitions & structures needed for window size-changing\ndnl FIXME: check that this works with \"snake\" (HP-UX 10.x)\nAC_DEFUN([CF_SIZECHANGE],\n[\nAC_REQUIRE([CF_STRUCT_TERMIOS])\nAC_CACHE_CHECK(declaration of size-change, cf_cv_sizechange,[\n\tcf_cv_sizechange=unknown\n\tcf_save_CPPFLAGS=\"$CPPFLAGS\"\n\nfor cf_opts in \"\" \"NEED_PTEM_H\"\ndo\n\n\tCPPFLAGS=\"$cf_save_CPPFLAGS\"\n\ttest -n \"$cf_opts\" && CPPFLAGS=\"$CPPFLAGS -D$cf_opts\"\n\tAC_TRY_COMPILE([#include <sys/types.h>\n#ifdef HAVE_TERMIOS_H\n#include <termios.h>\n#else\n#ifdef HAVE_TERMIO_H\n#include <termio.h>\n#endif\n#endif\n#ifdef NEED_PTEM_H\n/* This is a workaround for SCO:  they neglected to define struct winsize in\n * termios.h -- it's only in termio.h and ptem.h\n */\n#include        <sys/stream.h>\n#include        <sys/ptem.h>\n#endif\n#if !defined(sun) || !defined(HAVE_TERMIOS_H)\n#include <sys/ioctl.h>\n#endif\n],[\n#ifdef TIOCGSIZE\n\tstruct ttysize win;\t/* FIXME: what system is this? */\n\tint y = win.ts_lines;\n\tint x = win.ts_cols;\n#else\n#ifdef TIOCGWINSZ\n\tstruct winsize win;\n\tint y = win.ws_row;\n\tint x = win.ws_col;\n#else\n\tno TIOCGSIZE or TIOCGWINSZ\n#endif /* TIOCGWINSZ */\n#endif /* TIOCGSIZE */\n\t],\n\t[cf_cv_sizechange=yes],\n\t[cf_cv_sizechange=no])\n\n\tCPPFLAGS=\"$cf_save_CPPFLAGS\"\n\tif test \"$cf_cv_sizechange\" = yes ; then\n\t\techo \"size-change succeeded ($cf_opts)\" >&AC_FD_CC\n\t\ttest -n \"$cf_opts\" && cf_cv_sizechange=\"$cf_opts\"\n\t\tbreak\n\tfi\ndone\n])\nif test \"$cf_cv_sizechange\" != no ; then\n\tAC_DEFINE(HAVE_SIZECHANGE,1,[Define to 1 if sizechar declarations are provided])\n\tcase $cf_cv_sizechange in\n\t(NEED*)\n\t\tAC_DEFINE_UNQUOTED($cf_cv_sizechange )\n\t\t;;\n\tesac\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SLANG_CPPFLAGS version: 11 updated: 2015/04/15 19:08:48\ndnl -----------------\ndnl Look for the slang header files in the standard places, adjusting the\ndnl CPPFLAGS variable.\ndnl\ndnl $1 = parameter to search for \"slang2\" class, e.g., for pkgsrc.\nAC_DEFUN([CF_SLANG_CPPFLAGS],\n[\nAC_CACHE_CHECK(for $1 header file,cf_cv_$1_header,[\n\tcf_cv_$1_header=no\n\tAC_TRY_COMPILE([#include <slang.h>],\n\t[printf(\"%s\\n\", SLANG_VERSION)],\n\t[cf_cv_$1_header=predefined],[\n\tCF_HEADER_PATH(cf_search,$1)\n\tfor cf_incdir in $cf_search\n\tdo\n\t\tfor cf_header in \\\n\t\t\tslang.h\n\t\tdo\n\t\t\techo trying $cf_incdir/$cf_header 1>&AC_FD_CC\n\t\t\tif egrep \"SLANG_VERSION\" $cf_incdir/$cf_header 1>&AC_FD_CC 2>&1; then\n\t\t\t\tcf_cv_$1_header=$cf_incdir/$cf_header\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\t\ttest \"$cf_cv_$1_header\" != no && break\n\tdone\n\t])])\n\nif test \"x$cf_cv_$1_header\" != xno\nthen\n\tAC_DEFINE(USE_SLANG,1,[Define to 1 if we should use s-lang library])\n\n\tCF_DIRNAME(cf_incdir,$cf_cv_$1_header)\n\n\tcase $cf_cv_$1_header in\n\t(predefined)\n\t\t;;\n\t(*)\n\t\tCF_ADD_INCDIR($cf_incdir)\n\t\t;;\n\tesac\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SLANG_LIBS version: 9 updated: 2015/04/15 19:08:48\ndnl -------------\ndnl Look for the slang library.\ndnl\ndnl $1 = the actual library name, usually \"slang\"\nAC_DEFUN([CF_SLANG_LIBS],\n[\ncf_slang_LIBS1=\"$LIBS\"\nCF_TERMCAP_LIBS\ncf_slang_LIBS2=\"$LIBS\"\nAC_CHECK_FUNC(acos,,[CF_RECHECK_FUNC(acos,m,LIBS)])\ncase $host_os in\n(os2*)\n\tCF_FIND_LIBRARY(video,video,\n\t\t[#include <sys/video.h>],\n\t\t[v_init()],\n\t\tv_init)\n\t;;\nesac\nCF_FIND_LIBRARY($1,$1,\n\t[#include <slang.h>],\n\t[SLtt_get_screen_size()],\n\tSLtt_get_screen_size)\ncf_slang_LIBS3=\"$LIBS\"\nAC_MSG_CHECKING(if we can link $1 without termcap)\nif test -n \"`echo $cf_slang_LIBS1 | sed -e 's/ //g'`\" ; then\n\tcf_exclude=`echo \".$cf_slang_LIBS2\" | sed -e \"s%$cf_slang_LIBS1%%\" -e 's%^.%%'`\nelse\n\tcf_exclude=\"$cf_slang_LIBS2\"\nfi\nLIBS=`echo \".$cf_slang_LIBS3\" | sed -e \"s%$cf_exclude%%\" -e 's%^.%%'`\nAC_TRY_LINK([#include <slang.h>],\n\t[SLtt_get_screen_size()],\n\t[cf_result=yes],\n\t[cf_result=no])\nAC_MSG_RESULT($cf_result)\ntest $cf_result = no && LIBS=\"$cf_slang_LIBS3\"\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SLANG_UNIX_DEFS version: 6 updated: 2012/11/08 20:57:52\ndnl ------------------\ndnl Slang's header files rely on some predefined symbols to declare variables\ndnl that we might find useful.  This check is needed, because those symbols\ndnl are generally not available.\nAC_DEFUN([CF_SLANG_UNIX_DEFS],\n[\n\nCF_SLANG_CPPFLAGS(slang)\nif test \"x$cf_cv_slang_header\" != xno\nthen\n\tCF_SLANG_LIBS(slang)\nelse\n\tCF_SLANG_CPPFLAGS(slang2)\n\tif test \"x$cf_cv_slang2_header\" != xno\n\tthen\n\t\tCF_SLANG_LIBS(slang2)\n\telse\n\t\tAC_MSG_ERROR(cannot find slang headers)\n\tfi\nfi\n\n# There's an unofficial set of patches for slang that gives it some limited\n# UTF8 capability.  Unfortunately it won't compile unless one defines UTF8.\nAC_CACHE_CHECK(if we must define UTF8,cf_cv_slang_utf8,[\n\tAC_TRY_COMPILE([#include <slang.h>],\n\t[SLtt_get_screen_size()],\n\t[cf_cv_slang_utf8=no],\n\t[\n\tAC_TRY_COMPILE([\n#define UTF8\n#include <slang.h>],\n\t[SLtt_get_screen_size()],\n\t[cf_cv_slang_utf8=yes],\n\t[cf_cv_slang_utf8=unknown])])\n])\n\nif test \"$cf_cv_slang_utf8\" = yes ; then\n\tAC_DEFINE(UTF8,1,[Define to 1 if we must define UTF-8 for s-lang headers])\nfi\n\nAC_CACHE_CHECK(if we must tell slang this is UNIX,cf_cv_slang_unix,[\nAC_TRY_LINK([#include <slang.h>],\n\t[\n#ifdef REAL_UNIX_SYSTEM\nmake an error\n#else\nextern int SLang_TT_Baud_Rate;\nSLang_TT_Baud_Rate = 1\n#endif\n],\n\t[cf_cv_slang_unix=yes],\n\t[cf_cv_slang_unix=no])\n])\ntest $cf_cv_slang_unix = yes && AC_DEFINE(REAL_UNIX_SYSTEM,1,[Define to 1 if we must define REAL_UNIX_SYSTEM to compile with s-lang headers])\n\nCF_CHECK_TYPE(SLsmg_Color_Type,int,[#include <slang.h>])\nCF_CHECK_TYPE(SLtt_Char_Type,unsigned long,[#include <slang.h>])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SOCKS version: 9 updated: 2012/11/08 20:57:52\ndnl --------\ndnl Check for socks library\ndnl $1 = the [optional] directory in which the library may be found\nAC_DEFUN([CF_SOCKS],[\n  CF_ADD_OPTIONAL_PATH($1, [socks library])\n  CF_FIND_LINKAGE([\n#include <stdio.h>\n],[\n      Raccept((char *)0)\n],\n      socks)\n\n  if test \"x$cf_cv_find_linkage_socks\" = \"xyes\" ; then\n    AC_DEFINE(SOCKS,1,[Define to 1 if we are using socks library])\n\n    AC_DEFINE(accept,Raccept,[Define to override function name if using socks library])\n    AC_DEFINE(bind,Rbind,[Define to override function name if using socks library])\n    AC_DEFINE(connect,Rconnect,[Define to override function name if using socks library])\n    AC_DEFINE(getpeername,Rgetpeername,[Define to override function name if using socks library])\n    AC_DEFINE(getsockname,Rgetsockname,[Define to override function name if using socks library])\n    AC_DEFINE(listen,Rlisten,[Define to override function name if using socks library])\n    AC_DEFINE(recvfrom,Rrecvfrom,[Define to override function name if using socks library])\n    AC_DEFINE(select,Rselect,[Define to override function name if using socks library])\n  else\n    AC_MSG_ERROR(cannot link with socks library)\n  fi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SOCKS5 version: 12 updated: 2012/11/08 20:57:52\ndnl ---------\ndnl Check for socks5 configuration\ndnl $1 = the [optional] directory in which the library may be found\nAC_DEFUN([CF_SOCKS5],[\n  CF_ADD_OPTIONAL_PATH($1, [socks5 library])\n\nCF_ADD_LIBS(-lsocks5)\n\nAC_DEFINE(USE_SOCKS5,1,[Define to 1 if we are using socks5 library])\nAC_DEFINE(SOCKS,1,[Define to 1 if we are using socks library])\n\nAC_MSG_CHECKING(if the socks library uses socks4 prefix)\ncf_use_socks4=error\nAC_TRY_LINK([\n#include <socks.h>],[\n\tRinit((char *)0)],\n\t[AC_DEFINE(USE_SOCKS4_PREFIX,1,[Define to 1 if socks library uses socks4 prefix])\n\t cf_use_socks4=yes],\n\t[AC_TRY_LINK([#include <socks.h>],\n\t\t[SOCKSinit((char *)0)],\n\t\t[cf_use_socks4=no],\n\t\t[AC_MSG_ERROR(Cannot link with socks5 library)])])\nAC_MSG_RESULT($cf_use_socks4)\n\nif test \"$cf_use_socks4\" = \"yes\" ; then\n\tAC_DEFINE(accept,Raccept)\n\tAC_DEFINE(bind,Rbind)\n\tAC_DEFINE(connect,Rconnect)\n\tAC_DEFINE(getpeername,Rgetpeername)\n\tAC_DEFINE(getsockname,Rgetsockname)\n\tAC_DEFINE(listen,Rlisten)\n\tAC_DEFINE(recvfrom,Rrecvfrom)\n\tAC_DEFINE(select,Rselect)\nelse\n\tAC_DEFINE(accept,SOCKSaccept)\n\tAC_DEFINE(getpeername,SOCKSgetpeername)\n\tAC_DEFINE(getsockname,SOCKSgetsockname)\n\tAC_DEFINE(recvfrom,SOCKSrecvfrom)\nfi\n\nAC_MSG_CHECKING(if socks5p.h is available)\nAC_TRY_COMPILE([\n#define INCLUDE_PROTOTYPES\n#include <socks.h>],[\n\tinit((char *)0)],\n\t[cf_use_socks5p_h=yes],\n\t[cf_use_socks5p_h=no])\nAC_MSG_RESULT($cf_use_socks5p_h)\n\ntest \"$cf_use_socks5p_h\" = yes && AC_DEFINE(INCLUDE_PROTOTYPES,1,[Define to 1 if needed to declare prototypes in socks headers])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SRAND version: 13 updated: 2016/09/05 12:39:46\ndnl --------\ndnl Check for functions similar to srand() and rand().  lrand48() and random()\ndnl return a 31-bit value, while rand() returns a value less than RAND_MAX\ndnl which usually is only 16-bits.\ndnl\ndnl On MirOS, use arc4random_push() and arc4random().\ndnl Some systems support an asymmetric variation of this interface.\ndnl\ndnl $1 = optional prefix for resulting shell variables.  The default \"my_\"\ndnl      gives $my_srand and $my_rand to the caller, as well as MY_RAND_MAX.\ndnl      These are all AC_SUBST'd and AC_DEFINE'd.\nAC_DEFUN([CF_SRAND],[\nAC_CACHE_CHECK(for random-integer functions, cf_cv_srand_func,[\ncf_cv_srand_func=unknown\nfor cf_func in arc4random_push/arc4random arc4random_stir/arc4random srandom/random srand48/lrand48 srand/rand\ndo\n\tCF_SRAND_PARSE($cf_func,cf_srand_func,cf_rand_func)\n\nAC_TRY_LINK([\n#ifdef HAVE_STDLIB_H\n#include <stdlib.h>\n#endif\n#ifdef HAVE_LIMITS_H\n#include <limits.h>\n#endif\n],[long seed = 1; $cf_srand_func(seed); seed = $cf_rand_func()],\n[cf_cv_srand_func=$cf_func\n break])\ndone\n])\nif test \"$cf_cv_srand_func\" != unknown ; then\n\tAC_CACHE_CHECK(for range of random-integers, cf_cv_rand_max,[\n\t\tcase $cf_cv_srand_func in\n\t\t(srand/rand)\n\t\t\tcf_cv_rand_max=RAND_MAX\n\t\t\tcf_rand_max=16\n\t\t\t;;\n\t\t(*/arc4random)\n\t\t\tcf_cv_rand_max=0xFFFFFFFFUL\n\t\t\tcf_rand_max=32\n\t\t\t;;\n\t\t(*)\n\t\t\tcf_cv_rand_max=INT_MAX\n\t\t\tcf_rand_max=31\n\t\t\t;;\n\t\tesac\n\t\tAC_TRY_COMPILE([\n#ifdef HAVE_STDLIB_H\n#include <stdlib.h>\n#endif\n#ifdef HAVE_LIMITS_H\n#include <limits.h>\n#endif\n\t\t],[long x = $cf_cv_rand_max],,\n\t\t[cf_cv_rand_max=\"(1UL<<$cf_rand_max)-1\"])\n\t])\n\n\tcase $cf_cv_srand_func in\n\t(*/arc4random)\n\t\tAC_MSG_CHECKING(if <bsd/stdlib.h> should be included)\n\t\tAC_TRY_COMPILE([#include <bsd/stdlib.h>],\n\t\t\t\t\t   [void *arc4random(int);\n\t\t\t\t\t\tvoid *x = arc4random(1)],\n\t\t\t\t\t   [cf_bsd_stdlib_h=no],\n\t\t\t\t\t   [AC_TRY_COMPILE([#include <bsd/stdlib.h>],\n\t\t\t\t\t\t\t\t\t   [unsigned x = arc4random()],\n\t\t\t\t\t\t\t\t\t   [cf_bsd_stdlib_h=yes],\n\t\t\t\t\t\t\t\t\t   [cf_bsd_stdlib_h=no])])\n\t    AC_MSG_RESULT($cf_bsd_stdlib_h)\n\t\tif test \"$cf_bsd_stdlib_h\" = yes\n\t\tthen\n\t\t\tAC_DEFINE(HAVE_BSD_STDLIB_H,1,[Define to 1 if bsd/stdlib.h header should be used])\n\t\telse\n\t\t\tAC_MSG_CHECKING(if <bsd/random.h> should be included)\n\t\t\tAC_TRY_COMPILE([#include <bsd/random.h>],\n\t\t\t\t\t\t   [void *arc4random(int);\n\t\t\t\t\t\t\tvoid *x = arc4random(1)],\n\t\t\t\t\t\t   [cf_bsd_random_h=no],\n\t\t\t\t\t\t   [AC_TRY_COMPILE([#include <bsd/random.h>],\n\t\t\t\t\t\t\t\t\t\t   [unsigned x = arc4random()],\n\t\t\t\t\t\t\t\t\t\t   [cf_bsd_random_h=yes],\n\t\t\t\t\t\t\t\t\t\t   [cf_bsd_random_h=no])])\n\t\t\tAC_MSG_RESULT($cf_bsd_random_h)\n\t\t\tif test \"$cf_bsd_random_h\" = yes\n\t\t\tthen\n\t\t\t\tAC_DEFINE(HAVE_BSD_RANDOM_H,1,[Define to 1 if bsd/random.h header should be used])\n\t\t\telse\n\t\t\t\tAC_MSG_WARN(no header file found for arc4random)\n\t\t\tfi\n\t\tfi\n\t\t;;\n\tesac\n\n\tCF_SRAND_PARSE($cf_func,cf_srand_func,cf_rand_func)\n\n\tCF_UPPER(cf_rand_max,ifelse($1,,my_,$1)rand_max)\n\tAC_DEFINE_UNQUOTED(ifelse($1,,my_,$1)srand,$cf_srand_func,[Define to the name for the srand function])\n\tAC_DEFINE_UNQUOTED(ifelse($1,,my_,$1)rand, $cf_rand_func,[Define to the name for the rand function])\n\tAC_DEFINE_UNQUOTED([$]cf_rand_max, $cf_cv_rand_max,[Define to the name for the RAND_MAX constant])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SRAND_PARSE version: 2 updated: 2015/04/15 19:08:48\ndnl --------------\ndnl Parse the loop variable for CF_SRAND, with a workaround for asymmetric\ndnl variations.\ndefine([CF_SRAND_PARSE],[\n\t$2=`echo $1 | sed -e 's%/.*%%'`\n\t$3=`echo $1 | sed -e 's%.*/%%'`\n\n\tcase [$]$2 in\n\t(arc4random_stir)\n\t\t$2='(void)'\n\t\t;;\n\tesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SSL version: 25 updated: 2015/04/15 19:08:48\ndnl ------\ndnl Check for ssl library\ndnl $1 = [optional] directory in which the library may be found, set by AC_ARG_WITH\nAC_DEFUN([CF_SSL],[\n\tAC_REQUIRE([CF_PKG_CONFIG])\n\tcf_cv_have_ssl=no\n\tcf_cv_pkg_config_ssl=no\n\n\t# command-line option, etc., override default behavior\n\tCF_ADD_OPTIONAL_PATH($1, [ssl library])\n\n\tif test \"x$PKG_CONFIG\" != xnone; then\n\t\tcase $1 in\n\t\t(no)\n\t\t\t;;\n\t\t(yes) # if no explicit directory given, try pkg-config\n\t\t\tcf_cv_pkg_ssl=\n\t\t\tfor cf_try_package in openssl libssl\n\t\t\tdo\n\t\t\t\tAC_MSG_CHECKING(pkg-config for $cf_try_package)\n\t\t\t\tif \"$PKG_CONFIG\" --exists $cf_try_package ; then\n\t\t\t\t\tcf_cv_pkg_ssl=$cf_try_package\n\t\t\t\t\tAC_MSG_RESULT(yes)\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\tAC_MSG_RESULT(no)\n\t\t\t\tfi\n\t\t\tdone\n\t\t\tif test -n \"$cf_cv_pkg_ssl\" ; then\n\t\t\t\tcf_cv_have_ssl=yes\n\t\t\t\tcf_cv_pkg_config_ssl=yes\n\n\t\t\t\tcf_cflags_ssl=`$PKG_CONFIG --cflags $cf_cv_pkg_ssl`\n\t\t\t\tcf_libs_ssl=`$PKG_CONFIG --libs $cf_cv_pkg_ssl`\n\n\t\t\t\tif test -n \"$cf_cflags_ssl\" ; then\n\t\t\t\t\tcase \"$cf_cflags_ssl\" in\n\t\t\t\t\t(*-I*)\n\t\t\t\t\t\tcf_cv_header_path_ssl=`echo \"$cf_cflags_ssl\" | sed -e 's/^.*-I//' -e 's/ .*//'`\n\t\t\t\t\t\t;;\n\t\t\t\t\t(*)\n\t\t\t\t\t\tcf_cv_header_path_ssl=/usr/include\n\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\tCF_ADD_CFLAGS($cf_cflags_ssl)\n\n\t\t\t\t\t# workaround for broken openssl package using kerberos\n\t\t\t\t\tcase \"$cf_cflags_ssl\" in\n\t\t\t\t\t(*kerberos*)\n\t\t\t\t\t\tcf_cv_have_ssl=maybe\n\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\telse\n\t\t\t\t\tcf_cv_header_path_ssl=/usr/include\n\t\t\t\tfi\n\n\t\t\t\tif test -d $cf_cv_header_path_ssl/openssl ; then\n\t\t\t\t\tcf_cv_header_path_ssl=$cf_cv_header_path_ssl/openssl\n\t\t\t\tfi\n\n\t\t\t\tif test -n \"$cf_libs_ssl\" ; then\n\t\t\t\t\tcase \"x$cf_libs_ssl\" in\n\t\t\t\t\t(*-L*)\n\t\t\t\t\t\tcf_cv_library_path_ssl=`echo \"$cf_libs_ssl\" | sed -e 's/^.*-L//' -e 's/ .*//'`\n\t\t\t\t\t\t;;\n\t\t\t\t\t(*)\n\t\t\t\t\t\tcf_cv_library_path_ssl=/usr/lib\n\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\tCF_VERBOSE(adding $cf_libs_ssl to LIBS)\n\t\t\t\t\tCF_ADD_LIBS($cf_libs_ssl)\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tesac\n\tfi\n\n\tif test \"$cf_cv_have_ssl\" != yes; then\n\t\tcase $host_os in\n\t\t(mingw*)\n\t\t\tcf_extra_ssl_libs=\"-lcrypto -lgdi32\"\n\t\t\t;;\n\t\t(*)\n\t\t\t# openssl 0.9.6 and up use dynamic loading for engines.\n\t\t\tcf_extra_ssl_libs=\"-lcrypto\"\n\t\t\tcase \"x$LIBS\" in\n\t\t\t(*-ldl)\n\t\t\t\t;;\n\t\t\t(*)\n\t\t\t\tAC_CHECK_LIB(dl,dlsym,\n\t\t\t\t\t[cf_extra_ssl_libs=\"$cf_extra_ssl_libs -ldl\"])\n\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\t\tesac\n\n\t\tCF_FIND_LINKAGE(CF__SSL_HEAD,\n\t\t\tCF__SSL_BODY,\n\t\t\tssl,\n\t\t\tcf_cv_have_ssl=yes,\n\t\t\tcf_cv_have_ssl=no,\n\t\t\topenssl,\n\t\t\t$cf_extra_ssl_libs)\n\n\t\tif test \"$cf_cv_pkg_config_ssl\" != yes ; then\n\t\t\tif test \"$cf_cv_have_ssl\" = yes ; then\n\t\t\t\tif test -n \"$cf_cv_library_path_ssl\" ; then\n\t\t\t\t\tCF_ADD_LIBDIR($cf_cv_library_path_ssl)\n\t\t\t\tfi\n\t\t\t\tCF_ADD_LIBS(-lssl $cf_extra_ssl_libs)\n\t\t\t\tif test -n \"$cf_cv_header_path_ssl\" ; then\n\t\t\t\t\tcase $cf_cv_header_path_ssl in\n\t\t\t\t\t(/usr/include/openssl)\n\t\t\t\t\t\t;;\n\t\t\t\t\t(*)\n\t\t\t\t\t\tCF_ADD_INCDIR($cf_cv_header_path_ssl)\n\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n\n\tif test \"$cf_cv_have_ssl\" = yes ; then\n\t\tAC_DEFINE(USE_SSL,1,[Define to 1 if we are using SSL])\n\t\tif test -n \"$cf_cv_header_path_ssl\" ; then\n\t\t\tCF_VERBOSE(checking ssl header-path $cf_cv_header_path_ssl)\n\t\t\tcase $cf_cv_header_path_ssl in\n\t\t\t(*/openssl)\n\t\t\t\tAC_DEFINE(USE_OPENSSL_INCL,1,[Define to 1 if we are using OpenSSL headers])\n\t\t\t\t;;\n\t\t\tesac\n\t\tfi\n\t\tCF_CHECK_SSL_X509\n\tfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_STRIP_G_OPT version: 3 updated: 2002/12/21 19:25:52\ndnl --------------\ndnl\tRemove \"-g\" option from the compiler options\nAC_DEFUN([CF_STRIP_G_OPT],\n[$1=`echo ${$1} | sed -e 's%-g %%' -e 's%-g$%%'`])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_STRIP_O_OPT version: 3 updated: 2001/02/02 19:06:08\ndnl --------------\ndnl\tRemove \"-O\" option from the compiler options\nAC_DEFUN([CF_STRIP_O_OPT],[\n$1=`echo ${$1} | sed -e 's/-O[[1-9]]\\? //' -e 's/-O[[1-9]]\\?$//'`\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_STRUCT_TERMIOS version: 8 updated: 2015/04/15 19:08:48\ndnl -----------------\ndnl Some machines require _POSIX_SOURCE to completely define struct termios.\nAC_DEFUN([CF_STRUCT_TERMIOS],[\nAC_REQUIRE([CF_XOPEN_SOURCE])\n\nAC_CHECK_HEADERS( \\\ntermio.h \\\ntermios.h \\\nunistd.h \\\n)\n\nif test \"$ISC\" = yes ; then\n\tAC_CHECK_HEADERS( sys/termio.h )\nfi\nif test \"$ac_cv_header_termios_h\" = yes ; then\n\tcase \"$CFLAGS $CPPFLAGS\" in\n\t(*-D_POSIX_SOURCE*)\n\t\ttermios_bad=dunno ;;\n\t(*)\ttermios_bad=maybe ;;\n\tesac\n\tif test \"$termios_bad\" = maybe ; then\n\tAC_MSG_CHECKING(whether termios.h needs _POSIX_SOURCE)\n\tAC_TRY_COMPILE([#include <termios.h>],\n\t\t[struct termios foo; int x = foo.c_iflag],\n\t\ttermios_bad=no, [\n\t\tAC_TRY_COMPILE([\n#define _POSIX_SOURCE\n#include <termios.h>],\n\t\t\t[struct termios foo; int x = foo.c_iflag],\n\t\t\ttermios_bad=unknown,\n\t\t\ttermios_bad=yes AC_DEFINE(_POSIX_SOURCE,1,[Define to 1 if we must define _POSIX_SOURCE]))\n\t\t\t])\n\tAC_MSG_RESULT($termios_bad)\n\tfi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SUBDIR_PATH version: 7 updated: 2014/12/04 04:33:06\ndnl --------------\ndnl Construct a search-list for a nonstandard header/lib-file\ndnl\t$1 = the variable to return as result\ndnl\t$2 = the package name\ndnl\t$3 = the subdirectory, e.g., bin, include or lib\nAC_DEFUN([CF_SUBDIR_PATH],\n[\n$1=\n\nCF_ADD_SUBDIR_PATH($1,$2,$3,$prefix,NONE)\n\nfor cf_subdir_prefix in \\\n\t/usr \\\n\t/usr/local \\\n\t/usr/pkg \\\n\t/opt \\\n\t/opt/local \\\n\t[$]HOME\ndo\n\tCF_ADD_SUBDIR_PATH($1,$2,$3,$cf_subdir_prefix,$prefix)\ndone\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SYSTEM_MAIL_FLAGS version: 5 updated: 2015/04/15 19:08:48\ndnl --------------------\nAC_DEFUN([CF_SYSTEM_MAIL_FLAGS],\n[\nAC_MSG_CHECKING([system mail flags])\nAC_CACHE_VAL(cf_cv_system_mail_flags,[\n\tcase $cf_cv_SYSTEM_MAIL in\n\t(*/mmdf/*)\n\t\t[cf_cv_system_mail_flags=\"-mlruxto,cc\\\\\\\\*\"]\n        \t;;\n\t(*)\n        \t[cf_cv_system_mail_flags=\"-t -oi\"]\n\tesac\n\t])\nAC_MSG_RESULT($cf_cv_system_mail_flags)\nAC_DEFINE_UNQUOTED(SYSTEM_MAIL_FLAGS, \"$cf_cv_system_mail_flags\",[Define to value used for system mail-flags])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SYSV_UTMP version: 6 updated: 2012/10/04 20:12:20\ndnl ------------\ndnl Check if this is a SYSV flavor of UTMP\nAC_DEFUN([CF_SYSV_UTMP],\n[\nAC_CACHE_CHECK(if $cf_cv_have_utmp is SYSV flavor,cf_cv_sysv_utmp,[\ntest \"$cf_cv_have_utmp\" = \"utmp\" && cf_prefix=\"ut\" || cf_prefix=\"utx\"\nAC_TRY_LINK([\n#include <sys/types.h>\n#include <${cf_cv_have_utmp}.h>],[\nstruct $cf_cv_have_utmp x;\n\tset${cf_prefix}ent ();\n\tget${cf_prefix}id(&x);\n\tput${cf_prefix}line(&x);\n\tend${cf_prefix}ent();],\n\t[cf_cv_sysv_utmp=yes],\n\t[cf_cv_sysv_utmp=no])\n])\ntest $cf_cv_sysv_utmp = yes && AC_DEFINE(USE_SYSV_UTMP,1,[Define to 1 if utmp is SYSV flavor])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SYS_ERRLIST version: 6 updated: 2001/12/30 13:03:23\ndnl --------------\ndnl Check for declaration of sys_nerr and sys_errlist in one of stdio.h and\ndnl errno.h.  Declaration of sys_errlist on BSD4.4 interferes with our\ndnl declaration.  Reported by Keith Bostic.\nAC_DEFUN([CF_SYS_ERRLIST],\n[\n    CF_CHECK_ERRNO(sys_nerr)\n    CF_CHECK_ERRNO(sys_errlist)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_TAR_OPTIONS version: 3 updated: 2015/04/15 19:08:48\ndnl --------------\ndnl This is just a list of the most common tar options, allowing for variants\ndnl that can operate with the \"-\" standard input/output option.\nAC_DEFUN([CF_TAR_OPTIONS],\n[\ncase ifelse($1,,tar,$1) in\n(*pax|*pax$EXEEXT)\n\tTAR_UP_OPTIONS=\"-w\"\n\tTAR_DOWN_OPTIONS=\"-r\"\n\tTAR_PIPE_OPTIONS=\"\"\n\tTAR_FILE_OPTIONS=\"-f\"\n\t;;\n(*star|*star$EXEEXT)\n\tTAR_UP_OPTIONS=\"-c -f\"\n\tTAR_DOWN_OPTIONS=\"-x -U -f\"\n\tTAR_PIPE_OPTIONS=\"-\"\n\tTAR_FILE_OPTIONS=\"\"\n\t;;\n(*tar|*tar$EXEEXT)\n\t# FIXME: some versions of tar require, some don't allow the \"-\"\n\tTAR_UP_OPTIONS=\"-cf\"\n\tTAR_DOWN_OPTIONS=\"-xf\"\n\tTAR_PIPE_OPTIONS=\"-\"\n\tTAR_FILE_OPTIONS=\"\"\n\t;;\nesac\n\nAC_SUBST(TAR_UP_OPTIONS)\nAC_SUBST(TAR_DOWN_OPTIONS)\nAC_SUBST(TAR_FILE_OPTIONS)\nAC_SUBST(TAR_PIPE_OPTIONS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_TERMCAP_LIBS version: 15 updated: 2015/04/15 19:08:48\ndnl ---------------\ndnl Look for termcap libraries, or the equivalent in terminfo.\ndnl\ndnl The optional parameter may be \"ncurses\", \"ncursesw\".\nAC_DEFUN([CF_TERMCAP_LIBS],\n[\nAC_CACHE_VAL(cf_cv_termlib,[\ncf_cv_termlib=none\nAC_TRY_LINK([],[char *x=(char*)tgoto(\"\",0,0)],\n[AC_TRY_LINK([],[int x=tigetstr(\"\")],\n\t[cf_cv_termlib=terminfo],\n\t[cf_cv_termlib=termcap])\n\tCF_VERBOSE(using functions in predefined $cf_cv_termlib LIBS)\n],[\nifelse([$1],,,[\ncase \"$1\" in\n(ncurses*)\n\tCF_NCURSES_CONFIG($1)\n\tcf_cv_termlib=terminfo\n\t;;\nesac\n])\nif test \"$cf_cv_termlib\" = none; then\n\t# FreeBSD's linker gives bogus results for AC_CHECK_LIB, saying that\n\t# tgetstr lives in -lcurses when it is only an unsatisfied extern.\n\tcf_save_LIBS=\"$LIBS\"\n\tfor cf_lib in tinfo curses ncurses termlib termcap\n\tdo\n\t\tLIBS=\"-l$cf_lib $cf_save_LIBS\"\n\t\tfor cf_func in tigetstr tgetstr\n\t\tdo\n\t\t\tAC_MSG_CHECKING(for $cf_func in -l$cf_lib)\n\t\t\tAC_TRY_LINK([],[int x=$cf_func(\"\")],[cf_result=yes],[cf_result=no])\n\t\t\tAC_MSG_RESULT($cf_result)\n\t\t\tif test \"$cf_result\" = yes ; then\n\t\t\t\tif test \"$cf_func\" = tigetstr ; then\n\t\t\t\t\tcf_cv_termlib=terminfo\n\t\t\t\telse\n\t\t\t\t\tcf_cv_termlib=termcap\n\t\t\t\tfi\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\t\ttest \"$cf_result\" = yes && break\n\tdone\n\ttest \"$cf_result\" = no && LIBS=\"$cf_save_LIBS\"\nfi\nif test \"$cf_cv_termlib\" = none; then\n\t# allow curses library for broken AIX system.\n\tAC_CHECK_LIB(curses, initscr, [CF_ADD_LIBS(-lcurses)])\n\tAC_CHECK_LIB(termcap, tgoto, [CF_ADD_LIBS(-ltermcap) cf_cv_termlib=termcap])\nfi\n])\nif test \"$cf_cv_termlib\" = none; then\n\tAC_MSG_WARN([Cannot find -ltermlib, -lcurses, or -ltermcap])\nfi\n])])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_TERMIO_AND_CURSES version: 5 updated: 2012/11/08 20:57:52\ndnl --------------------\ndnl Check if including termio.h with <curses.h> dies like on sysv68\ndnl FIXME: this is too Lynx-specific\nAC_DEFUN([CF_TERMIO_AND_CURSES],\n[\nAC_CACHE_CHECK(if we can include termio.h with curses,cf_cv_termio_and_curses,[\n    cf_save_CFLAGS=\"$CPPFLAGS\"\n    CPPFLAGS=\"$CPPFLAGS -DHAVE_CONFIG_H -I. -I${srcdir:-.} -I${srcdir:-.}/src -I${srcdir:-.}/WWW/Library/Implementation\"\n    touch lynx_cfg.h\n    AC_TRY_COMPILE([\n#include <$1>\n#include <termio.h>],\n    [putchar(0x0a)],\n    [cf_cv_termio_and_curses=yes],\n    [cf_cv_termio_and_curses=no])\n    CPPFLAGS=\"$cf_save_CFLAGS\"\n    rm -f lynx_cfg.h\n])\n\ntest $cf_cv_termio_and_curses = yes && AC_DEFINE(TERMIO_AND_CURSES,1,[Define to 1 if we can include termio.h with curses.h])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_TERMIO_AND_TERMIOS version: 3 updated: 2012/11/08 20:57:52\ndnl ---------------------\ndnl Check if including both termio.h and termios.h die like on DG.UX\nAC_DEFUN([CF_TERMIO_AND_TERMIOS],\n[\nAC_MSG_CHECKING([termio.h and termios.h])\nAC_CACHE_VAL(cf_cv_termio_and_termios,[\n    AC_TRY_COMPILE([\n#if HAVE_TERMIO_H\n#include <termio.h>\n#endif\n#if HAVE_TERMIOS_H\n#include <termios.h>\n#endif ],\n    [putchar (0x0a)],\n    [cf_cv_termio_and_termios=yes],\n    [cf_cv_termio_and_termios=no])])\nAC_MSG_RESULT($cf_cv_termio_and_termios)\ntest $cf_cv_termio_and_termios = no && AC_DEFINE(TERMIO_AND_TERMIOS,1,[Define to 1 if we can include termio.h and termios.h])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_TERM_HEADER version: 4 updated: 2015/04/15 19:08:48\ndnl --------------\ndnl Look for term.h, which is part of X/Open curses.  It defines the interface\ndnl to terminfo database.  Usually it is in the same include-path as curses.h,\ndnl but some packagers change this, breaking various applications.\nAC_DEFUN([CF_TERM_HEADER],[\nAC_CACHE_CHECK(for terminfo header, cf_cv_term_header,[\ncase ${cf_cv_ncurses_header} in\n(*/ncurses.h|*/ncursesw.h)\n\tcf_term_header=`echo \"$cf_cv_ncurses_header\" | sed -e 's%ncurses[[^.]]*\\.h$%term.h%'`\n\t;;\n(*)\n\tcf_term_header=term.h\n\t;;\nesac\n\nfor cf_test in $cf_term_header \"ncurses/term.h\" \"ncursesw/term.h\"\ndo\nAC_TRY_COMPILE([#include <stdio.h>\n#include <${cf_cv_ncurses_header:-curses.h}>\n#include <$cf_test>\n],[int x = auto_left_margin],[\n\tcf_cv_term_header=\"$cf_test\"],[\n\tcf_cv_term_header=unknown\n\t])\n\ttest \"$cf_cv_term_header\" != unknown && break\ndone\n])\n\n# Set definitions to allow ifdef'ing to accommodate subdirectories\n\ncase $cf_cv_term_header in\n(*term.h)\n\tAC_DEFINE(HAVE_TERM_H,1,[Define to 1 if we have term.h])\n\t;;\nesac\n\ncase $cf_cv_term_header in\n(ncurses/term.h)\n\tAC_DEFINE(HAVE_NCURSES_TERM_H,1,[Define to 1 if we have ncurses/term.h])\n\t;;\n(ncursesw/term.h)\n\tAC_DEFINE(HAVE_NCURSESW_TERM_H,1,[Define to 1 if we have ncursesw/term.h])\n\t;;\nesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_TM_GMTOFF version: 3 updated: 2012/11/08 20:57:52\ndnl ------------\ndnl Check if the tm-struct defines the '.tm_gmtoff' member (useful in decoding\ndnl dates).\nAC_DEFUN([CF_TM_GMTOFF],\n[\nAC_MSG_CHECKING([for tm.tm_gmtoff])\nAC_CACHE_VAL(cf_cv_tm_gmtoff,[\n\tAC_TRY_COMPILE([\n#ifdef TIME_WITH_SYS_TIME\n#\tinclude <sys/time.h>\n#\tinclude <time.h>\n#else\n#\tifdef HAVE_SYS_TIME_H\n#\t\tinclude <sys/time.h>\n#\telse\n#\t\tinclude <time.h>\n#\tendif\n#endif\n],[\n\tstruct tm foo;\n\tlong bar = foo.tm_gmtoff],\n\t[cf_cv_tm_gmtoff=yes],\n\t[cf_cv_tm_gmtoff=no])])\nAC_MSG_RESULT($cf_cv_tm_gmtoff)\ntest $cf_cv_tm_gmtoff = no && AC_DEFINE(DONT_HAVE_TM_GMTOFF,1,[Define to 1 if the tm-struct defines .tm_gmtoff member])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_TRIM_X_LIBS version: 3 updated: 2015/04/12 15:39:00\ndnl --------------\ndnl Trim extra base X libraries added as a workaround for inconsistent library\ndnl dependencies returned by \"new\" pkg-config files.\nAC_DEFUN([CF_TRIM_X_LIBS],[\n\tfor cf_trim_lib in Xmu Xt X11\n\tdo\n\t\tcase \"$LIBS\" in\n\t\t(*-l$cf_trim_lib\\ *-l$cf_trim_lib*)\n\t\t\tLIBS=`echo \"$LIBS \" | sed -e 's/  / /g' -e 's%-l'\"$cf_trim_lib\"' %%' -e 's/ $//'`\n\t\t\tCF_VERBOSE(..trimmed $LIBS)\n\t\t\t;;\n\t\tesac\n\tdone\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_TRY_PKG_CONFIG version: 5 updated: 2013/07/06 21:27:06\ndnl -----------------\ndnl This is a simple wrapper to use for pkg-config, for libraries which may be\ndnl available in that form.\ndnl\ndnl $1 = package name\ndnl $2 = extra logic to use, if any, after updating CFLAGS and LIBS\ndnl $3 = logic to use if pkg-config does not have the package\nAC_DEFUN([CF_TRY_PKG_CONFIG],[\nAC_REQUIRE([CF_PKG_CONFIG])\n\nif test \"$PKG_CONFIG\" != none && \"$PKG_CONFIG\" --exists $1; then\n\tCF_VERBOSE(found package $1)\n\tcf_pkgconfig_incs=\"`$PKG_CONFIG --cflags $1 2>/dev/null`\"\n\tcf_pkgconfig_libs=\"`$PKG_CONFIG --libs   $1 2>/dev/null`\"\n\tCF_VERBOSE(package $1 CFLAGS: $cf_pkgconfig_incs)\n\tCF_VERBOSE(package $1 LIBS: $cf_pkgconfig_libs)\n\tCF_ADD_CFLAGS($cf_pkgconfig_incs)\n\tCF_ADD_LIBS($cf_pkgconfig_libs)\n\tifelse([$2],,:,[$2])\nelse\n\tcf_pkgconfig_incs=\n\tcf_pkgconfig_libs=\n\tifelse([$3],,:,[$3])\nfi\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_TRY_RPATH version: 1 updated: 2018/02/21 21:26:03\ndnl ------------\ndnl Work around broken-by-design packaging systems which solve at most the\ndnl problem of building packages, without providing for library reuse...\nAC_DEFUN([CF_TRY_RPATH],[\nAC_REQUIRE([CF_LD_RPATH_OPT])\nif test -z \"$LD_RPATH_OPT\"\nthen\n\tCF_VERBOSE(will not attempt to use rpath)\nelif test \"x${enable_rpath_hack:-yes}\" = \"xno\"\nthen\n\tCF_VERBOSE(\"rpath is disabled)\nelif test -z \"${LD_RUN_PATH}${LD_LIBRARY_PATH}\"\nthen\n\tcase \"$LIBS\" in\n\t(*-L/*)\n\t\tCF__CHECK_RUN(cf_check_run)\n\t\tif test \"x$cf_check_run\" = xno\n\t\tthen\n\t\t\tCF_VERBOSE(linkage is broken)\n\t\t\tcf_result=\n\t\t\tfor cf_item in $LIBS\n\t\t\tdo\n\t\t\t\tcase \" $cf_item\" in\n\t\t\t\t(\\ -L/*)\n\t\t\t\t\tcf_rpath_arg=`echo \" $cf_item\" | sed -e \"s% -L%$LD_RPATH_OPT%\"`\n\t\t\t\t\tcf_rpath_tmp=`echo \"$cf_result \" | sed -e \"s% $cf_rpath_arg % %\"`\n\t\t\t\t\tif test \"x$cf_result \" = \"x$cf_rpath_tmp\"\n\t\t\t\t\tthen\n\t\t\t\t\t\tcf_result=\"$cf_result $cf_rpath_arg\"\n\t\t\t\t\tfi\n\t\t\t\t\tcf_rpath_tmp=`echo \"$cf_result \" | sed -e \"s% $cf_item % %g\"`\n\t\t\t\t\tif test \"x$cf_result \" != \"x$cf_rpath_tmp\"\n\t\t\t\t\tthen\n\t\t\t\t\t\tcontinue\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\t\tcf_result=\"$cf_result $cf_item\"\n\t\t\tdone\n\t\t\tcf_result=`echo \"$cf_result\" | sed -e 's/^ //'`\n\t\t\tif test \"x$cf_result\" != \"x$LIBS\"\n\t\t\tthen\n\t\t\t\tcf_save_LIBS=\"$LIBS\"\n\t\t\t\tLIBS=\"$cf_result\"\n\t\t\t\tCF__CHECK_RUN(cf_check_run)\n\t\t\t\tif test \"x$cf_check_run\" = \"xyes\"\n\t\t\t\tthen\n\t\t\t\t\tCF_VERBOSE(use rpath for $cf_save_LIBS)\n\t\t\t\t\tLIBS=\"$cf_result\"\n\t\t\t\t\tCF_VERBOSE(result is now $LIBS)\n\t\t\t\telse\n\t\t\t\t\tLIBS=\"$cf_save_LIBS\"\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\t\t;;\n\t(*)\n\t\tCF_VERBOSE(will not attempt to use rpath)\n\t\t;;\n\tesac\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_TRY_XOPEN_SOURCE version: 1 updated: 2011/10/30 17:09:50\ndnl -------------------\ndnl If _XOPEN_SOURCE is not defined in the compile environment, check if we\ndnl can define it successfully.\nAC_DEFUN([CF_TRY_XOPEN_SOURCE],[\nAC_CACHE_CHECK(if we should define _XOPEN_SOURCE,cf_cv_xopen_source,[\n\tAC_TRY_COMPILE([\n#include <stdlib.h>\n#include <string.h>\n#include <sys/types.h>\n],[\n#ifndef _XOPEN_SOURCE\nmake an error\n#endif],\n\t[cf_cv_xopen_source=no],\n\t[cf_save=\"$CPPFLAGS\"\n\t CPPFLAGS=\"$CPPFLAGS -D_XOPEN_SOURCE=$cf_XOPEN_SOURCE\"\n\t AC_TRY_COMPILE([\n#include <stdlib.h>\n#include <string.h>\n#include <sys/types.h>\n],[\n#ifdef _XOPEN_SOURCE\nmake an error\n#endif],\n\t[cf_cv_xopen_source=no],\n\t[cf_cv_xopen_source=$cf_XOPEN_SOURCE])\n\tCPPFLAGS=\"$cf_save\"\n\t])\n])\n\nif test \"$cf_cv_xopen_source\" != no ; then\n\tCF_REMOVE_DEFINE(CFLAGS,$CFLAGS,_XOPEN_SOURCE)\n\tCF_REMOVE_DEFINE(CPPFLAGS,$CPPFLAGS,_XOPEN_SOURCE)\n\tcf_temp_xopen_source=\"-D_XOPEN_SOURCE=$cf_cv_xopen_source\"\n\tCF_ADD_CFLAGS($cf_temp_xopen_source)\nfi\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_TTYTYPE version: 6 updated: 2012/11/08 20:57:52\ndnl ----------\nAC_DEFUN([CF_TTYTYPE],\n[\nAC_MSG_CHECKING(if ttytype is declared in curses library)\nAC_CACHE_VAL(cf_cv_have_ttytype,[\n\tAC_TRY_LINK([#include <${cf_cv_ncurses_header:-curses.h}>],\n\t[char *x = &ttytype[1]; *x = 1],\n\t[cf_cv_have_ttytype=yes],\n\t[cf_cv_have_ttytype=no])\n\t])\nAC_MSG_RESULT($cf_cv_have_ttytype)\ntest $cf_cv_have_ttytype = yes && AC_DEFINE(HAVE_TTYTYPE,1,[Define to 1 if ttytype is declared in curses library])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_TYPE_LONG_LONG version: 3 updated: 2012/11/08 20:57:52\ndnl -----------------\ndnl Check for long long type.\nAC_DEFUN([CF_TYPE_LONG_LONG],[\nAC_CACHE_CHECK(for long long type,cf_cv_type_long_long,[\n\tcat >conftest.$ac_ext <<_CFEOF\n#include \"confdefs.h\"\nint\nmain (void)\n{\n\tlong long foo = 123456789123456789LL;\n\treturn (foo == 0);\n}\n_CFEOF\n\t(eval [$]ac_compile) 2>conftest.err\n\tac_status=$?\n\tif test $ac_status = 0 && test -s conftest.err\n\tthen\n\t\tfgrep warning conftest.err >/dev/null 2>&1 && ac_status=1\n\tfi\n\tif test $ac_status != 0\n\tthen\n\t\tcf_cv_type_long_long=no\n\telse\n\t\tcf_cv_type_long_long=yes\n\tfi\n\ttest -s conftest.err && cat conftest.err >&5\n\trm -f conftest*\n])\n\nif test \"$cf_cv_type_long_long\" = yes ; then\n\tAC_DEFINE(HAVE_LONG_LONG,1,[Define to 1 if compiler supports long long type])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_UNION_WAIT version: 6 updated: 2012/10/06 08:57:51\ndnl -------------\ndnl Check to see if the BSD-style union wait is declared.  Some platforms may\ndnl use this, though it is deprecated in favor of the 'int' type in Posix.\ndnl Some vendors provide a bogus implementation that declares union wait, but\ndnl uses the 'int' type instead; we try to spot these by checking for the\ndnl associated macros.\ndnl\ndnl Ahem.  Some implementers cast the status value to an int*, as an attempt to\ndnl use the macros for either union wait or int.  So we do a check compile to\ndnl see if the macros are defined and apply to an int.\ndnl\ndnl Sets: $cf_cv_type_unionwait\ndnl Defines: HAVE_TYPE_UNIONWAIT\nAC_DEFUN([CF_UNION_WAIT],\n[\nAC_REQUIRE([CF_WAIT_HEADERS])\nAC_MSG_CHECKING([for union wait])\nAC_CACHE_VAL(cf_cv_type_unionwait,[\n\tAC_TRY_LINK($cf_wait_headers,\n\t[int x;\n\t int y = WEXITSTATUS(x);\n\t int z = WTERMSIG(x);\n\t wait(&x);\n\t],\n\t[cf_cv_type_unionwait=no\n\t echo compiles ok w/o union wait 1>&AC_FD_CC\n\t],[\n\tAC_TRY_LINK($cf_wait_headers,\n\t[union wait x;\n#ifdef WEXITSTATUS\n\t int y = WEXITSTATUS(x);\n#endif\n#ifdef WTERMSIG\n\t int z = WTERMSIG(x);\n#endif\n\t wait(&x);\n\t],\n\t[cf_cv_type_unionwait=yes\n\t echo compiles ok with union wait and possibly macros too 1>&AC_FD_CC\n\t],\n\t[cf_cv_type_unionwait=no])])])\nAC_MSG_RESULT($cf_cv_type_unionwait)\ntest $cf_cv_type_unionwait = yes && AC_DEFINE(HAVE_TYPE_UNIONWAIT,1,[Define to 1 if type unionwait is declared])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_UPPER version: 5 updated: 2001/01/29 23:40:59\ndnl --------\ndnl Make an uppercase version of a variable\ndnl $1=uppercase($2)\nAC_DEFUN([CF_UPPER],\n[\n$1=`echo \"$2\" | sed y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%`\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_UTF8_LIB version: 8 updated: 2012/10/06 08:57:51\ndnl -----------\ndnl Check for multibyte support, and if not found, utf8 compatibility library\nAC_DEFUN([CF_UTF8_LIB],\n[\nAC_CACHE_CHECK(for multibyte character support,cf_cv_utf8_lib,[\n\tcf_save_LIBS=\"$LIBS\"\n\tAC_TRY_LINK([\n#include <stdlib.h>],[putwc(0,0);],\n\t[cf_cv_utf8_lib=yes],\n\t[CF_FIND_LINKAGE([\n#include <libutf8.h>],[putwc(0,0);],utf8,\n\t\t[cf_cv_utf8_lib=add-on],\n\t\t[cf_cv_utf8_lib=no])\n])])\n\n# HAVE_LIBUTF8_H is used by ncurses if curses.h is shared between\n# ncurses/ncursesw:\nif test \"$cf_cv_utf8_lib\" = \"add-on\" ; then\n\tAC_DEFINE(HAVE_LIBUTF8_H,1,[Define to 1 if we should include libutf8.h])\n\tCF_ADD_INCDIR($cf_cv_header_path_utf8)\n\tCF_ADD_LIBDIR($cf_cv_library_path_utf8)\n\tCF_ADD_LIBS($cf_cv_library_file_utf8)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_UTMP version: 10 updated: 2012/10/04 20:12:20\ndnl -------\ndnl Check for UTMP/UTMPX headers\nAC_DEFUN([CF_UTMP],\n[\nAC_REQUIRE([CF_LASTLOG])\n\nAC_CACHE_CHECK(for utmp implementation,cf_cv_have_utmp,[\n\tcf_cv_have_utmp=no\nfor cf_header in utmpx utmp ; do\ncf_utmp_includes=\"\n#include <sys/types.h>\n#include <${cf_header}.h>\n#define getutent getutxent\n#ifdef USE_LASTLOG\n#include <lastlog.h>\t/* may conflict with utmpx.h on Linux */\n#endif\n\"\n\tAC_TRY_COMPILE([$cf_utmp_includes],\n\t[struct $cf_header x;\n\t char *name = x.ut_name; /* utmp.h and compatible definitions */\n\t],\n\t[cf_cv_have_utmp=$cf_header\n\t break],\n\t[\n\tAC_TRY_COMPILE([$cf_utmp_includes],\n\t[struct $cf_header x;\n\t char *name = x.ut_user; /* utmpx.h must declare this */\n\t],\n\t[cf_cv_have_utmp=$cf_header\n\t break\n\t])])\ndone\n])\n\nif test $cf_cv_have_utmp != no ; then\n\tAC_DEFINE(HAVE_UTMP,1,[Define to 1 if the utmp interface is available])\n\ttest $cf_cv_have_utmp = utmpx && AC_DEFINE(UTMPX_FOR_UTMP,1,[Define if we have utmpx interface])\n\tCF_UTMP_UT_HOST\n\tCF_UTMP_UT_SYSLEN\n\tCF_UTMP_UT_NAME\n\tCF_UTMP_UT_XSTATUS\n\tCF_UTMP_UT_XTIME\n\tCF_UTMP_UT_SESSION\n\tCF_SYSV_UTMP\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_UTMP_UT_HOST version: 8 updated: 2012/10/04 20:12:20\ndnl ---------------\ndnl Check if UTMP/UTMPX struct defines ut_host member\nAC_DEFUN([CF_UTMP_UT_HOST],\n[\nif test $cf_cv_have_utmp != no ; then\nAC_MSG_CHECKING(if ${cf_cv_have_utmp}.ut_host is declared)\nAC_CACHE_VAL(cf_cv_have_utmp_ut_host,[\n\tAC_TRY_COMPILE([\n#include <sys/types.h>\n#include <${cf_cv_have_utmp}.h>],\n\t[struct $cf_cv_have_utmp x; char *y = &x.ut_host[0]],\n\t[cf_cv_have_utmp_ut_host=yes],\n\t[cf_cv_have_utmp_ut_host=no])\n\t])\nAC_MSG_RESULT($cf_cv_have_utmp_ut_host)\ntest $cf_cv_have_utmp_ut_host != no && AC_DEFINE(HAVE_UTMP_UT_HOST,1,[Define to 1 if UTMP/UTMPX struct defines ut_host member])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_UTMP_UT_NAME version: 6 updated: 2015/04/12 15:39:00\ndnl ---------------\ndnl Check if UTMP/UTMPX struct defines ut_name member\nAC_DEFUN([CF_UTMP_UT_NAME],\n[\nif test $cf_cv_have_utmp != no ; then\nAC_CACHE_CHECK(if ${cf_cv_have_utmp}.ut_name is declared,cf_cv_have_utmp_ut_name,[\n\tcf_cv_have_utmp_ut_name=no\ncf_utmp_includes=\"\n#include <sys/types.h>\n#include <${cf_cv_have_utmp}.h>\n#define getutent getutxent\n#ifdef USE_LASTLOG\n#include <lastlog.h>\t\t/* may conflict with utmpx.h on Linux */\n#endif\n\"\nfor cf_header in ut_name ut_user ; do\n\tAC_TRY_COMPILE([$cf_utmp_includes],\n\t[struct $cf_cv_have_utmp x;\n\t char *name = x.$cf_header;\n\t],\n\t[cf_cv_have_utmp_ut_name=$cf_header\n\t break])\ndone\n])\n\ncase $cf_cv_have_utmp_ut_name in\n(no)\n\tAC_MSG_ERROR(Cannot find declaration for ut.ut_name)\n\t;;\n(ut_user)\n\tAC_DEFINE(ut_name,ut_user,[Define to rename UTMP/UTMPX struct ut_name member])\n\t;;\nesac\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_UTMP_UT_SESSION version: 6 updated: 2012/10/04 20:12:20\ndnl ------------------\ndnl Check if UTMP/UTMPX struct defines ut_session member\nAC_DEFUN([CF_UTMP_UT_SESSION],\n[\nif test $cf_cv_have_utmp != no ; then\nAC_CACHE_CHECK(if ${cf_cv_have_utmp}.ut_session is declared, cf_cv_have_utmp_ut_session,[\n\tAC_TRY_COMPILE([\n#include <sys/types.h>\n#include <${cf_cv_have_utmp}.h>],\n\t[struct $cf_cv_have_utmp x; long y = x.ut_session],\n\t[cf_cv_have_utmp_ut_session=yes],\n\t[cf_cv_have_utmp_ut_session=no])\n])\nif test $cf_cv_have_utmp_ut_session != no ; then\n\tAC_DEFINE(HAVE_UTMP_UT_SESSION,1,[Define to 1 if UTMP/UTMPX struct defines ut_session member])\nfi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_UTMP_UT_SYSLEN version: 2 updated: 2012/10/04 20:12:20\ndnl -----------------\ndnl Check if UTMP/UTMPX struct defines ut_syslen member\nAC_DEFUN([CF_UTMP_UT_SYSLEN],\n[\nif test $cf_cv_have_utmp != no ; then\nAC_MSG_CHECKING(if ${cf_cv_have_utmp}.ut_syslen is declared)\nAC_CACHE_VAL(cf_cv_have_utmp_ut_syslen,[\n\tAC_TRY_COMPILE([\n#include <sys/types.h>\n#include <${cf_cv_have_utmp}.h>],\n\t[struct $cf_cv_have_utmp x; int y = x.ut_syslen],\n\t[cf_cv_have_utmp_ut_syslen=yes],\n\t[cf_cv_have_utmp_ut_syslen=no])\n\t])\nAC_MSG_RESULT($cf_cv_have_utmp_ut_syslen)\ntest $cf_cv_have_utmp_ut_syslen != no && AC_DEFINE(HAVE_UTMP_UT_SYSLEN,1,[Define to 1 if UTMP/UTMPX struct defines ut_syslen member])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_UTMP_UT_XSTATUS version: 4 updated: 2012/10/04 20:12:20\ndnl ------------------\ndnl Check for known variants on the UTMP/UTMPX struct's exit-status as reported\ndnl by various people:\ndnl\ndnl\tut_exit.__e_exit (HPUX 11 - David Ellement, also in glibc2)\ndnl\tut_exit.e_exit (SVR4)\ndnl\tut_exit.ut_e_exit (os390 - Greg Smith)\ndnl\tut_exit.ut_exit (Tru64 4.0f - Jeremie Petit, 4.0e - Tomas Vanhala)\ndnl\ndnl Note: utmp_xstatus is not a conventional compatibility definition in the\ndnl system header files.\nAC_DEFUN([CF_UTMP_UT_XSTATUS],\n[\nif test $cf_cv_have_utmp != no ; then\nAC_CACHE_CHECK(for exit-status in $cf_cv_have_utmp,cf_cv_have_utmp_ut_xstatus,[\nfor cf_result in \\\n\tut_exit.__e_exit \\\n\tut_exit.e_exit \\\n\tut_exit.ut_e_exit \\\n\tut_exit.ut_exit\ndo\nAC_TRY_COMPILE([\n#include <sys/types.h>\n#include <${cf_cv_have_utmp}.h>],\n\t[struct $cf_cv_have_utmp x; long y = x.$cf_result = 0],\n\t[cf_cv_have_utmp_ut_xstatus=$cf_result\n\t break],\n\t[cf_cv_have_utmp_ut_xstatus=no])\ndone\n])\nif test $cf_cv_have_utmp_ut_xstatus != no ; then\n\tAC_DEFINE(HAVE_UTMP_UT_XSTATUS,1,[Define to 1 if UTMP/UTMPX has exit-status member])\n\tAC_DEFINE_UNQUOTED(ut_xstatus,$cf_cv_have_utmp_ut_xstatus,[Define if needed to rename member ut_xstatus of UTMP/UTMPX])\nfi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_UTMP_UT_XTIME version: 9 updated: 2012/10/04 20:12:20\ndnl ----------------\ndnl Check if UTMP/UTMPX struct defines ut_xtime member\nAC_DEFUN([CF_UTMP_UT_XTIME],\n[\nif test $cf_cv_have_utmp != no ; then\nAC_CACHE_CHECK(if ${cf_cv_have_utmp}.ut_xtime is declared, cf_cv_have_utmp_ut_xtime,[\n\tAC_TRY_COMPILE([\n#include <sys/types.h>\n#include <${cf_cv_have_utmp}.h>],\n\t[struct $cf_cv_have_utmp x; long y = x.ut_xtime = 0],\n\t[cf_cv_have_utmp_ut_xtime=yes],\n\t[AC_TRY_COMPILE([\n#include <sys/types.h>\n#include <${cf_cv_have_utmp}.h>],\n\t[struct $cf_cv_have_utmp x; long y = x.ut_tv.tv_sec],\n\t[cf_cv_have_utmp_ut_xtime=define],\n\t[cf_cv_have_utmp_ut_xtime=no])\n\t])\n])\nif test $cf_cv_have_utmp_ut_xtime != no ; then\n\tAC_DEFINE(HAVE_UTMP_UT_XTIME,1,[Define to 1 if UTMP/UTMPX struct defines ut_xtime member])\n\tif test $cf_cv_have_utmp_ut_xtime = define ; then\n\t\tAC_DEFINE(ut_xtime,ut_tv.tv_sec,[Define if needed to alternate name for utmpx.ut_xtime member])\n\tfi\nfi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_VERBOSE version: 3 updated: 2007/07/29 09:55:12\ndnl ----------\ndnl Use AC_VERBOSE w/o the warnings\nAC_DEFUN([CF_VERBOSE],\n[test -n \"$verbose\" && echo \"\t$1\" 1>&AC_FD_MSG\nCF_MSG_LOG([$1])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WAIT_HEADERS version: 2 updated: 1997/10/21 19:45:33\ndnl ---------------\ndnl Build up an expression $cf_wait_headers with the header files needed to\ndnl compile against the prototypes for 'wait()', 'waitpid()', etc.  Assume it's\ndnl Posix, which uses <sys/types.h> and <sys/wait.h>, but allow SVr4 variation\ndnl with <wait.h>.\nAC_DEFUN([CF_WAIT_HEADERS],\n[\nAC_HAVE_HEADERS(sys/wait.h)\ncf_wait_headers=\"#include <sys/types.h>\n\"\nif test $ac_cv_header_sys_wait_h = yes; then\ncf_wait_headers=\"$cf_wait_headers\n#include <sys/wait.h>\n\"\nelse\nAC_HAVE_HEADERS(wait.h)\nAC_HAVE_HEADERS(waitstatus.h)\nif test $ac_cv_header_wait_h = yes; then\ncf_wait_headers=\"$cf_wait_headers\n#include <wait.h>\n\"\nfi\nif test $ac_cv_header_waitstatus_h = yes; then\ncf_wait_headers=\"$cf_wait_headers\n#include <waitstatus.h>\n\"\nfi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WIDEC_CURSES version: 5 updated: 2012/11/08 20:57:52\ndnl ---------------\ndnl Check for curses implementations that can handle wide-characters\nAC_DEFUN([CF_WIDEC_CURSES],\n[\nAC_CACHE_CHECK(if curses supports wide characters,cf_cv_widec_curses,[\nAC_TRY_LINK([\n#include <stdlib.h>\n#include <${cf_cv_ncurses_header:-curses.h}>],[\n    wchar_t temp[2];\n    wchar_t wch = 'A';\n    temp[0] = wch;\n    waddnwstr(stdscr, temp, 1);\n],\n[cf_cv_widec_curses=yes],\n[cf_cv_widec_curses=no])\n])\n\nif test \"$cf_cv_widec_curses\" = yes ; then\n\tAC_DEFINE(WIDEC_CURSES,1,[Define to 1 if curses supports wide characters])\n\n\t# This is needed on Tru64 5.0 to declare mbstate_t\n\tAC_CACHE_CHECK(if we must include wchar.h to declare mbstate_t,cf_cv_widec_mbstate,[\n\tAC_TRY_COMPILE([\n#include <stdlib.h>\n#include <${cf_cv_ncurses_header:-curses.h}>],\n[mbstate_t state],\n[cf_cv_widec_mbstate=no],\n[AC_TRY_COMPILE([\n#include <stdlib.h>\n#include <wchar.h>\n#include <${cf_cv_ncurses_header:-curses.h}>],\n[mbstate_t state],\n[cf_cv_widec_mbstate=yes],\n[cf_cv_widec_mbstate=unknown])])])\n\nif test \"$cf_cv_widec_mbstate\" = yes ; then\n\tAC_DEFINE(NEED_WCHAR_H,1,[Define to 1 if we must include wchar.h])\nfi\n\nif test \"$cf_cv_widec_mbstate\" != unknown ; then\n\tAC_DEFINE(HAVE_MBSTATE_T,1,[Define to 1 if we have mbstate_t type])\nfi\n\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_BZLIB version: 4 updated: 2007/07/29 13:19:54\ndnl -------------\ndnl Check for libbz2 aka \"bzlib\"\ndnl\ndnl $1 = optional path for headers/library\nAC_DEFUN([CF_WITH_BZLIB],[\n  CF_ADD_OPTIONAL_PATH($1)\n\n  CF_FIND_LINKAGE([\n#include <stdio.h>\n#include <bzlib.h>\n],[\n    BZ2_bzopen(\"name\",\"mode\")\n],bz2,,,bzlib)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_CURSES_DIR version: 3 updated: 2010/11/20 17:02:38\ndnl ------------------\ndnl Wrapper for AC_ARG_WITH to specify directory under which to look for curses\ndnl libraries.\nAC_DEFUN([CF_WITH_CURSES_DIR],[\n\nAC_MSG_CHECKING(for specific curses-directory)\nAC_ARG_WITH(curses-dir,\n\t[  --with-curses-dir=DIR   directory in which (n)curses is installed],\n\t[cf_cv_curses_dir=$withval],\n\t[cf_cv_curses_dir=no])\nAC_MSG_RESULT($cf_cv_curses_dir)\n\nif ( test -n \"$cf_cv_curses_dir\" && test \"$cf_cv_curses_dir\" != \"no\" )\nthen\n\tCF_PATH_SYNTAX(withval)\n\tif test -d \"$cf_cv_curses_dir\"\n\tthen\n\t\tCF_ADD_INCDIR($cf_cv_curses_dir/include)\n\t\tCF_ADD_LIBDIR($cf_cv_curses_dir/lib)\n\tfi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_DBMALLOC version: 7 updated: 2010/06/21 17:26:47\ndnl ----------------\ndnl Configure-option for dbmalloc.  The optional parameter is used to override\ndnl the updating of $LIBS, e.g., to avoid conflict with subsequent tests.\nAC_DEFUN([CF_WITH_DBMALLOC],[\nCF_NO_LEAKS_OPTION(dbmalloc,\n\t[  --with-dbmalloc         test: use Conor Cahill's dbmalloc library],\n\t[USE_DBMALLOC])\n\nif test \"$with_dbmalloc\" = yes ; then\n\tAC_CHECK_HEADER(dbmalloc.h,\n\t\t[AC_CHECK_LIB(dbmalloc,[debug_malloc]ifelse([$1],,[],[,$1]))])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_DMALLOC version: 7 updated: 2010/06/21 17:26:47\ndnl ---------------\ndnl Configure-option for dmalloc.  The optional parameter is used to override\ndnl the updating of $LIBS, e.g., to avoid conflict with subsequent tests.\nAC_DEFUN([CF_WITH_DMALLOC],[\nCF_NO_LEAKS_OPTION(dmalloc,\n\t[  --with-dmalloc          test: use Gray Watson's dmalloc library],\n\t[USE_DMALLOC])\n\nif test \"$with_dmalloc\" = yes ; then\n\tAC_CHECK_HEADER(dmalloc.h,\n\t\t[AC_CHECK_LIB(dmalloc,[dmalloc_debug]ifelse([$1],,[],[,$1]))])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_IDNA version: 10 updated: 2015/04/15 19:08:48\ndnl ------------\ndnl Check for libidn, use it if found.\ndnl\ndnl $1 = optional path for headers/library\nAC_DEFUN([CF_WITH_IDNA],[\n  CF_ADD_OPTIONAL_PATH($1)\n\n  CF_FIND_LINKAGE([\n#include <stdio.h>\n#include <idna.h>\n],[\n\tchar *output = 0;\n    int code = idna_to_ascii_8z(\"name\", &output, IDNA_USE_STD3_ASCII_RULES);\n],idn,,,,[$LIBICONV])\n\nif test \"x$cf_cv_find_linkage_idn\" = xyes ; then\n\tAC_DEFINE(USE_IDNA,1,[Define to 1 if we should use IDNA library])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_PATH version: 11 updated: 2012/09/29 15:04:19\ndnl ------------\ndnl Wrapper for AC_ARG_WITH to ensure that user supplies a pathname, not just\ndnl defaulting to yes/no.\ndnl\ndnl $1 = option name\ndnl $2 = help-text\ndnl $3 = environment variable to set\ndnl $4 = default value, shown in the help-message, must be a constant\ndnl $5 = default value, if it's an expression & cannot be in the help-message\ndnl\nAC_DEFUN([CF_WITH_PATH],\n[AC_ARG_WITH($1,[$2 ](default: ifelse([$4],,empty,[$4])),,\nifelse([$4],,[withval=\"${$3}\"],[withval=\"${$3:-ifelse([$5],,[$4],[$5])}\"]))dnl\nif ifelse([$5],,true,[test -n \"$5\"]) ; then\nCF_PATH_SYNTAX(withval)\nfi\neval $3=\"$withval\"\nAC_SUBST($3)dnl\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_ZLIB version: 4 updated: 2011/05/28 12:10:58\ndnl ------------\ndnl check for libz aka \"zlib\"\nAC_DEFUN([CF_WITH_ZLIB],[\n  CF_ADD_OPTIONAL_PATH($1)\n\n  CF_FIND_LINKAGE([\n#include <zlib.h>\n],[\n\tgzopen(\"name\",\"mode\")\n],z,,,zlib)\n\nAC_CHECK_FUNCS( \\\n\tzError \\\n)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_XOPEN_CURSES version: 13 updated: 2015/12/12 20:59:52\ndnl ---------------\ndnl Test if we should define X/Open source for curses, needed on Digital Unix\ndnl 4.x, to see the extended functions, but breaks on IRIX 6.x.\ndnl\ndnl The getbegyx() check is needed for HPUX, which omits legacy macros such\ndnl as getbegy().  The latter is better design, but the former is standard.\nAC_DEFUN([CF_XOPEN_CURSES],\n[\nAC_REQUIRE([CF_CURSES_CPPFLAGS])dnl\nAC_CACHE_CHECK(definition to turn on extended curses functions,cf_cv_need_xopen_extension,[\ncf_cv_need_xopen_extension=unknown\nAC_TRY_LINK([\n#include <stdlib.h>\n#include <${cf_cv_ncurses_header:-curses.h}>],[\n#if defined(NCURSES_VERSION_PATCH)\n#if (NCURSES_VERSION_PATCH < 20100501) && (NCURSES_VERSION_PATCH >= 20100403)\n\tmake an error\n#endif\n#endif\n#ifdef NCURSES_VERSION\n\tcchar_t check;\n\tint check2 = curs_set((int)sizeof(check));\n#endif\n\tlong x = winnstr(stdscr, \"\", 0);\n\tint x1, y1;\n\tgetbegyx(stdscr, y1, x1)],\n\t[cf_cv_need_xopen_extension=none],\n\t[\n\tfor cf_try_xopen_extension in _XOPEN_SOURCE_EXTENDED NCURSES_WIDECHAR\n\tdo\n\t\tAC_TRY_LINK([\n#define $cf_try_xopen_extension 1\n#include <stdlib.h>\n#include <${cf_cv_ncurses_header:-curses.h}>],[\n#ifdef NCURSES_VERSION\n\t\tcchar_t check;\n\t\tint check2 = curs_set((int)sizeof(check));\n#endif\n\t\tlong x = winnstr(stdscr, \"\", 0);\n\t\tint x1, y1;\n\t\tgetbegyx(stdscr, y1, x1)],\n\t\t[cf_cv_need_xopen_extension=$cf_try_xopen_extension; break])\n\tdone\n\t])\n])\n\ncase $cf_cv_need_xopen_extension in\n(*_*)\n\tCPPFLAGS=\"$CPPFLAGS -D$cf_cv_need_xopen_extension\"\n\t;;\nesac\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_XOPEN_SOURCE version: 52 updated: 2016/08/27 12:21:42\ndnl ---------------\ndnl Try to get _XOPEN_SOURCE defined properly that we can use POSIX functions,\ndnl or adapt to the vendor's definitions to get equivalent functionality,\ndnl without losing the common non-POSIX features.\ndnl\ndnl Parameters:\ndnl\t$1 is the nominal value for _XOPEN_SOURCE\ndnl\t$2 is the nominal value for _POSIX_C_SOURCE\nAC_DEFUN([CF_XOPEN_SOURCE],[\nAC_REQUIRE([AC_CANONICAL_HOST])\n\ncf_XOPEN_SOURCE=ifelse([$1],,500,[$1])\ncf_POSIX_C_SOURCE=ifelse([$2],,199506L,[$2])\ncf_xopen_source=\n\ncase $host_os in\n(aix[[4-7]]*)\n\tcf_xopen_source=\"-D_ALL_SOURCE\"\n\t;;\n(msys)\n\tcf_XOPEN_SOURCE=600\n\t;;\n(darwin[[0-8]].*)\n\tcf_xopen_source=\"-D_APPLE_C_SOURCE\"\n\t;;\n(darwin*)\n\tcf_xopen_source=\"-D_DARWIN_C_SOURCE\"\n\tcf_XOPEN_SOURCE=\n\t;;\n(freebsd*|dragonfly*)\n\t# 5.x headers associate\n\t#\t_XOPEN_SOURCE=600 with _POSIX_C_SOURCE=200112L\n\t#\t_XOPEN_SOURCE=500 with _POSIX_C_SOURCE=199506L\n\tcf_POSIX_C_SOURCE=200112L\n\tcf_XOPEN_SOURCE=600\n\tcf_xopen_source=\"-D_BSD_TYPES -D__BSD_VISIBLE -D_POSIX_C_SOURCE=$cf_POSIX_C_SOURCE -D_XOPEN_SOURCE=$cf_XOPEN_SOURCE\"\n\t;;\n(hpux11*)\n\tcf_xopen_source=\"-D_HPUX_SOURCE -D_XOPEN_SOURCE=500\"\n\t;;\n(hpux*)\n\tcf_xopen_source=\"-D_HPUX_SOURCE\"\n\t;;\n(irix[[56]].*)\n\tcf_xopen_source=\"-D_SGI_SOURCE\"\n\tcf_XOPEN_SOURCE=\n\t;;\n(linux*|uclinux*|gnu*|mint*|k*bsd*-gnu|cygwin)\n\tCF_GNU_SOURCE\n\t;;\n(minix*)\n\tcf_xopen_source=\"-D_NETBSD_SOURCE\" # POSIX.1-2001 features are ifdef'd with this...\n\t;;\n(mirbsd*)\n\t# setting _XOPEN_SOURCE or _POSIX_SOURCE breaks <sys/select.h> and other headers which use u_int / u_short types\n\tcf_XOPEN_SOURCE=\n\tCF_POSIX_C_SOURCE($cf_POSIX_C_SOURCE)\n\t;;\n(netbsd*)\n\tcf_xopen_source=\"-D_NETBSD_SOURCE\" # setting _XOPEN_SOURCE breaks IPv6 for lynx on NetBSD 1.6, breaks xterm, is not needed for ncursesw\n\t;;\n(openbsd[[4-9]]*)\n\t# setting _XOPEN_SOURCE lower than 500 breaks g++ compile with wchar.h, needed for ncursesw\n\tcf_xopen_source=\"-D_BSD_SOURCE\"\n\tcf_XOPEN_SOURCE=600\n\t;;\n(openbsd*)\n\t# setting _XOPEN_SOURCE breaks xterm on OpenBSD 2.8, is not needed for ncursesw\n\t;;\n(osf[[45]]*)\n\tcf_xopen_source=\"-D_OSF_SOURCE\"\n\t;;\n(nto-qnx*)\n\tcf_xopen_source=\"-D_QNX_SOURCE\"\n\t;;\n(sco*)\n\t# setting _XOPEN_SOURCE breaks Lynx on SCO Unix / OpenServer\n\t;;\n(solaris2.*)\n\tcf_xopen_source=\"-D__EXTENSIONS__\"\n\tcf_cv_xopen_source=broken\n\t;;\n(sysv4.2uw2.*) # Novell/SCO UnixWare 2.x (tested on 2.1.2)\n\tcf_XOPEN_SOURCE=\n\tcf_POSIX_C_SOURCE=\n\t;;\n(*)\n\tCF_TRY_XOPEN_SOURCE\n\tCF_POSIX_C_SOURCE($cf_POSIX_C_SOURCE)\n\t;;\nesac\n\nif test -n \"$cf_xopen_source\" ; then\n\tCF_ADD_CFLAGS($cf_xopen_source,true)\nfi\n\ndnl In anything but the default case, we may have system-specific setting\ndnl which is still not guaranteed to provide all of the entrypoints that\ndnl _XOPEN_SOURCE would yield.\nif test -n \"$cf_XOPEN_SOURCE\" && test -z \"$cf_cv_xopen_source\" ; then\n\tAC_MSG_CHECKING(if _XOPEN_SOURCE really is set)\n\tAC_TRY_COMPILE([#include <stdlib.h>],[\n#ifndef _XOPEN_SOURCE\nmake an error\n#endif],\n\t[cf_XOPEN_SOURCE_set=yes],\n\t[cf_XOPEN_SOURCE_set=no])\n\tAC_MSG_RESULT($cf_XOPEN_SOURCE_set)\n\tif test $cf_XOPEN_SOURCE_set = yes\n\tthen\n\t\tAC_TRY_COMPILE([#include <stdlib.h>],[\n#if (_XOPEN_SOURCE - 0) < $cf_XOPEN_SOURCE\nmake an error\n#endif],\n\t\t[cf_XOPEN_SOURCE_set_ok=yes],\n\t\t[cf_XOPEN_SOURCE_set_ok=no])\n\t\tif test $cf_XOPEN_SOURCE_set_ok = no\n\t\tthen\n\t\t\tAC_MSG_WARN(_XOPEN_SOURCE is lower than requested)\n\t\tfi\n\telse\n\t\tCF_TRY_XOPEN_SOURCE\n\tfi\nfi\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_X_ATHENA version: 23 updated: 2015/04/12 15:39:00\ndnl -----------\ndnl Check for Xaw (Athena) libraries\ndnl\ndnl Sets $cf_x_athena according to the flavor of Xaw which is used.\nAC_DEFUN([CF_X_ATHENA],\n[\ncf_x_athena=${cf_x_athena:-Xaw}\n\nAC_MSG_CHECKING(if you want to link with Xaw 3d library)\nwithval=\nAC_ARG_WITH(Xaw3d,\n\t[  --with-Xaw3d            link with Xaw 3d library])\nif test \"$withval\" = yes ; then\n\tcf_x_athena=Xaw3d\n\tAC_MSG_RESULT(yes)\nelse\n\tAC_MSG_RESULT(no)\nfi\n\nAC_MSG_CHECKING(if you want to link with Xaw 3d xft library)\nwithval=\nAC_ARG_WITH(Xaw3dxft,\n\t[  --with-Xaw3dxft         link with Xaw 3d xft library])\nif test \"$withval\" = yes ; then\n\tcf_x_athena=Xaw3dxft\n\tAC_MSG_RESULT(yes)\nelse\n\tAC_MSG_RESULT(no)\nfi\n\nAC_MSG_CHECKING(if you want to link with neXT Athena library)\nwithval=\nAC_ARG_WITH(neXtaw,\n\t[  --with-neXtaw           link with neXT Athena library])\nif test \"$withval\" = yes ; then\n\tcf_x_athena=neXtaw\n\tAC_MSG_RESULT(yes)\nelse\n\tAC_MSG_RESULT(no)\nfi\n\nAC_MSG_CHECKING(if you want to link with Athena-Plus library)\nwithval=\nAC_ARG_WITH(XawPlus,\n\t[  --with-XawPlus          link with Athena-Plus library])\nif test \"$withval\" = yes ; then\n\tcf_x_athena=XawPlus\n\tAC_MSG_RESULT(yes)\nelse\n\tAC_MSG_RESULT(no)\nfi\n\ncf_x_athena_lib=\"\"\n\nif test \"$PKG_CONFIG\" != none ; then\n\tcf_athena_list=\n\ttest \"$cf_x_athena\" = Xaw && cf_athena_list=\"xaw8 xaw7 xaw6\"\n\tfor cf_athena_pkg in \\\n\t\t$cf_athena_list \\\n\t\t${cf_x_athena} \\\n\t\t${cf_x_athena}-devel \\\n\t\tlib${cf_x_athena} \\\n\t\tlib${cf_x_athena}-devel\n\tdo\n\t\tCF_TRY_PKG_CONFIG($cf_athena_pkg,[\n\t\t\tcf_x_athena_lib=\"$cf_pkgconfig_libs\"\n\t\t\tCF_UPPER(cf_x_athena_LIBS,HAVE_LIB_$cf_x_athena)\n\t\t\tAC_DEFINE_UNQUOTED($cf_x_athena_LIBS)\n\n\t\t\tCF_TRIM_X_LIBS\n\nAC_CACHE_CHECK(for usable $cf_x_athena/Xmu package,cf_cv_xaw_compat,[\nAC_TRY_LINK([\n#include <X11/Xmu/CharSet.h>\n],[\nint check = XmuCompareISOLatin1(\"big\", \"small\")\n],[cf_cv_xaw_compat=yes],[cf_cv_xaw_compat=no])])\n\n\t\t\tif test \"$cf_cv_xaw_compat\" = no\n\t\t\tthen\n\t\t\t\t# workaround for broken \".pc\" files...\n\t\t\t\tcase \"$cf_x_athena_lib\" in\n\t\t\t\t(*-lXmu*)\n\t\t\t\t\t;;\n\t\t\t\t(*)\n\t\t\t\t\tCF_VERBOSE(work around broken package)\n\t\t\t\t\tcf_save_xmu=\"$LIBS\"\n\t\t\t\t\tcf_first_lib=`echo \"$cf_save_xmu\" | sed -e 's/^[ ][ ]*//' -e 's/ .*//'`\n\t\t\t\t\tCF_TRY_PKG_CONFIG(xmu,[\n\t\t\t\t\t\t\tLIBS=\"$cf_save_xmu\"\n\t\t\t\t\t\t\tCF_ADD_LIB_AFTER($cf_first_lib,$cf_pkgconfig_libs)\n\t\t\t\t\t\t],[\n\t\t\t\t\t\t\tCF_ADD_LIB_AFTER($cf_first_lib,-lXmu)\n\t\t\t\t\t\t])\n\t\t\t\t\tCF_TRIM_X_LIBS\n\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tfi\n\n\t\t\tbreak])\n\tdone\nfi\n\nif test -z \"$cf_x_athena_lib\" ; then\n\tCF_X_EXT\n\tCF_X_TOOLKIT\n\tCF_X_ATHENA_CPPFLAGS($cf_x_athena)\n\tCF_X_ATHENA_LIBS($cf_x_athena)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_X_ATHENA_CPPFLAGS version: 5 updated: 2010/05/26 17:35:30\ndnl --------------------\ndnl Normally invoked by CF_X_ATHENA, with $1 set to the appropriate flavor of\ndnl the Athena widgets, e.g., Xaw, Xaw3d, neXtaw.\nAC_DEFUN([CF_X_ATHENA_CPPFLAGS],\n[\ncf_x_athena_root=ifelse([$1],,Xaw,[$1])\ncf_x_athena_inc=\"\"\n\nfor cf_path in default \\\n\t/usr/contrib/X11R6 \\\n\t/usr/contrib/X11R5 \\\n\t/usr/lib/X11R5 \\\n\t/usr/local\ndo\n\tif test -z \"$cf_x_athena_inc\" ; then\n\t\tcf_save=\"$CPPFLAGS\"\n\t\tcf_test=X11/$cf_x_athena_root/SimpleMenu.h\n\t\tif test $cf_path != default ; then\n\t\t\tCPPFLAGS=\"$cf_save -I$cf_path/include\"\n\t\t\tAC_MSG_CHECKING(for $cf_test in $cf_path)\n\t\telse\n\t\t\tAC_MSG_CHECKING(for $cf_test)\n\t\tfi\n\t\tAC_TRY_COMPILE([\n#include <X11/Intrinsic.h>\n#include <$cf_test>],[],\n\t\t\t[cf_result=yes],\n\t\t\t[cf_result=no])\n\t\tAC_MSG_RESULT($cf_result)\n\t\tif test \"$cf_result\" = yes ; then\n\t\t\tcf_x_athena_inc=$cf_path\n\t\t\tbreak\n\t\telse\n\t\t\tCPPFLAGS=\"$cf_save\"\n\t\tfi\n\tfi\ndone\n\nif test -z \"$cf_x_athena_inc\" ; then\n\tAC_MSG_WARN(\n[Unable to successfully find Athena header files with test program])\nelif test \"$cf_x_athena_inc\" != default ; then\n\tCPPFLAGS=\"$CPPFLAGS -I$cf_x_athena_inc\"\nfi\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_X_ATHENA_LIBS version: 12 updated: 2011/07/17 19:55:02\ndnl ----------------\ndnl Normally invoked by CF_X_ATHENA, with $1 set to the appropriate flavor of\ndnl the Athena widgets, e.g., Xaw, Xaw3d, neXtaw.\nAC_DEFUN([CF_X_ATHENA_LIBS],\n[AC_REQUIRE([CF_X_TOOLKIT])\ncf_x_athena_root=ifelse([$1],,Xaw,[$1])\ncf_x_athena_lib=\"\"\n\nfor cf_path in default \\\n\t/usr/contrib/X11R6 \\\n\t/usr/contrib/X11R5 \\\n\t/usr/lib/X11R5 \\\n\t/usr/local\ndo\n\tfor cf_lib in \\\n\t\t${cf_x_athena_root} \\\n\t\t${cf_x_athena_root}7 \\\n\t\t${cf_x_athena_root}6\n\tdo\n\tfor cf_libs in \\\n\t\t\"-l$cf_lib -lXmu\" \\\n\t\t\"-l$cf_lib -lXpm -lXmu\" \\\n\t\t\"-l${cf_lib}_s -lXmu_s\"\n\tdo\n\t\tif test -z \"$cf_x_athena_lib\" ; then\n\t\t\tcf_save=\"$LIBS\"\n\t\t\tcf_test=XawSimpleMenuAddGlobalActions\n\t\t\tif test $cf_path != default ; then\n\t\t\t\tCF_ADD_LIBS(-L$cf_path/lib $cf_libs)\n\t\t\t\tAC_MSG_CHECKING(for $cf_libs in $cf_path)\n\t\t\telse\n\t\t\t\tCF_ADD_LIBS($cf_libs)\n\t\t\t\tAC_MSG_CHECKING(for $cf_test in $cf_libs)\n\t\t\tfi\n\t\t\tAC_TRY_LINK([\n#include <X11/Intrinsic.h>\n#include <X11/$cf_x_athena_root/SimpleMenu.h>\n],[\n$cf_test((XtAppContext) 0)],\n\t\t\t\t[cf_result=yes],\n\t\t\t\t[cf_result=no])\n\t\t\tAC_MSG_RESULT($cf_result)\n\t\t\tif test \"$cf_result\" = yes ; then\n\t\t\t\tcf_x_athena_lib=\"$cf_libs\"\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tLIBS=\"$cf_save\"\n\t\tfi\n\tdone # cf_libs\n\t\ttest -n \"$cf_x_athena_lib\" && break\n\tdone # cf_lib\ndone\n\nif test -z \"$cf_x_athena_lib\" ; then\n\tAC_MSG_ERROR(\n[Unable to successfully link Athena library (-l$cf_x_athena_root) with test program])\nfi\n\nCF_UPPER(cf_x_athena_LIBS,HAVE_LIB_$cf_x_athena)\nAC_DEFINE_UNQUOTED($cf_x_athena_LIBS)\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_X_EXT version: 3 updated: 2010/06/02 05:03:05\ndnl --------\nAC_DEFUN([CF_X_EXT],[\nCF_TRY_PKG_CONFIG(Xext,,[\n\tAC_CHECK_LIB(Xext,XextCreateExtension,\n\t\t[CF_ADD_LIB(Xext)])])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_X_TOOLKIT version: 23 updated: 2015/04/12 15:39:00\ndnl ------------\ndnl Check for X Toolkit libraries\nAC_DEFUN([CF_X_TOOLKIT],\n[\nAC_REQUIRE([AC_PATH_XTRA])\nAC_REQUIRE([CF_CHECK_CACHE])\n\n# OSX is schizoid about who owns /usr/X11 (old) versus /opt/X11 (new), and (and\n# in some cases has installed dummy files in the former, other cases replaced\n# it with a link to the new location).  This complicates the configure script.\n# Check for that pitfall, and recover using pkg-config\n#\n# If none of these are set, the configuration is almost certainly broken.\nif test -z \"${X_CFLAGS}${X_PRE_LIBS}${X_LIBS}${X_EXTRA_LIBS}\"\nthen\n\tCF_TRY_PKG_CONFIG(x11,,[AC_MSG_WARN(unable to find X11 library)])\n\tCF_TRY_PKG_CONFIG(ice,,[AC_MSG_WARN(unable to find ICE library)])\n\tCF_TRY_PKG_CONFIG(sm,,[AC_MSG_WARN(unable to find SM library)])\n\tCF_TRY_PKG_CONFIG(xt,,[AC_MSG_WARN(unable to find Xt library)])\nfi\n\ncf_have_X_LIBS=no\n\nCF_TRY_PKG_CONFIG(xt,[\n\n\tcase \"x$LIBS\" in\n\t(*-lX11*)\n\t\t;;\n\t(*)\n# we have an \"xt\" package, but it may omit Xt's dependency on X11\nAC_CACHE_CHECK(for usable X dependency,cf_cv_xt_x11_compat,[\nAC_TRY_LINK([\n#include <X11/Xlib.h>\n],[\n\tint rc1 = XDrawLine((Display*) 0, (Drawable) 0, (GC) 0, 0, 0, 0, 0);\n\tint rc2 = XClearWindow((Display*) 0, (Window) 0);\n\tint rc3 = XMoveWindow((Display*) 0, (Window) 0, 0, 0);\n\tint rc4 = XMoveResizeWindow((Display*)0, (Window)0, 0, 0, 0, 0);\n],[cf_cv_xt_x11_compat=yes],[cf_cv_xt_x11_compat=no])])\n\t\tif test \"$cf_cv_xt_x11_compat\" = no\n\t\tthen\n\t\t\tCF_VERBOSE(work around broken X11 dependency)\n\t\t\t# 2010/11/19 - good enough until a working Xt on Xcb is delivered.\n\t\t\tCF_TRY_PKG_CONFIG(x11,,[CF_ADD_LIB_AFTER(-lXt,-lX11)])\n\t\tfi\n\t\t;;\n\tesac\n\nAC_CACHE_CHECK(for usable X Toolkit package,cf_cv_xt_ice_compat,[\nAC_TRY_LINK([\n#include <X11/Shell.h>\n],[int num = IceConnectionNumber(0)\n],[cf_cv_xt_ice_compat=yes],[cf_cv_xt_ice_compat=no])])\n\n\tif test \"$cf_cv_xt_ice_compat\" = no\n\tthen\n\t\t# workaround for broken \".pc\" files used for X Toolkit.\n\t\tcase \"x$X_PRE_LIBS\" in\n\t\t(*-lICE*)\n\t\t\tcase \"x$LIBS\" in\n\t\t\t(*-lICE*)\n\t\t\t\t;;\n\t\t\t(*)\n\t\t\t\tCF_VERBOSE(work around broken ICE dependency)\n\t\t\t\tCF_TRY_PKG_CONFIG(ice,\n\t\t\t\t\t[CF_TRY_PKG_CONFIG(sm)],\n\t\t\t\t\t[CF_ADD_LIB_AFTER(-lXt,$X_PRE_LIBS)])\n\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\t\tesac\n\tfi\n\n\tcf_have_X_LIBS=yes\n],[\n\n\tLDFLAGS=\"$X_LIBS $LDFLAGS\"\n\tCF_CHECK_CFLAGS($X_CFLAGS)\n\n\tAC_CHECK_FUNC(XOpenDisplay,,[\n\tAC_CHECK_LIB(X11,XOpenDisplay,\n\t\t[CF_ADD_LIB(X11)],,\n\t\t[$X_PRE_LIBS $LIBS $X_EXTRA_LIBS])])\n\n\tAC_CHECK_FUNC(XtAppInitialize,,[\n\tAC_CHECK_LIB(Xt, XtAppInitialize,\n\t\t[AC_DEFINE(HAVE_LIBXT,1,[Define to 1 if we can compile with the Xt library])\n\t\t cf_have_X_LIBS=Xt\n\t\t LIBS=\"-lXt $X_PRE_LIBS $LIBS $X_EXTRA_LIBS\"],,\n\t\t[$X_PRE_LIBS $LIBS $X_EXTRA_LIBS])])\n])\n\nif test $cf_have_X_LIBS = no ; then\n\tAC_MSG_WARN(\n[Unable to successfully link X Toolkit library (-lXt) with\ntest program.  You will have to check and add the proper libraries by hand\nto makefile.])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF__CHECK_RUN version: 1 updated: 2018/02/21 21:26:03\ndnl -------------\ndnl Check if a simple program can be made to run with the existing libraries.\ndefine([CF__CHECK_RUN],[\nAC_TRY_RUN([#include <stdio.h>\nint main(void) {\n\tfflush(stderr);\n\t${cf_cv_main_return:-return}(0);\n}],\n\t$1=yes,\n\t$1=no,\n\t$1=unknown)\n])\ndnl ---------------------------------------------------------------------------\ndnl CF__CURSES_HEAD version: 2 updated: 2010/10/23 15:54:49\ndnl ---------------\ndnl Define a reusable chunk which includes <curses.h> and <term.h> when they\ndnl are both available.\ndefine([CF__CURSES_HEAD],[\n#ifdef HAVE_XCURSES\n#include <xcurses.h>\nchar * XCursesProgramName = \"test\";\n#else\n#include <${cf_cv_ncurses_header:-curses.h}>\n#if defined(NCURSES_VERSION) && defined(HAVE_NCURSESW_TERM_H)\n#include <ncursesw/term.h>\n#elif defined(NCURSES_VERSION) && defined(HAVE_NCURSES_TERM_H)\n#include <ncurses/term.h>\n#elif defined(HAVE_TERM_H)\n#include <term.h>\n#endif\n#endif\n])\ndnl ---------------------------------------------------------------------------\ndnl CF__ICONV_BODY version: 2 updated: 2007/07/26 17:35:47\ndnl --------------\ndnl Test-code needed for iconv compile-checks\ndefine([CF__ICONV_BODY],[\n\ticonv_t cd = iconv_open(\"\",\"\");\n\ticonv(cd,NULL,NULL,NULL,NULL);\n\ticonv_close(cd);]\n)dnl\ndnl ---------------------------------------------------------------------------\ndnl CF__ICONV_HEAD version: 1 updated: 2007/07/26 15:57:03\ndnl --------------\ndnl Header-files needed for iconv compile-checks\ndefine([CF__ICONV_HEAD],[\n#include <stdlib.h>\n#include <iconv.h>]\n)dnl\ndnl ---------------------------------------------------------------------------\ndnl CF__INET_HEAD version: 1 updated: 2013/10/08 17:47:05\ndnl -------------\ndnl Header-files needed for inet.h compile-checks\ndefine([CF__INET_HEAD],[\n#if defined(__MINGW32__)\n\n#undef WIN32_LEAN_AND_MEAN\n#define WIN32_LEAN_AND_MEAN\n#include <windows.h>\n\n#ifdef HAVE_WINSOCK2_H\n#include <winsock2.h>\n#else\n#ifdef HAVE_WINSOCK_H\n#include <winsock.h>\n#endif\n#endif\n\n#else\n\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n\n#endif\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF__INTL_BODY version: 3 updated: 2017/07/10 20:13:33\ndnl -------------\ndnl Test-code needed for libintl compile-checks\ndnl $1 = parameter 2 from AM_WITH_NLS\ndefine([CF__INTL_BODY],[\n\tbindtextdomain (\"\", \"\");\n\treturn (int) gettext (\"\")\n\t\t\tifelse([$1], need-ngettext, [ + (int) ngettext (\"\", \"\", 0)], [])\n#ifndef IGNORE_MSGFMT_HACK\n\t\t\t[ + _nl_msg_cat_cntr]\n#endif\n])\ndnl ---------------------------------------------------------------------------\ndnl CF__INTL_HEAD version: 1 updated: 2007/07/26 17:35:47\ndnl -------------\ndnl Header-files needed for libintl compile-checks\ndefine([CF__INTL_HEAD],[\n#include <libintl.h>\nextern int _nl_msg_cat_cntr;\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF__SSL_BODY version: 2 updated: 2008/04/13 10:56:06\ndnl ------------\ndnl Body for test-compile of SSL code.\ndefine([CF__SSL_BODY],[\n#ifdef USE_GNUTLS_FUNCS\n    gnutls_global_init();\n#else\n    SSL_shutdown((SSL *)0)\n#endif\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF__SSL_HEAD version: 2 updated: 2008/04/13 10:56:06\ndnl ------------\ndnl Headers for test-compile of SSL code.\ndefine([CF__SSL_HEAD],[\n#include <stdio.h>\n#if defined(USE_OPENSSL_INCL)\n#include <openssl/ssl.h>\n#elif defined(USE_GNUTLS_FUNCS)\n#include <gnutls/gnutls.h>\n#elif defined(USE_GNUTLS_INCL)\n#include <gnutls/openssl.h>\n#else\n#include <ssl.h>\n#endif\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl jm_GLIBC21 version: 4 updated: 2015/05/10 19:52:14\ndnl ----------\ndnl Inserted as requested by gettext 0.10.40\ndnl File from /usr/share/aclocal\ndnl glibc21.m4\ndnl ====================\ndnl serial 2\ndnl\ndnl Test for the GNU C Library, version 2.1 or newer.\ndnl From Bruno Haible.\nAC_DEFUN([jm_GLIBC21],\n[\nAC_CACHE_CHECK(whether we are using the GNU C Library 2.1 or newer,\n\tac_cv_gnu_library_2_1,\n\t[AC_EGREP_CPP([Lucky GNU user],\n\t[\n#include <features.h>\n#ifdef __GNU_LIBRARY__\n #if (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 1) || (__GLIBC__ > 2)\n  Lucky GNU user\n #endif\n#endif\n\t],\n\tac_cv_gnu_library_2_1=yes,\n\tac_cv_gnu_library_2_1=no)])\n\tAC_SUBST(GLIBC21)\n\tGLIBC21=\"$ac_cv_gnu_library_2_1\"\n])\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/src/LYIcon.rc",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/src/chrtrans/cp437_uni.tbl",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/src/chrtrans/iso08_uni.tbl",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/po/cs.po",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/po/hu.po",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/po/uk.po",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/po/ca.po",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/po/sl.po",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/po/pt_BR.po",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/po/ja.po",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/test/iso-8859-1.html",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/test/iso-8859-1a.html",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/test/raw8bit.html",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/test/cp-1252a.html",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/test/ALT88592.html",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/test/cp-1252.html",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/test/image.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/test/iso-8859-2a.html",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/test/iso-8859-2.html",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/samples/lynx.ico",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/docs/README.jp",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/docs/OS-390.announce",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/PACKAGE/lynx.nsi",
        "/tmp/vanessa/spack-stage/spack-stage-lynx-2.8.9.1-cvhzahxxlsm5d66mmuryslszkazxkzed/spack-src/PACKAGE/lynx.iss"
    ],
    "total_files": 526
}