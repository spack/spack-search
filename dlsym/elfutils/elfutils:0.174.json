{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/libebl/eblopenbackend.c": "/* Generate ELF backend handle.\n   Copyright (C) 2000-2017 Red Hat, Inc.\n   This file is part of elfutils.\n\n   This file is free software; you can redistribute it and/or modify\n   it under the terms of either\n\n     * the GNU Lesser General Public License as published by the Free\n       Software Foundation; either version 3 of the License, or (at\n       your option) any later version\n\n   or\n\n     * the GNU General Public License as published by the Free\n       Software Foundation; either version 2 of the License, or (at\n       your option) any later version\n\n   or both in parallel, as here.\n\n   elfutils is distributed in the hope that it will be useful, but\n   WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   General Public License for more details.\n\n   You should have received copies of the GNU General Public License and\n   the GNU Lesser General Public License along with this program.  If\n   not, see <http://www.gnu.org/licenses/>.  */\n\n#ifdef HAVE_CONFIG_H\n# include <config.h>\n#endif\n\n#include <assert.h>\n#include <dlfcn.h>\n#include <libelfP.h>\n#include <dwarf.h>\n#include <stdlib.h>\n#include <string.h>\n#include <stdio.h>\n\n#include <system.h>\n#include <libeblP.h>\n\n\n/* This table should contain the complete list of architectures as far\n   as the ELF specification is concerned.  */\n/* XXX When things are stable replace the string pointers with char\n   arrays to avoid relocations.  */\nstatic const struct\n{\n  const char *dsoname;\n  const char *emulation;\n  const char *prefix;\n  int prefix_len;\n  int em;\n  int class;\n  int data;\n} machines[] =\n{\n  { \"i386\", \"elf_i386\", \"i386\", 4, EM_386, ELFCLASS32, ELFDATA2LSB },\n  { \"ia64\", \"elf_ia64\", \"ia64\", 4, EM_IA_64, ELFCLASS64, ELFDATA2LSB },\n  { \"alpha\", \"elf_alpha\", \"alpha\", 5, EM_ALPHA, ELFCLASS64, ELFDATA2LSB },\n  { \"x86_64\", \"elf_x86_64\", \"x86_64\", 6, EM_X86_64, ELFCLASS64, ELFDATA2LSB },\n  { \"ppc\", \"elf_ppc\", \"ppc\", 3, EM_PPC, ELFCLASS32, ELFDATA2MSB },\n  { \"ppc64\", \"elf_ppc64\", \"ppc64\", 5, EM_PPC64, ELFCLASS64, ELFDATA2MSB },\n  { \"tilegx\", \"elf_tilegx\", \"tilegx\", 6, EM_TILEGX, ELFCLASS64, ELFDATA2LSB },\n  // XXX class and machine fields need to be filled in for all archs.\n  { \"sh\", \"elf_sh\", \"sh\", 2, EM_SH, 0, 0 },\n  { \"arm\", \"ebl_arm\", \"arm\", 3, EM_ARM, 0, 0 },\n  { \"sparc\", \"elf_sparcv9\", \"sparc\", 5, EM_SPARCV9, 0, 0 },\n  { \"sparc\", \"elf_sparc\", \"sparc\", 5, EM_SPARC, 0, 0 },\n  { \"sparc\", \"elf_sparcv8plus\", \"sparc\", 5, EM_SPARC32PLUS, 0, 0 },\n  { \"s390\", \"ebl_s390\", \"s390\", 4, EM_S390, 0, 0 },\n\n  { \"m32\", \"elf_m32\", \"m32\", 3, EM_M32, 0, 0 },\n  { \"m68k\", \"elf_m68k\", \"m68k\", 4, EM_68K, ELFCLASS32, ELFDATA2MSB },\n  { \"m88k\", \"elf_m88k\", \"m88k\", 4, EM_88K, 0, 0 },\n  { \"i860\", \"elf_i860\", \"i860\", 4, EM_860, 0, 0 },\n  { \"s370\", \"ebl_s370\", \"s370\", 4, EM_S370, 0, 0 },\n  { \"parisc\", \"elf_parisc\", \"parisc\", 6, EM_PARISC, 0, 0 },\n  { \"vpp500\", \"elf_vpp500\", \"vpp500\", 5, EM_VPP500, 0, 0 },\n  { \"sparc\", \"elf_v8plus\", \"v8plus\", 6, EM_SPARC32PLUS, 0, 0 },\n  { \"i960\", \"elf_i960\", \"i960\", 4, EM_960, 0, 0 },\n  { \"v800\", \"ebl_v800\", \"v800\", 4, EM_V800, 0, 0 },\n  { \"fr20\", \"ebl_fr20\", \"fr20\", 4, EM_FR20, 0, 0 },\n  { \"rh32\", \"ebl_rh32\", \"rh32\", 4, EM_RH32, 0, 0 },\n  { \"rce\", \"ebl_rce\", \"rce\", 3, EM_RCE, 0, 0 },\n  { \"tricore\", \"elf_tricore\", \"tricore\", 7, EM_TRICORE, 0, 0 },\n  { \"arc\", \"elf_arc\", \"arc\", 3, EM_ARC, 0, 0 },\n  { \"h8\", \"elf_h8_300\", \"h8_300\", 6, EM_H8_300, 0, 0 },\n  { \"h8\", \"elf_h8_300h\", \"h8_300h\", 6, EM_H8_300H, 0, 0 },\n  { \"h8\", \"elf_h8s\", \"h8s\", 6, EM_H8S, 0, 0 },\n  { \"h8\", \"elf_h8_500\", \"h8_500\", 6, EM_H8_500, 0, 0 },\n  { \"coldfire\", \"elf_coldfire\", \"coldfire\", 8, EM_COLDFIRE, 0, 0 },\n  { \"m68k\", \"elf_68hc12\", \"68hc12\", 6, EM_68HC12, 0, 0 },\n  { \"mma\", \"elf_mma\", \"mma\", 3, EM_MMA, 0, 0 },\n  { \"pcp\", \"elf_pcp\", \"pcp\", 3, EM_PCP, 0, 0 },\n  { \"ncpu\", \"elf_ncpu\", \"ncpu\", 4, EM_NCPU, 0, 0 },\n  { \"ndr1\", \"elf_ndr1\", \"ndr1\", 4, EM_NDR1, 0, 0 },\n  { \"starcore\", \"elf_starcore\", \"starcore\", 8, EM_STARCORE, 0, 0 },\n  { \"me16\", \"elf_me16\", \"em16\", 4, EM_ME16, 0, 0 },\n  { \"st100\", \"elf_st100\", \"st100\", 5, EM_ST100, 0, 0 },\n  { \"tinyj\", \"elf_tinyj\", \"tinyj\", 5, EM_TINYJ, 0, 0 },\n  { \"pdsp\", \"elf_pdsp\", \"pdsp\", 4, EM_PDSP, 0, 0 },\n  { \"fx66\", \"elf_fx66\", \"fx66\", 4, EM_FX66, 0, 0 },\n  { \"st9plus\", \"elf_st9plus\", \"st9plus\", 7, EM_ST9PLUS, 0, 0 },\n  { \"st7\", \"elf_st7\", \"st7\", 3, EM_ST7, 0, 0 },\n  { \"m68k\", \"elf_68hc16\", \"68hc16\", 6, EM_68HC16, 0, 0 },\n  { \"m68k\", \"elf_68hc11\", \"68hc11\", 6, EM_68HC11, 0, 0 },\n  { \"m68k\", \"elf_68hc08\", \"68hc08\", 6, EM_68HC08, 0, 0 },\n  { \"m68k\", \"elf_68hc05\", \"68hc05\", 6, EM_68HC05, 0, 0 },\n  { \"svx\", \"elf_svx\", \"svx\", 3, EM_SVX, 0, 0 },\n  { \"st19\", \"elf_st19\", \"st19\", 4, EM_ST19, 0, 0 },\n  { \"vax\", \"elf_vax\", \"vax\", 3, EM_VAX, 0, 0 },\n  { \"cris\", \"elf_cris\", \"cris\", 4, EM_CRIS, 0, 0 },\n  { \"javelin\", \"elf_javelin\", \"javelin\", 7, EM_JAVELIN, 0, 0 },\n  { \"firepath\", \"elf_firepath\", \"firepath\", 8, EM_FIREPATH, 0, 0 },\n  { \"zsp\", \"elf_zsp\", \"zsp\", 3, EM_ZSP, 0, 0 },\n  { \"mmix\", \"elf_mmix\", \"mmix\", 4, EM_MMIX, 0, 0 },\n  { \"hunay\", \"elf_huany\", \"huany\", 5, EM_HUANY, 0, 0 },\n  { \"prism\", \"elf_prism\", \"prism\", 5, EM_PRISM, 0, 0 },\n  { \"avr\", \"elf_avr\", \"avr\", 3, EM_AVR, 0, 0 },\n  { \"fr30\", \"elf_fr30\", \"fr30\", 4, EM_FR30, 0, 0 },\n  { \"dv10\", \"elf_dv10\", \"dv10\", 4, EM_D10V, 0, 0 },\n  { \"dv30\", \"elf_dv30\", \"dv30\", 4, EM_D30V, 0, 0 },\n  { \"v850\", \"elf_v850\", \"v850\", 4, EM_V850, 0, 0 },\n  { \"m32r\", \"elf_m32r\", \"m32r\", 4, EM_M32R, 0, 0 },\n  { \"mn10300\", \"elf_mn10300\", \"mn10300\", 7, EM_MN10300, 0, 0 },\n  { \"mn10200\", \"elf_mn10200\", \"mn10200\", 7, EM_MN10200, 0, 0 },\n  { \"pj\", \"elf_pj\", \"pj\", 2, EM_PJ, 0, 0 },\n  { \"openrisc\", \"elf_openrisc\", \"openrisc\", 8, EM_OPENRISC, 0, 0 },\n  { \"arc\", \"elf_arc_a5\", \"arc_a5\", 6, EM_ARC_A5, 0, 0 },\n  { \"xtensa\", \"elf_xtensa\", \"xtensa\", 6, EM_XTENSA, 0, 0 },\n  { \"aarch64\", \"elf_aarch64\", \"aarch64\", 7, EM_AARCH64, ELFCLASS64, 0 },\n  { \"bpf\", \"elf_bpf\", \"bpf\", 3, EM_BPF, 0, 0 },\n  { \"riscv\", \"elf_riscv\", \"riscv\", 5, EM_RISCV, ELFCLASS64, ELFDATA2LSB },\n  { \"riscv\", \"elf_riscv\", \"riscv\", 5, EM_RISCV, ELFCLASS32, ELFDATA2LSB },\n};\n#define nmachines (sizeof (machines) / sizeof (machines[0]))\n\n/* No machine prefix should be larger than this.  */\n#define MAX_PREFIX_LEN 16\n\n/* Default callbacks.  Mostly they just return the error value.  */\nstatic const char *default_reloc_type_name (int ignore, char *buf, size_t len);\nstatic bool default_reloc_type_check (int ignore);\nstatic bool default_reloc_valid_use (Elf *elf, int ignore);\nstatic Elf_Type default_reloc_simple_type (Ebl *ebl, int ignore);\nstatic bool default_gotpc_reloc_check (Elf *elf, int ignore);\nstatic const char *default_segment_type_name (int ignore, char *buf,\n\t\t\t\t\t      size_t len);\nstatic const char *default_section_type_name (int ignore, char *buf,\n\t\t\t\t\t      size_t len);\nstatic const char *default_section_name (int ignore, int ignore2, char *buf,\n\t\t\t\t\t size_t len);\nstatic const char *default_machine_flag_name (Elf64_Word *ignore);\nstatic bool default_machine_flag_check (Elf64_Word flags);\nstatic bool default_machine_section_flag_check (GElf_Xword flags);\nstatic const char *default_symbol_type_name (int ignore, char *buf,\n\t\t\t\t\t     size_t len);\nstatic const char *default_symbol_binding_name (int ignore, char *buf,\n\t\t\t\t\t\tsize_t len);\nstatic const char *default_dynamic_tag_name (int64_t ignore, char *buf,\n\t\t\t\t\t     size_t len);\nstatic bool default_dynamic_tag_check (int64_t ignore);\nstatic const char *default_osabi_name (int ignore, char *buf, size_t len);\nstatic void default_destr (struct ebl *ignore);\nstatic const char *default_core_note_type_name (uint32_t, char *buf,\n\t\t\t\t\t\tsize_t len);\nstatic const char *default_object_note_type_name (const char *name, uint32_t,\n\t\t\t\t\t\t  char *buf, size_t len);\nstatic int default_core_note (const GElf_Nhdr *nhdr, const char *name,\n\t\t\t      GElf_Word *regs_offset, size_t *nregloc,\n\t\t\t      const Ebl_Register_Location **reglocs,\n\t\t\t      size_t *nitems, const Ebl_Core_Item **);\nstatic int default_auxv_info (GElf_Xword a_type,\n\t\t\t      const char **name, const char **format);\nstatic bool default_object_note (const char *name, uint32_t type,\n\t\t\t\t uint32_t descsz, const char *desc);\nstatic bool default_debugscn_p (const char *name);\nstatic bool default_copy_reloc_p (int reloc);\nstatic bool default_none_reloc_p (int reloc);\nstatic bool default_relative_reloc_p (int reloc);\nstatic bool default_check_special_symbol (Elf *elf,\n\t\t\t\t\t  const GElf_Sym *sym,\n\t\t\t\t\t  const char *name,\n\t\t\t\t\t  const GElf_Shdr *destshdr);\nstatic bool default_data_marker_symbol (const GElf_Sym *sym, const char *sname);\nstatic bool default_check_st_other_bits (unsigned char st_other);\nstatic bool default_check_special_section (Ebl *, int,\n\t\t\t\t\t   const GElf_Shdr *, const char *);\nstatic bool default_bss_plt_p (Elf *elf);\nstatic int default_return_value_location (Dwarf_Die *functypedie,\n\t\t\t\t\t  const Dwarf_Op **locops);\nstatic ssize_t default_register_info (Ebl *ebl,\n\t\t\t\t      int regno, char *name, size_t namelen,\n\t\t\t\t      const char **prefix,\n\t\t\t\t      const char **setname,\n\t\t\t\t      int *bits, int *type);\nstatic int default_syscall_abi (Ebl *ebl, int *sp, int *pc,\n\t\t\t\tint *callno, int args[6]);\nstatic bool default_check_object_attribute (Ebl *ebl, const char *vendor,\n\t\t\t\t\t    int tag, uint64_t value,\n\t\t\t\t\t    const char **tag_name,\n\t\t\t\t\t    const char **value_name);\nstatic bool default_check_reloc_target_type (Ebl *ebl, Elf64_Word sh_type);\nstatic int default_abi_cfi (Ebl *ebl, Dwarf_CIE *abi_info);\n\n\nstatic void\nfill_defaults (Ebl *result)\n{\n  result->reloc_type_name = default_reloc_type_name;\n  result->reloc_type_check = default_reloc_type_check;\n  result->reloc_valid_use = default_reloc_valid_use;\n  result->reloc_simple_type = default_reloc_simple_type;\n  result->gotpc_reloc_check = default_gotpc_reloc_check;\n  result->segment_type_name = default_segment_type_name;\n  result->section_type_name = default_section_type_name;\n  result->section_name = default_section_name;\n  result->machine_flag_name = default_machine_flag_name;\n  result->machine_flag_check = default_machine_flag_check;\n  result->machine_section_flag_check = default_machine_section_flag_check;\n  result->check_special_section = default_check_special_section;\n  result->symbol_type_name = default_symbol_type_name;\n  result->symbol_binding_name = default_symbol_binding_name;\n  result->dynamic_tag_name = default_dynamic_tag_name;\n  result->dynamic_tag_check = default_dynamic_tag_check;\n  result->osabi_name = default_osabi_name;\n  result->core_note_type_name = default_core_note_type_name;\n  result->object_note_type_name = default_object_note_type_name;\n  result->core_note = default_core_note;\n  result->auxv_info = default_auxv_info;\n  result->object_note = default_object_note;\n  result->debugscn_p = default_debugscn_p;\n  result->copy_reloc_p = default_copy_reloc_p;\n  result->none_reloc_p = default_none_reloc_p;\n  result->relative_reloc_p = default_relative_reloc_p;\n  result->check_special_symbol = default_check_special_symbol;\n  result->data_marker_symbol = default_data_marker_symbol;\n  result->check_st_other_bits = default_check_st_other_bits;\n  result->bss_plt_p = default_bss_plt_p;\n  result->return_value_location = default_return_value_location;\n  result->register_info = default_register_info;\n  result->syscall_abi = default_syscall_abi;\n  result->check_object_attribute = default_check_object_attribute;\n  result->check_reloc_target_type = default_check_reloc_target_type;\n  result->disasm = NULL;\n  result->abi_cfi = default_abi_cfi;\n  result->destr = default_destr;\n  result->sysvhash_entrysize = sizeof (Elf32_Word);\n}\n\n\n/* Find an appropriate backend for the file associated with ELF.  */\nstatic Ebl *\nopenbackend (Elf *elf, const char *emulation, GElf_Half machine)\n{\n  Ebl *result;\n  size_t cnt;\n\n  /* First allocate the data structure for the result.  We do this\n     here since this assures that the structure is always large\n     enough.  */\n  result = (Ebl *) calloc (1, sizeof (Ebl));\n  if (result == NULL)\n    {\n      // XXX uncomment\n      // __libebl_seterror (ELF_E_NOMEM);\n      return NULL;\n    }\n\n  /* Fill in the default callbacks.  The initializer for the machine\n     specific module can overwrite the values.  */\n  fill_defaults (result);\n\n  /* XXX Currently all we do is to look at 'e_machine' value in the\n     ELF header.  With an internal mapping table from EM_* value to\n     DSO name we try to load the appropriate module to handle this\n     binary type.\n\n     Multiple modules for the same machine type are possible and they\n     will be tried in sequence.  The lookup process will only stop\n     when a module which can handle the machine type is found or all\n     available matching modules are tried.  */\n  for (cnt = 0; cnt < nmachines; ++cnt)\n    if ((emulation != NULL && strcmp (emulation, machines[cnt].emulation) == 0)\n\t|| (emulation == NULL && machines[cnt].em == machine))\n      {\n\t/* Well, we know the emulation name now.  */\n\tresult->emulation = machines[cnt].emulation;\n\n\t/* We access some data structures directly.  Make sure the 32 and\n\t   64 bit variants are laid out the same.  */\n\tassert (offsetof (Elf32_Ehdr, e_machine)\n\t\t== offsetof (Elf64_Ehdr, e_machine));\n\tassert (sizeof (((Elf32_Ehdr *) 0)->e_machine)\n\t\t== sizeof (((Elf64_Ehdr *) 0)->e_machine));\n\tassert (offsetof (Elf, state.elf32.ehdr)\n\t\t== offsetof (Elf, state.elf64.ehdr));\n\n\t/* Prefer taking the information from the ELF file.  */\n\tif (elf == NULL)\n\t  {\n\t    result->machine = machines[cnt].em;\n\t    result->class = machines[cnt].class;\n\t    result->data = machines[cnt].data;\n\t  }\n\telse\n\t  {\n\t    result->machine = elf->state.elf32.ehdr->e_machine;\n\t    result->class = elf->state.elf32.ehdr->e_ident[EI_CLASS];\n\t    result->data = elf->state.elf32.ehdr->e_ident[EI_DATA];\n\t  }\n\n#ifndef LIBEBL_SUBDIR\n# define LIBEBL_SUBDIR PACKAGE\n#endif\n#define ORIGINDIR \"$ORIGIN/../$LIB/\" LIBEBL_SUBDIR \"/\"\n\n\t/* Give it a try.  At least the machine type matches.  First\n           try to load the module.  */\n\tchar dsoname[100];\n\tstrcpy (stpcpy (stpcpy (dsoname, ORIGINDIR \"libebl_\"),\n\t\t\tmachines[cnt].dsoname),\n\t\t\".so\");\n\n\tvoid *h = dlopen (dsoname, RTLD_LAZY);\n\tif (h == NULL)\n\t  {\n\t    strcpy (stpcpy (stpcpy (dsoname, \"libebl_\"),\n\t\t\t    machines[cnt].dsoname),\n\t\t    \".so\");\n\t    h = dlopen (dsoname, RTLD_LAZY);\n\t  }\n\n\t  /* Try without an explicit path.  */\n\tif (h != NULL)\n\t  {\n\t    /* We managed to load the object.  Now see whether the\n\t       initialization function likes our file.  */\n\t    static const char version[] = MODVERSION;\n\t    const char *modversion;\n\t    ebl_bhinit_t initp;\n\n\t    // We use a static number to help the compiler see we don't\n\t    // overflow the stack with an arbitrary number.\n\t    assert (machines[cnt].prefix_len <= MAX_PREFIX_LEN);\n\t    char symname[MAX_PREFIX_LEN + sizeof \"_init\"];\n\n\t    strcpy (mempcpy (symname, machines[cnt].prefix,\n\t\t\t     machines[cnt].prefix_len), \"_init\");\n\n\t    initp = (ebl_bhinit_t) dlsym (h, symname);\n\t    if (initp != NULL\n\t\t&& (modversion = initp (elf, machine, result, sizeof (Ebl)))\n\t\t&& strcmp (version, modversion) == 0)\n\t      {\n\t\t/* We found a module to handle our file.  */\n\t\tresult->dlhandle = h;\n\t\tresult->elf = elf;\n\n\t\t/* A few entries are mandatory.  */\n\t\tassert (result->name != NULL);\n\t\tassert (result->destr != NULL);\n\n\t\treturn result;\n\t      }\n\n\t    /* Not the module we need.  */\n\t    (void) dlclose (h);\n\t  }\n\n\t/* We cannot find a DSO but the emulation/machine ID matches.\n\t   Return that information.  */\n\tresult->dlhandle = NULL;\n\tresult->elf = elf;\n\tresult->name = machines[cnt].prefix;\n\tfill_defaults (result);\n\n\treturn result;\n      }\n\n  /* Nothing matched.  We use only the default callbacks.   */\n  result->dlhandle = NULL;\n  result->elf = elf;\n  result->emulation = \"<unknown>\";\n  result->name = \"<unknown>\";\n  fill_defaults (result);\n\n  return result;\n}\n\n\n/* Find an appropriate backend for the file associated with ELF.  */\nEbl *\nebl_openbackend (Elf *elf)\n{\n  GElf_Ehdr ehdr_mem;\n  GElf_Ehdr *ehdr;\n\n  /* Get the ELF header of the object.  */\n  ehdr = gelf_getehdr (elf, &ehdr_mem);\n  if (ehdr == NULL)\n    {\n      // XXX uncomment\n      // __libebl_seterror (elf_errno ());\n      return NULL;\n    }\n\n  return openbackend (elf, NULL, ehdr->e_machine);\n}\n\n\n/* Find backend without underlying ELF file.  */\nEbl *\nebl_openbackend_machine (GElf_Half machine)\n{\n  return openbackend (NULL, NULL, machine);\n}\n\n\n/* Find backend with given emulation name.  */\nEbl *\nebl_openbackend_emulation (const char *emulation)\n{\n  return openbackend (NULL, emulation, EM_NONE);\n}\n\n\n/* Default callbacks.  Mostly they just return the error value.  */\nstatic const char *\ndefault_reloc_type_name (int ignore __attribute__ ((unused)),\n\t\t\t char *buf __attribute__ ((unused)),\n\t\t\t size_t len __attribute__ ((unused)))\n{\n  return NULL;\n}\n\nstatic bool\ndefault_reloc_type_check (int ignore __attribute__ ((unused)))\n{\n  return false;\n}\n\nstatic bool\ndefault_reloc_valid_use (Elf *elf __attribute__ ((unused)),\n\t\t\t int ignore __attribute__ ((unused)))\n{\n  return false;\n}\n\nstatic Elf_Type\ndefault_reloc_simple_type (Ebl *eh __attribute__ ((unused)),\n\t\t\t   int ignore __attribute__ ((unused)))\n{\n  return ELF_T_NUM;\n}\n\nstatic bool\ndefault_gotpc_reloc_check (Elf *elf __attribute__ ((unused)),\n\t\t\t   int ignore __attribute__ ((unused)))\n{\n  return false;\n}\n\nstatic const char *\ndefault_segment_type_name (int ignore __attribute__ ((unused)),\n\t\t\t   char *buf __attribute__ ((unused)),\n\t\t\t   size_t len __attribute__ ((unused)))\n{\n  return NULL;\n}\n\nstatic const char *\ndefault_section_type_name (int ignore __attribute__ ((unused)),\n\t\t\t   char *buf __attribute__ ((unused)),\n\t\t\t   size_t len __attribute__ ((unused)))\n{\n  return NULL;\n}\n\nstatic const char *\ndefault_section_name (int ignore __attribute__ ((unused)),\n\t\t      int ignore2 __attribute__ ((unused)),\n\t\t      char *buf __attribute__ ((unused)),\n\t\t      size_t len __attribute__ ((unused)))\n{\n  return NULL;\n}\n\nstatic const char *\ndefault_machine_flag_name (Elf64_Word *ignore __attribute__ ((unused)))\n{\n  return NULL;\n}\n\nstatic bool\ndefault_machine_flag_check (Elf64_Word flags __attribute__ ((unused)))\n{\n  return flags == 0;\n}\n\nstatic bool\ndefault_machine_section_flag_check (GElf_Xword flags)\n{\n  return flags == 0;\n}\n\nstatic bool\ndefault_check_special_section (Ebl *ebl __attribute__ ((unused)),\n\t\t\t       int ndx __attribute__ ((unused)),\n\t\t\t       const GElf_Shdr *shdr __attribute__ ((unused)),\n\t\t\t       const char *sname __attribute__ ((unused)))\n{\n  return false;\n}\n\nstatic const char *\ndefault_symbol_type_name (int ignore __attribute__ ((unused)),\n\t\t\t  char *buf __attribute__ ((unused)),\n\t\t\t  size_t len __attribute__ ((unused)))\n{\n  return NULL;\n}\n\nstatic const char *\ndefault_symbol_binding_name (int ignore __attribute__ ((unused)),\n\t\t\t     char *buf __attribute__ ((unused)),\n\t\t\t     size_t len __attribute__ ((unused)))\n{\n  return NULL;\n}\n\nstatic const char *\ndefault_dynamic_tag_name (int64_t ignore __attribute__ ((unused)),\n\t\t\t  char *buf __attribute__ ((unused)),\n\t\t\t  size_t len __attribute__ ((unused)))\n{\n  return NULL;\n}\n\nstatic bool\ndefault_dynamic_tag_check (int64_t ignore __attribute__ ((unused)))\n{\n  return false;\n}\n\nstatic void\ndefault_destr (struct ebl *ignore __attribute__ ((unused)))\n{\n}\n\nstatic const char *\ndefault_osabi_name (int ignore __attribute__ ((unused)),\n\t\t    char *buf __attribute__ ((unused)),\n\t\t    size_t len __attribute__ ((unused)))\n{\n  return NULL;\n}\n\nstatic const char *\ndefault_core_note_type_name (uint32_t ignore __attribute__ ((unused)),\n\t\t\t     char *buf __attribute__ ((unused)),\n\t\t\t     size_t len __attribute__ ((unused)))\n{\n  return NULL;\n}\n\nstatic int\ndefault_auxv_info (GElf_Xword a_type __attribute__ ((unused)),\n\t\t   const char **name __attribute__ ((unused)),\n\t\t   const char **format __attribute__ ((unused)))\n{\n  return 0;\n}\n\nstatic int\ndefault_core_note (const GElf_Nhdr *nhdr __attribute__ ((unused)),\n\t\t   const char *name __attribute__ ((unused)),\n\t\t   GElf_Word *ro __attribute__ ((unused)),\n\t\t   size_t *nregloc  __attribute__ ((unused)),\n\t\t   const Ebl_Register_Location **reglocs\n\t\t   __attribute__ ((unused)),\n\t\t   size_t *nitems __attribute__ ((unused)),\n\t\t   const Ebl_Core_Item **items __attribute__ ((unused)))\n{\n  return 0;\n}\n\nstatic const char *\ndefault_object_note_type_name (const char *name __attribute__ ((unused)),\n\t\t\t       uint32_t ignore __attribute__ ((unused)),\n\t\t\t       char *buf __attribute__ ((unused)),\n\t\t\t       size_t len __attribute__ ((unused)))\n{\n  return NULL;\n}\n\nstatic bool\ndefault_object_note (const char *name __attribute__ ((unused)),\n\t\t     uint32_t type __attribute__ ((unused)),\n\t\t     uint32_t descsz __attribute__ ((unused)),\n\t\t     const char *desc __attribute__ ((unused)))\n{\n  return NULL;\n}\n\nstatic bool\ndefault_debugscn_p (const char *name)\n{\n  /* We know by default only about the DWARF debug sections which have\n     fixed names.  */\n  static const char *dwarf_scn_names[] =\n    {\n      /* DWARF 1 */\n      \".debug\",\n      \".line\",\n      /* GNU DWARF 1 extensions */\n      \".debug_srcinfo\",\n      \".debug_sfnames\",\n      /* DWARF 1.1 and DWARF 2 */\n      \".debug_aranges\",\n      \".debug_pubnames\",\n      /* DWARF 2 */\n      \".debug_info\",\n      \".debug_abbrev\",\n      \".debug_line\",\n      \".debug_frame\",\n      \".debug_str\",\n      \".debug_loc\",\n      \".debug_macinfo\",\n      /* DWARF 3 */\n      \".debug_ranges\",\n      \".debug_pubtypes\",\n      /* DWARF 4 */\n      \".debug_types\",\n      /* GDB DWARF 4 extension */\n      \".gdb_index\",\n      /* GNU/DWARF 5 extension/proposal */\n      \".debug_macro\",\n      /* DWARF 5 */\n      \".debug_addr\",\n      \".debug_line_str\",\n      \".debug_loclists\",\n      \".debug_names\",\n      \".debug_rnglists\",\n      \".debug_str_offsets\",\n      /* SGI/MIPS DWARF 2 extensions */\n      \".debug_weaknames\",\n      \".debug_funcnames\",\n      \".debug_typenames\",\n      \".debug_varnames\"\n    };\n  const size_t ndwarf_scn_names = (sizeof (dwarf_scn_names)\n\t\t\t\t   / sizeof (dwarf_scn_names[0]));\n  for (size_t cnt = 0; cnt < ndwarf_scn_names; ++cnt)\n    if (strcmp (name, dwarf_scn_names[cnt]) == 0\n\t|| (strncmp (name, \".zdebug\", strlen (\".zdebug\")) == 0\n\t    && strcmp (&name[2], &dwarf_scn_names[cnt][1]) == 0))\n      return true;\n\n  return false;\n}\n\nstatic bool\ndefault_copy_reloc_p (int reloc __attribute__ ((unused)))\n{\n  return false;\n}\nstrong_alias (default_copy_reloc_p, default_none_reloc_p)\nstrong_alias (default_copy_reloc_p, default_relative_reloc_p)\n\nstatic bool\ndefault_check_special_symbol (Elf *elf __attribute__ ((unused)),\n\t\t\t      const GElf_Sym *sym __attribute__ ((unused)),\n\t\t\t      const char *name __attribute__ ((unused)),\n\t\t\t      const GElf_Shdr *destshdr __attribute__ ((unused)))\n{\n  return false;\n}\n\nstatic bool\ndefault_data_marker_symbol (const GElf_Sym *sym __attribute__ ((unused)),\n\t\t\t    const char *sname __attribute__ ((unused)))\n{\n  return false;\n}\n\nstatic bool\ndefault_check_st_other_bits (unsigned char st_other __attribute__ ((unused)))\n{\n  return false;\n}\n\n\nstatic bool\ndefault_bss_plt_p (Elf *elf __attribute__ ((unused)))\n{\n  return false;\n}\n\nstatic int\ndefault_return_value_location (Dwarf_Die *functypedie __attribute__ ((unused)),\n\t\t\t       const Dwarf_Op **locops __attribute__ ((unused)))\n{\n  return -2;\n}\n\nstatic ssize_t\ndefault_register_info (Ebl *ebl __attribute__ ((unused)),\n\t\t       int regno, char *name, size_t namelen,\n\t\t       const char **prefix,\n\t\t       const char **setname,\n\t\t       int *bits, int *type)\n{\n  if (name == NULL)\n    return 0;\n\n  *setname = \"???\";\n  *prefix = \"\";\n  *bits = -1;\n  *type = DW_ATE_void;\n  return snprintf (name, namelen, \"reg%d\", regno);\n}\n\nstatic int\ndefault_syscall_abi (Ebl *ebl __attribute__ ((unused)),\n\t\t     int *sp, int *pc, int *callno, int args[6])\n{\n  *sp = *pc = *callno = -1;\n  args[0] = -1;\n  args[1] = -1;\n  args[2] = -1;\n  args[3] = -1;\n  args[4] = -1;\n  args[5] = -1;\n  return -1;\n}\n\nstatic bool\ndefault_check_object_attribute (Ebl *ebl __attribute__ ((unused)),\n\t\t\t\tconst char *vendor  __attribute__ ((unused)),\n\t\t\t\tint tag __attribute__ ((unused)),\n\t\t\t\tuint64_t value __attribute__ ((unused)),\n\t\t\t\tconst char **tag_name, const char **value_name)\n{\n  *tag_name = NULL;\n  *value_name = NULL;\n  return false;\n}\n\nstatic bool\ndefault_check_reloc_target_type (Ebl *ebl __attribute__ ((unused)),\n\t\t\t\t Elf64_Word sh_type __attribute__ ((unused)))\n{\n  return false;\n}\n\nstatic int\ndefault_abi_cfi (Ebl *ebl __attribute__ ((unused)),\n\t\t Dwarf_CIE *abi_info __attribute__ ((unused)))\n{\n  return -1;\n}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile36.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-dwfl-report-elf-align-shlib.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile52-32.noshdrs.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-hello4.dwo.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile14.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-sizes1.o.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-strtab.debuginfo.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-lex-inlines.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile_i686_core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile21.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/hello_m68k.ko.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile12-debugframe.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile_parameter_ref.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile37.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-bpf-dis1.expect.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile23.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazmdb.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.x86_64.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-sizes4.o.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/linkmap-cut.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile55-32.prelink.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile19.index.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-only-debug-line.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-dwarf-5.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile65.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile58.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-zgnu64.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.x86_64.exec.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-hello5.dwo.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-bpf-reloc.expect.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-m68k.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile13.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile9.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile40.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile68.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-macros.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-info-link.stripped.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile54-64.prelink.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile53-32.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazdbg.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile34.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/linkmap-cut-lib.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile54-32.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-zgnu64be.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile41.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfileppc32-debugframe.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfileppc32.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile42_noshdrs.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile20.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-riscv64-core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/hello_aarch64.ko.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-zgabi64.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile52-64.noshdrs.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-nobitsalign.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile_class_func.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-annobingroup-i386.o.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile54-32.prelink.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-dwzstr.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilefoobarbaz.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-riscv64-s.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile45.S.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.x86_64.fp.exec.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile11-debugframe.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile2.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/libtestfile_multi_shared.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile29.rdwr.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfiledwarfinlines.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-nolfs.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazdbgppc64.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile50.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/test-core.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile42.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-dwzstr.multi.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile6.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-addrx_constx-4.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.aarch64.fp.exec.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile32.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile_low_high_pc.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfileaarch64-debugframe.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-stridex.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile3.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile49.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile59.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile22.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfileppc64.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile_implicit_pointer.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/test-core-lib.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazdbg_pl.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-macros-0xff.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazmdbppc64.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile36.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile60.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-annobingroup.o.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile51.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile5.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/funcretval_test_aarch64.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-inlines.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-dwarf-4.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-x32-s.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-world4.dwo.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-m68k-s.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.s390x.exec.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazdbg_plr.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-debug-types.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilegdbindex5.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile7.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testlib_dynseg.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile35.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfiledwarfinlines.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testcore-rtlib-ppc.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.ppc.exec.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazdbgppc64_plr.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile38.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-riscv64.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.aarch64.fp.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile54-64.noshdrs.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-bpf-dis1.o.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile55-32.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile_multi.dwz.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazminppc64.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebaztab.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile45.expect.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile53-32.prelink.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfiles390x.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-splitdwarf-5.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.i386.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-strtab.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.ppc64le.fp.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazdbg.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-zgnu32be.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfileranges4.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-ranges-hello.dwo.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/test-offset-loop.alt.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile16.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile52-32.prelink.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-x32-debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-x32-core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile35.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile55-64.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-info-link.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilearm.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile40.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile28.rdwr.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfileranges5.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.aarch64.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-const-values.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile66.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazminppc64_plr.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-macinfo.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfileaarch64.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-sizes3.o.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.s390.exec.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/test-core.exec.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfileppc32attrs.o.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile61.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile70.exec.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile_nested_funcs.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile31.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.sparc.exec.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile54-32.so.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-ppc64-min-instr.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile12.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebaxmin.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-zdebug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile56.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile24.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-s390x-hash-both.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testcore-rtlib.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/addrx_constx-4.dwo.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-info-link.debuginfo.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile55-64.prelink.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilemacro.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazmin.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile70.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.aarch64.exec.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-ada-variant.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazmin_plr.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/test-offset-loop.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile29.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/addrx_constx-5.dwo.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile8.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-ranges-world.dwo.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile54-64.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-debug-rel-z.o.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile4.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-ranges-world5.dwo.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile19.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-nobitsalign.strip.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-debug-rel.o.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-ranges-hello5.dwo.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-x32-d.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile_aarch64_core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.x32.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile69.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile52-64.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile15.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-backtrace-demangle.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.s390.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfiles390.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-sizes2.o.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/hello_ppc64.ko.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfileppc64-debugframe.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilearm-debugframe.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazdbgppc64.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile15.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-splitdwarf-4.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-zgabi32be.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile48.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebasmin.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile10.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.i386.exec.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile25.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/linkmap-cut.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile52-64.prelink.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile62.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.i386.fp.exec.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.ppc.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebaztabppc64.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-world5.dwo.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/hello_x86_64.ko.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/debug-ranges-no-lowpc.o.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile28.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile63.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-x32.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfileppc64attrs.o.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile37.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile54-32.noshdrs.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile64.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile30.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazdynppc64.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.s390x.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile43.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile53-64.prelink.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/splitdwarf4-not-split4.dwo.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/hello_riscv64.ko.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.i386.fp.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazdyn.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile17.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile_entry_value.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazdbgppc64_pl.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile55-32.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-backtrace-demangle.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile_const_type.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile52-64.so.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.sparc.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile26.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-zgabi32.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilesparc64attrs.o.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile21.index.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile18.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-bpf-reloc.o.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-strtab.stripped.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-addrx_constx-5.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile11.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile47.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazminppc64_pl.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile53-32.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile20.index.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-splitdwarf4-not-split4.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile66.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile52-32.so.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile39.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/hello_i386.ko.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.ppc64le.fp.exec.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilesplitranges4.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilesplitranges5.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-debug-rel-g.o.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile27.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile57.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile67.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile52-32.so.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile53-64.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-m68k-core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile46.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile54-64.so.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.x86_64.fp.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilegdbindex7.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testarchive64.a.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/backtrace.x32.exec.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile44.expect.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile17.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile69.core.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-zgnu32.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile-zgabi64be.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfileloc.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile71.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile16.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile53-64.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/hello_s390.ko.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile33.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile44.S.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilenolines.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile_implicit_value.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile_multi_main.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfilebazmin_pl.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile55-64.debug.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/tests/testfile48.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/po/uk.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/po/ja.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/po/de.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/po/en@boldquot.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/po/pl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/po/en@quot.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-elfutils-0.174-d4dmidtwlybwuyhaai6bv22k2kf4qxyv/spack-src/po/es.gmo"
    ],
    "total_files": 1272
}