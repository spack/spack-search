{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-libbeagle-3.1.2-upb6cku6xaq7qrm25qhqr5brbbxcnen2/spack-src/libhmsbeagle/plugin/LibtoolSharedLibrary.h": "/**\n * libhmsbeagle plugin system\n * @author Aaron E. Darling\n * Based on code found in \"Dynamic Plugins for C++\" by Arthur J. Musgrove\n * and published in Dr. Dobbs Journal, July 1, 2004.\n *\n * This header implements unix libraries using libtool loading instead of\n * the standard dlopen() interface\n */\n\n#ifndef __LIBTOOLSHAREDLIBRARY_H__\n#define __LIBTOOLSHAREDLIBRARY_H__\n\n#ifdef HAVE_CONFIG_H\n#include \"libhmsbeagle/config.h\"\n#endif\n\n#include \"libhmsbeagle/plugin/SharedLibrary.h\"\n\n#ifdef HAVE_LIBLTDL\n\n// use libtool-devel library loading\n#include <ltdl.h>\n#include <iostream>\n\n\nnamespace beagle {\nnamespace plugin {\n\nclass UnixSharedLibrary : public SharedLibrary\n{\n  public:\n    UnixSharedLibrary(const char* name);\n    ~UnixSharedLibrary();\n\n    void* findSymbol(const char* name);\n\n  private:\n    lt_dlhandle m_handle;\n};\n\nUnixSharedLibrary::UnixSharedLibrary(const char* name)\n    : m_handle(0)\n{\n    lt_dlinit();\n    std::string libname = \"lib\";\n    libname += name;\n#ifdef DLS_MACOS\n    libname += \".\";\n    libname += PLUGIN_VERSION;\n    libname += \".so\";\n#else\n    libname += \".so.\";\n    libname += PLUGIN_VERSION;\n    libname += \".0.0\";\n#endif\n\n    m_handle = lt_dlopen(libname.c_str());\n    if (m_handle == 0)\n    {\n    const char* s = lt_dlerror();\n    throw SharedLibraryException(s?s:\"Exact Error Not Reported\");\n    }\n}\nUnixSharedLibrary::~UnixSharedLibrary() {\n\tlt_dlclose(m_handle); \n\tlt_dlexit();\n}\n\nvoid* UnixSharedLibrary::findSymbol(const char* name)\n{\n    void* sym = lt_dlsym(m_handle,name);\n    if (sym == 0)\n    throw SharedLibraryException(\"Symbol Not Found\");\n    else\n    return sym;\n}\n\n} // namespace plugin\n} // namespace beagle\n\n#endif\t// HAVE_LIBLTDL\n\n#endif\t// __LIBTOOLSHAREDLIBRARY_H__\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-libbeagle-3.1.2-upb6cku6xaq7qrm25qhqr5brbbxcnen2/spack-src/libhmsbeagle/plugin/UnixSharedLibrary.h": "/**\n * libhmsbeagle plugin system\n * @author Aaron E. Darling\n * Based on code found in \"Dynamic Plugins for C++\" by Arthur J. Musgrove\n * and published in Dr. Dobbs Journal, July 1, 2004.\n */\n\n#ifndef __UNIXSHAREDLIBRARY_H__\n#define __UNIXSHAREDLIBRARY_H__\n\n#ifdef HAVE_CONFIG_H\n#include \"libhmsbeagle/config.h\"\n#endif\n\n#include \"libhmsbeagle/plugin/SharedLibrary.h\"\n\n// only use the standard unix library interface if we don't have libtool libraries\n#ifndef HAVE_LIBLTDL\n\n#include <dlfcn.h>\n#include <string>\n\nnamespace beagle {\nnamespace plugin {\n\nclass UnixSharedLibrary : public SharedLibrary\n{\n  public:\n    UnixSharedLibrary(const char* name);\n    ~UnixSharedLibrary();\n\n    void* findSymbol(const char* name);\n\n  private:\n    void* m_handle;\n};\n\nUnixSharedLibrary::UnixSharedLibrary(const char* name)\n    : m_handle(0)\n{\n    std::string libname = \"lib\";\n    libname += name;\n#ifdef DLS_MACOS\n    libname += \".\";\n    libname += PLUGIN_VERSION;\n    libname += \".so\";\n#else\n    libname += \".so.\";\n    libname += PLUGIN_VERSION;\n    libname += \".0.0\";\n#endif\n\n    m_handle = dlopen(libname.c_str(),RTLD_NOW|RTLD_GLOBAL);\n    if (m_handle == 0)\n    {\n    const char* s = dlerror();\n    throw SharedLibraryException(s?s:\"Exact Error Not Reported\");\n    }\n}\nUnixSharedLibrary::~UnixSharedLibrary() { dlclose(m_handle); }\n\nvoid* UnixSharedLibrary::findSymbol(const char* name)\n{\n    void* sym = dlsym(m_handle,name);\n    if (sym == 0)\n    throw SharedLibraryException(\"Symbol Not Found\");\n    else\n    return sym;\n}\n\n} // namespace plugin\n} // namespace beagle\n\n#endif\t// HAVE_LIBLTDL\n\n#endif\t// __UNIXSHAREDLIBRARY_H__\n\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-libbeagle-3.1.2-upb6cku6xaq7qrm25qhqr5brbbxcnen2/spack-src/beagle-dox.png",
        "/tmp/vanessa/spack-stage/spack-stage-libbeagle-3.1.2-upb6cku6xaq7qrm25qhqr5brbbxcnen2/spack-src/project/beagle-xcode/beagle-icon.png",
        "/tmp/vanessa/spack-stage/spack-stage-libbeagle-3.1.2-upb6cku6xaq7qrm25qhqr5brbbxcnen2/spack-src/project/beagle-vs-2012-installer/banner.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-libbeagle-3.1.2-upb6cku6xaq7qrm25qhqr5brbbxcnen2/spack-src/project/beagle-vs-2012-installer/welcome.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-libbeagle-3.1.2-upb6cku6xaq7qrm25qhqr5brbbxcnen2/spack-src/project/beagle-vs-2017/cuda-kernels/bin2c.exe",
        "/tmp/vanessa/spack-stage/spack-stage-libbeagle-3.1.2-upb6cku6xaq7qrm25qhqr5brbbxcnen2/spack-src/project/beagle-vs-2017/installer/banner.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-libbeagle-3.1.2-upb6cku6xaq7qrm25qhqr5brbbxcnen2/spack-src/project/beagle-vs-2017/installer/welcome.jpg"
    ],
    "total_files": 239
}