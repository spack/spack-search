{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/test/tools/console_test_runner/src/console_test_runner.cpp": "//  (C) Copyright Gennadiy Rozental 2005-2014.\n//  Distributed under the Boost Software License, Version 1.0.\n//  (See accompanying file LICENSE_1_0.txt or copy at \n//  http://www.boost.org/LICENSE_1_0.txt)\n\n//  See http://www.boost.org/libs/test for the library home page.\n\n// Boost.Test\n#ifndef BOOST_TEST_DYN_LINK\n#define BOOST_TEST_DYN_LINK\n#endif\n#include <boost/test/unit_test.hpp>\n\n// Boost.Runtime.Param\n#include <boost/test/utils/runtime/cla/named_parameter.hpp>\n#include <boost/test/utils/runtime/cla/parser.hpp>\n\nnamespace rt  = boost::runtime;\nnamespace cla = boost::runtime::cla;\n\n// STL\n#include <iostream>\n\n//_________________________________________________________________//\n\n// System API\n\nnamespace dyn_lib {\n\n#if defined(BOOST_WINDOWS) && !defined(BOOST_DISABLE_WIN32) // WIN32 API\n\n#include <windows.h>\n\ntypedef HINSTANCE handle;\n\ninline handle\nopen( std::string const& file_name )\n{\n    return LoadLibrary( file_name.c_str() );\n}\n\n//_________________________________________________________________//\n\ntemplate<typename TargType>\ninline TargType\nlocate_symbol( handle h, std::string const& symbol )\n{\n    return reinterpret_cast<TargType>( GetProcAddress( h, symbol.c_str() ) );\n}\n\n//_________________________________________________________________//\n\ninline void\nclose( handle h )\n{\n    if( h )\n        FreeLibrary( h );\n}\n\n//_________________________________________________________________//\n\ninline std::string\nerror()\n{\n    LPTSTR msg = NULL;\n\n    FormatMessage( FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM,\n                   NULL, \n                   GetLastError(), \n                   MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n                   (LPTSTR)&msg, \n                   0, NULL );\n\n    std::string res( msg );\n\n    if( msg )\n        LocalFree( msg );\n\n    return res;    \n}\n\n//_________________________________________________________________//\n\n#elif defined(BOOST_HAS_UNISTD_H) // POSIX API\n\n#include <dlfcn.h>\n\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n\n\ntypedef void* handle;\n\ninline handle\nopen( std::string const& file_name )\n{\n    return dlopen( file_name.c_str(), RTLD_LOCAL | RTLD_LAZY );\n}\n\n//_________________________________________________________________//\n\ntemplate<typename TargType>\ninline TargType\nlocate_symbol( handle h, std::string const& symbol )\n{\n    return reinterpret_cast<TargType>( dlsym( h, symbol.c_str() ) );\n}\n\n//_________________________________________________________________//\n\ninline void\nclose( handle h )\n{\n    if( h )\n        dlclose( h );\n}\n\n//_________________________________________________________________//\n\ninline std::string\nerror()\n{\n    return dlerror();\n}\n\n//_________________________________________________________________//\n\n#else\n\n#error \"Dynamic library API is unknown\"\n\n#endif\n\n} // namespace dyn_lib\n\n//____________________________________________________________________________//\n\nstatic std::string test_lib_name;\nstatic std::string init_func_name( \"init_unit_test\" );\n\ndyn_lib::handle test_lib_handle;\n\nbool load_test_lib()\n{\n    typedef bool (*init_func_ptr)();\n    init_func_ptr init_func;\n\n    test_lib_handle = dyn_lib::open( test_lib_name );\n    if( !test_lib_handle )\n        throw std::logic_error( std::string(\"Fail to load test library: \")\n                                    .append( dyn_lib::error() ) );\n\n    init_func =  dyn_lib::locate_symbol<init_func_ptr>( test_lib_handle, init_func_name );\n    \n    if( !init_func )\n        throw std::logic_error( std::string(\"Can't locate test initilization function \")\n                                    .append( init_func_name )\n                                    .append( \": \" )\n                                    .append( dyn_lib::error() ) );\n   \n    return (*init_func)();\n}\n\n//____________________________________________________________________________//\n\nint main( int argc, char* argv[] )\n{\n    try {\n        cla::parser P;\n\n        P - cla::ignore_mismatch \n            << cla::named_parameter<rt::cstring>( \"test\" ) - (cla::prefix = \"--\")\n            << cla::named_parameter<rt::cstring>( \"init\" ) - (cla::prefix = \"--\",cla::optional);\n\n        P.parse( argc, argv );\n\n        assign_op( test_lib_name, P.get( \"test\" ), 0 );\n        if( P[\"init\"] )\n            assign_op( init_func_name, P.get( \"init\" ), 0 );\n\n        int res = ::boost::unit_test::unit_test_main( &load_test_lib, argc, argv );\n\n        ::boost::unit_test::framework::clear();\n        dyn_lib::close( test_lib_handle );\n\n        return res;\n    }\n    catch( rt::logic_error const& ex ) {\n        std::cout << \"Fail to parse command line arguments: \" << ex.msg() << std::endl;\n        return -1;\n    }\n}\n\n//____________________________________________________________________________//\n\n// EOF\n",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/src/engine/boehm_gc/pthread_support.c": "/* \n * Copyright (c) 1994 by Xerox Corporation.  All rights reserved.\n * Copyright (c) 1996 by Silicon Graphics.  All rights reserved.\n * Copyright (c) 1998 by Fergus Henderson.  All rights reserved.\n * Copyright (c) 2000-2005 by Hewlett-Packard Company.  All rights reserved.\n *\n * THIS MATERIAL IS PROVIDED AS IS, WITH ABSOLUTELY NO WARRANTY EXPRESSED\n * OR IMPLIED.  ANY USE IS AT YOUR OWN RISK.\n *\n * Permission is hereby granted to use or copy this program\n * for any purpose,  provided the above notices are retained on all copies.\n * Permission to modify the code and to distribute modified code is granted,\n * provided the above notices are retained, and a notice that the code was\n * modified is included with the above copyright notice.\n */\n/*\n * Support code originally for LinuxThreads, the clone()-based kernel\n * thread package for Linux which is included in libc6.\n *\n * This code no doubt makes some assumptions beyond what is\n * guaranteed by the pthread standard, though it now does\n * very little of that.  It now also supports NPTL, and many\n * other Posix thread implementations.  We are trying to merge\n * all flavors of pthread dupport code into this file.\n */\n /* DG/UX ix86 support <takis@xfree86.org> */\n/*\n * Linux_threads.c now also includes some code to support HPUX and\n * OSF1 (Compaq Tru64 Unix, really).  The OSF1 support is based on Eric Benson's\n * patch.\n *\n * Eric also suggested an alternate basis for a lock implementation in\n * his code:\n * + #elif defined(OSF1)\n * +    unsigned long GC_allocate_lock = 0;\n * +    msemaphore GC_allocate_semaphore;\n * + #  define GC_TRY_LOCK() \\\n * +    ((msem_lock(&GC_allocate_semaphore, MSEM_IF_NOWAIT) == 0) \\\n * +     ? (GC_allocate_lock = 1) \\\n * +     : 0)\n * + #  define GC_LOCK_TAKEN GC_allocate_lock\n */\n\n/*#define DEBUG_THREADS 1*/\n\n# include \"private/pthread_support.h\"\n\n# if defined(GC_PTHREADS) && !defined(GC_WIN32_THREADS)\n\n# if defined(GC_DGUX386_THREADS) && !defined(_POSIX4A_DRAFT10_SOURCE)\n#   define _POSIX4A_DRAFT10_SOURCE 1\n# endif\n\n# if defined(GC_DGUX386_THREADS) && !defined(_USING_POSIX4A_DRAFT10)\n#   define _USING_POSIX4A_DRAFT10 1\n# endif\n\n# include <stdlib.h>\n# include <pthread.h>\n# include <sched.h>\n# include <time.h>\n# include <errno.h>\n# include <unistd.h>\n# include <sys/mman.h>\n# include <sys/time.h>\n# include <sys/types.h>\n# include <sys/stat.h>\n# include <fcntl.h>\n# include <signal.h>\n\n# include \"gc_inline.h\"\n\n#if defined(GC_DARWIN_THREADS)\n# include \"private/darwin_semaphore.h\"\n#else\n# include <semaphore.h>\n#endif /* !GC_DARWIN_THREADS */\n\n#if defined(GC_DARWIN_THREADS) || defined(GC_FREEBSD_THREADS)\n# include <sys/sysctl.h>\n#endif /* GC_DARWIN_THREADS */\n\n#if defined(GC_NETBSD_THREADS)\n# include <sys/param.h>\n# include <sys/sysctl.h>\n#endif        /* GC_NETBSD_THREADS */\n\n/* Allocator lock definitions.\t\t*/\n#if !defined(USE_SPIN_LOCK)\n  pthread_mutex_t GC_allocate_ml = PTHREAD_MUTEX_INITIALIZER;\n#endif\nunsigned long GC_lock_holder = NO_THREAD;\n\t\t/* Used only for assertions, and to prevent\t */\n\t\t/* recursive reentry in the system call wrapper. */\n\n#if defined(GC_DGUX386_THREADS)\n# include <sys/dg_sys_info.h>\n# include <sys/_int_psem.h>\n  /* sem_t is an uint in DG/UX */\n  typedef unsigned int  sem_t;\n#endif /* GC_DGUX386_THREADS */\n\n#ifndef __GNUC__\n#   define __inline__\n#endif\n\n/* Undefine macros used to redirect pthread primitives. */\n# undef pthread_create\n# if !defined(GC_DARWIN_THREADS)\n#   undef pthread_sigmask\n# endif\n# undef pthread_join\n# undef pthread_detach\n# if defined(GC_OSF1_THREADS) && defined(_PTHREAD_USE_MANGLED_NAMES_) \\\n     && !defined(_PTHREAD_USE_PTDNAM_)\n  /* Restore the original mangled names on Tru64 UNIX.  */\n#   define pthread_create __pthread_create\n#   define pthread_join __pthread_join\n#   define pthread_detach __pthread_detach\n# endif\n\n#ifdef GC_USE_LD_WRAP\n#   define WRAP_FUNC(f) __wrap_##f\n#   define REAL_FUNC(f) __real_##f\n#else\n#   ifdef GC_USE_DLOPEN_WRAP\n#     include <dlfcn.h>\n#     define WRAP_FUNC(f) f\n#     define REAL_FUNC(f) GC_real_##f\n      /* We define both GC_f and plain f to be the wrapped function.\t*/\n      /* In that way plain calls work, as do calls from files that\t*/\n      /* included gc.h, wich redefined f to GC_f.\t\t\t*/\n      /* FIXME: Needs work for DARWIN and True64 (OSF1) */\n      typedef int (* GC_pthread_create_t)(pthread_t *, const pthread_attr_t *,\n\t\t      \t\t          void * (*)(void *), void *);\n      static GC_pthread_create_t GC_real_pthread_create;\n      typedef int (* GC_pthread_sigmask_t)(int, const sigset_t *, sigset_t *);\n      static GC_pthread_sigmask_t GC_real_pthread_sigmask;\n      typedef int (* GC_pthread_join_t)(pthread_t, void **);\n      static GC_pthread_join_t GC_real_pthread_join;\n      typedef int (* GC_pthread_detach_t)(pthread_t);\n      static GC_pthread_detach_t GC_real_pthread_detach;\n#   else\n#     define WRAP_FUNC(f) GC_##f\n#     if !defined(GC_DGUX386_THREADS)\n#       define REAL_FUNC(f) f\n#     else /* GC_DGUX386_THREADS */\n#       define REAL_FUNC(f) __d10_##f\n#     endif /* GC_DGUX386_THREADS */\n#   endif\n#endif\n\n#if defined(GC_USE_DL_WRAP) || defined(GC_USE_DLOPEN_WRAP)\n/* Define GC_ functions as aliases for the plain ones, which will\t*/\n/* be intercepted.  This allows files which include gc.h, and hence\t*/\n/* generate referemces to the GC_ symbols, to see the right symbols.\t*/\n      int GC_pthread_create(pthread_t * t, const pthread_attr_t * a,\n\t\t         void * (* fn)(void *), void * arg) {\n\t  return pthread_create(t, a, fn, arg);\n      }\n      int GC_pthread_sigmask(int how, const sigset_t *mask, sigset_t *old) {\n\t  return pthread_sigmask(how, mask, old);\n      }\n      int GC_pthread_join(pthread_t t, void **res) {\n\t  return pthread_join(t, res);\n      }\n      int GC_pthread_detach(pthread_t t) {\n\t  return pthread_detach(t);\n      }\n#endif /* Linker-based interception. */\n\n#ifdef GC_USE_DLOPEN_WRAP\n  static GC_bool GC_syms_initialized = FALSE;\n\n  void GC_init_real_syms(void)\n  {\n    void *dl_handle;\n#   define LIBPTHREAD_NAME \"libpthread.so.0\"\n#   define LIBPTHREAD_NAME_LEN 16 /* incl. trailing 0 */\n    size_t len = LIBPTHREAD_NAME_LEN - 1;\n    char namebuf[LIBPTHREAD_NAME_LEN];\n    static char *libpthread_name = LIBPTHREAD_NAME;\n\n    if (GC_syms_initialized) return;\n#   ifdef RTLD_NEXT\n      dl_handle = RTLD_NEXT;\n#   else\n      dl_handle = dlopen(libpthread_name, RTLD_LAZY);\n      if (NULL == dl_handle) {\n        while (isdigit(libpthread_name[len-1])) --len;\n        if (libpthread_name[len-1] == '.') --len;\n        memcpy(namebuf, libpthread_name, len);\n        namebuf[len] = '\\0';\n        dl_handle = dlopen(namebuf, RTLD_LAZY);\n      }\n      if (NULL == dl_handle) ABORT(\"Couldn't open libpthread\\n\");\n#   endif\n    GC_real_pthread_create = (GC_pthread_create_t)\n\t    \t\t\tdlsym(dl_handle, \"pthread_create\");\n    GC_real_pthread_sigmask = (GC_pthread_sigmask_t)\n\t    \t\t\tdlsym(dl_handle, \"pthread_sigmask\");\n    GC_real_pthread_join = (GC_pthread_join_t)\n\t    \t\t\tdlsym(dl_handle, \"pthread_join\");\n    GC_real_pthread_detach = (GC_pthread_detach_t)\n\t    \t\t\tdlsym(dl_handle, \"pthread_detach\");\n    GC_syms_initialized = TRUE;\n  }\n\n# define INIT_REAL_SYMS() if (!GC_syms_initialized) GC_init_real_syms();\n#else\n# define INIT_REAL_SYMS()\n#endif\n\nvoid GC_thr_init(void);\n\nstatic GC_bool parallel_initialized = FALSE;\n\nGC_bool GC_need_to_lock = FALSE;\n\nvoid GC_init_parallel(void);\n\nlong GC_nprocs = 1;\t/* Number of processors.  We may not have\t*/\n\t\t\t/* access to all of them, but this is as good\t*/\n\t\t\t/* a guess as any ...\t\t\t\t*/\n\n#ifdef THREAD_LOCAL_ALLOC\n/* We must explicitly mark ptrfree and gcj free lists, since the free \t*/\n/* list links wouldn't otherwise be found.  We also set them in the \t*/\n/* normal free lists, since that involves touching less memory than if\t*/\n/* we scanned them normally.\t\t\t\t\t\t*/\nvoid GC_mark_thread_local_free_lists(void)\n{\n    int i;\n    GC_thread p;\n    \n    for (i = 0; i < THREAD_TABLE_SZ; ++i) {\n      for (p = GC_threads[i]; 0 != p; p = p -> next) {\n\tGC_mark_thread_local_fls_for(&(p->tlfs));\n      }\n    }\n}\n\n#if defined(GC_ASSERTIONS)\n    /* Check that all thread-local free-lists are completely marked.\t*/\n    /* also check that thread-specific-data structures are marked.\t*/\n    void GC_check_tls(void) {\n\tint i;\n\tGC_thread p;\n\t\n\tfor (i = 0; i < THREAD_TABLE_SZ; ++i) {\n\t  for (p = GC_threads[i]; 0 != p; p = p -> next) {\n\t    GC_check_tls_for(&(p->tlfs));\n\t  }\n\t}\n#       if defined(USE_CUSTOM_SPECIFIC)\n\t  if (GC_thread_key != 0)\n\t    GC_check_tsd_marks(GC_thread_key);\n#\tendif \n    }\n#endif /* GC_ASSERTIONS */\n\n#endif /* Thread_local_alloc */\n\n#ifdef PARALLEL_MARK\n\n# ifndef MAX_MARKERS\n#   define MAX_MARKERS 16\n# endif\n\nstatic ptr_t marker_sp[MAX_MARKERS] = {0};\n#ifdef IA64\n  static ptr_t marker_bsp[MAX_MARKERS] = {0};\n#endif\n\nvoid * GC_mark_thread(void * id)\n{\n  word my_mark_no = 0;\n\n  marker_sp[(word)id] = GC_approx_sp();\n# ifdef IA64\n    marker_bsp[(word)id] = GC_save_regs_in_stack();\n# endif\n  for (;; ++my_mark_no) {\n    /* GC_mark_no is passed only to allow GC_help_marker to terminate\t*/\n    /* promptly.  This is important if it were called from the signal\t*/\n    /* handler or from the GC lock acquisition code.  Under Linux, it's\t*/\n    /* not safe to call it from a signal handler, since it uses mutexes\t*/\n    /* and condition variables.  Since it is called only here, the \t*/\n    /* argument is unnecessary.\t\t\t\t\t\t*/\n    if (my_mark_no < GC_mark_no || my_mark_no > GC_mark_no + 2) {\n\t/* resynchronize if we get far off, e.g. because GC_mark_no\t*/\n\t/* wrapped.\t\t\t\t\t\t\t*/\n\tmy_mark_no = GC_mark_no;\n    }\n#   ifdef DEBUG_THREADS\n\tGC_printf(\"Starting mark helper for mark number %lu\\n\", my_mark_no);\n#   endif\n    GC_help_marker(my_mark_no);\n  }\n}\n\nextern long GC_markers;\t\t/* Number of mark threads we would\t*/\n\t\t\t\t/* like to have.  Includes the \t\t*/\n\t\t\t\t/* initiating thread.\t\t\t*/\n\npthread_t GC_mark_threads[MAX_MARKERS];\n\n#define PTHREAD_CREATE REAL_FUNC(pthread_create)\n\nstatic void start_mark_threads(void)\n{\n    unsigned i;\n    pthread_attr_t attr;\n\n    if (GC_markers > MAX_MARKERS) {\n\tWARN(\"Limiting number of mark threads\\n\", 0);\n\tGC_markers = MAX_MARKERS;\n    }\n    if (0 != pthread_attr_init(&attr)) ABORT(\"pthread_attr_init failed\");\n\t\n    if (0 != pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED))\n\tABORT(\"pthread_attr_setdetachstate failed\");\n\n#   if defined(HPUX) || defined(GC_DGUX386_THREADS)\n      /* Default stack size is usually too small: fix it. */\n      /* Otherwise marker threads or GC may run out of\t  */\n      /* space.\t\t\t\t\t\t  */\n#     define MIN_STACK_SIZE (8*HBLKSIZE*sizeof(word))\n      {\n\tsize_t old_size;\n\tint code;\n\n        if (pthread_attr_getstacksize(&attr, &old_size) != 0)\n\t  ABORT(\"pthread_attr_getstacksize failed\\n\");\n\tif (old_size < MIN_STACK_SIZE) {\n\t  if (pthread_attr_setstacksize(&attr, MIN_STACK_SIZE) != 0)\n\t\t  ABORT(\"pthread_attr_setstacksize failed\\n\");\n\t}\n      }\n#   endif /* HPUX || GC_DGUX386_THREADS */\n    if (GC_print_stats) {\n\tGC_log_printf(\"Starting %ld marker threads\\n\", GC_markers - 1);\n    }\n    for (i = 0; i < GC_markers - 1; ++i) {\n      if (0 != PTHREAD_CREATE(GC_mark_threads + i, &attr,\n\t\t\t      GC_mark_thread, (void *)(word)i)) {\n\tWARN(\"Marker thread creation failed, errno = %ld.\\n\", errno);\n      }\n    }\n}\n\n#endif /* PARALLEL_MARK */\n\nGC_bool GC_thr_initialized = FALSE;\n\nvolatile GC_thread GC_threads[THREAD_TABLE_SZ];\n\nvoid GC_push_thread_structures(void)\n{\n    GC_ASSERT(I_HOLD_LOCK());\n    GC_push_all((ptr_t)(GC_threads), (ptr_t)(GC_threads)+sizeof(GC_threads));\n#   if defined(THREAD_LOCAL_ALLOC)\n      GC_push_all((ptr_t)(&GC_thread_key),\n\t  (ptr_t)(&GC_thread_key)+sizeof(&GC_thread_key));\n#   endif\n}\n\n/* It may not be safe to allocate when we register the first thread.\t*/\nstatic struct GC_Thread_Rep first_thread;\n\n/* Add a thread to GC_threads.  We assume it wasn't already there.\t*/\n/* Caller holds allocation lock.\t\t\t\t\t*/\nGC_thread GC_new_thread(pthread_t id)\n{\n    int hv = NUMERIC_THREAD_ID(id) % THREAD_TABLE_SZ;\n    GC_thread result;\n    static GC_bool first_thread_used = FALSE;\n    \n    GC_ASSERT(I_HOLD_LOCK());\n    if (!first_thread_used) {\n    \tresult = &first_thread;\n    \tfirst_thread_used = TRUE;\n    } else {\n        result = (struct GC_Thread_Rep *)\n        \t GC_INTERNAL_MALLOC(sizeof(struct GC_Thread_Rep), NORMAL);\n\tGC_ASSERT(result -> flags == 0);\n    }\n    if (result == 0) return(0);\n    result -> id = id;\n    result -> next = GC_threads[hv];\n    GC_threads[hv] = result;\n    GC_ASSERT(result -> flags == 0 && result -> thread_blocked == 0);\n    return(result);\n}\n\n/* Delete a thread from GC_threads.  We assume it is there.\t*/\n/* (The code intentionally traps if it wasn't.)\t\t\t*/\nvoid GC_delete_thread(pthread_t id)\n{\n    int hv = NUMERIC_THREAD_ID(id) % THREAD_TABLE_SZ;\n    register GC_thread p = GC_threads[hv];\n    register GC_thread prev = 0;\n    \n    GC_ASSERT(I_HOLD_LOCK());\n    while (!THREAD_EQUAL(p -> id, id)) {\n        prev = p;\n        p = p -> next;\n    }\n    if (prev == 0) {\n        GC_threads[hv] = p -> next;\n    } else {\n        prev -> next = p -> next;\n    }\n#   ifdef GC_DARWIN_THREADS\n\tmach_port_deallocate(mach_task_self(), p->stop_info.mach_thread);\n#   endif\n    GC_INTERNAL_FREE(p);\n}\n\n/* If a thread has been joined, but we have not yet\t\t*/\n/* been notified, then there may be more than one thread \t*/\n/* in the table with the same pthread id.\t\t\t*/\n/* This is OK, but we need a way to delete a specific one.\t*/\nvoid GC_delete_gc_thread(GC_thread gc_id)\n{\n    pthread_t id = gc_id -> id;\n    int hv = NUMERIC_THREAD_ID(id) % THREAD_TABLE_SZ;\n    register GC_thread p = GC_threads[hv];\n    register GC_thread prev = 0;\n\n    GC_ASSERT(I_HOLD_LOCK());\n    while (p != gc_id) {\n        prev = p;\n        p = p -> next;\n    }\n    if (prev == 0) {\n        GC_threads[hv] = p -> next;\n    } else {\n        prev -> next = p -> next;\n    }\n#   ifdef GC_DARWIN_THREADS\n\tmach_port_deallocate(mach_task_self(), p->stop_info.mach_thread);\n#   endif\n    GC_INTERNAL_FREE(p);\n}\n\n/* Return a GC_thread corresponding to a given pthread_t.\t*/\n/* Returns 0 if it's not there.\t\t\t\t\t*/\n/* Caller holds  allocation lock or otherwise inhibits \t\t*/\n/* updates.\t\t\t\t\t\t\t*/\n/* If there is more than one thread with the given id we \t*/\n/* return the most recent one.\t\t\t\t\t*/\nGC_thread GC_lookup_thread(pthread_t id)\n{\n    int hv = NUMERIC_THREAD_ID(id) % THREAD_TABLE_SZ;\n    register GC_thread p = GC_threads[hv];\n    \n    while (p != 0 && !THREAD_EQUAL(p -> id, id)) p = p -> next;\n    return(p);\n}\n\n#ifdef HANDLE_FORK\n/* Remove all entries from the GC_threads table, except the\t*/\n/* one for the current thread.  We need to do this in the child\t*/\n/* process after a fork(), since only the current thread \t*/\n/* survives in the child.\t\t\t\t\t*/\nvoid GC_remove_all_threads_but_me(void)\n{\n    pthread_t self = pthread_self();\n    int hv;\n    GC_thread p, next, me;\n\n    for (hv = 0; hv < THREAD_TABLE_SZ; ++hv) {\n      me = 0;\n      for (p = GC_threads[hv]; 0 != p; p = next) {\n\tnext = p -> next;\n\tif (THREAD_EQUAL(p -> id, self)) {\n\t  me = p;\n\t  p -> next = 0;\n\t} else {\n#\t  ifdef THREAD_LOCAL_ALLOC\n\t    if (!(p -> flags & FINISHED)) {\n\t      GC_destroy_thread_local(&(p->tlfs));\n\t    }\n#\t  endif /* THREAD_LOCAL_ALLOC */\n\t  if (p != &first_thread) GC_INTERNAL_FREE(p);\n\t}\n      }\n      GC_threads[hv] = me;\n    }\n}\n#endif /* HANDLE_FORK */\n\n#ifdef USE_PROC_FOR_LIBRARIES\nGC_bool GC_segment_is_thread_stack(ptr_t lo, ptr_t hi)\n{\n    int i;\n    GC_thread p;\n    \n    GC_ASSERT(I_HOLD_LOCK());\n#   ifdef PARALLEL_MARK\n      for (i = 0; i < GC_markers; ++i) {\n\tif (marker_sp[i] > lo & marker_sp[i] < hi) return TRUE;\n#       ifdef IA64\n\t  if (marker_bsp[i] > lo & marker_bsp[i] < hi) return TRUE;\n#\tendif\n      }\n#   endif\n    for (i = 0; i < THREAD_TABLE_SZ; i++) {\n      for (p = GC_threads[i]; p != 0; p = p -> next) {\n\tif (0 != p -> stack_end) {\n#\t  ifdef STACK_GROWS_UP\n            if (p -> stack_end >= lo && p -> stack_end < hi) return TRUE;\n#\t  else /* STACK_GROWS_DOWN */\n            if (p -> stack_end > lo && p -> stack_end <= hi) return TRUE;\n#\t  endif\n\t}\n      }\n    }\n    return FALSE;\n}\n#endif /* USE_PROC_FOR_LIBRARIES */\n\n#ifdef IA64\n/* Find the largest stack_base smaller than bound.  May be used\t*/\n/* to find the boundary between a register stack and adjacent\t*/\n/* immediately preceding memory stack.\t\t\t\t*/\nptr_t GC_greatest_stack_base_below(ptr_t bound)\n{\n    int i;\n    GC_thread p;\n    ptr_t result = 0;\n    \n    GC_ASSERT(I_HOLD_LOCK());\n#   ifdef PARALLEL_MARK\n      for (i = 0; i < GC_markers; ++i) {\n\tif (marker_sp[i] > result && marker_sp[i] < bound)\n\t  result = marker_sp[i];\n      }\n#   endif\n    for (i = 0; i < THREAD_TABLE_SZ; i++) {\n      for (p = GC_threads[i]; p != 0; p = p -> next) {\n\tif (p -> stack_end > result && p -> stack_end < bound) {\n\t  result = p -> stack_end;\n\t}\n      }\n    }\n    return result;\n}\n#endif /* IA64 */\n\n#ifdef GC_LINUX_THREADS\n/* Return the number of processors, or i<= 0 if it can't be determined.\t*/\nint GC_get_nprocs(void)\n{\n    /* Should be \"return sysconf(_SC_NPROCESSORS_ONLN);\" but that\t*/\n    /* appears to be buggy in many cases.\t\t\t\t*/\n    /* We look for lines \"cpu<n>\" in /proc/stat.\t\t\t*/\n#   define STAT_BUF_SIZE 4096\n#   define STAT_READ read\n\t/* If read is wrapped, this may need to be redefined to call \t*/\n\t/* the real one.\t\t\t\t\t\t*/\n    char stat_buf[STAT_BUF_SIZE];\n    int f;\n    word result = 1;\n\t/* Some old kernels only have a single \"cpu nnnn ...\"\t*/\n\t/* entry in /proc/stat.  We identify those as \t\t*/\n\t/* uniprocessors.\t\t\t\t\t*/\n    size_t i, len = 0;\n\n    f = open(\"/proc/stat\", O_RDONLY);\n    if (f < 0 || (len = STAT_READ(f, stat_buf, STAT_BUF_SIZE)) < 100) {\n\tWARN(\"Couldn't read /proc/stat\\n\", 0);\n\treturn -1;\n    }\n    for (i = 0; i < len - 100; ++i) {\n        if (stat_buf[i] == '\\n' && stat_buf[i+1] == 'c'\n\t    && stat_buf[i+2] == 'p' && stat_buf[i+3] == 'u') {\n\t    int cpu_no = atoi(stat_buf + i + 4);\n\t    if (cpu_no >= result) result = cpu_no + 1;\n\t}\n    }\n    close(f);\n    return result;\n}\n#endif /* GC_LINUX_THREADS */\n\n/* We hold the GC lock.  Wait until an in-progress GC has finished.\t*/\n/* Repeatedly RELEASES GC LOCK in order to wait.\t\t\t*/\n/* If wait_for_all is true, then we exit with the GC lock held and no\t*/\n/* collection in progress; otherwise we just wait for the current GC\t*/\n/* to finish.\t\t\t\t\t\t\t\t*/\nextern GC_bool GC_collection_in_progress(void);\nvoid GC_wait_for_gc_completion(GC_bool wait_for_all)\n{\n    GC_ASSERT(I_HOLD_LOCK());\n    if (GC_incremental && GC_collection_in_progress()) {\n\tint old_gc_no = GC_gc_no;\n\n\t/* Make sure that no part of our stack is still on the mark stack, */\n\t/* since it's about to be unmapped.\t\t\t\t   */\n\twhile (GC_incremental && GC_collection_in_progress()\n\t       && (wait_for_all || old_gc_no == GC_gc_no)) {\n\t    ENTER_GC();\n\t    GC_in_thread_creation = TRUE;\n            GC_collect_a_little_inner(1);\n\t    GC_in_thread_creation = FALSE;\n\t    EXIT_GC();\n\t    UNLOCK();\n\t    sched_yield();\n\t    LOCK();\n\t}\n    }\n}\n\n#ifdef HANDLE_FORK\n/* Procedures called before and after a fork.  The goal here is to make */\n/* it safe to call GC_malloc() in a forked child.  It's unclear that is\t*/\n/* attainable, since the single UNIX spec seems to imply that one \t*/\n/* should only call async-signal-safe functions, and we probably can't\t*/\n/* quite guarantee that.  But we give it our best shot.  (That same\t*/\n/* spec also implies that it's not safe to call the system malloc\t*/\n/* between fork() and exec().  Thus we're doing no worse than it.\t*/\n\n/* Called before a fork()\t\t*/\nvoid GC_fork_prepare_proc(void)\n{\n    /* Acquire all relevant locks, so that after releasing the locks\t*/\n    /* the child will see a consistent state in which monitor \t\t*/\n    /* invariants hold.\t Unfortunately, we can't acquire libc locks\t*/\n    /* we might need, and there seems to be no guarantee that libc\t*/\n    /* must install a suitable fork handler.\t\t\t\t*/\n    /* Wait for an ongoing GC to finish, since we can't finish it in\t*/\n    /* the (one remaining thread in) the child.\t\t\t\t*/\n      LOCK();\n#     if defined(PARALLEL_MARK) || defined(THREAD_LOCAL_ALLOC)\n        GC_wait_for_reclaim();\n#     endif\n      GC_wait_for_gc_completion(TRUE);\n#     if defined(PARALLEL_MARK) || defined(THREAD_LOCAL_ALLOC)\n        GC_acquire_mark_lock();\n#     endif\n}\n\n/* Called in parent after a fork()\t*/\nvoid GC_fork_parent_proc(void)\n{\n#   if defined(PARALLEL_MARK) || defined(THREAD_LOCAL_ALLOC)\n      GC_release_mark_lock();\n#   endif\n    UNLOCK();\n}\n\n/* Called in child after a fork()\t*/\nvoid GC_fork_child_proc(void)\n{\n    /* Clean up the thread table, so that just our thread is left. */\n#   if defined(PARALLEL_MARK) || defined(THREAD_LOCAL_ALLOC)\n      GC_release_mark_lock();\n#   endif\n    GC_remove_all_threads_but_me();\n#   ifdef PARALLEL_MARK\n      /* Turn off parallel marking in the child, since we are probably \t*/\n      /* just going to exec, and we would have to restart mark threads.\t*/\n        GC_markers = 1;\n        GC_parallel = FALSE;\n#   endif /* PARALLEL_MARK */\n    UNLOCK();\n}\n#endif /* HANDLE_FORK */\n\n#if defined(GC_DGUX386_THREADS)\n/* Return the number of processors, or i<= 0 if it can't be determined. */\nint GC_get_nprocs(void)\n{\n    /* <takis@XFree86.Org> */\n    int numCpus;\n    struct dg_sys_info_pm_info pm_sysinfo;\n    int status =0;\n\n    status = dg_sys_info((long int *) &pm_sysinfo,\n\tDG_SYS_INFO_PM_INFO_TYPE, DG_SYS_INFO_PM_CURRENT_VERSION);\n    if (status < 0)\n       /* set -1 for error */\n       numCpus = -1;\n    else\n      /* Active CPUs */\n      numCpus = pm_sysinfo.idle_vp_count;\n\n#  ifdef DEBUG_THREADS\n    GC_printf(\"Number of active CPUs in this system: %d\\n\", numCpus);\n#  endif\n    return(numCpus);\n}\n#endif /* GC_DGUX386_THREADS */\n\n#if defined(GC_NETBSD_THREADS)\nstatic int get_ncpu(void)\n{\n    int mib[] = {CTL_HW,HW_NCPU};\n    int res;\n    size_t len = sizeof(res);\n\n    sysctl(mib, sizeof(mib)/sizeof(int), &res, &len, NULL, 0);\n    return res;\n}\n#endif\t/* GC_NETBSD_THREADS */\n\n# if defined(GC_LINUX_THREADS) && defined(INCLUDE_LINUX_THREAD_DESCR)\n__thread int dummy_thread_local;\n# endif\n\n/* We hold the allocation lock.\t*/\nvoid GC_thr_init(void)\n{\n#   ifndef GC_DARWIN_THREADS\n        int dummy;\n#   endif\n    GC_thread t;\n\n    if (GC_thr_initialized) return;\n    GC_thr_initialized = TRUE;\n    \n#   ifdef HANDLE_FORK\n      /* Prepare for a possible fork.\t*/\n        pthread_atfork(GC_fork_prepare_proc, GC_fork_parent_proc,\n\t  \t       GC_fork_child_proc);\n#   endif /* HANDLE_FORK */\n#   if defined(INCLUDE_LINUX_THREAD_DESCR)\n      /* Explicitly register the region including the address \t\t*/\n      /* of a thread local variable.  This should included thread\t*/\n      /* locals for the main thread, except for those allocated\t\t*/\n      /* in response to dlopen calls.\t\t\t\t\t*/  \n\t{\n\t  ptr_t thread_local_addr = (ptr_t)(&dummy_thread_local);\n\t  ptr_t main_thread_start, main_thread_end;\n          if (!GC_enclosing_mapping(thread_local_addr, &main_thread_start,\n\t\t\t\t    &main_thread_end)) {\n\t    ABORT(\"Failed to find mapping for main thread thread locals\");\n\t  }\n\t  GC_add_roots_inner(main_thread_start, main_thread_end, FALSE);\n\t}\n#   endif\n    /* Add the initial thread, so we can stop it.\t*/\n      t = GC_new_thread(pthread_self());\n#     ifdef GC_DARWIN_THREADS\n         t -> stop_info.mach_thread = mach_thread_self();\n#     else\n         t -> stop_info.stack_ptr = (ptr_t)(&dummy);\n#     endif\n      t -> flags = DETACHED | MAIN_THREAD;\n\n    GC_stop_init();\n\n    /* Set GC_nprocs.  */\n      {\n\tchar * nprocs_string = GETENV(\"GC_NPROCS\");\n\tGC_nprocs = -1;\n\tif (nprocs_string != NULL) GC_nprocs = atoi(nprocs_string);\n      }\n      if (GC_nprocs <= 0) {\n#       if defined(GC_HPUX_THREADS)\n\t  GC_nprocs = pthread_num_processors_np();\n#       endif\n#\tif defined(GC_OSF1_THREADS) || defined(GC_AIX_THREADS) \\\n\t   || defined(GC_SOLARIS_THREADS)\n\t  GC_nprocs = sysconf(_SC_NPROCESSORS_ONLN);\n\t  if (GC_nprocs <= 0) GC_nprocs = 1;\n#\tendif\n#       if defined(GC_IRIX_THREADS)\n\t  GC_nprocs = sysconf(_SC_NPROC_ONLN);\n\t  if (GC_nprocs <= 0) GC_nprocs = 1;\n#       endif\n#       if defined(GC_NETBSD_THREADS)\n\t  GC_nprocs = get_ncpu();\n#       endif\n#       if defined(GC_DARWIN_THREADS) || defined(GC_FREEBSD_THREADS)\n\t  int ncpus = 1;\n\t  size_t len = sizeof(ncpus);\n\t  sysctl((int[2]) {CTL_HW, HW_NCPU}, 2, &ncpus, &len, NULL, 0);\n\t  GC_nprocs = ncpus;\n#       endif\n#\tif defined(GC_LINUX_THREADS) || defined(GC_DGUX386_THREADS)\n          GC_nprocs = GC_get_nprocs();\n#\tendif\n#       if defined(GC_GNU_THREADS)\n\t  if (GC_nprocs <= 0) GC_nprocs = 1;\n#       endif\n      }\n      if (GC_nprocs <= 0) {\n\tWARN(\"GC_get_nprocs() returned %ld\\n\", GC_nprocs);\n\tGC_nprocs = 2;\n#\tifdef PARALLEL_MARK\n\t  GC_markers = 1;\n#\tendif\n      } else {\n#\tifdef PARALLEL_MARK\n          {\n\t    char * markers_string = GETENV(\"GC_MARKERS\");\n\t    if (markers_string != NULL) {\n\t      GC_markers = atoi(markers_string);\n\t    } else {\n\t      GC_markers = GC_nprocs;\n\t    }\n          }\n#\tendif\n      }\n#   ifdef PARALLEL_MARK\n      if (GC_print_stats) {\n          GC_log_printf(\"Number of processors = %ld, \"\n\t\t \"number of marker threads = %ld\\n\", GC_nprocs, GC_markers);\n      }\n      if (GC_markers == 1) {\n\tGC_parallel = FALSE;\n\tif (GC_print_stats) {\n\t    GC_log_printf(\n\t\t\"Single marker thread, turning off parallel marking\\n\");\n\t}\n      } else {\n\tGC_parallel = TRUE;\n\t/* Disable true incremental collection, but generational is OK.\t*/\n\tGC_time_limit = GC_TIME_UNLIMITED;\n      }\n      /* If we are using a parallel marker, actually start helper threads.  */\n        if (GC_parallel) start_mark_threads();\n#   endif\n}\n\n\n/* Perform all initializations, including those that\t*/\n/* may require allocation.\t\t\t\t*/\n/* Called without allocation lock.\t\t\t*/\n/* Must be called before a second thread is created.\t*/\n/* Did we say it's called without the allocation lock?\t*/\nvoid GC_init_parallel(void)\n{\n    if (parallel_initialized) return;\n    parallel_initialized = TRUE;\n\n    /* GC_init() calls us back, so set flag first.\t*/\n    if (!GC_is_initialized) GC_init();\n    /* Initialize thread local free lists if used.\t*/\n#   if defined(THREAD_LOCAL_ALLOC)\n      LOCK();\n      GC_init_thread_local(&(GC_lookup_thread(pthread_self())->tlfs));\n      UNLOCK();\n#   endif\n}\n\n\n#if !defined(GC_DARWIN_THREADS)\nint WRAP_FUNC(pthread_sigmask)(int how, const sigset_t *set, sigset_t *oset)\n{\n    sigset_t fudged_set;\n    \n    INIT_REAL_SYMS();\n    if (set != NULL && (how == SIG_BLOCK || how == SIG_SETMASK)) {\n        fudged_set = *set;\n        sigdelset(&fudged_set, SIG_SUSPEND);\n        set = &fudged_set;\n    }\n    return(REAL_FUNC(pthread_sigmask)(how, set, oset));\n}\n#endif /* !GC_DARWIN_THREADS */\n\n/* Wrapper for functions that are likely to block for an appreciable\t*/\n/* length of time.\t\t\t\t\t\t\t*/\n\nstruct blocking_data {\n    void (*fn)(void *);\n    void *arg;\n};\n\nstatic void GC_do_blocking_inner(ptr_t data, void * context) {\n    struct blocking_data * d = (struct blocking_data *) data;\n    GC_thread me;\n    LOCK();\n    me = GC_lookup_thread(pthread_self());\n    GC_ASSERT(!(me -> thread_blocked));\n#   ifdef SPARC\n\tme -> stop_info.stack_ptr = GC_save_regs_in_stack();\n#   elif !defined(GC_DARWIN_THREADS)\n\tme -> stop_info.stack_ptr = GC_approx_sp();\n#   endif\n#   ifdef IA64\n\tme -> backing_store_ptr = GC_save_regs_in_stack();\n#   endif\n    me -> thread_blocked = TRUE;\n    /* Save context here if we want to support precise stack marking */\n    UNLOCK();\n    (d -> fn)(d -> arg);\n    LOCK();   /* This will block if the world is stopped.\t*/\n    me -> thread_blocked = FALSE;\n    UNLOCK();\n}\n\nvoid GC_do_blocking(void (*fn)(void *), void *arg) {\n    struct blocking_data my_data;\n\n    my_data.fn = fn;\n    my_data.arg = arg;\n    GC_with_callee_saves_pushed(GC_do_blocking_inner, (ptr_t)(&my_data));\n}\n    \nstruct start_info {\n    void *(*start_routine)(void *);\n    void *arg;\n    word flags;\n    sem_t registered;   \t/* 1 ==> in our thread table, but \t*/\n\t\t\t\t/* parent hasn't yet noticed.\t\t*/\n};\n\nint GC_unregister_my_thread(void)\n{\n    GC_thread me;\n\n    LOCK();\n    /* Wait for any GC that may be marking from our stack to\t*/\n    /* complete before we remove this thread.\t\t\t*/\n    GC_wait_for_gc_completion(FALSE);\n    me = GC_lookup_thread(pthread_self());\n#   if defined(THREAD_LOCAL_ALLOC)\n      GC_destroy_thread_local(&(me->tlfs));\n#   endif\n    if (me -> flags & DETACHED) {\n    \tGC_delete_thread(pthread_self());\n    } else {\n\tme -> flags |= FINISHED;\n    }\n#   if defined(THREAD_LOCAL_ALLOC)\n      GC_remove_specific(GC_thread_key);\n#   endif\n    UNLOCK();\n    return GC_SUCCESS;\n}\n\n/* Called at thread exit.\t\t\t\t*/\n/* Never called for main thread.  That's OK, since it\t*/\n/* results in at most a tiny one-time leak.  And \t*/\n/* linuxthreads doesn't reclaim the main threads \t*/\n/* resources or id anyway.\t\t\t\t*/\nvoid GC_thread_exit_proc(void *arg)\n{\n    GC_unregister_my_thread();\n}\n\nint WRAP_FUNC(pthread_join)(pthread_t thread, void **retval)\n{\n    int result;\n    GC_thread thread_gc_id;\n    \n    INIT_REAL_SYMS();\n    LOCK();\n    thread_gc_id = GC_lookup_thread(thread);\n    /* This is guaranteed to be the intended one, since the thread id\t*/\n    /* cant have been recycled by pthreads.\t\t\t\t*/\n    UNLOCK();\n    result = REAL_FUNC(pthread_join)(thread, retval);\n# if defined (GC_FREEBSD_THREADS)\n    /* On FreeBSD, the wrapped pthread_join() sometimes returns (what\n       appears to be) a spurious EINTR which caused the test and real code\n       to gratuitously fail.  Having looked at system pthread library source\n       code, I see how this return code may be generated.  In one path of\n       code, pthread_join() just returns the errno setting of the thread\n       being joined.  This does not match the POSIX specification or the\n       local man pages thus I have taken the liberty to catch this one\n       spurious return value properly conditionalized on GC_FREEBSD_THREADS. */\n    if (result == EINTR) result = 0;\n# endif\n    if (result == 0) {\n        LOCK();\n        /* Here the pthread thread id may have been recycled. */\n        GC_delete_gc_thread(thread_gc_id);\n        UNLOCK();\n    }\n    return result;\n}\n\nint\nWRAP_FUNC(pthread_detach)(pthread_t thread)\n{\n    int result;\n    GC_thread thread_gc_id;\n    \n    INIT_REAL_SYMS();\n    LOCK();\n    thread_gc_id = GC_lookup_thread(thread);\n    UNLOCK();\n    result = REAL_FUNC(pthread_detach)(thread);\n    if (result == 0) {\n      LOCK();\n      thread_gc_id -> flags |= DETACHED;\n      /* Here the pthread thread id may have been recycled. */\n      if (thread_gc_id -> flags & FINISHED) {\n        GC_delete_gc_thread(thread_gc_id);\n      }\n      UNLOCK();\n    }\n    return result;\n}\n\nGC_bool GC_in_thread_creation = FALSE;  /* Protected by allocation lock. */\n\nGC_thread GC_register_my_thread_inner(struct GC_stack_base *sb,\n\t\t\t\t      pthread_t my_pthread)\n{\n    GC_thread me;\n\n    GC_in_thread_creation = TRUE; /* OK to collect from unknown thread. */\n    me = GC_new_thread(my_pthread);\n    GC_in_thread_creation = FALSE;\n#   ifdef GC_DARWIN_THREADS\n      me -> stop_info.mach_thread = mach_thread_self();\n#   else\n      me -> stop_info.stack_ptr = sb -> mem_base;\n#   endif\n    me -> stack_end = sb -> mem_base;\n#   ifdef IA64\n      me -> backing_store_end = sb -> reg_base;\n#   endif /* IA64 */\n    return me;\n}\n\nint GC_register_my_thread(struct GC_stack_base *sb)\n{\n    pthread_t my_pthread = pthread_self();\n    GC_thread me;\n\n    LOCK();\n    me = GC_lookup_thread(my_pthread);\n    if (0 == me) {\n        me = GC_register_my_thread_inner(sb, my_pthread);\n\tme -> flags |= DETACHED;\n    \t  /* Treat as detached, since we do not need to worry about\t*/\n    \t  /* pointer results.\t\t\t\t\t\t*/\n\tUNLOCK();\n        return GC_SUCCESS;\n    } else {\n\tUNLOCK();\n\treturn GC_DUPLICATE;\n    }\n}\n\nvoid * GC_inner_start_routine(struct GC_stack_base *sb, void * arg)\n{\n    struct start_info * si = arg;\n    void * result;\n    GC_thread me;\n    pthread_t my_pthread;\n    void *(*start)(void *);\n    void *start_arg;\n\n    my_pthread = pthread_self();\n#   ifdef DEBUG_THREADS\n        GC_printf(\"Starting thread 0x%x\\n\", (unsigned)my_pthread);\n        GC_printf(\"pid = %ld\\n\", (long) getpid());\n        GC_printf(\"sp = 0x%lx\\n\", (long) &arg);\n#   endif\n    LOCK();\n    me = GC_register_my_thread_inner(sb, my_pthread);\n    me -> flags = si -> flags;\n    UNLOCK();\n    start = si -> start_routine;\n#   ifdef DEBUG_THREADS\n\tGC_printf(\"start_routine = %p\\n\", (void *)start);\n#   endif\n    start_arg = si -> arg;\n    sem_post(&(si -> registered));\t/* Last action on si.\t*/\n    \t\t\t\t\t/* OK to deallocate.\t*/\n    pthread_cleanup_push(GC_thread_exit_proc, 0);\n#   if defined(THREAD_LOCAL_ALLOC)\n \tLOCK();\n        GC_init_thread_local(&(me->tlfs));\n\tUNLOCK();\n#   endif\n    result = (*start)(start_arg);\n#   if DEBUG_THREADS\n        GC_printf(\"Finishing thread 0x%x\\n\", (unsigned)pthread_self());\n#   endif\n    me -> status = result;\n    pthread_cleanup_pop(1);\n    /* Cleanup acquires lock, ensuring that we can't exit\t\t*/\n    /* while a collection that thinks we're alive is trying to stop     */\n    /* us.\t\t\t\t\t\t\t\t*/\n    return(result);\n}\n\nvoid * GC_start_routine(void * arg)\n{\n#   ifdef INCLUDE_LINUX_THREAD_DESCR\n      struct GC_stack_base sb;\n\n#     ifdef REDIRECT_MALLOC\n      \t/* GC_get_stack_base may call pthread_getattr_np, which can \t*/\n        /* unfortunately call realloc, which may allocate from an\t*/\n        /* unregistered thread.  This is unpleasant, since it might\t*/ \n        /* force heap growth.\t\t\t\t\t\t*/\n        GC_disable();\n#     endif\n      if (GC_get_stack_base(&sb) != GC_SUCCESS)\n\tABORT(\"Failed to get thread stack base.\");\n#     ifdef REDIRECT_MALLOC\n        GC_enable();\n#     endif\n      return GC_inner_start_routine(&sb, arg);\n#   else\n      return GC_call_with_stack_base(GC_inner_start_routine, arg);\n#   endif\n}\n\nint\nWRAP_FUNC(pthread_create)(pthread_t *new_thread,\n\t\t  const pthread_attr_t *attr,\n                  void *(*start_routine)(void *), void *arg)\n{\n    int result;\n    int detachstate;\n    word my_flags = 0;\n    struct start_info * si; \n\t/* This is otherwise saved only in an area mmapped by the thread */\n\t/* library, which isn't visible to the collector.\t\t */\n \n    /* We resist the temptation to muck with the stack size here,\t*/\n    /* even if the default is unreasonably small.  That's the client's\t*/\n    /* responsibility.\t\t\t\t\t\t\t*/\n\n    INIT_REAL_SYMS();\n    LOCK();\n    si = (struct start_info *)GC_INTERNAL_MALLOC(sizeof(struct start_info),\n\t\t\t\t\t\t NORMAL);\n    UNLOCK();\n    if (!parallel_initialized) GC_init_parallel();\n    if (0 == si) return(ENOMEM);\n    sem_init(&(si -> registered), 0, 0);\n    si -> start_routine = start_routine;\n    si -> arg = arg;\n    LOCK();\n    if (!GC_thr_initialized) GC_thr_init();\n#   ifdef GC_ASSERTIONS\n      {\n\tsize_t stack_size = 0;\n\tif (NULL != attr) {\n\t   pthread_attr_getstacksize(attr, &stack_size);\n\t}\n\tif (0 == stack_size) {\n\t   pthread_attr_t my_attr;\n\t   pthread_attr_init(&my_attr);\n\t   pthread_attr_getstacksize(&my_attr, &stack_size);\n\t}\n\t/* On Solaris 10, with default attr initialization, \t*/\n\t/* stack_size remains 0.  Fudge it.\t\t\t*/\n\tif (0 == stack_size) {\n#\t    ifndef SOLARIS\n\t      WARN(\"Failed to get stack size for assertion checking\\n\", 0);\n#\t    endif\n\t    stack_size = 1000000;\n\t}\n#       ifdef PARALLEL_MARK\n\t  GC_ASSERT(stack_size >= (8*HBLKSIZE*sizeof(word)));\n#       else\n          /* FreeBSD-5.3/Alpha: default pthread stack is 64K, \t*/\n\t  /* HBLKSIZE=8192, sizeof(word)=8\t\t\t*/\n\t  GC_ASSERT(stack_size >= 65536);\n#       endif\n\t/* Our threads may need to do some work for the GC.\t*/\n\t/* Ridiculously small threads won't work, and they\t*/\n\t/* probably wouldn't work anyway.\t\t\t*/\n      }\n#   endif\n    if (NULL == attr) {\n\tdetachstate = PTHREAD_CREATE_JOINABLE;\n    } else { \n        pthread_attr_getdetachstate(attr, &detachstate);\n    }\n    if (PTHREAD_CREATE_DETACHED == detachstate) my_flags |= DETACHED;\n    si -> flags = my_flags;\n    UNLOCK();\n#   ifdef DEBUG_THREADS\n        GC_printf(\"About to start new thread from thread 0x%x\\n\",\n\t\t  (unsigned)pthread_self());\n#   endif\n    GC_need_to_lock = TRUE;\n\n    result = REAL_FUNC(pthread_create)(new_thread, attr, GC_start_routine, si);\n\n#   ifdef DEBUG_THREADS\n        GC_printf(\"Started thread 0x%x\\n\", (unsigned)(*new_thread));\n#   endif\n    /* Wait until child has been added to the thread table.\t\t*/\n    /* This also ensures that we hold onto si until the child is done\t*/\n    /* with it.  Thus it doesn't matter whether it is otherwise\t\t*/\n    /* visible to the collector.\t\t\t\t\t*/\n    if (0 == result) {\n\twhile (0 != sem_wait(&(si -> registered))) {\n            if (EINTR != errno) ABORT(\"sem_wait failed\");\n\t}\n    }\n    sem_destroy(&(si -> registered));\n    LOCK();\n    GC_INTERNAL_FREE(si);\n    UNLOCK();\n\n    return(result);\n}\n\n/* Spend a few cycles in a way that can't introduce contention with\t*/\n/* othre threads.\t\t\t\t\t\t\t*/\nvoid GC_pause(void)\n{\n    int i;\n#   if !defined(__GNUC__) || defined(__INTEL_COMPILER)\n      volatile word dummy = 0;\n#   endif\n\n    for (i = 0; i < 10; ++i) { \n#     if defined(__GNUC__) && !defined(__INTEL_COMPILER)\n        __asm__ __volatile__ (\" \" : : : \"memory\");\n#     else\n\t/* Something that's unlikely to be optimized away. */\n\tGC_noop(++dummy);\n#     endif\n    }\n}\n    \n#define SPIN_MAX 128\t/* Maximum number of calls to GC_pause before\t*/\n\t\t\t/* give up.\t\t\t\t\t*/\n\nvolatile GC_bool GC_collecting = 0;\n\t\t\t/* A hint that we're in the collector and       */\n                        /* holding the allocation lock for an           */\n                        /* extended period.                             */\n\n#if !defined(USE_SPIN_LOCK) || defined(PARALLEL_MARK)\n/* If we don't want to use the below spinlock implementation, either\t*/\n/* because we don't have a GC_test_and_set implementation, or because \t*/\n/* we don't want to risk sleeping, we can still try spinning on \t*/\n/* pthread_mutex_trylock for a while.  This appears to be very\t\t*/\n/* beneficial in many cases.\t\t\t\t\t\t*/\n/* I suspect that under high contention this is nearly always better\t*/\n/* than the spin lock.  But it's a bit slower on a uniprocessor.\t*/\n/* Hence we still default to the spin lock.\t\t\t\t*/\n/* This is also used to acquire the mark lock for the parallel\t\t*/\n/* marker.\t\t\t\t\t\t\t\t*/\n\n/* Here we use a strict exponential backoff scheme.  I don't know \t*/\n/* whether that's better or worse than the above.  We eventually \t*/\n/* yield by calling pthread_mutex_lock(); it never makes sense to\t*/\n/* explicitly sleep.\t\t\t\t\t\t\t*/\n\n#define LOCK_STATS\n#ifdef LOCK_STATS\n  unsigned long GC_spin_count = 0;\n  unsigned long GC_block_count = 0;\n  unsigned long GC_unlocked_count = 0;\n#endif\n\nvoid GC_generic_lock(pthread_mutex_t * lock)\n{\n#ifndef NO_PTHREAD_TRYLOCK\n    unsigned pause_length = 1;\n    unsigned i;\n    \n    if (0 == pthread_mutex_trylock(lock)) {\n#       ifdef LOCK_STATS\n\t    ++GC_unlocked_count;\n#       endif\n\treturn;\n    }\n    for (; pause_length <= SPIN_MAX; pause_length <<= 1) {\n\tfor (i = 0; i < pause_length; ++i) {\n\t    GC_pause();\n\t}\n        switch(pthread_mutex_trylock(lock)) {\n\t    case 0:\n#\t\tifdef LOCK_STATS\n\t\t    ++GC_spin_count;\n#\t\tendif\n\t\treturn;\n\t    case EBUSY:\n\t\tbreak;\n\t    default:\n\t\tABORT(\"Unexpected error from pthread_mutex_trylock\");\n        }\n    }\n#endif /* !NO_PTHREAD_TRYLOCK */\n#   ifdef LOCK_STATS\n\t++GC_block_count;\n#   endif\n    pthread_mutex_lock(lock);\n}\n\n#endif /* !USE_SPIN_LOCK || PARALLEL_MARK */\n\n#if defined(USE_SPIN_LOCK)\n\n/* Reasonably fast spin locks.  Basically the same implementation */\n/* as STL alloc.h.  This isn't really the right way to do this.   */\n/* but until the POSIX scheduling mess gets straightened out ...  */\n\nvolatile AO_TS_t GC_allocate_lock = 0;\n\n\nvoid GC_lock(void)\n{\n#   define low_spin_max 30  /* spin cycles if we suspect uniprocessor */\n#   define high_spin_max SPIN_MAX /* spin cycles for multiprocessor */\n    static unsigned spin_max = low_spin_max;\n    unsigned my_spin_max;\n    static unsigned last_spins = 0;\n    unsigned my_last_spins;\n    int i;\n\n    if (AO_test_and_set_acquire(&GC_allocate_lock) == AO_TS_CLEAR) {\n        return;\n    }\n    my_spin_max = spin_max;\n    my_last_spins = last_spins;\n    for (i = 0; i < my_spin_max; i++) {\n        if (GC_collecting || GC_nprocs == 1) goto yield;\n        if (i < my_last_spins/2) {\n            GC_pause();\n            continue;\n        }\n        if (AO_test_and_set_acquire(&GC_allocate_lock) == AO_TS_CLEAR) {\n\t    /*\n             * got it!\n             * Spinning worked.  Thus we're probably not being scheduled\n             * against the other process with which we were contending.\n             * Thus it makes sense to spin longer the next time.\n\t     */\n            last_spins = i;\n            spin_max = high_spin_max;\n            return;\n        }\n    }\n    /* We are probably being scheduled against the other process.  Sleep. */\n    spin_max = low_spin_max;\nyield:\n    for (i = 0;; ++i) {\n        if (AO_test_and_set_acquire(&GC_allocate_lock) == AO_TS_CLEAR) {\n            return;\n        }\n#       define SLEEP_THRESHOLD 12\n\t\t/* Under Linux very short sleeps tend to wait until\t*/\n\t\t/* the current time quantum expires.  On old Linux\t*/\n\t\t/* kernels nanosleep(<= 2ms) just spins under Linux.    */\n\t\t/* (Under 2.4, this happens only for real-time\t\t*/\n\t\t/* processes.)  We want to minimize both behaviors\t*/\n\t\t/* here.\t\t\t\t\t\t*/\n        if (i < SLEEP_THRESHOLD) {\n            sched_yield();\n\t} else {\n\t    struct timespec ts;\n\t\n\t    if (i > 24) i = 24;\n\t\t\t/* Don't wait for more than about 15msecs, even\t*/\n\t\t\t/* under extreme contention.\t\t\t*/\n\t    ts.tv_sec = 0;\n\t    ts.tv_nsec = 1 << i;\n\t    nanosleep(&ts, 0);\n\t}\n    }\n}\n\n#else  /* !USE_SPINLOCK */\nvoid GC_lock(void)\n{\n#ifndef NO_PTHREAD_TRYLOCK\n    if (1 == GC_nprocs || GC_collecting) {\n\tpthread_mutex_lock(&GC_allocate_ml);\n    } else {\n        GC_generic_lock(&GC_allocate_ml);\n    }\n#else  /* !NO_PTHREAD_TRYLOCK */\n    pthread_mutex_lock(&GC_allocate_ml);\n#endif /* !NO_PTHREAD_TRYLOCK */\n}\n\n#endif /* !USE_SPINLOCK */\n\n#if defined(PARALLEL_MARK) || defined(THREAD_LOCAL_ALLOC)\n\n#ifdef GC_ASSERTIONS\n  unsigned long GC_mark_lock_holder = NO_THREAD;\n#endif\n\n#if 0\n  /* Ugly workaround for a linux threads bug in the final versions      */\n  /* of glibc2.1.  Pthread_mutex_trylock sets the mutex owner           */\n  /* field even when it fails to acquire the mutex.  This causes        */\n  /* pthread_cond_wait to die.  Remove for glibc2.2.                    */\n  /* According to the man page, we should use                           */\n  /* PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP, but that isn't actually   */\n  /* defined.                                                           */\n  static pthread_mutex_t mark_mutex =\n        {0, 0, 0, PTHREAD_MUTEX_ERRORCHECK_NP, {0, 0}};\n#else\n  static pthread_mutex_t mark_mutex = PTHREAD_MUTEX_INITIALIZER;\n#endif\n\nstatic pthread_cond_t builder_cv = PTHREAD_COND_INITIALIZER;\n\nvoid GC_acquire_mark_lock(void)\n{\n/*\n    if (pthread_mutex_lock(&mark_mutex) != 0) {\n\tABORT(\"pthread_mutex_lock failed\");\n    }\n*/\n    GC_generic_lock(&mark_mutex);\n#   ifdef GC_ASSERTIONS\n\tGC_mark_lock_holder = NUMERIC_THREAD_ID(pthread_self());\n#   endif\n}\n\nvoid GC_release_mark_lock(void)\n{\n    GC_ASSERT(GC_mark_lock_holder == NUMERIC_THREAD_ID(pthread_self()));\n#   ifdef GC_ASSERTIONS\n\tGC_mark_lock_holder = NO_THREAD;\n#   endif\n    if (pthread_mutex_unlock(&mark_mutex) != 0) {\n\tABORT(\"pthread_mutex_unlock failed\");\n    }\n}\n\n/* Collector must wait for a freelist builders for 2 reasons:\t\t*/\n/* 1) Mark bits may still be getting examined without lock.\t\t*/\n/* 2) Partial free lists referenced only by locals may not be scanned \t*/\n/*    correctly, e.g. if they contain \"pointer-free\" objects, since the\t*/\n/*    free-list link may be ignored.\t\t\t\t\t*/\nvoid GC_wait_builder(void)\n{\n    GC_ASSERT(GC_mark_lock_holder == NUMERIC_THREAD_ID(pthread_self()));\n#   ifdef GC_ASSERTIONS\n\tGC_mark_lock_holder = NO_THREAD;\n#   endif\n    if (pthread_cond_wait(&builder_cv, &mark_mutex) != 0) {\n\tABORT(\"pthread_cond_wait failed\");\n    }\n    GC_ASSERT(GC_mark_lock_holder == NO_THREAD);\n#   ifdef GC_ASSERTIONS\n\tGC_mark_lock_holder = NUMERIC_THREAD_ID(pthread_self());\n#   endif\n}\n\nvoid GC_wait_for_reclaim(void)\n{\n    GC_acquire_mark_lock();\n    while (GC_fl_builder_count > 0) {\n\tGC_wait_builder();\n    }\n    GC_release_mark_lock();\n}\n\nvoid GC_notify_all_builder(void)\n{\n    GC_ASSERT(GC_mark_lock_holder == NUMERIC_THREAD_ID(pthread_self()));\n    if (pthread_cond_broadcast(&builder_cv) != 0) {\n\tABORT(\"pthread_cond_broadcast failed\");\n    }\n}\n\n#endif /* PARALLEL_MARK || THREAD_LOCAL_ALLOC */\n\n#ifdef PARALLEL_MARK\n\nstatic pthread_cond_t mark_cv = PTHREAD_COND_INITIALIZER;\n\nvoid GC_wait_marker(void)\n{\n    GC_ASSERT(GC_mark_lock_holder == NUMERIC_THREAD_ID(pthread_self()));\n#   ifdef GC_ASSERTIONS\n\tGC_mark_lock_holder = NO_THREAD;\n#   endif\n    if (pthread_cond_wait(&mark_cv, &mark_mutex) != 0) {\n\tABORT(\"pthread_cond_wait failed\");\n    }\n    GC_ASSERT(GC_mark_lock_holder == NO_THREAD);\n#   ifdef GC_ASSERTIONS\n\tGC_mark_lock_holder = NUMERIC_THREAD_ID(pthread_self());\n#   endif\n}\n\nvoid GC_notify_all_marker(void)\n{\n    if (pthread_cond_broadcast(&mark_cv) != 0) {\n\tABORT(\"pthread_cond_broadcast failed\");\n    }\n}\n\n#endif /* PARALLEL_MARK */\n\n# endif /* GC_LINUX_THREADS and friends */\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/src/engine/boehm_gc/libtool.m4": "# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-\n## Copyright 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005\n## Free Software Foundation, Inc.\n## Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n##\n## This file is free software; the Free Software Foundation gives\n## unlimited permission to copy and/or distribute it, with or without\n## modifications, as long as this notice is preserved.\n\n# serial 48 AC_PROG_LIBTOOL\n\n\n# AC_PROVIDE_IFELSE(MACRO-NAME, IF-PROVIDED, IF-NOT-PROVIDED)\n# -----------------------------------------------------------\n# If this macro is not defined by Autoconf, define it here.\nm4_ifdef([AC_PROVIDE_IFELSE],\n         [],\n         [m4_define([AC_PROVIDE_IFELSE],\n\t         [m4_ifdef([AC_PROVIDE_$1],\n\t\t           [$2], [$3])])])\n\n\n# AC_PROG_LIBTOOL\n# ---------------\nAC_DEFUN([AC_PROG_LIBTOOL],\n[AC_REQUIRE([_AC_PROG_LIBTOOL])dnl\ndnl If AC_PROG_CXX has already been expanded, run AC_LIBTOOL_CXX\ndnl immediately, otherwise, hook it in at the end of AC_PROG_CXX.\n  AC_PROVIDE_IFELSE([AC_PROG_CXX],\n    [AC_LIBTOOL_CXX],\n    [define([AC_PROG_CXX], defn([AC_PROG_CXX])[AC_LIBTOOL_CXX\n  ])])\ndnl And a similar setup for Fortran 77 support\n  AC_PROVIDE_IFELSE([AC_PROG_F77],\n    [AC_LIBTOOL_F77],\n    [define([AC_PROG_F77], defn([AC_PROG_F77])[AC_LIBTOOL_F77\n])])\n\ndnl Quote A][M_PROG_GCJ so that aclocal doesn't bring it in needlessly.\ndnl If either AC_PROG_GCJ or A][M_PROG_GCJ have already been expanded, run\ndnl AC_LIBTOOL_GCJ immediately, otherwise, hook it in at the end of both.\n  AC_PROVIDE_IFELSE([AC_PROG_GCJ],\n    [AC_LIBTOOL_GCJ],\n    [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],\n      [AC_LIBTOOL_GCJ],\n      [AC_PROVIDE_IFELSE([LT_AC_PROG_GCJ],\n\t[AC_LIBTOOL_GCJ],\n      [ifdef([AC_PROG_GCJ],\n\t     [define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[AC_LIBTOOL_GCJ])])\n       ifdef([A][M_PROG_GCJ],\n\t     [define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[AC_LIBTOOL_GCJ])])\n       ifdef([LT_AC_PROG_GCJ],\n\t     [define([LT_AC_PROG_GCJ],\n\t\tdefn([LT_AC_PROG_GCJ])[AC_LIBTOOL_GCJ])])])])\n])])# AC_PROG_LIBTOOL\n\n\n# _AC_PROG_LIBTOOL\n# ----------------\nAC_DEFUN([_AC_PROG_LIBTOOL],\n[AC_REQUIRE([AC_LIBTOOL_SETUP])dnl\nAC_BEFORE([$0],[AC_LIBTOOL_CXX])dnl\nAC_BEFORE([$0],[AC_LIBTOOL_F77])dnl\nAC_BEFORE([$0],[AC_LIBTOOL_GCJ])dnl\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=\"$ac_aux_dir/ltmain.sh\"\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\nAC_SUBST(LIBTOOL)dnl\n\n# Prevent multiple expansion\ndefine([AC_PROG_LIBTOOL], [])\n])# _AC_PROG_LIBTOOL\n\n\n# AC_LIBTOOL_SETUP\n# ----------------\nAC_DEFUN([AC_LIBTOOL_SETUP],\n[AC_PREREQ(2.50)dnl\nAC_REQUIRE([AC_ENABLE_SHARED])dnl\nAC_REQUIRE([AC_ENABLE_STATIC])dnl\nAC_REQUIRE([AC_ENABLE_FAST_INSTALL])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_PROG_LD])dnl\nAC_REQUIRE([AC_PROG_LD_RELOAD_FLAG])dnl\nAC_REQUIRE([AC_PROG_NM])dnl\n\nAC_REQUIRE([AC_PROG_LN_S])dnl\nAC_REQUIRE([AC_DEPLIBS_CHECK_METHOD])dnl\n# Autoconf 2.13's AC_OBJEXT and AC_EXEEXT macros only works for C compilers!\nAC_REQUIRE([AC_OBJEXT])dnl\nAC_REQUIRE([AC_EXEEXT])dnl\ndnl\n\nAC_LIBTOOL_SYS_MAX_CMD_LEN\nAC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE\nAC_LIBTOOL_OBJDIR\n\nAC_REQUIRE([_LT_AC_SYS_COMPILER])dnl\n_LT_AC_PROG_ECHO_BACKSLASH\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test \"X${COLLECT_NAMES+set}\" != Xset; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed='sed -e 1s/^X//'\n[sed_quote_subst='s/\\([\\\\\"\\\\`$\\\\\\\\]\\)/\\\\\\1/g']\n\n# Same as above, but do not quote variable references.\n[double_quote_subst='s/\\([\\\\\"\\\\`\\\\\\\\]\\)/\\\\\\1/g']\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n\n# Constants:\nrm=\"rm -f\"\n\n# Global variables:\ndefault_ofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a `.a' archive for static linking (except MSVC,\n# which needs '.lib').\nlibext=a\nltmain=\"$ac_aux_dir/ltmain.sh\"\nofile=\"$default_ofile\"\nwith_gnu_ld=\"$lt_cv_prog_gnu_ld\"\n\nAC_CHECK_TOOL(AR, ar, false)\nAC_CHECK_TOOL(RANLIB, ranlib, :)\nAC_CHECK_TOOL(STRIP, strip, :)\n\nold_CC=\"$CC\"\nold_CFLAGS=\"$CFLAGS\"\n\n# Set sane defaults for various variables\ntest -z \"$AR\" && AR=ar\ntest -z \"$AR_FLAGS\" && AR_FLAGS=cru\ntest -z \"$AS\" && AS=as\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$LTCFLAGS\" && LTCFLAGS=$CFLAGS\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\ntest -z \"$LD\" && LD=ld\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ntest -z \"$NM\" && NM=nm\ntest -z \"$SED\" && SED=sed\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\ntest -z \"$RANLIB\" && RANLIB=:\ntest -z \"$STRIP\" && STRIP=:\ntest -z \"$ac_objext\" && ac_objext=o\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  openbsd*)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB -t \\$oldlib\"\n    ;;\n  *)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB \\$oldlib\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$oldlib\"\nfi\n\n_LT_CC_BASENAME([$compiler])\n\n# Only perform the check for file, if the check method requires it\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    AC_PATH_MAGIC\n  fi\n  ;;\nesac\n\nAC_PROVIDE_IFELSE([AC_LIBTOOL_DLOPEN], enable_dlopen=yes, enable_dlopen=no)\nAC_PROVIDE_IFELSE([AC_LIBTOOL_WIN32_DLL],\nenable_win32_dll=yes, enable_win32_dll=no)\n\nAC_ARG_ENABLE([libtool-lock],\n    [AC_HELP_STRING([--disable-libtool-lock],\n\t[avoid locking (might break parallel builds)])])\ntest \"x$enable_libtool_lock\" != xno && enable_libtool_lock=yes\n\nAC_ARG_WITH([pic],\n    [AC_HELP_STRING([--with-pic],\n\t[try to use only PIC/non-PIC objects @<:@default=use both@:>@])],\n    [pic_mode=\"$withval\"],\n    [pic_mode=default])\ntest -z \"$pic_mode\" && pic_mode=default\n\n# Use C for the default configuration in the libtool script\ntagname=\nAC_LIBTOOL_LANG_C_CONFIG\n_LT_AC_TAGCONFIG\n])# AC_LIBTOOL_SETUP\n\n\n# _LT_AC_SYS_COMPILER\n# -------------------\nAC_DEFUN([_LT_AC_SYS_COMPILER],\n[AC_REQUIRE([AC_PROG_CC])dnl\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n])# _LT_AC_SYS_COMPILER\n\n\n# _LT_CC_BASENAME(CC)\n# -------------------\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nAC_DEFUN([_LT_CC_BASENAME],\n[for cc_temp in $1\"\"; do\n  case $cc_temp in\n    compile | *[[\\\\/]]compile | ccache | *[[\\\\/]]ccache ) ;;\n    distcc | *[[\\\\/]]distcc | purify | *[[\\\\/]]purify ) ;;\n    \\-*) ;;\n    *) break;;\n  esac\ndone\ncc_basename=`$echo \"X$cc_temp\" | $Xsed -e 's%.*/%%' -e \"s%^$host_alias-%%\"`\n])\n\n\n# _LT_COMPILER_BOILERPLATE\n# ------------------------\n# Check for compiler boilerplate output or warnings with\n# the simple compiler test code.\nAC_DEFUN([_LT_COMPILER_BOILERPLATE],\n[ac_outfile=conftest.$ac_objext\nprintf \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$rm conftest*\n])# _LT_COMPILER_BOILERPLATE\n\n\n# _LT_LINKER_BOILERPLATE\n# ----------------------\n# Check for linker boilerplate output or warnings with\n# the simple link test code.\nAC_DEFUN([_LT_LINKER_BOILERPLATE],\n[ac_outfile=conftest.$ac_objext\nprintf \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$rm conftest*\n])# _LT_LINKER_BOILERPLATE\n\n\n# _LT_AC_SYS_LIBPATH_AIX\n# ----------------------\n# Links a minimal program and checks the executable\n# for the system default hardcoded library path. In most cases,\n# this is /usr/lib:/lib, but when the MPI compilers are used\n# the location of the communication and MPI libs are included too.\n# If we don't find anything, use the default library path according\n# to the aix ld manual.\nAC_DEFUN([_LT_AC_SYS_LIBPATH_AIX],\n[AC_LINK_IFELSE(AC_LANG_PROGRAM,[\naix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\\(.*\\)$/\\1/; p; }\n}'`\n# Check for a 64-bit object if we didn't find anything.\nif test -z \"$aix_libpath\"; then aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\\(.*\\)$/\\1/; p; }\n}'`; fi],[])\nif test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n])# _LT_AC_SYS_LIBPATH_AIX\n\n\n# _LT_AC_SHELL_INIT(ARG)\n# ----------------------\nAC_DEFUN([_LT_AC_SHELL_INIT],\n[ifdef([AC_DIVERSION_NOTICE],\n\t     [AC_DIVERT_PUSH(AC_DIVERSION_NOTICE)],\n\t [AC_DIVERT_PUSH(NOTICE)])\n$1\nAC_DIVERT_POP\n])# _LT_AC_SHELL_INIT\n\n\n# _LT_AC_PROG_ECHO_BACKSLASH\n# --------------------------\n# Add some code to the start of the generated configure script which\n# will find an echo command which doesn't interpret backslashes.\nAC_DEFUN([_LT_AC_PROG_ECHO_BACKSLASH],\n[_LT_AC_SHELL_INIT([\n# Check that we are running under the correct shell.\nSHELL=${CONFIG_SHELL-/bin/sh}\n\ncase X$ECHO in\nX*--fallback-echo)\n  # Remove one level of quotation (which was required for Make).\n  ECHO=`echo \"$ECHO\" | sed 's,\\\\\\\\\\[$]\\\\[$]0,'[$]0','`\n  ;;\nesac\n\necho=${ECHO-echo}\nif test \"X[$]1\" = X--no-reexec; then\n  # Discard the --no-reexec flag, and continue.\n  shift\nelif test \"X[$]1\" = X--fallback-echo; then\n  # Avoid inline document here, it may be left over\n  :\nelif test \"X`($echo '\\t') 2>/dev/null`\" = 'X\\t' ; then\n  # Yippee, $echo works!\n  :\nelse\n  # Restart under the correct shell.\n  exec $SHELL \"[$]0\" --no-reexec ${1+\"[$]@\"}\nfi\n\nif test \"X[$]1\" = X--fallback-echo; then\n  # used as fallback echo\n  shift\n  cat <<EOF\n[$]*\nEOF\n  exit 0\nfi\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nif test -z \"$ECHO\"; then\nif test \"X${echo_test_string+set}\" != Xset; then\n# find a string as large as possible, as long as the shell can cope with it\n  for cmd in 'sed 50q \"[$]0\"' 'sed 20q \"[$]0\"' 'sed 10q \"[$]0\"' 'sed 2q \"[$]0\"' 'echo test'; do\n    # expected sizes: less than 2Kb, 1Kb, 512 bytes, 16 bytes, ...\n    if (echo_test_string=`eval $cmd`) 2>/dev/null &&\n       echo_test_string=`eval $cmd` &&\n       (test \"X$echo_test_string\" = \"X$echo_test_string\") 2>/dev/null\n    then\n      break\n    fi\n  done\nfi\n\nif test \"X`($echo '\\t') 2>/dev/null`\" = 'X\\t' &&\n   echo_testing_string=`($echo \"$echo_test_string\") 2>/dev/null` &&\n   test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n  :\nelse\n  # The Solaris, AIX, and Digital Unix default echo programs unquote\n  # backslashes.  This makes it impossible to quote backslashes using\n  #   echo \"$something\" | sed 's/\\\\/\\\\\\\\/g'\n  #\n  # So, first we look for a working echo in the user's PATH.\n\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n  for dir in $PATH /usr/ucb; do\n    IFS=\"$lt_save_ifs\"\n    if (test -f $dir/echo || test -f $dir/echo$ac_exeext) &&\n       test \"X`($dir/echo '\\t') 2>/dev/null`\" = 'X\\t' &&\n       echo_testing_string=`($dir/echo \"$echo_test_string\") 2>/dev/null` &&\n       test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n      echo=\"$dir/echo\"\n      break\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\n\n  if test \"X$echo\" = Xecho; then\n    # We didn't find a better echo, so look for alternatives.\n    if test \"X`(print -r '\\t') 2>/dev/null`\" = 'X\\t' &&\n       echo_testing_string=`(print -r \"$echo_test_string\") 2>/dev/null` &&\n       test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n      # This shell has a builtin print -r that does the trick.\n      echo='print -r'\n    elif (test -f /bin/ksh || test -f /bin/ksh$ac_exeext) &&\n\t test \"X$CONFIG_SHELL\" != X/bin/ksh; then\n      # If we have ksh, try running configure again with it.\n      ORIGINAL_CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}\n      export ORIGINAL_CONFIG_SHELL\n      CONFIG_SHELL=/bin/ksh\n      export CONFIG_SHELL\n      exec $CONFIG_SHELL \"[$]0\" --no-reexec ${1+\"[$]@\"}\n    else\n      # Try using printf.\n      echo='printf %s\\n'\n      if test \"X`($echo '\\t') 2>/dev/null`\" = 'X\\t' &&\n\t echo_testing_string=`($echo \"$echo_test_string\") 2>/dev/null` &&\n\t test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n\t# Cool, printf works\n\t:\n      elif echo_testing_string=`($ORIGINAL_CONFIG_SHELL \"[$]0\" --fallback-echo '\\t') 2>/dev/null` &&\n\t   test \"X$echo_testing_string\" = 'X\\t' &&\n\t   echo_testing_string=`($ORIGINAL_CONFIG_SHELL \"[$]0\" --fallback-echo \"$echo_test_string\") 2>/dev/null` &&\n\t   test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n\tCONFIG_SHELL=$ORIGINAL_CONFIG_SHELL\n\texport CONFIG_SHELL\n\tSHELL=\"$CONFIG_SHELL\"\n\texport SHELL\n\techo=\"$CONFIG_SHELL [$]0 --fallback-echo\"\n      elif echo_testing_string=`($CONFIG_SHELL \"[$]0\" --fallback-echo '\\t') 2>/dev/null` &&\n\t   test \"X$echo_testing_string\" = 'X\\t' &&\n\t   echo_testing_string=`($CONFIG_SHELL \"[$]0\" --fallback-echo \"$echo_test_string\") 2>/dev/null` &&\n\t   test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n\techo=\"$CONFIG_SHELL [$]0 --fallback-echo\"\n      else\n\t# maybe with a smaller string...\n\tprev=:\n\n\tfor cmd in 'echo test' 'sed 2q \"[$]0\"' 'sed 10q \"[$]0\"' 'sed 20q \"[$]0\"' 'sed 50q \"[$]0\"'; do\n\t  if (test \"X$echo_test_string\" = \"X`eval $cmd`\") 2>/dev/null\n\t  then\n\t    break\n\t  fi\n\t  prev=\"$cmd\"\n\tdone\n\n\tif test \"$prev\" != 'sed 50q \"[$]0\"'; then\n\t  echo_test_string=`eval $prev`\n\t  export echo_test_string\n\t  exec ${ORIGINAL_CONFIG_SHELL-${CONFIG_SHELL-/bin/sh}} \"[$]0\" ${1+\"[$]@\"}\n\telse\n\t  # Oops.  We lost completely, so just stick with echo.\n\t  echo=echo\n\tfi\n      fi\n    fi\n  fi\nfi\nfi\n\n# Copy echo and quote the copy suitably for passing to libtool from\n# the Makefile, instead of quoting the original, which is used later.\nECHO=$echo\nif test \"X$ECHO\" = \"X$CONFIG_SHELL [$]0 --fallback-echo\"; then\n   ECHO=\"$CONFIG_SHELL \\\\\\$\\[$]0 --fallback-echo\"\nfi\n\nAC_SUBST(ECHO)\n])])# _LT_AC_PROG_ECHO_BACKSLASH\n\n\n# _LT_AC_LOCK\n# -----------\nAC_DEFUN([_LT_AC_LOCK],\n[AC_ARG_ENABLE([libtool-lock],\n    [AC_HELP_STRING([--disable-libtool-lock],\n\t[avoid locking (might break parallel builds)])])\ntest \"x$enable_libtool_lock\" != xno && enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.$ac_objext` in\n    *ELF-32*)\n      HPUX_IA64_MODE=\"32\"\n      ;;\n    *ELF-64*)\n      HPUX_IA64_MODE=\"64\"\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out which ABI we are using.\n  echo '[#]line __oline__ \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n   if test \"$lt_cv_prog_gnu_ld\" = yes; then\n    case `/usr/bin/file conftest.$ac_objext` in\n    *32-bit*)\n      LD=\"${LD-ld} -melf32bsmip\"\n      ;;\n    *N32*)\n      LD=\"${LD-ld} -melf32bmipn32\"\n      ;;\n    *64-bit*)\n      LD=\"${LD-ld} -melf64bmip\"\n      ;;\n    esac\n   else\n    case `/usr/bin/file conftest.$ac_objext` in\n    *32-bit*)\n      LD=\"${LD-ld} -32\"\n      ;;\n    *N32*)\n      LD=\"${LD-ld} -n32\"\n      ;;\n    *64-bit*)\n      LD=\"${LD-ld} -64\"\n      ;;\n    esac\n   fi\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*linux*|ppc*-*linux*|powerpc*-*linux*|s390*-*linux*|sparc*-*linux*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n    *32-bit*)\n      case $host in\n        x86_64-*linux*)\n          LD=\"${LD-ld} -m elf_i386\"\n          ;;\n        ppc64-*linux*|powerpc64-*linux*)\n          LD=\"${LD-ld} -m elf32ppclinux\"\n          ;;\n        s390x-*linux*)\n          LD=\"${LD-ld} -m elf_s390\"\n          ;;\n        sparc64-*linux*)\n          LD=\"${LD-ld} -m elf32_sparc\"\n          ;;\n      esac\n      ;;\n    *64-bit*)\n      case $host in\n        x86_64-*linux*)\n          LD=\"${LD-ld} -m elf_x86_64\"\n          ;;\n        ppc*-*linux*|powerpc*-*linux*)\n          LD=\"${LD-ld} -m elf64ppc\"\n          ;;\n        s390*-*linux*)\n          LD=\"${LD-ld} -m elf64_s390\"\n          ;;\n        sparc*-*linux*)\n          LD=\"${LD-ld} -m elf64_sparc\"\n          ;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=\"$CFLAGS\"\n  CFLAGS=\"$CFLAGS -belf\"\n  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n    [AC_LANG_PUSH(C)\n     AC_TRY_LINK([],[],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])\n     AC_LANG_POP])\n  if test x\"$lt_cv_cc_needs_belf\" != x\"yes\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=\"$SAVE_CFLAGS\"\n  fi\n  ;;\nsparc*-*solaris*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n    *64-bit*)\n      case $lt_cv_prog_gnu_ld in\n      yes*) LD=\"${LD-ld} -m elf64_sparc\" ;;\n      *)    LD=\"${LD-ld} -64\" ;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\nAC_PROVIDE_IFELSE([AC_LIBTOOL_WIN32_DLL],\n[*-*-cygwin* | *-*-mingw* | *-*-pw32*)\n  AC_CHECK_TOOL(DLLTOOL, dlltool, false)\n  AC_CHECK_TOOL(AS, as, false)\n  AC_CHECK_TOOL(OBJDUMP, objdump, false)\n  ;;\n  ])\nesac\n\nneed_locks=\"$enable_libtool_lock\"\n\n])# _LT_AC_LOCK\n\n\n# AC_LIBTOOL_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#\t\t[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([AC_LIBTOOL_COMPILER_OPTION],\n[AC_REQUIRE([LT_AC_PROG_SED])\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n  ifelse([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])\n   printf \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$3\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:__oline__: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:__oline__: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $echo \"X$_lt_compiler_boilerplate\" | $Xsed -e '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       $2=yes\n     fi\n   fi\n   $rm conftest*\n])\n\nif test x\"[$]$2\" = xyes; then\n    ifelse([$5], , :, [$5])\nelse\n    ifelse([$6], , :, [$6])\nfi\n])# AC_LIBTOOL_COMPILER_OPTION\n\n\n# AC_LIBTOOL_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#                          [ACTION-SUCCESS], [ACTION-FAILURE])\n# ------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([AC_LIBTOOL_LINKER_OPTION],\n[AC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   save_LDFLAGS=\"$LDFLAGS\"\n   LDFLAGS=\"$LDFLAGS $3\"\n   printf \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&AS_MESSAGE_LOG_FD\n       $echo \"X$_lt_linker_boilerplate\" | $Xsed -e '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         $2=yes\n       fi\n     else\n       $2=yes\n     fi\n   fi\n   $rm conftest*\n   LDFLAGS=\"$save_LDFLAGS\"\n])\n\nif test x\"[$]$2\" = xyes; then\n    ifelse([$4], , :, [$4])\nelse\n    ifelse([$5], , :, [$5])\nfi\n])# AC_LIBTOOL_LINKER_OPTION\n\n\n# AC_LIBTOOL_SYS_MAX_CMD_LEN\n# --------------------------\nAC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN],\n[# find the maximum length of command line arguments\nAC_MSG_CHECKING([the maximum length of command line arguments])\nAC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl\n  i=0\n  teststring=\"ABCD\"\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536\t# usable default for all BSDs\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n\n  interix*)\n    # We know the value 262144 and hardcode it with a safety zone (like BSD)\n    lt_cv_sys_max_cmd_len=196608\n    ;;\n\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    #\n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  sco3.2v5*)\n    lt_cv_sys_max_cmd_len=102400\n    ;;\n  sysv5* | sco5v6* | sysv4.2uw2*)\n    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`\n    if test -n \"$kargmax\"; then\n      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[ \t]]//'`\n    else\n      lt_cv_sys_max_cmd_len=32768\n    fi\n    ;;\n  *)\n    # If test is not a shell built-in, we'll probably end up computing a\n    # maximum length that is only half of the actual maximum length, but\n    # we can't tell.\n    SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n    while (test \"X\"`$SHELL [$]0 --fallback-echo \"X$teststring\" 2>/dev/null` \\\n\t       = \"XX$teststring\") >/dev/null 2>&1 &&\n\t    new_result=`expr \"X$teststring\" : \".*\" 2>&1` &&\n\t    lt_cv_sys_max_cmd_len=$new_result &&\n\t    test $i != 17 # 1/2 MB should be enough\n    do\n      i=`expr $i + 1`\n      teststring=$teststring$teststring\n    done\n    teststring=\n    # Add a significant safety factor because C++ compilers can tack on massive\n    # amounts of additional arguments before passing them to the linker.\n    # It appears as though 1/2 is a usable value.\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    ;;\n  esac\n])\nif test -n $lt_cv_sys_max_cmd_len ; then\n  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)\nelse\n  AC_MSG_RESULT(none)\nfi\n])# AC_LIBTOOL_SYS_MAX_CMD_LEN\n\n\n# _LT_AC_CHECK_DLFCN\n# ------------------\nAC_DEFUN([_LT_AC_CHECK_DLFCN],\n[AC_CHECK_HEADERS(dlfcn.h)dnl\n])# _LT_AC_CHECK_DLFCN\n\n\n# _LT_AC_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,\n#                           ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)\n# ---------------------------------------------------------------------\nAC_DEFUN([_LT_AC_TRY_DLOPEN_SELF],\n[AC_REQUIRE([_LT_AC_CHECK_DLFCN])dnl\nif test \"$cross_compiling\" = yes; then :\n  [$4]\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<EOF\n[#line __oline__ \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n#ifdef __cplusplus\nextern \"C\" void exit (int);\n#endif\n\nvoid fnord() { int i=42;}\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else if (dlsym( self,\"_fnord\")) status = $lt_dlneed_uscore;\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n    exit (status);\n}]\nEOF\n  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext} 2>/dev/null; then\n    (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) $1 ;;\n      x$lt_dlneed_uscore) $2 ;;\n      x$lt_dlunknown|x*) $3 ;;\n    esac\n  else :\n    # compilation failed\n    $3\n  fi\nfi\nrm -fr conftest*\n])# _LT_AC_TRY_DLOPEN_SELF\n\n\n# AC_LIBTOOL_DLOPEN_SELF\n# ----------------------\nAC_DEFUN([AC_LIBTOOL_DLOPEN_SELF],\n[AC_REQUIRE([_LT_AC_CHECK_DLFCN])dnl\nif test \"x$enable_dlopen\" != xyes; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=\"load_add_on\"\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32*)\n    lt_cv_dlopen=\"LoadLibrary\"\n    lt_cv_dlopen_libs=\n   ;;\n\n  cygwin*)\n    lt_cv_dlopen=\"dlopen\"\n    lt_cv_dlopen_libs=\n   ;;\n\n  darwin*)\n  # if libdl is installed we need to link against it\n    AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"],[\n    lt_cv_dlopen=\"dyld\"\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ])\n   ;;\n\n  *)\n    AC_CHECK_FUNC([shl_load],\n\t  [lt_cv_dlopen=\"shl_load\"],\n      [AC_CHECK_LIB([dld], [shl_load],\n\t    [lt_cv_dlopen=\"shl_load\" lt_cv_dlopen_libs=\"-dld\"],\n\t[AC_CHECK_FUNC([dlopen],\n\t      [lt_cv_dlopen=\"dlopen\"],\n\t  [AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"],\n\t    [AC_CHECK_LIB([svld], [dlopen],\n\t\t  [lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-lsvld\"],\n\t      [AC_CHECK_LIB([dld], [dld_link],\n\t\t    [lt_cv_dlopen=\"dld_link\" lt_cv_dlopen_libs=\"-dld\"])\n\t      ])\n\t    ])\n\t  ])\n\t])\n      ])\n    ;;\n  esac\n\n  if test \"x$lt_cv_dlopen\" != xno; then\n    enable_dlopen=yes\n  else\n    enable_dlopen=no\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=\"$CPPFLAGS\"\n    test \"x$ac_cv_header_dlfcn_h\" = xyes && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=\"$LDFLAGS\"\n    wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=\"$LIBS\"\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    AC_CACHE_CHECK([whether a program can dlopen itself],\n\t  lt_cv_dlopen_self, [dnl\n\t  _LT_AC_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,\n\t    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)\n    ])\n\n    if test \"x$lt_cv_dlopen_self\" = xyes; then\n      wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $lt_prog_compiler_static\\\"\n      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],\n    \t  lt_cv_dlopen_self_static, [dnl\n\t  _LT_AC_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,\n\t    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)\n      ])\n    fi\n\n    CPPFLAGS=\"$save_CPPFLAGS\"\n    LDFLAGS=\"$save_LDFLAGS\"\n    LIBS=\"$save_LIBS\"\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n])# AC_LIBTOOL_DLOPEN_SELF\n\n\n# AC_LIBTOOL_PROG_CC_C_O([TAGNAME])\n# ---------------------------------\n# Check to see if options -c and -o are simultaneously supported by compiler\nAC_DEFUN([AC_LIBTOOL_PROG_CC_C_O],\n[AC_REQUIRE([_LT_AC_SYS_COMPILER])dnl\nAC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],\n  [_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)],\n  [_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no\n   $rm -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   printf \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:__oline__: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:__oline__: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $echo \"X$_lt_compiler_boilerplate\" | $Xsed -e '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       _LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n     fi\n   fi\n   chmod u+w . 2>&AS_MESSAGE_LOG_FD\n   $rm conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $rm out/ii_files/* && rmdir out/ii_files\n   $rm out/* && rmdir out\n   cd ..\n   rmdir conftest\n   $rm conftest*\n])\n])# AC_LIBTOOL_PROG_CC_C_O\n\n\n# AC_LIBTOOL_SYS_HARD_LINK_LOCKS([TAGNAME])\n# -----------------------------------------\n# Check to see if we can do hard links to lock some files if needed\nAC_DEFUN([AC_LIBTOOL_SYS_HARD_LINK_LOCKS],\n[AC_REQUIRE([_LT_AC_LOCK])dnl\n\nhard_links=\"nottested\"\nif test \"$_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)\" = no && test \"$need_locks\" != no; then\n  # do not overwrite the value of need_locks provided by the user\n  AC_MSG_CHECKING([if we can lock with hard links])\n  hard_links=yes\n  $rm conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  AC_MSG_RESULT([$hard_links])\n  if test \"$hard_links\" = no; then\n    AC_MSG_WARN([`$CC' does not support `-c -o', so `make -j' may be unsafe])\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n])# AC_LIBTOOL_SYS_HARD_LINK_LOCKS\n\n\n# AC_LIBTOOL_OBJDIR\n# -----------------\nAC_DEFUN([AC_LIBTOOL_OBJDIR],\n[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],\n[rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null])\nobjdir=$lt_cv_objdir\n])# AC_LIBTOOL_OBJDIR\n\n\n# AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH([TAGNAME])\n# ----------------------------------------------\n# Check hardcoding attributes.\nAC_DEFUN([AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH],\n[AC_MSG_CHECKING([how to hardcode library paths into programs])\n_LT_AC_TAGVAR(hardcode_action, $1)=\nif test -n \"$_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)\" || \\\n   test -n \"$_LT_AC_TAGVAR(runpath_var, $1)\" || \\\n   test \"X$_LT_AC_TAGVAR(hardcode_automatic, $1)\" = \"Xyes\" ; then\n\n  # We can hardcode non-existant directories.\n  if test \"$_LT_AC_TAGVAR(hardcode_direct, $1)\" != no &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test \"$_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)\" != no &&\n     test \"$_LT_AC_TAGVAR(hardcode_minus_L, $1)\" != no; then\n    # Linking always hardcodes the temporary library directory.\n    _LT_AC_TAGVAR(hardcode_action, $1)=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    _LT_AC_TAGVAR(hardcode_action, $1)=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  _LT_AC_TAGVAR(hardcode_action, $1)=unsupported\nfi\nAC_MSG_RESULT([$_LT_AC_TAGVAR(hardcode_action, $1)])\n\nif test \"$_LT_AC_TAGVAR(hardcode_action, $1)\" = relink; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test \"$shlibpath_overrides_runpath\" = yes ||\n     test \"$enable_shared\" = no; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n])# AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH\n\n\n# AC_LIBTOOL_SYS_LIB_STRIP\n# ------------------------\nAC_DEFUN([AC_LIBTOOL_SYS_LIB_STRIP],\n[striplib=\nold_striplib=\nAC_MSG_CHECKING([whether stripping libraries is possible])\nif test -n \"$STRIP\" && $STRIP -V 2>&1 | grep \"GNU strip\" >/dev/null; then\n  test -z \"$old_striplib\" && old_striplib=\"$STRIP --strip-debug\"\n  test -z \"$striplib\" && striplib=\"$STRIP --strip-unneeded\"\n  AC_MSG_RESULT([yes])\nelse\n# FIXME - insert some real tests, host_os isn't really good enough\n  case $host_os in\n   darwin*)\n       if test -n \"$STRIP\" ; then\n         striplib=\"$STRIP -x\"\n         AC_MSG_RESULT([yes])\n       else\n  AC_MSG_RESULT([no])\nfi\n       ;;\n   *)\n  AC_MSG_RESULT([no])\n    ;;\n  esac\nfi\n])# AC_LIBTOOL_SYS_LIB_STRIP\n\n\n# AC_LIBTOOL_SYS_DYNAMIC_LINKER\n# -----------------------------\n# PORTME Fill in your ld.so characteristics\nAC_DEFUN([AC_LIBTOOL_SYS_DYNAMIC_LINKER],\n[AC_MSG_CHECKING([dynamic linker characteristics])\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=\".so\"\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nif test \"$GCC\" = yes; then\n  sys_lib_search_path_spec=`$CC -print-search-dirs | grep \"^libraries:\" | $SED -e \"s/^libraries://\" -e \"s,=/,/,g\"`\n  if echo \"$sys_lib_search_path_spec\" | grep ';' >/dev/null ; then\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    sys_lib_search_path_spec=`echo \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n  else\n    sys_lib_search_path_spec=`echo \"$sys_lib_search_path_spec\" | $SED  -e \"s/$PATH_SEPARATOR/ /g\"`\n  fi\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\ncase $host_os in\naix3*)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='${libname}${release}${shared_ext}$major'\n  ;;\n\naix4* | aix5*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test \"$host_cpu\" = ia64; then\n    # AIX 5 supports IA64\n    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line `#! .'.  This would cause the generated library to\n    # depend on `.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[[01]] | aix4.[[01]].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | ${CC} -E - | grep yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    if test \"$aix_use_runtimelinking\" = yes; then\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    else\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='${libname}${release}.a $libname.a'\n      soname_spec='${libname}${release}${shared_ext}$major'\n    fi\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  library_names_spec='$libname.ixlibrary $libname.a'\n  # Create ${libname}_ixlibrary.a entries in /sys/libs.\n  finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`$echo \"X$lib\" | $Xsed -e '\\''s%^.*/\\([[^/]]*\\)\\.ixlibrary$%\\1%'\\''`; test $rm /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n  ;;\n\nbeos*)\n  library_names_spec='${libname}${shared_ext}'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[[45]]*)\n  version_type=linux\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32*)\n  version_type=windows\n  shrext_cmds=\".dll\"\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$host_os in\n  yes,cygwin* | yes,mingw* | yes,pw32*)\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\${file}`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\${base_file}'\\''i;echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $rm \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      sys_lib_search_path_spec=\"/usr/lib /lib/w32api /lib /usr/local/lib\"\n      ;;\n    mingw*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      sys_lib_search_path_spec=`$CC -print-search-dirs | grep \"^libraries:\" | $SED -e \"s/^libraries://\" -e \"s,=/,/,g\"`\n      if echo \"$sys_lib_search_path_spec\" | [grep ';[c-zC-Z]:/' >/dev/null]; then\n        # It is most probably a Windows format PATH printed by\n        # mingw gcc, but we are running on Cygwin. Gcc prints its search\n        # path with ; separators, and with drive letters. We can handle the\n        # drive letters (cygwin fileutils understands them), so leave them,\n        # especially as we might pass files found there to a mingw objdump,\n        # which wouldn't understand a cygwinified path. Ahh.\n        sys_lib_search_path_spec=`echo \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`echo \"$sys_lib_search_path_spec\" | $SED  -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      ;;\n    esac\n    ;;\n\n  *)\n    library_names_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext} $libname.lib'\n    ;;\n  esac\n  dynamic_linker='Win32 ld.exe'\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${versuffix}$shared_ext ${libname}${release}${major}$shared_ext ${libname}$shared_ext'\n  soname_spec='${libname}${release}${major}$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\n  # Apple's gcc prints 'gcc -print-search-dirs' doesn't operate the same.\n  if test \"$GCC\" = yes; then\n    sys_lib_search_path_spec=`$CC -print-search-dirs | tr \"\\n\" \"$PATH_SEPARATOR\" | sed -e 's/libraries:/@libraries:/' | tr \"@\" \"\\n\" | grep \"^libraries:\" | sed -e \"s/^libraries://\" -e \"s,=/,/,g\" -e \"s,$PATH_SEPARATOR, ,g\" -e \"s,.*,& /lib /usr/lib /usr/local/lib,g\"`\n  else\n    sys_lib_search_path_spec='/lib /usr/lib /usr/local/lib'\n  fi\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd1*)\n  dynamic_linker=no\n  ;;\n\nkfreebsd*-gnu)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='GNU ld.so'\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[[123]]*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[[01]]* | freebsdelf3.[[01]]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[[2-9]]* | freebsdelf3.[[2-9]]* | \\\n  freebsd4.[[0-5]] | freebsdelf4.[[0-5]] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  freebsd*) # from 4.6 on\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\ngnu*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    if test \"X$HPUX_IA64_MODE\" = X32; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n    fi\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n   hppa*64*)\n     shrext_cmds='.sl'\n     hardcode_into_libs=yes\n     dynamic_linker=\"$host_os dld.sl\"\n     shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n     shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n     library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n     soname_spec='${libname}${release}${shared_ext}$major'\n     sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n     sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n     ;;\n   *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555.\n  postinstall_cmds='chmod 555 $lib'\n  ;;\n\ninterix3*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test \"$lt_cv_prog_gnu_ld\" = yes; then\n\t\tversion_type=linux\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib${libsuff} /lib${libsuff}\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\n# This must be Linux ELF.\nlinux*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Append ld.so.conf contents to the search path\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nknetbsd*-gnu)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='GNU ld.so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nnto-qnx*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nopenbsd*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=\"/usr/lib\"\n  need_lib_prefix=no\n  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.\n  case $host_os in\n    openbsd3.3 | openbsd3.3.*) need_version=yes ;;\n    *)                         need_version=no  ;;\n  esac\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n    case $host_os in\n      openbsd2.[[89]] | openbsd2.[[89]].*)\n\tshlibpath_overrides_runpath=no\n\t;;\n      *)\n\tshlibpath_overrides_runpath=yes\n\t;;\n      esac\n  else\n    shlibpath_overrides_runpath=yes\n  fi\n  ;;\n\nos2*)\n  libname_spec='$name'\n  shrext_cmds=\".dll\"\n  need_lib_prefix=no\n  library_names_spec='$libname${shared_ext} $libname.a'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=LIBPATH\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=\"$sys_lib_search_path_spec\"\n  ;;\n\nsolaris*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test \"$with_gnu_ld\" = yes; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      export_dynamic_flag_spec='${wl}-Blargedynsym'\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec ;then\n    version_type=linux\n    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'\n    soname_spec='$libname${shared_ext}.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=freebsd-elf\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  hardcode_into_libs=yes\n  if test \"$with_gnu_ld\" = yes; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n    shlibpath_overrides_runpath=no\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    shlibpath_overrides_runpath=yes\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\nuts4*)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\nAC_MSG_RESULT([$dynamic_linker])\ntest \"$dynamic_linker\" = no && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test \"$GCC\" = yes; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n])# AC_LIBTOOL_SYS_DYNAMIC_LINKER\n\n\n# _LT_AC_TAGCONFIG\n# ----------------\nAC_DEFUN([_LT_AC_TAGCONFIG],\n[AC_ARG_WITH([tags],\n    [AC_HELP_STRING([--with-tags@<:@=TAGS@:>@],\n        [include additional configurations @<:@automatic@:>@])],\n    [tagnames=\"$withval\"])\n\nif test -f \"$ltmain\" && test -n \"$tagnames\"; then\n  if test ! -f \"${ofile}\"; then\n    AC_MSG_WARN([output file `$ofile' does not exist])\n  fi\n\n  if test -z \"$LTCC\"; then\n    eval \"`$SHELL ${ofile} --config | grep '^LTCC='`\"\n    if test -z \"$LTCC\"; then\n      AC_MSG_WARN([output file `$ofile' does not look like a libtool script])\n    else\n      AC_MSG_WARN([using `LTCC=$LTCC', extracted from `$ofile'])\n    fi\n  fi\n  if test -z \"$LTCFLAGS\"; then\n    eval \"`$SHELL ${ofile} --config | grep '^LTCFLAGS='`\"\n  fi\n\n  # Extract list of available tagged configurations in $ofile.\n  # Note that this assumes the entire list is on one line.\n  available_tags=`grep \"^available_tags=\" \"${ofile}\" | $SED -e 's/available_tags=\\(.*$\\)/\\1/' -e 's/\\\"//g'`\n\n  lt_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR,\"\n  for tagname in $tagnames; do\n    IFS=\"$lt_save_ifs\"\n    # Check whether tagname contains only valid characters\n    case `$echo \"X$tagname\" | $Xsed -e 's:[[-_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890,/]]::g'` in\n    \"\") ;;\n    *)  AC_MSG_ERROR([invalid tag name: $tagname])\n\t;;\n    esac\n\n    if grep \"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname$\" < \"${ofile}\" > /dev/null\n    then\n      AC_MSG_ERROR([tag name \\\"$tagname\\\" already exists])\n    fi\n\n    # Update the list of available tags.\n    if test -n \"$tagname\"; then\n      echo appending configuration tag \\\"$tagname\\\" to $ofile\n\n      case $tagname in\n      CXX)\n\tif test -n \"$CXX\" && ( test \"X$CXX\" != \"Xno\" &&\n\t    ( (test \"X$CXX\" = \"Xg++\" && `g++ -v >/dev/null 2>&1` ) ||\n\t    (test \"X$CXX\" != \"Xg++\"))) ; then\n\t  AC_LIBTOOL_LANG_CXX_CONFIG\n\telse\n\t  tagname=\"\"\n\tfi\n\t;;\n\n      F77)\n\tif test -n \"$F77\" && test \"X$F77\" != \"Xno\"; then\n\t  AC_LIBTOOL_LANG_F77_CONFIG\n\telse\n\t  tagname=\"\"\n\tfi\n\t;;\n\n      GCJ)\n\tif test -n \"$GCJ\" && test \"X$GCJ\" != \"Xno\"; then\n\t  AC_LIBTOOL_LANG_GCJ_CONFIG\n\telse\n\t  tagname=\"\"\n\tfi\n\t;;\n\n      RC)\n\tAC_LIBTOOL_LANG_RC_CONFIG\n\t;;\n\n      *)\n\tAC_MSG_ERROR([Unsupported tag name: $tagname])\n\t;;\n      esac\n\n      # Append the new tag name to the list of available tags.\n      if test -n \"$tagname\" ; then\n      available_tags=\"$available_tags $tagname\"\n    fi\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\n\n  # Now substitute the updated list of available tags.\n  if eval \"sed -e 's/^available_tags=.*\\$/available_tags=\\\"$available_tags\\\"/' \\\"$ofile\\\" > \\\"${ofile}T\\\"\"; then\n    mv \"${ofile}T\" \"$ofile\"\n    chmod +x \"$ofile\"\n  else\n    rm -f \"${ofile}T\"\n    AC_MSG_ERROR([unable to update list of available tagged configurations.])\n  fi\nfi\n])# _LT_AC_TAGCONFIG\n\n\n# AC_LIBTOOL_DLOPEN\n# -----------------\n# enable checks for dlopen support\nAC_DEFUN([AC_LIBTOOL_DLOPEN],\n [AC_BEFORE([$0],[AC_LIBTOOL_SETUP])\n])# AC_LIBTOOL_DLOPEN\n\n\n# AC_LIBTOOL_WIN32_DLL\n# --------------------\n# declare package support for building win32 DLLs\nAC_DEFUN([AC_LIBTOOL_WIN32_DLL],\n[AC_BEFORE([$0], [AC_LIBTOOL_SETUP])\n])# AC_LIBTOOL_WIN32_DLL\n\n\n# AC_ENABLE_SHARED([DEFAULT])\n# ---------------------------\n# implement the --enable-shared flag\n# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.\nAC_DEFUN([AC_ENABLE_SHARED],\n[define([AC_ENABLE_SHARED_DEFAULT], ifelse($1, no, no, yes))dnl\nAC_ARG_ENABLE([shared],\n    [AC_HELP_STRING([--enable-shared@<:@=PKGS@:>@],\n\t[build shared libraries @<:@default=]AC_ENABLE_SHARED_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_shared=yes ;;\n    no) enable_shared=no ;;\n    *)\n      enable_shared=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR,\"\n      for pkg in $enableval; do\n\tIFS=\"$lt_save_ifs\"\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_shared=yes\n\tfi\n      done\n      IFS=\"$lt_save_ifs\"\n      ;;\n    esac],\n    [enable_shared=]AC_ENABLE_SHARED_DEFAULT)\n])# AC_ENABLE_SHARED\n\n\n# AC_DISABLE_SHARED\n# -----------------\n# set the default shared flag to --disable-shared\nAC_DEFUN([AC_DISABLE_SHARED],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\nAC_ENABLE_SHARED(no)\n])# AC_DISABLE_SHARED\n\n\n# AC_ENABLE_STATIC([DEFAULT])\n# ---------------------------\n# implement the --enable-static flag\n# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.\nAC_DEFUN([AC_ENABLE_STATIC],\n[define([AC_ENABLE_STATIC_DEFAULT], ifelse($1, no, no, yes))dnl\nAC_ARG_ENABLE([static],\n    [AC_HELP_STRING([--enable-static@<:@=PKGS@:>@],\n\t[build static libraries @<:@default=]AC_ENABLE_STATIC_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_static=yes ;;\n    no) enable_static=no ;;\n    *)\n     enable_static=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR,\"\n      for pkg in $enableval; do\n\tIFS=\"$lt_save_ifs\"\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_static=yes\n\tfi\n      done\n      IFS=\"$lt_save_ifs\"\n      ;;\n    esac],\n    [enable_static=]AC_ENABLE_STATIC_DEFAULT)\n])# AC_ENABLE_STATIC\n\n\n# AC_DISABLE_STATIC\n# -----------------\n# set the default static flag to --disable-static\nAC_DEFUN([AC_DISABLE_STATIC],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\nAC_ENABLE_STATIC(no)\n])# AC_DISABLE_STATIC\n\n\n# AC_ENABLE_FAST_INSTALL([DEFAULT])\n# ---------------------------------\n# implement the --enable-fast-install flag\n# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.\nAC_DEFUN([AC_ENABLE_FAST_INSTALL],\n[define([AC_ENABLE_FAST_INSTALL_DEFAULT], ifelse($1, no, no, yes))dnl\nAC_ARG_ENABLE([fast-install],\n    [AC_HELP_STRING([--enable-fast-install@<:@=PKGS@:>@],\n    [optimize for fast installation @<:@default=]AC_ENABLE_FAST_INSTALL_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_fast_install=yes ;;\n    no) enable_fast_install=no ;;\n    *)\n      enable_fast_install=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR,\"\n      for pkg in $enableval; do\n\tIFS=\"$lt_save_ifs\"\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_fast_install=yes\n\tfi\n      done\n      IFS=\"$lt_save_ifs\"\n      ;;\n    esac],\n    [enable_fast_install=]AC_ENABLE_FAST_INSTALL_DEFAULT)\n])# AC_ENABLE_FAST_INSTALL\n\n\n# AC_DISABLE_FAST_INSTALL\n# -----------------------\n# set the default to --disable-fast-install\nAC_DEFUN([AC_DISABLE_FAST_INSTALL],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\nAC_ENABLE_FAST_INSTALL(no)\n])# AC_DISABLE_FAST_INSTALL\n\n\n# AC_LIBTOOL_PICMODE([MODE])\n# --------------------------\n# implement the --with-pic flag\n# MODE is either `yes' or `no'.  If omitted, it defaults to `both'.\nAC_DEFUN([AC_LIBTOOL_PICMODE],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\npic_mode=ifelse($#,1,$1,default)\n])# AC_LIBTOOL_PICMODE\n\n\n# AC_PROG_EGREP\n# -------------\n# This is predefined starting with Autoconf 2.54, so this conditional\n# definition can be removed once we require Autoconf 2.54 or later.\nm4_ifndef([AC_PROG_EGREP], [AC_DEFUN([AC_PROG_EGREP],\n[AC_CACHE_CHECK([for egrep], [ac_cv_prog_egrep],\n   [if echo a | (grep -E '(a|b)') >/dev/null 2>&1\n    then ac_cv_prog_egrep='grep -E'\n    else ac_cv_prog_egrep='egrep'\n    fi])\n EGREP=$ac_cv_prog_egrep\n AC_SUBST([EGREP])\n])])\n\n\n# AC_PATH_TOOL_PREFIX\n# -------------------\n# find a file program which can recognise shared library\nAC_DEFUN([AC_PATH_TOOL_PREFIX],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_MSG_CHECKING([for $1])\nAC_CACHE_VAL(lt_cv_path_MAGIC_CMD,\n[case $MAGIC_CMD in\n[[\\\\/*] |  ?:[\\\\/]*])\n  lt_cv_path_MAGIC_CMD=\"$MAGIC_CMD\" # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=\"$MAGIC_CMD\"\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\ndnl $ac_dummy forces splitting on constant user-supplied paths.\ndnl POSIX.2 word splitting is done only on the output of word expansions,\ndnl not every word.  This closes a longstanding sh security hole.\n  ac_dummy=\"ifelse([$2], , $PATH, [$2])\"\n  for ac_dir in $ac_dummy; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f $ac_dir/$1; then\n      lt_cv_path_MAGIC_CMD=\"$ac_dir/$1\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=\"$lt_cv_path_MAGIC_CMD\"\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\nEOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\n  MAGIC_CMD=\"$lt_save_MAGIC_CMD\"\n  ;;\nesac])\nMAGIC_CMD=\"$lt_cv_path_MAGIC_CMD\"\nif test -n \"$MAGIC_CMD\"; then\n  AC_MSG_RESULT($MAGIC_CMD)\nelse\n  AC_MSG_RESULT(no)\nfi\n])# AC_PATH_TOOL_PREFIX\n\n\n# AC_PATH_MAGIC\n# -------------\n# find a file program which can recognise a shared library\nAC_DEFUN([AC_PATH_MAGIC],\n[AC_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    AC_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)\n  else\n    MAGIC_CMD=:\n  fi\nfi\n])# AC_PATH_MAGIC\n\n\n# AC_PROG_LD\n# ----------\n# find the pathname to the GNU or non-GNU linker\nAC_DEFUN([AC_PROG_LD],\n[AC_ARG_WITH([gnu-ld],\n    [AC_HELP_STRING([--with-gnu-ld],\n\t[assume the C compiler uses GNU ld @<:@default=no@:>@])],\n    [test \"$withval\" = no || with_gnu_ld=yes],\n    [with_gnu_ld=no])\nAC_REQUIRE([LT_AC_PROG_SED])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nac_prog=ld\nif test \"$GCC\" = yes; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  AC_MSG_CHECKING([for ld used by $CC])\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [[\\\\/]]* | ?:[[\\\\/]]*)\n      re_direlt='/[[^/]][[^/]]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`echo $ac_prog| $SED 's%\\\\\\\\%/%g'`\n      while echo $ac_prog | grep \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`echo $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=\"$ac_prog\"\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test \"$with_gnu_ld\" = yes; then\n  AC_MSG_CHECKING([for GNU ld])\nelse\n  AC_MSG_CHECKING([for non-GNU ld])\nfi\nAC_CACHE_VAL(lt_cv_path_LD,\n[if test -z \"$LD\"; then\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=\"$ac_dir/$ac_prog\"\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest \"$with_gnu_ld\" != no && break\n\t;;\n      *)\n\ttest \"$with_gnu_ld\" != yes && break\n\t;;\n      esac\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\nelse\n  lt_cv_path_LD=\"$LD\" # Let the user override the test with a path.\nfi])\nLD=\"$lt_cv_path_LD\"\nif test -n \"$LD\"; then\n  AC_MSG_RESULT($LD)\nelse\n  AC_MSG_RESULT(no)\nfi\ntest -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\nAC_PROG_LD_GNU\n])# AC_PROG_LD\n\n\n# AC_PROG_LD_GNU\n# --------------\nAC_DEFUN([AC_PROG_LD_GNU],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,\n[# I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac])\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n])# AC_PROG_LD_GNU\n\n\n# AC_PROG_LD_RELOAD_FLAG\n# ----------------------\n# find reload flag for linker\n#   -- PORTME Some linkers may need a different reload flag.\nAC_DEFUN([AC_PROG_LD_RELOAD_FLAG],\n[AC_CACHE_CHECK([for $LD option to reload object files],\n  lt_cv_ld_reload_flag,\n  [lt_cv_ld_reload_flag='-r'])\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  darwin*)\n    if test \"$GCC\" = yes; then\n      reload_cmds='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n])# AC_PROG_LD_RELOAD_FLAG\n\n\n# AC_DEPLIBS_CHECK_METHOD\n# -----------------------\n# how to check for library dependencies\n#  -- PORTME fill in with the dynamic library characteristics\nAC_DEFUN([AC_DEPLIBS_CHECK_METHOD],\n[AC_CACHE_CHECK([how to recognise dependent libraries],\nlt_cv_deplibs_check_method,\n[lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# `unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# which responds to the $file_magic_cmd with a given extended regex.\n# If you have `file' or equivalent on your system and you're not sure\n# whether `pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix4* | aix5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[[45]]*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump'.\n  lt_cv_deplibs_check_method='file_magic file format pei*-i386(.*architecture: i386)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | kfreebsd*-gnu | dragonfly*)\n  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\ngnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case $host_cpu in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - PA-RISC [0-9].[0-9]']\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]].[[0-9]]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\ninterix3*)\n  # PIC code is broken on Interix 3.x, that's why |\\.a not |_pic\\.a here\n  lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|\\.a)$'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be Linux ELF.\nlinux*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd*)\n  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\nnto-qnx*)\n  lt_cv_deplibs_check_method=unknown\n  ;;\n\nopenbsd*)\n  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.3*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  pc)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n])\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n])# AC_DEPLIBS_CHECK_METHOD\n\n\n# AC_PROG_NM\n# ----------\n# find the pathname to a BSD-compatible name lister\nAC_DEFUN([AC_PROG_NM],\n[AC_CACHE_CHECK([for BSD-compatible nm], lt_cv_path_NM,\n[if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=\"$NM\"\nelse\n  lt_nm_to_check=\"${ac_tool_prefix}nm\"\n  if test -n \"$ac_tool_prefix\" && test \"$build\" = \"$host\"; then \n    lt_nm_to_check=\"$lt_nm_to_check nm\"\n  fi\n  for lt_tmp_nm in $lt_nm_to_check; do\n    lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do\n      IFS=\"$lt_save_ifs\"\n      test -z \"$ac_dir\" && ac_dir=.\n      tmp_nm=\"$ac_dir/$lt_tmp_nm\"\n      if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\" ; then\n\t# Check to see if the nm accepts a BSD-compat flag.\n\t# Adding the `sed 1q' prevents false positives on HP-UX, which says:\n\t#   nm: unknown option \"B\" ignored\n\t# Tru64's nm complains that /dev/null is an invalid object file\n\tcase `\"$tmp_nm\" -B /dev/null 2>&1 | sed '1q'` in\n\t*/dev/null* | *'Invalid file or object type'*)\n\t  lt_cv_path_NM=\"$tmp_nm -B\"\n\t  break\n\t  ;;\n\t*)\n\t  case `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t  */dev/null*)\n\t    lt_cv_path_NM=\"$tmp_nm -p\"\n\t    break\n\t    ;;\n\t  *)\n\t    lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t    continue # so that we can try to find one that supports BSD flags\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n      fi\n    done\n    IFS=\"$lt_save_ifs\"\n  done\n  test -z \"$lt_cv_path_NM\" && lt_cv_path_NM=nm\nfi])\nNM=\"$lt_cv_path_NM\"\n])# AC_PROG_NM\n\n\n# AC_CHECK_LIBM\n# -------------\n# check for math library\nAC_DEFUN([AC_CHECK_LIBM],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nLIBM=\ncase $host in\n*-*-beos* | *-*-cygwin* | *-*-pw32* | *-*-darwin*)\n  # These system don't have libm, or don't need it\n  ;;\n*-ncr-sysv4.3*)\n  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=\"-lmw\")\n  AC_CHECK_LIB(m, cos, LIBM=\"$LIBM -lm\")\n  ;;\n*)\n  AC_CHECK_LIB(m, cos, LIBM=\"-lm\")\n  ;;\nesac\n])# AC_CHECK_LIBM\n\n\n# AC_LIBLTDL_CONVENIENCE([DIRECTORY])\n# -----------------------------------\n# sets LIBLTDL to the link flags for the libltdl convenience library and\n# LTDLINCL to the include flags for the libltdl header and adds\n# --enable-ltdl-convenience to the configure arguments.  Note that\n# AC_CONFIG_SUBDIRS is not called here.  If DIRECTORY is not provided,\n# it is assumed to be `libltdl'.  LIBLTDL will be prefixed with\n# '${top_builddir}/' and LTDLINCL will be prefixed with '${top_srcdir}/'\n# (note the single quotes!).  If your package is not flat and you're not\n# using automake, define top_builddir and top_srcdir appropriately in\n# the Makefiles.\nAC_DEFUN([AC_LIBLTDL_CONVENIENCE],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\n  case $enable_ltdl_convenience in\n  no) AC_MSG_ERROR([this package needs a convenience libltdl]) ;;\n  \"\") enable_ltdl_convenience=yes\n      ac_configure_args=\"$ac_configure_args --enable-ltdl-convenience\" ;;\n  esac\n  LIBLTDL='${top_builddir}/'ifelse($#,1,[$1],['libltdl'])/libltdlc.la\n  LTDLINCL='-I${top_srcdir}/'ifelse($#,1,[$1],['libltdl'])\n  # For backwards non-gettext consistent compatibility...\n  INCLTDL=\"$LTDLINCL\"\n])# AC_LIBLTDL_CONVENIENCE\n\n\n# AC_LIBLTDL_INSTALLABLE([DIRECTORY])\n# -----------------------------------\n# sets LIBLTDL to the link flags for the libltdl installable library and\n# LTDLINCL to the include flags for the libltdl header and adds\n# --enable-ltdl-install to the configure arguments.  Note that\n# AC_CONFIG_SUBDIRS is not called here.  If DIRECTORY is not provided,\n# and an installed libltdl is not found, it is assumed to be `libltdl'.\n# LIBLTDL will be prefixed with '${top_builddir}/'# and LTDLINCL with\n# '${top_srcdir}/' (note the single quotes!).  If your package is not\n# flat and you're not using automake, define top_builddir and top_srcdir\n# appropriately in the Makefiles.\n# In the future, this macro may have to be called after AC_PROG_LIBTOOL.\nAC_DEFUN([AC_LIBLTDL_INSTALLABLE],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\n  AC_CHECK_LIB(ltdl, lt_dlinit,\n  [test x\"$enable_ltdl_install\" != xyes && enable_ltdl_install=no],\n  [if test x\"$enable_ltdl_install\" = xno; then\n     AC_MSG_WARN([libltdl not installed, but installation disabled])\n   else\n     enable_ltdl_install=yes\n   fi\n  ])\n  if test x\"$enable_ltdl_install\" = x\"yes\"; then\n    ac_configure_args=\"$ac_configure_args --enable-ltdl-install\"\n    LIBLTDL='${top_builddir}/'ifelse($#,1,[$1],['libltdl'])/libltdl.la\n    LTDLINCL='-I${top_srcdir}/'ifelse($#,1,[$1],['libltdl'])\n  else\n    ac_configure_args=\"$ac_configure_args --enable-ltdl-install=no\"\n    LIBLTDL=\"-lltdl\"\n    LTDLINCL=\n  fi\n  # For backwards non-gettext consistent compatibility...\n  INCLTDL=\"$LTDLINCL\"\n])# AC_LIBLTDL_INSTALLABLE\n\n\n# AC_LIBTOOL_CXX\n# --------------\n# enable support for C++ libraries\nAC_DEFUN([AC_LIBTOOL_CXX],\n[AC_REQUIRE([_LT_AC_LANG_CXX])\n])# AC_LIBTOOL_CXX\n\n\n# _LT_AC_LANG_CXX\n# ---------------\nAC_DEFUN([_LT_AC_LANG_CXX],\n[AC_REQUIRE([AC_PROG_CXX])\nAC_REQUIRE([_LT_AC_PROG_CXXCPP])\n_LT_AC_SHELL_INIT([tagnames=${tagnames+${tagnames},}CXX])\n])# _LT_AC_LANG_CXX\n\n# _LT_AC_PROG_CXXCPP\n# ------------------\nAC_DEFUN([_LT_AC_PROG_CXXCPP],\n[\nAC_REQUIRE([AC_PROG_CXX])\nif test -n \"$CXX\" && ( test \"X$CXX\" != \"Xno\" &&\n    ( (test \"X$CXX\" = \"Xg++\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test \"X$CXX\" != \"Xg++\"))) ; then\n  AC_PROG_CXXCPP\nfi\n])# _LT_AC_PROG_CXXCPP\n\n# AC_LIBTOOL_F77\n# --------------\n# enable support for Fortran 77 libraries\nAC_DEFUN([AC_LIBTOOL_F77],\n[AC_REQUIRE([_LT_AC_LANG_F77])\n])# AC_LIBTOOL_F77\n\n\n# _LT_AC_LANG_F77\n# ---------------\nAC_DEFUN([_LT_AC_LANG_F77],\n[AC_REQUIRE([AC_PROG_F77])\n_LT_AC_SHELL_INIT([tagnames=${tagnames+${tagnames},}F77])\n])# _LT_AC_LANG_F77\n\n\n# AC_LIBTOOL_GCJ\n# --------------\n# enable support for GCJ libraries\nAC_DEFUN([AC_LIBTOOL_GCJ],\n[AC_REQUIRE([_LT_AC_LANG_GCJ])\n])# AC_LIBTOOL_GCJ\n\n\n# _LT_AC_LANG_GCJ\n# ---------------\nAC_DEFUN([_LT_AC_LANG_GCJ],\n[AC_PROVIDE_IFELSE([AC_PROG_GCJ],[],\n  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],[],\n    [AC_PROVIDE_IFELSE([LT_AC_PROG_GCJ],[],\n      [ifdef([AC_PROG_GCJ],[AC_REQUIRE([AC_PROG_GCJ])],\n\t [ifdef([A][M_PROG_GCJ],[AC_REQUIRE([A][M_PROG_GCJ])],\n\t   [AC_REQUIRE([A][C_PROG_GCJ_OR_A][M_PROG_GCJ])])])])])])\n_LT_AC_SHELL_INIT([tagnames=${tagnames+${tagnames},}GCJ])\n])# _LT_AC_LANG_GCJ\n\n\n# AC_LIBTOOL_RC\n# -------------\n# enable support for Windows resource files\nAC_DEFUN([AC_LIBTOOL_RC],\n[AC_REQUIRE([LT_AC_PROG_RC])\n_LT_AC_SHELL_INIT([tagnames=${tagnames+${tagnames},}RC])\n])# AC_LIBTOOL_RC\n\n\n# AC_LIBTOOL_LANG_C_CONFIG\n# ------------------------\n# Ensure that the configuration vars for the C compiler are\n# suitably defined.  Those variables are subsequently used by\n# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.\nAC_DEFUN([AC_LIBTOOL_LANG_C_CONFIG], [_LT_AC_LANG_C_CONFIG])\nAC_DEFUN([_LT_AC_LANG_C_CONFIG],\n[lt_save_CC=\"$CC\"\nAC_LANG_PUSH(C)\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\n_LT_AC_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\\n\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}\\n'\n\n_LT_AC_SYS_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nAC_LIBTOOL_PROG_COMPILER_NO_RTTI($1)\nAC_LIBTOOL_PROG_COMPILER_PIC($1)\nAC_LIBTOOL_PROG_CC_C_O($1)\nAC_LIBTOOL_SYS_HARD_LINK_LOCKS($1)\nAC_LIBTOOL_PROG_LD_SHLIBS($1)\nAC_LIBTOOL_SYS_DYNAMIC_LINKER($1)\nAC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH($1)\nAC_LIBTOOL_SYS_LIB_STRIP\nAC_LIBTOOL_DLOPEN_SELF\n\n# Report which library types will actually be built\nAC_MSG_CHECKING([if libtool supports shared libraries])\nAC_MSG_RESULT([$can_build_shared])\n\nAC_MSG_CHECKING([whether to build shared libraries])\ntest \"$can_build_shared\" = \"no\" && enable_shared=no\n\n# On AIX, shared libraries and static libraries use the same namespace, and\n# are all built from PIC.\ncase $host_os in\naix3*)\n  test \"$enable_shared\" = yes && enable_static=no\n  if test -n \"$RANLIB\"; then\n    archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n    postinstall_cmds='$RANLIB $lib'\n  fi\n  ;;\n\naix4* | aix5*)\n  if test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n    test \"$enable_shared\" = yes && enable_static=no\n  fi\n    ;;\nesac\nAC_MSG_RESULT([$enable_shared])\n\nAC_MSG_CHECKING([whether to build static libraries])\n# Make sure either enable_shared or enable_static is yes.\ntest \"$enable_shared\" = yes || enable_static=yes\nAC_MSG_RESULT([$enable_static])\n\nAC_LIBTOOL_CONFIG($1)\n\nAC_LANG_POP\nCC=\"$lt_save_CC\"\n])# AC_LIBTOOL_LANG_C_CONFIG\n\n\n# AC_LIBTOOL_LANG_CXX_CONFIG\n# --------------------------\n# Ensure that the configuration vars for the C compiler are\n# suitably defined.  Those variables are subsequently used by\n# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.\nAC_DEFUN([AC_LIBTOOL_LANG_CXX_CONFIG], [_LT_AC_LANG_CXX_CONFIG(CXX)])\nAC_DEFUN([_LT_AC_LANG_CXX_CONFIG],\n[AC_LANG_PUSH(C++)\nAC_REQUIRE([AC_PROG_CXX])\nAC_REQUIRE([_LT_AC_PROG_CXXCPP])\n\n_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_AC_TAGVAR(allow_undefined_flag, $1)=\n_LT_AC_TAGVAR(always_export_symbols, $1)=no\n_LT_AC_TAGVAR(archive_expsym_cmds, $1)=\n_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_AC_TAGVAR(hardcode_direct, $1)=no\n_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_AC_TAGVAR(hardcode_minus_L, $1)=no\n_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n_LT_AC_TAGVAR(hardcode_automatic, $1)=no\n_LT_AC_TAGVAR(module_cmds, $1)=\n_LT_AC_TAGVAR(module_expsym_cmds, $1)=\n_LT_AC_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_AC_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_AC_TAGVAR(no_undefined_flag, $1)=\n_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Dependencies to place before and after the object being linked:\n_LT_AC_TAGVAR(predep_objects, $1)=\n_LT_AC_TAGVAR(postdep_objects, $1)=\n_LT_AC_TAGVAR(predeps, $1)=\n_LT_AC_TAGVAR(postdeps, $1)=\n_LT_AC_TAGVAR(compiler_lib_search_path, $1)=\n\n# Source file extension for C++ test sources.\nac_ext=cpp\n\n# Object file extension for compiled C++ test sources.\nobjext=o\n_LT_AC_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\\n\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(int, char *[[]]) { return(0); }\\n'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_AC_SYS_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_LD=$LD\nlt_save_GCC=$GCC\nGCC=$GXX\nlt_save_with_gnu_ld=$with_gnu_ld\nlt_save_path_LD=$lt_cv_path_LD\nif test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n  lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\nelse\n  $as_unset lt_cv_prog_gnu_ld\nfi\nif test -n \"${lt_cv_path_LDCXX+set}\"; then\n  lt_cv_path_LD=$lt_cv_path_LDCXX\nelse\n  $as_unset lt_cv_path_LD\nfi\ntest -z \"${LDCXX+set}\" || LD=$LDCXX\nCC=${CXX-\"c++\"}\ncompiler=$CC\n_LT_AC_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n\n# We don't want -fno-exception wen compiling C++ code, so set the\n# no_builtin_flag separately\nif test \"$GXX\" = yes; then\n  _LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\nelse\n  _LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\nfi\n\nif test \"$GXX\" = yes; then\n  # Set up default GNU C++ configuration\n\n  AC_PROG_LD\n\n  # Check if GNU C++ uses GNU ld as the underlying linker, since the\n  # archiving commands below assume that GNU ld is being used.\n  if test \"$with_gnu_ld\" = yes; then\n    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'\n    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n    #     investigate it a little bit more. (MM)\n    wlarc='${wl}'\n\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if eval \"`$CC -print-prog-name=ld` --help 2>&1\" | \\\n\tgrep 'no-whole-archive' > /dev/null; then\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n    else\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    with_gnu_ld=no\n    wlarc=\n\n    # A generic and very simple default shared library creation\n    # command for GNU C++ for the case where it uses the native\n    # linker, instead of GNU ld.  If possible, this setting should\n    # overridden to take advantage of the native linker features on\n    # the platform it is being used on.\n    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n  fi\n\n  # Commands to make compiler produce verbose output that lists\n  # what \"hidden\" libraries, object files and flags are used when\n  # linking a shared library.\n  output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"\\-L\"'\n\nelse\n  GXX=no\n  with_gnu_ld=no\n  wlarc=\nfi\n\n# PORTME: fill in a description of your system's C++ link characteristics\nAC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\n_LT_AC_TAGVAR(ld_shlibs, $1)=yes\ncase $host_os in\n  aix3*)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  aix4* | aix5*)\n    if test \"$host_cpu\" = ia64; then\n      # On IA64, the linker does run time linking by default, so we don't\n      # have to do anything special.\n      aix_use_runtimelinking=no\n      exp_sym_flag='-Bexport'\n      no_entry_flag=\"\"\n    else\n      aix_use_runtimelinking=no\n\n      # Test if we are trying to use run time linking or normal\n      # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n      # need to do runtime linking.\n      case $host_os in aix4.[[23]]|aix4.[[23]].*|aix5*)\n\tfor ld_flag in $LDFLAGS; do\n\t  case $ld_flag in\n\t  *-brtl*)\n\t    aix_use_runtimelinking=yes\n\t    break\n\t    ;;\n\t  esac\n\tdone\n\t;;\n      esac\n\n      exp_sym_flag='-bexport'\n      no_entry_flag='-bnoentry'\n    fi\n\n    # When large executables or shared objects are built, AIX ld can\n    # have problems creating the table of contents.  If linking a library\n    # or program results in \"error TOC overflow\" add -mminimal-toc to\n    # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n    # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n    _LT_AC_TAGVAR(archive_cmds, $1)=''\n    _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n    _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=':'\n    _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n\n    if test \"$GXX\" = yes; then\n      case $host_os in aix4.[[012]]|aix4.[[012]].*)\n      # We only want to do this on AIX 4.2 and lower, the check\n      # below for broken collect2 doesn't work under 4.3+\n\tcollect2name=`${CC} -print-prog-name=collect2`\n\tif test -f \"$collect2name\" && \\\n\t   strings \"$collect2name\" | grep resolve_lib_name >/dev/null\n\tthen\n\t  # We have reworked collect2\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n\telse\n\t  # We have old collect2\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=\n\tfi\n\t;;\n      esac\n      shared_flag='-shared'\n      if test \"$aix_use_runtimelinking\" = yes; then\n\tshared_flag=\"$shared_flag \"'${wl}-G'\n      fi\n    else\n      # not using gcc\n      if test \"$host_cpu\" = ia64; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\tshared_flag='-G'\n      else\n\tif test \"$aix_use_runtimelinking\" = yes; then\n\t  shared_flag='${wl}-G'\n\telse\n\t  shared_flag='${wl}-bM:SRE'\n\tfi\n      fi\n    fi\n\n    # It seems that -bexpall does not export symbols beginning with\n    # underscore (_), so it is better to generate a list of symbols to export.\n    _LT_AC_TAGVAR(always_export_symbols, $1)=yes\n    if test \"$aix_use_runtimelinking\" = yes; then\n      # Warning - without using the other runtime loading flags (-brtl),\n      # -berok will link without error, but may produce a broken library.\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)='-berok'\n      # Determine the default libpath from the value encoded in an empty executable.\n      _LT_AC_SYS_LIBPATH_AIX\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags `if test \"x${allow_undefined_flag}\" != \"x\"; then echo \"${wl}${allow_undefined_flag}\"; else :; fi` '\"\\${wl}$exp_sym_flag:\\$export_symbols $shared_flag\"\n     else\n      if test \"$host_cpu\" = ia64; then\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$exp_sym_flag:\\$export_symbols\"\n      else\n\t# Determine the default libpath from the value encoded in an empty executable.\n\t_LT_AC_SYS_LIBPATH_AIX\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t# Warning - without using the other run time loading flags,\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_AC_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'\n\t# Exported symbols can be pulled into shared objects from archives\n\t_LT_AC_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t# This is similar to how AIX traditionally builds its shared libraries.\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n      fi\n    fi\n    ;;\n\n  beos*)\n    if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n      # Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n      # support --undefined.  This deserves some investigation.  FIXME\n      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n    else\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    fi\n    ;;\n\n  chorus*)\n    case $cc_basename in\n      *)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n    esac\n    ;;\n\n  cygwin* | mingw* | pw32*)\n    # _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n    # as there is no search path for DLLs.\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n    _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n    _LT_AC_TAGVAR(always_export_symbols, $1)=no\n    _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\n    if $LD --help 2>&1 | grep 'auto-import' > /dev/null; then\n      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      # If the export-symbols file already is a .def file (1st line\n      # is EXPORTS), use it as is; otherwise, prepend...\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\tcp $export_symbols $output_objdir/$soname.def;\n      else\n\techo EXPORTS > $output_objdir/$soname.def;\n\tcat $export_symbols >> $output_objdir/$soname.def;\n      fi~\n      $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n    else\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    fi\n  ;;\n      darwin* | rhapsody*)\n        case $host_os in\n        rhapsody* | darwin1.[[012]])\n         _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-undefined ${wl}suppress'\n         ;;\n       *) # Darwin 1.3 on\n         if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then\n           _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'\n         else\n           case ${MACOSX_DEPLOYMENT_TARGET} in\n             10.[[012]])\n               _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'\n               ;;\n             10.*)\n               _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-undefined ${wl}dynamic_lookup'\n               ;;\n           esac\n         fi\n         ;;\n        esac\n      _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_AC_TAGVAR(hardcode_direct, $1)=no\n      _LT_AC_TAGVAR(hardcode_automatic, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=''\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n\n    if test \"$GXX\" = yes ; then\n      lt_int_apple_cc_single_mod=no\n      output_verbose_link_cmd='echo'\n      if $CC -dumpspecs 2>&1 | $EGREP 'single_module' >/dev/null ; then\n       lt_int_apple_cc_single_mod=yes\n      fi\n      if test \"X$lt_int_apple_cc_single_mod\" = Xyes ; then\n       _LT_AC_TAGVAR(archive_cmds, $1)='$CC -dynamiclib -single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring'\n      else\n          _LT_AC_TAGVAR(archive_cmds, $1)='$CC -r -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs~$CC -dynamiclib $allow_undefined_flag -o $lib ${lib}-master.o $deplibs $compiler_flags -install_name $rpath/$soname $verstring'\n        fi\n        _LT_AC_TAGVAR(module_cmds, $1)='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'\n        # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds\n          if test \"X$lt_int_apple_cc_single_mod\" = Xyes ; then\n            _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -dynamiclib -single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          else\n            _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -r -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs~$CC -dynamiclib $allow_undefined_flag -o $lib ${lib}-master.o $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          fi\n            _LT_AC_TAGVAR(module_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n      else\n      case $cc_basename in\n        xlc*)\n         output_verbose_link_cmd='echo'\n          _LT_AC_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj ${wl}-single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}`echo $rpath/$soname` $verstring'\n          _LT_AC_TAGVAR(module_cmds, $1)='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'\n          # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds\n          _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -qmkshrobj ${wl}-single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}$rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          _LT_AC_TAGVAR(module_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          ;;\n       *)\n         _LT_AC_TAGVAR(ld_shlibs, $1)=no\n          ;;\n      esac\n      fi\n        ;;\n\n  dgux*)\n    case $cc_basename in\n      ec++*)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      ghcx*)\n\t# Green Hills C++ Compiler\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      *)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n    esac\n    ;;\n  freebsd[[12]]*)\n    # C++ shared libraries reported to be fairly broken before switch to ELF\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  freebsd-elf*)\n    _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n    ;;\n  freebsd* | kfreebsd*-gnu | dragonfly*)\n    # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n    # conventions\n    _LT_AC_TAGVAR(ld_shlibs, $1)=yes\n    ;;\n  gnu*)\n    ;;\n  hpux9*)\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n    _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n    _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n    _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t# but as the default\n\t\t\t\t# location of the library.\n\n    case $cc_basename in\n    CC*)\n      # FIXME: insert proper C++ library support\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    aCC*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/$soname~$CC -b ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      #\n      # There doesn't appear to be a way to prevent this compiler from\n      # explicitly linking system object files so we need to strip them\n      # from the output so that they don't get included in the library\n      # dependencies.\n      output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | grep \"[[-]]L\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n      ;;\n    *)\n      if test \"$GXX\" = yes; then\n        _LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/$soname~$CC -shared -nostdlib -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      else\n        # FIXME: insert proper C++ library support\n        _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n    ;;\n  hpux10*|hpux11*)\n    if test $with_gnu_ld = no; then\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='+b $libdir'\n        ;;\n      *)\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n        ;;\n      esac\n    fi\n    case $host_cpu in\n    hppa*64*|ia64*)\n      _LT_AC_TAGVAR(hardcode_direct, $1)=no\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n    *)\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t\t      # but as the default\n\t\t\t\t\t      # location of the library.\n      ;;\n    esac\n\n    case $cc_basename in\n      CC*)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      aCC*)\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t  ;;\n\tesac\n\t# Commands to make compiler produce verbose output that lists\n\t# what \"hidden\" libraries, object files and flags are used when\n\t# linking a shared library.\n\t#\n\t# There doesn't appear to be a way to prevent this compiler from\n\t# explicitly linking system object files so we need to strip them\n\t# from the output so that they don't get included in the library\n\t# dependencies.\n\toutput_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | grep \"\\-L\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n\t;;\n      *)\n\tif test \"$GXX\" = yes; then\n\t  if test $with_gnu_ld = no; then\n\t    case $host_cpu in\n\t    hppa*64*)\n\t      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      ;;\n\t    ia64*)\n\t      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      ;;\n\t    *)\n\t      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      ;;\n\t    esac\n\t  fi\n\telse\n\t  # FIXME: insert proper C++ library support\n\t  _LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n    esac\n    ;;\n  interix3*)\n    _LT_AC_TAGVAR(hardcode_direct, $1)=no\n    _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n    # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n    # Instead, shared libraries are loaded at an image base (0x10000000 by\n    # default) and relocated if they conflict, which is a slow very memory\n    # consuming and fragmenting process.  To avoid this, we pick a random,\n    # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n    # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed \"s,^,_,\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n    ;;\n  irix5* | irix6*)\n    case $cc_basename in\n      CC*)\n\t# SGI C++\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n\n\t# Archives containing C++ object files must be created using\n\t# \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t# necessary to make sure instantiated templates are included\n\t# in the archive.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t;;\n      *)\n\tif test \"$GXX\" = yes; then\n\t  if test \"$with_gnu_ld\" = no; then\n\t    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t  else\n\t    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` -o $lib'\n\t  fi\n\tfi\n\t_LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n\t;;\n    esac\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n    _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n    ;;\n  linux*)\n    case $cc_basename in\n      KCC*)\n\t# Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t# KCC will only create a shared library if the output file\n\t# ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t# to its proper name (with version) after linking.\n\t_LT_AC_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib ${wl}-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t# Commands to make compiler produce verbose output that lists\n\t# what \"hidden\" libraries, object files and flags are used when\n\t# linking a shared library.\n\t#\n\t# There doesn't appear to be a way to prevent this compiler from\n\t# explicitly linking system object files so we need to strip them\n\t# from the output so that they don't get included in the library\n\t# dependencies.\n\toutput_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | grep \"ld\"`; rm -f libconftest$shared_ext; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath,$libdir'\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\n\t# Archives containing C++ object files must be created using\n\t# \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\t;;\n      icpc*)\n\t# Intel C++\n\twith_gnu_ld=yes\n\t# version 8.0 and above of icpc choke on multiply defined symbols\n\t# if we add $predep_objects and $postdep_objects, however 7.1 and\n\t# earlier do not add the objects themselves.\n\tcase `$CC -V 2>&1` in\n\t*\"Version 7.\"*)\n  \t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n  \t  _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t  ;;\n\t*)  # Version 8.0 or newer\n\t  tmp_idyn=\n\t  case $host_cpu in\n\t    ia64*) tmp_idyn=' -i_dynamic';;\n\t  esac\n  \t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t  _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t  ;;\n\tesac\n\t_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t_LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t;;\n      pgCC*)\n        # Portland Group C++ compiler\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n  \t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t_LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; $echo \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n        ;;\n      cxx*)\n\t# Compaq C++\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname  -o $lib ${wl}-retain-symbols-file $wl$export_symbols'\n\n\trunpath_var=LD_RUN_PATH\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t# Commands to make compiler produce verbose output that lists\n\t# what \"hidden\" libraries, object files and flags are used when\n\t# linking a shared library.\n\t#\n\t# There doesn't appear to be a way to prevent this compiler from\n\t# explicitly linking system object files so we need to strip them\n\t# from the output so that they don't get included in the library\n\t# dependencies.\n\toutput_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"ld\"`; templist=`echo $templist | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n\t;;\n    esac\n    ;;\n  lynxos*)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  m88k*)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  mvs*)\n    case $cc_basename in\n      cxx*)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      *)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n    esac\n    ;;\n  netbsd*)\n    if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n      wlarc=\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n    fi\n    # Workaround some broken pre-1.5 toolchains\n    output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n    ;;\n  openbsd2*)\n    # C++ shared libraries are fairly broken\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  openbsd*)\n    _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n    _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n    if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file,$export_symbols -o $lib'\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n    fi\n    output_verbose_link_cmd='echo'\n    ;;\n  osf3*)\n    case $cc_basename in\n      KCC*)\n\t# Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t# KCC will only create a shared library if the output file\n\t# ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t# to its proper name (with version) after linking.\n\t_LT_AC_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t# Archives containing C++ object files must be created using\n\t# \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\n\t;;\n      RCC*)\n\t# Rational C++ 2.4.1\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      cxx*)\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $soname `test -n \"$verstring\" && echo ${wl}-set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t# Commands to make compiler produce verbose output that lists\n\t# what \"hidden\" libraries, object files and flags are used when\n\t# linking a shared library.\n\t#\n\t# There doesn't appear to be a way to prevent this compiler from\n\t# explicitly linking system object files so we need to strip them\n\t# from the output so that they don't get included in the library\n\t# dependencies.\n\toutput_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"ld\" | grep -v \"ld:\"`; templist=`echo $templist | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n\t;;\n      *)\n\tif test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t  _LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t  # Commands to make compiler produce verbose output that lists\n\t  # what \"hidden\" libraries, object files and flags are used when\n\t  # linking a shared library.\n\t  output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"\\-L\"'\n\n\telse\n\t  # FIXME: insert proper C++ library support\n\t  _LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n    esac\n    ;;\n  osf4* | osf5*)\n    case $cc_basename in\n      KCC*)\n\t# Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t# KCC will only create a shared library if the output file\n\t# ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t# to its proper name (with version) after linking.\n\t_LT_AC_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t# Archives containing C++ object files must be created using\n\t# the KAI C++ compiler.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs'\n\t;;\n      RCC*)\n\t# Rational C++ 2.4.1\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      cxx*)\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n\t  echo \"-hidden\">> $lib.exp~\n\t  $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname -Wl,-input -Wl,$lib.exp  `test -n \"$verstring\" && echo -set_version\t$verstring` -update_registry ${output_objdir}/so_locations -o $lib~\n\t  $rm $lib.exp'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t# Commands to make compiler produce verbose output that lists\n\t# what \"hidden\" libraries, object files and flags are used when\n\t# linking a shared library.\n\t#\n\t# There doesn't appear to be a way to prevent this compiler from\n\t# explicitly linking system object files so we need to strip them\n\t# from the output so that they don't get included in the library\n\t# dependencies.\n\toutput_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"ld\" | grep -v \"ld:\"`; templist=`echo $templist | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n\t;;\n      *)\n\tif test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t  _LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t  # Commands to make compiler produce verbose output that lists\n\t  # what \"hidden\" libraries, object files and flags are used when\n\t  # linking a shared library.\n\t  output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"\\-L\"'\n\n\telse\n\t  # FIXME: insert proper C++ library support\n\t  _LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n    esac\n    ;;\n  psos*)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  sunos4*)\n    case $cc_basename in\n      CC*)\n\t# Sun C++ 4.x\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      lcc*)\n\t# Lucid\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      *)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n    esac\n    ;;\n  solaris*)\n    case $cc_basename in\n      CC*)\n\t# Sun C++ 4.2, 5.x and Centerline C++\n        _LT_AC_TAGVAR(archive_cmds_need_lc,$1)=yes\n\t_LT_AC_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag}  -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n\t$CC -G${allow_undefined_flag}  ${wl}-M ${wl}$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$rm $lib.exp'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n\tcase $host_os in\n\t  solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t  *)\n\t    # The C++ compiler is used as linker so we must use $wl\n\t    # flag to pass the commands to the underlying system\n\t    # linker. We must also pass each convience library through\n\t    # to the system linker between allextract/defaultextract.\n\t    # The C++ compiler will combine linker options so we\n\t    # cannot just pass the convience library names through\n\t    # without $wl.\n\t    # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t    _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract`for conv in $convenience\\\"\\\"; do test -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; $echo \\\"$new_convenience\\\"` ${wl}-z ${wl}defaultextract'\n\t    ;;\n\tesac\n\t_LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n\n\toutput_verbose_link_cmd='echo'\n\n\t# Archives containing C++ object files must be created using\n\t# \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t# necessary to make sure instantiated templates are included\n\t# in the archive.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t;;\n      gcx*)\n\t# Green Hills C++ Compiler\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\n\t# The C++ compiler must be used to create the archive.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t;;\n      *)\n\t# GNU C++ compiler with Solaris linker\n\tif test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t  _LT_AC_TAGVAR(no_undefined_flag, $1)=' ${wl}-z ${wl}defs'\n\t  if $CC --version | grep -v '^2\\.7' > /dev/null; then\n\t    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\t    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n\t\t$CC -shared -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$rm $lib.exp'\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    output_verbose_link_cmd=\"$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \\\"\\-L\\\"\"\n\t  else\n\t    # g++ 2.7 appears to require `-G' NOT `-shared' on this\n\t    # platform.\n\t    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\t    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n\t\t$CC -G -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$rm $lib.exp'\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    output_verbose_link_cmd=\"$CC -G $CFLAGS -v conftest.$objext 2>&1 | grep \\\"\\-L\\\"\"\n\t  fi\n\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $wl$libdir'\n\tfi\n\t;;\n    esac\n    ;;\n  sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n    _LT_AC_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n    _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n    _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n    runpath_var='LD_RUN_PATH'\n\n    case $cc_basename in\n      CC*)\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t;;\n      *)\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t;;\n    esac\n    ;;\n  sysv5* | sco3.2v5* | sco5v6*)\n    # Note: We can NOT use -z defs as we might desire, because we do not\n    # link with -lc, and that would cause any symbols used from libc to\n    # always be unresolved, which means just about no library would\n    # ever link correctly.  If we're not using GNU ld we use -z text\n    # though, which does catch some bad symbols but isn't as heavy-handed\n    # as -z defs.\n    # For security reasons, it is highly recommended that you always\n    # use absolute paths for naming shared libraries, and exclude the\n    # DT_RUNPATH tag from executables and libraries.  But doing so\n    # requires that you compile everything twice, which is a pain.\n    # So that behaviour is only enabled if SCOABSPATH is set to a\n    # non-empty value in the environment.  Most likely only useful for\n    # creating official distributions of packages.\n    # This is a hack until libtool officially supports absolute path\n    # names for shared libraries.\n    _LT_AC_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n    _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'\n    _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n    _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='`test -z \"$SCOABSPATH\" && echo ${wl}-R,$libdir`'\n    _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=':'\n    _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'\n    runpath_var='LD_RUN_PATH'\n\n    case $cc_basename in\n      CC*)\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t;;\n      *)\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t;;\n    esac\n    ;;\n  tandem*)\n    case $cc_basename in\n      NCC*)\n\t# NonStop-UX NCC 3.20\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      *)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n    esac\n    ;;\n  vxworks*)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  *)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\nesac\nAC_MSG_RESULT([$_LT_AC_TAGVAR(ld_shlibs, $1)])\ntest \"$_LT_AC_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\n_LT_AC_TAGVAR(GCC, $1)=\"$GXX\"\n_LT_AC_TAGVAR(LD, $1)=\"$LD\"\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nAC_LIBTOOL_POSTDEP_PREDEP($1)\nAC_LIBTOOL_PROG_COMPILER_PIC($1)\nAC_LIBTOOL_PROG_CC_C_O($1)\nAC_LIBTOOL_SYS_HARD_LINK_LOCKS($1)\nAC_LIBTOOL_PROG_LD_SHLIBS($1)\nAC_LIBTOOL_SYS_DYNAMIC_LINKER($1)\nAC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH($1)\n\nAC_LIBTOOL_CONFIG($1)\n\nAC_LANG_POP\nCC=$lt_save_CC\nLDCXX=$LD\nLD=$lt_save_LD\nGCC=$lt_save_GCC\nwith_gnu_ldcxx=$with_gnu_ld\nwith_gnu_ld=$lt_save_with_gnu_ld\nlt_cv_path_LDCXX=$lt_cv_path_LD\nlt_cv_path_LD=$lt_save_path_LD\nlt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\nlt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\n])# AC_LIBTOOL_LANG_CXX_CONFIG\n\n# AC_LIBTOOL_POSTDEP_PREDEP([TAGNAME])\n# ------------------------------------\n# Figure out \"hidden\" library dependencies from verbose\n# compiler output when linking a shared library.\n# Parse the compiler output and extract the necessary\n# objects, libraries and library flags.\nAC_DEFUN([AC_LIBTOOL_POSTDEP_PREDEP],[\ndnl we can't use the lt_simple_compile_test_code here,\ndnl because it contains code intended for an executable,\ndnl not a library.  It's possible we should let each\ndnl tag define a new lt_????_link_test_code variable,\ndnl but it's only used here...\nifelse([$1],[],[cat > conftest.$ac_ext <<EOF\nint a;\nvoid foo (void) { a = 0; }\nEOF\n],[$1],[CXX],[cat > conftest.$ac_ext <<EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\nEOF\n],[$1],[F77],[cat > conftest.$ac_ext <<EOF\n      subroutine foo\n      implicit none\n      integer*4 a\n      a=0\n      return\n      end\nEOF\n],[$1],[GCJ],[cat > conftest.$ac_ext <<EOF\npublic class foo {\n  private int a;\n  public void bar (void) {\n    a = 0;\n  }\n};\nEOF\n])\ndnl Parse the compiler output and extract the necessary\ndnl objects, libraries and library flags.\nif AC_TRY_EVAL(ac_compile); then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  # The `*' in the case matches for architectures that use `case' in\n  # $output_verbose_cmd can trigger glob expansion during the loop\n  # eval without this substitution.\n  output_verbose_link_cmd=`$echo \"X$output_verbose_link_cmd\" | $Xsed -e \"$no_glob_subst\"`\n\n  for p in `eval $output_verbose_link_cmd`; do\n    case $p in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test $p = \"-L\" \\\n\t  || test $p = \"-R\"; then\n\t prev=$p\n\t continue\n       else\n\t prev=\n       fi\n\n       if test \"$pre_test_object_deps_done\" = no; then\n\t case $p in\n\t -L* | -R*)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$_LT_AC_TAGVAR(compiler_lib_search_path, $1)\"; then\n\t     _LT_AC_TAGVAR(compiler_lib_search_path, $1)=\"${prev}${p}\"\n\t   else\n\t     _LT_AC_TAGVAR(compiler_lib_search_path, $1)=\"${_LT_AC_TAGVAR(compiler_lib_search_path, $1)} ${prev}${p}\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$_LT_AC_TAGVAR(postdeps, $1)\"; then\n\t   _LT_AC_TAGVAR(postdeps, $1)=\"${prev}${p}\"\n\t else\n\t   _LT_AC_TAGVAR(postdeps, $1)=\"${_LT_AC_TAGVAR(postdeps, $1)} ${prev}${p}\"\n\t fi\n       fi\n       ;;\n\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test \"$pre_test_object_deps_done\" = no; then\n\t if test -z \"$_LT_AC_TAGVAR(predep_objects, $1)\"; then\n\t   _LT_AC_TAGVAR(predep_objects, $1)=\"$p\"\n\t else\n\t   _LT_AC_TAGVAR(predep_objects, $1)=\"$_LT_AC_TAGVAR(predep_objects, $1) $p\"\n\t fi\n       else\n\t if test -z \"$_LT_AC_TAGVAR(postdep_objects, $1)\"; then\n\t   _LT_AC_TAGVAR(postdep_objects, $1)=\"$p\"\n\t else\n\t   _LT_AC_TAGVAR(postdep_objects, $1)=\"$_LT_AC_TAGVAR(postdep_objects, $1) $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling $1 test program\"\nfi\n\n$rm -f confest.$objext\n\n# PORTME: override above test on systems where it is broken\nifelse([$1],[CXX],\n[case $host_os in\ninterix3*)\n  # Interix 3.5 installs completely hosed .la files for C++, so rather than\n  # hack all around it, let's just trust \"g++\" to DTRT.\n  _LT_AC_TAGVAR(predep_objects,$1)=\n  _LT_AC_TAGVAR(postdep_objects,$1)=\n  _LT_AC_TAGVAR(postdeps,$1)=\n  ;;\n\nsolaris*)\n  case $cc_basename in\n  CC*)\n    # Adding this requires a known-good setup of shared libraries for\n    # Sun compiler versions before 5.6, else PIC objects from an old\n    # archive will be linked into the output, leading to subtle bugs.\n    _LT_AC_TAGVAR(postdeps,$1)='-lCstd -lCrun'\n    ;;\n  esac\n  ;;\nesac\n])\n\ncase \" $_LT_AC_TAGVAR(postdeps, $1) \" in\n*\" -lc \"*) _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no ;;\nesac\n])# AC_LIBTOOL_POSTDEP_PREDEP\n\n# AC_LIBTOOL_LANG_F77_CONFIG\n# --------------------------\n# Ensure that the configuration vars for the C compiler are\n# suitably defined.  Those variables are subsequently used by\n# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.\nAC_DEFUN([AC_LIBTOOL_LANG_F77_CONFIG], [_LT_AC_LANG_F77_CONFIG(F77)])\nAC_DEFUN([_LT_AC_LANG_F77_CONFIG],\n[AC_REQUIRE([AC_PROG_F77])\nAC_LANG_PUSH(Fortran 77)\n\n_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_AC_TAGVAR(allow_undefined_flag, $1)=\n_LT_AC_TAGVAR(always_export_symbols, $1)=no\n_LT_AC_TAGVAR(archive_expsym_cmds, $1)=\n_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_AC_TAGVAR(hardcode_direct, $1)=no\n_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_AC_TAGVAR(hardcode_minus_L, $1)=no\n_LT_AC_TAGVAR(hardcode_automatic, $1)=no\n_LT_AC_TAGVAR(module_cmds, $1)=\n_LT_AC_TAGVAR(module_expsym_cmds, $1)=\n_LT_AC_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_AC_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_AC_TAGVAR(no_undefined_flag, $1)=\n_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for f77 test sources.\nac_ext=f\n\n# Object file extension for compiled f77 test sources.\nobjext=o\n_LT_AC_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"      subroutine t\\n      return\\n      end\\n\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=\"      program t\\n      end\\n\"\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_AC_SYS_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nCC=${F77-\"f77\"}\ncompiler=$CC\n_LT_AC_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n\nAC_MSG_CHECKING([if libtool supports shared libraries])\nAC_MSG_RESULT([$can_build_shared])\n\nAC_MSG_CHECKING([whether to build shared libraries])\ntest \"$can_build_shared\" = \"no\" && enable_shared=no\n\n# On AIX, shared libraries and static libraries use the same namespace, and\n# are all built from PIC.\ncase $host_os in\naix3*)\n  test \"$enable_shared\" = yes && enable_static=no\n  if test -n \"$RANLIB\"; then\n    archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n    postinstall_cmds='$RANLIB $lib'\n  fi\n  ;;\naix4* | aix5*)\n  if test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n    test \"$enable_shared\" = yes && enable_static=no\n  fi\n  ;;\nesac\nAC_MSG_RESULT([$enable_shared])\n\nAC_MSG_CHECKING([whether to build static libraries])\n# Make sure either enable_shared or enable_static is yes.\ntest \"$enable_shared\" = yes || enable_static=yes\nAC_MSG_RESULT([$enable_static])\n\n_LT_AC_TAGVAR(GCC, $1)=\"$G77\"\n_LT_AC_TAGVAR(LD, $1)=\"$LD\"\n\nAC_LIBTOOL_PROG_COMPILER_PIC($1)\nAC_LIBTOOL_PROG_CC_C_O($1)\nAC_LIBTOOL_SYS_HARD_LINK_LOCKS($1)\nAC_LIBTOOL_PROG_LD_SHLIBS($1)\nAC_LIBTOOL_SYS_DYNAMIC_LINKER($1)\nAC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH($1)\n\nAC_LIBTOOL_CONFIG($1)\n\nAC_LANG_POP\nCC=\"$lt_save_CC\"\n])# AC_LIBTOOL_LANG_F77_CONFIG\n\n\n# AC_LIBTOOL_LANG_GCJ_CONFIG\n# --------------------------\n# Ensure that the configuration vars for the C compiler are\n# suitably defined.  Those variables are subsequently used by\n# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.\nAC_DEFUN([AC_LIBTOOL_LANG_GCJ_CONFIG], [_LT_AC_LANG_GCJ_CONFIG(GCJ)])\nAC_DEFUN([_LT_AC_LANG_GCJ_CONFIG],\n[AC_LANG_SAVE\n\n# Source file extension for Java test sources.\nac_ext=java\n\n# Object file extension for compiled Java test sources.\nobjext=o\n_LT_AC_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"class foo {}\\n\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }\\n'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_AC_SYS_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nCC=${GCJ-\"gcj\"}\ncompiler=$CC\n_LT_AC_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n\n# GCJ did not exist at the time GCC didn't implicitly link libc in.\n_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_AC_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nAC_LIBTOOL_PROG_COMPILER_NO_RTTI($1)\nAC_LIBTOOL_PROG_COMPILER_PIC($1)\nAC_LIBTOOL_PROG_CC_C_O($1)\nAC_LIBTOOL_SYS_HARD_LINK_LOCKS($1)\nAC_LIBTOOL_PROG_LD_SHLIBS($1)\nAC_LIBTOOL_SYS_DYNAMIC_LINKER($1)\nAC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH($1)\n\nAC_LIBTOOL_CONFIG($1)\n\nAC_LANG_RESTORE\nCC=\"$lt_save_CC\"\n])# AC_LIBTOOL_LANG_GCJ_CONFIG\n\n\n# AC_LIBTOOL_LANG_RC_CONFIG\n# -------------------------\n# Ensure that the configuration vars for the Windows resource compiler are\n# suitably defined.  Those variables are subsequently used by\n# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.\nAC_DEFUN([AC_LIBTOOL_LANG_RC_CONFIG], [_LT_AC_LANG_RC_CONFIG(RC)])\nAC_DEFUN([_LT_AC_LANG_RC_CONFIG],\n[AC_LANG_SAVE\n\n# Source file extension for RC test sources.\nac_ext=rc\n\n# Object file extension for compiled RC test sources.\nobjext=o\n_LT_AC_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code='sample MENU { MENUITEM \"&Soup\", 100, CHECKED }\\n'\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=\"$lt_simple_compile_test_code\"\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_AC_SYS_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nCC=${RC-\"windres\"}\ncompiler=$CC\n_LT_AC_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n\nAC_LIBTOOL_CONFIG($1)\n\nAC_LANG_RESTORE\nCC=\"$lt_save_CC\"\n])# AC_LIBTOOL_LANG_RC_CONFIG\n\n\n# AC_LIBTOOL_CONFIG([TAGNAME])\n# ----------------------------\n# If TAGNAME is not passed, then create an initial libtool script\n# with a default configuration from the untagged config vars.  Otherwise\n# add code to config.status for appending the configuration named by\n# TAGNAME from the matching tagged config vars.\nAC_DEFUN([AC_LIBTOOL_CONFIG],\n[# The else clause should only fire when bootstrapping the\n# libtool distribution, otherwise you forgot to ship ltmain.sh\n# with your package, and you will get complaints that there are\n# no rules to generate ltmain.sh.\nif test -f \"$ltmain\"; then\n  # See if we are running on zsh, and set the options which allow our commands through\n  # without removal of \\ escapes.\n  if test -n \"${ZSH_VERSION+set}\" ; then\n    setopt NO_GLOB_SUBST\n  fi\n  # Now quote all the things that may contain metacharacters while being\n  # careful not to overquote the AC_SUBSTed values.  We take copies of the\n  # variables and quote the copies for generation of the libtool script.\n  for var in echo old_CC old_CFLAGS AR AR_FLAGS EGREP RANLIB LN_S LTCC LTCFLAGS NM \\\n    SED SHELL STRIP \\\n    libname_spec library_names_spec soname_spec extract_expsyms_cmds \\\n    old_striplib striplib file_magic_cmd finish_cmds finish_eval \\\n    deplibs_check_method reload_flag reload_cmds need_locks \\\n    lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl \\\n    lt_cv_sys_global_symbol_to_c_name_address \\\n    sys_lib_search_path_spec sys_lib_dlsearch_path_spec \\\n    old_postinstall_cmds old_postuninstall_cmds \\\n    _LT_AC_TAGVAR(compiler, $1) \\\n    _LT_AC_TAGVAR(CC, $1) \\\n    _LT_AC_TAGVAR(LD, $1) \\\n    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1) \\\n    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1) \\\n    _LT_AC_TAGVAR(lt_prog_compiler_static, $1) \\\n    _LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) \\\n    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1) \\\n    _LT_AC_TAGVAR(thread_safe_flag_spec, $1) \\\n    _LT_AC_TAGVAR(whole_archive_flag_spec, $1) \\\n    _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1) \\\n    _LT_AC_TAGVAR(old_archive_cmds, $1) \\\n    _LT_AC_TAGVAR(old_archive_from_new_cmds, $1) \\\n    _LT_AC_TAGVAR(predep_objects, $1) \\\n    _LT_AC_TAGVAR(postdep_objects, $1) \\\n    _LT_AC_TAGVAR(predeps, $1) \\\n    _LT_AC_TAGVAR(postdeps, $1) \\\n    _LT_AC_TAGVAR(compiler_lib_search_path, $1) \\\n    _LT_AC_TAGVAR(archive_cmds, $1) \\\n    _LT_AC_TAGVAR(archive_expsym_cmds, $1) \\\n    _LT_AC_TAGVAR(postinstall_cmds, $1) \\\n    _LT_AC_TAGVAR(postuninstall_cmds, $1) \\\n    _LT_AC_TAGVAR(old_archive_from_expsyms_cmds, $1) \\\n    _LT_AC_TAGVAR(allow_undefined_flag, $1) \\\n    _LT_AC_TAGVAR(no_undefined_flag, $1) \\\n    _LT_AC_TAGVAR(export_symbols_cmds, $1) \\\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1) \\\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1) \\\n    _LT_AC_TAGVAR(hardcode_libdir_separator, $1) \\\n    _LT_AC_TAGVAR(hardcode_automatic, $1) \\\n    _LT_AC_TAGVAR(module_cmds, $1) \\\n    _LT_AC_TAGVAR(module_expsym_cmds, $1) \\\n    _LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1) \\\n    _LT_AC_TAGVAR(exclude_expsyms, $1) \\\n    _LT_AC_TAGVAR(include_expsyms, $1); do\n\n    case $var in\n    _LT_AC_TAGVAR(old_archive_cmds, $1) | \\\n    _LT_AC_TAGVAR(old_archive_from_new_cmds, $1) | \\\n    _LT_AC_TAGVAR(archive_cmds, $1) | \\\n    _LT_AC_TAGVAR(archive_expsym_cmds, $1) | \\\n    _LT_AC_TAGVAR(module_cmds, $1) | \\\n    _LT_AC_TAGVAR(module_expsym_cmds, $1) | \\\n    _LT_AC_TAGVAR(old_archive_from_expsyms_cmds, $1) | \\\n    _LT_AC_TAGVAR(export_symbols_cmds, $1) | \\\n    extract_expsyms_cmds | reload_cmds | finish_cmds | \\\n    postinstall_cmds | postuninstall_cmds | \\\n    old_postinstall_cmds | old_postuninstall_cmds | \\\n    sys_lib_search_path_spec | sys_lib_dlsearch_path_spec)\n      # Double-quote double-evaled strings.\n      eval \"lt_$var=\\\\\\\"\\`\\$echo \\\"X\\$$var\\\" | \\$Xsed -e \\\"\\$double_quote_subst\\\" -e \\\"\\$sed_quote_subst\\\" -e \\\"\\$delay_variable_subst\\\"\\`\\\\\\\"\"\n      ;;\n    *)\n      eval \"lt_$var=\\\\\\\"\\`\\$echo \\\"X\\$$var\\\" | \\$Xsed -e \\\"\\$sed_quote_subst\\\"\\`\\\\\\\"\"\n      ;;\n    esac\n  done\n\n  case $lt_echo in\n  *'\\[$]0 --fallback-echo\"')\n    lt_echo=`$echo \"X$lt_echo\" | $Xsed -e 's/\\\\\\\\\\\\\\[$]0 --fallback-echo\"[$]/[$]0 --fallback-echo\"/'`\n    ;;\n  esac\n\nifelse([$1], [],\n  [cfgfile=\"${ofile}T\"\n  trap \"$rm \\\"$cfgfile\\\"; exit 1\" 1 2 15\n  $rm -f \"$cfgfile\"\n  AC_MSG_NOTICE([creating $ofile])],\n  [cfgfile=\"$ofile\"])\n\n  cat <<__EOF__ >> \"$cfgfile\"\nifelse([$1], [],\n[#! $SHELL\n\n# `$echo \"$cfgfile\" | sed 's%^.*/%%'` - Provide generalized library-building support services.\n# Generated automatically by $PROGRAM (GNU $PACKAGE $VERSION$TIMESTAMP)\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n#\n# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001\n# Free Software Foundation, Inc.\n#\n# This file is part of GNU Libtool:\n# Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# A sed program that does not truncate output.\nSED=$lt_SED\n\n# Sed that helps us avoid accidentally triggering echo(1) options like -n.\nXsed=\"$SED -e 1s/^X//\"\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n# The names of the tagged configurations supported by this script.\navailable_tags=\n\n# ### BEGIN LIBTOOL CONFIG],\n[# ### BEGIN LIBTOOL TAG CONFIG: $tagname])\n\n# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:\n\n# Shell to use when invoking shell scripts.\nSHELL=$lt_SHELL\n\n# Whether or not to build shared libraries.\nbuild_libtool_libs=$enable_shared\n\n# Whether or not to build static libraries.\nbuild_old_libs=$enable_static\n\n# Whether or not to add -lc for building shared libraries.\nbuild_libtool_need_lc=$_LT_AC_TAGVAR(archive_cmds_need_lc, $1)\n\n# Whether or not to disallow shared libs when runtime libs are static\nallow_libtool_libs_with_static_runtimes=$_LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)\n\n# Whether or not to optimize for fast installation.\nfast_install=$enable_fast_install\n\n# The host system.\nhost_alias=$host_alias\nhost=$host\nhost_os=$host_os\n\n# The build system.\nbuild_alias=$build_alias\nbuild=$build\nbuild_os=$build_os\n\n# An echo program that does not interpret backslashes.\necho=$lt_echo\n\n# The archiver.\nAR=$lt_AR\nAR_FLAGS=$lt_AR_FLAGS\n\n# A C compiler.\nLTCC=$lt_LTCC\n\n# LTCC compiler flags.\nLTCFLAGS=$lt_LTCFLAGS\n\n# A language-specific compiler.\nCC=$lt_[]_LT_AC_TAGVAR(compiler, $1)\n\n# Is the compiler the GNU C compiler?\nwith_gcc=$_LT_AC_TAGVAR(GCC, $1)\n\n# An ERE matcher.\nEGREP=$lt_EGREP\n\n# The linker used to build libraries.\nLD=$lt_[]_LT_AC_TAGVAR(LD, $1)\n\n# Whether we need hard or soft links.\nLN_S=$lt_LN_S\n\n# A BSD-compatible nm program.\nNM=$lt_NM\n\n# A symbol stripping program\nSTRIP=$lt_STRIP\n\n# Used to examine libraries when file_magic_cmd begins \"file\"\nMAGIC_CMD=$MAGIC_CMD\n\n# Used on cygwin: DLL creation program.\nDLLTOOL=\"$DLLTOOL\"\n\n# Used on cygwin: object dumper.\nOBJDUMP=\"$OBJDUMP\"\n\n# Used on cygwin: assembler.\nAS=\"$AS\"\n\n# The name of the directory that contains temporary libtool files.\nobjdir=$objdir\n\n# How to create reloadable object files.\nreload_flag=$lt_reload_flag\nreload_cmds=$lt_reload_cmds\n\n# How to pass a linker flag through the compiler.\nwl=$lt_[]_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)\n\n# Object file suffix (normally \"o\").\nobjext=\"$ac_objext\"\n\n# Old archive suffix (normally \"a\").\nlibext=\"$libext\"\n\n# Shared library suffix (normally \".so\").\nshrext_cmds='$shrext_cmds'\n\n# Executable file suffix (normally \"\").\nexeext=\"$exeext\"\n\n# Additional compiler flags for building library objects.\npic_flag=$lt_[]_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)\npic_mode=$pic_mode\n\n# What is the maximum length of a command?\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n\n# Does compiler simultaneously support -c and -o options?\ncompiler_c_o=$lt_[]_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)\n\n# Must we lock files when doing compilation?\nneed_locks=$lt_need_locks\n\n# Do we need the lib prefix for modules?\nneed_lib_prefix=$need_lib_prefix\n\n# Do we need a version for libraries?\nneed_version=$need_version\n\n# Whether dlopen is supported.\ndlopen_support=$enable_dlopen\n\n# Whether dlopen of programs is supported.\ndlopen_self=$enable_dlopen_self\n\n# Whether dlopen of statically linked programs is supported.\ndlopen_self_static=$enable_dlopen_self_static\n\n# Compiler flag to prevent dynamic linking.\nlink_static_flag=$lt_[]_LT_AC_TAGVAR(lt_prog_compiler_static, $1)\n\n# Compiler flag to turn off builtin functions.\nno_builtin_flag=$lt_[]_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\n\n# Compiler flag to allow reflexive dlopens.\nexport_dynamic_flag_spec=$lt_[]_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)\n\n# Compiler flag to generate shared objects directly from archives.\nwhole_archive_flag_spec=$lt_[]_LT_AC_TAGVAR(whole_archive_flag_spec, $1)\n\n# Compiler flag to generate thread-safe objects.\nthread_safe_flag_spec=$lt_[]_LT_AC_TAGVAR(thread_safe_flag_spec, $1)\n\n# Library versioning type.\nversion_type=$version_type\n\n# Format of library name prefix.\nlibname_spec=$lt_libname_spec\n\n# List of archive names.  First name is the real one, the rest are links.\n# The last name is the one that the linker finds with -lNAME.\nlibrary_names_spec=$lt_library_names_spec\n\n# The coded name of the library, if different from the real name.\nsoname_spec=$lt_soname_spec\n\n# Commands used to build and install an old-style archive.\nRANLIB=$lt_RANLIB\nold_archive_cmds=$lt_[]_LT_AC_TAGVAR(old_archive_cmds, $1)\nold_postinstall_cmds=$lt_old_postinstall_cmds\nold_postuninstall_cmds=$lt_old_postuninstall_cmds\n\n# Create an old-style archive from a shared archive.\nold_archive_from_new_cmds=$lt_[]_LT_AC_TAGVAR(old_archive_from_new_cmds, $1)\n\n# Create a temporary old-style archive to link instead of a shared archive.\nold_archive_from_expsyms_cmds=$lt_[]_LT_AC_TAGVAR(old_archive_from_expsyms_cmds, $1)\n\n# Commands used to build and install a shared archive.\narchive_cmds=$lt_[]_LT_AC_TAGVAR(archive_cmds, $1)\narchive_expsym_cmds=$lt_[]_LT_AC_TAGVAR(archive_expsym_cmds, $1)\npostinstall_cmds=$lt_postinstall_cmds\npostuninstall_cmds=$lt_postuninstall_cmds\n\n# Commands used to build a loadable module (assumed same as above if empty)\nmodule_cmds=$lt_[]_LT_AC_TAGVAR(module_cmds, $1)\nmodule_expsym_cmds=$lt_[]_LT_AC_TAGVAR(module_expsym_cmds, $1)\n\n# Commands to strip libraries.\nold_striplib=$lt_old_striplib\nstriplib=$lt_striplib\n\n# Dependencies to place before the objects being linked to create a\n# shared library.\npredep_objects=$lt_[]_LT_AC_TAGVAR(predep_objects, $1)\n\n# Dependencies to place after the objects being linked to create a\n# shared library.\npostdep_objects=$lt_[]_LT_AC_TAGVAR(postdep_objects, $1)\n\n# Dependencies to place before the objects being linked to create a\n# shared library.\npredeps=$lt_[]_LT_AC_TAGVAR(predeps, $1)\n\n# Dependencies to place after the objects being linked to create a\n# shared library.\npostdeps=$lt_[]_LT_AC_TAGVAR(postdeps, $1)\n\n# The library search path used internally by the compiler when linking\n# a shared library.\ncompiler_lib_search_path=$lt_[]_LT_AC_TAGVAR(compiler_lib_search_path, $1)\n\n# Method to check whether dependent libraries are shared objects.\ndeplibs_check_method=$lt_deplibs_check_method\n\n# Command to use when deplibs_check_method == file_magic.\nfile_magic_cmd=$lt_file_magic_cmd\n\n# Flag that allows shared libraries with undefined symbols to be built.\nallow_undefined_flag=$lt_[]_LT_AC_TAGVAR(allow_undefined_flag, $1)\n\n# Flag that forces no undefined symbols.\nno_undefined_flag=$lt_[]_LT_AC_TAGVAR(no_undefined_flag, $1)\n\n# Commands used to finish a libtool library installation in a directory.\nfinish_cmds=$lt_finish_cmds\n\n# Same as above, but a single script fragment to be evaled but not shown.\nfinish_eval=$lt_finish_eval\n\n# Take the output of nm and produce a listing of raw symbols and C names.\nglobal_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe\n\n# Transform the output of nm in a proper C declaration\nglobal_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl\n\n# Transform the output of nm in a C name address pair\nglobal_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address\n\n# This is the shared library runtime path variable.\nrunpath_var=$runpath_var\n\n# This is the shared library path variable.\nshlibpath_var=$shlibpath_var\n\n# Is shlibpath searched before the hard-coded library search path?\nshlibpath_overrides_runpath=$shlibpath_overrides_runpath\n\n# How to hardcode a shared library path into an executable.\nhardcode_action=$_LT_AC_TAGVAR(hardcode_action, $1)\n\n# Whether we should hardcode library paths into libraries.\nhardcode_into_libs=$hardcode_into_libs\n\n# Flag to hardcode \\$libdir into a binary during linking.\n# This must work even if \\$libdir does not exist.\nhardcode_libdir_flag_spec=$lt_[]_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)\n\n# If ld is used when linking, flag to hardcode \\$libdir into\n# a binary during linking. This must work even if \\$libdir does\n# not exist.\nhardcode_libdir_flag_spec_ld=$lt_[]_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)\n\n# Whether we need a single -rpath flag with a separated argument.\nhardcode_libdir_separator=$lt_[]_LT_AC_TAGVAR(hardcode_libdir_separator, $1)\n\n# Set to yes if using DIR/libNAME${shared_ext} during linking hardcodes DIR into the\n# resulting binary.\nhardcode_direct=$_LT_AC_TAGVAR(hardcode_direct, $1)\n\n# Set to yes if using the -LDIR flag during linking hardcodes DIR into the\n# resulting binary.\nhardcode_minus_L=$_LT_AC_TAGVAR(hardcode_minus_L, $1)\n\n# Set to yes if using SHLIBPATH_VAR=DIR during linking hardcodes DIR into\n# the resulting binary.\nhardcode_shlibpath_var=$_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)\n\n# Set to yes if building a shared library automatically hardcodes DIR into the library\n# and all subsequent libraries and executables linked against it.\nhardcode_automatic=$_LT_AC_TAGVAR(hardcode_automatic, $1)\n\n# Variables whose values should be saved in libtool wrapper scripts and\n# restored at relink time.\nvariables_saved_for_relink=\"$variables_saved_for_relink\"\n\n# Whether libtool must link a program against all its dependency libraries.\nlink_all_deplibs=$_LT_AC_TAGVAR(link_all_deplibs, $1)\n\n# Compile-time system search path for libraries\nsys_lib_search_path_spec=$lt_sys_lib_search_path_spec\n\n# Run-time system search path for libraries\nsys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec\n\n# Fix the shell variable \\$srcfile for the compiler.\nfix_srcfile_path=\"$_LT_AC_TAGVAR(fix_srcfile_path, $1)\"\n\n# Set to yes if exported symbols are required.\nalways_export_symbols=$_LT_AC_TAGVAR(always_export_symbols, $1)\n\n# The commands to list exported symbols.\nexport_symbols_cmds=$lt_[]_LT_AC_TAGVAR(export_symbols_cmds, $1)\n\n# The commands to extract the exported symbol list from a shared archive.\nextract_expsyms_cmds=$lt_extract_expsyms_cmds\n\n# Symbols that should not be listed in the preloaded symbols.\nexclude_expsyms=$lt_[]_LT_AC_TAGVAR(exclude_expsyms, $1)\n\n# Symbols that must always be exported.\ninclude_expsyms=$lt_[]_LT_AC_TAGVAR(include_expsyms, $1)\n\nifelse([$1],[],\n[# ### END LIBTOOL CONFIG],\n[# ### END LIBTOOL TAG CONFIG: $tagname])\n\n__EOF__\n\nifelse([$1],[], [\n  case $host_os in\n  aix3*)\n    cat <<\\EOF >> \"$cfgfile\"\n\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test \"X${COLLECT_NAMES+set}\" != Xset; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\nEOF\n    ;;\n  esac\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '$q' \"$ltmain\" >> \"$cfgfile\" || (rm -f \"$cfgfile\"; exit 1)\n\n  mv -f \"$cfgfile\" \"$ofile\" || \\\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n])\nelse\n  # If there is no Makefile yet, we rely on a make rule to execute\n  # `config.status --recheck' to rerun these tests and create the\n  # libtool script then.\n  ltmain_in=`echo $ltmain | sed -e 's/\\.sh$/.in/'`\n  if test -f \"$ltmain_in\"; then\n    test -f Makefile && make \"$ltmain\"\n  fi\nfi\n])# AC_LIBTOOL_CONFIG\n\n\n# AC_LIBTOOL_PROG_COMPILER_NO_RTTI([TAGNAME])\n# -------------------------------------------\nAC_DEFUN([AC_LIBTOOL_PROG_COMPILER_NO_RTTI],\n[AC_REQUIRE([_LT_AC_SYS_COMPILER])dnl\n\n_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n\nif test \"$GCC\" = yes; then\n  _LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\n\n  AC_LIBTOOL_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],\n    lt_cv_prog_compiler_rtti_exceptions,\n    [-fno-rtti -fno-exceptions], [],\n    [_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\"$_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions\"])\nfi\n])# AC_LIBTOOL_PROG_COMPILER_NO_RTTI\n\n\n# AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE\n# ---------------------------------\nAC_DEFUN([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE],\n[AC_REQUIRE([AC_CANONICAL_HOST])\nAC_REQUIRE([AC_PROG_NM])\nAC_REQUIRE([AC_OBJEXT])\n# Check for command to grab the raw symbol name followed by C symbol from nm.\nAC_MSG_CHECKING([command to parse $NM output from $compiler object])\nAC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],\n[\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[[BCDEGRST]]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([[_A-Za-z]][[_A-Za-z0-9]]*\\)'\n\n# Transform an extracted symbol line into a proper C declaration\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n -e 's/^. .* \\(.*\\)$/extern int \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n -e 's/^: \\([[^ ]]*\\) $/  {\\\\\\\"\\1\\\\\\\", (lt_ptr) 0},/p' -e 's/^$symcode \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"\\2\\\", (lt_ptr) \\&\\2},/p'\"\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[[BCDT]]'\n  ;;\ncygwin* | mingw* | pw32*)\n  symcode='[[ABCDGISTW]]'\n  ;;\nhpux*) # Its linker distinguishes data from code symbols\n  if test \"$host_cpu\" = ia64; then\n    symcode='[[ABCDEGRST]]'\n  fi\n  lt_cv_sys_global_symbol_to_cdecl=\"sed -n -e 's/^T .* \\(.*\\)$/extern int \\1();/p' -e 's/^$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n  lt_cv_sys_global_symbol_to_c_name_address=\"sed -n -e 's/^: \\([[^ ]]*\\) $/  {\\\\\\\"\\1\\\\\\\", (lt_ptr) 0},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"\\2\\\", (lt_ptr) \\&\\2},/p'\"\n  ;;\nlinux*)\n  if test \"$host_cpu\" = ia64; then\n    symcode='[[ABCDGIRSTW]]'\n    lt_cv_sys_global_symbol_to_cdecl=\"sed -n -e 's/^T .* \\(.*\\)$/extern int \\1();/p' -e 's/^$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n    lt_cv_sys_global_symbol_to_c_name_address=\"sed -n -e 's/^: \\([[^ ]]*\\) $/  {\\\\\\\"\\1\\\\\\\", (lt_ptr) 0},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"\\2\\\", (lt_ptr) \\&\\2},/p'\"\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[[BCDEGRST]]'\n  ;;\nosf*)\n  symcode='[[BCDEGQRST]]'\n  ;;\nsolaris*)\n  symcode='[[BDRT]]'\n  ;;\nsco3.2v5*)\n  symcode='[[DT]]'\n  ;;\nsysv4.2uw2*)\n  symcode='[[DT]]'\n  ;;\nsysv5* | sco5v6* | unixware* | OpenUNIX*)\n  symcode='[[ABDT]]'\n  ;;\nsysv4)\n  symcode='[[DFNSTU]]'\n  ;;\nesac\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`echo 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[[ABCDGIRSTW]]' ;;\nesac\n\n# Try without a prefix undercore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[[ \t]]\\($symcode$symcode*\\)[[ \t]][[ \t]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\nEOF\n\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| $lt_cv_sys_global_symbol_pipe \\> $nlist) && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if grep ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif grep ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<EOF > conftest.$ac_ext\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\nEOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | grep -v main >> conftest.$ac_ext'\n\n\t  cat <<EOF >> conftest.$ac_ext\n#if defined (__STDC__) && __STDC__\n# define lt_ptr_t void *\n#else\n# define lt_ptr_t char *\n# define const\n#endif\n\n/* The mapping between symbol names and symbols. */\nconst struct {\n  const char *name;\n  lt_ptr_t address;\n}\nlt_preloaded_symbols[[]] =\n{\nEOF\n\t  $SED \"s/^$symcode$symcode* \\(.*\\) \\(.*\\)$/  {\\\"\\2\\\", (lt_ptr_t) \\&\\2},/\" < \"$nlist\" | grep -v main >> conftest.$ac_ext\n\t  cat <<\\EOF >> conftest.$ac_ext\n  {0, (lt_ptr_t) 0}\n};\n\n#ifdef __cplusplus\n}\n#endif\nEOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_save_LIBS=\"$LIBS\"\n\t  lt_save_CFLAGS=\"$CFLAGS\"\n\t  LIBS=\"conftstm.$ac_objext\"\n\t  CFLAGS=\"$CFLAGS$_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\"\n\t  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext}; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=\"$lt_save_LIBS\"\n\t  CFLAGS=\"$lt_save_CFLAGS\"\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&AS_MESSAGE_LOG_FD\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&AS_MESSAGE_LOG_FD\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"$progname: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.$ac_ext >&5\n  fi\n  rm -f conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test \"$pipe_works\" = yes; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n])\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  AC_MSG_RESULT(failed)\nelse\n  AC_MSG_RESULT(ok)\nfi\n]) # AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE\n\n\n# AC_LIBTOOL_PROG_COMPILER_PIC([TAGNAME])\n# ---------------------------------------\nAC_DEFUN([AC_LIBTOOL_PROG_COMPILER_PIC],\n[_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)=\n_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n_LT_AC_TAGVAR(lt_prog_compiler_static, $1)=\n\nAC_MSG_CHECKING([for $compiler option to produce PIC])\n ifelse([$1],[CXX],[\n  # C++ specific cases for pic, static, wl, etc.\n  if test \"$GXX\" = yes; then\n    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n    amigaos*)\n      # FIXME: we need at least 68020 code to build shared libraries, but\n      # adding the `-m68020' flag to GCC prevents building anything better,\n      # like `-m68040'.\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n      ;;\n    beos* | cygwin* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | os2* | pw32*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n      ;;\n    interix3*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t;;\n      *)\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n    *)\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix4* | aix5*)\n\t# All AIX code is PIC.\n\tif test \"$host_cpu\" = ia64; then\n\t  # AIX 5 now supports IA64 processor\n\t  _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\telse\n\t  _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_AC_TAGVAR(lt_prog_compiler_static, $1)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n       darwin*)\n         # PIC is the default on this platform\n         # Common symbols not allowed in MH_DYLIB files\n         case $cc_basename in\n           xlc*)\n           _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-qnocommon'\n           _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n           ;;\n         esac\n       ;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | kfreebsd*-gnu | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n\t    if test \"$host_cpu\" != ia64; then\n\t      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n\t    case $host_cpu in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      interix*)\n\t# This is c89, which is MS Visual C++ (no shared libs)\n\t# Anyone wants to do a port?\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    ;;\n\t  icpc* | ecpc*)\n\t    # Intel C++\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  pgCC*)\n\t    # Portland Group C++ compiler.\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd*)\n\t;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\tesac\n\t;;\n      vxworks*)\n\t;;\n      *)\n\t_LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n\t;;\n    esac\n  fi\n],\n[\n  if test \"$GCC\" = yes; then\n    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    amigaos*)\n      # FIXME: we need at least 68020 code to build shared libraries, but\n      # adding the `-m68020' flag to GCC prevents building anything better,\n      # like `-m68040'.\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n      ;;\n\n    beos* | cygwin* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | pw32* | os2*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n\n    interix3*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      _LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      enable_shared=no\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n\n    hpux*)\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n\n    *)\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      else\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n      darwin*)\n        # PIC is the default on this platform\n        # Common symbols not allowed in MH_DYLIB files\n       case $cc_basename in\n         xlc*)\n         _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-qnocommon'\n         _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n         ;;\n       esac\n       ;;\n\n    mingw* | pw32* | os2*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC (with -KPIC) is the default.\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    newsos6)\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    linux*)\n      case $cc_basename in\n      icc* | ecc*)\n\t_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      pgcc* | pgf77* | pgf90* | pgf95*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\t_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      ccc*)\n        _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n        # All Alpha code is PIC.\n        _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n        ;;\n      esac\n      ;;\n\n    osf3* | osf4* | osf5*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # All OSF/1 code is PIC.\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    solaris*)\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95*)\n\t_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;\n      *)\n\t_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec ;then\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    unicos*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n\n    uts4*)\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *)\n      _LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n    esac\n  fi\n])\nAC_MSG_RESULT([$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)])\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n  AC_LIBTOOL_COMPILER_OPTION([if $compiler PIC flag $_LT_AC_TAGVAR(lt_prog_compiler_pic, $1) works],\n    _LT_AC_TAGVAR(lt_prog_compiler_pic_works, $1),\n    [$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)ifelse([$1],[],[ -DPIC],[ifelse([$1],[CXX],[ -DPIC],[])])], [],\n    [case $_LT_AC_TAGVAR(lt_prog_compiler_pic, $1) in\n     \"\" | \" \"*) ;;\n     *) _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\" $_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)\" ;;\n     esac],\n    [_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n     _LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])\nfi\ncase $host_os in\n  # For platforms which do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n    ;;\n  *)\n    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\"$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)ifelse([$1],[],[ -DPIC],[ifelse([$1],[CXX],[ -DPIC],[])])\"\n    ;;\nesac\n\n#\n# Check to make sure the static flag actually works.\n#\nwl=$_LT_AC_TAGVAR(lt_prog_compiler_wl, $1) eval lt_tmp_static_flag=\\\"$_LT_AC_TAGVAR(lt_prog_compiler_static, $1)\\\"\nAC_LIBTOOL_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works],\n  _LT_AC_TAGVAR(lt_prog_compiler_static_works, $1),\n  $lt_tmp_static_flag,\n  [],\n  [_LT_AC_TAGVAR(lt_prog_compiler_static, $1)=])\n])\n\n\n# AC_LIBTOOL_PROG_LD_SHLIBS([TAGNAME])\n# ------------------------------------\n# See if the linker supports building shared libraries.\nAC_DEFUN([AC_LIBTOOL_PROG_LD_SHLIBS],\n[AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\nifelse([$1],[CXX],[\n  _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  case $host_os in\n  aix4* | aix5*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to AIX nm, but means don't demangle with GNU nm\n    if $NM -V 2>&1 | grep 'GNU' > /dev/null; then\n      _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\[$]2 == \"T\") || (\\[$]2 == \"D\") || (\\[$]2 == \"B\")) && ([substr](\\[$]3,1,1) != \".\")) { print \\[$]3 } }'\\'' | sort -u > $export_symbols'\n    else\n      _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\[$]2 == \"T\") || (\\[$]2 == \"D\") || (\\[$]2 == \"B\")) && ([substr](\\[$]3,1,1) != \".\")) { print \\[$]3 } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    _LT_AC_TAGVAR(export_symbols_cmds, $1)=\"$ltdll_cmds\"\n  ;;\n  cygwin* | mingw*)\n    _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]] /s/.* \\([[^ ]]*\\)/\\1 DATA/;/^.* __nm__/s/^.* __nm__\\([[^ ]]*\\) [[^ ]]*/\\1 DATA/;/^I /d;/^[[AITW]] /s/.* //'\\'' | sort | uniq > $export_symbols'\n  ;;\n  *)\n    _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  ;;\n  esac\n],[\n  runpath_var=\n  _LT_AC_TAGVAR(allow_undefined_flag, $1)=\n  _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n  _LT_AC_TAGVAR(archive_cmds, $1)=\n  _LT_AC_TAGVAR(archive_expsym_cmds, $1)=\n  _LT_AC_TAGVAR(old_archive_From_new_cmds, $1)=\n  _LT_AC_TAGVAR(old_archive_from_expsyms_cmds, $1)=\n  _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=\n  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n  _LT_AC_TAGVAR(thread_safe_flag_spec, $1)=\n  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=\n  _LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=\n  _LT_AC_TAGVAR(hardcode_direct, $1)=no\n  _LT_AC_TAGVAR(hardcode_minus_L, $1)=no\n  _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  _LT_AC_TAGVAR(link_all_deplibs, $1)=unknown\n  _LT_AC_TAGVAR(hardcode_automatic, $1)=no\n  _LT_AC_TAGVAR(module_cmds, $1)=\n  _LT_AC_TAGVAR(module_expsym_cmds, $1)=\n  _LT_AC_TAGVAR(always_export_symbols, $1)=no\n  _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  _LT_AC_TAGVAR(include_expsyms, $1)=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ` (' and `)$', so one must not match beginning or\n  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',\n  # as well as any symbol that contains `d'.\n  _LT_AC_TAGVAR(exclude_expsyms, $1)=\"_GLOBAL_OFFSET_TABLE_\"\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  extract_expsyms_cmds=\n  # Just being paranoid about ensuring that cc_basename is set.\n  _LT_CC_BASENAME([$compiler])\n  case $host_os in\n  cygwin* | mingw* | pw32*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test \"$GCC\" != yes; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++)\n    with_gnu_ld=yes\n    ;;\n  openbsd*)\n    with_gnu_ld=no\n    ;;\n  esac\n\n  _LT_AC_TAGVAR(ld_shlibs, $1)=yes\n  if test \"$with_gnu_ld\" = yes; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='${wl}'\n\n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'\n    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | grep 'no-whole-archive' > /dev/null; then\n\t_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n      else\n  \t_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v 2>/dev/null` in\n      *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n\n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix3* | aix4* | aix5*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test \"$host_cpu\" != ia64; then\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tcat <<EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.9.1, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to modify your PATH\n*** so that a non-GNU linker is found, and then restart.\n\nEOF\n      fi\n      ;;\n\n    amigaos*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/a2ixlibrary.data~$echo \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$echo \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$echo \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$echo \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n\n      # Samuel A. Falvo II <kc5tja@dolphin.openprojects.net> reports\n      # that the semantics of dynamic libraries on AmigaOS, at least up\n      # to version 4, is to share data among multiple programs linked\n      # with the same dynamic library.  Since this doesn't match the\n      # behavior of shared libraries on other platforms, we can't use\n      # them.\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n      else\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32*)\n      # _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n      # as there is no search path for DLLs.\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_AC_TAGVAR(always_export_symbols, $1)=no\n      _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]] /s/.* \\([[^ ]]*\\)/\\1 DATA/'\\'' | $SED -e '\\''/^[[AITW]] /s/.* //'\\'' | sort | uniq > $export_symbols'\n\n      if $LD --help 2>&1 | grep 'auto-import' > /dev/null; then\n        _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t# If the export-symbols file already is a .def file (1st line\n\t# is EXPORTS), use it as is; otherwise, prepend...\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t  cp $export_symbols $output_objdir/$soname.def;\n\telse\n\t  echo EXPORTS > $output_objdir/$soname.def;\n\t  cat $export_symbols >> $output_objdir/$soname.def;\n\tfi~\n\t$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      else\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    interix3*)\n      _LT_AC_TAGVAR(hardcode_direct, $1)=no\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n      # Instead, shared libraries are loaded at an image base (0x10000000 by\n      # default) and relocated if they conflict, which is a slow very memory\n      # consuming and fragmenting process.  To avoid this, we pick a random,\n      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed \"s,^,_,\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      ;;\n\n    linux*)\n      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n\ttmp_addflag=\n\tcase $cc_basename,$host_cpu in\n\tpgcc*)\t\t\t\t# Portland Group C compiler\n\t  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; $echo \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  tmp_addflag=' $pic_flag'\n\t  ;;\n\tpgf77* | pgf90* | pgf95*)\t# Portland Group f77 and f90 compilers\n\t  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; $echo \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  tmp_addflag=' $pic_flag -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tesac\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\n\tif test $supports_anon_versioning = yes; then\n\t  _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $output_objdir/$libname.ver~\n  cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n  $echo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t  $CC -shared'\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'\n\tfi\n      else\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris*)\n      if $LD -v 2>&1 | grep 'BFD 2\\.8' > /dev/null; then\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tcat <<EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\nEOF\n      elif $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.1[[0-5]].*) \n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not\n*** reliably create shared libraries on SCO systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n\t;;\n\t*)\n\t  if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n\t    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='`test -z \"$SCOABSPATH\" && echo ${wl}-rpath,$libdir`'\n\t    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib'\n\t    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname,\\${SCOABSPATH:+${install_libdir}/}$soname,-retain-symbols-file,$export_symbols -o $lib'\n\t  else\n\t    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t;;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n\n    if test \"$_LT_AC_TAGVAR(ld_shlibs, $1)\" = no; then\n      runpath_var=\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_AC_TAGVAR(always_export_symbols, $1)=yes\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      if test \"$GCC\" = yes && test -z \"$lt_prog_compiler_static\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\t_LT_AC_TAGVAR(hardcode_direct, $1)=unsupported\n      fi\n      ;;\n\n    aix4* | aix5*)\n      if test \"$host_cpu\" = ia64; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\"\"\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to AIX nm, but means don't demangle with GNU nm\n\tif $NM -V 2>&1 | grep 'GNU' > /dev/null; then\n\t  _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\[$]2 == \"T\") || (\\[$]2 == \"D\") || (\\[$]2 == \"B\")) && ([substr](\\[$]3,1,1) != \".\")) { print \\[$]3 } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\[$]2 == \"T\") || (\\[$]2 == \"D\") || (\\[$]2 == \"B\")) && ([substr](\\[$]3,1,1) != \".\")) { print \\[$]3 } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# need to do runtime linking.\n\tcase $host_os in aix4.[[23]]|aix4.[[23]].*|aix5*)\n\t  for ld_flag in $LDFLAGS; do\n  \t  if (test $ld_flag = \"-brtl\" || test $ld_flag = \"-Wl,-brtl\"); then\n  \t    aix_use_runtimelinking=yes\n  \t    break\n  \t  fi\n\t  done\n\t  ;;\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      _LT_AC_TAGVAR(archive_cmds, $1)=''\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n\n      if test \"$GCC\" = yes; then\n\tcase $host_os in aix4.[[012]]|aix4.[[012]].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`${CC} -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" && \\\n  \t   strings \"$collect2name\" | grep resolve_lib_name >/dev/null\n\t  then\n  \t  # We have reworked collect2\n  \t  _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n\t  else\n  \t  # We have old collect2\n  \t  _LT_AC_TAGVAR(hardcode_direct, $1)=unsupported\n  \t  # It fails to find uninstalled libraries when the uninstalled\n  \t  # path is not listed in the libpath.  Setting hardcode_minus_L\n  \t  # to unsupported forces relinking\n  \t  _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n  \t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n  \t  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n\t  ;;\n\tesac\n\tshared_flag='-shared'\n\tif test \"$aix_use_runtimelinking\" = yes; then\n\t  shared_flag=\"$shared_flag \"'${wl}-G'\n\tfi\n      else\n\t# not using gcc\n\tif test \"$host_cpu\" = ia64; then\n  \t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n  \t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n\t  if test \"$aix_use_runtimelinking\" = yes; then\n\t    shared_flag='${wl}-G'\n\t  else\n\t    shared_flag='${wl}-bM:SRE'\n\t  fi\n\tfi\n      fi\n\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      _LT_AC_TAGVAR(always_export_symbols, $1)=yes\n      if test \"$aix_use_runtimelinking\" = yes; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)='-berok'\n       # Determine the default libpath from the value encoded in an empty executable.\n       _LT_AC_SYS_LIBPATH_AIX\n       _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags `if test \"x${allow_undefined_flag}\" != \"x\"; then echo \"${wl}${allow_undefined_flag}\"; else :; fi` '\"\\${wl}$exp_sym_flag:\\$export_symbols $shared_flag\"\n       else\n\tif test \"$host_cpu\" = ia64; then\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'\n\t  _LT_AC_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t  _LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an empty executable.\n\t _LT_AC_SYS_LIBPATH_AIX\n\t _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  _LT_AC_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'\n\t  _LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'\n\t  # Exported symbols can be pulled into shared objects from archives\n\t  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t  _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  # This is similar to how AIX traditionally builds its shared libraries.\n\t  _LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/a2ixlibrary.data~$echo \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$echo \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$echo \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$echo \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      # see comment about different semantics on the GNU ld section\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      ;;\n\n    bsdi[[45]]*)\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n      # Tell ltmain to make .lib files, not .a files.\n      libext=lib\n      # Tell ltmain to make .dll files, not .so files.\n      shrext_cmds=\".dll\"\n      # FIXME: Setting linknames here is a bad hack.\n      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `echo \"$deplibs\" | $SED -e '\\''s/ -lc$//'\\''` -link -dll~linknames='\n      # The linker will automatically build a .lib file if we build a DLL.\n      _LT_AC_TAGVAR(old_archive_From_new_cmds, $1)='true'\n      # FIXME: Should let the user specify the lib program.\n      _LT_AC_TAGVAR(old_archive_cmds, $1)='lib /OUT:$oldlib$oldobjs$old_deplibs'\n      _LT_AC_TAGVAR(fix_srcfile_path, $1)='`cygpath -w \"$srcfile\"`'\n      _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      ;;\n\n    darwin* | rhapsody*)\n      case $host_os in\n        rhapsody* | darwin1.[[012]])\n         _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-undefined ${wl}suppress'\n         ;;\n       *) # Darwin 1.3 on\n         if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then\n           _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'\n         else\n           case ${MACOSX_DEPLOYMENT_TARGET} in\n             10.[[012]])\n               _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'\n               ;;\n             10.*)\n               _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-undefined ${wl}dynamic_lookup'\n               ;;\n           esac\n         fi\n         ;;\n      esac\n      _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_AC_TAGVAR(hardcode_direct, $1)=no\n      _LT_AC_TAGVAR(hardcode_automatic, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=''\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n    if test \"$GCC\" = yes ; then\n    \toutput_verbose_link_cmd='echo'\n        _LT_AC_TAGVAR(archive_cmds, $1)='$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring'\n      _LT_AC_TAGVAR(module_cmds, $1)='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'\n      # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n      _LT_AC_TAGVAR(module_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n    else\n      case $cc_basename in\n        xlc*)\n         output_verbose_link_cmd='echo'\n         _LT_AC_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}`echo $rpath/$soname` $verstring'\n         _LT_AC_TAGVAR(module_cmds, $1)='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'\n          # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds\n         _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -qmkshrobj $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}$rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          _LT_AC_TAGVAR(module_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          ;;\n       *)\n         _LT_AC_TAGVAR(ld_shlibs, $1)=no\n          ;;\n      esac\n    fi\n      ;;\n\n    dgux*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    freebsd1*)\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | kfreebsd*-gnu | dragonfly*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -o $lib $libobjs $deplibs $compiler_flags'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    hpux9*)\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/$soname~$CC -shared -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      ;;\n\n    hpux10*)\n      if test \"$GCC\" = yes -a \"$with_gnu_ld\" = no; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      if test \"$with_gnu_ld\" = no; then\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t_LT_AC_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\n\t# hardcode_minus_L: Not really in the search PATH,\n\t# but as the default location of the library.\n\t_LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      fi\n      ;;\n\n    hpux11*)\n      if test \"$GCC\" = yes -a \"$with_gnu_ld\" = no; then\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      fi\n      if test \"$with_gnu_ld\" = no; then\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\tcase $host_cpu in\n\thppa*64*|ia64*)\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='+b $libdir'\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=no\n\t  _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  ;;\n\t*)\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='-rpath $libdir'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    newsos6)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    openbsd*)\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      else\n       case $host_os in\n\t openbsd[[01]].* | openbsd2.[[0-7]] | openbsd2.[[0-7]].*)\n\t   _LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n\t   _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t   ;;\n\t *)\n\t   _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t   _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t   ;;\n       esac\n      fi\n      ;;\n\n    os2*)\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_AC_TAGVAR(archive_cmds, $1)='$echo \"LIBRARY $libname INITINSTANCE\" > $output_objdir/$libname.def~$echo \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~$echo DATA >> $output_objdir/$libname.def~$echo \" SINGLE NONSHARED\" >> $output_objdir/$libname.def~$echo EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'\n      _LT_AC_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'\n      ;;\n\n    osf3*)\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n      else\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -shared${allow_undefined_flag} $libobjs $deplibs $linker_flags -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      else\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -shared${allow_undefined_flag} $libobjs $deplibs $linker_flags -msym -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; echo \"-hidden\">> $lib.exp~\n\t$LD -shared${allow_undefined_flag} -input $lib.exp $linker_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib~$rm $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    solaris*)\n      _LT_AC_TAGVAR(no_undefined_flag, $1)=' -z text'\n      if test \"$GCC\" = yes; then\n\twlarc='${wl}'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n\t  $CC -shared ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$rm $lib.exp'\n      else\n\twlarc=''\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n  \t$LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$rm $lib.exp'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      case $host_os in\n      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n      *)\n \t# The compiler driver will combine linker options so we\n \t# cannot just pass the convience library names through\n \t# without $wl, iff we do not link with $LD.\n \t# Luckily, gcc supports the same syntax we need for Sun Studio.\n \t# Supported since Solaris 2.6 (maybe 2.5.1?)\n \tcase $wlarc in\n \t'')\n \t  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract' ;;\n \t*)\n \t  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract`for conv in $convenience\\\"\\\"; do test -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; $echo \\\"$new_convenience\\\"` ${wl}-z ${wl}defaultextract' ;;\n \tesac ;;\n      esac\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    sunos4*)\n      if test \"x$host_vendor\" = xsequent; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_AC_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=no\n        ;;\n\tmotorola)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4.3*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=yes\n      fi\n      ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7*)\n      _LT_AC_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6*)\n      # Note: We can NOT use -z defs as we might desire, because we do not\n      # link with -lc, and that would cause any symbols used from libc to\n      # always be unresolved, which means just about no library would\n      # ever link correctly.  If we're not using GNU ld we use -z text\n      # though, which does catch some bad symbols but isn't as heavy-handed\n      # as -z defs.\n      _LT_AC_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'\n      _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='`test -z \"$SCOABSPATH\" && echo ${wl}-R,$libdir`'\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'\n      runpath_var='LD_RUN_PATH'\n\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    uts4*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    esac\n  fi\n])\nAC_MSG_RESULT([$_LT_AC_TAGVAR(ld_shlibs, $1)])\ntest \"$_LT_AC_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$_LT_AC_TAGVAR(archive_cmds_need_lc, $1)\" in\nx|xyes)\n  # Assume -lc should be added\n  _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=yes\n\n  if test \"$enable_shared\" = yes && test \"$GCC\" = yes; then\n    case $_LT_AC_TAGVAR(archive_cmds, $1) in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      AC_MSG_CHECKING([whether -lc should be explicitly linked in])\n      $rm conftest*\n      printf \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n      if AC_TRY_EVAL(ac_compile) 2>conftest.err; then\n        soname=conftest\n        lib=conftest\n        libobjs=conftest.$ac_objext\n        deplibs=\n        wl=$_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)\n\tpic_flag=$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)\n        compiler_flags=-v\n        linker_flags=-v\n        verstring=\n        output_objdir=.\n        libname=conftest\n        lt_save_allow_undefined_flag=$_LT_AC_TAGVAR(allow_undefined_flag, $1)\n        _LT_AC_TAGVAR(allow_undefined_flag, $1)=\n        if AC_TRY_EVAL(_LT_AC_TAGVAR(archive_cmds, $1) 2\\>\\&1 \\| grep \\\" -lc \\\" \\>/dev/null 2\\>\\&1)\n        then\n\t  _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n        else\n\t  _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=yes\n        fi\n        _LT_AC_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag\n      else\n        cat conftest.err 1>&5\n      fi\n      $rm conftest*\n      AC_MSG_RESULT([$_LT_AC_TAGVAR(archive_cmds_need_lc, $1)])\n      ;;\n    esac\n  fi\n  ;;\nesac\n])# AC_LIBTOOL_PROG_LD_SHLIBS\n\n\n# _LT_AC_FILE_LTDLL_C\n# -------------------\n# Be careful that the start marker always follows a newline.\nAC_DEFUN([_LT_AC_FILE_LTDLL_C], [\n# /* ltdll.c starts here */\n# #define WIN32_LEAN_AND_MEAN\n# #include <windows.h>\n# #undef WIN32_LEAN_AND_MEAN\n# #include <stdio.h>\n#\n# #ifndef __CYGWIN__\n# #  ifdef __CYGWIN32__\n# #    define __CYGWIN__ __CYGWIN32__\n# #  endif\n# #endif\n#\n# #ifdef __cplusplus\n# extern \"C\" {\n# #endif\n# BOOL APIENTRY DllMain (HINSTANCE hInst, DWORD reason, LPVOID reserved);\n# #ifdef __cplusplus\n# }\n# #endif\n#\n# #ifdef __CYGWIN__\n# #include <cygwin/cygwin_dll.h>\n# DECLARE_CYGWIN_DLL( DllMain );\n# #endif\n# HINSTANCE __hDllInstance_base;\n#\n# BOOL APIENTRY\n# DllMain (HINSTANCE hInst, DWORD reason, LPVOID reserved)\n# {\n#   __hDllInstance_base = hInst;\n#   return TRUE;\n# }\n# /* ltdll.c ends here */\n])# _LT_AC_FILE_LTDLL_C\n\n\n# _LT_AC_TAGVAR(VARNAME, [TAGNAME])\n# ---------------------------------\nAC_DEFUN([_LT_AC_TAGVAR], [ifelse([$2], [], [$1], [$1_$2])])\n\n\n# old names\nAC_DEFUN([AM_PROG_LIBTOOL],   [AC_PROG_LIBTOOL])\nAC_DEFUN([AM_ENABLE_SHARED],  [AC_ENABLE_SHARED($@)])\nAC_DEFUN([AM_ENABLE_STATIC],  [AC_ENABLE_STATIC($@)])\nAC_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])\nAC_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])\nAC_DEFUN([AM_PROG_LD],        [AC_PROG_LD])\nAC_DEFUN([AM_PROG_NM],        [AC_PROG_NM])\n\n# This is just to silence aclocal about the macro not being used\nifelse([AC_DISABLE_FAST_INSTALL])\n\nAC_DEFUN([LT_AC_PROG_GCJ],\n[AC_CHECK_TOOL(GCJ, gcj, no)\n  test \"x${GCJFLAGS+set}\" = xset || GCJFLAGS=\"-g -O2\"\n  AC_SUBST(GCJFLAGS)\n])\n\nAC_DEFUN([LT_AC_PROG_RC],\n[AC_CHECK_TOOL(RC, windres, no)\n])\n\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_SED.  When it is available in   #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\n# LT_AC_PROG_SED\n# --------------\n# Check for a fully-functional sed program, that truncates\n# as few characters as possible.  Prefer GNU sed if found.\nAC_DEFUN([LT_AC_PROG_SED],\n[AC_MSG_CHECKING([for a sed that does not truncate output])\nAC_CACHE_VAL(lt_cv_path_SED,\n[# Loop through the user's path and test for sed and gsed.\n# Then use that list of sed's as ones to test for truncation.\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  for lt_ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      if $as_executable_p \"$as_dir/$lt_ac_prog$ac_exec_ext\"; then\n        lt_ac_sed_list=\"$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext\"\n      fi\n    done\n  done\ndone\nlt_ac_max=0\nlt_ac_count=0\n# Add /usr/xpg4/bin/sed as it is typically found on Solaris\n# along with /bin/sed that truncates output.\nfor lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do\n  test ! -f $lt_ac_sed && continue\n  cat /dev/null > conftest.in\n  lt_ac_count=0\n  echo $ECHO_N \"0123456789$ECHO_C\" >conftest.in\n  # Check for GNU sed and select it if it is found.\n  if \"$lt_ac_sed\" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then\n    lt_cv_path_SED=$lt_ac_sed\n    break\n  fi\n  while true; do\n    cat conftest.in conftest.in >conftest.tmp\n    mv conftest.tmp conftest.in\n    cp conftest.in conftest.nl\n    echo >>conftest.nl\n    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break\n    cmp -s conftest.out conftest.nl || break\n    # 10000 chars as input seems more than enough\n    test $lt_ac_count -gt 10 && break\n    lt_ac_count=`expr $lt_ac_count + 1`\n    if test $lt_ac_count -gt $lt_ac_max; then\n      lt_ac_max=$lt_ac_count\n      lt_cv_path_SED=$lt_ac_sed\n    fi\n  done\ndone\n])\nSED=$lt_cv_path_SED\nAC_MSG_RESULT([$SED])\n])\n",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/src/engine/boehm_gc/Makefile.direct": "# This is the original manually generated Makefile.  It may still be used\n# to build the collector.\n#\n# Primary targets:\n# gc.a - builds basic library\n# c++ - adds C++ interface to library\n# cords - adds cords (heavyweight strings) to library\n# test - prints porting information, then builds basic version of gc.a,\n#      \t and runs some tests of collector and cords.  Does not add cords or\n#\t c++ interface to gc.a\n# cord/de - builds dumb editor based on cords.\nABI_FLAG= \n# ABI_FLAG should be the cc flag that specifies the ABI.  On most\n# platforms this will be the empty string.  Possible values:\n# +DD64 for 64-bit executable on HP/UX.\n# -n32, -n64, -o32 for SGI/MIPS ABIs.\n\nAS_ABI_FLAG=$(ABI_FLAG)\n# ABI flag for assembler.  On HP/UX this is +A64 for 64 bit\n# executables.\n\nCC=cc $(ABI_FLAG)\nCXX=g++ $(ABI_FLAG)\nAS=as $(AS_ABI_FLAG)\n#  The above doesn't work with gas, which doesn't run cpp.\n#  Define AS as `gcc -c -x assembler-with-cpp' instead.\n\n# Redefining srcdir allows object code for the nonPCR version of the collector\n# to be generated in different directories.\nsrcdir= .\nVPATH= $(srcdir)\n\n# Atomic_ops installation directory.  If this doesn't exist, we create\n# it from the included libatomic_ops distribution.\nAO_VERSION=1.2\nAO_SRC_DIR=$(srcdir)/libatomic_ops-$(AO_VERSION)\nAO_INSTALL_DIR=$(srcdir)/libatomic_ops-install\n\nCFLAGS= -O -I$(srcdir)/include -I$(AO_INSTALL_DIR)/include -DATOMIC_UNCOLLECTABLE -DNO_EXECUTE_PERMISSION -DALL_INTERIOR_POINTERS\n\n# To build the parallel collector on Linux, add to the above:\n# -DGC_LINUX_THREADS -DPARALLEL_MARK -DTHREAD_LOCAL_ALLOC\n# To build the thread-capable preload library that intercepts\n# malloc, add -DGC_USE_DLOPEN_WRAP -DREDIRECT_MALLOC=GC_malloc -fpic\n# To build the parallel collector in a static library on HP/UX,\n# add to the above:\n# -DGC_HPUX_THREADS -DTHREAD_LOCAL_ALLOC -D_POSIX_C_SOURCE=199506L -mt\n# FIXME: PARALLEL_MARK currently broken on HP/UX.\n# To build the thread-safe collector on Tru64, add to the above:\n# -pthread -DGC_OSF1_THREADS\n\n# HOSTCC and HOSTCFLAGS are used to build executables that will be run as\n# part of the build process, i.e. on the build machine.  These will usually\n# be the same as CC and CFLAGS, except in a cross-compilation environment.\n# Note that HOSTCFLAGS should include any -D flags that affect thread support.\nHOSTCC=$(CC)\nHOSTCFLAGS=$(CFLAGS)\n\n# For dynamic library builds, it may be necessary to add flags to generate\n# PIC code, e.g. -fPIC on Linux.\n\n# Setjmp_test may yield overly optimistic results when compiled\n# without optimization.\n\n# These define arguments influence the collector configuration:\n# -DFIND_LEAK causes GC_find_leak to be initially set.\n#   This causes the collector to assume that all inaccessible\n#   objects should have been explicitly deallocated, and reports exceptions.\n#   Finalization and the test program are not usable in this mode.\n#\n# IMPORTANT: Any of the _THREADS options must normally also be defined in\n# the client before including gc.h.  This redefines thread primitives to\n# invoke the GC_ versions instead.  Alternatively, linker-based symbol\n# interception can be used on a few platforms.\n# -DGC_THREADS should set the appropriate one of the below macros,\n#   except -DGC_WIN32_PTHREADS, which must be set explicitly.\n# -DGC_SOLARIS_PTHREADS enables support for Solaris pthreads.\n#   (Clients should also define GC_SOLARIS_THREADS and then include\n#   gc.h before performing thr_ or dl* or GC_ operations.)\n#   Must also define -D_REENTRANT.\n# -DGC_IRIX_THREADS enables support for Irix pthreads.  See README.irix.\n# -DGC_HPUX_THREADS enables support for HP/UX 11 pthreads.\n#   Also requires -D_REENTRANT or -D_POSIX_C_SOURCE=199506L. See README.hp.\n# -DGC_LINUX_THREADS enables support for Xavier Leroy's Linux threads\n#   or NPTL threads. See README.linux.  -D_REENTRANT may also be required.\n# -DGC_OSF1_THREADS enables support for Tru64 pthreads.\n# -DGC_FREEBSD_THREADS enables support for FreeBSD pthreads.\n#   Appeared to run into some underlying thread problems.\n# -DGC_DARWIN_THREADS enables support for Mac OS X pthreads.\n# -DGC_AIX_THREADS enables support for IBM AIX threads.\n# -DGC_DGUX386_THREADS enables support for DB/UX on I386 threads.\n#   See README.DGUX386.  (Probably has not been tested recently.)\n# -DGC_WIN32_THREADS enables support for win32 threads.  That makes sense\n#   for this Makefile only under Cygwin.\n# -DGC_WIN32_PTHREADS enables support for Ming32 pthreads.  This cannot be\n#   enabled automatically by GC_THREADS, which would assume Win32 native\n#   threads.\n# -DPTW32_STATIC_LIB causes the static version of the Mingw pthreads library\n#   to be used.  Requires -DGC_WIN32_PTHREADS.\n#   \n# -DALL_INTERIOR_POINTERS allows all pointers to the interior\n#   of objects to be recognized.  (See gc_priv.h for consequences.)\n#   Alternatively, GC_all_interior_pointers can be set at process\n#   initialization time.\n# -DSMALL_CONFIG tries to tune the collector for small heap sizes,\n#   usually causing it to use less space in such situations.\n#   Incremental collection no longer works in this case.\n# -DLARGE_CONFIG tunes the collector for unusually large heaps.\n#   Necessary for heaps larger than about 500 MB on most machines.\n#   Recommended for heaps larger than about 64 MB.\n# -DDONT_ADD_BYTE_AT_END is meaningful only with -DALL_INTERIOR_POINTERS or\n#   GC_all_interior_pointers = 1.  Normally -DALL_INTERIOR_POINTERS\n#   causes all objects to be padded so that pointers just past the end of\n#   an object can be recognized.  This can be expensive.  (The padding\n#   is normally more than one byte due to alignment constraints.)\n#   -DDONT_ADD_BYTE_AT_END disables the padding.\n# -DNO_EXECUTE_PERMISSION may cause some or all of the heap to not\n#   have execute permission, i.e. it may be impossible to execute\n#   code from the heap.  Currently this only affects the incremental\n#   collector on UNIX machines.  It may greatly improve its performance,\n#   since this may avoid some expensive cache synchronization.\n# -DGC_NO_OPERATOR_NEW_ARRAY declares that the C++ compiler does not support\n#   the  new syntax \"operator new[]\" for allocating and deleting arrays.\n#   See gc_cpp.h for details.  No effect on the C part of the collector.\n#   This is defined implicitly in a few environments.  Must also be defined\n#   by clients that use gc_cpp.h.\n# -DREDIRECT_MALLOC=X causes malloc to be defined as alias for X.\n#   Unless the following macros are defined, realloc is also redirected\n#   to GC_realloc, and free is redirected to GC_free.\n#   Calloc and strdup are redefined in terms of the new malloc.  X should\n#   be either GC_malloc or GC_malloc_uncollectable, or\n#   GC_debug_malloc_replacement.  (The latter invokes GC_debug_malloc\n#   with dummy source location information, but still results in\n#   properly remembered call stacks on Linux/X86 and Solaris/SPARC.\n#   It requires that the following two macros also be used.)\n#   The former is occasionally useful for working around leaks in code\n#   you don't want to (or can't) look at.  It may not work for\n#   existing code, but it often does.  Neither works on all platforms,\n#   since some ports use malloc or calloc to obtain system memory.\n#   (Probably works for UNIX, and win32.)  If you build with DBG_HDRS_ALL,\n#   you should only use GC_debug_malloc_replacement as a malloc\n#   replacement.\n# -DREDIRECT_REALLOC=X causes GC_realloc to be redirected to X.\n#   The canonical use is -DREDIRECT_REALLOC=GC_debug_realloc_replacement,\n#   together with -DREDIRECT_MALLOC=GC_debug_malloc_replacement to\n#   generate leak reports with call stacks for both malloc and realloc.\n#   This also requires the following:\n# -DREDIRECT_FREE=X causes free to be redirected to X.  The\n#   canonical use is -DREDIRECT_FREE=GC_debug_free.\n# -DIGNORE_FREE turns calls to free into a noop.  Only useful with\n#   -DREDIRECT_MALLOC.\n# -DNO_DEBUGGING removes GC_dump and the debugging routines it calls.\n#   Reduces code size slightly at the expense of debuggability.\n# -DJAVA_FINALIZATION makes it somewhat safer to finalize objects out of\n#   order by specifying a nonstandard finalization mark procedure  (see\n#   finalize.c).  Objects reachable from finalizable objects will be marked\n#   in a separate postpass, and hence their memory won't be reclaimed.\n#   Not recommended unless you are implementing a language that specifies\n#   these semantics.  Since 5.0, determines only the initial value\n#   of GC_java_finalization variable.\n# -DFINALIZE_ON_DEMAND causes finalizers to be run only in response\n#   to explicit GC_invoke_finalizers() calls.\n#   In 5.0 this became runtime adjustable, and this only determines the\n#   initial value of GC_finalize_on_demand.\n# -DATOMIC_UNCOLLECTABLE includes code for GC_malloc_atomic_uncollectable.\n#   This is useful if either the vendor malloc implementation is poor,\n#   or if REDIRECT_MALLOC is used.\n# -DMARK_BIT_PER_GRANULE requests that a mark bit (or often byte)\n#   be allocated for each allocation granule, as opposed to each object.\n#   This often improves speed, possibly at some cost in space and/or\n#   cache footprint.  Normally it is best to let this decision be\n#   made automatically depending on platform.\n# -DMARK_BIT_PER_OBJ requests that a mark bit be allocated for each\n#   object instead of allocation granule.  The opposiet of\n#   MARK_BIT_PER_GRANULE.\n# -DHBLKSIZE=ddd, where ddd is a power of 2 between 512 and 16384, explicitly\n#   sets the heap block size.  Each heap block is devoted to a single size and\n#   kind of object.  For the incremental collector it makes sense to match\n#   the most likely page size.  Otherwise large values result in more\n#   fragmentation, but generally better performance for large heaps.\n# -DUSE_MMAP use MMAP instead of sbrk to get new memory.\n#   Works for Solaris and Irix.\n# -DUSE_MUNMAP causes memory to be returned to the OS under the right\n#   circumstances.  This currently disables VM-based incremental collection.\n#   This is currently experimental, and works only under some Unix,\n#   Linux and Windows versions.\n# -DMMAP_STACKS (for Solaris threads) Use mmap from /dev/zero rather than\n#   GC_scratch_alloc() to get stack memory.\n# -DPRINT_BLACK_LIST Whenever a black list entry is added, i.e. whenever\n#   the garbage collector detects a value that looks almost, but not quite,\n#   like a pointer, print both the address containing the value, and the\n#   value of the near-bogus-pointer.  Can be used to identifiy regions of\n#   memory that are likely to contribute misidentified pointers.\n# -DKEEP_BACK_PTRS Add code to save back pointers in debugging headers\n#   for objects allocated with the debugging allocator.  If all objects\n#   through GC_MALLOC with GC_DEBUG defined, this allows the client\n#   to determine how particular or randomly chosen objects are reachable\n#   for debugging/profiling purposes.  The gc_backptr.h interface is\n#   implemented only if this is defined.\n# -DGC_ASSERTIONS Enable some internal GC assertion checking.  Currently\n#   this facility is only used in a few places.  It is intended primarily\n#   for debugging of the garbage collector itself, but could also\n# -DDBG_HDRS_ALL Make sure that all objects have debug headers.  Increases\n#   the reliability (from 99.9999% to 100% mod. bugs) of some of the debugging\n#   code (especially KEEP_BACK_PTRS).  Makes -DSHORT_DBG_HDRS possible.\n#   Assumes that all client allocation is done through debugging\n#   allocators.\n# -DSHORT_DBG_HDRS Assume that all objects have debug headers.  Shorten\n#   the headers to minimize object size, at the expense of checking for\n#   writes past the end of an object.  This is intended for environments\n#   in which most client code is written in a \"safe\" language, such as\n#   Scheme or Java.  Assumes that all client allocation is done using\n#   the GC_debug_ functions, or through the macros that expand to these,\n#   or by redirecting malloc to GC_debug_malloc_replacement.\n#   (Also eliminates the field for the requested object size.)\n#   occasionally be useful for debugging of client code.  Slows down the\n#   collector somewhat, but not drastically.\n# -DSAVE_CALL_COUNT=<n> Set the number of call frames saved with objects\n#   allocated through the debugging interface.  Affects the amount of\n#   information generated in leak reports.  Only matters on platforms\n#   on which we can quickly generate call stacks, currently Linux/(X86 & SPARC)\n#   and Solaris/SPARC and platforms that provide execinfo.h.\n#   Default is zero.  On X86, client\n#   code should NOT be compiled with -fomit-frame-pointer.\n# -DSAVE_CALL_NARGS=<n> Set the number of functions arguments to be\n#   saved with each call frame.  Default is zero.  Ignored if we\n#   don't know how to retrieve arguments on the platform.\n# -DCHECKSUMS reports on erroneously clear dirty bits, and unexpectedly\n#   altered stubborn objects, at substantial performance cost.\n#   Use only for debugging of the incremental collector.\n# -DGC_GCJ_SUPPORT includes support for gcj (and possibly other systems\n#   that include a pointer to a type descriptor in each allocated object).\n#   Building this way requires an ANSI C compiler.\n# -DUSE_I686_PREFETCH causes the collector to issue Pentium III style\n#   prefetch instructions.  No effect except on X86 Linux platforms.\n#   Assumes a very recent gcc-compatible compiler and assembler.\n#   (Gas prefetcht0 support was added around May 1999.)\n#   Empirically the code appears to still run correctly on Pentium II\n#   processors, though with no performance benefit.  May not run on other\n#   X86 processors?  In some cases this improves performance by\n#   15% or so.\n# -DUSE_3DNOW_PREFETCH causes the collector to issue AMD 3DNow style\n#   prefetch instructions.  Same restrictions as USE_I686_PREFETCH.\n#   Minimally tested.  Didn't appear to be an obvious win on a K6-2/500.\n# -DUSE_PPC_PREFETCH causes the collector to issue PowerPC style\n#   prefetch instructions.  No effect except on PowerPC OS X platforms.\n#   Performance impact untested.\n# -DGC_USE_LD_WRAP in combination with the old flags listed in README.linux\n#   causes the collector some system and pthread calls in a more transparent\n#   fashion than the usual macro-based approach.  Requires GNU ld, and\n#   currently probably works only with Linux.\n# -DGC_USE_DLOPEN_WRAP causes the collector to redefine malloc and intercepted\n#   pthread routines with their real names, and causes it to use dlopen\n#   and dlsym to refer to the original versions.  This makes it possible to\n#   build an LD_PRELOADable malloc replacement library.\n# -DTHREAD_LOCAL_ALLOC defines GC_malloc(), GC_malloc_atomic()\n#   and GC_gcj_malloc() to use a per-thread set of free-lists.\n#   These then allocate  in a way that usually does not involve\n#   acquisition of a global lock.  Currently supported only on platforms\n#   such as Linux that use pthread_support.c.  Recommended for multiprocessors.\n#   Requires explicit GC_INIT() call, unless REDIRECT_MALLOC is\n#   defined and GC_malloc is used first.\n# -DUSE_COMPILER_TLS causes thread local allocation to use compiler-supported\n#   \"__thread\" thread-local variables.  This is the default in HP/UX.  It\n#   may help performance on recent Linux installations.  (It failed for\n#   me on RedHat 8, but appears to work on RedHat 9.)\n# -DPARALLEL_MARK allows the marker to run in multiple threads.  Recommended\n#   for multiprocessors.  Currently requires Linux on X86 or IA64, though\n#   support for other Posix platforms should be fairly easy to add,\n#   if the thread implementation is otherwise supported.\n# -DNO_GETENV prevents the collector from looking at environment variables.\n#   These may otherwise alter its configuration, or turn off GC altogether.\n#   I don't know of a reason to disable this, except possibly if the\n#   resulting process runs as a privileged user?\n# -DUSE_GLOBAL_ALLOC.  Win32 only.  Use GlobalAlloc instead of\n#   VirtualAlloc to allocate the heap.  May be needed to work around\n#   a Windows NT/2000 issue.  Incompatible with USE_MUNMAP.\n#   See README.win32 for details.\n# -DMAKE_BACK_GRAPH. Enable GC_PRINT_BACK_HEIGHT environment variable.\n#   See README.environment for details.  Experimental. Limited platform\n#   support.  Implies DBG_HDRS_ALL.  All allocation should be done using\n#   the debug interface.\n# -DSTUBBORN_ALLOC allows allocation of \"hard to change\" objects, and thus\n#   makes incremental collection easier.  Was enabled by default until 6.0.\n#   Rarely used, to my knowledge.\n# -DHANDLE_FORK attempts to make GC_malloc() work in a child process fork()ed\n#   from a multithreaded parent.  Currently only supported by pthread_support.c.\n#   (Similar code should work on Solaris or Irix, but it hasn't been tried.)\n# -DTEST_WITH_SYSTEM_MALLOC causes gctest to allocate (and leak) large chunks\n#   of memory with the standard system malloc.  This will cause the root\n#   set and collected heap to grow significantly if malloced memory is\n#   somehow getting traced by the collector.  This has no impact on the\n#   generated library; it only affects the test.\n# -DNO_INCREMENTAL cases the gctest program to not invoke the incremental\n#   collector.  This has no impact on the generated library, only on the\n#   test program.  (This is often useful for debugging failures unrelated\n#   to incremental GC.)\n# -DPOINTER_MASK=0x... causes candidate pointers to be ANDed with the\n#   given mask before being considered.  If either this or the following\n#   macro is defined, it will be assumed that all pointers stored in\n#   the heap need to be processed this way.  Stack and register pointers\n#   will be considered both with and without processing.\n#   These macros are normally needed only to support systems that use\n#   high-order pointer tags. EXPERIMENTAL.\n# -DPOINTER_SHIFT=n causes the collector to left shift candidate pointers\n#   by the indicated amount before trying to interpret them.  Applied\n#   after POINTER_MASK. EXPERIMENTAL.  See also the preceding macro.\n# -DENABLE_TRACE enables the GC_TRACE=addr environment setting to do its\n#   job.  By default this is not supported in order to keep the marker as fast\n#   as possible.\n# -DDARWIN_DONT_PARSE_STACK Causes the Darwin port to discover thread\n#   stack bounds in the same way as other pthread ports, without trying to\n#   walk the frames onthe stack.  This is recommended only as a fallback\n#   for applications that don't support proper stack unwinding.\n# -DUSE_PROC_FOR_LIBRARIES Causes the Linux collector to treat writable\n#   memory mappings (as reported by /proc) as roots, if it doesn't have\n#   otherinformation about them.  It no longer traverses dynamic loader\n#   data structures to find dynamic library static data.  This may be\n#   required for applications that store pointers in mmapped segments without\n#   informaing the collector.  But it typically performs poorly, especially\n#   since it will scan inactive but cached NPTL thread stacks completely.\n#\n\nCXXFLAGS= $(CFLAGS) \nAR= ar\nRANLIB= ranlib\n\n\nOBJS= alloc.o reclaim.o allchblk.o misc.o mach_dep.o os_dep.o mark_rts.o \\\n  headers.o mark.o obj_map.o blacklst.o finalize.o new_hblk.o dbg_mlc.o  \\\n  malloc.o stubborn.o checksums.o pthread_support.o pthread_stop_world.o \\\n  darwin_stop_world.o typd_mlc.o ptr_chck.o mallocx.o gcj_mlc.o specific.o \\\n  gc_dlopen.o backgraph.o win32_threads.o thread_local_alloc.o\n\nCSRCS= reclaim.c allchblk.c misc.c alloc.c mach_dep.c os_dep.c mark_rts.c \\\n  headers.c mark.c obj_map.c pcr_interface.c blacklst.c finalize.c \\\n  new_hblk.c real_malloc.c dyn_load.c dbg_mlc.c malloc.c stubborn.c \\\n  checksums.c pthread_support.c pthread_stop_world.c darwin_stop_world.c \\\n  typd_mlc.c ptr_chck.c mallocx.c gcj_mlc.c specific.c gc_dlopen.c \\\n  backgraph.c win32_threads.c thread_local_alloc.c\n\nCORD_SRCS=  cord/cordbscs.c cord/cordxtra.c cord/cordprnt.c cord/de.c cord/cordtest.c include/cord.h include/ec.h include/private/cord_pos.h cord/de_win.c cord/de_win.h cord/de_cmds.h cord/de_win.ICO cord/de_win.RC\n\nCORD_OBJS=  cord/cordbscs.o cord/cordxtra.o cord/cordprnt.o\n\nSRCS= $(CSRCS) mips_sgi_mach_dep.s rs6000_mach_dep.s alpha_mach_dep.S \\\n    sparc_mach_dep.S include/gc.h include/gc_typed.h include/gc_tiny_fl.h \\\n    include/private/gc_hdrs.h include/private/gc_priv.h \\\n    include/private/gcconfig.h include/private/gc_pmark.h \\\n    include/gc_inline.h include/gc_mark.h \\\n    threadlibs.c if_mach.c if_not_there.c gc_cpp.cc include/gc_cpp.h \\\n    gcname.c include/weakpointer.h include/private/gc_locks.h \\\n    mips_ultrix_mach_dep.s \\\n    include/new_gc_alloc.h include/gc_allocator.h \\\n    include/javaxfc.h sparc_sunos4_mach_dep.s sparc_netbsd_mach_dep.s \\\n    include/gc_backptr.h \\\n    hpux_test_and_clear.s include/gc_gcj.h \\\n    include/private/dbg_mlc.h \\\n    include/private/specific.h \\\n    include/leak_detector.h include/gc_amiga_redirects.h \\\n    include/gc_pthread_redirects.h ia64_save_regs_in_stack.s \\\n    include/gc_config_macros.h include/private/pthread_support.h \\\n    include/private/pthread_stop_world.h include/private/darwin_semaphore.h \\\n    include/private/darwin_stop_world.h include/private/thread_local_alloc.h \\\n    $(CORD_SRCS)\n\nDOC_FILES= README.QUICK doc/README.Mac doc/README.MacOSX doc/README.OS2 \\\n\tdoc/README.amiga doc/README.cords doc/debugging.html \\\n\tdoc/porting.html doc/overview.html \\\n\tdoc/README.dj doc/README.hp doc/README.linux doc/README.rs6000 \\\n\tdoc/README.sgi doc/README.solaris2 doc/README.uts \\\n\tdoc/README.win32 doc/barrett_diagram doc/README \\\n        doc/README.contributors doc/README.changes doc/gc.man \\\n\tdoc/README.environment doc/tree.html doc/gcdescr.html \\\n\tdoc/README.autoconf doc/README.macros doc/README.ews4800 \\\n\tdoc/README.DGUX386 doc/README.arm.cross doc/leak.html \\\n\tdoc/scale.html doc/gcinterface.html doc/README.darwin \\\n\tdoc/simple_example.html doc/README.win64\n\nTESTS= tests/test.c tests/test_cpp.cc tests/trace_test.c \\\n\ttests/leak_test.c tests/thread_leak_test.c tests/middle.c\n\nGNU_BUILD_FILES= configure.ac Makefile.am configure acinclude.m4 \\\n\t\t libtool.m4 install-sh configure.host Makefile.in \\\n\t\t aclocal.m4 config.sub config.guess \\\n\t\t include/include.am doc/doc.am \\\n\t\t ltmain.sh mkinstalldirs depcomp missing \\\n\t\t cord/cord.am tests/tests.am autogen.sh \\\n\t\t bdw-gc.pc.in compile\n\nOTHER_MAKEFILES= OS2_MAKEFILE NT_MAKEFILE NT_THREADS_MAKEFILE gc.mak \\\n\t\t BCC_MAKEFILE EMX_MAKEFILE WCC_MAKEFILE Makefile.dj \\\n\t\t PCR-Makefile SMakefile.amiga Makefile.DLLs \\\n\t\t digimars.mak Makefile.direct NT_STATIC_THREADS_MAKEFILE \\\n\t\t NT_X64_STATIC_THREADS_MAKEFILE configure_atomic_ops.sh\n#\tMakefile and Makefile.direct are copies of each other.\n\nOTHER_FILES= Makefile setjmp_t.c callprocs \\\n           MacProjects.sit.hqx MacOS.c \\\n           Mac_files/datastart.c Mac_files/dataend.c \\\n           Mac_files/MacOS_config.h Mac_files/MacOS_Test_config.h \\\n           add_gc_prefix.c gc_cpp.cpp \\\n\t   version.h AmigaOS.c mscvc_dbg.c include/private/msvc_dbg.h \\\n\t   $(TESTS) $(GNU_BUILD_FILES) $(OTHER_MAKEFILES)\n\nCORD_INCLUDE_FILES= $(srcdir)/include/gc.h $(srcdir)/include/cord.h \\\n\t$(srcdir)/include/ec.h $(srcdir)/include/private/cord_pos.h\n\nUTILS= if_mach if_not_there threadlibs\n\n# Libraries needed for curses applications.  Only needed for de.\nCURSES= -lcurses -ltermlib\n\n# The following is irrelevant on most systems.  But a few\n# versions of make otherwise fork the shell specified in\n# the SHELL environment variable.\nSHELL= /bin/sh\n\nSPECIALCFLAGS = -I$(srcdir)/include -I$(AO_INSTALL_DIR)/include\n# Alternative flags to the C compiler for mach_dep.c.\n# Mach_dep.c often doesn't like optimization, and it's\n# not time-critical anyway.\n# Set SPECIALCFLAGS to -q nodirect_code on Encore.\n\nall: gc.a gctest\n\n# if AO_INSTALL_DIR doesn't exist, we assume that it is pointing to\n# the default location, and we need to build\n$(AO_INSTALL_DIR): \n\tCC=$(CC) $(srcdir)/configure_atomic_ops.sh\n\tcd $(AO_SRC_DIR); make CC=$(CC) install\n\nLEAKFLAGS=$(CFLAGS) -DFIND_LEAK\n\nBSD-pkg-all: bsd-libgc.a bsd-libleak.a\n\nbsd-libgc.a:\n\t$(MAKE) CFLAGS=\"$(CFLAGS)\" clean c++-t\n\tmv gc.a bsd-libgc.a\n\nbsd-libleak.a:\n\t$(MAKE) -f Makefile.direct CFLAGS=\"$(LEAKFLAGS)\" clean c++-nt\n\tmv gc.a bsd-libleak.a\n\nBSD-pkg-install: BSD-pkg-all\n\t${CP} bsd-libgc.a libgc.a\n\t${INSTALL_DATA} libgc.a ${PREFIX}/lib\n\t${INSTALL_DATA} gc.h gc_cpp.h ${PREFIX}/include\n\t${INSTALL_MAN} doc/gc.man ${PREFIX}/man/man3/gc.3\n\npcr: PCR-Makefile include/private/gc_private.h include/private/gc_hdrs.h \\\ninclude/private/gc_locks.h include/gc.h include/private/gcconfig.h \\\nmach_dep.o $(SRCS)\n\t$(MAKE) -f PCR-Makefile depend\n\t$(MAKE) -f PCR-Makefile\n\n$(OBJS) tests/test.o dyn_load.o dyn_load_sunos53.o: \\\n    $(srcdir)/include/private/gc_priv.h \\\n    $(srcdir)/include/private/gc_hdrs.h $(srcdir)/include/private/gc_locks.h \\\n    $(srcdir)/include/gc.h $(srcdir)/include/gc_pthread_redirects.h \\\n    $(srcdir)/include/private/gcconfig.h $(srcdir)/include/gc_typed.h \\\n    $(srcdir)/include/gc_config_macros.h Makefile $(AO_INSTALL_DIR)\n# The dependency on Makefile is needed.  Changing\n# options affects the size of GC_arrays,\n# invalidating all .o files that rely on gc_priv.h\n\nmark.o typd_mlc.o finalize.o ptr_chck.o: $(srcdir)/include/gc_mark.h \\\n\t\t\t\t\t $(srcdir)/include/private/gc_pmark.h\n\nspecific.o pthread_support.o thread_local_alloc.o win32_threads.o: \\\n\t$(srcdir)/include/private/specific.h $(srcdir)/include/gc_inline.h \\\n\t$(srcdir)/include/private/thread_local_alloc.h\n\ndbg_mlc.o gcj_mlc.o: $(srcdir)/include/private/dbg_mlc.h\n\ntests/test.o: tests $(srcdir)/tests/test.c\n\t$(CC) $(CFLAGS) -c $(srcdir)/tests/test.c\n\tmv test.o tests/test.o\n\ntests:\n\tmkdir tests\n\nbase_lib gc.a: $(OBJS) dyn_load.o $(UTILS)\n\techo > base_lib\n\trm -f dont_ar_1\n\tcp $(AO_INSTALL_DIR)/lib/libatomic_ops.a gc.a\n\t./if_mach SPARC SOLARIS touch dont_ar_1\n\t./if_mach SPARC SOLARIS $(AR) rus gc.a $(OBJS) dyn_load.o\n\t./if_mach M68K AMIGA touch dont_ar_1\n\t./if_mach M68K AMIGA $(AR) -vrus gc.a $(OBJS) dyn_load.o\n\t./if_not_there dont_ar_1 $(AR) ru gc.a $(OBJS) dyn_load.o\n\t./if_not_there dont_ar_1 $(RANLIB) gc.a || cat /dev/null\n#\tignore ranlib failure; that usually means it doesn't exist, and isn't needed\n\ncords: $(CORD_OBJS) cord/cordtest $(UTILS)\n\trm -f dont_ar_3\n\t./if_mach SPARC SOLARIS touch dont_ar_3\n\t./if_mach SPARC SOLARIS $(AR) rus gc.a $(CORD_OBJS)\n\t./if_mach M68K AMIGA touch dont_ar_3\n\t./if_mach M68K AMIGA $(AR) -vrus gc.a $(CORD_OBJS)\n\t./if_not_there dont_ar_3 $(AR) ru gc.a $(CORD_OBJS)\n\t./if_not_there dont_ar_3 $(RANLIB) gc.a || cat /dev/null\n\ngc_cpp.o: $(srcdir)/gc_cpp.cc $(srcdir)/include/gc_cpp.h $(srcdir)/include/gc.h Makefile\n\t$(CXX) -c $(CXXFLAGS) $(srcdir)/gc_cpp.cc\n\ntest_cpp: $(srcdir)/tests/test_cpp.cc $(srcdir)/include/gc_cpp.h gc_cpp.o $(srcdir)/include/gc.h \\\nbase_lib $(UTILS)\n\trm -f test_cpp\n\t./if_mach HP_PA HPUX $(CXX) $(CXXFLAGS) -o test_cpp $(srcdir)/tests/test_cpp.cc gc_cpp.o gc.a -ldld `./threadlibs`\n\t./if_not_there test_cpp $(CXX) $(CXXFLAGS) -o test_cpp $(srcdir)/tests/test_cpp.cc gc_cpp.o gc.a `./threadlibs`\n\nc++-t: c++\n\t./test_cpp 1\n\nc++-nt: c++\n\t@echo \"Use ./test_cpp 1 to test the leak library\"\n\nc++: gc_cpp.o $(srcdir)/include/gc_cpp.h test_cpp\n\trm -f dont_ar_4\n\t./if_mach SPARC SOLARIS touch dont_ar_4\n\t./if_mach SPARC SOLARIS $(AR) rus gc.a gc_cpp.o\n\t./if_mach M68K AMIGA touch dont_ar_4\n\t./if_mach M68K AMIGA $(AR) -vrus gc.a gc_cpp.o\n\t./if_not_there dont_ar_4 $(AR) ru gc.a gc_cpp.o\n\t./if_not_there dont_ar_4 $(RANLIB) gc.a || cat /dev/null\n\t./test_cpp 1\n\techo > c++\n\ndyn_load_sunos53.o: dyn_load.c\n\t$(CC) $(CFLAGS) -DSUNOS53_SHARED_LIB -c $(srcdir)/dyn_load.c -o $@\n\n# SunOS5 shared library version of the collector\nsunos5gc.so: $(OBJS) dyn_load_sunos53.o\n\t$(CC) -G -o sunos5gc.so $(OBJS) dyn_load_sunos53.o $(AO_INSTALL_DIR)/lib/libatomic_ops.a -ldl\n\tln sunos5gc.so libgc.so\n\n# Alpha/OSF shared library version of the collector\nlibalphagc.so: $(OBJS)\n\tld -shared -o libalphagc.so $(OBJS) dyn_load.o -lc\n\tln libalphagc.so libgc.so\n\n# IRIX shared library version of the collector\nlibirixgc.so: $(OBJS) dyn_load.o\n\tld -shared $(ABI_FLAG) -o libirixgc.so $(OBJS) dyn_load.o -lc\n\tln libirixgc.so libgc.so\n\n# Linux shared library version of the collector\nliblinuxgc.so: $(OBJS) dyn_load.o\n\tgcc -shared -o liblinuxgc.so $(OBJS) dyn_load.o\n\tln liblinuxgc.so libgc.so\n\n# Build gctest with dynamic library\ndyn_test:\n\t$(CC) $(CFLAGS) -o gctest tests/test.c libgc.so `./threadlibs`\n\t./gctest\n\n# Alternative Linux rule.  This is preferable, but is likely to break the\n# Makefile for some non-linux platforms.\n# LIBOBJS= $(patsubst %.o, %.lo, $(OBJS))\n#\n#.SUFFIXES: .lo $(SUFFIXES)\n#\n#.c.lo:\n#\t$(CC) $(CFLAGS) $(CPPFLAGS) -fPIC -c $< -o $@\n#\n# liblinuxgc.so: $(LIBOBJS) dyn_load.lo\n# \tgcc -shared -Wl,-soname=libgc.so.0 -o libgc.so.0 $(LIBOBJS) dyn_load.lo\n#\ttouch liblinuxgc.so\n\nmach_dep.o: $(srcdir)/mach_dep.c $(srcdir)/mips_sgi_mach_dep.s \\\n\t    $(srcdir)/mips_ultrix_mach_dep.s \\\n            $(srcdir)/rs6000_mach_dep.s \\\n\t    $(srcdir)/sparc_mach_dep.S $(srcdir)/sparc_sunos4_mach_dep.s \\\n\t    $(srcdir)/ia64_save_regs_in_stack.s \\\n\t    $(srcdir)/sparc_netbsd_mach_dep.s $(UTILS)\n\trm -f mach_dep.o\n\t./if_mach SPARC SOLARIS $(CC) -c -o mach_dep2.o $(srcdir)/sparc_mach_dep.S\n\t./if_mach SPARC OPENBSD $(AS) -o mach_dep2.o $(srcdir)/sparc_sunos4_mach_dep.s\n\t./if_mach SPARC NETBSD $(AS) -o mach_dep2.o $(srcdir)/sparc_netbsd_mach_dep.s\n\t./if_mach SPARC \"\" $(CC) -c -o mach_dep1.o $(SPECIALCFLAGS) $(srcdir)/mach_dep.c\n\t./if_mach SPARC \"\" ld -r -o mach_dep.o mach_dep1.o mach_dep2.o\n\t./if_mach IA64 \"\" as $(AS_ABI_FLAG) -o ia64_save_regs_in_stack.o $(srcdir)/ia64_save_regs_in_stack.s\n\t./if_mach IA64 \"\" $(CC) -c -o mach_dep1.o $(SPECIALCFLAGS) $(srcdir)/mach_dep.c\n\t./if_mach IA64 \"\" ld -r -o mach_dep.o mach_dep1.o ia64_save_regs_in_stack.o\n\t./if_not_there mach_dep.o $(CC) -c $(SPECIALCFLAGS) $(srcdir)/mach_dep.c\n\nmark_rts.o: $(srcdir)/mark_rts.c $(UTILS)\n\trm -f mark_rts.o\n\t-./if_mach ALPHA OSF1 $(CC) -c $(CFLAGS) -Wo,-notail $(srcdir)/mark_rts.c\n\t./if_not_there mark_rts.o $(CC) -c $(CFLAGS) $(srcdir)/mark_rts.c\n#\tWork-around for DEC optimizer tail recursion elimination bug.\n#  The ALPHA-specific line should be removed if gcc is used.\n\nalloc.o: version.h\n\ncord:\n\tmkdir cord\n\ncord/cordbscs.o: cord $(srcdir)/cord/cordbscs.c $(CORD_INCLUDE_FILES)\n\t$(CC) $(CFLAGS) -c -I$(srcdir) $(srcdir)/cord/cordbscs.c\n\tmv cordbscs.o cord/cordbscs.o\n#  not all compilers understand -o filename\n\ncord/cordxtra.o: cord $(srcdir)/cord/cordxtra.c $(CORD_INCLUDE_FILES)\n\t$(CC) $(CFLAGS) -c -I$(srcdir) $(srcdir)/cord/cordxtra.c\n\tmv cordxtra.o cord/cordxtra.o\n\ncord/cordprnt.o: cord $(srcdir)/cord/cordprnt.c $(CORD_INCLUDE_FILES)\n\t$(CC) $(CFLAGS) -c -I$(srcdir) $(srcdir)/cord/cordprnt.c\n\tmv cordprnt.o cord/cordprnt.o\n\ncord/cordtest: $(srcdir)/cord/cordtest.c $(CORD_OBJS) gc.a $(UTILS)\n\trm -f cord/cordtest\n\t./if_mach SPARC DRSNX $(CC) $(CFLAGS) -o cord/cordtest $(srcdir)/cord/cordtest.c $(CORD_OBJS) gc.a -lucb\n\t./if_mach HP_PA HPUX $(CC) $(CFLAGS) -o cord/cordtest $(srcdir)/cord/cordtest.c $(CORD_OBJS) gc.a -ldld `./threadlibs`\n\t./if_mach M68K AMIGA $(CC) $(CFLAGS) -UGC_AMIGA_MAKINGLIB -o cord/cordtest $(srcdir)/cord/cordtest.c $(CORD_OBJS) gc.a `./threadlibs`\n\t./if_not_there cord/cordtest $(CC) $(CFLAGS) -o cord/cordtest $(srcdir)/cord/cordtest.c $(CORD_OBJS) gc.a `./threadlibs`\n\ncord/de: $(srcdir)/cord/de.c cord/cordbscs.o cord/cordxtra.o gc.a $(UTILS)\n\trm -f cord/de\n\t./if_mach SPARC DRSNX $(CC) $(CFLAGS) -o cord/de $(srcdir)/cord/de.c cord/cordbscs.o cord/cordxtra.o gc.a $(CURSES) -lucb `./threadlibs`\n\t./if_mach HP_PA HPUX $(CC) $(CFLAGS) -o cord/de $(srcdir)/cord/de.c cord/cordbscs.o cord/cordxtra.o gc.a $(CURSES) -ldld `./threadlibs`\n\t./if_mach POWERPC AIX $(CC) $(CFLAGS) -o cord/de $(srcdir)/cord/de.c cord/cordbscs.o cord/cordxtra.o gc.a -lcurses\n\t./if_mach POWERPC DARWIN $(CC) $(CFLAGS) -o cord/de $(srcdir)/cord/de.c cord/cordbscs.o cord/cordxtra.o gc.a\n\t./if_mach I386 LINUX $(CC) $(CFLAGS) -o cord/de $(srcdir)/cord/de.c cord/cordbscs.o cord/cordxtra.o gc.a -lcurses `./threadlibs`\n\t./if_mach ALPHA LINUX $(CC) $(CFLAGS) -o cord/de $(srcdir)/cord/de.c cord/cordbscs.o cord/cordxtra.o gc.a -lcurses `./threadlibs`\n\t./if_mach IA64 LINUX $(CC) $(CFLAGS) -o cord/de $(srcdir)/cord/de.c cord/cordbscs.o cord/cordxtra.o gc.a -lcurses `./threadlibs`\n\t./if_mach M68K AMIGA $(CC) $(CFLAGS) -UGC_AMIGA_MAKINGLIB -o cord/de $(srcdir)/cord/de.c cord/cordbscs.o cord/cordxtra.o gc.a -lcurses\n\t./if_not_there cord/de $(CC) $(CFLAGS) -o cord/de $(srcdir)/cord/de.c cord/cordbscs.o cord/cordxtra.o gc.a $(CURSES) `./threadlibs`\n\nif_mach: $(srcdir)/if_mach.c $(srcdir)/include/private/gcconfig.h\n\t$(HOSTCC) $(HOSTCFLAGS) -o if_mach $(srcdir)/if_mach.c\n\nthreadlibs: $(srcdir)/threadlibs.c $(srcdir)/include/private/gcconfig.h Makefile\n\t$(HOSTCC) $(HOSTCFLAGS) -o threadlibs $(srcdir)/threadlibs.c\n\nif_not_there: $(srcdir)/if_not_there.c\n\t$(HOSTCC) $(HOSTCFLAGS) -o if_not_there $(srcdir)/if_not_there.c\n\nclean: \n\trm -f gc.a *.o *.exe tests/*.o gctest gctest_dyn_link test_cpp \\\n\t      setjmp_test  mon.out gmon.out a.out core if_not_there if_mach \\\n\t      threadlibs $(CORD_OBJS) cord/cordtest cord/de \n\t-rm -f *~\n\ngctest: tests/test.o gc.a $(UTILS)\n\trm -f gctest\n\t./if_mach SPARC DRSNX $(CC) $(CFLAGS) -o gctest  tests/test.o gc.a -lucb\n\t./if_mach HP_PA HPUX $(CC) $(CFLAGS) -o gctest  tests/test.o gc.a -ldld `./threadlibs`\n\t./if_mach M68K AMIGA $(CC) $(CFLAGS) -UGC_AMIGA_MAKINGLIB -o gctest  tests/test.o gc.a `./threadlibs`\n\t./if_not_there gctest $(CC) $(CFLAGS) -o gctest tests/test.o gc.a `./threadlibs`\n\n# If an optimized setjmp_test generates a segmentation fault,\n# odds are your compiler is broken.  Gctest may still work.\n# Try compiling setjmp_t.c unoptimized.\nsetjmp_test: $(srcdir)/setjmp_t.c $(srcdir)/include/gc.h $(UTILS) $(AO_INSTALL_DIR)\n\t$(CC) $(CFLAGS) -o setjmp_test $(srcdir)/setjmp_t.c\n\ntest:  KandRtest cord/cordtest\n\tcord/cordtest\n\n# Those tests that work even with a K&R C compiler:\nKandRtest: setjmp_test gctest\n\t./setjmp_test\n\t./gctest\n\nadd_gc_prefix: $(srcdir)/add_gc_prefix.c $(srcdir)/version.h\n\t$(CC) -o add_gc_prefix $(srcdir)/add_gc_prefix.c\n\ngcname: $(srcdir)/gcname.c $(srcdir)/version.h\n\t$(CC) -o gcname $(srcdir)/gcname.c\n\n#We assume this is being done from source directory.\ndist gc.tar: $(SRCS) $(DOC_FILES) $(OTHER_FILES) add_gc_prefix gcname\n\tcp Makefile Makefile.old\n\tcp Makefile.direct Makefile\n\tCC=$(CC) ./configure_atomic_ops.sh\n\tcd $(AO_SRC_DIR); make dist\n\tif test $(srcdir)/libatomic_ops-$(AO_VERSION) = $(AO_SRC_DIR); \\\n\tthen \\\n\t  mv $(AO_SRC_DIR) $(AO_SRC_DIR).bak ; \\\n\t  tar xvfz $(AO_SRC_DIR).bak/libatomic_ops-$(AO_VERSION).tar.gz ; \\\n\telse \\\n\t  tar xvfz $(AO_SRC_DIR)/libatomic_ops-$(AO_VERSION).tar.gz ; \\\n\tfi\n\trm -f `./gcname`\n\tln -s . `./gcname`\n\t./add_gc_prefix $(SRCS) $(DOC_FILES) $(OTHER_FILES) libatomic_ops-$(AO_VERSION) > /tmp/gc.tar-files\n\ttar cvfh gc.tar `cat /tmp/gc.tar-files`\n\tcp gc.tar `./gcname`.tar\n\tgzip `./gcname`.tar\n\trm `./gcname`\n\ngc.tar.Z: gc.tar\n\tcompress gc.tar\n\ngc.tar.gz: gc.tar\n\tgzip gc.tar\n\nlint: $(CSRCS) tests/test.c\n\tlint -DLINT $(CSRCS) tests/test.c | egrep -v \"possible pointer alignment problem|abort|exit|sbrk|mprotect|syscall|change in ANSI|improper alignment\"\n\n# BTL: added to test shared library version of collector.\n# Currently works only under SunOS5.  Requires GC_INIT call from statically\n# loaded client code.\nABSDIR = `pwd`\ngctest_dyn_link: tests/test.o libgc.so\n\t$(CC) -L$(ABSDIR) -R$(ABSDIR) -o gctest_dyn_link tests/test.o -lgc -ldl -lthread\n\ngctest_irix_dyn_link: tests/test.o libirixgc.so\n\t$(CC) -L$(ABSDIR) -o gctest_irix_dyn_link tests/test.o -lirixgc\n\n# The following appear to be dead, especially since libgc_globals.h\n# is apparently lost.\ntest_dll.o: tests/test.c libgc_globals.h\n\t$(CC) $(CFLAGS) -DGC_USE_DLL -c tests/test.c -o test_dll.o\n\ntest_dll: test_dll.o libgc_dll.a libgc.dll\n\t$(CC) test_dll.o -L$(ABSDIR) -lgc_dll -o test_dll\n\nSYM_PREFIX-libgc=GC\n\n# Uncomment the following line to build a GNU win32 DLL\n# include Makefile.DLLs\n\nreserved_namespace: $(SRCS)\n\tfor file in $(SRCS) tests/test.c tests/test_cpp.cc; do \\\n\t\tsed s/GC_/_GC_/g < $$file > tmp; \\\n\t\tcp tmp $$file; \\\n\t\tdone\n\nuser_namespace: $(SRCS)\n\tfor file in $(SRCS) tests/test.c tests/test_cpp.cc; do \\\n\t\tsed s/_GC_/GC_/g < $$file > tmp; \\\n\t\tcp tmp $$file; \\\n\t\tdone\n",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/src/engine/boehm_gc/ltmain.sh": "# ltmain.sh - Provide generalized library-building support services.\n# NOTE: Changing this file will not affect anything until you rerun configure.\n#\n# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005\n# Free Software Foundation, Inc.\n# Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\nbasename=\"s,^.*/,,g\"\n\n# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh\n# is ksh but when the shell is invoked as \"sh\" and the current value of\n# the _XPG environment variable is not equal to 1 (one), the special\n# positional parameter $0, within a function call, is the name of the\n# function.\nprogpath=\"$0\"\n\n# The name of this program:\nprogname=`echo \"$progpath\" | $SED $basename`\nmodename=\"$progname\"\n\n# Global variables:\nEXIT_SUCCESS=0\nEXIT_FAILURE=1\n\nPROGRAM=ltmain.sh\nPACKAGE=libtool\nVERSION=1.5.22\nTIMESTAMP=\" (1.1220.2.365 2005/12/18 22:14:06)\"\n\n# See if we are running on zsh, and set the options which allow our\n# commands through without removal of \\ escapes.\nif test -n \"${ZSH_VERSION+set}\" ; then\n  setopt NO_GLOB_SUBST\nfi\n\n# Check that we have a working $echo.\nif test \"X$1\" = X--no-reexec; then\n  # Discard the --no-reexec flag, and continue.\n  shift\nelif test \"X$1\" = X--fallback-echo; then\n  # Avoid inline document here, it may be left over\n  :\nelif test \"X`($echo '\\t') 2>/dev/null`\" = 'X\\t'; then\n  # Yippee, $echo works!\n  :\nelse\n  # Restart under the correct shell, and then maybe $echo will work.\n  exec $SHELL \"$progpath\" --no-reexec ${1+\"$@\"}\nfi\n\nif test \"X$1\" = X--fallback-echo; then\n  # used as fallback echo\n  shift\n  cat <<EOF\n$*\nEOF\n  exit $EXIT_SUCCESS\nfi\n\ndefault_mode=\nhelp=\"Try \\`$progname --help' for more information.\"\nmagic=\"%%%MAGIC variable%%%\"\nmkdir=\"mkdir\"\nmv=\"mv -f\"\nrm=\"rm -f\"\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed=\"${SED}\"' -e 1s/^X//'\nsed_quote_subst='s/\\([\\\\`\\\\\"$\\\\\\\\]\\)/\\\\\\1/g'\n# test EBCDIC or ASCII\ncase `echo X|tr X '\\101'` in\n A) # ASCII based system\n    # \\n is not interpreted correctly by Solaris 8 /usr/ucb/tr\n  SP2NL='tr \\040 \\012'\n  NL2SP='tr \\015\\012 \\040\\040'\n  ;;\n *) # EBCDIC based system\n  SP2NL='tr \\100 \\n'\n  NL2SP='tr \\r\\n \\100\\100'\n  ;;\nesac\n\n# NLS nuisances.\n# Only set LANG and LC_ALL to C if already set.\n# These must not be set unconditionally because not all systems understand\n# e.g. LANG=C (notably SCO).\n# We save the old values to restore during execute mode.\nif test \"${LC_ALL+set}\" = set; then\n  save_LC_ALL=\"$LC_ALL\"; LC_ALL=C; export LC_ALL\nfi\nif test \"${LANG+set}\" = set; then\n  save_LANG=\"$LANG\"; LANG=C; export LANG\nfi\n\n# Make sure IFS has a sensible default\nlt_nl='\n'\nIFS=\" \t$lt_nl\"\n\nif test \"$build_libtool_libs\" != yes && test \"$build_old_libs\" != yes; then\n  $echo \"$modename: not configured to build any kind of library\" 1>&2\n  $echo \"Fatal configuration error.  See the $PACKAGE docs for more information.\" 1>&2\n  exit $EXIT_FAILURE\nfi\n\n# Global variables.\nmode=$default_mode\nnonopt=\nprev=\nprevopt=\nrun=\nshow=\"$echo\"\nshow_help=\nexecute_dlfiles=\nduplicate_deps=no\npreserve_args=\nlo2o=\"s/\\\\.lo\\$/.${objext}/\"\no2lo=\"s/\\\\.${objext}\\$/.lo/\"\n\n#####################################\n# Shell function definitions:\n# This seems to be the best place for them\n\n# func_mktempdir [string]\n# Make a temporary directory that won't clash with other running\n# libtool processes, and avoids race conditions if possible.  If\n# given, STRING is the basename for that directory.\nfunc_mktempdir ()\n{\n    my_template=\"${TMPDIR-/tmp}/${1-$progname}\"\n\n    if test \"$run\" = \":\"; then\n      # Return a directory name, but don't create it in dry-run mode\n      my_tmpdir=\"${my_template}-$$\"\n    else\n\n      # If mktemp works, use that first and foremost\n      my_tmpdir=`mktemp -d \"${my_template}-XXXXXXXX\" 2>/dev/null`\n\n      if test ! -d \"$my_tmpdir\"; then\n\t# Failing that, at least try and use $RANDOM to avoid a race\n\tmy_tmpdir=\"${my_template}-${RANDOM-0}$$\"\n\n\tsave_mktempdir_umask=`umask`\n\tumask 0077\n\t$mkdir \"$my_tmpdir\"\n\tumask $save_mktempdir_umask\n      fi\n\n      # If we're not in dry-run mode, bomb out on failure\n      test -d \"$my_tmpdir\" || {\n        $echo \"cannot create temporary directory \\`$my_tmpdir'\" 1>&2\n\texit $EXIT_FAILURE\n      }\n    fi\n\n    $echo \"X$my_tmpdir\" | $Xsed\n}\n\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\nfunc_win32_libid ()\n{\n  win32_libid_type=\"unknown\"\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null | \\\n      $EGREP -e 'file format pe-i386(.*architecture: i386)?' >/dev/null ; then\n      win32_nmres=`eval $NM -f posix -A $1 | \\\n\t$SED -n -e '1,100{/ I /{s,.*,import,;p;q;};}'`\n      case $win32_nmres in\n      import*)  win32_libid_type=\"x86 archive import\";;\n      *)        win32_libid_type=\"x86 archive static\";;\n      esac\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $echo $win32_libid_type\n}\n\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n\tcase $arg in\n\t  *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\t  arg=\"\\\"$arg\\\"\"\n\t  ;;\n\tesac\n\tCC_quoted=\"$CC_quoted $arg\"\n      done\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" `$echo $CC` \"* | \"`$echo $CC` \"* | \" $CC_quoted\"* | \"$CC_quoted \"* | \" `$echo $CC_quoted` \"* | \"`$echo $CC_quoted` \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if grep \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t    # Double-quote args containing other shell metacharacters.\n\t    case $arg in\n\t      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\t      arg=\"\\\"$arg\\\"\"\n\t      ;;\n\t    esac\n\t    CC_quoted=\"$CC_quoted $arg\"\n\t  done\n\t    case \"$@ \" in\n\t      \" $CC \"* | \"$CC \"* | \" `$echo $CC` \"* | \"`$echo $CC` \"* | \" $CC_quoted\"* | \"$CC_quoted \"* | \" `$echo $CC_quoted` \"* | \"`$echo $CC_quoted` \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  $echo \"$modename: unable to infer tagged configuration\"\n\t  $echo \"$modename: specify a tag with \\`--tag'\" 1>&2\n\t  exit $EXIT_FAILURE\n#        else\n#          $echo \"$modename: using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    f_ex_an_ar_dir=\"$1\"; shift\n    f_ex_an_ar_oldlib=\"$1\"\n\n    $show \"(cd $f_ex_an_ar_dir && $AR x $f_ex_an_ar_oldlib)\"\n    $run eval \"(cd \\$f_ex_an_ar_dir && $AR x \\$f_ex_an_ar_oldlib)\" || exit $?\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      $echo \"$modename: ERROR: object name conflicts: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n}\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    my_gentop=\"$1\"; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\"\"\n    my_xlib=\"\"\n    my_xabs=\"\"\n    my_xdir=\"\"\n    my_status=\"\"\n\n    $show \"${rm}r $my_gentop\"\n    $run ${rm}r \"$my_gentop\"\n    $show \"$mkdir $my_gentop\"\n    $run $mkdir \"$my_gentop\"\n    my_status=$?\n    if test \"$my_status\" -ne 0 && test ! -d \"$my_gentop\"; then\n      exit $my_status\n    fi\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=\"$my_xlib\" ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      my_xlib=`$echo \"X$my_xlib\" | $Xsed -e 's%^.*/%%'`\n      my_xdir=\"$my_gentop/$my_xlib\"\n\n      $show \"${rm}r $my_xdir\"\n      $run ${rm}r \"$my_xdir\"\n      $show \"$mkdir $my_xdir\"\n      $run $mkdir \"$my_xdir\"\n      exit_status=$?\n      if test \"$exit_status\" -ne 0 && test ! -d \"$my_xdir\"; then\n\texit $exit_status\n      fi\n      case $host in\n      *-darwin*)\n\t$show \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\tif test -z \"$run\"; then\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  darwin_base_archive=`$echo \"X$darwin_archive\" | $Xsed -e 's%^.*/%%'`\n\t  darwin_arches=`lipo -info \"$darwin_archive\" 2>/dev/null | $EGREP Architectures 2>/dev/null`\n\t  if test -n \"$darwin_arches\"; then \n\t    darwin_arches=`echo \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    $show \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches ; do\n\t      mkdir -p \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      lipo -thin $darwin_arch -output \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\" \"${darwin_archive}\"\n\t      cd \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      func_extract_an_archive \"`pwd`\" \"${darwin_base_archive}\"\n\t      cd \"$darwin_curdir\"\n\t      $rm \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\"\n\t    done # $darwin_arches\n      ## Okay now we have a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print| xargs basename | sort -u | $NL2SP`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | $NL2SP`\n\t      lipo -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    ${rm}r unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd \"$darwin_orig_dir\"\n \t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\tfi # $run\n\t;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n        ;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | $NL2SP`\n    done\n    func_extract_archives_result=\"$my_oldobjs\"\n}\n# End of Shell function definitions\n#####################################\n\n# Darwin sucks\neval std_shrext=\\\"$shrext_cmds\\\"\n\ndisable_libs=no\n\n# Parse our command line options once, thoroughly.\nwhile test \"$#\" -gt 0\ndo\n  arg=\"$1\"\n  shift\n\n  case $arg in\n  -*=*) optarg=`$echo \"X$arg\" | $Xsed -e 's/[-_a-zA-Z0-9]*=//'` ;;\n  *) optarg= ;;\n  esac\n\n  # If the previous option needs an argument, assign it.\n  if test -n \"$prev\"; then\n    case $prev in\n    execute_dlfiles)\n      execute_dlfiles=\"$execute_dlfiles $arg\"\n      ;;\n    tag)\n      tagname=\"$arg\"\n      preserve_args=\"${preserve_args}=$arg\"\n\n      # Check whether tagname contains only valid characters\n      case $tagname in\n      *[!-_A-Za-z0-9,/]*)\n\t$echo \"$progname: invalid tag name: $tagname\" 1>&2\n\texit $EXIT_FAILURE\n\t;;\n      esac\n\n      case $tagname in\n      CC)\n\t# Don't test for the \"default\" C tag, as we know, it's there, but\n\t# not specially marked.\n\t;;\n      *)\n\tif grep \"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname$\" < \"$progpath\" > /dev/null; then\n\t  taglist=\"$taglist $tagname\"\n\t  # Evaluate the configuration.\n\t  eval \"`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$tagname'$/,/^# ### END LIBTOOL TAG CONFIG: '$tagname'$/p' < $progpath`\"\n\telse\n\t  $echo \"$progname: ignoring unknown tag $tagname\" 1>&2\n\tfi\n\t;;\n      esac\n      ;;\n    *)\n      eval \"$prev=\\$arg\"\n      ;;\n    esac\n\n    prev=\n    prevopt=\n    continue\n  fi\n\n  # Have we seen a non-optional argument yet?\n  case $arg in\n  --help)\n    show_help=yes\n    ;;\n\n  --version)\n    $echo \"$PROGRAM (GNU $PACKAGE) $VERSION$TIMESTAMP\"\n    $echo\n    $echo \"Copyright (C) 2005  Free Software Foundation, Inc.\"\n    $echo \"This is free software; see the source for copying conditions.  There is NO\"\n    $echo \"warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n    exit $?\n    ;;\n\n  --config)\n    ${SED} -e '1,/^# ### BEGIN LIBTOOL CONFIG/d' -e '/^# ### END LIBTOOL CONFIG/,$d' $progpath\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      ${SED} -n -e \"/^# ### BEGIN LIBTOOL TAG CONFIG: $tagname$/,/^# ### END LIBTOOL TAG CONFIG: $tagname$/p\" < \"$progpath\"\n    done\n    exit $?\n    ;;\n\n  --debug)\n    $echo \"$progname: enabling shell trace mode\"\n    set -x\n    preserve_args=\"$preserve_args $arg\"\n    ;;\n\n  --dry-run | -n)\n    run=:\n    ;;\n\n  --features)\n    $echo \"host: $host\"\n    if test \"$build_libtool_libs\" = yes; then\n      $echo \"enable shared libraries\"\n    else\n      $echo \"disable shared libraries\"\n    fi\n    if test \"$build_old_libs\" = yes; then\n      $echo \"enable static libraries\"\n    else\n      $echo \"disable static libraries\"\n    fi\n    exit $?\n    ;;\n\n  --finish) mode=\"finish\" ;;\n\n  --mode) prevopt=\"--mode\" prev=mode ;;\n  --mode=*) mode=\"$optarg\" ;;\n\n  --preserve-dup-deps) duplicate_deps=\"yes\" ;;\n\n  --quiet | --silent)\n    show=:\n    preserve_args=\"$preserve_args $arg\"\n    ;;\n\n  --tag)\n    prevopt=\"--tag\"\n    prev=tag\n    preserve_args=\"$preserve_args --tag\"\n    ;;\n  --tag=*)\n    set tag \"$optarg\" ${1+\"$@\"}\n    shift\n    prev=tag\n    preserve_args=\"$preserve_args --tag\"\n    ;;\n\n  -dlopen)\n    prevopt=\"-dlopen\"\n    prev=execute_dlfiles\n    ;;\n\n  -*)\n    $echo \"$modename: unrecognized option \\`$arg'\" 1>&2\n    $echo \"$help\" 1>&2\n    exit $EXIT_FAILURE\n    ;;\n\n  *)\n    nonopt=\"$arg\"\n    break\n    ;;\n  esac\ndone\n\nif test -n \"$prevopt\"; then\n  $echo \"$modename: option \\`$prevopt' requires an argument\" 1>&2\n  $echo \"$help\" 1>&2\n  exit $EXIT_FAILURE\nfi\n\ncase $disable_libs in\nno) \n  ;;\nshared)\n  build_libtool_libs=no\n  build_old_libs=yes\n  ;;\nstatic)\n  build_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n  ;;\nesac\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\nif test -z \"$show_help\"; then\n\n  # Infer the operation mode.\n  if test -z \"$mode\"; then\n    $echo \"*** Warning: inferring the mode of operation is deprecated.\" 1>&2\n    $echo \"*** Future versions of Libtool will require --mode=MODE be specified.\" 1>&2\n    case $nonopt in\n    *cc | cc* | *++ | gcc* | *-gcc* | g++* | xlc*)\n      mode=link\n      for arg\n      do\n\tcase $arg in\n\t-c)\n\t   mode=compile\n\t   break\n\t   ;;\n\tesac\n      done\n      ;;\n    *db | *dbx | *strace | *truss)\n      mode=execute\n      ;;\n    *install*|cp|mv)\n      mode=install\n      ;;\n    *rm)\n      mode=uninstall\n      ;;\n    *)\n      # If we have no mode, but dlfiles were specified, then do execute mode.\n      test -n \"$execute_dlfiles\" && mode=execute\n\n      # Just use the default operation mode.\n      if test -z \"$mode\"; then\n\tif test -n \"$nonopt\"; then\n\t  $echo \"$modename: warning: cannot infer operation mode from \\`$nonopt'\" 1>&2\n\telse\n\t  $echo \"$modename: warning: cannot infer operation mode without MODE-ARGS\" 1>&2\n\tfi\n      fi\n      ;;\n    esac\n  fi\n\n  # Only execute mode is allowed to have -dlopen flags.\n  if test -n \"$execute_dlfiles\" && test \"$mode\" != execute; then\n    $echo \"$modename: unrecognized option \\`-dlopen'\" 1>&2\n    $echo \"$help\" 1>&2\n    exit $EXIT_FAILURE\n  fi\n\n  # Change the help message to a mode-specific one.\n  generic_help=\"$help\"\n  help=\"Try \\`$modename --help --mode=$mode' for more information.\"\n\n  # These modes are in order of execution frequency so that they run quickly.\n  case $mode in\n  # libtool compile mode\n  compile)\n    modename=\"$modename: compile\"\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=\"$nonopt\"  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n\n    for arg\n    do\n      case $arg_mode in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=\"$arg\"\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=\"$arg\"\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  if test -n \"$libobj\" ; then\n\t    $echo \"$modename: you cannot specify \\`-o' more than once\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-static | -prefer-pic | -prefer-non-pic)\n\t  later=\"$later $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  args=`$echo \"X$arg\" | $Xsed -e \"s/^-Wc,//\"`\n\t  lastarg=\n\t  save_ifs=\"$IFS\"; IFS=','\n \t  for arg in $args; do\n\t    IFS=\"$save_ifs\"\n\n\t    # Double-quote args containing other shell metacharacters.\n\t    # Many Bourne shells cannot handle close brackets correctly\n\t    # in scan sets, so we specify it separately.\n\t    case $arg in\n\t      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\t      arg=\"\\\"$arg\\\"\"\n\t      ;;\n\t    esac\n\t    lastarg=\"$lastarg $arg\"\n\t  done\n\t  IFS=\"$save_ifs\"\n\t  lastarg=`$echo \"X$lastarg\" | $Xsed -e \"s/^ //\"`\n\n\t  # Add the arguments to base_compile.\n\t  base_compile=\"$base_compile $lastarg\"\n\t  continue\n\t  ;;\n\n\t* )\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=\"$srcfile\"\n\t  srcfile=\"$arg\"\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      lastarg=`$echo \"X$lastarg\" | $Xsed -e \"$sed_quote_subst\"`\n\n      case $lastarg in\n      # Double-quote args containing other shell metacharacters.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, and some SunOS ksh mistreat backslash-escaping\n      # in scan sets (worked around with variable expansion),\n      # and furthermore cannot handle '|' '&' '(' ')' in scan sets \n      # at all, so we specify them separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\tlastarg=\"\\\"$lastarg\\\"\"\n\t;;\n      esac\n\n      base_compile=\"$base_compile $lastarg\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      $echo \"$modename: you must specify an argument for -Xcompile\"\n      exit $EXIT_FAILURE\n      ;;\n    target)\n      $echo \"$modename: you must specify a target with \\`-o'\" 1>&2\n      exit $EXIT_FAILURE\n      ;;\n    *)\n      # Get the name of the library object.\n      [ -z \"$libobj\" ] && libobj=`$echo \"X$srcfile\" | $Xsed -e 's%^.*/%%'`\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    xform='[cCFSifmso]'\n    case $libobj in\n    *.ada) xform=ada ;;\n    *.adb) xform=adb ;;\n    *.ads) xform=ads ;;\n    *.asm) xform=asm ;;\n    *.c++) xform=c++ ;;\n    *.cc) xform=cc ;;\n    *.ii) xform=ii ;;\n    *.class) xform=class ;;\n    *.cpp) xform=cpp ;;\n    *.cxx) xform=cxx ;;\n    *.f90) xform=f90 ;;\n    *.for) xform=for ;;\n    *.java) xform=java ;;\n    esac\n\n    libobj=`$echo \"X$libobj\" | $Xsed -e \"s/\\.$xform$/.lo/\"`\n\n    case $libobj in\n    *.lo) obj=`$echo \"X$libobj\" | $Xsed -e \"$lo2o\"` ;;\n    *)\n      $echo \"$modename: cannot determine name of library object from \\`$libobj'\" 1>&2\n      exit $EXIT_FAILURE\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -static)\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    qlibobj=`$echo \"X$libobj\" | $Xsed -e \"$sed_quote_subst\"`\n    case $qlibobj in\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\tqlibobj=\"\\\"$qlibobj\\\"\" ;;\n    esac\n    test \"X$libobj\" != \"X$qlibobj\" \\\n\t&& $echo \"X$libobj\" | grep '[]~#^*{};<>?\"'\"'\"' \t&()|`$[]' \\\n\t&& $echo \"$modename: libobj name \\`$libobj' may not contain shell special characters.\"\n    objname=`$echo \"X$obj\" | $Xsed -e 's%^.*/%%'`\n    xdir=`$echo \"X$obj\" | $Xsed -e 's%/[^/]*$%%'`\n    if test \"X$xdir\" = \"X$obj\"; then\n      xdir=\n    else\n      xdir=$xdir/\n    fi\n    lobj=${xdir}$objdir/$objname\n\n    if test -z \"$base_compile\"; then\n      $echo \"$modename: you must specify a compilation command\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    # Delete any leftover library objects.\n    if test \"$build_old_libs\" = yes; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    $run $rm $removelist\n    trap \"$run $rm $removelist; exit $EXIT_FAILURE\" 1 2 15\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2*)\n      pic_mode=default\n      ;;\n    esac\n    if test \"$pic_mode\" = no && test \"$deplibs_check_method\" != pass_all; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test \"$compiler_c_o\" = no; then\n      output_obj=`$echo \"X$srcfile\" | $Xsed -e 's%^.*/%%' -e 's%\\.[^.]*$%%'`.${objext}\n      lockfile=\"$output_obj.lock\"\n      removelist=\"$removelist $output_obj $lockfile\"\n      trap \"$run $rm $removelist; exit $EXIT_FAILURE\" 1 2 15\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test \"$need_locks\" = yes; then\n      until $run ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\t$show \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test \"$need_locks\" = warn; then\n      if test -f \"$lockfile\"; then\n\t$echo \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$run $rm $removelist\n\texit $EXIT_FAILURE\n      fi\n      $echo \"$srcfile\" > \"$lockfile\"\n    fi\n\n    if test -n \"$fix_srcfile_path\"; then\n      eval srcfile=\\\"$fix_srcfile_path\\\"\n    fi\n    qsrcfile=`$echo \"X$srcfile\" | $Xsed -e \"$sed_quote_subst\"`\n    case $qsrcfile in\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n      qsrcfile=\"\\\"$qsrcfile\\\"\" ;;\n    esac\n\n    $run $rm \"$libobj\" \"${libobj}T\"\n\n    # Create a libtool object file (analogous to a \".la\" file),\n    # but don't create it if we're doing a dry run.\n    test -z \"$run\" && cat > ${libobj}T <<EOF\n# $libobj - a libtool object file\n# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\nEOF\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test \"$build_libtool_libs\" = yes; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test \"$pic_mode\" != no; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      if test ! -d \"${xdir}$objdir\"; then\n\t$show \"$mkdir ${xdir}$objdir\"\n\t$run $mkdir ${xdir}$objdir\n\texit_status=$?\n\tif test \"$exit_status\" -ne 0 && test ! -d \"${xdir}$objdir\"; then\n\t  exit $exit_status\n\tfi\n      fi\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tcommand=\"$command -o $lobj\"\n      fi\n\n      $run $rm \"$lobj\" \"$output_obj\"\n\n      $show \"$command\"\n      if $run eval \"$command\"; then :\n      else\n\ttest -n \"$output_obj\" && $run $rm $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$echo \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$run $rm $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\t$show \"$mv $output_obj $lobj\"\n\tif $run $mv $output_obj $lobj; then :\n\telse\n\t  error=$?\n\t  $run $rm $removelist\n\t  exit $error\n\tfi\n      fi\n\n      # Append the name of the PIC object to the libtool object file.\n      test -z \"$run\" && cat >> ${libobj}T <<EOF\npic_object='$objdir/$objname'\n\nEOF\n\n      # Allow error messages only from the first compilation.\n      if test \"$suppress_opt\" = yes; then\n        suppress_output=' >/dev/null 2>&1'\n      fi\n    else\n      # No PIC object so indicate it doesn't exist in the libtool\n      # object file.\n      test -z \"$run\" && cat >> ${libobj}T <<EOF\npic_object=none\n\nEOF\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test \"$build_old_libs\" = yes; then\n      if test \"$pic_mode\" != yes; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test \"$compiler_c_o\" = yes; then\n\tcommand=\"$command -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      command=\"$command$suppress_output\"\n      $run $rm \"$obj\" \"$output_obj\"\n      $show \"$command\"\n      if $run eval \"$command\"; then :\n      else\n\t$run $rm $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$echo \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$run $rm $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\t$show \"$mv $output_obj $obj\"\n\tif $run $mv $output_obj $obj; then :\n\telse\n\t  error=$?\n\t  $run $rm $removelist\n\t  exit $error\n\tfi\n      fi\n\n      # Append the name of the non-PIC object the libtool object file.\n      # Only append if the libtool object file exists.\n      test -z \"$run\" && cat >> ${libobj}T <<EOF\n# Name of the non-PIC object.\nnon_pic_object='$objname'\n\nEOF\n    else\n      # Append the name of the non-PIC object the libtool object file.\n      # Only append if the libtool object file exists.\n      test -z \"$run\" && cat >> ${libobj}T <<EOF\n# Name of the non-PIC object.\nnon_pic_object=none\n\nEOF\n    fi\n\n    $run $mv \"${libobj}T\" \"${libobj}\"\n\n    # Unlock the critical section if it was locked\n    if test \"$need_locks\" != no; then\n      $run $rm \"$lockfile\"\n    fi\n\n    exit $EXIT_SUCCESS\n    ;;\n\n  # libtool link mode\n  link | relink)\n    modename=\"$modename: link\"\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # which system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll which has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=\"$nonopt\"\n    base_compile=\"$nonopt $@\"\n    compile_command=\"$nonopt\"\n    finalize_command=\"$nonopt\"\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n\n    avoid_version=no\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    non_pic_objects=\n    notinst_path= # paths that contain not-installed libtool libraries\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=no\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -all-static | -static)\n\tif test \"X$arg\" = \"X-all-static\"; then\n\t  if test \"$build_libtool_libs\" = yes && test -z \"$link_static_flag\"; then\n\t    $echo \"$modename: warning: complete static linking is impossible in this configuration\" 1>&2\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\telse\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=built\n\tfi\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=\"$1\"\n      shift\n      case $arg in\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\tqarg=\\\"`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\\\" ### testsuite: skip nested quoting test\n\t;;\n      *) qarg=$arg ;;\n      esac\n      libtool_args=\"$libtool_args $qarg\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  compile_command=\"$compile_command @OUTPUT@\"\n\t  finalize_command=\"$finalize_command @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tdlfiles|dlprefiles)\n\t  if test \"$preload\" = no; then\n\t    # Add the symbol object into the linking commands.\n\t    compile_command=\"$compile_command @SYMFILE@\"\n\t    finalize_command=\"$finalize_command @SYMFILE@\"\n\t    preload=yes\n\t  fi\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test \"$dlself\" = no; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test \"$prev\" = dlprefiles; then\n\t      dlself=yes\n\t    elif test \"$prev\" = dlfiles && test \"$dlopen_self\" != yes; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test \"$prev\" = dlfiles; then\n\t      dlfiles=\"$dlfiles $arg\"\n\t    else\n\t      dlprefiles=\"$dlprefiles $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=\"$arg\"\n\t  if test ! -f \"$arg\"; then\n\t    $echo \"$modename: symbol file \\`$arg' does not exist\"\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=\"-$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat $save_arg`\n\t    do\n#\t      moreargs=\"$moreargs $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if (${SED} -e '2q' $arg | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\t# If there is no directory component, then add one.\n\t\tcase $arg in\n\t\t*/* | *\\\\*) . $arg ;;\n\t\t*) . ./$arg ;;\n\t\tesac\n\n\t\tif test -z \"$pic_object\" || \\\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test \"$pic_object\" = none && \\\n\t\t   test \"$non_pic_object\" = none; then\n\t\t  $echo \"$modename: cannot find name of object for \\`$arg'\" 1>&2\n\t\t  exit $EXIT_FAILURE\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\txdir=`$echo \"X$arg\" | $Xsed -e 's%/[^/]*$%%'`\n\t\tif test \"X$xdir\" = \"X$arg\"; then\n\t\t  xdir=\n\t\telse\n\t\t  xdir=\"$xdir/\"\n\t\tfi\n\n\t\tif test \"$pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=\"$xdir$pic_object\"\n\n\t\t  if test \"$prev\" = dlfiles; then\n\t\t    if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\t      dlfiles=\"$dlfiles $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test \"$prev\" = dlprefiles; then\n\t\t    # Preload the old-style object.\n\t\t    dlprefiles=\"$dlprefiles $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  libobjs=\"$libobjs $pic_object\"\n\t\t  arg=\"$pic_object\"\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test \"$non_pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=\"$xdir$non_pic_object\"\n\n\t\t  # A standard non-PIC object\n\t\t  non_pic_objects=\"$non_pic_objects $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t\t    arg=\"$non_pic_object\"\n\t\t  fi\n\t\telse\n\t\t  # If the PIC object exists, use it instead.\n\t\t  # $xdir was prepended to $pic_object above.\n\t\t  non_pic_object=\"$pic_object\"\n\t\t  non_pic_objects=\"$non_pic_objects $non_pic_object\"\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif test -z \"$run\"; then\n\t\t  $echo \"$modename: \\`$arg' is not a valid libtool object\" 1>&2\n\t\t  exit $EXIT_FAILURE\n\t\telse\n\t\t  # Dry-run case.\n\n\t\t  # Extract subdirectory from the argument.\n\t\t  xdir=`$echo \"X$arg\" | $Xsed -e 's%/[^/]*$%%'`\n\t\t  if test \"X$xdir\" = \"X$arg\"; then\n\t\t    xdir=\n\t\t  else\n\t\t    xdir=\"$xdir/\"\n\t\t  fi\n\n\t\t  pic_object=`$echo \"X${xdir}${objdir}/${arg}\" | $Xsed -e \"$lo2o\"`\n\t\t  non_pic_object=`$echo \"X${xdir}${arg}\" | $Xsed -e \"$lo2o\"`\n\t\t  libobjs=\"$libobjs $pic_object\"\n\t\t  non_pic_objects=\"$non_pic_objects $non_pic_object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    $echo \"$modename: link input file \\`$save_arg' does not exist\"\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    $echo \"$modename: only absolute run-paths are allowed\" 1>&2\n\t    exit $EXIT_FAILURE\n\t    ;;\n\t  esac\n\t  if test \"$prev\" = rpath; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) rpath=\"$rpath $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) xrpath=\"$xrpath $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\txcompiler)\n\t  compiler_flags=\"$compiler_flags $qarg\"\n\t  prev=\n\t  compile_command=\"$compile_command $qarg\"\n\t  finalize_command=\"$finalize_command $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  linker_flags=\"$linker_flags $qarg\"\n\t  compiler_flags=\"$compiler_flags $wl$qarg\"\n\t  prev=\n\t  compile_command=\"$compile_command $wl$qarg\"\n\t  finalize_command=\"$finalize_command $wl$qarg\"\n\t  continue\n\t  ;;\n\txcclinker)\n\t  linker_flags=\"$linker_flags $qarg\"\n\t  compiler_flags=\"$compiler_flags $qarg\"\n\t  prev=\n\t  compile_command=\"$compile_command $qarg\"\n\t  finalize_command=\"$finalize_command $qarg\"\n\t  continue\n\t  ;;\n\tshrext)\n  \t  shrext_cmds=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tdarwin_framework|darwin_framework_skip)\n\t  test \"$prev\" = \"darwin_framework\" && compiler_flags=\"$compiler_flags $arg\"\n\t  compile_command=\"$compile_command $arg\"\n\t  finalize_command=\"$finalize_command $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=\"$arg\"\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  compile_command=\"$compile_command $link_static_flag\"\n\t  finalize_command=\"$finalize_command $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\t$echo \"$modename: \\`-allow-undefined' is deprecated because it is the default\" 1>&2\n\tcontinue\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  $echo \"$modename: more than one -exported-symbols argument is not allowed\"\n\t  exit $EXIT_FAILURE\n\tfi\n\tif test \"X$arg\" = \"X-export-symbols\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework|-arch|-isysroot)\n\tcase \" $CC \" in\n\t  *\" ${arg} ${1} \"* | *\" ${arg}\t${1} \"*) \n\t\tprev=darwin_framework_skip ;;\n\t  *) compiler_flags=\"$compiler_flags $arg\"\n\t     prev=darwin_framework ;;\n\tesac\n\tcompile_command=\"$compile_command $arg\"\n\tfinalize_command=\"$finalize_command $arg\"\n\tcontinue\n\t;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  compile_command=\"$compile_command $arg\"\n\t  finalize_command=\"$finalize_command $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tdir=`$echo \"X$arg\" | $Xsed -e 's/^-L//'`\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  if test -z \"$absdir\"; then\n\t    $echo \"$modename: cannot determine absolute directory name of \\`$dir'\" 1>&2\n\t    absdir=\"$dir\"\n\t    notinst_path=\"$notinst_path $dir\"\n\t  fi\n\t  dir=\"$absdir\"\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"*) ;;\n\t*)\n\t  deplibs=\"$deplibs -L$dir\"\n\t  lib_search_path=\"$lib_search_path $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)\n\t  testbindir=`$echo \"X$dir\" | $Xsed -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  *) dllsearchpath=\"$dllsearchpath:$dir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  *) dllsearchpath=\"$dllsearchpath:$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test \"X$arg\" = \"X-lc\" || test \"X$arg\" = \"X-lm\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    deplibs=\"$deplibs -framework System\"\n\t    continue\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  esac\n\telif test \"X$arg\" = \"X-lc_r\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tdeplibs=\"$deplibs $arg\"\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      -model)\n\tcompile_command=\"$compile_command $arg\"\n\tcompiler_flags=\"$compiler_flags $arg\"\n\tfinalize_command=\"$finalize_command $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n     -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe)\n\tcompiler_flags=\"$compiler_flags $arg\"\n\tcompile_command=\"$compile_command $arg\"\n\tfinalize_command=\"$finalize_command $arg\"\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # -64, -mips[0-9] enable 64-bit mode on the SGI compiler\n      # -r[0-9][0-9]* specifies the processor on the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode on the Sun compiler\n      # +DA*, +DD* enable 64-bit mode on the HP compiler\n      # -q* pass through compiler args for the IBM compiler\n      # -m* pass through architecture-specific compiler args for GCC\n      # -m*, -t[45]*, -txscale* pass through architecture-specific\n      # compiler args for GCC\n      # -pg pass through profiling flag for GCC\n      # @file GCC response files\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*|-pg| \\\n      -t[45]*|-txscale*|@*)\n\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\targ=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n\tcase $arg in\n\t*[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\t  arg=\"\\\"$arg\\\"\"\n\t  ;;\n\tesac\n        compile_command=\"$compile_command $arg\"\n        finalize_command=\"$finalize_command $arg\"\n        compiler_flags=\"$compiler_flags $arg\"\n        continue\n        ;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # in order for the loader to find any dlls it needs.\n\t  $echo \"$modename: warning: \\`-no-install' is ignored for $host\" 1>&2\n\t  $echo \"$modename: warning: assuming \\`-no-fast-install' instead\" 1>&2\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tdir=`$echo \"X$arg\" | $Xsed -e 's/^-R//'`\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  $echo \"$modename: only absolute run-paths are allowed\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) xrpath=\"$xrpath $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -static)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -Wc,*)\n\targs=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\" -e 's/^-Wc,//'`\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n\t  case $flag in\n\t    *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\t    flag=\"\\\"$flag\\\"\"\n\t    ;;\n\t  esac\n\t  arg=\"$arg $wl$flag\"\n\t  compiler_flags=\"$compiler_flags $flag\"\n\tdone\n\tIFS=\"$save_ifs\"\n\targ=`$echo \"X$arg\" | $Xsed -e \"s/^ //\"`\n\t;;\n\n      -Wl,*)\n\targs=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\" -e 's/^-Wl,//'`\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n\t  case $flag in\n\t    *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\t    flag=\"\\\"$flag\\\"\"\n\t    ;;\n\t  esac\n\t  arg=\"$arg $wl$flag\"\n\t  compiler_flags=\"$compiler_flags $wl$flag\"\n\t  linker_flags=\"$linker_flags $flag\"\n\tdone\n\tIFS=\"$save_ifs\"\n\targ=`$echo \"X$arg\" | $Xsed -e \"s/^ //\"`\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # Some other compiler flag.\n      -* | +*)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\targ=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n\tcase $arg in\n\t*[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\t  arg=\"\\\"$arg\\\"\"\n\t  ;;\n\tesac\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tobjs=\"$objs $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif (${SED} -e '2q' $arg | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  # If there is no directory component, then add one.\n\t  case $arg in\n\t  */* | *\\\\*) . $arg ;;\n\t  *) . ./$arg ;;\n\t  esac\n\n\t  if test -z \"$pic_object\" || \\\n\t     test -z \"$non_pic_object\" ||\n\t     test \"$pic_object\" = none && \\\n\t     test \"$non_pic_object\" = none; then\n\t    $echo \"$modename: cannot find name of object for \\`$arg'\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  xdir=`$echo \"X$arg\" | $Xsed -e 's%/[^/]*$%%'`\n\t  if test \"X$xdir\" = \"X$arg\"; then\n\t    xdir=\n \t  else\n\t    xdir=\"$xdir/\"\n\t  fi\n\n\t  if test \"$pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=\"$xdir$pic_object\"\n\n\t    if test \"$prev\" = dlfiles; then\n\t      if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\tdlfiles=\"$dlfiles $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test \"$prev\" = dlprefiles; then\n\t      # Preload the old-style object.\n\t      dlprefiles=\"$dlprefiles $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    libobjs=\"$libobjs $pic_object\"\n\t    arg=\"$pic_object\"\n\t  fi\n\n\t  # Non-PIC object.\n\t  if test \"$non_pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=\"$xdir$non_pic_object\"\n\n\t    # A standard non-PIC object\n\t    non_pic_objects=\"$non_pic_objects $non_pic_object\"\n\t    if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t      arg=\"$non_pic_object\"\n\t    fi\n\t  else\n\t    # If the PIC object exists, use it instead.\n\t    # $xdir was prepended to $pic_object above.\n\t    non_pic_object=\"$pic_object\"\n\t    non_pic_objects=\"$non_pic_objects $non_pic_object\"\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if test -z \"$run\"; then\n\t    $echo \"$modename: \\`$arg' is not a valid libtool object\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  else\n\t    # Dry-run case.\n\n\t    # Extract subdirectory from the argument.\n\t    xdir=`$echo \"X$arg\" | $Xsed -e 's%/[^/]*$%%'`\n\t    if test \"X$xdir\" = \"X$arg\"; then\n\t      xdir=\n\t    else\n\t      xdir=\"$xdir/\"\n\t    fi\n\n\t    pic_object=`$echo \"X${xdir}${objdir}/${arg}\" | $Xsed -e \"$lo2o\"`\n\t    non_pic_object=`$echo \"X${xdir}${arg}\" | $Xsed -e \"$lo2o\"`\n\t    libobjs=\"$libobjs $pic_object\"\n\t    non_pic_objects=\"$non_pic_objects $non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tdeplibs=\"$deplibs $arg\"\n\told_deplibs=\"$old_deplibs $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tif test \"$prev\" = dlfiles; then\n\t  # This library was specified with -dlopen.\n\t  dlfiles=\"$dlfiles $arg\"\n\t  prev=\n\telif test \"$prev\" = dlprefiles; then\n\t  # The library was specified with -dlpreopen.\n\t  dlprefiles=\"$dlprefiles $arg\"\n\t  prev=\n\telse\n\t  deplibs=\"$deplibs $arg\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\targ=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n\tcase $arg in\n\t*[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\t  arg=\"\\\"$arg\\\"\"\n\t  ;;\n\tesac\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tcompile_command=\"$compile_command $arg\"\n\tfinalize_command=\"$finalize_command $arg\"\n      fi\n    done # argument parsing loop\n\n    if test -n \"$prev\"; then\n      $echo \"$modename: the \\`$prevarg' option requires an argument\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    if test \"$export_dynamic\" = yes && test -n \"$export_dynamic_flag_spec\"; then\n      eval arg=\\\"$export_dynamic_flag_spec\\\"\n      compile_command=\"$compile_command $arg\"\n      finalize_command=\"$finalize_command $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    outputname=`$echo \"X$output\" | $Xsed -e 's%^.*/%%'`\n    libobjs_save=\"$libobjs\"\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$echo \\\"X\\${$shlibpath_var}\\\" \\| \\$Xsed -e \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\n    eval sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\n\n    output_objdir=`$echo \"X$output\" | $Xsed -e 's%/[^/]*$%%'`\n    if test \"X$output_objdir\" = \"X$output\"; then\n      output_objdir=\"$objdir\"\n    else\n      output_objdir=\"$output_objdir/$objdir\"\n    fi\n    # Create the object directory.\n    if test ! -d \"$output_objdir\"; then\n      $show \"$mkdir $output_objdir\"\n      $run $mkdir $output_objdir\n      exit_status=$?\n      if test \"$exit_status\" -ne 0 && test ! -d \"$output_objdir\"; then\n\texit $exit_status\n      fi\n    fi\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      $echo \"$modename: you must specify an output file\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    case $host in\n    *cygwin* | *mingw* | *pw32*)\n      # don't eliminate duplications in $postdeps and $predeps\n      duplicate_compiler_generated_deps=yes\n      ;;\n    *)\n      duplicate_compiler_generated_deps=$duplicate_deps\n      ;;\n    esac\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if test \"X$duplicate_deps\" = \"Xyes\" ; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\tesac\n      fi\n      libs=\"$libs $deplib\"\n    done\n\n    if test \"$linkmode\" = lib; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if test \"X$duplicate_compiler_generated_deps\" = \"Xyes\" ; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) specialdeplibs=\"$specialdeplibs $pre_post_deps\" ;;\n\t  esac\n\t  pre_post_deps=\"$pre_post_deps $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    case $linkmode in\n    lib)\n\tpasses=\"conv link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    $echo \"$modename: libraries can \\`-dlopen' only libtool libraries: $file\" 1>&2\n\t    exit $EXIT_FAILURE\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=no\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n    for pass in $passes; do\n      if test \"$linkmode,$pass\" = \"lib,link\" ||\n\t test \"$linkmode,$pass\" = \"prog,scan\"; then\n\tlibs=\"$deplibs\"\n\tdeplibs=\n      fi\n      if test \"$linkmode\" = prog; then\n\tcase $pass in\n\tdlopen) libs=\"$dlfiles\" ;;\n\tdlpreopen) libs=\"$dlprefiles\" ;;\n\tlink) libs=\"$deplibs %DEPLIBS% $dependency_libs\" ;;\n\tesac\n      fi\n      if test \"$pass\" = dlopen; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=\"$deplibs\"\n\tdeplibs=\n      fi\n      for deplib in $libs; do\n\tlib=\n\tfound=no\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    compiler_flags=\"$compiler_flags $deplib\"\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test \"$linkmode\" != lib && test \"$linkmode\" != prog; then\n\t    $echo \"$modename: warning: \\`-l' is ignored for archives/objects\" 1>&2\n\t    continue\n\t  fi\n\t  name=`$echo \"X$deplib\" | $Xsed -e 's/^-l//'`\n\t  for searchdir in $newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=\"$searchdir/lib${name}${search_ext}\"\n\t      if test -f \"$lib\"; then\n\t\tif test \"$search_ext\" = \".la\"; then\n\t\t  found=yes\n\t\telse\n\t\t  found=no\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if test \"$found\" != yes; then\n\t    # deplib doesn't seem to be a libtool library\n\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  else # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif (${SED} -e '2q' $lib |\n                    grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  case $lib in\n\t\t  */* | *\\\\*) . $lib ;;\n\t\t  *) . ./$lib ;;\n\t\t  esac\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=\"$l\"\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\" ; then # only static version available\n\t\t    found=no\n\t\t    ladir=`$echo \"X$lib\" | $Xsed -e 's%/[^/]*$%%'`\n\t\t    test \"X$ladir\" = \"X$lib\" && ladir=\".\"\n\t\t    lib=$ladir/$old_library\n\t\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t        ;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  fi\n\t  ;; # -l\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test \"$pass\" = conv && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    newlib_search_path=\"$newlib_search_path \"`$echo \"X$deplib\" | $Xsed -e 's/^-L//'`\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" = conv; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test \"$pass\" = scan; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    newlib_search_path=\"$newlib_search_path \"`$echo \"X$deplib\" | $Xsed -e 's/^-L//'`\n\t    ;;\n\t  *)\n\t    $echo \"$modename: warning: \\`-L' is ignored for archives/objects\" 1>&2\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test \"$pass\" = link; then\n\t    dir=`$echo \"X$deplib\" | $Xsed -e 's/^-R//'`\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) xrpath=\"$xrpath $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la) lib=\"$deplib\" ;;\n\t*.$libext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    valid_a_lib=no\n\t    case $deplibs_check_method in\n\t      match_pattern*)\n\t\tset dummy $deplibs_check_method\n\t        match_pattern_regex=`expr \"$deplibs_check_method\" : \"$2 \\(.*\\)\"`\n\t\tif eval $echo \\\"$deplib\\\" 2>/dev/null \\\n\t\t    | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t  valid_a_lib=yes\n\t\tfi\n\t\t;;\n\t      pass_all)\n\t\tvalid_a_lib=yes\n\t\t;;\n            esac\n\t    if test \"$valid_a_lib\" != yes; then\n\t      $echo\n\t      $echo \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t      $echo \"*** I have the capability to make that library automatically link in when\"\n\t      $echo \"*** you link to this library.  But I can only do this if you have a\"\n\t      $echo \"*** shared version of the library, which you do not appear to have\"\n\t      $echo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t      $echo \"*** that it is just a static archive that I should not used here.\"\n\t    else\n\t      $echo\n\t      $echo \"*** Warning: Linking the shared library $output against the\"\n\t      $echo \"*** static library $deplib is not portable!\"\n\t      deplibs=\"$deplib $deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" != link; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test \"$linkmode\" = prog; then\n\t    if test \"$pass\" = dlpreopen || test \"$dlopen_support\" != yes || test \"$build_libtool_libs\" = no; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      newdlprefiles=\"$newdlprefiles $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      newdlfiles=\"$newdlfiles $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=yes\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\tif test \"$found\" = yes || test -f \"$lib\"; then :\n\telse\n\t  $echo \"$modename: cannot find the library \\`$lib' or unhandled argument \\`$deplib'\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\t# Check to see that this really is a libtool archive.\n\tif (${SED} -e '2q' $lib | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then :\n\telse\n\t  $echo \"$modename: \\`$lib' is not a valid libtool archive\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\tladir=`$echo \"X$lib\" | $Xsed -e 's%/[^/]*$%%'`\n\ttest \"X$ladir\" = \"X$lib\" && ladir=\".\"\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tcase $lib in\n\t*/* | *\\\\*) . $lib ;;\n\t*) . ./$lib ;;\n\tesac\n\n\tif test \"$linkmode,$pass\" = \"lib,link\" ||\n\t   test \"$linkmode,$pass\" = \"prog,scan\" ||\n\t   { test \"$linkmode\" != prog && test \"$linkmode\" != lib; }; then\n\t  test -n \"$dlopen\" && dlfiles=\"$dlfiles $dlopen\"\n\t  test -n \"$dlpreopen\" && dlprefiles=\"$dlprefiles $dlpreopen\"\n\tfi\n\n\tif test \"$pass\" = conv; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      $echo \"$modename: cannot find name of link library for \\`$lib'\" 1>&2\n\t      exit $EXIT_FAILURE\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    convenience=\"$convenience $ladir/$objdir/$old_library\"\n\t    old_convenience=\"$old_convenience $ladir/$objdir/$old_library\"\n\t    tmp_libs=\n\t    for deplib in $dependency_libs; do\n\t      deplibs=\"$deplib $deplibs\"\n              if test \"X$duplicate_deps\" = \"Xyes\" ; then\n\t        case \"$tmp_libs \" in\n\t        *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t        esac\n              fi\n\t      tmp_libs=\"$tmp_libs $deplib\"\n\t    done\n\t  elif test \"$linkmode\" != prog && test \"$linkmode\" != lib; then\n\t    $echo \"$modename: \\`$lib' is not a convenience library\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tfor l in $old_library $library_names; do\n\t  linklib=\"$l\"\n\tdone\n\tif test -z \"$linklib\"; then\n\t  $echo \"$modename: cannot find name of link library for \\`$lib'\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test \"$pass\" = dlopen; then\n\t  if test -z \"$libdir\"; then\n\t    $echo \"$modename: cannot -dlopen a convenience library: \\`$lib'\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  if test -z \"$dlname\" ||\n\t     test \"$dlopen_support\" != yes ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    dlprefiles=\"$dlprefiles $lib $dependency_libs\"\n\t  else\n\t    newdlfiles=\"$newdlfiles $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=\"$ladir\" ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    $echo \"$modename: warning: cannot determine absolute directory name of \\`$ladir'\" 1>&2\n\t    $echo \"$modename: passing it literally to the linker, although it might fail\" 1>&2\n\t    abs_ladir=\"$ladir\"\n\t  fi\n\t  ;;\n\tesac\n\tlaname=`$echo \"X$lib\" | $Xsed -e 's%^.*/%%'`\n\n\t# Find the relevant object directory and library name.\n\tif test \"X$installed\" = Xyes; then\n\t  if test ! -f \"$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    $echo \"$modename: warning: library \\`$lib' was moved.\" 1>&2\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    libdir=\"$abs_ladir\"\n\t  else\n\t    dir=\"$libdir\"\n\t    absdir=\"$libdir\"\n\t  fi\n\t  test \"X$hardcode_automatic\" = Xyes && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    # Remove this search path later\n\t    notinst_path=\"$notinst_path $abs_ladir\"\n\t  else\n\t    dir=\"$ladir/$objdir\"\n\t    absdir=\"$abs_ladir/$objdir\"\n\t    # Remove this search path later\n\t    notinst_path=\"$notinst_path $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tname=`$echo \"X$laname\" | $Xsed -e 's/\\.la$//' -e 's/^lib//'`\n\n\t# This library was specified with -dlpreopen.\n\tif test \"$pass\" = dlpreopen; then\n\t  if test -z \"$libdir\"; then\n\t    $echo \"$modename: cannot -dlpreopen a convenience library: \\`$lib'\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t  # are required to link).\n\t  if test -n \"$old_library\"; then\n\t    newdlprefiles=\"$newdlprefiles $dir/$old_library\"\n\t  # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t  elif test -n \"$dlname\"; then\n\t    newdlprefiles=\"$newdlprefiles $dir/$dlname\"\n\t  else\n\t    newdlprefiles=\"$newdlprefiles $dir/$linklib\"\n\t  fi\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test \"$linkmode\" = lib; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test \"$linkmode\" = prog && test \"$pass\" != link; then\n\t  newlib_search_path=\"$newlib_search_path $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=no\n\t  if test \"$link_all_deplibs\" != no || test -z \"$library_names\" ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    linkalldeplibs=yes\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) newlib_search_path=\"$newlib_search_path \"`$echo \"X$deplib\" | $Xsed -e 's/^-L//'`;; ### testsuite: skip nested quoting test\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if test \"$linkalldeplibs\" = yes; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if test \"X$duplicate_deps\" = \"Xyes\" ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t      esac\n\t    fi\n\t    tmp_libs=\"$tmp_libs $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t  if test -n \"$library_names\" &&\n\t     { test \"$prefer_static_libs\" = no || test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\" ; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case \"$temp_rpath \" in\n\t      *\" $dir \"*) ;;\n\t      *\" $absdir \"*) ;;\n\t      *) temp_rpath=\"$temp_rpath $absdir\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) compile_rpath=\"$compile_rpath $absdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) finalize_rpath=\"$finalize_rpath $libdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if test \"$alldeplibs\" = yes &&\n\t     { test \"$deplibs_check_method\" = pass_all ||\n\t       { test \"$build_libtool_libs\" = yes &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tuse_static_libs=$prefer_static_libs\n\tif test \"$use_static_libs\" = built && test \"$installed\" = yes ; then\n\t  use_static_libs=no\n\tfi\n\tif test -n \"$library_names\" &&\n\t   { test \"$use_static_libs\" = no || test -z \"$old_library\"; }; then\n\t  if test \"$installed\" = no; then\n\t    notinst_deplibs=\"$notinst_deplibs $lib\"\n\t    need_relink=yes\n\t  fi\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on\n\t  # some systems (darwin)\n\t  if test \"$shouldnotlink\" = yes && test \"$pass\" = link ; then\n\t    $echo\n\t    if test \"$linkmode\" = prog; then\n\t      $echo \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $echo \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $echo \"*** $linklib is not portable!\"\n\t  fi\n\t  if test \"$linkmode\" = lib &&\n\t     test \"$hardcode_into_libs\" = yes; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) compile_rpath=\"$compile_rpath $absdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) finalize_rpath=\"$finalize_rpath $libdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    realname=\"$2\"\n\t    shift; shift\n\t    libname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=\"$dlname\"\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw*)\n\t\tmajor=`expr $current - $age`\n\t\tversuffix=\"-$major\"\n\t\t;;\n\t      esac\n\t      eval soname=\\\"$soname_spec\\\"\n\t    else\n\t      soname=\"$realname\"\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=\"$soname\"\n\t    soname=`$echo $soroot | ${SED} -e 's/^.*\\///'`\n\t    newlib=\"libimp-`$echo $soname | ${SED} 's/^lib//;s/\\.dll$//'`.a\"\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      $show \"extracting exported symbol list from \\`$soname'\"\n\t      save_ifs=\"$IFS\"; IFS='~'\n\t      cmds=$extract_expsyms_cmds\n\t      for cmd in $cmds; do\n\t\tIFS=\"$save_ifs\"\n\t\teval cmd=\\\"$cmd\\\"\n\t\t$show \"$cmd\"\n\t\t$run eval \"$cmd\" || exit $?\n\t      done\n\t      IFS=\"$save_ifs\"\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      $show \"generating import library for \\`$soname'\"\n\t      save_ifs=\"$IFS\"; IFS='~'\n\t      cmds=$old_archive_from_expsyms_cmds\n\t      for cmd in $cmds; do\n\t\tIFS=\"$save_ifs\"\n\t\teval cmd=\\\"$cmd\\\"\n\t\t$show \"$cmd\"\n\t\t$run eval \"$cmd\" || exit $?\n\t      done\n\t      IFS=\"$save_ifs\"\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test \"$linkmode\" = prog || test \"$mode\" != relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test \"$hardcode_direct\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t\tcase $host in\n\t\t  *-*-sco3.2v5.0.[024]*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv4*uw2*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \\\n\t\t    *-*-unixware7*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a module then we can not link against\n\t\t    # it, someone is ignoring the new warnings I added\n\t\t    if /usr/bin/file -L $add 2> /dev/null |\n                      $EGREP \": [^:]* bundle\" >/dev/null ; then\n\t\t      $echo \"** Warning, lib $linklib is a module, not a shared library\"\n\t\t      if test -z \"$old_library\" ; then\n\t\t        $echo\n\t\t        $echo \"** And there doesn't seem to be a static archive available\"\n\t\t        $echo \"** The link will probably fail, sorry\"\n\t\t      else\n\t\t        add=\"$dir/$old_library\"\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test \"$hardcode_minus_L\" = no; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=\"$dir\" ;;\n\t\tesac\n\t\tadd_dir=\"-L$dir\"\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = no; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test \"$hardcode_direct\" = yes; then\n\t\tadd=\"$dir/$linklib\"\n\t      elif test \"$hardcode_minus_L\" = yes; then\n\t\tadd_dir=\"-L$dir\"\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case $libdir in\n\t\t    [\\\\/]*)\n\t\t      add_dir=\"$add_dir -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = yes; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test \"$lib_linked\" != yes; then\n\t      $echo \"$modename: configuration error: unsupported hardcode properties\"\n\t      exit $EXIT_FAILURE\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) compile_shlibpath=\"$compile_shlibpath$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test \"$hardcode_direct\" != yes && \\\n\t\t test \"$hardcode_minus_L\" != yes && \\\n\t\t test \"$hardcode_shlibpath_var\" = yes; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) finalize_shlibpath=\"$finalize_shlibpath$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test \"$linkmode\" = prog || test \"$mode\" = relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test \"$hardcode_direct\" = yes; then\n\t      add=\"$libdir/$linklib\"\n\t    elif test \"$hardcode_minus_L\" = yes; then\n\t      add_dir=\"-L$libdir\"\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_shlibpath_var\" = yes; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) finalize_shlibpath=\"$finalize_shlibpath$libdir:\" ;;\n\t      esac\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_automatic\" = yes; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\" ; then\n\t        add=\"$inst_prefix_dir$libdir/$linklib\"\n\t      else\n\t        add=\"$libdir/$linklib\"\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=\"-L$libdir\"\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase $libdir in\n\t\t  [\\\\/]*)\n\t\t    add_dir=\"$add_dir -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=\"-l$name\"\n\t    fi\n\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test \"$linkmode\" = prog; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test \"$hardcode_direct\" != unsupported; then\n\t    test -n \"$old_library\" && linklib=\"$old_library\"\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test \"$build_libtool_libs\" = yes; then\n\t  # Not a shared library\n\t  if test \"$deplibs_check_method\" != pass_all; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    $echo\n\t    $echo \"*** Warning: This system can not link to static lib archive $lib.\"\n\t    $echo \"*** I have the capability to make that library automatically link in when\"\n\t    $echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    $echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test \"$module\" = yes; then\n\t      $echo \"*** But as you try to build a module library, libtool will still create \"\n\t      $echo \"*** a static module, that should work as long as the dlopening application\"\n\t      $echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\t$echo\n\t\t$echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\t$echo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t\t$echo \"*** not find such a program.  So, this module is probably useless.\"\n\t\t$echo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test \"$build_old_libs\" = no; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test \"$linkmode\" = lib; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test \"$hardcode_into_libs\" != yes ||\n\t       test \"$build_old_libs\" = yes ||\n\t       test \"$link_static\" = yes; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) temp_xrpath=`$echo \"X$libdir\" | $Xsed -e 's/^-R//'`\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) xrpath=\"$xrpath $temp_xrpath\";;\n\t\t   esac;;\n\t      *) temp_deplibs=\"$temp_deplibs $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=\"$temp_deplibs\"\n\t  fi\n\n\t  newlib_search_path=\"$newlib_search_path $absdir\"\n\t  # Link against this library\n\t  test \"$link_static\" = no && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    if test \"X$duplicate_deps\" = \"Xyes\" ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t      esac\n\t    fi\n\t    tmp_libs=\"$tmp_libs $deplib\"\n\t  done\n\n\t  if test \"$link_all_deplibs\" != no; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      -L*) path=\"$deplib\" ;;\n\t      *.la)\n\t\tdir=`$echo \"X$deplib\" | $Xsed -e 's%/[^/]*$%%'`\n\t\ttest \"X$dir\" = \"X$deplib\" && dir=\".\"\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=\"$dir\" ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    $echo \"$modename: warning: cannot determine absolute directory name of \\`$dir'\" 1>&2\n\t\t    absdir=\"$dir\"\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif grep \"^installed=no\" $deplib > /dev/null; then\n\t\t  path=\"$absdir/$objdir\"\n\t\telse\n\t\t  eval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -z \"$libdir\"; then\n\t\t    $echo \"$modename: \\`$deplib' is not a valid libtool archive\" 1>&2\n\t\t    exit $EXIT_FAILURE\n\t\t  fi\n\t\t  if test \"$absdir\" != \"$libdir\"; then\n\t\t    $echo \"$modename: warning: \\`$deplib' seems to be moved\" 1>&2\n\t\t  fi\n\t\t  path=\"$absdir\"\n\t\tfi\n\t\tdepdepl=\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  # we do not want to link against static libs,\n\t\t  # but need to link against shared\n\t\t  eval deplibrary_names=`${SED} -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\" ; then\n\t\t    for tmp in $deplibrary_names ; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$path/$depdepl\" ; then\n\t\t      depdepl=\"$path/$depdepl\"\n\t\t    fi\n\t\t    # do not add paths which are already there\n\t\t    case \" $newlib_search_path \" in\n\t\t    *\" $path \"*) ;;\n\t\t    *) newlib_search_path=\"$newlib_search_path $path\";;\n\t\t    esac\n\t\t  fi\n\t\t  path=\"\"\n\t\t  ;;\n\t\t*)\n\t\t  path=\"-L$path\"\n\t\t  ;;\n\t\tesac\n\t\t;;\n\t      -l*)\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  # Again, we only want to link against shared libraries\n\t\t  eval tmp_libs=`$echo \"X$deplib\" | $Xsed -e \"s,^\\-l,,\"`\n\t\t  for tmp in $newlib_search_path ; do\n\t\t    if test -f \"$tmp/lib$tmp_libs.dylib\" ; then\n\t\t      eval depdepl=\"$tmp/lib$tmp_libs.dylib\"\n\t\t      break\n\t\t    fi\n\t\t  done\n\t\t  path=\"\"\n\t\t  ;;\n\t\t*) continue ;;\n\t\tesac\n\t\t;;\n\t      *) continue ;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $depdepl \"*) ;;\n\t      *) deplibs=\"$depdepl $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      dependency_libs=\"$newdependency_libs\"\n      if test \"$pass\" = dlpreopen; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test \"$pass\" != dlopen; then\n\tif test \"$pass\" != conv; then\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) lib_search_path=\"$lib_search_path $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\tfi\n\n\tif test \"$linkmode,$pass\" != \"prog,link\"; then\n\t  vars=\"deplibs\"\n\telse\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\\"\\$$var\\\"\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) tmp_libs=\"$tmp_libs $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) tmp_libs=\"$tmp_libs $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\\"$tmp_libs\\\"\n\tdone # for var\n      fi\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs ; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\"\"\n\t  ;;\n\tesac\n\tif test -n \"$i\" ; then\n\t  tmp_libs=\"$tmp_libs $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test \"$linkmode\" = prog; then\n      dlfiles=\"$newdlfiles\"\n      dlprefiles=\"$newdlprefiles\"\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$deplibs\"; then\n\t$echo \"$modename: warning: \\`-l' and \\`-L' are ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\t$echo \"$modename: warning: \\`-dlopen' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$rpath\"; then\n\t$echo \"$modename: warning: \\`-rpath' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$xrpath\"; then\n\t$echo \"$modename: warning: \\`-R' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$vinfo\"; then\n\t$echo \"$modename: warning: \\`-version-info/-version-number' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$release\"; then\n\t$echo \"$modename: warning: \\`-release' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t$echo \"$modename: warning: \\`-export-symbols' is ignored for archives\" 1>&2\n      fi\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=\"$output\"\n      objs=\"$objs$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form `libNAME.la'.\n      case $outputname in\n      lib*)\n\tname=`$echo \"X$outputname\" | $Xsed -e 's/\\.la$//' -e 's/^lib//'`\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval libname=\\\"$libname_spec\\\"\n\t;;\n      *)\n\tif test \"$module\" = no; then\n\t  $echo \"$modename: libtool library \\`$output' must begin with \\`lib'\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\tif test \"$need_lib_prefix\" != no; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  name=`$echo \"X$outputname\" | $Xsed -e 's/\\.la$//'`\n\t  eval shared_ext=\\\"$shrext_cmds\\\"\n\t  eval libname=\\\"$libname_spec\\\"\n\telse\n\t  libname=`$echo \"X$outputname\" | $Xsed -e 's/\\.la$//'`\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test \"$deplibs_check_method\" != pass_all; then\n\t  $echo \"$modename: cannot build libtool library \\`$output' from non-libtool objects on this host:$objs\" 2>&1\n\t  exit $EXIT_FAILURE\n\telse\n\t  $echo\n\t  $echo \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $echo \"*** objects $objs is not portable!\"\n\t  libobjs=\"$libobjs $objs\"\n\tfi\n      fi\n\n      if test \"$dlself\" != no; then\n\t$echo \"$modename: warning: \\`-dlopen self' is ignored for libtool libraries\" 1>&2\n      fi\n\n      set dummy $rpath\n      if test \"$#\" -gt 2; then\n\t$echo \"$modename: warning: ignoring multiple \\`-rpath's for a libtool library\" 1>&2\n      fi\n      install_libdir=\"$2\"\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test \"$build_libtool_libs\" = yes; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a `.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\tif test -n \"$vinfo\"; then\n\t  $echo \"$modename: warning: \\`-version-info/-version-number' is ignored for convenience libraries\" 1>&2\n\tfi\n\n\tif test -n \"$release\"; then\n\t  $echo \"$modename: warning: \\`-release' is ignored for convenience libraries\" 1>&2\n\tfi\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=\"$IFS\"; IFS=':'\n\tset dummy $vinfo 0 0 0\n\tIFS=\"$save_ifs\"\n\n\tif test -n \"$8\"; then\n\t  $echo \"$modename: too many parameters to \\`-version-info'\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=\"$2\"\n\t  number_minor=\"$3\"\n\t  number_revision=\"$4\"\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # which has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  darwin|linux|osf|windows)\n\t    current=`expr $number_major + $number_minor`\n\t    age=\"$number_minor\"\n\t    revision=\"$number_revision\"\n\t    ;;\n\t  freebsd-aout|freebsd-elf|sunos)\n\t    current=\"$number_major\"\n\t    revision=\"$number_minor\"\n\t    age=\"0\"\n\t    ;;\n\t  irix|nonstopux)\n\t    current=`expr $number_major + $number_minor - 1`\n\t    age=\"$number_minor\"\n\t    revision=\"$number_minor\"\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=\"$2\"\n\t  revision=\"$3\"\n\t  age=\"$4\"\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  $echo \"$modename: CURRENT \\`$current' must be a nonnegative integer\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  $echo \"$modename: REVISION \\`$revision' must be a nonnegative integer\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  $echo \"$modename: AGE \\`$age' must be a nonnegative integer\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  $echo \"$modename: AGE \\`$age' is greater than the current interface number \\`$current'\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  major=.`expr $current - $age`\n\t  versuffix=\"$major.$age.$revision\"\n\t  # Darwin ld doesn't like 0 for these options...\n\t  minor_current=`expr $current + 1`\n\t  verstring=\"${wl}-compatibility_version ${wl}$minor_current ${wl}-current_version ${wl}$minor_current.$revision\"\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\";\n\t  ;;\n\n\tfreebsd-elf)\n\t  major=\".$current\"\n\t  versuffix=\".$current\";\n\t  ;;\n\n\tirix | nonstopux)\n\t  major=`expr $current - $age + 1`\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=\"$verstring_prefix$major.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test \"$loop\" -ne 0; do\n\t    iface=`expr $revision - $loop`\n\t    loop=`expr $loop - 1`\n\t    verstring=\"$verstring_prefix$major.$iface:$verstring\"\n\t  done\n\n\t  # Before this point, $major must not contain `.'.\n\t  major=.$major\n\t  versuffix=\"$major.$revision\"\n\t  ;;\n\n\tlinux)\n\t  major=.`expr $current - $age`\n\t  versuffix=\"$major.$age.$revision\"\n\t  ;;\n\n\tosf)\n\t  major=.`expr $current - $age`\n\t  versuffix=\".$current.$age.$revision\"\n\t  verstring=\"$current.$age.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test \"$loop\" -ne 0; do\n\t    iface=`expr $current - $loop`\n\t    loop=`expr $loop - 1`\n\t    verstring=\"$verstring:${iface}.0\"\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  verstring=\"$verstring:${current}.0\"\n\t  ;;\n\n\tsunos)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\"\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 filesystems.\n\t  major=`expr $current - $age`\n\t  versuffix=\"-$major\"\n\t  ;;\n\n\t*)\n\t  $echo \"$modename: unknown library version type \\`$version_type'\" 1>&2\n\t  $echo \"Fatal configuration error.  See the $PACKAGE docs for more information.\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=\"0.0\"\n\t    ;;\n\t  esac\n\t  if test \"$need_version\" = no; then\n\t    versuffix=\n\t  else\n\t    versuffix=\".0.0\"\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test \"$avoid_version\" = yes && test \"$need_version\" = no; then\n\t  major=\n\t  versuffix=\n\t  verstring=\"\"\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test \"$allow_undefined\" = yes; then\n\t  if test \"$allow_undefined_flag\" = unsupported; then\n\t    $echo \"$modename: warning: undefined symbols not allowed in $host shared libraries\" 1>&2\n\t    build_libtool_libs=no\n\t    build_old_libs=yes\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=\"$no_undefined_flag\"\n\tfi\n      fi\n\n      if test \"$mode\" != relink; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$echo \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/${libname}${release}.*)\n\t       if test \"X$precious_files_regex\" != \"X\"; then\n\t         if echo $p | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t         then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       removelist=\"$removelist $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\tif test -n \"$removelist\"; then\n\t  $show \"${rm}r $removelist\"\n\t  $run ${rm}r $removelist\n\tfi\n      fi\n\n      # Now set the variables for building old libraries.\n      if test \"$build_old_libs\" = yes && test \"$build_libtool_libs\" != convenience ; then\n\toldlibs=\"$oldlibs $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$echo \"X$libobjs\" | $SP2NL | $Xsed -e '/\\.'${libext}'$/d' -e \"$lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      for path in $notinst_path; do\n\tlib_search_path=`$echo \"$lib_search_path \" | ${SED} -e \"s% $path % %g\"`\n\tdeplibs=`$echo \"$deplibs \" | ${SED} -e \"s% -L$path % %g\"`\n\tdependency_libs=`$echo \"$dependency_libs \" | ${SED} -e \"s% -L$path % %g\"`\n      done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  temp_xrpath=\"$temp_xrpath -R$libdir\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_rpath=\"$finalize_rpath $libdir\" ;;\n\t  esac\n\tdone\n\tif test \"$hardcode_into_libs\" != yes || test \"$build_old_libs\" = yes; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=\"$dlfiles\"\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) dlfiles=\"$dlfiles $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=\"$dlprefiles\"\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) dlprefiles=\"$dlprefiles $lib\" ;;\n\tesac\n      done\n\n      if test \"$build_libtool_libs\" = yes; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    deplibs=\"$deplibs -framework System\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    ;;\n \t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test \"$build_libtool_need_lc\" = \"yes\"; then\n\t      deplibs=\"$deplibs -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\"\"\n\tversuffix=\"\"\n\tmajor=\"\"\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $rm conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $rm conftest\n\t  $LTCC $LTCFLAGS -o conftest conftest.c $deplibs\n\t  if test \"$?\" -eq 0 ; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      name=`expr $i : '-l\\(.*\\)'`\n\t      # If $name is empty we are operating on a -L argument.\n              if test \"$name\" != \"\" && test \"$name\" -ne \"0\"; then\n\t\tif test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    newdeplibs=\"$newdeplibs $i\"\n\t\t    i=\"\"\n\t\t    ;;\n\t\t  esac\n\t        fi\n\t\tif test -n \"$i\" ; then\n\t\t  libname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t\t  deplib_matches=`eval \\\\$echo \\\"$library_names_spec\\\"`\n\t\t  set dummy $deplib_matches\n\t\t  deplib_match=$2\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t    newdeplibs=\"$newdeplibs $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    $echo\n\t\t    $echo \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    $echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    $echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    $echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    $echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    $echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t      else\n\t\tnewdeplibs=\"$newdeplibs $i\"\n\t      fi\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      name=`expr $i : '-l\\(.*\\)'`\n\t      # If $name is empty we are operating on a -L argument.\n              if test \"$name\" != \"\" && test \"$name\" != \"0\"; then\n\t\t$rm conftest\n\t\t$LTCC $LTCFLAGS -o conftest conftest.c $i\n\t\t# Did it work?\n\t\tif test \"$?\" -eq 0 ; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      newdeplibs=\"$newdeplibs $i\"\n\t\t      i=\"\"\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\" ; then\n\t\t    libname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t\t    deplib_matches=`eval \\\\$echo \\\"$library_names_spec\\\"`\n\t\t    set dummy $deplib_matches\n\t\t    deplib_match=$2\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t      newdeplibs=\"$newdeplibs $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      $echo\n\t\t      $echo \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      $echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      $echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      $echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      $echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      $echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  $echo\n\t\t  $echo \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  $echo \"***  make it link in!  You will probably need to install it or some\"\n\t\t  $echo \"*** library that it depends on before this library will be fully\"\n\t\t  $echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t      else\n\t\tnewdeplibs=\"$newdeplibs $i\"\n\t      fi\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$2 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    name=`expr $a_deplib : '-l\\(.*\\)'`\n\t    # If $name is empty we are operating on a -L argument.\n            if test \"$name\" != \"\" && test  \"$name\" != \"0\"; then\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tlibname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null \\\n\t\t\t | grep \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=\"$potent_lib\"\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=\"$potliblink\";;\n\t\t\t*) potlib=`$echo \"X$potlib\" | $Xsed -e 's,[^/]*$,,'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval $file_magic_cmd \\\"\\$potlib\\\" 2>/dev/null \\\n\t\t\t | ${SED} 10q \\\n\t\t\t | $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tnewdeplibs=\"$newdeplibs $a_deplib\"\n\t\t\ta_deplib=\"\"\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\t$echo\n\t\t$echo \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\t$echo \"*** I have the capability to make that library automatically link in when\"\n\t\t$echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t$echo \"*** shared version of the library, which you do not appear to have\"\n\t\t$echo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $echo \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $echo \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $echo \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t    else\n\t      # Add a -L argument.\n\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t    fi\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$2 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    name=`expr $a_deplib : '-l\\(.*\\)'`\n\t    # If $name is empty we are operating on a -L argument.\n\t    if test -n \"$name\" && test \"$name\" != \"0\"; then\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tlibname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=\"$potent_lib\" # see symlink-check above in file_magic test\n\t\t    if eval $echo \\\"$potent_lib\\\" 2>/dev/null \\\n\t\t        | ${SED} 10q \\\n\t\t        | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t      a_deplib=\"\"\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\t$echo\n\t\t$echo \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\t$echo \"*** I have the capability to make that library automatically link in when\"\n\t\t$echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t$echo \"*** shared version of the library, which you do not appear to have\"\n\t\t$echo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $echo \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $echo \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $echo \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t    else\n\t      # Add a -L argument.\n\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t    fi\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\"\"\n\t  tmp_deplibs=`$echo \"X $deplibs\" | $Xsed -e 's/ -lc$//' \\\n\t    -e 's/ -[LR][^ ]*//g'`\n\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t    for i in $predeps $postdeps ; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$echo \"X $tmp_deplibs\" | ${SED} -e \"1s,^X,,\" -e \"s,$i,,\"`\n\t    done\n\t  fi\n\t  if $echo \"X $tmp_deplibs\" | $Xsed -e 's/[ \t]//g' \\\n\t    | grep . >/dev/null; then\n\t    $echo\n\t    if test \"X$deplibs_check_method\" = \"Xnone\"; then\n\t      $echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      $echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    $echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t  fi\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library is the System framework\n\t  newdeplibs=`$echo \"X $newdeplibs\" | $Xsed -e 's/ -lc / -framework System /'`\n\t  ;;\n\tesac\n\n\tif test \"$droppeddeps\" = yes; then\n\t  if test \"$module\" = yes; then\n\t    $echo\n\t    $echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $echo \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    $echo \"*** a static module, that should work as long as the dlopening\"\n\t    $echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      $echo\n\t      $echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      $echo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t      $echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      $echo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test \"$build_old_libs\" = no; then\n\t      oldlibs=\"$output_objdir/$libname.$libext\"\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    $echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    $echo \"*** automatically added whenever a program is linked with this library\"\n\t    $echo \"*** or is declared to -dlopen it.\"\n\n\t    if test \"$allow_undefined\" = no; then\n\t      $echo\n\t      $echo \"*** Since this library must not contain undefined symbols,\"\n\t      $echo \"*** because either the platform does not support them or\"\n\t      $echo \"*** it was explicitly requested with -no-undefined,\"\n\t      $echo \"*** libtool will only create a static version of it.\"\n\t      if test \"$build_old_libs\" = no; then\n\t\toldlibs=\"$output_objdir/$libname.$libext\"\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    new_libs=\"$new_libs -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) new_libs=\"$new_libs $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) new_libs=\"$new_libs $deplib\" ;;\n\tesac\n      done\n      deplibs=\"$new_libs\"\n\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test \"$build_libtool_libs\" = yes; then\n\tif test \"$hardcode_into_libs\" = yes; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=\"$finalize_rpath\"\n\t  test \"$mode\" != relink && rpath=\"$compile_rpath$rpath\"\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=\"$libdir\"\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    hardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t\tdep_rpath=\"$dep_rpath $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) perm_rpath=\"$perm_rpath $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=\"$hardcode_libdirs\"\n\t    if test -n \"$hardcode_libdir_flag_spec_ld\"; then\n\t      eval dep_rpath=\\\"$hardcode_libdir_flag_spec_ld\\\"\n\t    else\n\t      eval dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\n\t    fi\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      rpath=\"$rpath$dir:\"\n\t    done\n\t    eval \"$runpath_var='$rpath\\$$runpath_var'; export $runpath_var\"\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=\"$finalize_shlibpath\"\n\ttest \"$mode\" != relink && shlibpath=\"$compile_shlibpath$shlibpath\"\n\tif test -n \"$shlibpath\"; then\n\t  eval \"$shlibpath_var='$shlibpath\\$$shlibpath_var'; export $shlibpath_var\"\n\tfi\n\n\t# Get the real and link names of the library.\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval library_names=\\\"$library_names_spec\\\"\n\tset dummy $library_names\n\trealname=\"$2\"\n\tshift; shift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval soname=\\\"$soname_spec\\\"\n\telse\n\t  soname=\"$realname\"\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=\"$output_objdir/$realname\"\n\tlinknames=\n\tfor link\n\tdo\n\t  linknames=\"$linknames $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$echo \"X$libobjs\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test \"$always_export_symbols\" = yes || test -n \"$export_symbols_regex\"; then\n\t    $show \"generating symbol list for \\`$libname.la'\"\n\t    export_symbols=\"$output_objdir/$libname.exp\"\n\t    $run $rm $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $cmds; do\n\t      IFS=\"$save_ifs\"\n\t      eval cmd=\\\"$cmd\\\"\n\t      if len=`expr \"X$cmd\" : \".*\"` &&\n\t       test \"$len\" -le \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t        $show \"$cmd\"\n\t        $run eval \"$cmd\" || exit $?\n\t        skipped_export=false\n\t      else\n\t        # The command line is too long to execute in one step.\n\t        $show \"using reloadable object file for export list...\"\n\t        skipped_export=:\n\t\t# Break out early, otherwise skipped_export may be\n\t\t# set to false by a later but shorter cmd.\n\t\tbreak\n\t      fi\n\t    done\n\t    IFS=\"$save_ifs\"\n\t    if test -n \"$export_symbols_regex\"; then\n\t      $show \"$EGREP -e \\\"$export_symbols_regex\\\" \\\"$export_symbols\\\" > \\\"${export_symbols}T\\\"\"\n\t      $run eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      $show \"$mv \\\"${export_symbols}T\\\" \\\"$export_symbols\\\"\"\n\t      $run eval '$mv \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $run eval '$echo \"X$include_expsyms\" | $SP2NL >> \"$export_symbols\"'\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t\tcase \" $convenience \" in\n\t\t*\" $test_deplib \"*) ;;\n\t\t*)\n\t\t\ttmp_deplibs=\"$tmp_deplibs $test_deplib\"\n\t\t\t;;\n\t\tesac\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t  else\n\t    gentop=\"$output_objdir/${outputname}x\"\n\t    generated=\"$generated $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    libobjs=\"$libobjs $func_extract_archives_result\"\n\t  fi\n\tfi\n\t\n\tif test \"$thread_safe\" = yes && test -n \"$thread_safe_flag_spec\"; then\n\t  eval flag=\\\"$thread_safe_flag_spec\\\"\n\t  linker_flags=\"$linker_flags $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test \"$mode\" = relink; then\n\t  $run eval '(cd $output_objdir && $rm ${realname}U && $mv $realname ${realname}U)' || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$module_expsym_cmds\\\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$module_cmds\\\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\tif test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t  eval test_cmds=\\\"$archive_expsym_cmds\\\"\n\t  cmds=$archive_expsym_cmds\n\telse\n\t  eval test_cmds=\\\"$archive_cmds\\\"\n\t  cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" &&\n\t   len=`expr \"X$test_cmds\" : \".*\" 2>/dev/null` &&\n\t   test \"$len\" -le \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise.\n\t  $echo \"creating reloadable object files...\"\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  output_la=`$echo \"X$output\" | $Xsed -e \"$basename\"`\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  delfiles=\n\t  last_robj=\n\t  k=1\n\t  output=$output_objdir/$output_la-${k}.$objext\n\t  # Loop over the list of objects to be linked.\n\t  for obj in $save_libobjs\n\t  do\n\t    eval test_cmds=\\\"$reload_cmds $objlist $last_robj\\\"\n\t    if test \"X$objlist\" = X ||\n\t       { len=`expr \"X$test_cmds\" : \".*\" 2>/dev/null` &&\n\t\t test \"$len\" -le \"$max_cmd_len\"; }; then\n\t      objlist=\"$objlist $obj\"\n\t    else\n\t      # The command $test_cmds is almost too long, add a\n\t      # command to the queue.\n\t      if test \"$k\" -eq 1 ; then\n\t\t# The first file doesn't have a previous command to add.\n\t\teval concat_cmds=\\\"$reload_cmds $objlist $last_robj\\\"\n\t      else\n\t\t# All subsequent reloadable object files will link in\n\t\t# the last one created.\n\t\teval concat_cmds=\\\"\\$concat_cmds~$reload_cmds $objlist $last_robj\\\"\n\t      fi\n\t      last_robj=$output_objdir/$output_la-${k}.$objext\n\t      k=`expr $k + 1`\n\t      output=$output_objdir/$output_la-${k}.$objext\n\t      objlist=$obj\n\t      len=1\n\t    fi\n\t  done\n\t  # Handle the remaining objects by creating one last\n\t  # reloadable object file.  All subsequent reloadable object\n\t  # files will link in the last one created.\n\t  test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t  eval concat_cmds=\\\"\\${concat_cmds}$reload_cmds $objlist $last_robj\\\"\n\n\t  if ${skipped_export-false}; then\n\t    $show \"generating symbol list for \\`$libname.la'\"\n\t    export_symbols=\"$output_objdir/$libname.exp\"\n\t    $run $rm $export_symbols\n\t    libobjs=$output\n\t    # Append the command to create the export file.\n\t    eval concat_cmds=\\\"\\$concat_cmds~$export_symbols_cmds\\\"\n          fi\n\n\t  # Set up a command to remove the reloadable object files\n\t  # after they are used.\n\t  i=0\n\t  while test \"$i\" -lt \"$k\"\n\t  do\n\t    i=`expr $i + 1`\n\t    delfiles=\"$delfiles $output_objdir/$output_la-${i}.$objext\"\n\t  done\n\n\t  $echo \"creating a temporary reloadable object file: $output\"\n\n\t  # Loop through the commands generated above and execute them.\n\t  save_ifs=\"$IFS\"; IFS='~'\n\t  for cmd in $concat_cmds; do\n\t    IFS=\"$save_ifs\"\n\t    $show \"$cmd\"\n\t    $run eval \"$cmd\" || exit $?\n\t  done\n\t  IFS=\"$save_ifs\"\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    cmds=$archive_cmds\n\t    fi\n\t  fi\n\n\t  # Append the command to remove the reloadable object files\n\t  # to the just-reset $cmds.\n\t  eval cmds=\\\"\\$cmds~\\$rm $delfiles\\\"\n\tfi\n\tsave_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  eval cmd=\\\"$cmd\\\"\n\t  $show \"$cmd\"\n\t  $run eval \"$cmd\" || {\n\t    lt_exit=$?\n\n\t    # Restore the uninstalled library and exit\n\t    if test \"$mode\" = relink; then\n\t      $run eval '(cd $output_objdir && $rm ${realname}T && $mv ${realname}U $realname)'\n\t    fi\n\n\t    exit $lt_exit\n\t  }\n\tdone\n\tIFS=\"$save_ifs\"\n\n\t# Restore the uninstalled library and exit\n\tif test \"$mode\" = relink; then\n\t  $run eval '(cd $output_objdir && $rm ${realname}T && $mv $realname ${realname}T && $mv \"$realname\"U $realname)' || exit $?\n\n\t  if test -n \"$convenience\"; then\n\t    if test -z \"$whole_archive_flag_spec\"; then\n\t      $show \"${rm}r $gentop\"\n\t      $run ${rm}r \"$gentop\"\n\t    fi\n\t  fi\n\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    $show \"(cd $output_objdir && $rm $linkname && $LN_S $realname $linkname)\"\n\t    $run eval '(cd $output_objdir && $rm $linkname && $LN_S $realname $linkname)' || exit $?\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test \"$module\" = yes || test \"$export_dynamic\" = yes; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=\"$soname\"\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$deplibs\"; then\n\t$echo \"$modename: warning: \\`-l' and \\`-L' are ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\t$echo \"$modename: warning: \\`-dlopen' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$rpath\"; then\n\t$echo \"$modename: warning: \\`-rpath' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$xrpath\"; then\n\t$echo \"$modename: warning: \\`-R' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$vinfo\"; then\n\t$echo \"$modename: warning: \\`-version-info' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$release\"; then\n\t$echo \"$modename: warning: \\`-release' is ignored for objects\" 1>&2\n      fi\n\n      case $output in\n      *.lo)\n\tif test -n \"$objs$old_deplibs\"; then\n\t  $echo \"$modename: cannot build library object \\`$output' from non-libtool objects\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\tlibobj=\"$output\"\n\tobj=`$echo \"X$output\" | $Xsed -e \"$lo2o\"`\n\t;;\n      *)\n\tlibobj=\n\tobj=\"$output\"\n\t;;\n      esac\n\n      # Delete the old objects.\n      $run $rm $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # reload_cmds runs $LD directly, so let us get rid of\n      # -Wl from whole_archive_flag_spec\n      wl=\n\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval reload_conv_objs=\\\"\\$reload_objs $whole_archive_flag_spec\\\"\n\telse\n\t  gentop=\"$output_objdir/${obj}x\"\n\t  generated=\"$generated $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # Create the old-style object.\n      reload_objs=\"$objs$old_deplibs \"`$echo \"X$libobjs\" | $SP2NL | $Xsed -e '/\\.'${libext}$'/d' -e '/\\.lib$/d' -e \"$lo2o\" | $NL2SP`\" $reload_conv_objs\" ### testsuite: skip nested quoting test\n\n      output=\"$obj\"\n      cmds=$reload_cmds\n      save_ifs=\"$IFS\"; IFS='~'\n      for cmd in $cmds; do\n\tIFS=\"$save_ifs\"\n\teval cmd=\\\"$cmd\\\"\n\t$show \"$cmd\"\n\t$run eval \"$cmd\" || exit $?\n      done\n      IFS=\"$save_ifs\"\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  $show \"${rm}r $gentop\"\n\t  $run ${rm}r $gentop\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$build_libtool_libs\" != yes; then\n\tif test -n \"$gentop\"; then\n\t  $show \"${rm}r $gentop\"\n\t  $run ${rm}r $gentop\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $run eval \"echo timestamp > $libobj\" || exit $?\n\texit $EXIT_SUCCESS\n      fi\n\n      if test -n \"$pic_flag\" || test \"$pic_mode\" != default; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=\"$libobj\"\n\tcmds=$reload_cmds\n\tsave_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  eval cmd=\\\"$cmd\\\"\n\t  $show \"$cmd\"\n\t  $run eval \"$cmd\" || exit $?\n\tdone\n\tIFS=\"$save_ifs\"\n      fi\n\n      if test -n \"$gentop\"; then\n\t$show \"${rm}r $gentop\"\n\t$run ${rm}r $gentop\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) output=`$echo $output | ${SED} -e 's,.exe$,,;s,$,.exe,'` ;;\n      esac\n      if test -n \"$vinfo\"; then\n\t$echo \"$modename: warning: \\`-version-info' is ignored for programs\" 1>&2\n      fi\n\n      if test -n \"$release\"; then\n\t$echo \"$modename: warning: \\`-release' is ignored for programs\" 1>&2\n      fi\n\n      if test \"$preload\" = yes; then\n\tif test \"$dlopen_support\" = unknown && test \"$dlopen_self\" = unknown &&\n\t   test \"$dlopen_self_static\" = unknown; then\n\t  $echo \"$modename: warning: \\`AC_LIBTOOL_DLOPEN' not used. Assuming no dlopen support.\"\n\tfi\n      fi\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$echo \"X $compile_deplibs\" | $Xsed -e 's/ -lc / -framework System /'`\n\tfinalize_deplibs=`$echo \"X $finalize_deplibs\" | $Xsed -e 's/ -lc / -framework System /'`\n\t;;\n      esac\n\n      case $host in\n      *darwin*)\n        # Don't allow lazy linking, it breaks C++ global constructors\n        if test \"$tagname\" = CXX ; then\n        compile_command=\"$compile_command ${wl}-bind_at_load\"\n        finalize_command=\"$finalize_command ${wl}-bind_at_load\"\n        fi\n        ;;\n      esac\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $compile_deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    new_libs=\"$new_libs -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $compile_deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) new_libs=\"$new_libs $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) new_libs=\"$new_libs $deplib\" ;;\n\tesac\n      done\n      compile_deplibs=\"$new_libs\"\n\n\n      compile_command=\"$compile_command $compile_deplibs\"\n      finalize_command=\"$finalize_command $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_rpath=\"$finalize_rpath $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\thardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    rpath=\"$rpath $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) perm_rpath=\"$perm_rpath $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)\n\t  testbindir=`$echo \"X$libdir\" | $Xsed -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  *) dllsearchpath=\"$dllsearchpath:$libdir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  *) dllsearchpath=\"$dllsearchpath:$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      compile_rpath=\"$rpath\"\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\thardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    rpath=\"$rpath $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_perm_rpath=\"$finalize_perm_rpath $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      finalize_rpath=\"$rpath\"\n\n      if test -n \"$libobjs\" && test \"$build_old_libs\" = yes; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$echo \"X$compile_command\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$echo \"X$finalize_command\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n      fi\n\n      dlsyms=\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tif test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\t  dlsyms=\"${outputname}S.c\"\n\telse\n\t  $echo \"$modename: not configured to extract global symbols from dlpreopened files\" 1>&2\n\tfi\n      fi\n\n      if test -n \"$dlsyms\"; then\n\tcase $dlsyms in\n\t\"\") ;;\n\t*.c)\n\t  # Discover the nlist of each of the dlfiles.\n\t  nlist=\"$output_objdir/${outputname}.nm\"\n\n\t  $show \"$rm $nlist ${nlist}S ${nlist}T\"\n\t  $run $rm \"$nlist\" \"${nlist}S\" \"${nlist}T\"\n\n\t  # Parse the name list into a source file.\n\t  $show \"creating $output_objdir/$dlsyms\"\n\n\t  test -z \"$run\" && $echo > \"$output_objdir/$dlsyms\" \"\\\n/* $dlsyms - symbol resolution table for \\`$outputname' dlsym emulation. */\n/* Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n/* Prevent the only kind of declaration conflicts we can make. */\n#define lt_preloaded_symbols some_other_symbol\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\t  if test \"$dlself\" = yes; then\n\t    $show \"generating symbol list for \\`$output'\"\n\n\t    test -z \"$run\" && $echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t    # Add our own program objects to the symbol list.\n\t    progfiles=`$echo \"X$objs$old_deplibs\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n\t    for arg in $progfiles; do\n\t      $show \"extracting global C symbols from \\`$arg'\"\n\t      $run eval \"$NM $arg | $global_symbol_pipe >> '$nlist'\"\n\t    done\n\n\t    if test -n \"$exclude_expsyms\"; then\n\t      $run eval '$EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T'\n\t      $run eval '$mv \"$nlist\"T \"$nlist\"'\n\t    fi\n\n\t    if test -n \"$export_symbols_regex\"; then\n\t      $run eval '$EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T'\n\t      $run eval '$mv \"$nlist\"T \"$nlist\"'\n\t    fi\n\n\t    # Prepare the list of exported symbols\n\t    if test -z \"$export_symbols\"; then\n\t      export_symbols=\"$output_objdir/$outputname.exp\"\n\t      $run $rm $export_symbols\n\t      $run eval \"${SED} -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \\(.*\\)$/\\1/p' \"'< \"$nlist\" > \"$export_symbols\"'\n              case $host in\n              *cygwin* | *mingw* )\n\t        $run eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n\t\t$run eval 'cat \"$export_symbols\" >> \"$output_objdir/$outputname.def\"'\n                ;;\n              esac\n\t    else\n\t      $run eval \"${SED} -e 's/\\([].[*^$]\\)/\\\\\\\\\\1/g' -e 's/^/ /' -e 's/$/$/'\"' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"'\n\t      $run eval 'grep -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T'\n\t      $run eval 'mv \"$nlist\"T \"$nlist\"'\n              case $host in\n              *cygwin* | *mingw* )\n\t        $run eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n\t\t$run eval 'cat \"$nlist\" >> \"$output_objdir/$outputname.def\"'\n                ;;\n              esac\n\t    fi\n\t  fi\n\n\t  for arg in $dlprefiles; do\n\t    $show \"extracting global C symbols from \\`$arg'\"\n\t    name=`$echo \"$arg\" | ${SED} -e 's%^.*/%%'`\n\t    $run eval '$echo \": $name \" >> \"$nlist\"'\n\t    $run eval \"$NM $arg | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -z \"$run\"; then\n\t    # Make sure we have at least an empty file.\n\t    test -f \"$nlist\" || : > \"$nlist\"\n\n\t    if test -n \"$exclude_expsyms\"; then\n\t      $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t      $mv \"$nlist\"T \"$nlist\"\n\t    fi\n\n\t    # Try sorting and uniquifying the output.\n\t    if grep -v \"^: \" < \"$nlist\" |\n\t\tif sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\t  sort -k 3\n\t\telse\n\t\t  sort +2\n\t\tfi |\n\t\tuniq > \"$nlist\"S; then\n\t      :\n\t    else\n\t      grep -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t    fi\n\n\t    if test -f \"$nlist\"S; then\n\t      eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$dlsyms\"'\n\t    else\n\t      $echo '/* NONE */' >> \"$output_objdir/$dlsyms\"\n\t    fi\n\n\t    $echo >> \"$output_objdir/$dlsyms\" \"\\\n\n#undef lt_preloaded_symbols\n\n#if defined (__STDC__) && __STDC__\n# define lt_ptr void *\n#else\n# define lt_ptr char *\n# define const\n#endif\n\n/* The mapping between symbol names and symbols. */\n\"\n\n\t    case $host in\n\t    *cygwin* | *mingw* )\n\t  $echo >> \"$output_objdir/$dlsyms\" \"\\\n/* DATA imports from DLLs on WIN32 can't be const, because\n   runtime relocations are performed -- see ld's documentation\n   on pseudo-relocs */\nstruct {\n\"\n\t      ;;\n\t    * )\n\t  $echo >> \"$output_objdir/$dlsyms\" \"\\\nconst struct {\n\"\n\t      ;;\n\t    esac\n\n\n\t  $echo >> \"$output_objdir/$dlsyms\" \"\\\n  const char *name;\n  lt_ptr address;\n}\nlt_preloaded_symbols[] =\n{\\\n\"\n\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$dlsyms\"\n\n\t    $echo >> \"$output_objdir/$dlsyms\" \"\\\n  {0, (lt_ptr) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t  fi\n\n\t  pic_flag_for_symtable=\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    case \"$compile_command \" in\n\t    *\" -static \"*) ;;\n\t    *) pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\";;\n\t    esac;;\n\t  *-*-hpux*)\n\t    case \"$compile_command \" in\n\t    *\" -static \"*) ;;\n\t    *) pic_flag_for_symtable=\" $pic_flag\";;\n\t    esac\n\t  esac\n\n\t  # Now compile the dynamic symbol file.\n\t  $show \"(cd $output_objdir && $LTCC  $LTCFLAGS -c$no_builtin_flag$pic_flag_for_symtable \\\"$dlsyms\\\")\"\n\t  $run eval '(cd $output_objdir && $LTCC  $LTCFLAGS -c$no_builtin_flag$pic_flag_for_symtable \"$dlsyms\")' || exit $?\n\n\t  # Clean up the generated files.\n\t  $show \"$rm $output_objdir/$dlsyms $nlist ${nlist}S ${nlist}T\"\n\t  $run $rm \"$output_objdir/$dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\"\n\n\t  # Transform the symbol file into the correct name.\n          case $host in\n          *cygwin* | *mingw* )\n            if test -f \"$output_objdir/${outputname}.def\" ; then\n              compile_command=`$echo \"X$compile_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}.def $output_objdir/${outputname}S.${objext}%\"`\n              finalize_command=`$echo \"X$finalize_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}.def $output_objdir/${outputname}S.${objext}%\"`\n            else\n              compile_command=`$echo \"X$compile_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%\"`\n              finalize_command=`$echo \"X$finalize_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%\"`\n             fi\n            ;;\n          * )\n            compile_command=`$echo \"X$compile_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%\"`\n            finalize_command=`$echo \"X$finalize_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%\"`\n            ;;\n          esac\n\t  ;;\n\t*)\n\t  $echo \"$modename: unknown suffix for \\`$dlsyms'\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n      else\n\t# We keep going just in case the user didn't refer to\n\t# lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n\t# really was required.\n\n\t# Nullify the symbol file.\n\tcompile_command=`$echo \"X$compile_command\" | $Xsed -e \"s% @SYMFILE@%%\"`\n\tfinalize_command=`$echo \"X$finalize_command\" | $Xsed -e \"s% @SYMFILE@%%\"`\n      fi\n\n      if test \"$need_relink\" = no || test \"$build_libtool_libs\" != yes; then\n\t# Replace the output file specification.\n\tcompile_command=`$echo \"X$compile_command\" | $Xsed -e 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=\"$compile_command$compile_rpath\"\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\t$show \"$link_command\"\n\t$run eval \"$link_command\"\n\texit_status=$?\n\n\t# Delete the generated files.\n\tif test -n \"$dlsyms\"; then\n\t  $show \"$rm $output_objdir/${outputname}S.${objext}\"\n\t  $run $rm \"$output_objdir/${outputname}S.${objext}\"\n\tfi\n\n\texit $exit_status\n      fi\n\n      if test -n \"$shlibpath_var\"; then\n\t# We should set the shlibpath_var\n\trpath=\n\tfor dir in $temp_rpath; do\n\t  case $dir in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*)\n\t    # Absolute path.\n\t    rpath=\"$rpath$dir:\"\n\t    ;;\n\t  *)\n\t    # Relative path: add a thisdir entry.\n\t    rpath=\"$rpath\\$thisdir/$dir:\"\n\t    ;;\n\t  esac\n\tdone\n\ttemp_rpath=\"$rpath\"\n      fi\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    rpath=\"$rpath$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    rpath=\"$rpath$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test \"$no_install\" = yes; then\n\t# We don't need to create a wrapper script.\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\t# Replace the output file specification.\n\tlink_command=`$echo \"X$link_command\" | $Xsed -e 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$run $rm $output\n\t# Link the executable and exit\n\t$show \"$link_command\"\n\t$run eval \"$link_command\" || exit $?\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$hardcode_action\" = relink; then\n\t# Fast installation is not supported\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\trelink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\n\t$echo \"$modename: warning: this platform does not like uninstalled shared libraries\" 1>&2\n\t$echo \"$modename: \\`$output' will be relinked during installation\" 1>&2\n      else\n\tif test \"$fast_install\" != no; then\n\t  link_command=\"$finalize_var$compile_command$finalize_rpath\"\n\t  if test \"$fast_install\" = yes; then\n\t    relink_command=`$echo \"X$compile_var$compile_command$compile_rpath\" | $Xsed -e 's%@OUTPUT@%\\$progdir/\\$file%g'`\n\t  else\n\t    # fast_install is set to needless\n\t    relink_command=\n\t  fi\n\telse\n\t  link_command=\"$compile_var$compile_command$compile_rpath\"\n\t  relink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\tfi\n      fi\n\n      # Replace the output file specification.\n      link_command=`$echo \"X$link_command\" | $Xsed -e 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $run $rm $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      $show \"$link_command\"\n      $run eval \"$link_command\" || exit $?\n\n      # Now create the wrapper script.\n      $show \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    var_value=`$echo \"X$var_value\" | $Xsed -e \"$sed_quote_subst\"`\n\t    relink_command=\"$var=\\\"$var_value\\\"; export $var; $relink_command\"\n\t  fi\n\tdone\n\trelink_command=\"(cd `pwd`; $relink_command)\"\n\trelink_command=`$echo \"X$relink_command\" | $Xsed -e \"$sed_quote_subst\"`\n      fi\n\n      # Quote $echo for shipping.\n      if test \"X$echo\" = \"X$SHELL $progpath --fallback-echo\"; then\n\tcase $progpath in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) qecho=\"$SHELL $progpath --fallback-echo\";;\n\t*) qecho=\"$SHELL `pwd`/$progpath --fallback-echo\";;\n\tesac\n\tqecho=`$echo \"X$qecho\" | $Xsed -e \"$sed_quote_subst\"`\n      else\n\tqecho=`$echo \"X$echo\" | $Xsed -e \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if our run command is non-null.\n      if test -z \"$run\"; then\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) output=`$echo $output|${SED} 's,.exe$,,'` ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    outputname=`$echo $outputname|${SED} 's,.exe$,,'` ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n            output_name=`basename $output`\n            output_path=`dirname $output`\n            cwrappersource=\"$output_path/$objdir/lt-$output_name.c\"\n            cwrapper=\"$output_path/$output_name.exe\"\n            $rm $cwrappersource $cwrapper\n            trap \"$rm $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    cat > $cwrappersource <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n\n   Currently, it simply execs the wrapper *script* \"/bin/sh $output\",\n   but could eventually absorb all of the scripts functionality and\n   exec $objdir/$outputname directly.\n*/\nEOF\n\t    cat >> $cwrappersource<<\"EOF\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n#include <string.h>\n#include <ctype.h>\n#include <sys/stat.h>\n\n#if defined(PATH_MAX)\n# define LT_PATHMAX PATH_MAX\n#elif defined(MAXPATHLEN)\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef DIR_SEPARATOR\n# define DIR_SEPARATOR '/'\n# define PATH_SEPARATOR ':'\n#endif\n\n#if defined (_WIN32) || defined (__MSDOS__) || defined (__DJGPP__) || \\\n  defined (__OS2__)\n# define HAVE_DOS_BASED_FILE_SYSTEM\n# ifndef DIR_SEPARATOR_2\n#  define DIR_SEPARATOR_2 '\\\\'\n# endif\n# ifndef PATH_SEPARATOR_2\n#  define PATH_SEPARATOR_2 ';'\n# endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n        (((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#ifndef PATH_SEPARATOR_2\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)\n#else /* PATH_SEPARATOR_2 */\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)\n#endif /* PATH_SEPARATOR_2 */\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free ((void *) stale); stale = 0; } \\\n} while (0)\n\n/* -DDEBUG is fairly common in CFLAGS.  */\n#undef DEBUG\n#if defined DEBUGWRAPPER\n# define DEBUG(format, ...) fprintf(stderr, format, __VA_ARGS__)\n#else\n# define DEBUG(format, ...)\n#endif\n\nconst char *program_name = NULL;\n\nvoid * xmalloc (size_t num);\nchar * xstrdup (const char *string);\nconst char * base_name (const char *name);\nchar * find_executable(const char *wrapper);\nint    check_executable(const char *path);\nchar * strendzap(char *str, const char *pat);\nvoid lt_fatal (const char *message, ...);\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int i;\n\n  program_name = (char *) xstrdup (base_name (argv[0]));\n  DEBUG(\"(main) argv[0]      : %s\\n\",argv[0]);\n  DEBUG(\"(main) program_name : %s\\n\",program_name);\n  newargz = XMALLOC(char *, argc+2);\nEOF\n\n            cat >> $cwrappersource <<EOF\n  newargz[0] = (char *) xstrdup(\"$SHELL\");\nEOF\n\n            cat >> $cwrappersource <<\"EOF\"\n  newargz[1] = find_executable(argv[0]);\n  if (newargz[1] == NULL)\n    lt_fatal(\"Couldn't find %s\", argv[0]);\n  DEBUG(\"(main) found exe at : %s\\n\",newargz[1]);\n  /* we know the script has the same name, without the .exe */\n  /* so make sure newargz[1] doesn't end in .exe */\n  strendzap(newargz[1],\".exe\");\n  for (i = 1; i < argc; i++)\n    newargz[i+1] = xstrdup(argv[i]);\n  newargz[argc+1] = NULL;\n\n  for (i=0; i<argc+1; i++)\n  {\n    DEBUG(\"(main) newargz[%d]   : %s\\n\",i,newargz[i]);\n    ;\n  }\n\nEOF\n\n            case $host_os in\n              mingw*)\n                cat >> $cwrappersource <<EOF\n  execv(\"$SHELL\",(char const **)newargz);\nEOF\n              ;;\n              *)\n                cat >> $cwrappersource <<EOF\n  execv(\"$SHELL\",newargz);\nEOF\n              ;;\n            esac\n\n            cat >> $cwrappersource <<\"EOF\"\n  return 127;\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void * p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (\"Memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1), string) : NULL\n;\n}\n\nconst char *\nbase_name (const char *name)\n{\n  const char *base;\n\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha ((unsigned char)name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return base;\n}\n\nint\ncheck_executable(const char * path)\n{\n  struct stat st;\n\n  DEBUG(\"(check_executable)  : %s\\n\", path ? (*path ? path : \"EMPTY!\") : \"NULL!\");\n  if ((!path) || (!*path))\n    return 0;\n\n  if ((stat (path, &st) >= 0) &&\n      (\n        /* MinGW & native WIN32 do not support S_IXOTH or S_IXGRP */\n#if defined (S_IXOTH)\n       ((st.st_mode & S_IXOTH) == S_IXOTH) ||\n#endif\n#if defined (S_IXGRP)\n       ((st.st_mode & S_IXGRP) == S_IXGRP) ||\n#endif\n       ((st.st_mode & S_IXUSR) == S_IXUSR))\n      )\n    return 1;\n  else\n    return 0;\n}\n\n/* Searches for the full path of the wrapper.  Returns\n   newly allocated full path name if found, NULL otherwise */\nchar *\nfind_executable (const char* wrapper)\n{\n  int has_slash = 0;\n  const char* p;\n  const char* p_next;\n  /* static buffer for getcwd */\n  char tmp[LT_PATHMAX + 1];\n  int tmp_len;\n  char* concat_name;\n\n  DEBUG(\"(find_executable)  : %s\\n\", wrapper ? (*wrapper ? wrapper : \"EMPTY!\") : \"NULL!\");\n\n  if ((wrapper == NULL) || (*wrapper == '\\0'))\n    return NULL;\n\n  /* Absolute path? */\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  if (isalpha ((unsigned char)wrapper[0]) && wrapper[1] == ':')\n  {\n    concat_name = xstrdup (wrapper);\n    if (check_executable(concat_name))\n      return concat_name;\n    XFREE(concat_name);\n  }\n  else\n  {\n#endif\n    if (IS_DIR_SEPARATOR (wrapper[0]))\n    {\n      concat_name = xstrdup (wrapper);\n      if (check_executable(concat_name))\n        return concat_name;\n      XFREE(concat_name);\n    }\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  }\n#endif\n\n  for (p = wrapper; *p; p++)\n    if (*p == '/')\n    {\n      has_slash = 1;\n      break;\n    }\n  if (!has_slash)\n  {\n    /* no slashes; search PATH */\n    const char* path = getenv (\"PATH\");\n    if (path != NULL)\n    {\n      for (p = path; *p; p = p_next)\n      {\n        const char* q;\n        size_t p_len;\n        for (q = p; *q; q++)\n          if (IS_PATH_SEPARATOR(*q))\n            break;\n        p_len = q - p;\n        p_next = (*q == '\\0' ? q : q + 1);\n        if (p_len == 0)\n        {\n          /* empty path: current directory */\n          if (getcwd (tmp, LT_PATHMAX) == NULL)\n            lt_fatal (\"getcwd failed\");\n          tmp_len = strlen(tmp);\n          concat_name = XMALLOC(char, tmp_len + 1 + strlen(wrapper) + 1);\n          memcpy (concat_name, tmp, tmp_len);\n          concat_name[tmp_len] = '/';\n          strcpy (concat_name + tmp_len + 1, wrapper);\n        }\n        else\n        {\n          concat_name = XMALLOC(char, p_len + 1 + strlen(wrapper) + 1);\n          memcpy (concat_name, p, p_len);\n          concat_name[p_len] = '/';\n          strcpy (concat_name + p_len + 1, wrapper);\n        }\n        if (check_executable(concat_name))\n          return concat_name;\n        XFREE(concat_name);\n      }\n    }\n    /* not found in PATH; assume curdir */\n  }\n  /* Relative path | not found in path: prepend cwd */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (\"getcwd failed\");\n  tmp_len = strlen(tmp);\n  concat_name = XMALLOC(char, tmp_len + 1 + strlen(wrapper) + 1);\n  memcpy (concat_name, tmp, tmp_len);\n  concat_name[tmp_len] = '/';\n  strcpy (concat_name + tmp_len + 1, wrapper);\n\n  if (check_executable(concat_name))\n    return concat_name;\n  XFREE(concat_name);\n  return NULL;\n}\n\nchar *\nstrendzap(char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert(str != NULL);\n  assert(pat != NULL);\n\n  len = strlen(str);\n  patlen = strlen(pat);\n\n  if (patlen <= len)\n  {\n    str += len - patlen;\n    if (strcmp(str, pat) == 0)\n      *str = '\\0';\n  }\n  return str;\n}\n\nstatic void\nlt_error_core (int exit_status, const char * mode,\n          const char * message, va_list ap)\n{\n  fprintf (stderr, \"%s: %s: \", program_name, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, \"FATAL\", message, ap);\n  va_end (ap);\n}\nEOF\n          # we should really use a build-platform specific compiler\n          # here, but OTOH, the wrappers (shell script and this C one)\n          # are only useful if you want to execute the \"real\" binary.\n          # Since the \"real\" binary is built for $host, then this\n          # wrapper might as well be built for $host, too.\n          $run $LTCC $LTCFLAGS -s -o $cwrapper $cwrappersource\n          ;;\n        esac\n        $rm $output\n        trap \"$rm $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t$echo > $output \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed='${SED} -e 1s/^X//'\nsed_quote_subst='$sed_quote_subst'\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variable:\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$echo are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    echo=\\\"$qecho\\\"\n    file=\\\"\\$0\\\"\n    # Make sure echo works.\n    if test \\\"X\\$1\\\" = X--no-reexec; then\n      # Discard the --no-reexec flag, and continue.\n      shift\n    elif test \\\"X\\`(\\$echo '\\t') 2>/dev/null\\`\\\" = 'X\\t'; then\n      # Yippee, \\$echo works!\n      :\n    else\n      # Restart under the correct shell, and then maybe \\$echo will work.\n      exec $SHELL \\\"\\$0\\\" --no-reexec \\${1+\\\"\\$@\\\"}\n    fi\n  fi\\\n\"\n\t$echo >> $output \"\\\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$echo \\\"X\\$file\\\" | \\$Xsed -e 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | ${SED} -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$echo \\\"X\\$file\\\" | \\$Xsed -e 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$echo \\\"X\\$file\\\" | \\$Xsed -e 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | ${SED} -n 's/.*-> //p'\\`\n  done\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test \"$fast_install\" = yes; then\n\t  $echo >> $output \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" || \\\\\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | ${SED} 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $mkdir \\\"\\$progdir\\\"\n    else\n      $rm \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $echo >> $output \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\$relink_command 2>&1\\`; then :\n      else\n\t$echo \\\"\\$relink_command_output\\\" >&2\n\t$rm \\\"\\$progdir/\\$file\\\"\n\texit $EXIT_FAILURE\n      fi\n    fi\n\n    $mv \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $rm \\\"\\$progdir/\\$program\\\";\n      $mv \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $rm \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $echo >> $output \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$echo >> $output \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# Export our shlibpath_var if we have one.\n\tif test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $echo >> $output \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$echo \\\"X\\$$shlibpath_var\\\" | \\$Xsed -e 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t# fixup the dll searchpath if we need to.\n\tif test -n \"$dllsearchpath\"; then\n\t  $echo >> $output \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t$echo >> $output \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n\"\n\tcase $host in\n\t# Backslashes separate directories on plain windows\n\t*-*-mingw | *-*-os2*)\n\t  $echo >> $output \"\\\n      exec \\\"\\$progdir\\\\\\\\\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\n\t*)\n\t  $echo >> $output \"\\\n      exec \\\"\\$progdir/\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\tesac\n\t$echo >> $output \"\\\n      \\$echo \\\"\\$0: cannot exec \\$program \\${1+\\\"\\$@\\\"}\\\"\n      exit $EXIT_FAILURE\n    fi\n  else\n    # The program doesn't exist.\n    \\$echo \\\"\\$0: error: \\\\\\`\\$progdir/\\$program' does not exist\\\" 1>&2\n    \\$echo \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    $echo \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit $EXIT_FAILURE\n  fi\nfi\\\n\"\n\tchmod +x $output\n      fi\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      if test \"$build_libtool_libs\" = convenience; then\n\toldobjs=\"$libobjs_save\"\n\taddlibs=\"$convenience\"\n\tbuild_libtool_libs=no\n      else\n\tif test \"$build_libtool_libs\" = module; then\n\t  oldobjs=\"$libobjs_save\"\n\t  build_libtool_libs=no\n\telse\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\tfi\n\taddlibs=\"$old_convenience\"\n      fi\n\n      if test -n \"$addlibs\"; then\n\tgentop=\"$output_objdir/${outputname}x\"\n\tgenerated=\"$generated $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\toldobjs=\"$oldobjs $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test \"$build_libtool_libs\" = yes; then\n       cmds=$old_archive_from_new_cmds\n      else\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      $echo \"X$obj\" | $Xsed -e 's%^.*/%%'\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  $echo \"copying selected object files to avoid basename conflicts...\"\n\n\t  if test -z \"$gentop\"; then\n\t    gentop=\"$output_objdir/${outputname}x\"\n\t    generated=\"$generated $gentop\"\n\n\t    $show \"${rm}r $gentop\"\n\t    $run ${rm}r \"$gentop\"\n\t    $show \"$mkdir $gentop\"\n\t    $run $mkdir \"$gentop\"\n\t    exit_status=$?\n\t    if test \"$exit_status\" -ne 0 && test ! -d \"$gentop\"; then\n\t      exit $exit_status\n\t    fi\n\t  fi\n\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    objbase=`$echo \"X$obj\" | $Xsed -e 's%^.*/%%'`\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tcounter=`expr $counter + 1`\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      $show \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      $run ln \"$obj\" \"$gentop/$newobj\" ||\n\t      $run cp \"$obj\" \"$gentop/$newobj\"\n\t      oldobjs=\"$oldobjs $gentop/$newobj\"\n\t      ;;\n\t    *) oldobjs=\"$oldobjs $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\n\teval cmds=\\\"$old_archive_cmds\\\"\n\n\tif len=`expr \"X$cmds\" : \".*\"` &&\n\t     test \"$len\" -le \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  $echo \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  for obj in $save_oldobjs\n\t  do\n\t    oldobjs=\"$objlist $obj\"\n\t    objlist=\"$objlist $obj\"\n\t    eval test_cmds=\\\"$old_archive_cmds\\\"\n\t    if len=`expr \"X$test_cmds\" : \".*\" 2>/dev/null` &&\n\t       test \"$len\" -le \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\" ; then\n\t        RANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\${concat_cmds}$old_archive_cmds\\\"\n\t      objlist=\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test \"X$oldobjs\" = \"X\" ; then\n\t    eval cmds=\\\"\\$concat_cmds\\\"\n\t  else\n\t    eval cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\n\t  fi\n\tfi\n      fi\n      save_ifs=\"$IFS\"; IFS='~'\n      for cmd in $cmds; do\n        eval cmd=\\\"$cmd\\\"\n\tIFS=\"$save_ifs\"\n\t$show \"$cmd\"\n\t$run eval \"$cmd\" || exit $?\n      done\n      IFS=\"$save_ifs\"\n    done\n\n    if test -n \"$generated\"; then\n      $show \"${rm}r$generated\"\n      $run ${rm}r$generated\n    fi\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test \"$build_old_libs\" = yes && old_library=\"$libname.$libext\"\n      $show \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  var_value=`$echo \"X$var_value\" | $Xsed -e \"$sed_quote_subst\"`\n\t  relink_command=\"$var=\\\"$var_value\\\"; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      relink_command=\"(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      relink_command=`$echo \"X$relink_command\" | $Xsed -e \"$sed_quote_subst\"`\n      if test \"$hardcode_automatic\" = yes ; then\n\trelink_command=\n      fi\n\n\n      # Only create the output if not a dry run.\n      if test -z \"$run\"; then\n\tfor installed in no yes; do\n\t  if test \"$installed\" = yes; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=\"$output_objdir/$outputname\"i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tname=`$echo \"X$deplib\" | $Xsed -e 's%^.*/%%'`\n\t\teval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\tif test -z \"$libdir\"; then\n\t\t  $echo \"$modename: \\`$deplib' is not a valid libtool archive\" 1>&2\n\t\t  exit $EXIT_FAILURE\n\t\tfi\n\t\tnewdependency_libs=\"$newdependency_libs $libdir/$name\"\n\t\t;;\n\t      *) newdependency_libs=\"$newdependency_libs $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=\"$newdependency_libs\"\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      name=`$echo \"X$lib\" | $Xsed -e 's%^.*/%%'`\n\t      eval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t      if test -z \"$libdir\"; then\n\t\t$echo \"$modename: \\`$lib' is not a valid libtool archive\" 1>&2\n\t\texit $EXIT_FAILURE\n\t      fi\n\t      newdlfiles=\"$newdlfiles $libdir/$name\"\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      name=`$echo \"X$lib\" | $Xsed -e 's%^.*/%%'`\n\t      eval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t      if test -z \"$libdir\"; then\n\t\t$echo \"$modename: \\`$lib' is not a valid libtool archive\" 1>&2\n\t\texit $EXIT_FAILURE\n\t      fi\n\t      newdlprefiles=\"$newdlprefiles $libdir/$name\"\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      newdlfiles=\"$newdlfiles $abs\"\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      newdlprefiles=\"$newdlprefiles $abs\"\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  fi\n\t  $rm $output\n\t  # place dlname in correct position for cygwin\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll) tdlname=../bin/$dlname ;;\n\t  esac\n\t  $echo > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test \"$installed\" = no && test \"$need_relink\" = yes; then\n\t    $echo >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      fi\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      $show \"(cd $output_objdir && $rm $outputname && $LN_S ../$outputname $outputname)\"\n      $run eval '(cd $output_objdir && $rm $outputname && $LN_S ../$outputname $outputname)' || exit $?\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n    ;;\n\n  # libtool install mode\n  install)\n    modename=\"$modename: install\"\n\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$nonopt\" = \"$SHELL\" || test \"$nonopt\" = /bin/sh ||\n       # Allow the use of GNU shtool's install command.\n       $echo \"X$nonopt\" | grep shtool > /dev/null; then\n      # Aesthetically quote it.\n      arg=`$echo \"X$nonopt\" | $Xsed -e \"$sed_quote_subst\"`\n      case $arg in\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\targ=\"\\\"$arg\\\"\"\n\t;;\n      esac\n      install_prog=\"$arg \"\n      arg=\"$1\"\n      shift\n    else\n      install_prog=\n      arg=$nonopt\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    arg=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n    case $arg in\n    *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n      arg=\"\\\"$arg\\\"\"\n      ;;\n    esac\n    install_prog=\"$install_prog$arg\"\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=no\n    stripme=\n    for arg\n    do\n      if test -n \"$dest\"; then\n\tfiles=\"$files $dest\"\n\tdest=$arg\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=yes ;;\n      -f) \n      \tcase \" $install_prog \" in\n\t*[\\\\\\ /]cp\\ *) ;;\n\t*) prev=$arg ;;\n\tesac\n\t;;\n      -g | -m | -o) prev=$arg ;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*)\n\t;;\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  prev=\n\telse\n\t  dest=$arg\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      arg=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n      case $arg in\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\targ=\"\\\"$arg\\\"\"\n\t;;\n      esac\n      install_prog=\"$install_prog $arg\"\n    done\n\n    if test -z \"$install_prog\"; then\n      $echo \"$modename: you must specify an install program\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    if test -n \"$prev\"; then\n      $echo \"$modename: the \\`$prev' option requires an argument\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\t$echo \"$modename: no file or destination specified\" 1>&2\n      else\n\t$echo \"$modename: you must specify a destination\" 1>&2\n      fi\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    # Strip any trailing slash from the destination.\n    dest=`$echo \"X$dest\" | $Xsed -e 's%/$%%'`\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=yes\n    if test \"$isdir\" = yes; then\n      destdir=\"$dest\"\n      destname=\n    else\n      destdir=`$echo \"X$dest\" | $Xsed -e 's%/[^/]*$%%'`\n      test \"X$destdir\" = \"X$dest\" && destdir=.\n      destname=`$echo \"X$dest\" | $Xsed -e 's%^.*/%%'`\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files\n      if test \"$#\" -gt 2; then\n\t$echo \"$modename: \\`$dest' is not a directory\" 1>&2\n\t$echo \"$help\" 1>&2\n\texit $EXIT_FAILURE\n      fi\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  $echo \"$modename: \\`$destdir' must be an absolute directory name\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tstaticlibs=\"$staticlibs $file\"\n\t;;\n\n      *.la)\n\t# Check to see that this really is a libtool archive.\n\tif (${SED} -e '2q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then :\n\telse\n\t  $echo \"$modename: \\`$file' is not a valid libtool archive\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\t# If there is no directory component, then add one.\n\tcase $file in\n\t*/* | *\\\\*) . $file ;;\n\t*) . ./$file ;;\n\tesac\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) current_libdirs=\"$current_libdirs $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) future_libdirs=\"$future_libdirs $libdir\" ;;\n\t  esac\n\tfi\n\n\tdir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`/\n\ttest \"X$dir\" = \"X$file/\" && dir=\n\tdir=\"$dir$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$echo \"$destdir\" | $SED \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  if test \"$inst_prefix_dir\" = \"$destdir\"; then\n\t    $echo \"$modename: error: cannot install \\`$file' to a directory not ending in $libdir\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$echo \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$echo \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  $echo \"$modename: warning: relinking \\`$file'\" 1>&2\n\t  $show \"$relink_command\"\n\t  if $run eval \"$relink_command\"; then :\n\t  else\n\t    $echo \"$modename: error: relink \\`$file' with the above command before installing it\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names\n\tif test -n \"$2\"; then\n\t  realname=\"$2\"\n\t  shift\n\t  shift\n\n\t  srcname=\"$realname\"\n\t  test -n \"$relink_command\" && srcname=\"$realname\"T\n\n\t  # Install the shared library and build the symlinks.\n\t  $show \"$install_prog $dir/$srcname $destdir/$realname\"\n\t  $run eval \"$install_prog $dir/$srcname $destdir/$realname\" || exit $?\n\t  if test -n \"$stripme\" && test -n \"$striplib\"; then\n\t    $show \"$striplib $destdir/$realname\"\n\t    $run eval \"$striplib $destdir/$realname\" || exit $?\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    # Try `ln -sf' first, because the `ln' binary might depend on\n\t    # the symlink we replace!  Solaris /bin/ln does not understand -f,\n\t    # so we also need to try rm && ln -s.\n\t    for linkname\n\t    do\n\t      if test \"$linkname\" != \"$realname\"; then\n                $show \"(cd $destdir && { $LN_S -f $realname $linkname || { $rm $linkname && $LN_S $realname $linkname; }; })\"\n                $run eval \"(cd $destdir && { $LN_S -f $realname $linkname || { $rm $linkname && $LN_S $realname $linkname; }; })\"\n\t      fi\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=\"$destdir/$realname\"\n\t  cmds=$postinstall_cmds\n\t  save_ifs=\"$IFS\"; IFS='~'\n\t  for cmd in $cmds; do\n\t    IFS=\"$save_ifs\"\n\t    eval cmd=\\\"$cmd\\\"\n\t    $show \"$cmd\"\n\t    $run eval \"$cmd\" || {\n\t      lt_exit=$?\n\n\t      # Restore the uninstalled library and exit\n\t      if test \"$mode\" = relink; then\n\t\t$run eval '(cd $output_objdir && $rm ${realname}T && $mv ${realname}U $realname)'\n\t      fi\n\n\t      exit $lt_exit\n\t    }\n\t  done\n\t  IFS=\"$save_ifs\"\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tname=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\tinstname=\"$dir/$name\"i\n\t$show \"$install_prog $instname $destdir/$name\"\n\t$run eval \"$install_prog $instname $destdir/$name\" || exit $?\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && staticlibs=\"$staticlibs $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  destfile=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  staticdest=`$echo \"X$destfile\" | $Xsed -e \"$lo2o\"`\n\t  ;;\n\t*.$objext)\n\t  staticdest=\"$destfile\"\n\t  destfile=\n\t  ;;\n\t*)\n\t  $echo \"$modename: cannot copy a libtool object to \\`$destfile'\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\tif test -n \"$destfile\"; then\n\t  $show \"$install_prog $file $destfile\"\n\t  $run eval \"$install_prog $file $destfile\" || exit $?\n\tfi\n\n\t# Install the old object if enabled.\n\tif test \"$build_old_libs\" = yes; then\n\t  # Deduce the name of the old-style object file.\n\t  staticobj=`$echo \"X$file\" | $Xsed -e \"$lo2o\"`\n\n\t  $show \"$install_prog $staticobj $staticdest\"\n\t  $run eval \"$install_prog \\$staticobj \\$staticdest\" || exit $?\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  destfile=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\"\"\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      file=`$echo $file|${SED} 's,.exe$,,'`\n\t      stripped_ext=\".exe\"\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin*|*mingw*)\n\t    wrapper=`$echo $file | ${SED} -e 's,.exe$,,'`\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif (${SED} -e '4q' $wrapper | grep \"^# Generated by .*$PACKAGE\")>/dev/null 2>&1; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  # Note that it is not necessary on cygwin/mingw to append a dot to\n\t  # foo even if both foo and FILE.exe exist: automatic-append-.exe\n\t  # behavior happens only for exec(3), not for open(2)!  Also, sourcing\n\t  # `FILE.' does not work on cygwin managed mounts.\n\t  #\n\t  # If there is no directory component, then add one.\n\t  case $wrapper in\n\t  */* | *\\\\*) . ${wrapper} ;;\n\t  *) . ./${wrapper} ;;\n\t  esac\n\n\t  # Check the variables that should have been set.\n\t  if test -z \"$notinst_deplibs\"; then\n\t    $echo \"$modename: invalid libtool wrapper script \\`$wrapper'\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\n\t  finalize=yes\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      # If there is no directory component, then add one.\n\t      case $lib in\n\t      */* | *\\\\*) . $lib ;;\n\t      *) . ./$lib ;;\n\t      esac\n\t    fi\n\t    libfile=\"$libdir/\"`$echo \"X$lib\" | $Xsed -e 's%^.*/%%g'` ### testsuite: skip nested quoting test\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      $echo \"$modename: warning: \\`$lib' has not been installed in \\`$libdir'\" 1>&2\n\t      finalize=no\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  # Note that it is not necessary on cygwin/mingw to append a dot to\n\t  # foo even if both foo and FILE.exe exist: automatic-append-.exe\n\t  # behavior happens only for exec(3), not for open(2)!  Also, sourcing\n\t  # `FILE.' does not work on cygwin managed mounts.\n\t  #\n\t  # If there is no directory component, then add one.\n\t  case $wrapper in\n\t  */* | *\\\\*) . ${wrapper} ;;\n\t  *) . ./${wrapper} ;;\n\t  esac\n\n\t  outputname=\n\t  if test \"$fast_install\" = no && test -n \"$relink_command\"; then\n\t    if test \"$finalize\" = yes && test -z \"$run\"; then\n\t      tmpdir=`func_mktempdir`\n\t      file=`$echo \"X$file$stripped_ext\" | $Xsed -e 's%^.*/%%'`\n\t      outputname=\"$tmpdir/$file\"\n\t      # Replace the output file specification.\n\t      relink_command=`$echo \"X$relink_command\" | $Xsed -e 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t      $show \"$relink_command\"\n\t      if $run eval \"$relink_command\"; then :\n\t      else\n\t\t$echo \"$modename: error: relink \\`$file' with the above command before installing it\" 1>&2\n\t\t${rm}r \"$tmpdir\"\n\t\tcontinue\n\t      fi\n\t      file=\"$outputname\"\n\t    else\n\t      $echo \"$modename: warning: cannot relink \\`$file'\" 1>&2\n\t    fi\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$echo \"X$file$stripped_ext\" | $Xsed -e \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyway \n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    destfile=`$echo $destfile | ${SED} -e 's,.exe$,,'`\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\t$show \"$install_prog$stripme $file $destfile\"\n\t$run eval \"$install_prog\\$stripme \\$file \\$destfile\" || exit $?\n\ttest -n \"$outputname\" && ${rm}r \"$tmpdir\"\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      name=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\n      # Set up the ranlib parameters.\n      oldlib=\"$destdir/$name\"\n\n      $show \"$install_prog $file $oldlib\"\n      $run eval \"$install_prog \\$file \\$oldlib\" || exit $?\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\t$show \"$old_striplib $oldlib\"\n\t$run eval \"$old_striplib $oldlib\" || exit $?\n      fi\n\n      # Do each command in the postinstall commands.\n      cmds=$old_postinstall_cmds\n      save_ifs=\"$IFS\"; IFS='~'\n      for cmd in $cmds; do\n\tIFS=\"$save_ifs\"\n\teval cmd=\\\"$cmd\\\"\n\t$show \"$cmd\"\n\t$run eval \"$cmd\" || exit $?\n      done\n      IFS=\"$save_ifs\"\n    done\n\n    if test -n \"$future_libdirs\"; then\n      $echo \"$modename: warning: remember to run \\`$progname --finish$future_libdirs'\" 1>&2\n    fi\n\n    if test -n \"$current_libdirs\"; then\n      # Maybe just do a dry run.\n      test -n \"$run\" && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL $progpath $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n    ;;\n\n  # libtool finish mode\n  finish)\n    modename=\"$modename: finish\"\n    libdirs=\"$nonopt\"\n    admincmds=\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for dir\n      do\n\tlibdirs=\"$libdirs $dir\"\n      done\n\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  cmds=$finish_cmds\n\t  save_ifs=\"$IFS\"; IFS='~'\n\t  for cmd in $cmds; do\n\t    IFS=\"$save_ifs\"\n\t    eval cmd=\\\"$cmd\\\"\n\t    $show \"$cmd\"\n\t    $run eval \"$cmd\" || admincmds=\"$admincmds\n       $cmd\"\n\t  done\n\t  IFS=\"$save_ifs\"\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $run eval \"$cmds\" || admincmds=\"$admincmds\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    test \"$show\" = : && exit $EXIT_SUCCESS\n\n    $echo \"X----------------------------------------------------------------------\" | $Xsed\n    $echo \"Libraries have been installed in:\"\n    for libdir in $libdirs; do\n      $echo \"   $libdir\"\n    done\n    $echo\n    $echo \"If you ever happen to want to link against installed libraries\"\n    $echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n    $echo \"specify the full pathname of the library, or use the \\`-LLIBDIR'\"\n    $echo \"flag during linking and do at least one of the following:\"\n    if test -n \"$shlibpath_var\"; then\n      $echo \"   - add LIBDIR to the \\`$shlibpath_var' environment variable\"\n      $echo \"     during execution\"\n    fi\n    if test -n \"$runpath_var\"; then\n      $echo \"   - add LIBDIR to the \\`$runpath_var' environment variable\"\n      $echo \"     during linking\"\n    fi\n    if test -n \"$hardcode_libdir_flag_spec\"; then\n      libdir=LIBDIR\n      eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\n      $echo \"   - use the \\`$flag' linker flag\"\n    fi\n    if test -n \"$admincmds\"; then\n      $echo \"   - have your system administrator run these commands:$admincmds\"\n    fi\n    if test -f /etc/ld.so.conf; then\n      $echo \"   - have your system administrator add LIBDIR to \\`/etc/ld.so.conf'\"\n    fi\n    $echo\n    $echo \"See any operating system documentation about shared libraries for\"\n    $echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n    $echo \"X----------------------------------------------------------------------\" | $Xsed\n    exit $EXIT_SUCCESS\n    ;;\n\n  # libtool execute mode\n  execute)\n    modename=\"$modename: execute\"\n\n    # The first argument is the command name.\n    cmd=\"$nonopt\"\n    if test -z \"$cmd\"; then\n      $echo \"$modename: you must specify a COMMAND\" 1>&2\n      $echo \"$help\"\n      exit $EXIT_FAILURE\n    fi\n\n    # Handle -dlopen flags immediately.\n    for file in $execute_dlfiles; do\n      if test ! -f \"$file\"; then\n\t$echo \"$modename: \\`$file' is not a file\" 1>&2\n\t$echo \"$help\" 1>&2\n\texit $EXIT_FAILURE\n      fi\n\n      dir=\n      case $file in\n      *.la)\n\t# Check to see that this really is a libtool archive.\n\tif (${SED} -e '2q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then :\n\telse\n\t  $echo \"$modename: \\`$lib' is not a valid libtool archive\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\n\t# If there is no directory component, then add one.\n\tcase $file in\n\t*/* | *\\\\*) . $file ;;\n\t*) . ./$file ;;\n\tesac\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && $echo \"$modename: warning: \\`$file' was not linked with \\`-export-dynamic'\"\n\t  continue\n\tfi\n\n\tdir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`\n\ttest \"X$dir\" = \"X$file\" && dir=.\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  dir=\"$dir/$objdir\"\n\telse\n\t  $echo \"$modename: cannot find \\`$dlname' in \\`$dir' or \\`$dir/$objdir'\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tdir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`\n\ttest \"X$dir\" = \"X$file\" && dir=.\n\t;;\n\n      *)\n\t$echo \"$modename: warning \\`-dlopen' is ignored for non-libtool libraries and objects\" 1>&2\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=\"$absdir\"\n\n      # Now add the directory to shlibpath_var.\n      if eval \"test -z \\\"\\$$shlibpath_var\\\"\"; then\n\teval \"$shlibpath_var=\\\"\\$dir\\\"\"\n      else\n\teval \"$shlibpath_var=\\\"\\$dir:\\$$shlibpath_var\\\"\"\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=\"$magic\"\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -*) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif (${SED} -e '4q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t  # If there is no directory component, then add one.\n\t  case $file in\n\t  */* | *\\\\*) . $file ;;\n\t  *) . ./$file ;;\n\t  esac\n\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      file=`$echo \"X$file\" | $Xsed -e \"$sed_quote_subst\"`\n      args=\"$args \\\"$file\\\"\"\n    done\n\n    if test -z \"$run\"; then\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      if test \"${save_LC_ALL+set}\" = set; then\n\tLC_ALL=\"$save_LC_ALL\"; export LC_ALL\n      fi\n      if test \"${save_LANG+set}\" = set; then\n\tLANG=\"$save_LANG\"; export LANG\n      fi\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\"\\$cmd$args\"\n    else\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$echo \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\t$echo \"export $shlibpath_var\"\n      fi\n      $echo \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    fi\n    ;;\n\n  # libtool clean and uninstall mode\n  clean | uninstall)\n    modename=\"$modename: $mode\"\n    rm=\"$nonopt\"\n    files=\n    rmforce=\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    for arg\n    do\n      case $arg in\n      -f) rm=\"$rm $arg\"; rmforce=yes ;;\n      -*) rm=\"$rm $arg\" ;;\n      *) files=\"$files $arg\" ;;\n      esac\n    done\n\n    if test -z \"$rm\"; then\n      $echo \"$modename: you must specify an RM program\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    rmdirs=\n\n    origobjdir=\"$objdir\"\n    for file in $files; do\n      dir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`\n      if test \"X$dir\" = \"X$file\"; then\n\tdir=.\n\tobjdir=\"$origobjdir\"\n      else\n\tobjdir=\"$dir/$origobjdir\"\n      fi\n      name=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n      test \"$mode\" = uninstall && objdir=\"$dir\"\n\n      # Remember objdir for removal later, being careful to avoid duplicates\n      if test \"$mode\" = clean; then\n\tcase \" $rmdirs \" in\n\t  *\" $objdir \"*) ;;\n\t  *) rmdirs=\"$rmdirs $objdir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if (test -L \"$file\") >/dev/null 2>&1 \\\n\t|| (test -h \"$file\") >/dev/null 2>&1 \\\n\t|| test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif test \"$rmforce\" = yes; then\n\tcontinue\n      fi\n\n      rmfiles=\"$file\"\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif (${SED} -e '2q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t  . $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    rmfiles=\"$rmfiles $objdir/$n\"\n\t  done\n\t  test -n \"$old_library\" && rmfiles=\"$rmfiles $objdir/$old_library\"\n\n\t  case \"$mode\" in\n\t  clean)\n\t    case \"  $library_names \" in\n\t    # \"  \" in the beginning catches empty $dlname\n\t    *\" $dlname \"*) ;;\n\t    *) rmfiles=\"$rmfiles $objdir/$dlname\" ;;\n\t    esac\n\t     test -n \"$libdir\" && rmfiles=\"$rmfiles $objdir/$name $objdir/${name}i\"\n\t    ;;\n\t  uninstall)\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      cmds=$postuninstall_cmds\n\t      save_ifs=\"$IFS\"; IFS='~'\n\t      for cmd in $cmds; do\n\t\tIFS=\"$save_ifs\"\n\t\teval cmd=\\\"$cmd\\\"\n\t\t$show \"$cmd\"\n\t\t$run eval \"$cmd\"\n\t\tif test \"$?\" -ne 0 && test \"$rmforce\" != yes; then\n\t\t  exit_status=1\n\t\tfi\n\t      done\n\t      IFS=\"$save_ifs\"\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      cmds=$old_postuninstall_cmds\n\t      save_ifs=\"$IFS\"; IFS='~'\n\t      for cmd in $cmds; do\n\t\tIFS=\"$save_ifs\"\n\t\teval cmd=\\\"$cmd\\\"\n\t\t$show \"$cmd\"\n\t\t$run eval \"$cmd\"\n\t\tif test \"$?\" -ne 0 && test \"$rmforce\" != yes; then\n\t\t  exit_status=1\n\t\tfi\n\t      done\n\t      IFS=\"$save_ifs\"\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t    ;;\n\t  esac\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif (${SED} -e '2q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\n\t  # Read the .lo file\n\t  . $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" \\\n\t     && test \"$pic_object\" != none; then\n\t    rmfiles=\"$rmfiles $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" \\\n\t     && test \"$non_pic_object\" != none; then\n\t    rmfiles=\"$rmfiles $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test \"$mode\" = clean ; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    file=`$echo $file|${SED} 's,.exe$,,'`\n\t    noexename=`$echo $name|${SED} 's,.exe$,,'`\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    rmfiles=\"$rmfiles $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if (${SED} -e '4q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t    relink_command=\n\t    . $dir/$noexename\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    rmfiles=\"$rmfiles $objdir/$name $objdir/${name}S.${objext}\"\n\t    if test \"$fast_install\" = yes && test -n \"$relink_command\"; then\n\t      rmfiles=\"$rmfiles $objdir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\" ; then\n\t      rmfiles=\"$rmfiles $objdir/lt-${noexename}.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      $show \"$rm $rmfiles\"\n      $run $rm $rmfiles || exit_status=1\n    done\n    objdir=\"$origobjdir\"\n\n    # Try to remove the ${objdir}s in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\t$show \"rmdir $dir\"\n\t$run rmdir $dir >/dev/null 2>&1\n      fi\n    done\n\n    exit $exit_status\n    ;;\n\n  \"\")\n    $echo \"$modename: you must specify a MODE\" 1>&2\n    $echo \"$generic_help\" 1>&2\n    exit $EXIT_FAILURE\n    ;;\n  esac\n\n  if test -z \"$exec_cmd\"; then\n    $echo \"$modename: invalid operation mode \\`$mode'\" 1>&2\n    $echo \"$generic_help\" 1>&2\n    exit $EXIT_FAILURE\n  fi\nfi # test -z \"$show_help\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec $exec_cmd\n  exit $EXIT_FAILURE\nfi\n\n# We need to display help for each of the modes.\ncase $mode in\n\"\") $echo \\\n\"Usage: $modename [OPTION]... [MODE-ARG]...\n\nProvide generalized library-building support services.\n\n    --config          show all configuration variables\n    --debug           enable verbose shell tracing\n-n, --dry-run         display commands without modifying any files\n    --features        display basic configuration information and exit\n    --finish          same as \\`--mode=finish'\n    --help            display this help message and exit\n    --mode=MODE       use operation mode MODE [default=inferred from MODE-ARGS]\n    --quiet           same as \\`--silent'\n    --silent          don't print informational messages\n    --tag=TAG         use configuration variables from tag TAG\n    --version         print version information\n\nMODE must be one of the following:\n\n      clean           remove files from the build directory\n      compile         compile a source file into a libtool object\n      execute         automatically set library path, then run a program\n      finish          complete the installation of libtool libraries\n      install         install libraries or executables\n      link            create a library or an executable\n      uninstall       remove libraries from an installed directory\n\nMODE-ARGS vary depending on the MODE.  Try \\`$modename --help --mode=MODE' for\na more detailed description of MODE.\n\nReport bugs to <bug-libtool@gnu.org>.\"\n  exit $EXIT_SUCCESS\n  ;;\n\nclean)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n  ;;\n\ncompile)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -prefer-pic       try to building PIC objects only\n  -prefer-non-pic   try to building non-PIC objects only\n  -static           always build a \\`.o' file suitable for static linking\n\nCOMPILE-COMMAND is a command to be used in creating a \\`standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix \\`.c' with the\nlibrary object suffix, \\`.lo'.\"\n  ;;\n\nexecute)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to \\`-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n  ;;\n\nfinish)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe \\`--dry-run' option if you just want to see what would be executed.\"\n  ;;\n\ninstall)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the \\`install' or \\`cp' program.\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n  ;;\n\nlink)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -dlopen FILE      \\`-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n\t\t    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n\t\t    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  Use a list of object files found in FILE to specify objects\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -static           do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n\t\t    specify library version info [each variable defaults to 0]\n\nAll other options (arguments beginning with \\`-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in \\`.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in \\`.la', then a libtool library is created,\nonly library objects (\\`.lo' files) may be specified, and \\`-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in \\`.a' or \\`.lib', then a standard library is created\nusing \\`ar' and \\`ranlib', or on Windows using \\`lib'.\n\nIf OUTPUT-FILE ends in \\`.lo' or \\`.${objext}', then a reloadable object file\nis created, otherwise an executable program is created.\"\n  ;;\n\nuninstall)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n  ;;\n\n*)\n  $echo \"$modename: invalid operation mode \\`$mode'\" 1>&2\n  $echo \"$help\" 1>&2\n  exit $EXIT_FAILURE\n  ;;\nesac\n\n$echo\n$echo \"Try \\`$modename --help' for more information about other modes.\"\n\nexit $?\n\n# The TAGs below are defined such that we never get into a situation\n# in which we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\ndisable_libs=shared\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\ndisable_libs=static\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/src/engine/boehm_gc/dyn_load.c": "/*\n * Copyright (c) 1991-1994 by Xerox Corporation.  All rights reserved.\n * Copyright (c) 1997 by Silicon Graphics.  All rights reserved.\n *\n * THIS MATERIAL IS PROVIDED AS IS, WITH ABSOLUTELY NO WARRANTY EXPRESSED\n * OR IMPLIED.  ANY USE IS AT YOUR OWN RISK.\n *\n * Permission is hereby granted to use or copy this program\n * for any purpose,  provided the above notices are retained on all copies.\n * Permission to modify the code and to distribute modified code is granted,\n * provided the above notices are retained, and a notice that the code was\n * modified is included with the above copyright notice.\n *\n * Original author: Bill Janssen\n * Heavily modified by Hans Boehm and others\n */\n\n/*\n * This is incredibly OS specific code for tracking down data sections in\n * dynamic libraries.  There appears to be no way of doing this quickly\n * without groveling through undocumented data structures.  We would argue\n * that this is a bug in the design of the dlopen interface.  THIS CODE\n * MAY BREAK IN FUTURE OS RELEASES.  If this matters to you, don't hesitate\n * to let your vendor know ...\n *\n * None of this is safe with dlclose and incremental collection.\n * But then not much of anything is safe in the presence of dlclose.\n */\n#if (defined(__linux__) || defined(__GLIBC__) || defined(__GNU__)) \\\n     && !defined(_GNU_SOURCE)\n    /* Can't test LINUX, since this must be defined before other includes */\n#   define _GNU_SOURCE\n#endif\n#if !defined(MACOS) && !defined(_WIN32_WCE)\n#  include <sys/types.h>\n#endif\n#include \"private/gc_priv.h\"\n\n/* BTL: avoid circular redefinition of dlopen if GC_SOLARIS_THREADS defined */\n# if (defined(GC_PTHREADS) || defined(GC_SOLARIS_THREADS)) \\\n      && defined(dlopen) && !defined(GC_USE_LD_WRAP)\n    /* To support threads in Solaris, gc.h interposes on dlopen by       */\n    /* defining \"dlopen\" to be \"GC_dlopen\", which is implemented below.  */\n    /* However, both GC_FirstDLOpenedLinkMap() and GC_dlopen() use the   */\n    /* real system dlopen() in their implementation. We first remove     */\n    /* gc.h's dlopen definition and restore it later, after GC_dlopen(). */\n#   undef dlopen\n#   define GC_must_restore_redefined_dlopen\n# else\n#   undef GC_must_restore_redefined_dlopen\n# endif\n\n/* A user-supplied routine that is called to determine if a DSO must\n   be scanned by the gc.  */\nstatic int (*GC_has_static_roots)(const char *, void *, size_t);\n\n\n#if (defined(DYNAMIC_LOADING) || defined(MSWIN32) || defined(MSWINCE)) \\\n    && !defined(PCR)\n#if !defined(SOLARISDL) && !defined(IRIX5) && \\\n    !defined(MSWIN32) && !defined(MSWINCE) && \\\n    !(defined(ALPHA) && defined(OSF1)) && \\\n    !defined(HPUX) && !(defined(LINUX) && defined(__ELF__)) && \\\n    !defined(AIX) && !defined(SCO_ELF) && !defined(DGUX) && \\\n    !(defined(FREEBSD) && defined(__ELF__)) && \\\n    !(defined(NETBSD) && defined(__ELF__)) && !defined(HURD) && \\\n    !defined(DARWIN) && !defined(CYGWIN32) && !defined(HAIKU)\n --> We only know how to find data segments of dynamic libraries for the\n --> above.  Additional SVR4 variants might not be too\n --> hard to add.\n#endif\n\n#include <stdio.h>\n#ifdef SOLARISDL\n#   include <sys/elf.h>\n#   include <dlfcn.h>\n#   include <link.h>\n#endif\n\n#if defined(NETBSD)\n#   include <machine/elf_machdep.h>\n#   define ELFSIZE ARCH_ELFSIZE\n#endif\n\n#if defined(HAIKU)\n//  purposefully empty\n#endif\n\n#if defined(LINUX) && defined(__ELF__) || defined(SCO_ELF) || \\\n    (defined(FREEBSD) && defined(__ELF__)) || defined(DGUX) || \\\n    (defined(NETBSD) && defined(__ELF__)) || defined(HURD)\n#   include <stddef.h>\n#   include <elf.h>\n#   include <link.h>\n#endif\n\n/* Newer versions of GNU/Linux define this macro.  We\n * define it similarly for any ELF systems that don't.  */\n#  ifndef ElfW\n#    if defined(FREEBSD)\n#      if __ELF_WORD_SIZE == 32\n#        define ElfW(type) Elf32_##type\n#      else\n#        define ElfW(type) Elf64_##type\n#      endif\n#    elif defined(NETBSD)\n#      if ELFSIZE == 32\n#        define ElfW(type) Elf32_##type\n#      else\n#        define ElfW(type) Elf64_##type\n#      endif\n#    else\n#      if !defined(ELF_CLASS) || ELF_CLASS == ELFCLASS32\n#        define ElfW(type) Elf32_##type\n#      else\n#        define ElfW(type) Elf64_##type\n#      endif\n#    endif\n#  endif\n\n#if defined(SOLARISDL) && !defined(USE_PROC_FOR_LIBRARIES)\n\n#ifdef LINT\n    Elf32_Dyn _DYNAMIC;\n#endif\n\nstatic struct link_map *\nGC_FirstDLOpenedLinkMap()\n{\n    extern ElfW(Dyn) _DYNAMIC;\n    ElfW(Dyn) *dp;\n    struct r_debug *r;\n    static struct link_map * cachedResult = 0;\n    static ElfW(Dyn) *dynStructureAddr = 0;\n    \t\t\t/* BTL: added to avoid Solaris 5.3 ld.so _DYNAMIC bug */\n\n#   ifdef SUNOS53_SHARED_LIB\n\t/* BTL: Avoid the Solaris 5.3 bug that _DYNAMIC isn't being set\t*/\n\t/* up properly in dynamically linked .so's. This means we have\t*/\n\t/* to use its value in the set of original object files loaded\t*/\n\t/* at program startup.\t\t\t\t\t\t*/\n\tif( dynStructureAddr == 0 ) {\n\t  void* startupSyms = dlopen(0, RTLD_LAZY);\n\t  dynStructureAddr = (ElfW(Dyn)*)dlsym(startupSyms, \"_DYNAMIC\");\n\t\t}\n#   else\n\tdynStructureAddr = &_DYNAMIC;\n#   endif\n\n    if( dynStructureAddr == 0) {\n        return(0);\n    }\n    if( cachedResult == 0 ) {\n        int tag;\n        for( dp = ((ElfW(Dyn) *)(&_DYNAMIC)); (tag = dp->d_tag) != 0; dp++ ) {\n            if( tag == DT_DEBUG ) {\n                struct link_map *lm\n                        = ((struct r_debug *)(dp->d_un.d_ptr))->r_map;\n                if( lm != 0 ) cachedResult = lm->l_next; /* might be NIL */\n                break;\n            }\n        }\n    }\n    return cachedResult;\n}\n\n#endif /* SOLARISDL ... */\n\n/* BTL: added to fix circular dlopen definition if GC_SOLARIS_THREADS defined */\n# if defined(GC_must_restore_redefined_dlopen)\n#   define dlopen GC_dlopen\n# endif\n\n# if defined(SOLARISDL)\n/* Add dynamic library data sections to the root set.\t\t*/\n# if !defined(PCR) && !defined(GC_SOLARIS_THREADS) && defined(THREADS)\n\t--> fix mutual exclusion with dlopen\n# endif\n\n# ifndef USE_PROC_FOR_LIBRARIES\nvoid GC_register_dynamic_libraries()\n{\n  struct link_map *lm = GC_FirstDLOpenedLinkMap();\n  \n\n  for (lm = GC_FirstDLOpenedLinkMap();\n       lm != (struct link_map *) 0;  lm = lm->l_next)\n    {\n\tElfW(Ehdr) * e;\n        ElfW(Phdr) * p;\n        unsigned long offset;\n        char * start;\n        register int i;\n        \n\te = (ElfW(Ehdr) *) lm->l_addr;\n        p = ((ElfW(Phdr) *)(((char *)(e)) + e->e_phoff));\n        offset = ((unsigned long)(lm->l_addr));\n        for( i = 0; i < (int)(e->e_phnum); ((i++),(p++)) ) {\n          switch( p->p_type ) {\n            case PT_LOAD:\n              {\n                if( !(p->p_flags & PF_W) ) break;\n                start = ((char *)(p->p_vaddr)) + offset;\n                GC_add_roots_inner(\n                  start,\n                  start + p->p_memsz,\n                  TRUE\n                );\n              }\n              break;\n            default:\n              break;\n          }\n\t}\n    }\n}\n\n# endif /* !USE_PROC ... */\n# endif /* SOLARISDL */\n\n#if defined(LINUX) && defined(__ELF__) || defined(SCO_ELF) || \\\n    (defined(FREEBSD) && defined(__ELF__)) || defined(DGUX) || \\\n    (defined(NETBSD) && defined(__ELF__)) || defined(HURD) \\\n    defined(HAIKU)\n\n\n#ifdef USE_PROC_FOR_LIBRARIES\n\n#include <string.h>\n\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <unistd.h>\n\n#define MAPS_BUF_SIZE (32*1024)\n\nextern ssize_t GC_repeat_read(int fd, char *buf, size_t count);\n\t/* Repeatedly read until buffer is filled, or EOF is encountered */\n\t/* Defined in os_dep.c.  \t\t\t\t\t */\n\nchar *GC_parse_map_entry(char *buf_ptr, ptr_t *start, ptr_t *end,\n                         char **prot, unsigned int *maj_dev,\n\t\t\t char **mapping_name);\nchar *GC_get_maps(void);\n\t/* From os_dep.c\t*/\n\nword GC_register_map_entries(char *maps)\n{\n    char *prot;\n    char *buf_ptr = maps;\n    int count;\n    ptr_t start, end;\n    unsigned int maj_dev;\n    ptr_t least_ha, greatest_ha;\n    unsigned i;\n    ptr_t datastart = (ptr_t)(DATASTART);\n\n    /* Compute heap bounds. FIXME: Should work if heap and roots are \t*/\n    /* interleaved?\t\t\t\t\t\t\t*/\n\tleast_ha = (ptr_t)(word)(-1);\n\tgreatest_ha = 0;\n\tfor (i = 0; i < GC_n_heap_sects; ++i) {\n\t    ptr_t sect_start = GC_heap_sects[i].hs_start;\n\t    ptr_t sect_end = sect_start + GC_heap_sects[i].hs_bytes;\n\t    if (sect_start < least_ha) least_ha = sect_start;\n\t    if (sect_end > greatest_ha) greatest_ha = sect_end;\n        }\n    \tif (greatest_ha < (ptr_t)GC_scratch_last_end_ptr)\n\t    greatest_ha = (ptr_t)GC_scratch_last_end_ptr; \n\n    for (;;) {\n        buf_ptr = GC_parse_map_entry(buf_ptr, &start, &end, &prot, &maj_dev, 0);\n\tif (buf_ptr == NULL) return 1;\n\tif (prot[1] == 'w') {\n\t    /* This is a writable mapping.  Add it to\t\t*/\n\t    /* the root set unless it is already otherwise\t*/\n\t    /* accounted for.\t\t\t\t\t*/\n\t    if (start <= GC_stackbottom && end >= GC_stackbottom) {\n\t\t/* Stack mapping; discard\t*/\n\t\tcontinue;\n\t    }\n#\t    ifdef THREADS\n\t      /* This may fail, since a thread may already be \t\t*/\n\t      /* unregistered, but its thread stack may still be there.\t*/\n\t      /* That can fail because the stack may disappear while\t*/\n\t      /* we're marking.  Thus the marker is, and has to be\t*/\n\t      /* prepared to recover from segmentation faults.\t\t*/\n\t      if (GC_segment_is_thread_stack(start, end)) continue;\n\t      /* FIXME: REDIRECT_MALLOC actually works with threads on\t*/\n\t      /* LINUX/IA64 if we omit this check.  The problem is that\t*/\n\t      /* thread stacks contain pointers to dynamic thread\t*/\n\t      /* vectors, which may be reused due to thread caching.\t*/\n\t      /* Currently they may not be marked if the thread is \t*/\n\t      /* still live.\t\t\t\t\t\t*/\n\t      /* For dead threads, we trace the whole stack, which is\t*/\n\t      /* very suboptimal for performance reasons.\t\t*/\n#\t    endif\n\t    /* We no longer exclude the main data segment.\t\t*/\n\t    if (start < least_ha && end > least_ha) {\n\t\tend = least_ha;\n\t    }\n\t    if (start < greatest_ha && end > greatest_ha) {\n\t\tstart = greatest_ha;\n\t    }\n\t    if (start >= least_ha && end <= greatest_ha) continue;\n\t    GC_add_roots_inner((char *)start, (char *)end, TRUE);\n\t}\n    }\n    return 1;\n}\n\nvoid GC_register_dynamic_libraries()\n{\n    if (!GC_register_map_entries(GC_get_maps()))\n        ABORT(\"Failed to read /proc for library registration.\");\n}\n\n/* We now take care of the main data segment ourselves: */\nGC_bool GC_register_main_static_data()\n{\n    return FALSE;\n}\n  \n# define HAVE_REGISTER_MAIN_STATIC_DATA\n\n#endif /* USE_PROC_FOR_LIBRARIES */\n\n#if !defined(USE_PROC_FOR_LIBRARIES)\n/* The following is the preferred way to walk dynamic libraries\t*/\n/* For glibc 2.2.4+.  Unfortunately, it doesn't work for older\t*/\n/* versions.  Thanks to Jakub Jelinek for most of the code.\t*/\n\n# if (defined(LINUX) || defined (__GLIBC__)) /* Are others OK here, too? */ \\\n     && (__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2) \\\n         || (__GLIBC__ == 2 && __GLIBC_MINOR__ == 2 && defined(DT_CONFIG))) \n\n/* We have the header files for a glibc that includes dl_iterate_phdr.\t*/\n/* It may still not be available in the library on the target system.   */\n/* Thus we also treat it as a weak symbol.\t\t\t\t*/\n#define HAVE_DL_ITERATE_PHDR\n\nstatic int GC_register_dynlib_callback(info, size, ptr)\n     struct dl_phdr_info * info;\n     size_t size;\n     void * ptr;\n{\n  const ElfW(Phdr) * p;\n  char * start;\n  register int i;\n\n  /* Make sure struct dl_phdr_info is at least as big as we need.  */\n  if (size < offsetof (struct dl_phdr_info, dlpi_phnum)\n      + sizeof (info->dlpi_phnum))\n    return -1;\n\n  p = info->dlpi_phdr;\n  for( i = 0; i < (int)(info->dlpi_phnum); ((i++),(p++)) ) {\n    switch( p->p_type ) {\n      case PT_LOAD:\n\t{\n\t  if( !(p->p_flags & PF_W) ) break;\n\t  start = ((char *)(p->p_vaddr)) + info->dlpi_addr;\n\n\t  if (GC_has_static_roots\n\t      && !GC_has_static_roots(info->dlpi_name, start, p->p_memsz))\n\t    break;\n\n\t  GC_add_roots_inner(start, start + p->p_memsz, TRUE);\n\t}\n      break;\n      default:\n\tbreak;\n    }\n  }\n\n  * (int *)ptr = 1;\t/* Signal that we were called */\n  return 0;\n}     \n\n/* Return TRUE if we succeed, FALSE if dl_iterate_phdr wasn't there. */\n\n#pragma weak dl_iterate_phdr\n\nGC_bool GC_register_dynamic_libraries_dl_iterate_phdr()\n{\n  if (dl_iterate_phdr) {\n    int did_something = 0;\n    dl_iterate_phdr(GC_register_dynlib_callback, &did_something);\n    if (!did_something) {\n\t/* dl_iterate_phdr may forget the static data segment in\t*/\n\t/* statically linked executables.\t\t\t\t*/\n\tGC_add_roots_inner(DATASTART, (char *)(DATAEND), TRUE);\n#       if defined(DATASTART2)\n          GC_add_roots_inner(DATASTART2, (char *)(DATAEND2), TRUE);\n#       endif\n    }\n\n    return TRUE;\n  } else {\n    return FALSE;\n  }\n}\n\n/* Do we need to separately register the main static data segment? */\nGC_bool GC_register_main_static_data()\n{\n  return (dl_iterate_phdr == 0);\n}\n\n#define HAVE_REGISTER_MAIN_STATIC_DATA\n\n# else /* !LINUX || version(glibc) < 2.2.4 */\n\n/* Dynamic loading code for Linux running ELF. Somewhat tested on\n * Linux/x86, untested but hopefully should work on Linux/Alpha. \n * This code was derived from the Solaris/ELF support. Thanks to\n * whatever kind soul wrote that.  - Patrick Bridges */\n\n/* This doesn't necessarily work in all cases, e.g. with preloaded\n * dynamic libraries.\t\t\t\t\t\t*/\n\n#if defined(NETBSD)\n#  include <sys/exec_elf.h>\n/* for compatibility with 1.4.x */\n#  ifndef DT_DEBUG\n#  define DT_DEBUG     21\n#  endif\n#  ifndef PT_LOAD\n#  define PT_LOAD      1\n#  endif\n#  ifndef PF_W\n#  define PF_W         2\n#  endif\n#else\n#  include <elf.h>\n#endif\n#include <link.h>\n\n# endif\n\n#ifdef __GNUC__\n# pragma weak _DYNAMIC\n#endif\nextern ElfW(Dyn) _DYNAMIC[];\n\nstatic struct link_map *\nGC_FirstDLOpenedLinkMap()\n{\n    ElfW(Dyn) *dp;\n    static struct link_map *cachedResult = 0;\n\n    if( _DYNAMIC == 0) {\n        return(0);\n    }\n    if( cachedResult == 0 ) {\n        int tag;\n        for( dp = _DYNAMIC; (tag = dp->d_tag) != 0; dp++ ) {\n            if( tag == DT_DEBUG ) {\n                struct link_map *lm\n                        = ((struct r_debug *)(dp->d_un.d_ptr))->r_map;\n                if( lm != 0 ) cachedResult = lm->l_next; /* might be NIL */\n                break;\n            }\n        }\n    }\n    return cachedResult;\n}\n\n\nvoid GC_register_dynamic_libraries()\n{\n  struct link_map *lm;\n  \n\n# ifdef HAVE_DL_ITERATE_PHDR\n    if (GC_register_dynamic_libraries_dl_iterate_phdr()) {\n\treturn;\n    }\n# endif\n  lm = GC_FirstDLOpenedLinkMap();\n  for (lm = GC_FirstDLOpenedLinkMap();\n       lm != (struct link_map *) 0;  lm = lm->l_next)\n    {\n\tElfW(Ehdr) * e;\n        ElfW(Phdr) * p;\n        unsigned long offset;\n        char * start;\n        register int i;\n        \n\te = (ElfW(Ehdr) *) lm->l_addr;\n        p = ((ElfW(Phdr) *)(((char *)(e)) + e->e_phoff));\n        offset = ((unsigned long)(lm->l_addr));\n        for( i = 0; i < (int)(e->e_phnum); ((i++),(p++)) ) {\n          switch( p->p_type ) {\n            case PT_LOAD:\n              {\n                if( !(p->p_flags & PF_W) ) break;\n                start = ((char *)(p->p_vaddr)) + offset;\n                GC_add_roots_inner(start, start + p->p_memsz, TRUE);\n              }\n              break;\n            default:\n              break;\n          }\n\t}\n    }\n}\n\n#endif /* !USE_PROC_FOR_LIBRARIES */\n\n#endif /* LINUX */\n\n#if defined(IRIX5) || (defined(USE_PROC_FOR_LIBRARIES) && !defined(LINUX))\n\n#include <sys/procfs.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <elf.h>\n#include <errno.h>\n#include <signal.h>  /* Only for the following test. */\n#ifndef _sigargs\n# define IRIX6\n#endif\n\nextern void * GC_roots_present();\n\t/* The type is a lie, since the real type doesn't make sense here, */\n\t/* and we only test for NULL.\t\t\t\t\t   */\n\n\n/* We use /proc to track down all parts of the address space that are\t*/\n/* mapped by the process, and throw out regions we know we shouldn't\t*/\n/* worry about.  This may also work under other SVR4 variants.\t\t*/\nvoid GC_register_dynamic_libraries()\n{\n    static int fd = -1;\n    char buf[30];\n    static prmap_t * addr_map = 0;\n    static int current_sz = 0;\t/* Number of records currently in addr_map */\n    static int needed_sz;\t/* Required size of addr_map\t\t*/\n    int i;\n    long flags;\n    ptr_t start;\n    ptr_t limit;\n    ptr_t heap_start = (ptr_t)HEAP_START;\n    ptr_t heap_end = heap_start;\n\n#   ifdef SOLARISDL\n#     define MA_PHYS 0\n#   endif /* SOLARISDL */\n\n    if (fd < 0) {\n      sprintf(buf, \"/proc/%d\", getpid());\n\t/* The above generates a lint complaint, since pid_t varies.\t*/\n\t/* It's unclear how to improve this.\t\t\t\t*/\n      fd = open(buf, O_RDONLY);\n      if (fd < 0) {\n    \tABORT(\"/proc open failed\");\n      }\n    }\n    if (ioctl(fd, PIOCNMAP, &needed_sz) < 0) {\n\tGC_err_printf(\"fd = %d, errno = %d\\n\", fd, errno);\n    \tABORT(\"/proc PIOCNMAP ioctl failed\");\n    }\n    if (needed_sz >= current_sz) {\n        current_sz = needed_sz * 2 + 1;\n        \t\t/* Expansion, plus room for 0 record */\n        addr_map = (prmap_t *)GC_scratch_alloc((word)\n\t\t\t\t\t\t(current_sz * sizeof(prmap_t)));\n    }\n    if (ioctl(fd, PIOCMAP, addr_map) < 0) {\n        GC_err_printf(\"fd = %d, errno = %d, needed_sz = %d, addr_map = 0x%X\\n\",\n                        fd, errno, needed_sz, addr_map);\n    \tABORT(\"/proc PIOCMAP ioctl failed\");\n    };\n    if (GC_n_heap_sects > 0) {\n    \theap_end = GC_heap_sects[GC_n_heap_sects-1].hs_start\n    \t\t\t+ GC_heap_sects[GC_n_heap_sects-1].hs_bytes;\n    \tif (heap_end < GC_scratch_last_end_ptr) heap_end = GC_scratch_last_end_ptr; \n    }\n    for (i = 0; i < needed_sz; i++) {\n        flags = addr_map[i].pr_mflags;\n\tif ((flags & (MA_BREAK | MA_STACK | MA_PHYS\n\t\t      | MA_FETCHOP | MA_NOTCACHED)) != 0) goto irrelevant;\n        if ((flags & (MA_READ | MA_WRITE)) != (MA_READ | MA_WRITE))\n            goto irrelevant;\n          /* The latter test is empirically useless in very old Irix\t*/\n\t  /* versions.  Other than the\t\t\t\t\t*/\n          /* main data and stack segments, everything appears to be\t*/\n          /* mapped readable, writable, executable, and shared(!!).\t*/\n          /* This makes no sense to me.\t- HB\t\t\t\t*/\n        start = (ptr_t)(addr_map[i].pr_vaddr);\n        if (GC_roots_present(start)) goto irrelevant;\n        if (start < heap_end && start >= heap_start)\n        \tgoto irrelevant;\n#\tifdef MMAP_STACKS\n\t  if (GC_is_thread_stack(start)) goto irrelevant;\n#\tendif /* MMAP_STACKS */\n\n        limit = start + addr_map[i].pr_size;\n\t/* The following seemed to be necessary for very old versions \t*/\n\t/* of Irix, but it has been reported to discard relevant\t*/\n\t/* segments under Irix 6.5.  \t\t\t\t\t*/\n#\tifndef IRIX6\n\t  if (addr_map[i].pr_off == 0 && strncmp(start, ELFMAG, 4) == 0) {\n\t    /* Discard text segments, i.e. 0-offset mappings against\t*/\n\t    /* executable files which appear to have ELF headers.\t*/\n\t    caddr_t arg;\n\t    int obj;\n#\t    define MAP_IRR_SZ 10\n\t    static ptr_t map_irr[MAP_IRR_SZ];\n\t    \t\t\t\t/* Known irrelevant map entries\t*/\n\t    static int n_irr = 0;\n\t    struct stat buf;\n\t    register int i;\n\t    \n\t    for (i = 0; i < n_irr; i++) {\n\t        if (map_irr[i] == start) goto irrelevant;\n\t    }\n\t    arg = (caddr_t)start;\n\t    obj = ioctl(fd, PIOCOPENM, &arg);\n\t    if (obj >= 0) {\n\t        fstat(obj, &buf);\n\t        close(obj);\n\t        if ((buf.st_mode & 0111) != 0) {\n\t            if (n_irr < MAP_IRR_SZ) {\n\t                map_irr[n_irr++] = start;\n\t            }\n\t            goto irrelevant;\n\t        }\n\t    }\n\t  }\n#\tendif /* !IRIX6 */\n        GC_add_roots_inner(start, limit, TRUE);\n      irrelevant: ;\n    }\n    /* Dont keep cached descriptor, for now.  Some kernels don't like us */\n    /* to keep a /proc file descriptor around during kill -9.\t\t */\n    \tif (close(fd) < 0) ABORT(\"Couldnt close /proc file\");\n\tfd = -1;\n}\n\n# endif /* USE_PROC || IRIX5 */\n\n# if defined(MSWIN32) || defined(MSWINCE) || defined(CYGWIN32)\n\n# define WIN32_LEAN_AND_MEAN\n# define NOSERVICE\n# include <windows.h>\n# include <stdlib.h>\n\n  /* We traverse the entire address space and register all segments \t*/\n  /* that could possibly have been written to.\t\t\t\t*/\n  \n  extern GC_bool GC_is_heap_base (ptr_t p);\n\n# ifdef GC_WIN32_THREADS\n    extern void GC_get_next_stack(char *start, char **lo, char **hi);\n    void GC_cond_add_roots(char *base, char * limit)\n    {\n      char * curr_base = base;\n      char * next_stack_lo;\n      char * next_stack_hi;\n   \n      if (base == limit) return;\n      for(;;) {\n\t  GC_get_next_stack(curr_base, &next_stack_lo, &next_stack_hi);\n\t  if (next_stack_lo >= limit) break;\n\t  GC_add_roots_inner(curr_base, next_stack_lo, TRUE);\n\t  curr_base = next_stack_hi;\n      }\n      if (curr_base < limit) GC_add_roots_inner(curr_base, limit, TRUE);\n    }\n# else\n    void GC_cond_add_roots(char *base, char * limit)\n    {\n      char dummy;\n      char * stack_top\n\t = (char *) ((word)(&dummy) & ~(GC_sysinfo.dwAllocationGranularity-1));\n      if (base == limit) return;\n      if (limit > stack_top && base < GC_stackbottom) {\n    \t  /* Part of the stack; ignore it. */\n    \t  return;\n      }\n      GC_add_roots_inner(base, limit, TRUE);\n    }\n# endif\n\n# ifdef MSWINCE\n  /* Do we need to separately register the main static data segment? */\n  GC_bool GC_register_main_static_data()\n  {\n    return FALSE;\n  }\n# else /* win32 */\n  extern GC_bool GC_no_win32_dlls;\n\n  GC_bool GC_register_main_static_data()\n  {\n    return GC_no_win32_dlls;\n  }\n# endif /* win32 */\n  \n# define HAVE_REGISTER_MAIN_STATIC_DATA\n\n# ifdef DEBUG_VIRTUALQUERY\n  void GC_dump_meminfo(MEMORY_BASIC_INFORMATION *buf)\n  {\n    GC_printf(\"BaseAddress = %lx, AllocationBase = %lx, RegionSize = %lx(%lu)\\n\",\n\t       buf -> BaseAddress, buf -> AllocationBase, buf -> RegionSize,\n\t       buf -> RegionSize);\n    GC_printf(\"\\tAllocationProtect = %lx, State = %lx, Protect = %lx, \"\n\t       \"Type = %lx\\n\",\n\t       buf -> AllocationProtect, buf -> State, buf -> Protect,\n\t       buf -> Type);\n  }\n# endif /* DEBUG_VIRTUALQUERY */\n\n  extern GC_bool GC_wnt;  /* Is Windows NT derivative.\t\t*/\n  \t\t\t  /* Defined and set in os_dep.c.\t*/\n\n  void GC_register_dynamic_libraries()\n  {\n    MEMORY_BASIC_INFORMATION buf;\n    size_t result;\n    DWORD protect;\n    LPVOID p;\n    char * base;\n    char * limit, * new_limit;\n\n#   ifdef MSWIN32\n      if (GC_no_win32_dlls) return;\n#   endif\n    base = limit = p = GC_sysinfo.lpMinimumApplicationAddress;\n#   if defined(MSWINCE) && !defined(_WIN32_WCE_EMULATION)\n      /* Only the first 32 MB of address space belongs to the current process */\n      while (p < (LPVOID)0x02000000) {\n        result = VirtualQuery(p, &buf, sizeof(buf));\n\tif (result == 0) {\n\t    /* Page is free; advance to the next possible allocation base */\n\t    new_limit = (char *)\n\t\t(((DWORD) p + GC_sysinfo.dwAllocationGranularity)\n\t\t & ~(GC_sysinfo.dwAllocationGranularity-1));\n\t} else\n#   else\n      while (p < GC_sysinfo.lpMaximumApplicationAddress) {\n        result = VirtualQuery(p, &buf, sizeof(buf));\n#   endif\n\t{\n\t    if (result != sizeof(buf)) {\n\t\tABORT(\"Weird VirtualQuery result\");\n\t    }\n\t    new_limit = (char *)p + buf.RegionSize;\n\t    protect = buf.Protect;\n\t    if (buf.State == MEM_COMMIT\n\t\t&& (protect == PAGE_EXECUTE_READWRITE\n\t\t    || protect == PAGE_READWRITE)\n\t\t&& !GC_is_heap_base(buf.AllocationBase)\n \t\t/* There is some evidence that we cannot always\n \t\t * ignore MEM_PRIVATE sections under Windows ME\n \t\t * and predecessors.  Hence we now also check for\n \t\t * that case.\t*/\n \t\t&& (buf.Type == MEM_IMAGE ||\n \t\t    !GC_wnt && buf.Type == MEM_PRIVATE)) {\n#\t        ifdef DEBUG_VIRTUALQUERY\n\t          GC_dump_meminfo(&buf);\n#\t        endif\n\t\tif ((char *)p != limit) {\n\t\t    GC_cond_add_roots(base, limit);\n\t\t    base = p;\n\t\t}\n\t\tlimit = new_limit;\n\t    }\n\t}\n        if (p > (LPVOID)new_limit /* overflow */) break;\n        p = (LPVOID)new_limit;\n    }\n    GC_cond_add_roots(base, limit);\n  }\n\n#endif /* MSWIN32 || MSWINCE || CYGWIN32 */\n  \n#if defined(ALPHA) && defined(OSF1)\n\n#include <loader.h>\n\nvoid GC_register_dynamic_libraries()\n{\n  int status;\n  ldr_process_t mypid;\n\n  /* module */\n    ldr_module_t moduleid = LDR_NULL_MODULE;\n    ldr_module_info_t moduleinfo;\n    size_t moduleinfosize = sizeof(moduleinfo);\n    size_t modulereturnsize;    \n\n  /* region */\n    ldr_region_t region; \n    ldr_region_info_t regioninfo;\n    size_t regioninfosize = sizeof(regioninfo);\n    size_t regionreturnsize;\n\n  /* Obtain id of this process */\n    mypid = ldr_my_process();\n  \n  /* For each module */\n    while (TRUE) {\n\n      /* Get the next (first) module */\n        status = ldr_next_module(mypid, &moduleid);\n\n      /* Any more modules? */\n        if (moduleid == LDR_NULL_MODULE)\n            break;    /* No more modules */\n\n      /* Check status AFTER checking moduleid because */\n      /* of a bug in the non-shared ldr_next_module stub */\n        if (status != 0 ) {\n            GC_printf(\"dynamic_load: status = %d\\n\", status);\n            {\n                extern char *sys_errlist[];\n                extern int sys_nerr;\n                extern int errno;\n                if (errno <= sys_nerr) {\n                    GC_printf(\"dynamic_load: %s\\n\", sys_errlist[errno]);\n               } else {\n                    GC_printf(\"dynamic_load: %d\\n\", errno);\n                }\n        }\n            ABORT(\"ldr_next_module failed\");\n         }\n\n      /* Get the module information */\n        status = ldr_inq_module(mypid, moduleid, &moduleinfo,\n                                moduleinfosize, &modulereturnsize); \n        if (status != 0 )\n            ABORT(\"ldr_inq_module failed\");\n\n      /* is module for the main program (i.e. nonshared portion)? */\n          if (moduleinfo.lmi_flags & LDR_MAIN)\n              continue;    /* skip the main module */\n\n#     ifdef DL_VERBOSE\n          GC_printf(\"---Module---\\n\");\n          GC_printf(\"Module ID            = %16ld\\n\", moduleinfo.lmi_modid);\n          GC_printf(\"Count of regions     = %16d\\n\", moduleinfo.lmi_nregion);\n          GC_printf(\"flags for module     = %16lx\\n\", moduleinfo.lmi_flags); \n          GC_printf(\"pathname of module   = \\\"%s\\\"\\n\", moduleinfo.lmi_name);\n#     endif\n\n      /* For each region in this module */\n        for (region = 0; region < moduleinfo.lmi_nregion; region++) {\n\n          /* Get the region information */\n            status = ldr_inq_region(mypid, moduleid, region, &regioninfo,\n                                    regioninfosize, &regionreturnsize);\n            if (status != 0 )\n                ABORT(\"ldr_inq_region failed\");\n\n          /* only process writable (data) regions */\n            if (! (regioninfo.lri_prot & LDR_W))\n                continue;\n\n#         ifdef DL_VERBOSE\n              GC_printf(\"--- Region ---\\n\");\n              GC_printf(\"Region number    = %16ld\\n\",\n              \t        regioninfo.lri_region_no);\n              GC_printf(\"Protection flags = %016x\\n\",  regioninfo.lri_prot);\n              GC_printf(\"Virtual address  = %16p\\n\",   regioninfo.lri_vaddr);\n              GC_printf(\"Mapped address   = %16p\\n\",   regioninfo.lri_mapaddr);\n              GC_printf(\"Region size      = %16ld\\n\",  regioninfo.lri_size);\n              GC_printf(\"Region name      = \\\"%s\\\"\\n\", regioninfo.lri_name);\n#         endif\n\n          /* register region as a garbage collection root */\n            GC_add_roots_inner (\n                (char *)regioninfo.lri_mapaddr,\n                (char *)regioninfo.lri_mapaddr + regioninfo.lri_size,\n                TRUE);\n\n        }\n    }\n}\n#endif\n\n#if defined(HPUX)\n\n#include <errno.h>\n#include <dl.h>\n\nextern char *sys_errlist[];\nextern int sys_nerr;\n\nvoid GC_register_dynamic_libraries()\n{\n  int status;\n  int index = 1; /* Ordinal position in shared library search list */\n  struct shl_descriptor *shl_desc; /* Shared library info, see dl.h */\n\n  /* For each dynamic library loaded */\n    while (TRUE) {\n\n      /* Get info about next shared library */\n        status = shl_get(index, &shl_desc);\n\n      /* Check if this is the end of the list or if some error occured */\n        if (status != 0) {\n#\t ifdef GC_HPUX_THREADS\n\t   /* I've seen errno values of 0.  The man page is not clear\t*/\n\t   /* as to whether errno should get set on a -1 return.\t*/\n\t   break;\n#\t else\n          if (errno == EINVAL) {\n              break; /* Moved past end of shared library list --> finished */\n          } else {\n              if (errno <= sys_nerr) {\n                    GC_printf(\"dynamic_load: %s\\n\", sys_errlist[errno]);\n              } else {\n                    GC_printf(\"dynamic_load: %d\\n\", errno);\n\t      }\n              ABORT(\"shl_get failed\");\n          }\n#\t endif\n        }\n\n#     ifdef DL_VERBOSE\n          GC_printf(\"---Shared library---\\n\");\n          GC_printf(\"\\tfilename        = \\\"%s\\\"\\n\", shl_desc->filename);\n          GC_printf(\"\\tindex           = %d\\n\", index);\n          GC_printf(\"\\thandle          = %08x\\n\",\n\t\t\t\t\t(unsigned long) shl_desc->handle);\n          GC_printf(\"\\ttext seg. start = %08x\\n\", shl_desc->tstart);\n          GC_printf(\"\\ttext seg. end   = %08x\\n\", shl_desc->tend);\n          GC_printf(\"\\tdata seg. start = %08x\\n\", shl_desc->dstart);\n          GC_printf(\"\\tdata seg. end   = %08x\\n\", shl_desc->dend);\n          GC_printf(\"\\tref. count      = %lu\\n\", shl_desc->ref_count);\n#     endif\n\n      /* register shared library's data segment as a garbage collection root */\n        GC_add_roots_inner((char *) shl_desc->dstart,\n\t\t\t   (char *) shl_desc->dend, TRUE);\n\n        index++;\n    }\n}\n#endif /* HPUX */\n\n#ifdef AIX\n#pragma alloca\n#include <sys/ldr.h>\n#include <sys/errno.h>\nvoid GC_register_dynamic_libraries()\n{\n\tint len;\n\tchar *ldibuf;\n\tint ldibuflen;\n\tstruct ld_info *ldi;\n\n\tldibuf = alloca(ldibuflen = 8192);\n\n\twhile ( (len = loadquery(L_GETINFO,ldibuf,ldibuflen)) < 0) {\n\t\tif (errno != ENOMEM) {\n\t\t\tABORT(\"loadquery failed\");\n\t\t}\n\t\tldibuf = alloca(ldibuflen *= 2);\n\t}\n\n\tldi = (struct ld_info *)ldibuf;\n\twhile (ldi) {\n\t\tlen = ldi->ldinfo_next;\n\t\tGC_add_roots_inner(\n\t\t\t\tldi->ldinfo_dataorg,\n\t\t\t\t(ptr_t)(unsigned long)ldi->ldinfo_dataorg\n\t\t\t        + ldi->ldinfo_datasize,\n\t\t\t\tTRUE);\n\t\tldi = len ? (struct ld_info *)((char *)ldi + len) : 0;\n\t}\n}\n#endif /* AIX */\n\n#ifdef DARWIN\n\n/* __private_extern__ hack required for pre-3.4 gcc versions.\t*/\n#ifndef __private_extern__\n# define __private_extern__ extern\n# include <mach-o/dyld.h>\n# undef __private_extern__\n#else\n# include <mach-o/dyld.h>\n#endif\n#include <mach-o/getsect.h>\n\n/*#define DARWIN_DEBUG*/\n\nconst static struct { \n        const char *seg;\n        const char *sect;\n} GC_dyld_sections[] = {\n        { SEG_DATA, SECT_DATA },\n        { SEG_DATA, SECT_BSS },\n        { SEG_DATA, SECT_COMMON }\n};\n    \n#ifdef DARWIN_DEBUG\nstatic const char *GC_dyld_name_for_hdr(const struct GC_MACH_HEADER *hdr) {\n    unsigned long i,c;\n    c = _dyld_image_count();\n    for(i=0;i<c;i++) if(_dyld_get_image_header(i) == hdr)\n        return _dyld_get_image_name(i);\n    return NULL;\n}\n#endif\n        \n/* This should never be called by a thread holding the lock */\nstatic void GC_dyld_image_add(const struct GC_MACH_HEADER *hdr, intptr_t slide)\n{\n    unsigned long start,end,i;\n    const struct GC_MACH_SECTION *sec;\n    if (GC_no_dls) return;\n    for(i=0;i<sizeof(GC_dyld_sections)/sizeof(GC_dyld_sections[0]);i++) {\n#   if defined (__LP64__)\n      sec = getsectbynamefromheader_64(\n#   else\n      sec = getsectbynamefromheader(\n#   endif\n\t\t\t\t    hdr, GC_dyld_sections[i].seg,\n\t\t\t\t    GC_dyld_sections[i].sect);\n      if(sec == NULL || sec->size == 0) continue;\n      start = slide + sec->addr;\n      end = start + sec->size;\n#   ifdef DARWIN_DEBUG\n      GC_printf(\"Adding section at %p-%p (%lu bytes) from image %s\\n\",\n\t\tstart,end,sec->size,GC_dyld_name_for_hdr(hdr));\n#   endif\n      GC_add_roots((char*)start,(char*)end);\n    }\n#   ifdef DARWIN_DEBUG\n       GC_print_static_roots();\n#   endif\n}\n\n/* This should never be called by a thread holding the lock */\nstatic void GC_dyld_image_remove(const struct GC_MACH_HEADER *hdr,\n\t\t\t\t intptr_t slide)\n{\n    unsigned long start,end,i;\n    const struct GC_MACH_SECTION *sec;\n    for(i=0;i<sizeof(GC_dyld_sections)/sizeof(GC_dyld_sections[0]);i++) {\n#   if defined (__LP64__)\n      sec = getsectbynamefromheader_64(\n#   else\n      sec = getsectbynamefromheader(\n#   endif\n\t\t\t\t    hdr, GC_dyld_sections[i].seg,\n\t\t\t\t    GC_dyld_sections[i].sect);\n      if(sec == NULL || sec->size == 0) continue;\n      start = slide + sec->addr;\n      end = start + sec->size;\n#   ifdef DARWIN_DEBUG\n      GC_printf(\"Removing section at %p-%p (%lu bytes) from image %s\\n\",\n\t\tstart,end,sec->size,GC_dyld_name_for_hdr(hdr));\n#   endif\n      GC_remove_roots((char*)start,(char*)end);\n    }\n#   ifdef DARWIN_DEBUG\n\tGC_print_static_roots();\n#   endif\n}\n\nvoid GC_register_dynamic_libraries() {\n    /* Currently does nothing. The callbacks are setup by GC_init_dyld() \n    The dyld library takes it from there. */\n}\n\n/* The _dyld_* functions have an internal lock so no _dyld functions\n   can be called while the world is stopped without the risk of a deadlock.\n   Because of this we MUST setup callbacks BEFORE we ever stop the world.\n   This should be called BEFORE any thread in created and WITHOUT the\n   allocation lock held. */\n   \nvoid GC_init_dyld() {\n  static GC_bool initialized = FALSE;\n  char *bind_fully_env = NULL;\n  \n  if(initialized) return;\n  \n#   ifdef DARWIN_DEBUG\n      GC_printf(\"Registering dyld callbacks...\\n\");\n#   endif\n  \n  /* Apple's Documentation:\n     When you call _dyld_register_func_for_add_image, the dynamic linker runtime\n     calls the specified callback (func) once for each of the images that is\n     currently loaded into the program. When a new image is added to the program,\n     your callback is called again with the mach_header for the new image, and the \t\n     virtual memory slide amount of the new image. \n     \n     This WILL properly register already linked libraries and libraries \n     linked in the future\n  */\n  \n    _dyld_register_func_for_add_image(GC_dyld_image_add);\n    _dyld_register_func_for_remove_image(GC_dyld_image_remove);\n\n    /* Set this early to avoid reentrancy issues. */\n    initialized = TRUE;\n\n    bind_fully_env = getenv(\"DYLD_BIND_AT_LAUNCH\");\n    \n    if (bind_fully_env == NULL) {\n#   ifdef DARWIN_DEBUG\n      GC_printf(\"Forcing full bind of GC code...\\n\");\n#   endif\n      \n      if(!_dyld_bind_fully_image_containing_address((unsigned long*)GC_malloc))\n        GC_abort(\"_dyld_bind_fully_image_containing_address failed\");\n    }\n\n}\n\n#define HAVE_REGISTER_MAIN_STATIC_DATA\nGC_bool GC_register_main_static_data()\n{\n  /* Already done through dyld callbacks */\n  return FALSE;\n}\n\n#endif /* DARWIN */\n\n#else /* !DYNAMIC_LOADING */\n\n#ifdef PCR\n\n#   include \"il/PCR_IL.h\"\n#   include \"th/PCR_ThCtl.h\"\n#   include \"mm/PCR_MM.h\"\n\nvoid GC_register_dynamic_libraries()\n{\n    /* Add new static data areas of dynamically loaded modules.\t*/\n        {\n          PCR_IL_LoadedFile * p = PCR_IL_GetLastLoadedFile();\n          PCR_IL_LoadedSegment * q;\n          \n          /* Skip uncommited files */\n          while (p != NIL && !(p -> lf_commitPoint)) {\n              /* The loading of this file has not yet been committed\t*/\n              /* Hence its description could be inconsistent.  \t\t*/\n              /* Furthermore, it hasn't yet been run.  Hence its data\t*/\n              /* segments can't possibly reference heap allocated\t*/\n              /* objects.\t\t\t\t\t\t*/\n              p = p -> lf_prev;\n          }\n          for (; p != NIL; p = p -> lf_prev) {\n            for (q = p -> lf_ls; q != NIL; q = q -> ls_next) {\n              if ((q -> ls_flags & PCR_IL_SegFlags_Traced_MASK)\n                  == PCR_IL_SegFlags_Traced_on) {\n                GC_add_roots_inner\n                \t((char *)(q -> ls_addr), \n                \t (char *)(q -> ls_addr) + q -> ls_bytes,\n                \t TRUE);\n              }\n            }\n          }\n        }\n}\n\n\n#else /* !PCR */\n\nvoid GC_register_dynamic_libraries(){}\n\nint GC_no_dynamic_loading;\n\n#endif /* !PCR */\n\n#endif /* !DYNAMIC_LOADING */\n\n#ifndef HAVE_REGISTER_MAIN_STATIC_DATA\n\n/* Do we need to separately register the main static data segment? */\nGC_bool GC_register_main_static_data()\n{\n  return TRUE;\n}\n\n/* Register a routine to filter dynamic library registration.  */\nvoid\nGC_register_has_static_roots_callback\n  (int (*callback)(const char *, void *, size_t)) {\n  GC_has_static_roots = callback;\n}\n\n#endif /* HAVE_REGISTER_MAIN_STATIC_DATA */\n\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/function/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/local_function/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/local_function/example/profile_legend_phoenix.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/local_function/example/profile_legend_cxx11_lambda.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/local_function/example/profile_legend_global_functor.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/local_function/example/profile_gcc_cxx11_debug.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/local_function/example/profile_gcc_release.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/local_function/example/profile_msvc_release.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/local_function/example/profile_legend_local_function.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/local_function/example/profile_legend_local_function_inline.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/local_function/example/profile_gcc_cxx11_release.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/local_function/example/profile.xls",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/local_function/example/profile_legend_local_functor.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/local_function/example/profile_gcc_debug.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/local_function/example/profile_msvc_debug.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/scope_exit/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/flyweight/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/flyweight/example/Jamfile.v2",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/flyweight/test/Jamfile.v2",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/flyweight/doc/memory_msvc_80.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/flyweight/doc/next.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/flyweight/doc/time_gcc_344.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/flyweight/doc/prev.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/flyweight/doc/memory_gcc_344.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/flyweight/doc/time_msvc_80.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/flyweight/doc/memory.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/flyweight/doc/style.css",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/flyweight/doc/up.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/flyweight/doc/html.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/flyweight/doc/tutorial/flyweight_rep.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/ptr_container/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/ptr_container/doc/ptr_container.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/ptr_container/doc/reversible_ptr_container.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/ptr_container/doc/boost.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/ptr_container/doc/todo.txt",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/system/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/system/doc/reference.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/system/doc/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/smart_ptr/gccspeed.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/smart_ptr/msvcspeed.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/smart_ptr/smarttest.zip",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/smart_ptr/pointer_to_other.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/smart_ptr/pointer_cast.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/concept_check/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/exception/doc/shade-r.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/exception/doc/valid-css.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/exception/doc/shade-l.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/exception/doc/valid-xhtml.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/thread/test/test_9303.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/thread/test/Carbon.r",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/thread/test/test.mcp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/thread/test/sync/futures/make_ready_future_pass.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/thread/doc/condition_variables.qbk",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/io/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/io/doc/quoted_manip.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/algorithm/string/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/single_threaded.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/4_threaded.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/bits_per_byte.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/entropy.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/html4_symbols.qbk",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/images/single_threaded.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/images/Thumbs.db",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/images/4_threaded.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/images/bits_per_byte.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/images/entropy.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/papers/original_spreadsort06_2002.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/graph/osx_float_sort.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/graph/windows_integer_sort.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/graph/windows_string_sort.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/graph/osx_string_sort.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/graph/osx_integer_sort.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/graph/windows_float_sort.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/graph/windows_integer_sort_files/image001.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/graph/windows_integer_sort_files/image002.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/graph/osx_integer_sort_files/image001.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/graph/osx_integer_sort_files/image002.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/graph/windows_string_sort_files/image001.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/graph/osx_string_sort_files/image001.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/graph/windows_float_sort_files/image001.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/graph/windows_float_sort_files/image002.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/graph/osx_float_sort_files/image001.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/graph/osx_float_sort_files/image002.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/ftv2splitbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/nav_g.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/ftv2pnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/ftv2doc.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/splitbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/tab_h.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/tab_s.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/ftv2mlastnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/ftv2folderopen.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/tab_a.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/ftv2plastnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/ftv2vertline.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/ftv2lastnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/folderopen.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/sync_on.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/ftv2blank.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/ftv2link.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/nav_f.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/folderclosed.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/arrowdown.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/tab_b.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/open.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/ftv2folderclosed.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/bdwn.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/arrowright.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/bc_s.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/nav_h.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/doc.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/sync_off.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/ftv2mnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/closed.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/doxygen.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/ftv2node.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/search/close.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/search/search_m.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/search/search_r.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/search/mag_sel.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/doxygen/html/search/search_l.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/s_diff.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/m_limit.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/smax_total_iters.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/lsd.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/iter_combined.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/smean.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/gte_2k.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/introsort.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/worst1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/nincr.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/s_max.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/k_remaining.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/msum.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/srange.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/incr_compare.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/min_n_orig.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/compare_asymptote.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/k1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/gt_smin.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/min_n.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/k_m.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/bin_limit.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/radix_iters.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/string_sort.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/Thumbs.db",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/k_smax_final.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/compare_combined.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/kincr.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/s_max_iters.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/asymptote.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/k_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/k_start.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/sminlbs1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/comp_sub.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/compare_simplified.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/k_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/smin_lbs.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/min1_comparison.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/bins.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/bigm.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/n_gt_smin.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/lt_smin.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/km.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/k_smax.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/x2plus1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/ktop.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/worst.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/fallback.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/smin1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/lsd_offset.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/min_comparison.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/s_min.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/lte_smin.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/sort/doc/equation/mrange.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/uuid/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/uuid/uuid.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/parameter/doc/html/vellipsis.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/atomic/doc/logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multiprecision/doc/debugger6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multiprecision/doc/floating_point_eg3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multiprecision/doc/debugger7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multiprecision/doc/debugger2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multiprecision/doc/floating_point_eg2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multiprecision/doc/debugger4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multiprecision/doc/debugger3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multiprecision/doc/debugger1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multiprecision/doc/debugger5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multiprecision/doc/floating_point_eg1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multiprecision/doc/html4_symbols.qbk",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/contents.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/miscellanea.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/styles.css",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/bibliography.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/syntax.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/terms.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/top.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/data.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/examples.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/title.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/acknowledgements.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/topics.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/topics/evaluated_slots.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/topics/incompatible.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/topics/reentrancy.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/topics/local_iteration.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/topics/file_iteration.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/topics/variadic_macros.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/topics/motivation.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/topics/techniques.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/topics/problems.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/assert_msg.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/if.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/debug.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/expand.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repeat_from_to_3rd.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/min.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/enum_params.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/iteration.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/inc.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/stringize.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repeat_2nd.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/empty.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/variadic.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/enum_shifted_params.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/comma_if.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/enum_shifted.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/iterate.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/max.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/slot.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/dec.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/selection.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repeat_from_to_2nd.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/wstringize.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/control.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/expr_if.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/array.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/punctuation.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/comma.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/library.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/cat.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repeat.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/identity.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repeat_3rd.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/epwd.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/while.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/limits.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repeat_from_to.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/arithmetic.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/logical.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/epwad.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/facilities.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/for.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/preprocessor.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/enum.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/comparison.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/append.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/for_each_i.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/reverse.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/size.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/for_each_product.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/for_each.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/rest_n.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/transform.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/fold_left.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/filter.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/fold_right.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/cat.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/adt.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/at.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/first_n.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/enum.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/list/to_tuple.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/config/variadics.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/config/limits.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/for_each_i.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/remove.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/insert.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/reverse.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/to_array.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/pop_back.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/size.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/for_each_product.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/replace.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/elem.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/pop_front.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/seq.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/for_each.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/rest_n.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/transform.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/fold_left.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/push_back.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/subseq.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/filter.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/fold_right.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/push_front.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/cat.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/to_list.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/first_n.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/enum.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/seq/to_tuple.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/arithmetic/inc.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/arithmetic/mul.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/arithmetic/sub.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/arithmetic/dec.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/arithmetic/add.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/arithmetic/div.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/arithmetic/mod.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/variadic/to_seq.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/variadic/to_array.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/variadic/size.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/variadic/elem.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/variadic/to_list.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/variadic/to_tuple.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/facilities/expand.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/facilities/apply.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/facilities/intercept.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/facilities/empty.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/facilities/overload.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/facilities/identity.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple/remove.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple/to_seq.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple/insert.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple/reverse.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple/to_array.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple/pop_back.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple/size.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple/replace.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple/elem.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple/pop_front.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple/eat.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple/push_back.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple/rem.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple/push_front.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple/to_list.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/tuple/enum.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition/etbp.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition/enum_params.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition/enum_trailing_params.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition/enum_binary_params.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition/esbp.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition/deduce_r.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition/enum_shifted_params.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition/enum_shifted.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition/enum_trailing.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition/deduce_z.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition/repeat.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition/epwd.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition/repeat_from_to.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition/epwad.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition/for.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/repetition/enum.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/selection/min.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/selection/max.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/logical/bitnor.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/logical/nor.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/logical/bitxor.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/logical/bitand.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/logical/not.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/logical/and.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/logical/or.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/logical/compl.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/logical/bitor.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/logical/bool.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/logical/xor.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/control/if.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/control/iif.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/control/deduce_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/control/expr_if.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/control/while.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/control/expr_iif.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/iteration/local.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/iteration/iterate.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/iteration/self.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/comparison/greater.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/comparison/less.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/comparison/greater_equal.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/comparison/not_equal.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/comparison/equal.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/comparison/less_equal.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/array/remove.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/array/to_seq.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/array/insert.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/array/reverse.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/array/pop_back.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/array/size.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/array/replace.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/array/elem.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/array/pop_front.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/array/push_back.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/array/push_front.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/array/data.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/array/to_list.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/array/enum.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/array/to_tuple.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/debug/assert.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/debug/line.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/punctuation/is_begin_parens.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/punctuation/paren_if.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/punctuation/remove_parens.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/punctuation/comma_if.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/punctuation/comma.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/punctuation/paren.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/slot/slot.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/headers/slot/counter.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/data/lists.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/data/tuples.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/data/arrays.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/data/sequences.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/terms/named_external.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/terms/evaluated.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/variadic_to_tuple.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/assert_msg.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/if.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/esbpz.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/enum_shifted_params_z.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_first_n.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_to_list.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/lparen_if.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_to_tuple.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/variadic_to_array.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_fold_right_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/add_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_tail.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/limit_slot_sig.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/enum_params_with_a_default.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_fold_right_2nd_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_transform.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/lparen.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_fold_right_2nd.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/expand.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_enum_r.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/is_begin_parens.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_to_seq.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/limit_slot_count.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_fold_left.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/etbp.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/relative_flags.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_fold_left_d_old.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_filter.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/bitnor.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/apply.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/iteration_depth.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/greater.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/frame_flags.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/intercept.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/less.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_pop_front.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_pop_front.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/iif.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/greater_equal.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_remove.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_to_list.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_push_back.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/variadic_to_seq.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/assign_slot.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_to_list.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/repeat_from_to_3rd.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/greater_equal_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/etbpz.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/limit_iteration_dim.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/assert.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_pop_back.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/limit_iteration.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_push_back.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/min.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/include_self.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/limit_seq.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/enum_params.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_to_seq.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/variadic_to_list.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_transform_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_rem.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_fold_left_2nd.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/iteration.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/enum_trailing_params.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_fold_right.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_size.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_remove.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_push_front.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/inc.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/enum_binary_params.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_fold_right_d_old.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_nil.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/stringize.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/max_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_first.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/repeat_2nd.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_to_array.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/mul.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_rest.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/equal_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/nor.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_reverse.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/empty.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_remove.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/less_equal_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/line.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/bitxor.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_reverse_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/bitand.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_pop_front.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/iteration_start.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_reverse.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/limit_while.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/overload.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/enum_trailing_params_z.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_pop_front_z.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/local_iterate.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/deduce_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/variadics.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/repeat_z_macros.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_rest_n.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_replace.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_cons.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/greater_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/not.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/limit_dim.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_push_front.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_replace_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/esbp.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/is_selfish.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/for_r_macros.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_reverse.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/deduce_r.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_filter_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/remove_parens.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/enum_shifted_params.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/limit_tuple.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_insert.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/and.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_rem_ctor.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/min_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/repeat_1st.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_size.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_transform_s.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_first_n.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_elem.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/sub.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_for_each_r.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/not_equal_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_remove_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/iteration_params_x.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_fold_left.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_insert_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/frame_iteration.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/comma_if.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_pop_front_z.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_for_each_i_r.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_rest_n.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_rest_n_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/enum_shifted.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/iterate.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_for_each_product_r.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_enum.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/mod_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/enum_trailing_z.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_to_array.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/frame_finish.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_at_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/max.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_pop_back.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/or.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/slot.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_to_tuple_r.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/nil.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/dec.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_fold_left_2nd_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/counter.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/enum_trailing.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/frame_start.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_enum.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/less_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_cat.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/limit_mag.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_to_tuple.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/repeat_from_to_2nd.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_cat.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/wstringize.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_size_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_head.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/update_counter.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/indirect_self.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_nil.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/enum_z.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_eat.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/expr_if.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/local_macro.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/repeat_from_to_1st.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_for_each_product.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/iteration_finish.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/repeat_z.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/iteration_limits.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/limit_variadic.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_enum.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/variadic_size.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/for_r.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/relative_iteration.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/relative_finish.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_filter_s.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_is_nil.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/comma.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/enum_shifted_z.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_fold_right.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/deduce_z.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/relative_start.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/enum_params_z.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/repeat_from_to_d_z.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_replace.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_first_n_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_subseq.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_fold_left_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/div_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_elem.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_cat_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/not_equal.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_reverse.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/cat.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/local_limits.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_for_each_product_r.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/value.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_for_each_r.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/while_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/repeat.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_remove_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_append.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_fold_left_s.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_cat_s.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_replace_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/add.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/identity.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_push_back.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/compl.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/filename_x.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/variadic_elem.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_replace.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/repeat_3rd.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/while.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_insert.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_is_cons.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/repeat_from_to.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/div.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_pop_back_z.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/bitor.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/expr_iif.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_reverse_s.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_append_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/equal.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_pop_back.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_filter.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_transform.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_for_each_i.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/enum_binary_params_z.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_data.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/while_d_macros.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/mod.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_fold_right_s.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/for.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_size.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/rparen.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/less_equal.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_pop_back_z.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/enum_params_with_defaults.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/repeat_from_to_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/is_iterating.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_for_each_i.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_elem.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/limit_repeat.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/bool.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/sub_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_push_front.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/array_to_tuple.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_size.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_insert_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_for_each.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/tuple_enum.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/repeat_from_to_z.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_at.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/seq_insert.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/rparen_if.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_for_each_product.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/enum.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/mul_d.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/iteration_flags.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_for_each_i_r.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/limit_for.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/xor.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/config_extended_line_info.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/preprocessor/doc/ref/list_for_each.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/wave/test/testwave/testfiles/t_1_035.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/wave/test/testwave/testfiles/t_1_034.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/wave/doc/token_ids.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/wave/doc/theme/l_arr_disabled.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/wave/doc/theme/bkd.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/wave/doc/theme/uc.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/wave/doc/theme/l_arr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/wave/doc/theme/bullet.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/wave/doc/theme/bkd2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/wave/doc/theme/wave.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/wave/doc/theme/u_arr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/wave/doc/theme/r_arr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/wave/doc/theme/r_arr_disabled.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/serialization/example/demo_output.txt",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/serialization/test/config_test.o",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/serialization/doc/dot.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/serialization/doc/minus.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/serialization/doc/plus.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/coroutine/doc/images/same_fringe.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/coroutine/doc/images/same_fringe.dia",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/coroutine/doc/images/foo_bar_seq.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/coroutine/doc/images/foo_bar.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/coroutine/doc/images/event_model.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/coroutine/doc/images/event_model.dia",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/coroutine/doc/images/foo_bar_seq.dia",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/pool/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/pool/doc/pool.qbk",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/pool/doc/pool.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/pool/doc/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/pool/doc/images/mb2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/pool/doc/images/pc3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/pool/doc/images/pc4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/pool/doc/images/pc2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/pool/doc/images/mb1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/pool/doc/images/mb4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/pool/doc/images/pc1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/pool/doc/images/pc5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/pool/doc/images/mb3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/warning.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/prev.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/toc-blank.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/blank.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/next.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/alert.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/home.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/toc-plus.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/caution.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/up_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/draft.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/next_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/prev_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/tip.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/note.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/toc-minus.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/smiley.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/up.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/important.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/callouts/7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/callouts/12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/callouts/8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/callouts/6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/callouts/5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/callouts/15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/callouts/11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/callouts/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/callouts/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/callouts/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/callouts/9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/callouts/10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/callouts/14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/callouts/13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/predef/doc/html/images/callouts/4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/signals2/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/any/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/format/example/sample_new_features.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/format/benchmark/results.txt",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/test/algorithms/overlay/get_turn_info.xls",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/other/logo/logo_bkg.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/other/logo/DENMARK.TTF",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/other/logo/logo64x64.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/other/logo/logo16x16.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/other/logo/favicon.ico",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/other/logo/logo128x128.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/other/logo/logo400x400.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/svg_simplify_road.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/svg_simplify_country.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/ok.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/nyi.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/build_ovl.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/intersects_poly.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/intersects_mpoly.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/rtree_pt_intersects_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/knn.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/intersects.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/path.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/build_non_ovl.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/rstar.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/intersects_ring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/rtree_seg_knn_pt.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/intersects_linestring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/bulk.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/rtree_seg_knn_seg.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/rtree_seg_knn_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/knn_pt_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/linear.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/within.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/rtree_pt.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/rtree_seg_disjoint_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/rtree_pt_disjoint_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/query_non_ovl.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/query_ovl.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/rtree_seg.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/rtree_seg_intersects_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/rtree_pt_knn_pt.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/knn_box_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/disjoint.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/rtree_pt_knn_seg.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/rtree_pt_knn_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/knn_seg_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/quadratic.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/overlaps.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/index/rtree/intersects_segment.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/io/svg_mapper.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/strategies/buffer_join_round.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/strategies/buffer_end_round.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/strategies/buffer_distance_symmetric.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/strategies/buffer_distance_asymmetric.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/strategies/buffer_end_flat.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/strategies/buffer_join_miter.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/strategies/buffer_point_square.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/strategies/buffer_point_circle.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/is_simple_example.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/buffer_multi_polygon.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/envelope.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/union.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/buffer_linestring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/centroid.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/return_envelope.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/within.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/buffer_multi_point.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/difference_a.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/is_valid_example.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/convex_hull.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/sym_difference.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/is_valid_failure_example.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/buffer_strategies.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/difference_b.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/html/img/algorithms/intersection.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/set_int_right_union_left.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/07_graph_route_example_text.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/robust_triangles.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/within_polygon.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/combine_box_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/linestring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/centroid_ring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/svg_intersection_ring_ring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/svg_simplify_road.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/within_polygon_example.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/svg_union_polygon_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/svg_union_ring_ring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/07_graph_route_example_svg.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/envelope_polygon.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/speed_comparison.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/simplify_linestring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/simplify_example.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/svg_intersection_polygon_ring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/convexhull_polygon_polygon.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/x01_qt_example_output.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/robust_triangle_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/within_ring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/robust_stars.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/x02_numeric_adaptor_example_output.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/svg_convex_hull_cities.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/output_main.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/svg_union_ring_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/svg_intersection_roads.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/svg_simplify_country.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/clip_linestring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/svg_intersection_ring_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/set_a_ac.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/svg_intersection_polygon_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/centroid_polygon.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/set_adapt_turns.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/svg_intersection_countries.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/robust_float.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/clip_segment_segment.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/svg_union_polygon_ring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/clip_polygon.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/combine_box_point.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/union_box_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/svg_convex_hull_country.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/polygon.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_input/images/multi_polygon.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/set_int_right_union_left.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/07_graph_route_example_text.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/within_polygon.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/tab_l.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/combine_box_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/centroid_ring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/svg_intersection_ring_ring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/svg_simplify_road.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/svg_union_polygon_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/svg_union_ring_ring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/07_graph_route_example_svg.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/envelope_polygon.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/simplify_linestring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/svg_intersection_polygon_ring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/x01_qt_example_output.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/within_ring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/x02_numeric_adaptor_example_output.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/svg_convex_hull_cities.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/output_main.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/svg_union_ring_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/svg_intersection_roads.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/svg_simplify_country.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/clip_linestring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/svg_intersection_ring_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/set_a_ac.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/tab_b.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/svg_intersection_polygon_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/centroid_polygon.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/set_adapt_turns.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/svg_intersection_countries.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/svg_union_polygon_ring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/clip_polygon.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/combine_box_point.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/tab_r.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/svg_convex_hull_country.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/images/ggl-logo-big.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/images/draft.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/images/proposed_boost.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/geometry/doc/doxy/doxygen_output/html/images/accepted_by_boost.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/icl/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/icl/doc/boostcon09/intro_to_itl_3_1_0.odp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/icl/doc/boostcon09/intro_to_itl_3_0_0_bc09.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/icl/doc/boostcon09/intro_to_itl.odp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/icl/doc/boostcon09/intro_to_itl_3_1_0.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/icl/doc/boostcon09/intro_to_itl.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/icl/doc/boostcon09/intro_to_itl_3_0_0_bc09.odp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/optional/doc/images/opt_align4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/optional/doc/images/opt_align2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/optional/doc/images/opt_align3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/optional/doc/images/opt_align1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/optional/doc/html/images/opt_align4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/optional/doc/html/images/opt_align2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/optional/doc/html/images/opt_align3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/optional/doc/html/images/opt_align1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/optional/doc/html/images/space.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/optional/doc/html/images/callouts/R.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/adjacency_iterator.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/isomorphism-impl.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/bibliography.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/planar_canonical_ordering.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/sloan_ordering.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/is_kuratowski_subgraph.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/profile.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/tc-out.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/circle_layout.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/iscope99.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/cochet-terrasson98numerical.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/quick_tour.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/dasdan-dac99.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/layout_tolerance.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/sloan_start_end_vertices.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/bgl-cover.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/AddEdgeVisitor.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/tc.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/inv_adjacency_iterator.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/wavefront.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/maximum_matching.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/PlanarEmbedding.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/stoer_wagner_imgs/digraph1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/stoer_wagner_imgs/stoer_wagner-example.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/stoer_wagner_imgs/stoer_wagner-example-c1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/stoer_wagner_imgs/digraph1-min-cut.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/stoer_wagner_imgs/f79.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/stoer_wagner_imgs/8b7.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/stoer_wagner_imgs/stoer_wagner.cpp.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/stoer_wagner_imgs/6e4.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/stoer_wagner_imgs/stoer_wagner-example-min-cut.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/dfs_visitor.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/ga-square.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/warning.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/bk_max_flow.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/undir-adj-matrix.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/sequential_vertex_coloring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/straight_line_drawing.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/adj_matrix.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/visitor.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/disjoint_set_family.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/forward_or_cross_edges.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/maximum-match.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/back_edges.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/search_states.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/dominator-tree2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/ga-heart.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/stl_iter.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/biconnected.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/planar_plane_straight_line.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/file_dep.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/maximal-match.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/adj_list.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/rel_betweenness_centrality.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/kolmogorov_max_flow.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/subgraph-tree.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/max-flow.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/sigma_stv.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/graph_search.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/adj-matrix-graph3.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/grid_graph_indexed.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/ga-circle.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/undigraph.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/adj-list2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/undir-adj-matrix2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/python_ico.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/undir-adj-matrix-graph3.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/adj-list.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/digraph.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/bfs_family.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/edge_list.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/python.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/undir-adj-list.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/central_point_dominance.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/v_star.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/dfs_example.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/concepts.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/very_complex_graph.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/face_traversal_example.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/dfs_family.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/embedding_illustration.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/wheel_graph.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/adj-matrix-graph.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/quick_start.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/face_illustration.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/grid_graph_unwrapped.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/adj-matrix.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/grid_graph_wrapped.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/undir-adj-matrix-graph.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/subgraph.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/dfs.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/mcr.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/undir-adj-matrix-graph2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/canonical_ordering.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/dominator-tree1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/tree_edges.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/bfs_example.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/adj-matrix-graph2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/betweenness_centrality.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/analogy.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/bfs_visitor.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/cr.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/knights_tour.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/sigma_st.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph/doc/figs/k_5_and_k_3_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpi/doc/netpipe.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/assert/current_function.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/assert/assert.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/assert/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/assign/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/assign/doc/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/change_log.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/references.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/preface.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/theme/l_arr_disabled.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/theme/smiley.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/theme/note.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/theme/bulb.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/theme/bkd.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/theme/spirit.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/theme/l_arr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/theme/bullet.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/theme/arrow.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/theme/bkd2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/theme/u_arr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/theme/lens.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/theme/r_arr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/theme/r_arr_disabled.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/phoenix/doc/theme/alert.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/functional.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/dynamic_parsers.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/primitives.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/scanner1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/l_arr_disabled.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/intro2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/note.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/subrule1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/bulb.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/intro6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/bkd.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/spirit.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/l_arr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/closure1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/trees4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/intro7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/bullet.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/intro3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/lambda.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/organization1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/intro1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/arrow.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/trees3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/bkd2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/trees1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/u_arr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/lens.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/intro4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/intro5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/error_handling.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/r_arr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/r_arr_disabled.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/alert.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/classic/doc/theme/trees2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/test/qi/no_case.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/test/qi/char_class.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/test/qi/encoding.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/test/qi/rule4.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/test/karma/regression_real_0.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/test/karma/pattern4.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/test/karma/char_class.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/test/karma/case_handling2.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/test/karma/encoding.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/test/karma/case_handling3.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/test/x3/no_case.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/test/x3/char_class.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/alert.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/caution.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/tip.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/note.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/important.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/callouts/7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/callouts/12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/callouts/8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/callouts/6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/callouts/5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/callouts/15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/callouts/11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/callouts/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/callouts/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/callouts/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/callouts/9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/callouts/10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/callouts/14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/callouts/13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/repository/doc/html/images/callouts/4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/karma_performance.xlsx",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/alternative.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/int_performance.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/spiritkarmaflow.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/alert.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/kleene.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/plus.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/format_performance.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/sequence.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/not_predicate.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/start_stop.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/caution.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/terminal.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/flowofcontrol.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/predicate.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/tokenstructure.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/spiritstructure.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/non-terminal.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/tip.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/note.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/pascal_string.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/optional.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/double_performance.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/and_predicate.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/lexerflow.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/important.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/callouts/7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/callouts/12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/callouts/8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/callouts/6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/callouts/5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/callouts/15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/callouts/11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/callouts/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/callouts/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/callouts/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/callouts/9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/callouts/10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/callouts/14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/callouts/13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/html/images/callouts/4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/refcard/spirit-reference.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/cppnow_2013/Inside Spirit X3.pptx",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/alternative.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/alert.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/kleene.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/plus.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/sequence.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/not_predicate.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/start_stop.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/caution.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/terminal.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/predicate.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/non-terminal.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/tip.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/note.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/pascal_string.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/optional.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/and_predicate.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/spirit/doc/x3/html/images/important.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bind/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/ratio/doc/ratio.qbk",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/coroutine2/doc/images/same_fringe.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/coroutine2/doc/images/same_fringe.dia",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/coroutine2/doc/images/foo_bar_seq.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/coroutine2/doc/images/foo_bar.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/coroutine2/doc/images/event_model.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/coroutine2/doc/images/event_model.dia",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/coroutine2/doc/images/foo_bar_seq.dia",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/build/python_v1.zip",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/example/project.zip",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/pyste/doc/theme/l_arr_disabled.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/pyste/doc/theme/smiley.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/pyste/doc/theme/note.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/pyste/doc/theme/bulb.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/pyste/doc/theme/bkd.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/pyste/doc/theme/l_arr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/pyste/doc/theme/bullet.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/pyste/doc/theme/arrow.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/pyste/doc/theme/bkd2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/pyste/doc/theme/u_arr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/pyste/doc/theme/r_arr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/pyste/doc/theme/r_arr_disabled.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/pyste/doc/theme/alert.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/test/crossmod_opaque.py",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/test/crossmod_opaque_a.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/test/opaque.py",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/test/crossmod_opaque_b.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/doc/v2/stl_iterator.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/doc/v2/acknowledgments.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/doc/tutorial/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/doc/tutorial/doc/html/images/prev.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/doc/tutorial/doc/html/images/next.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/doc/tutorial/doc/html/images/alert.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/doc/tutorial/doc/html/images/jam.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/doc/tutorial/doc/html/images/home.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/doc/tutorial/doc/html/images/tip.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/doc/tutorial/doc/html/images/note.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/doc/tutorial/doc/html/images/smiley.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/doc/tutorial/doc/html/images/up.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/doc/tutorial/doc/html/images/python.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/doc/PyConDC_2003/bpl.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/doc/PyConDC_2003/python_cpp_mix.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/python/doc/PyConDC_2003/python_cpp_mix.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/asio/doc/overview/sync_op.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/asio/doc/overview/async_op1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/asio/doc/overview/proactor.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/asio/doc/overview/async_op2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/tuple/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/container/doc/html/images/stable_vector.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/example/Performance/Performance.xls",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/PerformanceCustom1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/OutermostUnstableState.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/PerformanceCustom3.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/PerformanceNormal4.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/Camera.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/Camera2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/ExceptionsAndOrthStates.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/PerformanceNative1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/PerformanceCustom2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/A.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/ThrowingEntryAction.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/PerformanceNormal3.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/PerformanceNormal1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/StopWatch.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/tutorial.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/PerformanceNormal2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/reference.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/ThrowingTransitionAction.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/PerformanceCustom4.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/JoinAndFork.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/TransAcrossOrthRegions.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/DeepHistoryLimitation1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/OrthogonalStates.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/PerformanceNative3.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/DeepHistoryLimitation2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/CameraWithHistory1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/SimpleEventDispatch.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/PerformanceNative4.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/PerformanceNative2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/rationale.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/CameraWithHistory2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/EventDispatch.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/ThrowingInStateReaction.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/LCA.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/statechart/doc/HelloWorld.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/throw_exception/doc/valid-css.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/throw_exception/doc/valid-xhtml.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/date_time/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/date_time/test/gregorian/testdate_input_facet.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/date_time/doc/time_duration_inherit.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/date_time/doc/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/error_no_regions.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/init_state.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/regions.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/transition.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/Orthogonal-deferred.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/terminate.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/AnnexA.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/entry_point.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/entrytutorial.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/CompositeTutorial.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/exit.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/history.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/state.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/sm.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/fork.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/completion.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/SimpleTutorial.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/FlagsTutorial.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/Defer.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/Anonymous.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/conflict2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/conflict1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/HistoryTutorial.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/ParsingDigits.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/images/explicit.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/PDF/msm.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/HTML/footer.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/msm/doc/HTML/footer.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/dynamic_bitset/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/lambda/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/lambda/doc/lambda.xml",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/lambda/doc/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/lambda/doc/detail/lambda_doc.xml",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/output_more.txt",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb4.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb20.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/Im_exp_on_C.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb16.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb28.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb11.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb5.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/hyperbolic.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb9.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb27.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb14.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb26.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb18.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb10.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb15.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb25.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb22.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb29.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/sinc_pi_and_sinhc_pi_on_R.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb13.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb23.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb7.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb6.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb1.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb19.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb12.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb8.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb3.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb17.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/trigonometric.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/exp_on_R.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb21.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/Re_exp_on_C.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb2.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/special_functions/graphics/special_functions_blurb24.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/dot_net_example/Setupdistex/Release/setup.exe",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/dot_net_example/Setupdistex/Release/Setupdistex.msi",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/dot_net_example/distribution_explorer/distribution_explorer.sln.lnk",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/dot_net_example/distribution_explorer/distribution_explorer.suo",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/dot_net_example/distribution_explorer/readme.txt",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/dot_net_example/distribution_explorer/boost.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/dot_net_example/distribution_explorer/IconToolkit.ico",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/dot_net_example/distribution_explorer/ToolkitLogo.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/dot_net_example/boost_math/boost_math.sln.lnk",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/dot_net_example/boost_math/app.ico",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb4.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb13.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb18.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb7.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb12.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb14.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb3.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb17.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb20.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb19.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb16.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb9.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb2.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb1.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb11.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb21.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb5.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb6.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb15.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb8.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/octonion/graphics/octonion_blurb10.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/TQE_EA.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/TQE.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb6.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb10.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb5.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb15.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb22.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb18.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb7.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb12.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb4.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb8.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb20.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb2.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb3.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb13.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb16.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb9.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb17.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb23.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb1.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb19.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb11.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb14.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/quaternion/graphics/quaternion_blurb21.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/plot_owens_3d_xyp.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/plot_owens_t.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/html4_symbols.qbk",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/images/acos.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/images/asinh.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/images/hypot.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/images/hypot2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/images/acosh.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/images/atan.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/images/asin.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/images/atanh.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/acosh3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel_derivatives3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/polygamma8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/beta1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/legendre_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/skew_normal_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hyperexponential_ccdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/gamm5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/skew_normal_skewness.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hypergeometric1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/cauchy_ref1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/acosh1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_t_ref5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint18.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hankel2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/beta5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel_derivatives1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/chi_squ_tut1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/special_functions_blurb1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/zeta4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/legendre_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/students_t_dist.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hyperexponential_kurtosis.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/beta4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma17.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel_derivatives4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/digamma4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hyperexponential_variance.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/skew_normal_variance.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/gamm3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta_inv5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/special_functions_blurb18.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/expint_n_5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_chi_squ_ref5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/normal_ref1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint20.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hankel4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_f_ref1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/trigamma3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/legendre_0.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/erf2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_chi_squ_ref3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/zeta6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/skew_normal_kurt_ex.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma2f.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/spherical_0.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/special_functions_blurb20.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/asinh4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/beta6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bernoulli_numbers.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/polygamma2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/derivative2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/roots4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/gamma_ratio0.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/expint_i_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/digamma3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma18.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta_inv3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/jacobi4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/asinh1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_beta_ref4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/airy_aip.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/gamma6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/dist_tutorial2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/derivative1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/laguerre_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hypergeometric6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/fraction1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/chi_squ_tut3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/special_functions_blurb17.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/gamma_dist_ref2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/binomial_ref2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/zeta9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/laplace_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/laguerre_0.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/expint_i_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel_derivatives5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hermite_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/legendre_5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/digamma1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/zeta1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/jacobi3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/atanh3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hypot.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/poisson_ref1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel_y2_small_z.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta_inv4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hyperexponential_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lanczos4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hypot2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/asinh3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/legendre_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/fraction2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/legendre_1b.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_beta_ref2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/owens_t.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/beta8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint25.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bernoulli_numbers2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/roots1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/trigamma5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/fraction3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint24.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/acosh4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/zeta8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/laguerre_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma1f.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_t_ref3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/airy.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/beta3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint22.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint26.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/jacobi1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/polygamma4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hypergeometric3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/normal_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma11b.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_chi_squ_ref4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lanczos7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/normal01_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/error1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel16.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_t_ref1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/digamma5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel_yv_small_z.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel_y1_small_z.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel_derivatives2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/students_t_ref1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hankel3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/zeta3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_t_ref2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lanczos3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta_inv1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/chi_squ_tut2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/spherical_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/polygamma5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lgamm3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/trigamma1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hypergeometric5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/special_functions_blurb22.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lanczos5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint19.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/beta7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/airy_bip.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/special_functions_blurb15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/skew_normal_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/sbessel4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta_inv7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/normal01_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel16.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/sbessel2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/atanh2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/trigamma2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma16.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/expint_i_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/polygamma6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_chi_squ_ref7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/tangent_number_def2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint27.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/dist_tutorial1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/acosh2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint16.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/airy_ai.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint21.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/dist_tutorial4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/special_functions_blurb6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hazard.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/expint_n_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hyperexponential_skewness.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/expint_n_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hypergeometric4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/exponential_dist_ref1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/gamma_ratio1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma19.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/roots3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/special_functions_blurb7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/beta2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/skew_normal_mean.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/polygamma7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint23.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/skew_normal_pdf0.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/zeta5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/laguerre_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_chi_squ_ref1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta_inv2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/chf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/tangent_number_def.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/dist_tutorial3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/airy_bi.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/zeta2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/asinh2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hankel1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/erf1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lanczos0a.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/polygamma3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lanczos6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lgamm4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/binomial_ref1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/atanh1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/trigamma4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hyperexponential_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint17.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/jacobi_zeta.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/chi_squ_ref1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/special_functions_blurb5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lgamm2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hypergeometric2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hermite_0.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/spherical_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/jacobi2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/beta_dist_kurtosis.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/gamm4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/neg_binomial_ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/sbessel1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/gamm2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_chi_squ_ref2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lgamm5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/spherical_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/polygamma9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/fisher_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lognormal_ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/sbessel3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/sbessel5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/tangent_numbers.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/error2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/roots2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/polygamma1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_f_ref2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lanczos0.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel_y0_small_z.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/expint_i_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lanczos1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/heuman_lambda.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lanczos0b.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta_inv8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/log1pseries.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/igamma1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_beta_ref1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lgamm1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/gamm1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel17.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint_d.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/expint_n_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hankel5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_beta_ref3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/hyperexponential_mean.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/digamma2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_chi_squ_ref6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ibeta_inv6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/mbessel7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lgamm6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/gamma_dist_ref1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/zeta7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/expint_n_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/fraction4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/legendre_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/nc_t_ref4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/bessel_yn_small_z.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/ellint15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/equations/lanczos2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/survival.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/sinc_pi.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/skew_normal_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/hyperexponential_pdf_samemean.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/nc_beta_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/hyperexponential_pdf_samerate.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/arcsine_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/remez-5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/triangular_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/owens_integration_area.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/negative_binomial_pdf_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/bernoulli_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/rayleigh_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/rayleigh_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/jacobi_ds.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/sph_bessel.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/expint2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/students_t_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/bernoulli_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/jacobi_sc.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/geometric_cdf_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/geometric_cdf_discrete.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/cyl_neumann.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/nc_t_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/plot_owens_3d_xyp.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/cyl_bessel_k.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/chi_squared_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/erfc.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/hyperbolic.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/beta_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/gamma_q.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/polygamma2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/sqrt1pm1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/inverse_gaussian_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/extreme_value_pdf2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/jacobi_dc.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/inverse_gamma_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/asinh.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/beta.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/log1p.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/cbrt.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/gamma1_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/erfc_inv.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/airy_aip.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/normal_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/tgamma.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/inverse_chi_squared_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/arcsine_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/erf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/jacobi_cs.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/laplace_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/cyl_bessel_j.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/legendre_p.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/zeta1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/inverse_chi_squared_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/logistic_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/digamma.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/hermite.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/extreme_value_pdf1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/acosh.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/arcsine01_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/triangular_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/jacobi_cn.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/jacobi_sd.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/plot_owens_t.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/legendre_q.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/weibull_pdf2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/normal_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/lognormal_pdf1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/sinc_pi_and_sinhc_pi_on_r.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/normal01_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/hypergeometric_pdf_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/binomial_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/ibeta.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/binomial_pdf_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/bessel_j_zeros.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/exp_on_r.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/uniform_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/gamma_p.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/im_exp_on_c.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/uniform_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/airy_bip.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/skew_normal_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/sinhc_pi.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/inverse_gamma_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/pareto_pdf1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/ellint_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/erf_inv.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/normal01_cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/hypergeometric_pdf_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/jacobi_nd.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/lognormal_pdf2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/gamma2_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/lgamma.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/remez-3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/weibull_pdf1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/tgamma_delta_ratio.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/airy_ai.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/fisher_f_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/geometric_pdf_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/airy_bi.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/zeta2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/remez-2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/expm1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/polygamma3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/nc_f_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/hyperexponential_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/survival_inv.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/exponential_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/sph_neumann.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/jacobi_dn.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/cauchy_pdf1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/inverse_gaussian_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/cyl_bessel_i.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/geometric_pdf_discrete.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/remez-4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/prior_posterior_plot.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/pareto_pdf2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/binomial_pdf_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/trigamma.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/quantile.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/ellint_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/jacobi_nc.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/cauchy_pdf2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/expint_i.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/arcsine01_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/trigonometric.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/cdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/ellint_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/ellint_carlson.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/poisson_pdf_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/atanh.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/jacobi_cd.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/nccs_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/binomial_pdf_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/airy_zeros.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/powm1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/laguerre.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/neumann_y_zeros.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/negative_binomial_pdf_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/nc_t_pdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/jacobi_sn.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/binomial_quantile_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/math/doc/graphs/jacobi_ns.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/access.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/reverse_iterator.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/oldeqnew.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/counting_iterator.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/iterator_facade.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/filter_iterator.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/facade-and-adaptor.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/function_output_iterator.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/new-iter-concepts.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/iterator_traits.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/iterator_facade_tutorial.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/pointee.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/traversal.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/iterator_adaptor.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/permutation_iterator.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/iterator_archetypes.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/iterator_concepts.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/transform_iterator.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/zip_iterator.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/access2old.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iterator/doc/indirect_iterator.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/endian/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/endian/doc/styles.css",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/endian/doc/fp_concerns.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/polygon/polygon_009.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/polygon/polygon_008.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/polygon/polygon_006.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/polygon/polygon_012.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/polygon/polygon_001.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/polygon/polygon_011.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/polygon/polygon_004.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/polygon/polygon_007.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/polygon/polygon_002.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/polygon/polygon_005.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/polygon/polygon_010.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/polygon/polygon_003.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_028.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_022.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_010.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_020.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_023.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_003.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_009.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_018.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_015.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_012.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_004.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_027.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_025.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_008.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_014.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_013.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_005.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_002.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_001.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_026.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_011.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_006.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_021.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_007.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_017.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_019.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_024.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/random/random_016.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_006.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_061.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_039.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_045.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_019.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_030.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_020.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_043.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_071.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_004.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_058.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_035.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_054.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_011.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_040.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_005.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_066.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_056.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_032.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_012.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_017.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_055.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_033.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_060.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_013.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_069.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_059.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_009.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_002.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_049.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_028.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_024.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_046.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_022.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_026.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_047.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_051.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_014.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_021.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_052.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_057.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_050.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_001.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_008.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_007.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_031.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_068.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_042.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_027.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_070.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_023.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_041.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_053.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_029.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_037.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_025.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_034.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_064.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_063.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_015.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_018.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_072.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_065.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_003.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_036.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_010.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_016.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_062.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_044.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_067.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_048.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/example/output_data/primary/primary_038.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/benchmark/benchmark_results/plots/benchmark_points.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/benchmark/benchmark_results/plots/benchmark_segments.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_polygon_45_set_concept.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/index.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_polygon_with_holes_concept.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/analysis.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_connectivity_extraction.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_polygon_90_set_concept.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/voronoi_advanced_tutorial.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_point_usage.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_coordinate_concept.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_polygon_usage.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_connectivity_extraction_90.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_polygon_45_with_holes_concept.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_polygon_45_concept.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_property_merge_90.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_polygon_concept.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_connectivity_extraction_usage.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_custom_polygon.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_interval_concept.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/voronoi_basic_tutorial.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_custom_polygon_set.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_polygon_set_usage.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/voronoi_benchmark.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_property_merge.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_polygon_set_concept.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/voronoi_builder.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_property_merge_usage.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_polygon_90_with_holes_concept.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_minkowski_tutorial.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_segment_concept.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/GTL_boostcon2009.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_connectivity_extraction_45.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/voronoi_diagram.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_polygon_90_concept.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/voronoi_main.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_custom_point.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_point_concept.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/GTL_boostcon_draft03.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_property_merge_45.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_tutorial.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_isotropy.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_design_overview.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/gtl_rectangle_concept.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/refinements.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/NAND.PNG",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/voronoi3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/benchmark_segments_memory.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/benchmark_segments_1000000.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/benchmark_segments_1000.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/convolution1.PNG",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/intlogo.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/benchmark_segments_10000.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/benchmark_points_10000.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/hand.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/perf_graph.PNG",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/voronoi.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/perimeter_convolve.PNG",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/benchmark_points_10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/concept_table.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/benchmark_points_100.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/benchmark_segments_all.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/benchmark_points_memory.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/benchmark_segments_100.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/boost.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/benchmark_points_100000.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/vlsi.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/benchmark_points_1000.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/benchmark_points_1000000.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/convolution2.PNG",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/voronoi2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/benchmark_segments_10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/nands.PNG",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/voronoi4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/voronoi1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/foo.PNG",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/benchmark_segments_100000.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/benchmark_points_all.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/rover.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/polygon/doc/images/convolve_edges.PNG",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/regex/doc/gcc-performance.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/regex/doc/vc71-performance.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/unordered/doc/diagrams/buckets.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/filesystem/doc/design.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/filesystem/doc/styles.css",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/filesystem/doc/portability_guide.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/test/example/cla/wide_string.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/test/doc/html/images/boost.test.logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/test/doc/html/images/class-hier.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/test/doc/html/images/run_args.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/test/doc/html/images/post_build_event.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/test/doc/html/images/post_build_out.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/test/doc/html/images/level.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/simple_ast.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/prev.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/next.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/alert.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/home.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/funnel_in.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/organization_alt.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/lambda_cpp.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/add2_call.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/organization.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/tip.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/note.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/banner.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/funnel_out.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/add2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/smiley.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/up.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/fbox.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/important.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/phoenix/doc/html/images/adder.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/acknowledgments.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/theme/wedge.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/theme/boost_small.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/theme/boost.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/graphics/modes.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/graphics/key_output_seq.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/graphics/key_input_seq.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/graphics/key_read_write_head.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/graphics/bidirectional_chain.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/graphics/important_modes.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/graphics/key_write_head.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/graphics/key_read_head.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/graphics/key_bidirectional_seq.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/graphics/input_chain.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/graphics/key_important.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/graphics/output_chain.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/graphics/seekable_chain.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/iostreams/doc/classes/code_converter.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/signals/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/signals/doc/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/example/test.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/boost.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/adobe_logo.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0036.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0010.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0019.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0031.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0007.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0024.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/planar.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0035.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0005.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0013.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0001.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0012.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0037.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/interleaved.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0032.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0006.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0026.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0009.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0029.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0017.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/monkey_steps.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0033.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0034.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0025.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0008.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0023.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0028.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0030.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/mandel.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0004.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0022.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0003.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0038.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0015.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0002.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0018.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0021.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0014.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/step_iterator.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0011.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0016.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/doxygen.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0020.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/html/g_i_l_0027.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/doxygen/images/planar.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/doxygen/images/interleaved.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/doxygen/images/monkey_steps.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/doxygen/images/mandel.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/gil/doc/doxygen/images/step_iterator.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/program_options/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/program_options/test/ucs2.txt",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/program_options/doc/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/timer/doc/cpu_timers.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/timer/doc/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/timer/doc/original_timer.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/fusion/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/fusion/doc/html/images/fusion_org.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/images/form_5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/images/form_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/images/form_15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/images/form_9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/images/form_10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/images/form_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/images/form_7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/images/form_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/images/form_6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/images/form_12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/images/form_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/images/form_0.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/images/form_11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/images/form_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/images/form_13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/images/form_14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/units/example/autoprefixes.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_array/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_array/doc/reference.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_array/doc/iterator_categories.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_array/doc/matrix.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/property_tree/doc/images/ptree2code.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/conversion/doc/html/images/space.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/conversion/doc/html/images/callouts/R.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/interval/test/bugs.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/interval/examples/io.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/interval/examples/filter.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/interval/doc/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/phase_lattice_2d_1000.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/solar_system.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/phase_lattice_2d_0100.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/phase_lattice_2d_0000.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/logo.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/warning.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/prev.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/toc-blank.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/blank.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/next.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/alert.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/home.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/toc-plus.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/caution.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/up_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/draft.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/next_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/prev_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/tip.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/note.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/toc-minus.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/smiley.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/up.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/important.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/callouts/7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/callouts/12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/callouts/8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/callouts/6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/callouts/5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/callouts/15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/callouts/11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/callouts/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/callouts/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/callouts/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/callouts/9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/callouts/10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/callouts/14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/callouts/13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/numeric/odeint/doc/html/images/callouts/4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/array/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/dist-adjlist.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/architecture.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/dijkstra_seq_graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/vertex_coloring.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/dijkstra_dist3_graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/distributed-graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/dist-pmap.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeDense_columns_5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeDense_cluster_Odin_columns_11_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeSparse_columns_7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeSparse_columns_7_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_cluster_Odin_generator_ER_SF_SW_dataset_TimeSparse_columns_5_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_SF_dataset_TimeSparse_columns_5_6_7_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeDense_columns_7_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_dataset_TimeDense_columns_5_6_7_8_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_SF_dataset_TimeDense_columns_5_6_7_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_cluster_Odin_generator_ER_SF_SW_dataset_TimeDense_columns_5_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeDense_columns_6_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeSparse_columns_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeSparse_cluster_Odin_columns_11_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeSparse_columns_5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/pbgl-logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_dataset_TimeSparse_columns_5_6_7_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_SW_dataset_TimeSparse_columns_5_6_7_8_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeSparse_cluster_Odin_columns_11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeSparse_columns_6_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_cluster_Odin_generator_ER_SF_SW_dataset_TimeSparse_columns_4_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_cluster_Odin_generator_ER_SF_SW_dataset_TimeDense_columns_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeSparse_columns_5_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_dataset_TimeSparse_columns_5_6_7_8_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_SW_dataset_TimeSparse_columns_5_6_7_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeDense_columns_9_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeSparse_columns_6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeDense_columns_7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeDense_columns_5_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_cluster_Odin_generator_ER_SF_SW_dataset_TimeSparse_columns_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_SF_dataset_TimeSparse_columns_5_6_7_8_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeSparse_columns_9_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_cluster_Odin_generator_ER_SF_SW_dataset_TimeSparse_columns_5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeDense_columns_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeSparse_columns_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeDense_cluster_Odin_columns_11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_dataset_TimeDense_columns_5_6_7_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeSparse_columns_8_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_SF_dataset_TimeDense_columns_5_6_7_8_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_SW_dataset_TimeDense_columns_5_6_7_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeDense_columns_4_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeSparse_columns_9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_SW_dataset_TimeDense_columns_5_6_7_8_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_cluster_Odin_generator_ER_SF_SW_dataset_TimeDense_columns_5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeDense_columns_6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeDense_columns_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeDense_columns_9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_cluster_Odin_generator_ER_SF_SW_dataset_TimeDense_columns_4_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeDense_columns_8_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/graph_parallel/doc/html/chart_php_generator_ER_SF_SW_dataset_TimeSparse_columns_4_speedup_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/space.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/people/mafalda.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/people/hector.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/people/matias.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/people/joaquin.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/extern/googlesoc.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/callouts/7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/callouts/12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/callouts/8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/callouts/6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/callouts/5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/callouts/15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/callouts/11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/callouts/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/callouts/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/callouts/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/callouts/9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/callouts/10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/callouts/14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/callouts/13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/callouts/4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/bimap/miBimapFramework.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/bimap/extended.mapping.framework.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/bimap/more.bimap.structures.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/bimap/standard.mapping.framework.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/bimap/tagged.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/bimap/simple.bimap.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/bimap/relation.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/bimap/relation.and.pair.with.info.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/bimap/bimap.structures.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/bimap/collection.type.of.relation.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/bimap/relation.and.pair.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/bimap/boost.bimap.logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/bimap/doc/html/images/bimap/boost.bimap.header.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/disjoint_sets/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/functional/overloaded_function/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/functional/forward/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/functional/factory/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/refmanual.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/paper/mpl_paper.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/divides.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/copy_if.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/NumericMetafunction.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/deque.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/iterator_category.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Algorithms-Runtime.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/pop_back.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/key_type.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/minus.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Metafunctions-Type.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/shift_right.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/greater_equal.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/protect.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Data.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/CFG_NO_HAS_XXX.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Metafunctions-Arithmetic.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/insert_range.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Categorized.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/ASSERT.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/reverse_unique.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/negate.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/replace.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/numeric_cast.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/iter_fold.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/TagDispatchedMetafunction.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/empty.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/deref.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Metafunctions-Invocation.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/HAS_XXX_TRAIT_NAMED_DEF.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/ASSERT_RELATION.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Metafunctions-Comparisons.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/empty_base.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/begin.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/single_view.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Data-Numeric.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/insert.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/back.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/order.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/sort.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/eval_if.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/set_c.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/vector_c.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/bind.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/reverse_partition.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/reverse_copy_if.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/integral_c.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Sequences-Classes.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/reverse_remove.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/apply_wrap.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/front.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/value_type.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/reverse_remove_if.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Data-Miscellaneous.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/front_inserter.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/ASSERT_NOT.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/contains.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/not_.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/reverse_replace_if.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/find.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/CFG_NO_PREPROCESSED.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/push_front.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/ASSERT_MSG.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Sequences-Intrinsic.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Acknowledgements.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/HAS_XXX_TRAIT_DEF.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Algorithms.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/list.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/range_c.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/bitxor_.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/bitor_.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/has_key.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/size.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Metafunctions.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Inserter.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/equal.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/size_t.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/distance.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/TrivialMetafunction.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Metafunctions-Logical.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/list_c.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/AssociativeSequence.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Iterators.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/inherit.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Placeholders.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/count.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/transform_view.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/IntegralSequenceWrapper.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/count_if.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/inserter_.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/reverse_transform.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/pop_front.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/is_sequence.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Algorithms-Transformation.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/long_.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/joint_view.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/iter_fold_if.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/fold.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/sequence_tag.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Iterators-Iterator.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/unpack_args.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/empty_sequence.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/LIMIT_SET_SIZE.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/c_str.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Metafunctions-Miscellaneous.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/vector.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/next.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/upper_bound.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/RandomAccessIterator.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/LIMIT_UNROLLING.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Categorized-Concepts.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/end.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/reverse_replace.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/BidirectionalSequence.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/equal_to.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/reverse_fold.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/FrontExtensibleSequence.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/prior.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/LIMIT_STRING_SIZE.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Metafunctions-Bitwise.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/inherit_linearly.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/reverse_iter_fold.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/advance.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/IntegralConstant.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/ExtensibleAssociativeSeq.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Categorized-Components.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Algorithms-Iteration.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/BackExtensibleSequence.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/plus.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/if_.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Macros-Introspection.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/map.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/set.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/copy.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/not_equal_to.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/unique.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Iterators-Concepts.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/less.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/if_c.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/pair.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Algorithms-Concepts.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/greater.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/multiplies.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/LIMIT_LIST_SIZE.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/find_if.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/reverse_stable_partition.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Metafunctions-Trivial.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/erase_key.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/stable_partition.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/reverse.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/arg.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Sequences-Concepts.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/identity.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Macros-Configuration.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Metafunctions-Concepts.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/for_each.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/filter_view.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/char_.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Metafunctions-Conditional.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/lambda.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/eval_if_c.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/max_element.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/refmanual.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/ForwardIterator.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Metafunctions-Trivial-Summary.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/reverse_copy.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/min_element.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Sequences-Views.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Metafunctions-Composition.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/void_.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/replace_if.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/clear.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/LIMIT_MAP_SIZE.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/PlaceholderExpression.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/RandomAccessSequence.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/shift_left.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/max.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/ReversibleAlgorithm.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/at.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/bool_.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/back_inserter.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/VariadicSequence.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/remove.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/string.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/always.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Metafunction.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/min.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/apply.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/bitand_.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Terminology.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Macros-Asserts.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/MetafunctionClass.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Algorithms-Inserters.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/partition.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/remove_if.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/ForwardSequence.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Algorithms-Querying.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/iterator_range.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Sequences.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/erase.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/at_c.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/lower_bound.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/sizeof_.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/push_back.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/BidirectionalIterator.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/AUX_LAMBDA_SUPPORT.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/modulus.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/accumulate.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/and_.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Data-Concepts.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/less_equal.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/LambdaExpression.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/quote.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Macros.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/transform.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/LIMIT_METAFUNCTION_ARITY.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/zip_view.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/LIMIT_VECTOR_SIZE.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/Macros-Broken.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/ExtensibleSequence.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/int_.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/times.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/src/refmanual/or_.rst",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/mpl/doc/tutorial/book_cover.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/log/doc/Design.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/log/doc/logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/log/doc/Design.dia",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/log/doc/html/images/log/Design.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/log/doc/html/images/log/logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/example/Jamfile.v2",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/example/hashed.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/perf/Jamfile.v2",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/test/Jamfile.v2",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/doc/next.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/doc/prev.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/doc/perf_1s.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/doc/perf_2o1s.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/doc/perf_2o.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/doc/perf_3o.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/doc/perf_1o.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/doc/performance.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/doc/style.css",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/doc/hector.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/doc/up.gif",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/doc/lopez.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/doc/perf_1o1s.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/doc/tutorial/multi_index_cont_example.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/multi_index/doc/reference/indices.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/circular_buffer/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/circular_buffer/doc/images/space_optimized.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/circular_buffer/doc/images/circular_buffer.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/utility/shared_container_iterator.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/utility/enable_if.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/utility/checked_delete.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/utility/throw_exception.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/utility/in_place_factories.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/utility/identity_type/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/test/he/LC_MESSAGES/fall.mo",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/test/he/LC_MESSAGES/default.mo",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/test/he/LC_MESSAGES/simple.mo",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/test/he_IL/LC_MESSAGES/full.mo",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/boost-small.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/boost-small.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/classboost_1_1locale_1_1collator.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/ftv2splitbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/ftv2pnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/ftv2doc.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/tab_h.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/tab_s.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/ftv2mlastnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/ftv2folderopen.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/tab_a.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/ftv2plastnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/ftv2vertline.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/ftv2lastnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/classboost_1_1locale_1_1converter__base.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/classboost_1_1locale_1_1converter.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/ftv2blank.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/ftv2link.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/nav_f.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/tab_b.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/open.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/ftv2folderclosed.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/bc_s.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/nav_h.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/classboost_1_1locale_1_1collator__base.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/ftv2mnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/closed.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/doxygen.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/html/ftv2node.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/style/header-bg.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/style/boost_small.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/style/space.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/libs/locale/doc/style/header-fg.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/more/blanket-permission.txt",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/more/index.htm",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/more/BoostSponsorshipAgreement.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/smart_ptr/detail/atomic_count_gcc.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/format/alt_sstream_impl.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/spirit/home/x3/support/subcontext.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/spirit/home/support/char_encoding/iso8859_1.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/python/opaque_pointer_converter.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/python/return_opaque_pointer.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/python/detail/dealloc.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/math/distributions/non_central_chi_squared.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/rounding.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/transc.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/utility.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/compare.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/arith.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/rounded_arith.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/rounded_transc.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/constants.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/hw_rounding.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/checking.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/interval.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/arith2.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/limits.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/ext/x86_fast_rounding_control.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/compare/explicit.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/detail/c99sub_rounding_control.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/detail/alpha_rounding_control.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/detail/msvc_rounding_control.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/detail/sparc_rounding_control.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/detail/x86gcc_rounding_control.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/detail/x86_rounding_control.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/detail/test_input.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/detail/ppc_rounding_control.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/detail/c99_rounding_control.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/detail/bcc_rounding_control.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/detail/bugs.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/boost/numeric/interval/detail/interval_prototype.hpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/src/engine/boehm_gc/cord/de_win.ICO",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/src/engine/boehm_gc/doc/README.Mac",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/src/tools/quickbook.jam",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/website/boost_build.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/website/bootstrap/fonts/glyphicons-halflings-regular.woff",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/website/bootstrap/fonts/glyphicons-halflings-regular.eot",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/website/bootstrap/fonts/glyphicons-halflings-regular.ttf",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/notes/relative_source_paths.txt",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/test/railsys/program/jamroot.jam",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/test/railsys/program/jamfile.jam",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/test/railsys/program/liba/jamfile.jam",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/test/railsys/program/main/jamfile.jam",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/test/railsys/libx/jamroot.jam",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/test/railsys/libx/src/jamfile.jam",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/boost.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/warning.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/prev.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/toc-blank.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/blank.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/next.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/alert.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/home.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/toc-plus.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/caution.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/up_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/draft.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/next_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/prev_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/tip.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/note.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/toc-minus.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/smiley.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/up.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/important.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/callouts/7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/callouts/12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/callouts/8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/callouts/6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/callouts/5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/callouts/15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/callouts/11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/callouts/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/callouts/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/callouts/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/callouts/9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/callouts/10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/callouts/14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/callouts/13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/build/doc/images/callouts/4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/students_t_eg_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/students_t_eg_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/students_t_eg_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/students_t_eg_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/warning.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/prev.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/toc-blank.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/blank.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/next.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/home.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/toc-plus.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/caution.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/up_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/draft.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/next_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/prev_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/tip.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/note.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/toc-minus.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/up.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/auto_index/doc/html/images/important.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/test/utf16be_bom-1_5-fail.quickbook",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/test/utf16le_bom-1_5-fail.quickbook",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/extra/katepart/boost.hs.logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/extra/katepart/table.text.editor.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/extra/katepart/table.boost.hs.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/callouts/7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/callouts/12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/callouts/8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/callouts/6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/callouts/5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/callouts/15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/callouts/11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/callouts/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/callouts/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/callouts/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/callouts/9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/callouts/10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/callouts/14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/callouts/13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/quickbook/doc/html/images/callouts/4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/bcp/licence_info.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/tools/inspect/index.html",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/images/valid-html401.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/minimal.css",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/warning.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/prev.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/toc-blank.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/blank.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/next.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/alert.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/home.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/toc-plus.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/caution.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/up_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/draft.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/next_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/prev_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/tip.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/note.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/toc-minus.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/smiley.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/up.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/important.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/callouts/7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/callouts/12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/callouts/8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/callouts/6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/callouts/5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/callouts/15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/callouts/11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/callouts/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/callouts/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/callouts/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/callouts/9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/callouts/10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/callouts/14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/callouts/13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/src/images/callouts/4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/warning.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/prev.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/toc-blank.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/blank.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/next.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/alert.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/home.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/toc-plus.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/caution.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/up_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/draft.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/next_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/prev_disabled.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/tip.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/note.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/toc-minus.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/smiley.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/up.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/important.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1lazy__rolling__mean__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1numeric_1_1functional_1_1multiply__and__promote__to__double__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_64.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_109.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__p__square__quantile_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/stats_8hpp__dep__incl.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1peaks__over__threshold_3_01LeftRight_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1rolling__sum__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1sum__of__weights__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__p__square__quantile__for__median__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1variance__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_113.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_33.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1extended__p__square__quantile__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1tail__quantile__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1rolling__moment__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1coherent__tail__mean_3_01LeftRight_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__peaks__over__threshold__prob__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1extended__p__square__quantile_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1sum__of__variates_3_01VariateType_00_01Var0274e3c6eda407375a40ff085e0edf0f.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_47.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1max__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_87.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1sum__of__variates__kahan__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_22.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_42.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1rolling__mean__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1this__feature__has__no__error__calculation__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__tail__variate__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__kurtosis__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__skewness__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1immediate__mean__of__variates__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_24.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1relative__tail__variate__means_3_01LeftRigbf3b7d6700f5d1e5d7614a6740268825.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1with__p__square__cumulative__distribution_0e1ce8a34efb51633dca8d90881443ed.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__extended__p__square__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__mean__of__variates_3_01VariateTy517afefc644e3e79dcd45b85d944cc8d.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_31.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1tail__variate__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__relative__tail__variate__means__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__peaks__over__threshold__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1mean__of__variates__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_62.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1error__of__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_25.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1count__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_97.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1with__density__median__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__p__square__quantile__for__median__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/stats_8hpp__incl.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__pot__tail__mean__prob__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1immediate__mean__of__weights_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1with__p__square__cumulative__distribution_eac4f08b95e680cf7c9f0405e924f4e4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1lazy__variance_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_112.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1pot__quantile_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_60.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__mean__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1lazy__weighted__variance__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1coherent__tail__mean__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_70.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_98.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__pot__tail__mean__prob__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_56.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1lazy__rolling__mean_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1error__of_3_01immediate__mean_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_48.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_27.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__pot__tail__mean__prob_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_19.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__peaks__over__threshold__prob_3_0ec0c07a85370b21c83c17a1ef16bea02.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/ftv2splitbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1covariance_3_01VariateType_00_01VariateTag_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_92.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__sum__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_79.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__p__square__cumulative__distribution_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/nav_g.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1pot__quantile__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_83.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__p__square__cumulative__distribution__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1pot__quantile__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1with__p__square__cumulative__distribution__weighted__median__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_35.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1lazy__weighted__variance__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1rolling__window__plus1__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_58.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_68.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/ftv2pnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1tail__variate__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_77.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/ftv2doc.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1mean__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_89.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__p__square__cumulative__distribution__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_29.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_95.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_28.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_55.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__sum__of__variates__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1moment__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1sum__kahan__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1relative__tail__variate__means__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1immediate__rolling__variance__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_72.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_37.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__p__square__cumulative__distribution__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1pot__quantile__prob__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1extended__p__square__quantile__quadratic_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_106.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_25.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/dir_4c53eff7632d75134f3af9e64cc14cfc_dep.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1with__density__weighted__median__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1pot__tail__mean_3_01LeftRight_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/dir_66af1ff6c588fbffd50b9a38d3ada08d_dep.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__extended__p__square_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_98.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__peaks__over__threshold_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__pot__quantile__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1rolling__moment__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__extended__p__square__quantile__quadratic_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1relative__tail__variate__means_3_01LeftRig320c43086063d2df1a10b99e388d24de.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_61.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/tab_h.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_30.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1covariance__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_65.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_113.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1absolute__tail__variate__means_3_01LeftRige4c5671d9efae56b260f467a9f4c8fe0.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/tab_s.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__moment__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_99.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__tail__variate__means__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_104.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__covariance_3_01VariateType_00_01ef8a6b4491ce3b0e0b89fea766b6cecc.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_94.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__mean__of__variates__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1mean__of__weights__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_38.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1sum__of__weights__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1with__p__square__cumulative__distribution__weighted__median__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_73.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__covariance__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__tail__quantile__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__pot__quantile_3_01LeftRight_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1lazy__variance__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1coherent__tail__mean_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_17.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1covariance__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__tail__quantile_3_01LeftRight_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1peaks__over__threshold__prob__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1tail__variate__means__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1min__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/ftv2mlastnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/ftv2folderopen.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1covariance__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_63.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_78.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/tab_a.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1immediate__mean__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1immediate__weighted__mean__of__variates__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__density__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_102.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1rolling__window__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_94.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1error__of_3_01immediate__mean_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_0.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1density__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1rolling__count__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_24.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1non__coherent__weighted__tail__mean__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/ftv2plastnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_85.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__extended__p__square__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_16.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1with__density__weighted__median__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__kurtosis__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1min__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__non__coherent__tail__mean__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1immediate__rolling__mean_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1with__density__weighted__median_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__tail__variate__means__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1rolling__window__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__extended__p__square__quantile__quadratic__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1p__square__quantile__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/ftv2vertline.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__sum__of__variates__kahan__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__tail__quantile__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1mean__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_22.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_41.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1detail_1_1is__tail__variate__feature__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1pot__tail__mean__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__median__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1non__coherent__tail__mean_3_01LeftRight_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1immediate__rolling__mean__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1rolling__window__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1p__square__quantile__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__pot__quantile__prob__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1immediate__weighted__mean_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1immediate__mean__of__weights__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1numeric_1_1op_1_1outer__product__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1extended__p__square__quantile_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1extended__p__square__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__pot__tail__mean__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_26.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__peaks__over__threshold__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1with__p__square__cumulative__distribution__median__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__density__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__skewness__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_52.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_56.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1sum__kahan__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__pot__tail__mean__prob_3_01LeftRight_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1lazy__variance_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1with__p__square__cumulative__distribution__median__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_49.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__peaks__over__threshold__prob_3_043762661c97bd04672c53c8ef554cf3e.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_66.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1peaks__over__threshold__prob__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1median__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1immediate__rolling__variance__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1p__square__cumulative__distribution__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1p__square__quantile__for__median__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_118.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_101.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_114.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1lazy__weighted__variance_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1tail__impl_1_1is__tail__variate_1_1apply__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_44.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_81.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1immediate__weighted__mean__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1immediate__weighted__mean__of__variates_3_b0db0d76446951645fd1a080083954b2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__relative__tail__variate__means__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__peaks__over__threshold__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1with__p__square__cumulative__distribution__weighted__median__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1absolute__tail__variate__means__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1with__p__square__cumulative__distribution__weighted__median__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1pot__quantile__prob__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1skewness__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1immediate__weighted__mean__of__variates__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__moment_3_01N_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_87.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__pot__quantile__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_29.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1immediate__mean__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1immediate__mean__of__variates_3_01VariateT8bdbfdd26ea3846d5c460400fec85c32.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_74.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_84.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__tail__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1detail_1_1lvalue__index__iterator__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_95.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__density_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1with__density__median__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1detail_1_1is__tail__variate__feature_3_01tag_1_1tail__variate_3_05c8781b637de300b03d4be7e8c3a6d3b.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_32.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1extended__p__square__quantile__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1tail__variate__means__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1rolling__variance__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__moment__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1density__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_83.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1tail__quantile_3_01LeftRight_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1non__coherent__weighted__tail__mean_3_01Le7053f2d19f63581f8a665d2881e86da7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1p__square__cumulative__distribution__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_82.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1moment__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__variance__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1coherent__tail__mean__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__tail__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1with__density__median_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_53.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__median__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1tail_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__tail__quantile__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1with__p__square__cumulative__distribution__median_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1numeric_1_1functional_1_1outer__product_3_01Left_00_01Right_00_01std__vector__taga63456efccb0da20873168181681152a.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_100.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1immediate__mean__of__weights_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1count__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1detail_1_1lvalue__index__iterator__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1immediate__rolling__variance__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__pot__tail__mean__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_62.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1skewness__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_59.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1tail__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__sum__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__density_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__kurtosis__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__sum__kahan__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1error__of__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1lazy__variance__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1rolling__mean__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/ftv2lastnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_40.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1lazy__rolling__mean__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__sum__of__variates__kahan_3_01Var2b29543407bdc9f3137388a98e7c20fb.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__sum__kahan__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__sum__of__variates__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__peaks__over__threshold__prob__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1tail__mean__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_27.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1sum__of__variates__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1non__coherent__tail__mean_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1kurtosis__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__p__square__cumulative__distribution__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1sum__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__sum__of__variates__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_119.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_90.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_23.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1relative__weighted__tail__variate__means_32c995ab9b1a590ea23faec8e0340def5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_71.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1pot__quantile__prob_3_01LeftRight_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1immediate__mean_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1max__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__skewness__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_19.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_54.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_81.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__p__square__cumulative__distribution_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1variance__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__peaks__over__threshold_3_01LeftRight_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__skewness_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__moment__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_80.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__covariance__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__median__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1immediate__mean__of__weights__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__tail__quantile_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_109.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_106.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1immediate__weighted__mean__of__variates_3_120b5b2eb8a22a85a7f2286df539e55b.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1density__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_45.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1with__density__median__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/sync_on.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__kurtosis__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1absolute__weighted__tail__variate__means_3505edae47ebf1a383302dd16d4f75ed2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_93.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1with__p__square__cumulative__distribution__median__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1tail__variate__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_20.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_105.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_34.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_41.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__density__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1p__square__quantile__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1rolling__sum__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_35.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1peaks__over__threshold__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_43.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1mean__of__variates__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1lazy__rolling__variance__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tail__cache__size__named__arg_3_01left_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__covariance__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1lazy__rolling__variance__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1median__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__variance__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1extended__p__square__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1count__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__weighted__sum__of__variates__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1numeric_1_1functional_1_1outer__product__base__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1numeric_1_1functional_1_1outer__product__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1covariance__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1coherent__tail__mean__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1extended__p__square__quantile__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1count__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1error__of__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1lazy__rolling__mean_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__p__square__quantile__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tail__cache__size__named__arg_3_01right_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_39.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__moment_3_01N_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1rolling__sum__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__variance__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__extended__p__square__quantile__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1pot__tail__mean__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_67.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1sum__kahan__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_86.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_47.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/ftv2blank.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_66.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/ftv2link.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_58.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1pot__tail__mean__prob__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1sum__kahan__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__mean_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1rolling__window__plus1__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1pot__quantile_3_01LeftRight_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1error__of__mean__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/nav_f.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_42.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1absolute__weighted__tail__variate__means__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__tail__quantile__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_89.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1tail__variate_3_01VariateType_00_01Variate26d7f75c32ae9995481ea77d2caa9744.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__skewness__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1relative__tail__variate__means__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1relative__weighted__tail__variate__means__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1error__of_3_01mean_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_70.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1kurtosis__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_54.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1mean__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1detail_1_1is__tail__variate__feature_3_01tag_1_1tail__weights_3_0c0cc96e6a3799fefac36d9cc2e8c7e17.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/dir_c8984f1860c11f62f47abb6761e46c1e_dep.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_111.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1error__of__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_64.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__sum__kahan__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1mean__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_92.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__mean_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_101.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_37.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1peaks__over__threshold__prob__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/tab_b.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_38.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1kurtosis__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_67.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1peaks__over__threshold_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_110.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1coherent__tail__mean__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1rolling__window__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1sum__of__weights__kahan_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1with__p__square__cumulative__distribution__median__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1numeric_1_1op_1_1outer__product__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/open.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__peaks__over__threshold__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_75.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_17.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_86.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_78.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_96.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__mean__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1sum__of__variates__kahan__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_68.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_117.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_115.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__kurtosis_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tail__cache__size__named__arg_3_01left_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1peaks__over__threshold__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__covariance__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__sum__kahan_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_16.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_18.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_65.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__variance_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_36.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1tail_3_01LeftRight_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_57.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1immediate__rolling__mean__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/ftv2folderclosed.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__peaks__over__threshold__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1lazy__rolling__variance__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1p__square__cumulative__distribution__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_36.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1immediate__rolling__variance_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1immediate__mean__of__variates_3_01VariateT89d306fef2f223ce6c23822a785b89bd.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1with__density__median_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1pot__quantile__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__peaks__over__threshold__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1median__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_34.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__peaks__over__threshold__prob__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1tail__quantile_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_61.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_91.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__sum_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__pot__quantile_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_80.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1immediate__rolling__mean_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1immediate__mean_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1lazy__rolling__variance_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1lazy__weighted__variance_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1relative__weighted__tail__variate__means__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_107.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1absolute__weighted__tail__variate__means__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_73.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1p__square__quantile__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1tail__impl_1_1is__tail__variate_1_1apply__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_79.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1pot__tail__mean__prob_3_01LeftRight_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1p__square__cumulative__distribution__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1lazy__rolling__mean__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1stats__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1stats__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1sum__of__weights__kahan__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__sum__of__variates_3_01VariateTypff95c865c624fd7b1b696110d5e6be1d.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__sum__kahan_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1sum__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1lazy__rolling__mean__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_52.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1quantile__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_91.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__pot__tail__mean_3_01LeftRight_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/bdwn.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1extended__p__square__quantile__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1sum__of__variates__kahan_3_01VariateType_01b06c8bae3b4e8d6bdcd2e0549024e97.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_46.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1median__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1peaks__over__threshold__prob_3_01LeftRight_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_77.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1rolling__count__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_72.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__extended__p__square__quantile__quadratic_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_28.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1numeric_1_1functional_1_1outer__product__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1lazy__rolling__variance__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__sum__of__variates_3_01VariateTyp613fb1be9eb633c3115d567eb9e07412.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_71.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1numeric_1_1functional_1_1outer__product_3_01Left_00_01Right_00_01std__vector__tag89733254ad911b24a559a2f1a8d64a16.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1with__density__weighted__median__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_26.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__mean__of__variates__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1sum__kahan_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_60.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1with__density__weighted__median__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1max__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1rolling__window__plus1__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1tail__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_88.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__pot__quantile__prob__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_32.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_69.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1immediate__weighted__mean__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__sum__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_43.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1detail_1_1is__tail__variate__feature_3_01tag_1_1tail__weights_3_0a95a6f88853906fe60f8ff45655a6bc5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_107.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/bc_s.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_76.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1moment__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__tail__variate__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1moment__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__variance__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__extended__p__square__quantile__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__moment__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_88.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_108.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__sum__of__variates__kahan__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_53.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__covariance__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_0.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__extended__p__square__quantile__quadratic__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/nav_h.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__sum__of__variates__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1tail__mean__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__pot__quantile__prob_3_01LeftRight_01_4_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1mean__of__weights__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1p__square__quantile__for__median__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1tail__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__extended__p__square__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1sum__of__weights__kahan__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1lazy__variance__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1peaks__over__threshold__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1rolling__count__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_30.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_76.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1rolling__count__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1immediate__weighted__mean__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__sum_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_82.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/graph_legend.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1quantile__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1error__of_3_01mean_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_48.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1this__feature__has__no__error__calculation__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__median__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1peaks__over__threshold__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_104.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1pot__quantile__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1pot__quantile__prob_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tail__cache__size__named__arg_3_01right_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__sum__of__variates__kahan_3_01Vara3038b3e966e6a0b667bb2cf95ef56d4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__skewness_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__covariance__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1immediate__rolling__variance__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1tail__weights__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1immediate__mean__of__variates__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1rolling__window__plus1__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1extended__p__square__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_50.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__p__square__quantile__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1pot__tail__mean__prob__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1extended__p__square__quantile__quadratic__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1rolling__variance__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_23.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__sum__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_21.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__sum__kahan__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__mean__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_108.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__absolute__tail__variate__means__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1sum__of__variates__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1non__coherent__weighted__tail__mean__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1sum__kahan_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1non__coherent__tail__mean__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/dir_03b5a622a95efae6bae9b345db67a1a2_dep.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__peaks__over__threshold__prob__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_90.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1absolute__tail__variate__means__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1extended__p__square__quantile__quadratic_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_59.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1peaks__over__threshold__prob__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1immediate__mean__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_50.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1with__p__square__cumulative__distribution__median_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1lazy__rolling__variance_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_96.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_33.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1sum__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1pot__tail__mean_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1pot__tail__mean__prob_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/statistics_8hpp__incl.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1non__coherent__tail__mean__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__median_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1relative__weighted__tail__variate__means_392c1071167dc517c1e0edae480d968c7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1absolute__tail__variate__means_3_01LeftRig3311c7dd1087900f783496d3cbb76955.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1extended__p__square__quantile__quadratic__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1sum__of__variates__kahan_3_01VariateType_0d52c524a00470763be51671c4e39563e.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1detail_1_1is__tail__variate__feature__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__absolute__tail__variate__means__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1non__coherent__weighted__tail__mean__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_93.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1rolling__moment__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_100.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__covariance_3_01VariateType_00_0113af83de7b3f6603a3e989f6a06a55cc.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1numeric_1_1functional_1_1multiply__and__promote__to__double__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__density__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1non__coherent__weighted__tail__mean__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1lazy__variance__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__pot__quantile__prob_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_51.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__variance_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1skewness__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1max__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1sum__of__variates_3_01VariateType_00_01VariateTag_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__non__coherent__tail__mean__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1non__coherent__tail__mean__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_39.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_57.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1tail__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1density__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__tail__weights__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1extended__p__square__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_103.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__p__square__quantile_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__extended__p__square_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__extended__p__square__quantile_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1immediate__mean__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_99.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/sync_off.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_85.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1variance__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1tail__variate_3_01VariateType_00_01Variate8d20da492beac3c00c69e5bdcac78a9a.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__p__square__quantile__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1with__density__weighted__median_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1tail__weights__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1tail__quantile__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__median_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_74.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1immediate__rolling__mean__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1immediate__rolling__variance_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1tail__quantile__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__tail__weights__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1variance__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_120.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_51.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1lazy__weighted__variance__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/ftv2mnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_102.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1sum__of__weights__kahan_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1non__coherent__weighted__tail__mean_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_18.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1detail_1_1is__tail__variate__feature_3_01tag_1_1tail__variate_3_0bde35638c0c2e12c16d713c2f309c463.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1pot__tail__mean__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1immediate__rolling__mean__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_103.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_45.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_49.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1with__density__median__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1rolling__moment__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_110.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1min__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1absolute__weighted__tail__variate__means_383a865ad2323564815da3bab28df7aaf.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_111.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1peaks__over__threshold__prob_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1min__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1tail__variate__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__extended__p__square__quantile_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_55.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1immediate__weighted__mean_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1sum__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_46.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_116.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1abstract__weighted__sum__of__variates__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1tail__quantile__impl__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_31.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1skewness__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_40.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__kurtosis_01_4__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/closed.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1non__coherent__tail__mean__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/doxygen.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1immediate__weighted__mean__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_20.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1error__of__mean__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__mean__of__variates_3_01VariateTye1123a753725322b652fc1c026c6219c.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1lazy__weighted__variance__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/ftv2node.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1weighted__extended__p__square__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_97.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__p__square__quantile__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_105.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1pot__tail__mean__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_112.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1numeric_1_1functional_1_1outer__product__base__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1weighted__mean__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1tag_1_1kurtosis__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1covariance_3_01VariateType_00_01VariateTag_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_63.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1feature__of_3_01tag_1_1weighted__pot__tail__mean_3_01LeftRight_01_4_01_4__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_44.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_21.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1with__error__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_75.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/inherit_graph_84.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1with__error__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/structboost_1_1accumulators_1_1impl_1_1rolling__sum__impl__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/accumulators/form_69.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_64.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_33.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_47.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_22.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_42.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_24.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/classboost_1_1random_1_1random__device__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_31.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_25.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_60.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_70.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_56.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_48.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_27.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_19.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/ftv2splitbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/nav_g.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_35.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_58.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/ftv2pnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_77.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/ftv2doc.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_89.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_29.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_28.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_55.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_72.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_37.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_25.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_61.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/tab_h.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_30.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/tab_s.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_38.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_73.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_17.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/ftv2mlastnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/ftv2folderopen.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_63.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/tab_a.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_0.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_24.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/ftv2plastnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_85.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_16.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/ftv2vertline.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_22.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_41.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_26.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_81.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_87.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_29.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_74.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_32.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_83.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/dir_699b08920d7df5ea26d76579201b6189_dep.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_62.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/ftv2lastnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_40.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_27.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_90.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_23.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_19.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_45.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/sync_on.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_93.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_20.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_34.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_41.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_35.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_43.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_39.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/ftv2blank.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_66.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/ftv2link.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/nav_f.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_42.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_54.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/dir_c8984f1860c11f62f47abb6761e46c1e_dep.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_92.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_37.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/tab_b.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_38.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_67.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/open.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_75.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_17.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_86.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_78.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_68.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_16.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_18.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_65.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_36.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_57.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/ftv2folderclosed.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_36.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_34.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_91.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_80.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_79.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_52.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/bdwn.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_46.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_28.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_71.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_26.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_32.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_69.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_43.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/classboost_1_1random_1_1mersenne__twister__engine__coll__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/bc_s.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_76.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_88.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_53.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_0.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/nav_h.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_30.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_82.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/graph_legend.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_23.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_21.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_59.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_50.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_33.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_51.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_39.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/sync_off.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/ftv2mnode.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_18.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_49.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_31.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_40.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/closed.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/doxygen.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_20.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/ftv2node.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/form_14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_44.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_21.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/classboost_1_1random_1_1random__device__inherit__graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/random/inherit_graph_84.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/callouts/7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/callouts/12.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/callouts/8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/callouts/6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/callouts/5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/callouts/15.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/callouts/11.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/callouts/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/callouts/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/callouts/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/callouts/9.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/callouts/10.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/callouts/14.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/callouts/13.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/images/callouts/4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/boost_asio/sync_op.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/boost_asio/async_op1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/boost_asio/proactor.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/html/boost_asio/async_op2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/test.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/html/images/remez-5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/html/images/digamma3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/html/images/doctest.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/html/images/remez-3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/html/images/remez-2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/html/images/beta_dist_kurtosis.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/html/images/remez-4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/remez-5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/digamma3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/doctest.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/remez-3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/remez-2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/beta_dist_kurtosis.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/remez-4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/accumulators/form_5.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/accumulators/form_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/accumulators/form_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/accumulators/form_7.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/accumulators/form_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/accumulators/form_6.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/accumulators/form_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/accumulators/form_0.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/accumulators/form_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-boost-1.59.0-wjegtx3kvit3vizgsjhxmkfhjc5e5nho/spack-src/doc/test/gold/images/accumulators/doxygen.png"
    ],
    "total_files": 46778
}