{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/PC/os2emx/dlfcn.h": "/* -*- C -*- ***********************************************\nCopyright 1991-1995 by Stichting Mathematisch Centrum, Amsterdam,\nThe Netherlands.\n\n                        All Rights Reserved\n\nPermission to use, copy, modify, and distribute this software and its\ndocumentation for any purpose and without fee is hereby granted,\nprovided that the above copyright notice appear in all copies and that\nboth that copyright notice and this permission notice appear in\nsupporting documentation, and that the names of Stichting Mathematisch\nCentrum or CWI or Corporation for National Research Initiatives or\nCNRI not be used in advertising or publicity pertaining to\ndistribution of the software without specific, written prior\npermission.\n\nWhile CWI is the initial source for this software, a modified version\nis made available by the Corporation for National Research Initiatives\n(CNRI) at the Internet address ftp://ftp.python.org.\n\nSTICHTING MATHEMATISCH CENTRUM AND CNRI DISCLAIM ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS, IN NO EVENT SHALL STICHTING MATHEMATISCH\nCENTRUM OR CNRI BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL\nDAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR\nPROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n\n******************************************************************/\n\n/* This library implements dlopen() - Unix-like dynamic linking\n * emulation functions for OS/2 using DosLoadModule() and company.\n */\n\n#ifndef _DLFCN_H\n#define _DLFCN_H\n\n/* load a dynamic-link library and return handle */\nvoid *dlopen(char *filename, int flags);\n\n/* return a pointer to the `symbol' in DLL */\nvoid *dlsym(void *handle, char *symbol);\n\n/* free dynamically-linked library */\nint dlclose(void *handle);\n\n/* return a string describing last occurred dl error */\nchar *dlerror(void);\n\n#endif /* !_DLFCN_H */\n",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/PC/os2emx/python27.def": "LIBRARY python27 INITINSTANCE TERMINSTANCE \nDESCRIPTION \"Python 2.6 Core DLL\" \nPROTMODE \nDATA MULTIPLE NONSHARED \nEXPORTS \n\n; From python27_s.lib(config)\n  \"_PyImport_Inittab\"\n\n; From python27_s.lib(dlfcn)\n;  \"dlopen\"\n;  \"dlsym\"\n;  \"dlclose\"\n;  \"dlerror\"\n\n; From python27_s.lib(getpathp)\n  \"Py_GetProgramFullPath\"\n  \"Py_GetPrefix\"\n  \"Py_GetExecPrefix\"\n  \"Py_GetPath\"\n\n; From python27_s.lib(getbuildinfo)\n  \"Py_GetBuildInfo\"\n  \"_Py_svnversion\"\n\n; From python27_s.lib(main)\n  \"Py_Main\"\n  \"Py_GetArgcArgv\"\n\n; From python27_s.lib(acceler)\n  \"PyGrammar_AddAccelerators\"\n  \"PyGrammar_RemoveAccelerators\"\n\n; From python27_s.lib(grammar1)\n  \"PyGrammar_FindDFA\"\n  \"PyGrammar_LabelRepr\"\n\n; From python27_s.lib(listnode)\n  \"PyNode_ListTree\"\n\n; From python27_s.lib(node)\n  \"PyNode_New\"\n  \"PyNode_AddChild\"\n  \"PyNode_Free\"\n\n; From python27_s.lib(parser)\n  \"PyParser_AddToken\"\n  \"PyParser_New\"\n  \"PyParser_Delete\"\n\n; From python27_s.lib(parsetok)\n  \"Py_TabcheckFlag\"\n  \"PyParser_ParseString\"\n  \"PyParser_ParseStringFlagsFilename\"\n  \"PyParser_ParseFile\"\n  \"PyParser_ParseFileFlags\"\n  \"PyParser_ParseStringFlags\"\n\n; From python27_s.lib(bitset)\n  \"_Py_newbitset\"\n  \"_Py_delbitset\"\n  \"_Py_addbit\"\n  \"_Py_samebitset\"\n  \"_Py_mergebitset\"\n\n; From python27_s.lib(metagrammar)\n  \"_Py_meta_grammar\"\n  \"Py_meta_grammar\"\n\n; From python27_s.lib(tokenizer)\n  \"PyToken_OneChar\"\n  \"PyToken_TwoChars\"\n  \"PyToken_ThreeChars\"\n  \"PyTokenizer_FromString\"\n  \"PyTokenizer_Free\"\n  \"PyTokenizer_FromFile\"\n  \"PyTokenizer_Get\"\n  \"_PyParser_TokenNames\"\n\n; From python27_s.lib(myreadline)\n  \"_PyOS_ReadlineTState\"\n  \"PyOS_ReadlineFunctionPointer\"\n  \"PyOS_StdioReadline\"\n  \"PyOS_Readline\"\n  \"PyOS_InputHook\"\n\n; From python27_s.lib(abstract)\n  \"_PyObject_LengthHint\"\n  \"PyMapping_Size\"\n  \"PyObject_CallMethod\"\n  \"PyObject_GetItem\"\n  \"PySequence_GetItem\"\n  \"PyObject_SetItem\"\n  \"PySequence_SetItem\"\n  \"PyObject_DelItem\"\n  \"PySequence_DelItem\"\n  \"PyNumber_Multiply\"\n  \"PyNumber_InPlaceAdd\"\n  \"PyNumber_InPlaceMultiply\"\n  \"PyNumber_Int\"\n  \"PyNumber_Long\"\n  \"PyNumber_Float\"\n  \"PySequence_Concat\"\n  \"PySequence_Repeat\"\n  \"PySequence_InPlaceConcat\"\n  \"PySequence_InPlaceRepeat\"\n  \"PySequence_GetSlice\"\n  \"PySequence_SetSlice\"\n  \"PySequence_Tuple\"\n  \"PyObject_GetIter\"\n  \"PyIter_Next\"\n  \"PySequence_Fast\"\n  \"_PySequence_IterSearch\"\n  \"PyObject_CallFunction\"\n  \"_PyObject_CallFunction_SizeT\"\n  \"_PyObject_CallMethod_SizeT\"\n  \"PyObject_CallMethodObjArgs\"\n  \"PyObject_CallFunctionObjArgs\"\n  \"PyObject_Cmp\"\n  \"PyObject_Call\"\n  \"PyObject_CallObject\"\n  \"PyObject_Type\"\n  \"PyObject_Size\"\n  \"PyObject_Length\"\n  \"PyObject_DelItemString\"\n  \"PyObject_AsCharBuffer\"\n  \"PyObject_CheckReadBuffer\"\n  \"PyObject_AsReadBuffer\"\n  \"PyObject_AsWriteBuffer\"\n  \"PyNumber_Check\"\n  \"PyNumber_Add\"\n  \"PyNumber_Subtract\"\n  \"PyNumber_Divide\"\n  \"PyNumber_FloorDivide\"\n  \"PyNumber_TrueDivide\"\n  \"PyNumber_Remainder\"\n  \"PyNumber_Divmod\"\n  \"PyNumber_Power\"\n  \"PyNumber_Negative\"\n  \"PyNumber_Positive\"\n  \"PyNumber_Absolute\"\n  \"PyNumber_Invert\"\n  \"PyNumber_Lshift\"\n  \"PyNumber_Rshift\"\n  \"PyNumber_And\"\n  \"PyNumber_Xor\"\n  \"PyNumber_Or\"\n  \"PyNumber_Index\"\n  \"PyNumber_InPlaceSubtract\"\n  \"PyNumber_InPlaceDivide\"\n  \"PyNumber_InPlaceFloorDivide\"\n  \"PyNumber_InPlaceTrueDivide\"\n  \"PyNumber_InPlaceRemainder\"\n  \"PyNumber_InPlacePower\"\n  \"PyNumber_InPlaceLshift\"\n  \"PyNumber_InPlaceRshift\"\n  \"PyNumber_InPlaceAnd\"\n  \"PyNumber_InPlaceXor\"\n  \"PyNumber_InPlaceOr\"\n  \"PySequence_Check\"\n  \"PySequence_Size\"\n  \"PySequence_Length\"\n  \"PySequence_DelSlice\"\n  \"PySequence_List\"\n  \"PySequence_Count\"\n  \"PySequence_Contains\"\n  \"PySequence_In\"\n  \"PySequence_Index\"\n  \"PyMapping_Check\"\n  \"PyMapping_Length\"\n  \"PyMapping_HasKeyString\"\n  \"PyMapping_HasKey\"\n  \"PyMapping_GetItemString\"\n  \"PyMapping_SetItemString\"\n  \"PyObject_IsInstance\"\n  \"PyObject_IsSubclass\"\n\n; From python27_s.lib(boolobject)\n  \"PyBool_FromLong\"\n  \"PyBool_Type\"\n  \"_Py_ZeroStruct\"\n  \"_Py_TrueStruct\"\n\n; From python27_s.lib(bufferobject)\n  \"PyBuffer_FromObject\"\n  \"PyBuffer_FromReadWriteObject\"\n  \"PyBuffer_FromMemory\"\n  \"PyBuffer_FromReadWriteMemory\"\n  \"PyBuffer_New\"\n  \"PyBuffer_Type\"\n\n; From python27_s.lib(cellobject)\n  \"PyCell_New\"\n  \"PyCell_Get\"\n  \"PyCell_Set\"\n  \"PyCell_Type\"\n\n; From python27_s.lib(classobject)\n  \"PyClass_New\"\n  \"PyClass_IsSubclass\"\n  \"PyInstance_New\"\n  \"PyInstance_NewRaw\"\n  \"PyMethod_New\"\n  \"PyMethod_Function\"\n  \"PyMethod_Self\"\n  \"PyMethod_Class\"\n  \"_PyInstance_Lookup\"\n  \"PyMethod_Fini\"\n  \"PyClass_Type\"\n  \"PyInstance_Type\"\n  \"PyMethod_Type\"\n\n; From python27_s.lib(capsule)\n  \"PyCapsule_GetContext\"\n  \"PyCapsule_GetDestructor\"\n  \"PyCapsule_GetName\"\n  \"PyCapsule_GetPointer\"\n  \"PyCapsule_Import\"\n  \"PyCapsule_IsValid\"\n  \"PyCapsule_New\"\n  \"PyCapsule_SetContext\"\n  \"PyCapsule_SetDestructor\"\n  \"PyCapsule_SetName\"\n  \"PyCapsule_SetPointer\"\n\n; From python27_s.lib(cobject)\n  \"PyCObject_FromVoidPtr\"\n  \"PyCObject_FromVoidPtrAndDesc\"\n  \"PyCObject_AsVoidPtr\"\n  \"PyCObject_GetDesc\"\n  \"PyCObject_Import\"\n  \"PyCObject_SetVoidPtr\"\n  \"PyCObject_Type\"\n\n; From python27_s.lib(codeobject)\n  \"PyCode_New\"\n  \"PyCode_Addr2Line\"\n  \"PyCode_CheckLineNumber\"\n  \"PyCode_Type\"\n\n; From python27_s.lib(complexobject)\n  \"_Py_c_pow\"\n  \"_Py_c_sum\"\n  \"_Py_c_diff\"\n  \"_Py_c_neg\"\n  \"_Py_c_prod\"\n  \"_Py_c_quot\"\n  \"PyComplex_FromCComplex\"\n  \"PyComplex_FromDoubles\"\n  \"PyComplex_RealAsDouble\"\n  \"PyComplex_ImagAsDouble\"\n  \"PyComplex_AsCComplex\"\n  \"PyComplex_Type\"\n\n; From python27_s.lib(descrobject)\n  \"PyWrapper_New\"\n  \"PyDescr_NewMethod\"\n  \"PyDescr_NewClassMethod\"\n  \"PyDescr_NewMember\"\n  \"PyDescr_NewGetSet\"\n  \"PyDescr_NewWrapper\"\n  \"PyDictProxy_New\"\n  \"PyWrapperDescr_Type\"\n  \"PyProperty_Type\"\n\n; From python27_s.lib(dictobject)\n  \"PyDict_New\"\n  \"PyDict_GetItem\"\n  \"PyDict_SetItem\"\n  \"PyDict_DelItem\"\n  \"PyDict_Clear\"\n  \"PyDict_MergeFromSeq2\"\n  \"PyDict_Merge\"\n  \"PyDict_Keys\"\n  \"PyDict_Values\"\n  \"PyDict_Contains\"\n  \"PyDict_Next\"\n  \"PyDict_Items\"\n  \"PyDict_Size\"\n  \"PyDict_Copy\"\n  \"PyDict_Update\"\n  \"PyDict_GetItemString\"\n  \"PyDict_SetItemString\"\n  \"PyDict_DelItemString\"\n  \"PyDict_Type\"\n  \"PyDictIterKey_Type\"\n  \"PyDictIterValue_Type\"\n  \"PyDictIterItem_Type\"\n\n; From python27_s.lib(enumobject)\n  \"PyEnum_Type\"\n  \"PyReversed_Type\"\n\n; From python27_s.lib(fileobject)\n  \"PyFile_FromString\"\n  \"Py_UniversalNewlineFread\"\n  \"PyFile_GetLine\"\n  \"PyFile_SoftSpace\"\n  \"PyFile_WriteObject\"\n  \"PyFile_WriteString\"\n  \"PyObject_AsFileDescriptor\"\n  \"Py_UniversalNewlineFgets\"\n  \"PyFile_SetBufSize\"\n  \"PyFile_SetEncoding\"\n  \"PyFile_FromFile\"\n  \"PyFile_AsFile\"\n  \"PyFile_Name\"\n  \"PyFile_Type\"\n\n; From python27_s.lib(floatobject)\n  \"PyFloat_FromString\"\n  \"PyFloat_AsDouble\"\n  \"PyFloat_Fini\"\n  \"_PyFloat_Pack4\"\n  \"_PyFloat_Pack8\"\n  \"_PyFloat_Unpack4\"\n  \"_PyFloat_Unpack8\"\n  \"PyFloat_FromDouble\"\n  \"PyFloat_AsReprString\"\n  \"PyFloat_AsString\"\n  \"_PyFloat_Init\"\n  \"PyFloat_Type\"\n\n; From python27_s.lib(frameobject)\n  \"PyFrame_New\"\n  \"PyFrame_FastToLocals\"\n  \"PyFrame_LocalsToFast\"\n  \"_PyFrame_Init\"\n  \"PyFrame_Fini\"\n  \"PyFrame_BlockSetup\"\n  \"PyFrame_BlockPop\"\n  \"PyFrame_Type\"\n\n; From python27_s.lib(funcobject)\n  \"PyFunction_New\"\n  \"PyFunction_GetCode\"\n  \"PyFunction_GetGlobals\"\n  \"PyFunction_GetModule\"\n  \"PyFunction_GetDefaults\"\n  \"PyFunction_SetDefaults\"\n  \"PyFunction_GetClosure\"\n  \"PyFunction_SetClosure\"\n  \"PyClassMethod_New\"\n  \"PyStaticMethod_New\"\n  \"PyFunction_Type\"\n  \"PyClassMethod_Type\"\n  \"PyStaticMethod_Type\"\n\n; From python27_s.lib(genobject)\n  \"PyGen_New\"\n  \"PyGen_NeedsFinalizing\"\n  \"PyGen_Type\"\n\n; From python27_s.lib(intobject)\n  \"PyInt_AsLong\"\n  \"PyInt_AsUnsignedLongMask\"\n  \"PyInt_AsUnsignedLongLongMask\"\n  \"PyInt_FromString\"\n  \"PyInt_AsSsize_t\"\n  \"PyInt_Fini\"\n  \"PyInt_FromUnicode\"\n  \"PyInt_FromLong\"\n  \"PyInt_FromSize_t\"\n  \"PyInt_FromSsize_t\"\n  \"PyInt_GetMax\"\n  \"_PyInt_Init\"\n  \"PyInt_Type\"\n\n; From python27_s.lib(iterobject)\n  \"PySeqIter_New\"\n  \"PyCallIter_New\"\n  \"PySeqIter_Type\"\n  \"PyCallIter_Type\"\n\n; From python27_s.lib(listobject)\n  \"PyList_New\"\n  \"PyList_Append\"\n  \"PyList_Size\"\n  \"PyList_GetItem\"\n  \"PyList_SetItem\"\n  \"PyList_Insert\"\n  \"PyList_GetSlice\"\n  \"PyList_SetSlice\"\n  \"PyList_Sort\"\n  \"PyList_Reverse\"\n  \"PyList_AsTuple\"\n  \"_PyList_Extend\"\n  \"PyList_Fini\"\n  \"PyList_Type\"\n  \"PyListIter_Type\"\n  \"PyListRevIter_Type\"\n\n; From python27_s.lib(longobject)\n  \"PyLong_FromDouble\"\n  \"PyLong_AsLong\"\n  \"_PyLong_AsSsize_t\"\n  \"PyLong_AsUnsignedLong\"\n  \"_PyLong_FromByteArray\"\n  \"_PyLong_AsByteArray\"\n  \"PyLong_AsDouble\"\n  \"PyLong_FromLongLong\"\n  \"PyLong_AsLongLong\"\n  \"PyLong_FromString\"\n  \"PyLong_FromLong\"\n  \"PyLong_FromUnsignedLong\"\n  \"PyLong_AsUnsignedLongMask\"\n  \"_PyLong_FromSize_t\"\n  \"_PyLong_FromSsize_t\"\n  \"_PyLong_AsScaledDouble\"\n  \"PyLong_FromVoidPtr\"\n  \"PyLong_AsVoidPtr\"\n  \"PyLong_FromUnsignedLongLong\"\n  \"PyLong_AsUnsignedLongLong\"\n  \"PyLong_AsUnsignedLongLongMask\"\n  \"PyLong_FromUnicode\"\n  \"_PyLong_Sign\"\n  \"_PyLong_NumBits\"\n  \"_PyLong_New\"\n  \"_PyLong_Copy\"\n  \"PyLong_Type\"\n  \"_PyLong_DigitValue\"\n\n; From python27_s.lib(methodobject)\n  \"PyCFunction_Call\"\n  \"Py_FindMethodInChain\"\n  \"PyCFunction_GetFunction\"\n  \"PyCFunction_GetSelf\"\n  \"PyCFunction_GetFlags\"\n  \"Py_FindMethod\"\n  \"PyCFunction_NewEx\"\n  \"PyCFunction_Fini\"\n  \"PyCFunction_New\"\n  \"PyCFunction_Type\"\n\n; From python27_s.lib(moduleobject)\n  \"PyModule_New\"\n  \"_PyModule_Clear\"\n  \"PyModule_GetDict\"\n  \"PyModule_GetName\"\n  \"PyModule_GetFilename\"\n  \"PyModule_Type\"\n\n; From python27_s.lib(object)\n  \"Py_DivisionWarningFlag\"\n  \"PyObject_Str\"\n  \"PyObject_Repr\"\n  \"_PyObject_Str\"\n  \"PyObject_Unicode\"\n  \"PyObject_GetAttr\"\n  \"PyObject_IsTrue\"\n  \"PyNumber_CoerceEx\"\n  \"PyObject_Compare\"\n  \"PyObject_RichCompare\"\n  \"_Py_HashDouble\"\n  \"PyObject_Hash\"\n  \"PyObject_SetAttr\"\n  \"PyObject_GenericGetAttr\"\n  \"PyObject_GenericSetAttr\"\n  \"PyCallable_Check\"\n  \"PyObject_Dir\"\n  \"PyMem_Malloc\"\n  \"PyMem_Realloc\"\n  \"PyMem_Free\"\n  \"PyObject_Print\"\n  \"_PyObject_Dump\"\n  \"PyObject_RichCompareBool\"\n  \"PyObject_GetAttrString\"\n  \"PyObject_SetAttrString\"\n  \"PyObject_HasAttrString\"\n  \"PyObject_HasAttr\"\n  \"_PyObject_GetDictPtr\"\n  \"PyObject_SelfIter\"\n  \"PyObject_Not\"\n  \"PyNumber_Coerce\"\n  \"Py_ReprEnter\"\n  \"Py_ReprLeave\"\n  \"_Py_HashPointer\"\n  \"Py_IncRef\"\n  \"Py_DecRef\"\n  \"_PyTrash_deposit_object\"\n  \"_PyTrash_destroy_chain\"\n  \"PyObject_Init\"\n  \"PyObject_InitVar\"\n  \"_PyObject_New\"\n  \"_PyObject_NewVar\"\n  \"_PyObject_Del\"\n  \"_Py_ReadyTypes\"\n  \"_Py_SwappedOp\"\n  \"_Py_NotImplementedStruct\"\n  \"_Py_NoneStruct\"\n  \"_Py_cobject_hack\"\n  \"_Py_abstract_hack\"\n  \"_PyTrash_delete_nesting\"\n  \"_PyTrash_delete_later\"\n\n; From python27_s.lib(obmalloc)\n  \"PyObject_Malloc\"\n  \"PyObject_Free\"\n  \"PyObject_Realloc\"\n\n; From python27_s.lib(rangeobject)\n  \"PyRange_Type\"\n\n; From python27_s.lib(setobject)\n  \"PySet_Pop\"\n  \"PySet_New\"\n  \"PyFrozenSet_New\"\n  \"PySet_Size\"\n  \"PySet_Clear\"\n  \"PySet_Contains\"\n  \"PySet_Discard\"\n  \"PySet_Add\"\n  \"_PySet_Next\"\n  \"_PySet_Update\"\n  \"PySet_Fini\"\n  \"PySet_Type\"\n  \"PyFrozenSet_Type\"\n\n; From python27_s.lib(sliceobject)\n  \"_PySlice_FromIndices\"\n  \"PySlice_GetIndices\"\n  \"PySlice_GetIndicesEx\"\n  \"PySlice_New\"\n  \"_Py_EllipsisObject\"\n  \"PySlice_Type\"\n\n; From python27_s.lib(stringobject)\n  \"PyString_FromStringAndSize\"\n  \"PyString_InternInPlace\"\n  \"PyString_FromString\"\n  \"PyString_FromFormatV\"\n  \"PyString_AsString\"\n  \"_PyString_Resize\"\n  \"PyString_FromFormat\"\n  \"PyString_AsDecodedString\"\n  \"PyString_AsEncodedString\"\n  \"PyString_DecodeEscape\"\n  \"PyString_Repr\"\n  \"PyString_AsStringAndSize\"\n  \"_PyString_FormatLong\"\n  \"PyString_Format\"\n  \"_Py_ReleaseInternedStrings\"\n  \"PyString_Size\"\n  \"PyString_Concat\"\n  \"PyString_ConcatAndDel\"\n  \"_PyString_Eq\"\n  \"PyString_InternImmortal\"\n  \"PyString_InternFromString\"\n  \"_PyString_Join\"\n  \"PyString_Decode\"\n  \"PyString_Encode\"\n  \"PyString_AsEncodedObject\"\n  \"PyString_AsDecodedObject\"\n  \"PyString_Fini\"\n  \"PyString_Type\"\n  \"PyBaseString_Type\"\n\n; From python27_s.lib(structseq)\n  \"PyStructSequence_InitType\"\n  \"PyStructSequence_New\"\n  \"PyStructSequence_UnnamedField\"\n\n; From python27_s.lib(tupleobject)\n  \"PyTuple_New\"\n  \"PyTuple_Pack\"\n  \"_PyTuple_Resize\"\n  \"PyTuple_Size\"\n  \"PyTuple_GetItem\"\n  \"PyTuple_SetItem\"\n  \"PyTuple_GetSlice\"\n  \"PyTuple_Fini\"\n  \"PyTuple_Type\"\n  \"PyTupleIter_Type\"\n\n; From python27_s.lib(typeobject)\n  \"PyType_IsSubtype\"\n  \"_PyType_Lookup\"\n  \"PyType_Ready\"\n  \"PyType_GenericAlloc\"\n  \"_PyObject_SlotCompare\"\n  \"PyType_GenericNew\"\n  \"PyType_Type\"\n  \"PyBaseObject_Type\"\n  \"PySuper_Type\"\n\n; From python27_s.lib(unicodeobject)\n  \"PyUnicodeUCS2_Resize\"\n  \"PyUnicodeUCS2_FromOrdinal\"\n  \"PyUnicodeUCS2_FromObject\"\n  \"PyUnicodeUCS2_FromEncodedObject\"\n  \"PyUnicodeUCS2_Decode\"\n  \"PyUnicodeUCS2_GetDefaultEncoding\"\n  \"PyUnicodeUCS2_DecodeUTF8\"\n  \"PyUnicodeUCS2_DecodeLatin1\"\n  \"PyUnicodeUCS2_DecodeASCII\"\n  \"PyUnicodeUCS2_AsEncodedString\"\n  \"PyUnicodeUCS2_AsUTF8String\"\n  \"PyUnicodeUCS2_AsLatin1String\"\n  \"PyUnicodeUCS2_AsASCIIString\"\n  \"PyUnicode_DecodeUTF7\"\n  \"PyUnicode_EncodeUTF7\"\n  \"PyUnicodeUCS2_DecodeUTF8Stateful\"\n  \"PyUnicodeUCS2_EncodeUTF8\"\n  \"PyUnicodeUCS2_DecodeUTF16Stateful\"\n  \"PyUnicodeUCS2_AsUTF16String\"\n  \"PyUnicodeUCS2_DecodeUnicodeEscape\"\n  \"PyUnicodeUCS2_DecodeRawUnicodeEscape\"\n  \"PyUnicodeUCS2_EncodeRawUnicodeEscape\"\n  \"_PyUnicode_DecodeUnicodeInternal\"\n  \"PyUnicodeUCS2_DecodeCharmap\"\n  \"PyUnicode_BuildEncodingMap\"\n  \"PyUnicodeUCS2_EncodeCharmap\"\n  \"PyUnicodeUCS2_TranslateCharmap\"\n  \"PyUnicodeUCS2_EncodeDecimal\"\n  \"PyUnicodeUCS2_Count\"\n  \"PyUnicodeUCS2_Find\"\n  \"PyUnicodeUCS2_Join\"\n  \"PyUnicodeUCS2_Splitlines\"\n  \"PyUnicodeUCS2_Compare\"\n  \"PyUnicodeUCS2_Contains\"\n  \"PyUnicodeUCS2_Concat\"\n  \"_PyUnicode_XStrip\"\n  \"PyUnicodeUCS2_Replace\"\n  \"PyUnicodeUCS2_Split\"\n  \"PyUnicodeUCS2_RSplit\"\n  \"PyUnicodeUCS2_Format\"\n  \"_PyUnicodeUCS2_Init\"\n  \"_PyUnicodeUCS2_Fini\"\n  \"PyUnicodeUCS2_FromUnicode\"\n  \"PyUnicodeUCS2_AsUnicode\"\n  \"PyUnicodeUCS2_GetSize\"\n  \"PyUnicodeUCS2_GetMax\"\n  \"_PyUnicodeUCS2_AsDefaultEncodedString\"\n  \"PyUnicodeUCS2_SetDefaultEncoding\"\n  \"PyUnicodeUCS2_Encode\"\n  \"PyUnicodeUCS2_AsEncodedObject\"\n  \"PyUnicodeUCS2_DecodeUTF16\"\n  \"PyUnicodeUCS2_EncodeUTF16\"\n  \"PyUnicodeUCS2_AsUnicodeEscapeString\"\n  \"PyUnicodeUCS2_EncodeUnicodeEscape\"\n  \"PyUnicodeUCS2_AsRawUnicodeEscapeString\"\n  \"PyUnicodeUCS2_EncodeLatin1\"\n  \"PyUnicodeUCS2_EncodeASCII\"\n  \"PyUnicodeUCS2_AsCharmapString\"\n  \"PyUnicodeUCS2_Partition\"\n  \"PyUnicodeUCS2_RPartition\"\n  \"PyUnicodeUCS2_Translate\"\n  \"PyUnicodeUCS2_Tailmatch\"\n  \"PyUnicode_AsDecodedObject\"\n  \"PyUnicode_Type\"\n\n; From python27_s.lib(unicodectype)\n  \"_PyUnicode_TypeRecords\"\n  \"_PyUnicodeUCS2_ToNumeric\"\n  \"_PyUnicodeUCS2_IsLowercase\"\n  \"_PyUnicodeUCS2_IsUppercase\"\n  \"_PyUnicodeUCS2_IsTitlecase\"\n  \"_PyUnicodeUCS2_IsWhitespace\"\n  \"_PyUnicodeUCS2_IsLinebreak\"\n  \"_PyUnicodeUCS2_ToLowercase\"\n  \"_PyUnicodeUCS2_ToUppercase\"\n  \"_PyUnicodeUCS2_ToTitlecase\"\n  \"_PyUnicodeUCS2_ToDecimalDigit\"\n  \"_PyUnicodeUCS2_ToDigit\"\n  \"_PyUnicodeUCS2_IsDecimalDigit\"\n  \"_PyUnicodeUCS2_IsDigit\"\n  \"_PyUnicodeUCS2_IsNumeric\"\n  \"_PyUnicodeUCS2_IsAlpha\"\n\n; From python27_s.lib(weakrefobject)\n  \"PyWeakref_NewRef\"\n  \"PyWeakref_NewProxy\"\n  \"PyObject_ClearWeakRefs\"\n  \"PyWeakref_GetObject\"\n  \"_PyWeakref_GetWeakrefCount\"\n  \"_PyWeakref_ClearRef\"\n  \"_PyWeakref_RefType\"\n  \"_PyWeakref_ProxyType\"\n  \"_PyWeakref_CallableProxyType\"\n\n; From python27_s.lib(Python-ast)\n;  \"init_ast\"\n  \"Module\"\n  \"Interactive\"\n  \"Expression\"\n  \"Suite\"\n  \"FunctionDef\"\n  \"ClassDef\"\n  \"Return\"\n  \"Delete\"\n  \"Assign\"\n  \"AugAssign\"\n  \"Print\"\n  \"For\"\n  \"While\"\n  \"If\"\n  \"With\"\n  \"Raise\"\n  \"TryExcept\"\n  \"TryFinally\"\n  \"Assert\"\n  \"Import\"\n  \"ImportFrom\"\n  \"Exec\"\n  \"Global\"\n  \"Expr\"\n  \"Pass\"\n  \"Break\"\n  \"Continue\"\n  \"BoolOp\"\n  \"BinOp\"\n  \"UnaryOp\"\n  \"Lambda\"\n  \"IfExp\"\n  \"Dict\"\n  \"ListComp\"\n  \"GeneratorExp\"\n  \"Yield\"\n  \"Compare\"\n  \"Call\"\n  \"Repr\"\n  \"Num\"\n  \"Str\"\n  \"Attribute\"\n  \"Subscript\"\n  \"Name\"\n  \"List\"\n  \"Tuple\"\n  \"Ellipsis\"\n  \"Slice\"\n  \"ExtSlice\"\n  \"Index\"\n  \"comprehension\"\n  \"excepthandler\"\n  \"arguments\"\n  \"keyword\"\n  \"alias\"\n  \"PyAST_mod2obj\"\n\n; From python27_s.lib(asdl)\n  \"asdl_seq_new\"\n  \"asdl_int_seq_new\"\n\n; From python27_s.lib(ast)\n  \"PyAST_FromNode\"\n\n; From python27_s.lib(bltinmodule)\n  \"_PyBuiltin_Init\"\n  \"Py_FileSystemDefaultEncoding\"\n\n; From python27_s.lib(exceptions)\n  \"PyUnicodeEncodeError_GetStart\"\n  \"PyUnicodeDecodeError_GetStart\"\n  \"PyUnicodeEncodeError_GetEnd\"\n  \"PyUnicodeDecodeError_GetEnd\"\n  \"_PyExc_Init\"\n  \"PyUnicodeDecodeError_Create\"\n  \"PyUnicodeEncodeError_Create\"\n  \"PyUnicodeTranslateError_Create\"\n  \"PyUnicodeEncodeError_GetEncoding\"\n  \"PyUnicodeDecodeError_GetEncoding\"\n  \"PyUnicodeEncodeError_GetObject\"\n  \"PyUnicodeDecodeError_GetObject\"\n  \"PyUnicodeTranslateError_GetObject\"\n  \"PyUnicodeTranslateError_GetStart\"\n  \"PyUnicodeEncodeError_SetStart\"\n  \"PyUnicodeDecodeError_SetStart\"\n  \"PyUnicodeTranslateError_SetStart\"\n  \"PyUnicodeTranslateError_GetEnd\"\n  \"PyUnicodeEncodeError_SetEnd\"\n  \"PyUnicodeDecodeError_SetEnd\"\n  \"PyUnicodeTranslateError_SetEnd\"\n  \"PyUnicodeEncodeError_GetReason\"\n  \"PyUnicodeDecodeError_GetReason\"\n  \"PyUnicodeTranslateError_GetReason\"\n  \"PyUnicodeEncodeError_SetReason\"\n  \"PyUnicodeDecodeError_SetReason\"\n  \"PyUnicodeTranslateError_SetReason\"\n  \"_PyExc_Fini\"\n  \"PyExc_BaseException\"\n  \"PyExc_Exception\"\n  \"PyExc_StandardError\"\n  \"PyExc_TypeError\"\n  \"PyExc_StopIteration\"\n  \"PyExc_GeneratorExit\"\n  \"PyExc_SystemExit\"\n  \"PyExc_KeyboardInterrupt\"\n  \"PyExc_ImportError\"\n  \"PyExc_EnvironmentError\"\n  \"PyExc_IOError\"\n  \"PyExc_OSError\"\n  \"PyExc_EOFError\"\n  \"PyExc_RuntimeError\"\n  \"PyExc_NotImplementedError\"\n  \"PyExc_NameError\"\n  \"PyExc_UnboundLocalError\"\n  \"PyExc_AttributeError\"\n  \"PyExc_IndexError\"\n  \"PyExc_SyntaxError\"\n  \"PyExc_IndentationError\"\n  \"PyExc_TabError\"\n  \"PyExc_LookupError\"\n  \"PyExc_KeyError\"\n  \"PyExc_ValueError\"\n  \"PyExc_UnicodeError\"\n  \"PyExc_UnicodeEncodeError\"\n  \"PyExc_UnicodeDecodeError\"\n  \"PyExc_UnicodeTranslateError\"\n  \"PyExc_AssertionError\"\n  \"PyExc_ArithmeticError\"\n  \"PyExc_FloatingPointError\"\n  \"PyExc_OverflowError\"\n  \"PyExc_ZeroDivisionError\"\n  \"PyExc_SystemError\"\n  \"PyExc_ReferenceError\"\n  \"PyExc_MemoryError\"\n  \"PyExc_Warning\"\n  \"PyExc_UserWarning\"\n  \"PyExc_DeprecationWarning\"\n  \"PyExc_PendingDeprecationWarning\"\n  \"PyExc_SyntaxWarning\"\n  \"PyExc_RuntimeWarning\"\n  \"PyExc_FutureWarning\"\n  \"PyExc_ImportWarning\"\n  \"PyExc_MemoryErrorInst\"\n\n; From python27_s.lib(ceval)\n  \"PyEval_EvalFrameEx\"\n  \"PyEval_CallObjectWithKeywords\"\n  \"PyEval_EvalCodeEx\"\n  \"PyEval_GetFrame\"\n  \"PyEval_CallObject\"\n  \"PyEval_SetProfile\"\n  \"PyEval_SetTrace\"\n  \"PyEval_GetBuiltins\"\n  \"PyEval_GetGlobals\"\n  \"PyEval_GetLocals\"\n  \"PyEval_GetRestricted\"\n  \"PyEval_MergeCompilerFlags\"\n  \"Py_FlushLine\"\n  \"Py_AddPendingCall\"\n  \"Py_MakePendingCalls\"\n  \"Py_SetRecursionLimit\"\n  \"Py_GetRecursionLimit\"\n  \"_Py_CheckRecursiveCall\"\n  \"PyEval_GetFuncName\"\n  \"PyEval_GetFuncDesc\"\n  \"PyEval_GetCallStats\"\n  \"PyEval_EvalFrame\"\n  \"PyEval_SaveThread\"\n  \"PyEval_RestoreThread\"\n  \"PyEval_ThreadsInitialized\"\n  \"PyEval_InitThreads\"\n  \"PyEval_AcquireLock\"\n  \"PyEval_ReleaseLock\"\n  \"PyEval_AcquireThread\"\n  \"PyEval_ReleaseThread\"\n  \"PyEval_ReInitThreads\"\n  \"_PyEval_SliceIndex\"\n  \"PyEval_EvalCode\"\n  \"_PyEval_CallTracing\"\n  \"_Py_CheckRecursionLimit\"\n  \"_Py_CheckInterval\"\n  \"_Py_Ticker\"\n\n; From python27_s.lib(compile)\n  \"_Py_Mangle\"\n  \"PyAST_Compile\"\n  \"PyNode_Compile\"\n  \"Py_OptimizeFlag\"\n\n; From python27_s.lib(codecs)\n  \"_PyCodec_Lookup\"\n  \"PyCodec_Encode\"\n  \"PyCodec_Decode\"\n  \"PyCodec_IgnoreErrors\"\n  \"PyCodec_ReplaceErrors\"\n  \"PyCodec_XMLCharRefReplaceErrors\"\n  \"PyCodec_BackslashReplaceErrors\"\n  \"PyCodec_Register\"\n  \"PyCodec_Encoder\"\n  \"PyCodec_Decoder\"\n  \"PyCodec_IncrementalEncoder\"\n  \"PyCodec_IncrementalDecoder\"\n  \"PyCodec_StreamReader\"\n  \"PyCodec_StreamWriter\"\n  \"PyCodec_RegisterError\"\n  \"PyCodec_LookupError\"\n  \"PyCodec_StrictErrors\"\n\n; From python27_s.lib(errors)\n  \"PyErr_SetNone\"\n  \"PyErr_SetString\"\n  \"PyErr_GivenExceptionMatches\"\n  \"PyErr_NormalizeException\"\n  \"PyErr_Fetch\"\n  \"PyErr_Clear\"\n  \"PyErr_NoMemory\"\n  \"PyErr_SetFromErrnoWithFilenameObject\"\n  \"PyErr_Format\"\n  \"PyErr_NewException\"\n  \"PyErr_WriteUnraisable\"\n  \"PyErr_SyntaxLocation\"\n  \"PyErr_ProgramText\"\n  \"PyErr_SetObject\"\n  \"PyErr_Occurred\"\n  \"PyErr_Restore\"\n  \"PyErr_ExceptionMatches\"\n  \"PyErr_BadArgument\"\n  \"PyErr_SetFromErrno\"\n  \"PyErr_SetFromErrnoWithFilename\"\n  \"PyErr_BadInternalCall\"\n  \"_PyErr_BadInternalCall\"\n  \"PyErr_Warn\"\n  \"PyErr_WarnExplicit\"\n\n; From python27_s.lib(frozen)\n  \"PyImport_FrozenModules\"\n\n; From python27_s.lib(frozenmain)\n  \"Py_FrozenMain\"\n\n; From python27_s.lib(future)\n  \"PyFuture_FromAST\"\n\n; From python27_s.lib(getargs)\n  \"PyArg_Parse\"\n  \"_PyArg_Parse_SizeT\"\n  \"PyArg_ParseTuple\"\n  \"_PyArg_ParseTuple_SizeT\"\n  \"PyArg_ParseTupleAndKeywords\"\n  \"_PyArg_ParseTupleAndKeywords_SizeT\"\n  \"PyArg_UnpackTuple\"\n  \"_PyArg_NoKeywords\"\n  \"PyArg_VaParse\"\n  \"PyArg_VaParseTupleAndKeywords\"\n  \"_PyArg_VaParse_SizeT\"\n  \"_PyArg_VaParseTupleAndKeywords_SizeT\"\n\n; From python27_s.lib(getcompiler)\n  \"Py_GetCompiler\"\n\n; From python27_s.lib(getcopyright)\n  \"Py_GetCopyright\"\n\n; From python27_s.lib(getplatform)\n  \"Py_GetPlatform\"\n\n; From python27_s.lib(getversion)\n  \"Py_GetVersion\"\n\n; From python27_s.lib(graminit)\n  \"_PyParser_Grammar\"\n\n; From python27_s.lib(import)\n  \"_PyImport_Init\"\n  \"_PyImportHooks_Init\"\n  \"PyImport_ImportModule\"\n  \"PyImport_Cleanup\"\n  \"_PyImport_FixupExtension\"\n  \"PyImport_AddModule\"\n  \"PyImport_ExecCodeModuleEx\"\n  \"PyImport_ImportFrozenModule\"\n  \"PyImport_ImportModuleEx\"\n  \"PyImport_ImportModuleLevel\"\n  \"PyImport_ReloadModule\"\n  \"PyImport_Import\"\n;  \"initimp\"\n  \"_PyImport_Fini\"\n  \"PyImport_GetMagicNumber\"\n  \"PyImport_ExecCodeModule\"\n  \"PyImport_GetModuleDict\"\n  \"_PyImport_FindModule\"\n  \"_PyImport_IsScript\"\n  \"_PyImport_ReInitLock\"\n  \"_PyImport_FindExtension\"\n  \"PyImport_AppendInittab\"\n  \"PyImport_ExtendInittab\"\n  \"PyImport_Inittab\"\n  \"_PyImport_Filetab\"\n\n; From python27_s.lib(importdl)\n  \"_PyImport_LoadDynamicModule\"\n\n; From python27_s.lib(marshal)\n  \"PyMarshal_ReadLongFromFile\"\n  \"PyMarshal_WriteObjectToString\"\n  \"PyMarshal_WriteLongToFile\"\n  \"PyMarshal_WriteObjectToFile\"\n  \"PyMarshal_ReadShortFromFile\"\n  \"PyMarshal_ReadObjectFromFile\"\n  \"PyMarshal_ReadLastObjectFromFile\"\n  \"PyMarshal_ReadObjectFromString\"\n  \"PyMarshal_Init\"\n\n; From python27_s.lib(modsupport)\n  \"Py_InitModule4\"\n  \"Py_BuildValue\"\n  \"_Py_BuildValue_SizeT\"\n  \"PyEval_CallFunction\"\n  \"PyEval_CallMethod\"\n  \"_Py_VaBuildValue_SizeT\"\n  \"Py_VaBuildValue\"\n  \"PyModule_AddObject\"\n  \"PyModule_AddIntConstant\"\n  \"PyModule_AddStringConstant\"\n  \"_Py_PackageContext\"\n\n; From python27_s.lib(mysnprintf)\n  \"PyOS_snprintf\"\n  \"PyOS_vsnprintf\"\n\n; From python27_s.lib(mystrtoul)\n  \"PyOS_strtoul\"\n  \"PyOS_strtol\"\n\n; From python27_s.lib(pyarena)\n  \"PyArena_New\"\n  \"PyArena_Free\"\n  \"PyArena_Malloc\"\n  \"PyArena_AddPyObject\"\n\n; From python27_s.lib(pyfpe)\n  \"PyFPE_dummy\"\n\n; From python27_s.lib(pystate)\n  \"PyInterpreterState_Clear\"\n  \"PyThreadState_Clear\"\n  \"_PyThread_CurrentFrames\"\n  \"PyGILState_Ensure\"\n  \"PyGILState_Release\"\n  \"PyInterpreterState_New\"\n  \"PyInterpreterState_Delete\"\n  \"PyThreadState_Delete\"\n  \"PyThreadState_New\"\n  \"PyThreadState_DeleteCurrent\"\n  \"PyThreadState_Get\"\n  \"PyThreadState_Swap\"\n  \"PyThreadState_GetDict\"\n  \"PyThreadState_SetAsyncExc\"\n  \"PyGILState_GetThisThreadState\"\n  \"PyInterpreterState_Head\"\n  \"PyInterpreterState_Next\"\n  \"PyInterpreterState_ThreadHead\"\n  \"PyThreadState_Next\"\n  \"_PyGILState_Init\"\n  \"_PyGILState_Fini\"\n  \"_PyThreadState_Current\"\n  \"_PyThreadState_GetFrame\"\n\n; From python27_s.lib(pystrtod)\n  \"PyOS_ascii_strtod\"\n  \"PyOS_ascii_formatd\"\n  \"PyOS_ascii_atof\"\n\n; From python27_s.lib(pythonrun)\n  \"Py_IgnoreEnvironmentFlag\"\n  \"Py_DebugFlag\"\n  \"Py_VerboseFlag\"\n  \"Py_NoSiteFlag\"\n  \"Py_InteractiveFlag\"\n  \"Py_FrozenFlag\"\n  \"Py_InitializeEx\"\n  \"Py_FatalError\"\n  \"Py_NewInterpreter\"\n  \"PyErr_Print\"\n  \"PyRun_InteractiveOneFlags\"\n  \"PyParser_ASTFromFile\"\n  \"PyRun_SimpleFileExFlags\"\n  \"PyRun_FileExFlags\"\n  \"Py_Exit\"\n  \"PyErr_PrintEx\"\n  \"PyErr_Display\"\n  \"Py_SetProgramName\"\n  \"Py_GetProgramName\"\n  \"Py_SetPythonHome\"\n  \"Py_GetPythonHome\"\n  \"Py_Initialize\"\n  \"Py_Finalize\"\n  \"Py_IsInitialized\"\n  \"Py_EndInterpreter\"\n  \"PyRun_AnyFileFlags\"\n  \"Py_FdIsInteractive\"\n  \"PyRun_InteractiveLoopFlags\"\n  \"PyRun_AnyFileExFlags\"\n  \"PyRun_SimpleStringFlags\"\n  \"PyRun_StringFlags\"\n  \"PyParser_ASTFromString\"\n  \"PyParser_SimpleParseStringFlags\"\n  \"PyParser_SimpleParseFileFlags\"\n  \"Py_CompileStringFlags\"\n  \"Py_SymtableString\"\n  \"Py_AtExit\"\n  \"PyOS_getsig\"\n  \"PyOS_setsig\"\n  \"PyParser_SetError\"\n  \"PyModule_GetWarningsModule\"\n  \"PyParser_SimpleParseStringFlagsFilename\"\n  \"PyParser_SimpleParseStringFilename\"\n  \"PyParser_SimpleParseFile\"\n  \"PyParser_SimpleParseString\"\n  \"PyRun_AnyFile\"\n  \"PyRun_AnyFileEx\"\n  \"PyRun_File\"\n  \"PyRun_FileEx\"\n  \"PyRun_FileFlags\"\n  \"PyRun_SimpleFile\"\n  \"PyRun_SimpleFileEx\"\n  \"PyRun_String\"\n  \"PyRun_SimpleString\"\n  \"Py_CompileString\"\n  \"PyRun_InteractiveOne\"\n  \"PyRun_InteractiveLoop\"\n  \"Py_UseClassExceptionsFlag\"\n  \"Py_UnicodeFlag\"\n  \"_Py_QnewFlag\"\n\n; From python27_s.lib(structmember)\n  \"PyMember_Get\"\n  \"PyMember_GetOne\"\n  \"PyMember_SetOne\"\n  \"PyMember_Set\"\n\n; From python27_s.lib(symtable)\n  \"PySymtable_Build\"\n  \"PySymtable_Free\"\n  \"PyST_GetScope\"\n  \"PySymtable_Lookup\"\n  \"PySTEntry_Type\"\n\n; From python27_s.lib(sysmodule)\n  \"_PySys_Init\"\n  \"PySys_WriteStderr\"\n  \"PySys_SetPath\"\n  \"PySys_SetArgv\"\n  \"PySys_WriteStdout\"\n  \"Py_SubversionRevision\"\n  \"Py_SubversionShortBranch\"\n  \"PySys_GetObject\"\n  \"PySys_SetObject\"\n  \"PySys_GetFile\"\n  \"PySys_ResetWarnOptions\"\n  \"PySys_AddWarnOption\"\n\n; From python27_s.lib(traceback)\n  \"PyTraceBack_Here\"\n  \"PyTraceBack_Print\"\n  \"PyTraceBack_Type\"\n\n; From python27_s.lib(getopt)\n  \"_PyOS_GetOpt\"\n  \"_PyOS_opterr\"\n  \"_PyOS_optind\"\n  \"_PyOS_optarg\"\n\n; From python27_s.lib(dynload_shlib)\n  \"_PyImport_DynLoadFiletab\"\n  \"_PyImport_GetDynLoadFunc\"\n\n; From python27_s.lib(thread)\n  \"PyThread_delete_key_value\"\n  \"PyThread_init_thread\"\n  \"PyThread_start_new_thread\"\n  \"PyThread_exit_thread\"\n  \"PyThread_get_thread_ident\"\n  \"PyThread_allocate_lock\"\n  \"PyThread_free_lock\"\n  \"PyThread_acquire_lock\"\n  \"PyThread_release_lock\"\n  \"PyThread_get_stacksize\"\n  \"PyThread_set_stacksize\"\n  \"PyThread_create_key\"\n  \"PyThread_delete_key\"\n  \"PyThread_set_key_value\"\n  \"PyThread_get_key_value\"\n\n; From python27_s.lib(gcmodule)\n;  \"initgc\"\n  \"_PyObject_GC_New\"\n  \"_PyObject_GC_NewVar\"\n  \"PyGC_Collect\"\n  \"_PyObject_GC_Resize\"\n  \"_PyObject_GC_Malloc\"\n  \"PyObject_GC_Track\"\n  \"PyObject_GC_UnTrack\"\n  \"PyObject_GC_Del\"\n  \"_PyGC_Dump\"\n  \"_PyObject_GC_Track\"\n  \"_PyObject_GC_UnTrack\"\n  \"_PyObject_GC_Del\"\n  \"_PyGC_generation0\"\n\n; From python27_s.lib(signalmodule)\n;  \"initsignal\"\n  \"PyErr_CheckSignals\"\n  \"PyErr_SetInterrupt\"\n  \"PyOS_FiniInterrupts\"\n  \"PyOS_InterruptOccurred\"\n  \"PyOS_InitInterrupts\"\n  \"PyOS_AfterFork\"\n\n; From python27_s.lib(posixmodule)\n;  \"initos2\"\n\n; From python27_s.lib(threadmodule)\n;  \"initthread\"\n\n; From python27_s.lib(arraymodule)\n;  \"initarray\"\n;  \"array_methods\"\n\n; From python27_s.lib(binascii)\n;  \"initbinascii\"\n\n; From python27_s.lib(cmathmodule)\n;  \"initcmath\"\n\n; From python27_s.lib(_codecsmodule)\n;  \"init_codecs\"\n\n; From python27_s.lib(collectionsmodule)\n;  \"initcollections\"\n  \"dequeiter_type\"\n  \"dequereviter_type\"\n\n; From python27_s.lib(cPickle)\n;  \"initcPickle\"\n;  \"fast_save_leave\"\n\n; From python27_s.lib(cStringIO)\n;  \"initcStringIO\"\n\n; From python27_s.lib(_csv)\n;  \"init_csv\"\n\n; From python27_s.lib(datetimemodule)\n;  \"initdatetime\"\n\n; From python27_s.lib(dlmodule)\n;  \"initdl\"\n\n; From python27_s.lib(errnomodule)\n;  \"initerrno\"\n\n; From python27_s.lib(fcntlmodule)\n;  \"initfcntl\"\n\n; From python27_s.lib(_functoolsmodule)\n;  \"init_functools\"\n\n; From python27_s.lib(_heapqmodule)\n;  \"init_heapq\"\n\n; From python27_s.lib(imageop)\n;  \"initimageop\"\n\n; From python27_s.lib(itertoolsmodule)\n;  \"inititertools\"\n\n; From python27_s.lib(_localemodule)\n;  \"init_locale\"\n\n; From python27_s.lib(mathmodule)\n;  \"initmath\"\n\n; From python27_s.lib(md5)\n  \"md5_finish\"\n  \"md5_init\"\n  \"md5_append\"\n\n; From python27_s.lib(md5module)\n;  \"init_md5\"\n\n; From python27_s.lib(operator)\n;  \"initoperator\"\n\n; From python27_s.lib(_randommodule)\n;  \"init_random\"\n\n; From python27_s.lib(rgbimgmodule)\n;  \"initrgbimg\"\n\n; From python27_s.lib(shamodule)\n;  \"init_sha\"\n\n; From python27_s.lib(sha256module)\n;  \"init_sha256\"\n\n; From python27_s.lib(sha512module)\n;  \"init_sha512\"\n\n; From python27_s.lib(_sre)\n;  \"init_sre\"\n\n; From python27_s.lib(stropmodule)\n;  \"initstrop\"\n\n; From python27_s.lib(_struct)\n;  \"init_struct\"\n\n; From python27_s.lib(symtablemodule)\n;  \"init_symtable\"\n\n; From python27_s.lib(termios)\n;  \"inittermios\"\n\n; From python27_s.lib(timemodule)\n;  \"inittime\"\n  \"_PyTime_DoubleToTimet\"\n;  \"inittimezone\"\n\n; From python27_s.lib(timingmodule)\n;  \"inittiming\"\n\n; From python27_s.lib(_weakref)\n;  \"init_weakref\"\n\n; From python27_s.lib(xxsubtype)\n;  \"initxxsubtype\"\n\n; From python27_s.lib(zipimport)\n;  \"initzipimport\"\n",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/PC/os2emx/dlfcn.c": "/* -*- C -*- ***********************************************\nCopyright 1991-1995 by Stichting Mathematisch Centrum, Amsterdam,\nThe Netherlands.\n\n                        All Rights Reserved\n\nPermission to use, copy, modify, and distribute this software and its\ndocumentation for any purpose and without fee is hereby granted,\nprovided that the above copyright notice appear in all copies and that\nboth that copyright notice and this permission notice appear in\nsupporting documentation, and that the names of Stichting Mathematisch\nCentrum or CWI or Corporation for National Research Initiatives or\nCNRI not be used in advertising or publicity pertaining to\ndistribution of the software without specific, written prior\npermission.\n\nWhile CWI is the initial source for this software, a modified version\nis made available by the Corporation for National Research Initiatives\n(CNRI) at the Internet address ftp://ftp.python.org.\n\nSTICHTING MATHEMATISCH CENTRUM AND CNRI DISCLAIM ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS, IN NO EVENT SHALL STICHTING MATHEMATISCH\nCENTRUM OR CNRI BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL\nDAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR\nPROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n\n******************************************************************/\n\n/* This library implements dlopen() - Unix-like dynamic linking\n * emulation functions for OS/2 using DosLoadModule() and company.\n */\n\n#define INCL_DOS\n#define INCL_DOSERRORS\n#define INCL_DOSSESMGR\n#define INCL_WINPROGRAMLIST\n#define INCL_WINFRAMEMGR\n#include <os2.h>\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <malloc.h>\n\ntypedef struct _track_rec {\n    char *name;\n    HMODULE handle;\n    void *id;\n    struct _track_rec *next;\n} tDLLchain, *DLLchain;\n\nstatic DLLchain dlload = NULL;  /* A simple chained list of DLL names */\nstatic char dlerr [256];        /* last error text string */\nstatic void *last_id;\n\nstatic DLLchain find_id(void *id)\n{\n    DLLchain tmp;\n\n    for (tmp = dlload; tmp; tmp = tmp->next)\n        if (id == tmp->id)\n            return tmp;\n\n    return NULL;\n}\n\n/* load a dynamic-link library and return handle */\nvoid *dlopen(char *filename, int flags)\n{\n    HMODULE hm;\n    DLLchain tmp;\n    char err[256];\n    char *errtxt;\n    int rc = 0, set_chain = 0;\n\n    for (tmp = dlload; tmp; tmp = tmp->next)\n        if (strnicmp(tmp->name, filename, 999) == 0)\n            break;\n\n    if (!tmp)\n    {\n        tmp = (DLLchain) malloc(sizeof(tDLLchain));\n        if (!tmp)\n            goto nomem;\n        tmp->name = strdup(filename);\n        tmp->next = dlload;\n        set_chain = 1;\n    }\n\n    switch (rc = DosLoadModule((PSZ)&err, sizeof(err), filename, &hm))\n    {\n        case NO_ERROR:\n            tmp->handle = hm;\n            if (set_chain)\n            {\n                do\n                    last_id++;\n                while ((last_id == 0) || (find_id(last_id)));\n                tmp->id = last_id;\n                dlload = tmp;\n            }\n            return tmp->id;\n        case ERROR_FILE_NOT_FOUND:\n        case ERROR_PATH_NOT_FOUND:\n            errtxt = \"module `%s' not found\";\n            break;\n        case ERROR_TOO_MANY_OPEN_FILES:\n        case ERROR_NOT_ENOUGH_MEMORY:\n        case ERROR_SHARING_BUFFER_EXCEEDED:\nnomem:\n            errtxt = \"out of system resources\";\n            break;\n        case ERROR_ACCESS_DENIED:\n            errtxt = \"access denied\";\n            break;\n        case ERROR_BAD_FORMAT:\n        case ERROR_INVALID_SEGMENT_NUMBER:\n        case ERROR_INVALID_ORDINAL:\n        case ERROR_INVALID_MODULETYPE:\n        case ERROR_INVALID_EXE_SIGNATURE:\n        case ERROR_EXE_MARKED_INVALID:\n        case ERROR_ITERATED_DATA_EXCEEDS_64K:\n        case ERROR_INVALID_MINALLOCSIZE:\n        case ERROR_INVALID_SEGDPL:\n        case ERROR_AUTODATASEG_EXCEEDS_64K:\n        case ERROR_RELOCSRC_CHAIN_EXCEEDS_SEGLIMIT:\n            errtxt = \"invalid module format\";\n            break;\n        case ERROR_INVALID_NAME:\n            errtxt = \"filename doesn't match module name\";\n            break;\n        case ERROR_SHARING_VIOLATION:\n        case ERROR_LOCK_VIOLATION:\n            errtxt = \"sharing violation\";\n            break;\n        case ERROR_INIT_ROUTINE_FAILED:\n            errtxt = \"module initialization failed\";\n            break;\n        default:\n            errtxt = \"cause `%s', error code = %d\";\n            break;\n    }\n    snprintf(dlerr, sizeof(dlerr), errtxt, &err, rc);\n    if (tmp)\n    {\n        if (tmp->name)\n            free(tmp->name);\n        free(tmp);\n    }\n    return 0;\n}\n\n/* return a pointer to the `symbol' in DLL */\nvoid *dlsym(void *handle, char *symbol)\n{\n    int rc = 0;\n    PFN addr;\n    char *errtxt;\n    int symord = 0;\n    DLLchain tmp = find_id(handle);\n\n    if (!tmp)\n        goto inv_handle;\n\n    if (*symbol == '#')\n        symord = atoi(symbol + 1);\n\n    switch (rc = DosQueryProcAddr(tmp->handle, symord, symbol, &addr))\n    {\n        case NO_ERROR:\n            return (void *)addr;\n        case ERROR_INVALID_HANDLE:\ninv_handle:\n            errtxt = \"invalid module handle\";\n            break;\n        case ERROR_PROC_NOT_FOUND:\n        case ERROR_INVALID_NAME:\n            errtxt = \"no symbol `%s' in module\";\n            break;\n        default:\n            errtxt = \"symbol `%s', error code = %d\";\n            break;\n    }\n    snprintf(dlerr, sizeof(dlerr), errtxt, symbol, rc);\n    return NULL;\n}\n\n/* free dynamically-linked library */\nint dlclose(void *handle)\n{\n    int rc;\n    DLLchain tmp = find_id(handle);\n\n    if (!tmp)\n        goto inv_handle;\n\n    switch (rc = DosFreeModule(tmp->handle))\n    {\n        case NO_ERROR:\n            free(tmp->name);\n            dlload = tmp->next;\n            free(tmp);\n            return 0;\n        case ERROR_INVALID_HANDLE:\ninv_handle:\n            strcpy(dlerr, \"invalid module handle\");\n            return -1;\n        case ERROR_INVALID_ACCESS:\n            strcpy(dlerr, \"access denied\");\n            return -1;\n        default:\n            return -1;\n    }\n}\n\n/* return a string describing last occurred dl error */\nchar *dlerror()\n{\n    return dlerr;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Python/dynload_shlib.c": "\n/* Support for dynamic loading of extension modules */\n\n#include \"Python.h\"\n#include \"importdl.h\"\n\n#include <sys/types.h>\n#include <sys/stat.h>\n\n#if defined(__NetBSD__)\n#include <sys/param.h>\n#if (NetBSD < 199712)\n#include <nlist.h>\n#include <link.h>\n#define dlerror() \"error in dynamic linking\"\n#endif\n#endif /* NetBSD */\n\n#ifdef HAVE_DLFCN_H\n#include <dlfcn.h>\n#else\n#if defined(PYOS_OS2) && defined(PYCC_GCC)\n#include \"dlfcn.h\"\n#endif\n#endif\n\n#if (defined(__OpenBSD__) || defined(__NetBSD__)) && !defined(__ELF__)\n#define LEAD_UNDERSCORE \"_\"\n#else\n#define LEAD_UNDERSCORE \"\"\n#endif\n\n\nconst struct filedescr _PyImport_DynLoadFiletab[] = {\n#ifdef __CYGWIN__\n    {\".dll\", \"rb\", C_EXTENSION},\n    {\"module.dll\", \"rb\", C_EXTENSION},\n#else\n#if defined(PYOS_OS2) && defined(PYCC_GCC)\n    {\".pyd\", \"rb\", C_EXTENSION},\n    {\".dll\", \"rb\", C_EXTENSION},\n#else\n#ifdef __VMS\n    {\".exe\", \"rb\", C_EXTENSION},\n    {\".EXE\", \"rb\", C_EXTENSION},\n    {\"module.exe\", \"rb\", C_EXTENSION},\n    {\"MODULE.EXE\", \"rb\", C_EXTENSION},\n#else\n    {\".so\", \"rb\", C_EXTENSION},\n    {\"module.so\", \"rb\", C_EXTENSION},\n#endif\n#endif\n#endif\n    {0, 0}\n};\n\nstatic struct {\n    dev_t dev;\n#ifdef __VMS\n    ino_t ino[3];\n#else\n    ino_t ino;\n#endif\n    void *handle;\n} handles[128];\nstatic int nhandles = 0;\n\n\ndl_funcptr _PyImport_GetDynLoadFunc(const char *fqname, const char *shortname,\n                                    const char *pathname, FILE *fp)\n{\n    dl_funcptr p;\n    void *handle;\n    char funcname[258];\n    char pathbuf[260];\n    int dlopenflags=0;\n\n    if (strchr(pathname, '/') == NULL) {\n        /* Prefix bare filename with \"./\" */\n        PyOS_snprintf(pathbuf, sizeof(pathbuf), \"./%-.255s\", pathname);\n        pathname = pathbuf;\n    }\n\n    PyOS_snprintf(funcname, sizeof(funcname),\n                  LEAD_UNDERSCORE \"init%.200s\", shortname);\n\n    if (fp != NULL) {\n        int i;\n        struct stat statb;\n        fstat(fileno(fp), &statb);\n        for (i = 0; i < nhandles; i++) {\n            if (statb.st_dev == handles[i].dev &&\n                statb.st_ino == handles[i].ino) {\n                p = (dl_funcptr) dlsym(handles[i].handle,\n                                       funcname);\n                return p;\n            }\n        }\n        if (nhandles < 128) {\n            handles[nhandles].dev = statb.st_dev;\n#ifdef __VMS\n            handles[nhandles].ino[0] = statb.st_ino[0];\n            handles[nhandles].ino[1] = statb.st_ino[1];\n            handles[nhandles].ino[2] = statb.st_ino[2];\n#else\n            handles[nhandles].ino = statb.st_ino;\n#endif\n        }\n    }\n\n#if !(defined(PYOS_OS2) && defined(PYCC_GCC))\n    dlopenflags = PyThreadState_GET()->interp->dlopenflags;\n#endif\n\n    if (Py_VerboseFlag)\n        PySys_WriteStderr(\"dlopen(\\\"%s\\\", %x);\\n\", pathname,\n                          dlopenflags);\n\n#ifdef __VMS\n    /* VMS currently don't allow a pathname, use a logical name instead */\n    /* Concatenate 'python_module_' and shortname */\n    /* so \"import vms.bar\" will use the logical python_module_bar */\n    /* As C module use only one name space this is probably not a */\n    /* important limitation */\n    PyOS_snprintf(pathbuf, sizeof(pathbuf), \"python_module_%-.200s\",\n                  shortname);\n    pathname = pathbuf;\n#endif\n\n    handle = dlopen(pathname, dlopenflags);\n\n    if (handle == NULL) {\n        const char *error = dlerror();\n        if (error == NULL)\n            error = \"unknown dlopen() error\";\n        PyErr_SetString(PyExc_ImportError, error);\n        return NULL;\n    }\n    if (fp != NULL && nhandles < 128)\n        handles[nhandles++].handle = handle;\n    p = (dl_funcptr) dlsym(handle, funcname);\n    return p;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/dlmodule.c": "\n/* dl module */\n\n#include \"Python.h\"\n\n#include <dlfcn.h>\n\n#ifdef __VMS\n#include <unistd.h>\n#endif\n\n#ifndef RTLD_LAZY\n#define RTLD_LAZY 1\n#endif\n\ntypedef void *PyUnivPtr;\ntypedef struct {\n    PyObject_HEAD\n    PyUnivPtr *dl_handle;\n} dlobject;\n\nstatic PyTypeObject Dltype;\n\nstatic PyObject *Dlerror;\n\nstatic PyObject *\nnewdlobject(PyUnivPtr *handle)\n{\n    dlobject *xp;\n    xp = PyObject_New(dlobject, &Dltype);\n    if (xp == NULL)\n        return NULL;\n    xp->dl_handle = handle;\n    return (PyObject *)xp;\n}\n\nstatic void\ndl_dealloc(dlobject *xp)\n{\n    if (xp->dl_handle != NULL)\n        dlclose(xp->dl_handle);\n    PyObject_Del(xp);\n}\n\nstatic PyObject *\ndl_close(dlobject *xp)\n{\n    if (xp->dl_handle != NULL) {\n        dlclose(xp->dl_handle);\n        xp->dl_handle = NULL;\n    }\n    Py_INCREF(Py_None);\n    return Py_None;\n}\n\nstatic PyObject *\ndl_sym(dlobject *xp, PyObject *args)\n{\n    char *name;\n    PyUnivPtr *func;\n    if (PyString_Check(args)) {\n        name = PyString_AS_STRING(args);\n    } else {\n        PyErr_Format(PyExc_TypeError, \"expected string, found %.200s\",\n                     Py_TYPE(args)->tp_name);\n        return NULL;\n    }\n    func = dlsym(xp->dl_handle, name);\n    if (func == NULL) {\n        Py_INCREF(Py_None);\n        return Py_None;\n    }\n    return PyInt_FromLong((long)func);\n}\n\nstatic PyObject *\ndl_call(dlobject *xp, PyObject *args)\n{\n    PyObject *name;\n    long (*func)(long, long, long, long, long,\n                 long, long, long, long, long);\n    long alist[10];\n    long res;\n    Py_ssize_t i;\n    Py_ssize_t n = PyTuple_Size(args);\n    if (n < 1) {\n        PyErr_SetString(PyExc_TypeError, \"at least a name is needed\");\n        return NULL;\n    }\n    name = PyTuple_GetItem(args, 0);\n    if (!PyString_Check(name)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"function name must be a string\");\n        return NULL;\n    }\n    func = (long (*)(long, long, long, long, long,\n                     long, long, long, long, long))\n      dlsym(xp->dl_handle, PyString_AsString(name));\n    if (func == NULL) {\n        PyErr_SetString(PyExc_ValueError, dlerror());\n        return NULL;\n    }\n    if (n-1 > 10) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"too many arguments (max 10)\");\n        return NULL;\n    }\n    for (i = 1; i < n; i++) {\n        PyObject *v = PyTuple_GetItem(args, i);\n        if (_PyAnyInt_Check(v)) {\n            alist[i-1] = PyInt_AsLong(v);\n            if (alist[i-1] == -1 && PyErr_Occurred())\n                return NULL;\n        }\n        else if (PyString_Check(v))\n            alist[i-1] = (long)PyString_AsString(v);\n        else if (v == Py_None)\n            alist[i-1] = (long) ((char *)NULL);\n        else {\n            PyErr_SetString(PyExc_TypeError,\n                       \"arguments must be int, string or None\");\n            return NULL;\n        }\n    }\n    for (; i <= 10; i++)\n        alist[i-1] = 0;\n    res = (*func)(alist[0], alist[1], alist[2], alist[3], alist[4],\n                  alist[5], alist[6], alist[7], alist[8], alist[9]);\n    return PyInt_FromLong(res);\n}\n\nstatic PyMethodDef dlobject_methods[] = {\n    {\"call\",            (PyCFunction)dl_call, METH_VARARGS},\n    {\"sym\",             (PyCFunction)dl_sym, METH_O},\n    {\"close\",           (PyCFunction)dl_close, METH_NOARGS},\n    {NULL,              NULL}                    /* Sentinel */\n};\n\nstatic PyObject *\ndl_getattr(dlobject *xp, char *name)\n{\n    return Py_FindMethod(dlobject_methods, (PyObject *)xp, name);\n}\n\n\nstatic PyTypeObject Dltype = {\n    PyVarObject_HEAD_INIT(NULL, 0)\n    \"dl.dl\",                    /*tp_name*/\n    sizeof(dlobject),           /*tp_basicsize*/\n    0,                          /*tp_itemsize*/\n    /* methods */\n    (destructor)dl_dealloc, /*tp_dealloc*/\n    0,                          /*tp_print*/\n    (getattrfunc)dl_getattr,/*tp_getattr*/\n    0,                          /*tp_setattr*/\n    0,                          /*tp_compare*/\n    0,                          /*tp_repr*/\n    0,                          /*tp_as_number*/\n    0,                          /*tp_as_sequence*/\n    0,                          /*tp_as_mapping*/\n    0,                          /*tp_hash*/\n};\n\nstatic PyObject *\ndl_open(PyObject *self, PyObject *args)\n{\n    char *name;\n    int mode;\n    PyUnivPtr *handle;\n    if (sizeof(int) != sizeof(long) ||\n        sizeof(long) != sizeof(char *)) {\n        PyErr_SetString(PyExc_SystemError,\n \"module dl requires sizeof(int) == sizeof(long) == sizeof(char*)\");\n                return NULL;\n    }\n\n    if (PyArg_ParseTuple(args, \"z:open\", &name))\n        mode = RTLD_LAZY;\n    else {\n        PyErr_Clear();\n        if (!PyArg_ParseTuple(args, \"zi:open\", &name, &mode))\n            return NULL;\n#ifndef RTLD_NOW\n        if (mode != RTLD_LAZY) {\n            PyErr_SetString(PyExc_ValueError, \"mode must be 1\");\n            return NULL;\n        }\n#endif\n    }\n    handle = dlopen(name, mode);\n    if (handle == NULL) {\n        char *errmsg = dlerror();\n        if (!errmsg)\n            errmsg = \"dlopen() error\";\n        PyErr_SetString(Dlerror, errmsg);\n        return NULL;\n    }\n#ifdef __VMS\n    /*   Under OpenVMS dlopen doesn't do any check, just save the name\n     * for later use, so we have to check if the file is readable,\n     * the name can be a logical or a file from SYS$SHARE.\n     */\n    if (access(name, R_OK)) {\n        char fname[strlen(name) + 20];\n        strcpy(fname, \"SYS$SHARE:\");\n        strcat(fname, name);\n        strcat(fname, \".EXE\");\n        if (access(fname, R_OK)) {\n            dlclose(handle);\n            PyErr_SetString(Dlerror,\n                \"File not found or protection violation\");\n            return NULL;\n        }\n    }\n#endif\n    return newdlobject(handle);\n}\n\nstatic PyMethodDef dl_methods[] = {\n    {\"open\",            dl_open, METH_VARARGS},\n    {NULL,              NULL}           /* sentinel */\n};\n\n/* From socketmodule.c\n * Convenience routine to export an integer value.\n *\n * Errors are silently ignored, for better or for worse...\n */\nstatic void\ninsint(PyObject *d, char *name, int value)\n{\n    PyObject *v = PyInt_FromLong((long) value);\n    if (!v || PyDict_SetItemString(d, name, v))\n        PyErr_Clear();\n\n    Py_XDECREF(v);\n}\n\nPyMODINIT_FUNC\ninitdl(void)\n{\n    PyObject *m, *d, *x;\n\n    if (PyErr_WarnPy3k(\"the dl module has been removed in \"\n                        \"Python 3.0; use the ctypes module instead\", 2) < 0)\n        return;\n\n    /* Initialize object type */\n    Py_TYPE(&Dltype) = &PyType_Type;\n\n    /* Create the module and add the functions */\n    m = Py_InitModule(\"dl\", dl_methods);\n    if (m == NULL)\n        return;\n\n    /* Add some symbolic constants to the module */\n    d = PyModule_GetDict(m);\n    Dlerror = x = PyErr_NewException(\"dl.error\", NULL, NULL);\n    PyDict_SetItemString(d, \"error\", x);\n    x = PyInt_FromLong((long)RTLD_LAZY);\n    PyDict_SetItemString(d, \"RTLD_LAZY\", x);\n#define INSINT(X)    insint(d,#X,X)\n#ifdef RTLD_NOW\n    INSINT(RTLD_NOW);\n#endif\n#ifdef RTLD_NOLOAD\n    INSINT(RTLD_NOLOAD);\n#endif\n#ifdef RTLD_GLOBAL\n    INSINT(RTLD_GLOBAL);\n#endif\n#ifdef RTLD_LOCAL\n    INSINT(RTLD_LOCAL);\n#endif\n#ifdef RTLD_PARENT\n    INSINT(RTLD_PARENT);\n#endif\n#ifdef RTLD_GROUP\n    INSINT(RTLD_GROUP);\n#endif\n#ifdef RTLD_WORLD\n    INSINT(RTLD_WORLD);\n#endif\n#ifdef RTLD_NODELETE\n    INSINT(RTLD_NODELETE);\n#endif\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_ctypes/ctypes_dlfcn.h": "#ifndef _CTYPES_DLFCN_H_\n#define _CTYPES_DLFCN_H_\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif /* __cplusplus */\n\n#ifndef MS_WIN32\n\n#include <dlfcn.h>\n\n#ifndef CTYPES_DARWIN_DLFCN\n\n#define ctypes_dlsym dlsym\n#define ctypes_dlerror dlerror\n#define ctypes_dlopen dlopen\n#define ctypes_dlclose dlclose\n#define ctypes_dladdr dladdr\n\n#endif /* !CTYPES_DARWIN_DLFCN */\n\n#endif /* !MS_WIN32 */\n\n#ifdef __cplusplus\n}\n#endif /* __cplusplus */\n#endif /* _CTYPES_DLFCN_H_ */\n",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_ctypes/_ctypes.c": "/*****************************************************************\n  This file contains remnant Python 2.3 compatibility code that is no longer\n  strictly required.\n *****************************************************************/\n\n\n/*\n  ToDo:\n\n  Get rid of the checker (and also the converters) field in PyCFuncPtrObject and\n  StgDictObject, and replace them by slot functions in StgDictObject.\n\n  think about a buffer-like object (memory? bytes?)\n\n  Should POINTER(c_char) and POINTER(c_wchar) have a .value property?\n  What about c_char and c_wchar arrays then?\n\n  Add from_mmap, from_file, from_string metaclass methods.\n\n  Maybe we can get away with from_file (calls read) and with a from_buffer\n  method?\n\n  And what about the to_mmap, to_file, to_str(?) methods?  They would clobber\n  the namespace, probably. So, functions instead? And we already have memmove...\n*/\n\n/*\n\nName                    methods, members, getsets\n==============================================================================\n\nPyCStructType_Type              __new__(), from_address(), __mul__(), from_param()\nUnionType_Type          __new__(), from_address(), __mul__(), from_param()\nPyCPointerType_Type     __new__(), from_address(), __mul__(), from_param(), set_type()\nPyCArrayType_Type               __new__(), from_address(), __mul__(), from_param()\nPyCSimpleType_Type              __new__(), from_address(), __mul__(), from_param()\n\nPyCData_Type\n  Struct_Type           __new__(), __init__()\n  PyCPointer_Type               __new__(), __init__(), _as_parameter_, contents\n  PyCArray_Type         __new__(), __init__(), _as_parameter_, __get/setitem__(), __len__()\n  Simple_Type           __new__(), __init__(), _as_parameter_\n\nPyCField_Type\nPyCStgDict_Type\n\n==============================================================================\n\nclass methods\n-------------\n\nIt has some similarity to the byref() construct compared to pointer()\nfrom_address(addr)\n    - construct an instance from a given memory block (sharing this memory block)\n\nfrom_param(obj)\n    - typecheck and convert a Python object into a C function call parameter\n      The result may be an instance of the type, or an integer or tuple\n      (typecode, value[, obj])\n\ninstance methods/properties\n---------------------------\n\n_as_parameter_\n    - convert self into a C function call parameter\n      This is either an integer, or a 3-tuple (typecode, value, obj)\n\nfunctions\n---------\n\nsizeof(cdata)\n    - return the number of bytes the buffer contains\n\nsizeof(ctype)\n    - return the number of bytes the buffer of an instance would contain\n\nbyref(cdata)\n\naddressof(cdata)\n\npointer(cdata)\n\nPOINTER(ctype)\n\nbytes(cdata)\n    - return the buffer contents as a sequence of bytes (which is currently a string)\n\n*/\n\n/*\n * PyCStgDict_Type\n * PyCStructType_Type\n * UnionType_Type\n * PyCPointerType_Type\n * PyCArrayType_Type\n * PyCSimpleType_Type\n *\n * PyCData_Type\n * Struct_Type\n * Union_Type\n * PyCArray_Type\n * Simple_Type\n * PyCPointer_Type\n * PyCField_Type\n *\n */\n\n#define PY_SSIZE_T_CLEAN\n\n#include \"Python.h\"\n#include \"structmember.h\"\n\n#include <ffi.h>\n#ifdef MS_WIN32\n#include <windows.h>\n#include <malloc.h>\n#ifndef IS_INTRESOURCE\n#define IS_INTRESOURCE(x) (((size_t)(x) >> 16) == 0)\n#endif\n# ifdef _WIN32_WCE\n/* Unlike desktop Windows, WinCE has both W and A variants of\n   GetProcAddress, but the default W version is not what we want */\n#  undef GetProcAddress\n#  define GetProcAddress GetProcAddressA\n# endif\n#else\n#include \"ctypes_dlfcn.h\"\n#endif\n#include \"ctypes.h\"\n\n/* Definition matching cfield.c:724 */\n#ifndef HAVE_C99_BOOL\n#undef SIZEOF__BOOL\n#define SIZEOF__BOOL 1\n#endif\n\nPyObject *PyExc_ArgError;\n\n/* This dict maps ctypes types to POINTER types */\nPyObject *_ctypes_ptrtype_cache;\n\nstatic PyTypeObject Simple_Type;\n\n/* a callable object used for unpickling */\nstatic PyObject *_unpickle;\n\nchar *_ctypes_conversion_encoding = NULL;\nchar *_ctypes_conversion_errors = NULL;\n\n\n/****************************************************************/\n\n#if (PY_VERSION_HEX < 0x02040000)\n/* Only in Python 2.4 and up */\nstatic PyObject *\nPyTuple_Pack(int n, ...)\n{\n    int i;\n    PyObject *o;\n    PyObject *result;\n    PyObject **items;\n    va_list vargs;\n\n    va_start(vargs, n);\n    result = PyTuple_New(n);\n    if (result == NULL)\n        return NULL;\n    items = ((PyTupleObject *)result)->ob_item;\n    for (i = 0; i < n; i++) {\n        o = va_arg(vargs, PyObject *);\n        Py_INCREF(o);\n        items[i] = o;\n    }\n    va_end(vargs);\n    return result;\n}\n#endif\n\n/****************************************************************/\n\ntypedef struct {\n    PyObject_HEAD\n    PyObject *key;\n    PyObject *dict;\n} DictRemoverObject;\n\nstatic void\n_DictRemover_dealloc(PyObject *_self)\n{\n    DictRemoverObject *self = (DictRemoverObject *)_self;\n    Py_XDECREF(self->key);\n    Py_XDECREF(self->dict);\n    Py_TYPE(self)->tp_free(_self);\n}\n\nstatic PyObject *\n_DictRemover_call(PyObject *_self, PyObject *args, PyObject *kw)\n{\n    DictRemoverObject *self = (DictRemoverObject *)_self;\n    if (self->key && self->dict) {\n        if (-1 == PyDict_DelItem(self->dict, self->key))\n            /* XXX Error context */\n            PyErr_WriteUnraisable(Py_None);\n        Py_CLEAR(self->key);\n        Py_CLEAR(self->dict);\n    }\n    Py_INCREF(Py_None);\n    return Py_None;\n}\n\nstatic PyTypeObject DictRemover_Type = {\n    PyVarObject_HEAD_INIT(NULL, 0)\n    \"_ctypes.DictRemover\",                      /* tp_name */\n    sizeof(DictRemoverObject),                  /* tp_basicsize */\n    0,                                          /* tp_itemsize */\n    _DictRemover_dealloc,                       /* tp_dealloc */\n    0,                                          /* tp_print */\n    0,                                          /* tp_getattr */\n    0,                                          /* tp_setattr */\n    0,                                          /* tp_compare */\n    0,                                          /* tp_repr */\n    0,                                          /* tp_as_number */\n    0,                                          /* tp_as_sequence */\n    0,                                          /* tp_as_mapping */\n    0,                                          /* tp_hash */\n    _DictRemover_call,                          /* tp_call */\n    0,                                          /* tp_str */\n    0,                                          /* tp_getattro */\n    0,                                          /* tp_setattro */\n    0,                                          /* tp_as_buffer */\n/* XXX should participate in GC? */\n    Py_TPFLAGS_DEFAULT,                         /* tp_flags */\n    \"deletes a key from a dictionary\",          /* tp_doc */\n    0,                                          /* tp_traverse */\n    0,                                          /* tp_clear */\n    0,                                          /* tp_richcompare */\n    0,                                          /* tp_weaklistoffset */\n    0,                                          /* tp_iter */\n    0,                                          /* tp_iternext */\n    0,                                          /* tp_methods */\n    0,                                          /* tp_members */\n    0,                                          /* tp_getset */\n    0,                                          /* tp_base */\n    0,                                          /* tp_dict */\n    0,                                          /* tp_descr_get */\n    0,                                          /* tp_descr_set */\n    0,                                          /* tp_dictoffset */\n    0,                                          /* tp_init */\n    0,                                          /* tp_alloc */\n    0,                                          /* tp_new */\n    0,                                          /* tp_free */\n};\n\nint\nPyDict_SetItemProxy(PyObject *dict, PyObject *key, PyObject *item)\n{\n    PyObject *obj;\n    DictRemoverObject *remover;\n    PyObject *proxy;\n    int result;\n\n    obj = PyObject_CallObject((PyObject *)&DictRemover_Type, NULL);\n    if (obj == NULL)\n        return -1;\n\n    remover = (DictRemoverObject *)obj;\n    assert(remover->key == NULL);\n    assert(remover->dict == NULL);\n    Py_INCREF(key);\n    remover->key = key;\n    Py_INCREF(dict);\n    remover->dict = dict;\n\n    proxy = PyWeakref_NewProxy(item, obj);\n    Py_DECREF(obj);\n    if (proxy == NULL)\n        return -1;\n\n    result = PyDict_SetItem(dict, key, proxy);\n    Py_DECREF(proxy);\n    return result;\n}\n\nPyObject *\nPyDict_GetItemProxy(PyObject *dict, PyObject *key)\n{\n    PyObject *result;\n    PyObject *item = PyDict_GetItem(dict, key);\n\n    if (item == NULL)\n        return NULL;\n    if (!PyWeakref_CheckProxy(item))\n        return item;\n    result = PyWeakref_GET_OBJECT(item);\n    if (result == Py_None)\n        return NULL;\n    return result;\n}\n\n/******************************************************************/\n\n/*\n  Allocate a memory block for a pep3118 format string, filled with\n  a suitable PEP 3118 type code corresponding to the given ctypes\n  type. Returns NULL on failure, with the error indicator set.\n\n  This produces type codes in the standard size mode (cf. struct module),\n  since the endianness may need to be swapped to a non-native one\n  later on.\n */\nstatic char *\n_ctypes_alloc_format_string_for_type(char code, int big_endian)\n{\n    char *result;\n    char pep_code = '\\0';\n\n    switch (code) {\n#if SIZEOF_INT == 2\n    case 'i': pep_code = 'h'; break;\n    case 'I': pep_code = 'H'; break;\n#elif SIZEOF_INT == 4\n    case 'i': pep_code = 'i'; break;\n    case 'I': pep_code = 'I'; break;\n#elif SIZEOF_INT == 8\n    case 'i': pep_code = 'q'; break;\n    case 'I': pep_code = 'Q'; break;\n#else\n# error SIZEOF_INT has an unexpected value\n#endif /* SIZEOF_INT */\n#if SIZEOF_LONG == 4\n    case 'l': pep_code = 'l'; break;\n    case 'L': pep_code = 'L'; break;\n#elif SIZEOF_LONG == 8\n    case 'l': pep_code = 'q'; break;\n    case 'L': pep_code = 'Q'; break;\n#else\n# error SIZEOF_LONG has an unexpected value\n#endif /* SIZEOF_LONG */\n#if SIZEOF__BOOL == 1\n    case '?': pep_code = '?'; break;\n#elif SIZEOF__BOOL == 2\n    case '?': pep_code = 'H'; break;\n#elif SIZEOF__BOOL == 4\n    case '?': pep_code = 'L'; break;\n#elif SIZEOF__BOOL == 8\n    case '?': pep_code = 'Q'; break;\n#else\n# error SIZEOF__BOOL has an unexpected value\n#endif /* SIZEOF__BOOL */\n    default:\n        /* The standard-size code is the same as the ctypes one */\n        pep_code = code;\n        break;\n    }\n\n    result = PyMem_Malloc(3);\n    if (result == NULL)\n        return NULL;\n\n    result[0] = big_endian ? '>' : '<';\n    result[1] = pep_code;\n    result[2] = '\\0';\n    return result;\n}\n\n/*\n  Allocate a memory block for a pep3118 format string, copy prefix (if\n  non-null) and suffix into it.  Returns NULL on failure, with the error\n  indicator set.  If called with a suffix of NULL the error indicator must\n  already be set.\n */\nchar *\n_ctypes_alloc_format_string(const char *prefix, const char *suffix)\n{\n    size_t len;\n    char *result;\n\n    if (suffix == NULL) {\n        assert(PyErr_Occurred());\n        return NULL;\n    }\n    len = strlen(suffix);\n    if (prefix)\n        len += strlen(prefix);\n    result = PyMem_Malloc(len + 1);\n    if (result == NULL)\n        return NULL;\n    if (prefix)\n        strcpy(result, prefix);\n    else\n        result[0] = '\\0';\n    strcat(result, suffix);\n    return result;\n}\n\n/*\n  Allocate a memory block for a pep3118 format string, adding\n  the given prefix (if non-null), an additional shape prefix, and a suffix.\n  Returns NULL on failure, with the error indicator set.  If called with\n  a suffix of NULL the error indicator must already be set.\n */\nchar *\n_ctypes_alloc_format_string_with_shape(int ndim, const Py_ssize_t *shape,\n                                       const char *prefix, const char *suffix)\n{\n    char *new_prefix;\n    char *result;\n    char buf[32];\n    int prefix_len;\n    int k;\n\n    prefix_len = 32 * ndim + 3;\n    if (prefix)\n        prefix_len += strlen(prefix);\n    new_prefix = PyMem_Malloc(prefix_len);\n    if (new_prefix == NULL)\n        return NULL;\n    new_prefix[0] = '\\0';\n    if (prefix)\n        strcpy(new_prefix, prefix);\n    if (ndim > 0) {\n        /* Add the prefix \"(shape[0],shape[1],...,shape[ndim-1])\" */\n        strcat(new_prefix, \"(\");\n        for (k = 0; k < ndim; ++k) {\n            if (k < ndim-1) {\n                sprintf(buf, \"%\"PY_FORMAT_SIZE_T\"d,\", shape[k]);\n            } else {\n                sprintf(buf, \"%\"PY_FORMAT_SIZE_T\"d)\", shape[k]);\n            }\n            strcat(new_prefix, buf);\n        }\n    }\n    result = _ctypes_alloc_format_string(new_prefix, suffix);\n    PyMem_Free(new_prefix);\n    return result;\n}\n\n/*\n  PyCStructType_Type - a meta type/class.  Creating a new class using this one as\n  __metaclass__ will call the constructor StructUnionType_new.  It replaces the\n  tp_dict member with a new instance of StgDict, and initializes the C\n  accessible fields somehow.\n*/\n\nstatic PyCArgObject *\nStructUnionType_paramfunc(CDataObject *self)\n{\n    PyCArgObject *parg;\n    StgDictObject *stgdict;\n\n    parg = PyCArgObject_new();\n    if (parg == NULL)\n        return NULL;\n\n    parg->tag = 'V';\n    stgdict = PyObject_stgdict((PyObject *)self);\n    assert(stgdict); /* Cannot be NULL for structure/union instances */\n    parg->pffi_type = &stgdict->ffi_type_pointer;\n    /* For structure parameters (by value), parg->value doesn't contain the structure\n       data itself, instead parg->value.p *points* to the structure's data\n       See also _ctypes.c, function _call_function_pointer().\n    */\n    parg->value.p = self->b_ptr;\n    parg->size = self->b_size;\n    Py_INCREF(self);\n    parg->obj = (PyObject *)self;\n    return parg;\n}\n\nstatic PyObject *\nStructUnionType_new(PyTypeObject *type, PyObject *args, PyObject *kwds, int isStruct)\n{\n    PyTypeObject *result;\n    PyObject *fields;\n    StgDictObject *dict;\n\n    /* create the new instance (which is a class,\n       since we are a metatype!) */\n    result = (PyTypeObject *)PyType_Type.tp_new(type, args, kwds);\n    if (!result)\n        return NULL;\n\n    /* keep this for bw compatibility */\n    if (PyDict_GetItemString(result->tp_dict, \"_abstract_\"))\n        return (PyObject *)result;\n\n    dict = (StgDictObject *)PyObject_CallObject((PyObject *)&PyCStgDict_Type, NULL);\n    if (!dict) {\n        Py_DECREF(result);\n        return NULL;\n    }\n    /* replace the class dict by our updated stgdict, which holds info\n       about storage requirements of the instances */\n    if (-1 == PyDict_Update((PyObject *)dict, result->tp_dict)) {\n        Py_DECREF(result);\n        Py_DECREF((PyObject *)dict);\n        return NULL;\n    }\n    Py_SETREF(result->tp_dict, (PyObject *)dict);\n    dict->format = _ctypes_alloc_format_string(NULL, \"B\");\n    if (dict->format == NULL) {\n        Py_DECREF(result);\n        return NULL;\n    }\n\n    dict->paramfunc = StructUnionType_paramfunc;\n\n    fields = PyDict_GetItemString((PyObject *)dict, \"_fields_\");\n    if (!fields) {\n        StgDictObject *basedict = PyType_stgdict((PyObject *)result->tp_base);\n\n        if (basedict == NULL)\n            return (PyObject *)result;\n        /* copy base dict */\n        if (-1 == PyCStgDict_clone(dict, basedict)) {\n            Py_DECREF(result);\n            return NULL;\n        }\n        dict->flags &= ~DICTFLAG_FINAL; /* clear the 'final' flag in the subclass dict */\n        basedict->flags |= DICTFLAG_FINAL; /* set the 'final' flag in the baseclass dict */\n        return (PyObject *)result;\n    }\n\n    if (-1 == PyObject_SetAttrString((PyObject *)result, \"_fields_\", fields)) {\n        Py_DECREF(result);\n        return NULL;\n    }\n    return (PyObject *)result;\n}\n\nstatic PyObject *\nPyCStructType_new(PyTypeObject *type, PyObject *args, PyObject *kwds)\n{\n    return StructUnionType_new(type, args, kwds, 1);\n}\n\nstatic PyObject *\nUnionType_new(PyTypeObject *type, PyObject *args, PyObject *kwds)\n{\n    return StructUnionType_new(type, args, kwds, 0);\n}\n\nstatic char from_address_doc[] =\n\"C.from_address(integer) -> C instance\\naccess a C instance at the specified address\";\n\nstatic PyObject *\nCDataType_from_address(PyObject *type, PyObject *value)\n{\n    void *buf;\n    if (!_PyAnyInt_Check(value)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"integer expected\");\n        return NULL;\n    }\n    buf = (void *)PyLong_AsVoidPtr(value);\n    if (PyErr_Occurred())\n        return NULL;\n    return PyCData_AtAddress(type, buf);\n}\n\nstatic char from_buffer_doc[] =\n\"C.from_buffer(object, offset=0) -> C instance\\ncreate a C instance from a writeable buffer\";\n\nstatic int\nKeepRef(CDataObject *target, Py_ssize_t index, PyObject *keep);\n\nstatic PyObject *\nCDataType_from_buffer(PyObject *type, PyObject *args)\n{\n    void *buffer;\n    Py_ssize_t buffer_len;\n    Py_ssize_t offset = 0;\n    PyObject *obj, *result;\n    StgDictObject *dict = PyType_stgdict(type);\n    if (!dict) {\n        PyErr_SetString(PyExc_TypeError, \"abstract class\");\n        return NULL;\n    }\n\n    if (!PyArg_ParseTuple(args,\n#if (PY_VERSION_HEX < 0x02050000)\n                          \"O|i:from_buffer\",\n#else\n                          \"O|n:from_buffer\",\n#endif\n                          &obj, &offset))\n        return NULL;\n\n    if (-1 == PyObject_AsWriteBuffer(obj, &buffer, &buffer_len))\n        return NULL;\n\n    if (offset < 0) {\n        PyErr_SetString(PyExc_ValueError,\n                        \"offset cannot be negative\");\n        return NULL;\n    }\n    if (dict->size > buffer_len - offset) {\n        PyErr_Format(PyExc_ValueError,\n#if (PY_VERSION_HEX < 0x02050000)\n                     \"Buffer size too small (%d instead of at least %d bytes)\",\n#else\n                     \"Buffer size too small (%zd instead of at least %zd bytes)\",\n#endif\n                     buffer_len, dict->size + offset);\n        return NULL;\n    }\n\n    result = PyCData_AtAddress(type, (char *)buffer + offset);\n    if (result == NULL)\n        return NULL;\n\n    Py_INCREF(obj);\n    if (-1 == KeepRef((CDataObject *)result, -1, obj)) {\n        Py_DECREF(result);\n        return NULL;\n    }\n    return result;\n}\n\nstatic char from_buffer_copy_doc[] =\n\"C.from_buffer_copy(object, offset=0) -> C instance\\ncreate a C instance from a readable buffer\";\n\nstatic PyObject *\nGenericPyCData_new(PyTypeObject *type, PyObject *args, PyObject *kwds);\n\nstatic PyObject *\nCDataType_from_buffer_copy(PyObject *type, PyObject *args)\n{\n    const void *buffer;\n    Py_ssize_t buffer_len;\n    Py_ssize_t offset = 0;\n    PyObject *obj, *result;\n    StgDictObject *dict = PyType_stgdict(type);\n    if (!dict) {\n        PyErr_SetString(PyExc_TypeError, \"abstract class\");\n        return NULL;\n    }\n\n    if (!PyArg_ParseTuple(args,\n#if (PY_VERSION_HEX < 0x02050000)\n                          \"O|i:from_buffer_copy\",\n#else\n                          \"O|n:from_buffer_copy\",\n#endif\n                          &obj, &offset))\n        return NULL;\n\n    if (-1 == PyObject_AsReadBuffer(obj, &buffer, &buffer_len))\n        return NULL;\n\n    if (offset < 0) {\n        PyErr_SetString(PyExc_ValueError,\n                        \"offset cannot be negative\");\n        return NULL;\n    }\n\n    if (dict->size > buffer_len - offset) {\n        PyErr_Format(PyExc_ValueError,\n#if (PY_VERSION_HEX < 0x02050000)\n                     \"Buffer size too small (%d instead of at least %d bytes)\",\n#else\n                     \"Buffer size too small (%zd instead of at least %zd bytes)\",\n#endif\n                     buffer_len, dict->size + offset);\n        return NULL;\n    }\n\n    result = GenericPyCData_new((PyTypeObject *)type, NULL, NULL);\n    if (result == NULL)\n        return NULL;\n    memcpy(((CDataObject *)result)->b_ptr,\n           (char *)buffer+offset, dict->size);\n    return result;\n}\n\nstatic char in_dll_doc[] =\n\"C.in_dll(dll, name) -> C instance\\naccess a C instance in a dll\";\n\nstatic PyObject *\nCDataType_in_dll(PyObject *type, PyObject *args)\n{\n    PyObject *dll;\n    char *name;\n    PyObject *obj;\n    void *handle;\n    void *address;\n\n    if (!PyArg_ParseTuple(args, \"Os:in_dll\", &dll, &name))\n        return NULL;\n\n    obj = PyObject_GetAttrString(dll, \"_handle\");\n    if (!obj)\n        return NULL;\n    if (!_PyAnyInt_Check(obj)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"the _handle attribute of the second argument must be an integer\");\n        Py_DECREF(obj);\n        return NULL;\n    }\n    handle = (void *)PyLong_AsVoidPtr(obj);\n    Py_DECREF(obj);\n    if (PyErr_Occurred()) {\n        PyErr_SetString(PyExc_ValueError,\n                        \"could not convert the _handle attribute to a pointer\");\n        return NULL;\n    }\n\n#ifdef MS_WIN32\n    address = (void *)GetProcAddress(handle, name);\n    if (!address) {\n        PyErr_Format(PyExc_ValueError,\n                     \"symbol '%s' not found\",\n                     name);\n        return NULL;\n    }\n#else\n    address = (void *)ctypes_dlsym(handle, name);\n    if (!address) {\n#ifdef __CYGWIN__\n/* dlerror() isn't very helpful on cygwin */\n        PyErr_Format(PyExc_ValueError,\n                     \"symbol '%s' not found\",\n                     name);\n#else\n        PyErr_SetString(PyExc_ValueError, ctypes_dlerror());\n#endif\n        return NULL;\n    }\n#endif\n    return PyCData_AtAddress(type, address);\n}\n\nstatic char from_param_doc[] =\n\"Convert a Python object into a function call parameter.\";\n\nstatic PyObject *\nCDataType_from_param(PyObject *type, PyObject *value)\n{\n    PyObject *as_parameter;\n    int res = PyObject_IsInstance(value, type);\n    if (res == -1)\n        return NULL;\n    if (res) {\n        Py_INCREF(value);\n        return value;\n    }\n    if (PyCArg_CheckExact(value)) {\n        PyCArgObject *p = (PyCArgObject *)value;\n        PyObject *ob = p->obj;\n        const char *ob_name;\n        StgDictObject *dict;\n        dict = PyType_stgdict(type);\n\n        /* If we got a PyCArgObject, we must check if the object packed in it\n           is an instance of the type's dict->proto */\n        if(dict && ob) {\n            res = PyObject_IsInstance(ob, dict->proto);\n            if (res == -1)\n                return NULL;\n            if (res) {\n                Py_INCREF(value);\n                return value;\n            }\n        }\n        ob_name = (ob) ? Py_TYPE(ob)->tp_name : \"???\";\n        PyErr_Format(PyExc_TypeError,\n                     \"expected %s instance instead of pointer to %s\",\n                     ((PyTypeObject *)type)->tp_name, ob_name);\n        return NULL;\n    }\n\n    as_parameter = PyObject_GetAttrString(value, \"_as_parameter_\");\n    if (as_parameter) {\n        value = CDataType_from_param(type, as_parameter);\n        Py_DECREF(as_parameter);\n        return value;\n    }\n    PyErr_Format(PyExc_TypeError,\n                 \"expected %s instance instead of %s\",\n                 ((PyTypeObject *)type)->tp_name,\n                 Py_TYPE(value)->tp_name);\n    return NULL;\n}\n\nstatic PyMethodDef CDataType_methods[] = {\n    { \"from_param\", CDataType_from_param, METH_O, from_param_doc },\n    { \"from_address\", CDataType_from_address, METH_O, from_address_doc },\n    { \"from_buffer\", CDataType_from_buffer, METH_VARARGS, from_buffer_doc, },\n    { \"from_buffer_copy\", CDataType_from_buffer_copy, METH_VARARGS, from_buffer_copy_doc, },\n    { \"in_dll\", CDataType_in_dll, METH_VARARGS, in_dll_doc },\n    { NULL, NULL },\n};\n\nstatic PyObject *\nCDataType_repeat(PyObject *self, Py_ssize_t length)\n{\n    if (length < 0)\n        return PyErr_Format(PyExc_ValueError,\n#if (PY_VERSION_HEX < 0x02050000)\n                            \"Array length must be >= 0, not %d\",\n#else\n                            \"Array length must be >= 0, not %zd\",\n#endif\n                            length);\n    return PyCArrayType_from_ctype(self, length);\n}\n\nstatic PySequenceMethods CDataType_as_sequence = {\n    0,                          /* inquiry sq_length; */\n    0,                          /* binaryfunc sq_concat; */\n    CDataType_repeat,           /* intargfunc sq_repeat; */\n    0,                          /* intargfunc sq_item; */\n    0,                          /* intintargfunc sq_slice; */\n    0,                          /* intobjargproc sq_ass_item; */\n    0,                          /* intintobjargproc sq_ass_slice; */\n    0,                          /* objobjproc sq_contains; */\n\n    0,                          /* binaryfunc sq_inplace_concat; */\n    0,                          /* intargfunc sq_inplace_repeat; */\n};\n\nstatic int\nCDataType_clear(PyTypeObject *self)\n{\n    StgDictObject *dict = PyType_stgdict((PyObject *)self);\n    if (dict)\n        Py_CLEAR(dict->proto);\n    return PyType_Type.tp_clear((PyObject *)self);\n}\n\nstatic int\nCDataType_traverse(PyTypeObject *self, visitproc visit, void *arg)\n{\n    StgDictObject *dict = PyType_stgdict((PyObject *)self);\n    if (dict)\n        Py_VISIT(dict->proto);\n    return PyType_Type.tp_traverse((PyObject *)self, visit, arg);\n}\n\nstatic int\nPyCStructType_setattro(PyObject *self, PyObject *key, PyObject *value)\n{\n    /* XXX Should we disallow deleting _fields_? */\n    if (-1 == PyType_Type.tp_setattro(self, key, value))\n        return -1;\n\n    if (value && PyString_Check(key) &&\n        0 == strcmp(PyString_AS_STRING(key), \"_fields_\"))\n        return PyCStructUnionType_update_stgdict(self, value, 1);\n    return 0;\n}\n\n\nstatic int\nUnionType_setattro(PyObject *self, PyObject *key, PyObject *value)\n{\n    /* XXX Should we disallow deleting _fields_? */\n    if (-1 == PyObject_GenericSetAttr(self, key, value))\n        return -1;\n\n    if (PyString_Check(key) &&\n        0 == strcmp(PyString_AS_STRING(key), \"_fields_\"))\n        return PyCStructUnionType_update_stgdict(self, value, 0);\n    return 0;\n}\n\n\nPyTypeObject PyCStructType_Type = {\n    PyVarObject_HEAD_INIT(NULL, 0)\n    \"_ctypes.PyCStructType\",                            /* tp_name */\n    0,                                          /* tp_basicsize */\n    0,                                          /* tp_itemsize */\n    0,                                          /* tp_dealloc */\n    0,                                          /* tp_print */\n    0,                                          /* tp_getattr */\n    0,                                          /* tp_setattr */\n    0,                                          /* tp_compare */\n    0,                                          /* tp_repr */\n    0,                                          /* tp_as_number */\n    &CDataType_as_sequence,                     /* tp_as_sequence */\n    0,                                          /* tp_as_mapping */\n    0,                                          /* tp_hash */\n    0,                                          /* tp_call */\n    0,                                          /* tp_str */\n    0,                                          /* tp_getattro */\n    PyCStructType_setattro,                     /* tp_setattro */\n    0,                                          /* tp_as_buffer */\n    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_BASETYPE | Py_TPFLAGS_HAVE_GC, /* tp_flags */\n    \"metatype for the CData Objects\",           /* tp_doc */\n    (traverseproc)CDataType_traverse,           /* tp_traverse */\n    (inquiry)CDataType_clear,                   /* tp_clear */\n    0,                                          /* tp_richcompare */\n    0,                                          /* tp_weaklistoffset */\n    0,                                          /* tp_iter */\n    0,                                          /* tp_iternext */\n    CDataType_methods,                          /* tp_methods */\n    0,                                          /* tp_members */\n    0,                                          /* tp_getset */\n    0,                                          /* tp_base */\n    0,                                          /* tp_dict */\n    0,                                          /* tp_descr_get */\n    0,                                          /* tp_descr_set */\n    0,                                          /* tp_dictoffset */\n    0,                                          /* tp_init */\n    0,                                          /* tp_alloc */\n    PyCStructType_new,                                  /* tp_new */\n    0,                                          /* tp_free */\n};\n\nstatic PyTypeObject UnionType_Type = {\n    PyVarObject_HEAD_INIT(NULL, 0)\n    \"_ctypes.UnionType\",                        /* tp_name */\n    0,                                          /* tp_basicsize */\n    0,                                          /* tp_itemsize */\n    0,                                          /* tp_dealloc */\n    0,                                          /* tp_print */\n    0,                                          /* tp_getattr */\n    0,                                          /* tp_setattr */\n    0,                                          /* tp_compare */\n    0,                                          /* tp_repr */\n    0,                                          /* tp_as_number */\n    &CDataType_as_sequence,             /* tp_as_sequence */\n    0,                                          /* tp_as_mapping */\n    0,                                          /* tp_hash */\n    0,                                          /* tp_call */\n    0,                                          /* tp_str */\n    0,                                          /* tp_getattro */\n    UnionType_setattro,                         /* tp_setattro */\n    0,                                          /* tp_as_buffer */\n    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_BASETYPE | Py_TPFLAGS_HAVE_GC, /* tp_flags */\n    \"metatype for the CData Objects\",           /* tp_doc */\n    (traverseproc)CDataType_traverse,           /* tp_traverse */\n    (inquiry)CDataType_clear,                   /* tp_clear */\n    0,                                          /* tp_richcompare */\n    0,                                          /* tp_weaklistoffset */\n    0,                                          /* tp_iter */\n    0,                                          /* tp_iternext */\n    CDataType_methods,                          /* tp_methods */\n    0,                                          /* tp_members */\n    0,                                          /* tp_getset */\n    0,                                          /* tp_base */\n    0,                                          /* tp_dict */\n    0,                                          /* tp_descr_get */\n    0,                                          /* tp_descr_set */\n    0,                                          /* tp_dictoffset */\n    0,                                          /* tp_init */\n    0,                                          /* tp_alloc */\n    UnionType_new,                              /* tp_new */\n    0,                                          /* tp_free */\n};\n\n\n/******************************************************************/\n\n/*\n\nThe PyCPointerType_Type metaclass must ensure that the subclass of Pointer can be\ncreated. It must check for a _type_ attribute in the class. Since are no\nruntime created properties, a CField is probably *not* needed ?\n\nclass IntPointer(Pointer):\n    _type_ = \"i\"\n\nThe PyCPointer_Type provides the functionality: a contents method/property, a\nsize property/method, and the sequence protocol.\n\n*/\n\nstatic int\nPyCPointerType_SetProto(StgDictObject *stgdict, PyObject *proto)\n{\n    if (!proto || !PyType_Check(proto)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"_type_ must be a type\");\n        return -1;\n    }\n    if (!PyType_stgdict(proto)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"_type_ must have storage info\");\n        return -1;\n    }\n    Py_INCREF(proto);\n    Py_XSETREF(stgdict->proto, proto);\n    return 0;\n}\n\nstatic PyCArgObject *\nPyCPointerType_paramfunc(CDataObject *self)\n{\n    PyCArgObject *parg;\n\n    parg = PyCArgObject_new();\n    if (parg == NULL)\n        return NULL;\n\n    parg->tag = 'P';\n    parg->pffi_type = &ffi_type_pointer;\n    Py_INCREF(self);\n    parg->obj = (PyObject *)self;\n    parg->value.p = *(void **)self->b_ptr;\n    return parg;\n}\n\nstatic PyObject *\nPyCPointerType_new(PyTypeObject *type, PyObject *args, PyObject *kwds)\n{\n    PyTypeObject *result;\n    StgDictObject *stgdict;\n    PyObject *proto;\n    PyObject *typedict;\n\n    typedict = PyTuple_GetItem(args, 2);\n    if (!typedict)\n        return NULL;\n/*\n  stgdict items size, align, length contain info about pointers itself,\n  stgdict->proto has info about the pointed to type!\n*/\n    stgdict = (StgDictObject *)PyObject_CallObject(\n        (PyObject *)&PyCStgDict_Type, NULL);\n    if (!stgdict)\n        return NULL;\n    stgdict->size = sizeof(void *);\n    stgdict->align = _ctypes_get_fielddesc(\"P\")->pffi_type->alignment;\n    stgdict->length = 1;\n    stgdict->ffi_type_pointer = ffi_type_pointer;\n    stgdict->paramfunc = PyCPointerType_paramfunc;\n    stgdict->flags |= TYPEFLAG_ISPOINTER;\n\n    proto = PyDict_GetItemString(typedict, \"_type_\"); /* Borrowed ref */\n    if (proto && -1 == PyCPointerType_SetProto(stgdict, proto)) {\n        Py_DECREF((PyObject *)stgdict);\n        return NULL;\n    }\n\n    if (proto) {\n        StgDictObject *itemdict = PyType_stgdict(proto);\n        const char *current_format;\n        /* PyCPointerType_SetProto has verified proto has a stgdict. */\n        assert(itemdict);\n        /* If itemdict->format is NULL, then this is a pointer to an\n           incomplete type.  We create a generic format string\n           'pointer to bytes' in this case.  XXX Better would be to\n           fix the format string later...\n        */\n        current_format = itemdict->format ? itemdict->format : \"B\";\n        if (itemdict->shape != NULL) {\n            /* pointer to an array: the shape needs to be prefixed */\n            stgdict->format = _ctypes_alloc_format_string_with_shape(\n                itemdict->ndim, itemdict->shape, \"&\", current_format);\n        } else {\n            stgdict->format = _ctypes_alloc_format_string(\"&\", current_format);\n        }\n        if (stgdict->format == NULL) {\n            Py_DECREF((PyObject *)stgdict);\n            return NULL;\n        }\n    }\n\n    /* create the new instance (which is a class,\n       since we are a metatype!) */\n    result = (PyTypeObject *)PyType_Type.tp_new(type, args, kwds);\n    if (result == NULL) {\n        Py_DECREF((PyObject *)stgdict);\n        return NULL;\n    }\n\n    /* replace the class dict by our updated spam dict */\n    if (-1 == PyDict_Update((PyObject *)stgdict, result->tp_dict)) {\n        Py_DECREF(result);\n        Py_DECREF((PyObject *)stgdict);\n        return NULL;\n    }\n    Py_SETREF(result->tp_dict, (PyObject *)stgdict);\n\n    return (PyObject *)result;\n}\n\n\nstatic PyObject *\nPyCPointerType_set_type(PyTypeObject *self, PyObject *type)\n{\n    StgDictObject *dict;\n\n    dict = PyType_stgdict((PyObject *)self);\n    if (!dict) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"abstract class\");\n        return NULL;\n    }\n\n    if (-1 == PyCPointerType_SetProto(dict, type))\n        return NULL;\n\n    if (-1 == PyDict_SetItemString((PyObject *)dict, \"_type_\", type))\n        return NULL;\n\n    Py_INCREF(Py_None);\n    return Py_None;\n}\n\nstaticforward PyObject *_byref(PyObject *);\n\nstatic PyObject *\nPyCPointerType_from_param(PyObject *type, PyObject *value)\n{\n    StgDictObject *typedict;\n\n    if (value == Py_None) {\n        /* ConvParam will convert to a NULL pointer later */\n        Py_INCREF(value);\n        return value;\n    }\n\n    typedict = PyType_stgdict(type);\n    if (!typedict) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"abstract class\");\n        return NULL;\n    }\n\n    /* If we expect POINTER(<type>), but receive a <type> instance, accept\n       it by calling byref(<type>).\n    */\n    switch (PyObject_IsInstance(value, typedict->proto)) {\n    case 1:\n        Py_INCREF(value); /* _byref steals a refcount */\n        return _byref(value);\n    case -1:\n        return NULL;\n    default:\n        break;\n    }\n\n    if (PointerObject_Check(value) || ArrayObject_Check(value)) {\n        /* Array instances are also pointers when\n           the item types are the same.\n        */\n        StgDictObject *v = PyObject_stgdict(value);\n        assert(v); /* Cannot be NULL for pointer or array objects */\n        if (PyObject_IsSubclass(v->proto, typedict->proto)) {\n            Py_INCREF(value);\n            return value;\n        }\n    }\n    return CDataType_from_param(type, value);\n}\n\nstatic PyMethodDef PyCPointerType_methods[] = {\n    { \"from_address\", CDataType_from_address, METH_O, from_address_doc },\n    { \"from_buffer\", CDataType_from_buffer, METH_VARARGS, from_buffer_doc, },\n    { \"from_buffer_copy\", CDataType_from_buffer_copy, METH_VARARGS, from_buffer_copy_doc, },\n    { \"in_dll\", CDataType_in_dll, METH_VARARGS, in_dll_doc},\n    { \"from_param\", (PyCFunction)PyCPointerType_from_param, METH_O, from_param_doc},\n    { \"set_type\", (PyCFunction)PyCPointerType_set_type, METH_O },\n    { NULL, NULL },\n};\n\nPyTypeObject PyCPointerType_Type = {\n    PyVarObject_HEAD_INIT(NULL, 0)\n    \"_ctypes.PyCPointerType\",                                   /* tp_name */\n    0,                                          /* tp_basicsize */\n    0,                                          /* tp_itemsize */\n    0,                                          /* tp_dealloc */\n    0,                                          /* tp_print */\n    0,                                          /* tp_getattr */\n    0,                                          /* tp_setattr */\n    0,                                          /* tp_compare */\n    0,                                          /* tp_repr */\n    0,                                          /* tp_as_number */\n    &CDataType_as_sequence,             /* tp_as_sequence */\n    0,                                          /* tp_as_mapping */\n    0,                                          /* tp_hash */\n    0,                                          /* tp_call */\n    0,                                          /* tp_str */\n    0,                                          /* tp_getattro */\n    0,                                          /* tp_setattro */\n    0,                                          /* tp_as_buffer */\n    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_BASETYPE | Py_TPFLAGS_HAVE_GC, /* tp_flags */\n    \"metatype for the Pointer Objects\",         /* tp_doc */\n    (traverseproc)CDataType_traverse,           /* tp_traverse */\n    (inquiry)CDataType_clear,                   /* tp_clear */\n    0,                                          /* tp_richcompare */\n    0,                                          /* tp_weaklistoffset */\n    0,                                          /* tp_iter */\n    0,                                          /* tp_iternext */\n    PyCPointerType_methods,                     /* tp_methods */\n    0,                                          /* tp_members */\n    0,                                          /* tp_getset */\n    0,                                          /* tp_base */\n    0,                                          /* tp_dict */\n    0,                                          /* tp_descr_get */\n    0,                                          /* tp_descr_set */\n    0,                                          /* tp_dictoffset */\n    0,                                          /* tp_init */\n    0,                                          /* tp_alloc */\n    PyCPointerType_new,                         /* tp_new */\n    0,                                          /* tp_free */\n};\n\n\n/******************************************************************/\n/*\n  PyCArrayType_Type\n*/\n/*\n  PyCArrayType_new ensures that the new Array subclass created has a _length_\n  attribute, and a _type_ attribute.\n*/\n\nstatic int\nCharArray_set_raw(CDataObject *self, PyObject *value)\n{\n    char *ptr;\n    Py_ssize_t size;\n#if (PY_VERSION_HEX >= 0x02060000)\n    Py_buffer view = { 0 };\n#endif\n    if (value == NULL) {\n        PyErr_SetString(PyExc_AttributeError, \"cannot delete attribute\");\n        return -1;\n    }\n    if (PyBuffer_Check(value)) {\n        size = Py_TYPE(value)->tp_as_buffer->bf_getreadbuffer(value, 0, (void *)&ptr);\n        if (size < 0)\n            goto fail;\n    } else {\n#if (PY_VERSION_HEX >= 0x02060000)\n        if (PyObject_GetBuffer(value, &view, PyBUF_SIMPLE) < 0)\n            goto fail;\n        size = view.len;\n        ptr = view.buf;\n#else\n        if (-1 == PyString_AsStringAndSize(value, &ptr, &size))\n            goto fail;\n#endif\n    }\n    if (size > self->b_size) {\n        PyErr_SetString(PyExc_ValueError,\n                        \"string too long\");\n        goto fail;\n    }\n\n    memcpy(self->b_ptr, ptr, size);\n\n#if (PY_VERSION_HEX >= 0x02060000)\n    PyBuffer_Release(&view);\n#endif\n    return 0;\n    fail:\n\n#if (PY_VERSION_HEX >= 0x02060000)\n    PyBuffer_Release(&view);\n#endif\n    return -1;\n}\n\nstatic PyObject *\nCharArray_get_raw(CDataObject *self)\n{\n    return PyString_FromStringAndSize(self->b_ptr, self->b_size);\n}\n\nstatic PyObject *\nCharArray_get_value(CDataObject *self)\n{\n    Py_ssize_t i;\n    char *ptr = self->b_ptr;\n    for (i = 0; i < self->b_size; ++i)\n        if (*ptr++ == '\\0')\n            break;\n    return PyString_FromStringAndSize(self->b_ptr, i);\n}\n\nstatic int\nCharArray_set_value(CDataObject *self, PyObject *value)\n{\n    char *ptr;\n    Py_ssize_t size;\n\n    if (value == NULL) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"can't delete attribute\");\n        return -1;\n    }\n\n    if (PyUnicode_Check(value)) {\n        value = PyUnicode_AsEncodedString(value,\n                                          _ctypes_conversion_encoding,\n                                          _ctypes_conversion_errors);\n        if (!value)\n            return -1;\n    } else if (!PyString_Check(value)) {\n        PyErr_Format(PyExc_TypeError,\n                     \"string expected instead of %s instance\",\n                     Py_TYPE(value)->tp_name);\n        return -1;\n    } else\n        Py_INCREF(value);\n    size = PyString_GET_SIZE(value);\n    if (size > self->b_size) {\n        PyErr_SetString(PyExc_ValueError,\n                        \"string too long\");\n        Py_DECREF(value);\n        return -1;\n    }\n\n    ptr = PyString_AS_STRING(value);\n    memcpy(self->b_ptr, ptr, size);\n    if (size < self->b_size)\n        self->b_ptr[size] = '\\0';\n    Py_DECREF(value);\n\n    return 0;\n}\n\nstatic PyGetSetDef CharArray_getsets[] = {\n    { \"raw\", (getter)CharArray_get_raw, (setter)CharArray_set_raw,\n      \"value\", NULL },\n    { \"value\", (getter)CharArray_get_value, (setter)CharArray_set_value,\n      \"string value\"},\n    { NULL, NULL }\n};\n\n#ifdef CTYPES_UNICODE\nstatic PyObject *\nWCharArray_get_value(CDataObject *self)\n{\n    Py_ssize_t i;\n    wchar_t *ptr = (wchar_t *)self->b_ptr;\n    for (i = 0; i < self->b_size/(Py_ssize_t)sizeof(wchar_t); ++i)\n        if (*ptr++ == (wchar_t)0)\n            break;\n    return PyUnicode_FromWideChar((wchar_t *)self->b_ptr, i);\n}\n\nstatic int\nWCharArray_set_value(CDataObject *self, PyObject *value)\n{\n    Py_ssize_t result = 0;\n\n    if (value == NULL) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"can't delete attribute\");\n        return -1;\n    }\n    if (PyString_Check(value)) {\n        value = PyUnicode_FromEncodedObject(value,\n                                            _ctypes_conversion_encoding,\n                                            _ctypes_conversion_errors);\n        if (!value)\n            return -1;\n    } else if (!PyUnicode_Check(value)) {\n        PyErr_Format(PyExc_TypeError,\n                        \"unicode string expected instead of %s instance\",\n                        Py_TYPE(value)->tp_name);\n        return -1;\n    } else\n        Py_INCREF(value);\n    if ((size_t)PyUnicode_GET_SIZE(value) > self->b_size/sizeof(wchar_t)) {\n        PyErr_SetString(PyExc_ValueError,\n                        \"string too long\");\n        result = -1;\n        goto done;\n    }\n    result = PyUnicode_AsWideChar((PyUnicodeObject *)value,\n                                  (wchar_t *)self->b_ptr,\n                                  self->b_size/sizeof(wchar_t));\n    if (result >= 0 && (size_t)result < self->b_size/sizeof(wchar_t))\n        ((wchar_t *)self->b_ptr)[result] = (wchar_t)0;\n  done:\n    Py_DECREF(value);\n\n    return result >= 0 ? 0 : -1;\n}\n\nstatic PyGetSetDef WCharArray_getsets[] = {\n    { \"value\", (getter)WCharArray_get_value, (setter)WCharArray_set_value,\n      \"string value\"},\n    { NULL, NULL }\n};\n#endif\n\n/*\n  The next three functions copied from Python's typeobject.c.\n\n  They are used to attach methods, members, or getsets to a type *after* it\n  has been created: Arrays of characters have additional getsets to treat them\n  as strings.\n */\n/*\nstatic int\nadd_methods(PyTypeObject *type, PyMethodDef *meth)\n{\n    PyObject *dict = type->tp_dict;\n    for (; meth->ml_name != NULL; meth++) {\n        PyObject *descr;\n        descr = PyDescr_NewMethod(type, meth);\n        if (descr == NULL)\n            return -1;\n        if (PyDict_SetItemString(dict, meth->ml_name, descr) < 0) {\n            Py_DECREF(descr);\n            return -1;\n        }\n        Py_DECREF(descr);\n    }\n    return 0;\n}\n\nstatic int\nadd_members(PyTypeObject *type, PyMemberDef *memb)\n{\n    PyObject *dict = type->tp_dict;\n    for (; memb->name != NULL; memb++) {\n        PyObject *descr;\n        descr = PyDescr_NewMember(type, memb);\n        if (descr == NULL)\n            return -1;\n        if (PyDict_SetItemString(dict, memb->name, descr) < 0) {\n            Py_DECREF(descr);\n            return -1;\n        }\n        Py_DECREF(descr);\n    }\n    return 0;\n}\n*/\n\nstatic int\nadd_getset(PyTypeObject *type, PyGetSetDef *gsp)\n{\n    PyObject *dict = type->tp_dict;\n    for (; gsp->name != NULL; gsp++) {\n        PyObject *descr;\n        descr = PyDescr_NewGetSet(type, gsp);\n        if (descr == NULL)\n            return -1;\n        if (PyDict_SetItemString(dict, gsp->name, descr) < 0) {\n            Py_DECREF(descr);\n            return -1;\n        }\n        Py_DECREF(descr);\n    }\n    return 0;\n}\n\nstatic PyCArgObject *\nPyCArrayType_paramfunc(CDataObject *self)\n{\n    PyCArgObject *p = PyCArgObject_new();\n    if (p == NULL)\n        return NULL;\n    p->tag = 'P';\n    p->pffi_type = &ffi_type_pointer;\n    p->value.p = (char *)self->b_ptr;\n    Py_INCREF(self);\n    p->obj = (PyObject *)self;\n    return p;\n}\n\nstatic PyObject *\nPyCArrayType_new(PyTypeObject *type, PyObject *args, PyObject *kwds)\n{\n    PyTypeObject *result;\n    StgDictObject *stgdict;\n    StgDictObject *itemdict;\n    PyObject *proto, *length_attr;\n    PyObject *typedict;\n    Py_ssize_t length;\n    Py_ssize_t itemsize, itemalign;\n\n    typedict = PyTuple_GetItem(args, 2);\n    if (!typedict)\n        return NULL;\n\n    length_attr = PyDict_GetItemString(typedict, \"_length_\"); /* Borrowed ref */\n    if (!length_attr || !_PyAnyInt_Check(length_attr)) {\n        PyErr_SetString(PyExc_AttributeError,\n                        \"class must define a '_length_' attribute, \"\n                        \"which must be a positive integer\");\n        return NULL;\n    }\n    if (PyInt_Check(length_attr)) {\n        length = PyInt_AS_LONG(length_attr);\n    }\n    else {\n        assert(PyLong_Check(length_attr));\n        length = PyLong_AsSsize_t(length_attr);\n        if (length == -1 && PyErr_Occurred()) {\n            if (PyErr_ExceptionMatches(PyExc_OverflowError)) {\n                PyErr_SetString(PyExc_OverflowError,\n                                \"The '_length_' attribute is too large\");\n            }\n            return NULL;\n        }\n    }\n\n    proto = PyDict_GetItemString(typedict, \"_type_\"); /* Borrowed ref */\n    if (!proto) {\n        PyErr_SetString(PyExc_AttributeError,\n                        \"class must define a '_type_' attribute\");\n        return NULL;\n    }\n\n    stgdict = (StgDictObject *)PyObject_CallObject(\n        (PyObject *)&PyCStgDict_Type, NULL);\n    if (!stgdict)\n        return NULL;\n\n    itemdict = PyType_stgdict(proto);\n    if (!itemdict) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"_type_ must have storage info\");\n        Py_DECREF((PyObject *)stgdict);\n        return NULL;\n    }\n\n    assert(itemdict->format);\n    stgdict->format = _ctypes_alloc_format_string(NULL, itemdict->format);\n    if (stgdict->format == NULL) {\n        Py_DECREF((PyObject *)stgdict);\n        return NULL;\n    }\n    stgdict->ndim = itemdict->ndim + 1;\n    stgdict->shape = PyMem_Malloc(sizeof(Py_ssize_t *) * stgdict->ndim);\n    if (stgdict->shape == NULL) {\n        Py_DECREF((PyObject *)stgdict);\n        return NULL;\n    }\n    stgdict->shape[0] = length;\n    if (stgdict->ndim > 1) {\n        memmove(&stgdict->shape[1], itemdict->shape,\n            sizeof(Py_ssize_t) * (stgdict->ndim - 1));\n    }\n\n    itemsize = itemdict->size;\n    if (itemsize != 0 && length > PY_SSIZE_T_MAX / itemsize) {\n        PyErr_SetString(PyExc_OverflowError,\n                        \"array too large\");\n        Py_DECREF(stgdict);\n        return NULL;\n    }\n\n    itemalign = itemdict->align;\n\n    if (itemdict->flags & (TYPEFLAG_ISPOINTER | TYPEFLAG_HASPOINTER))\n        stgdict->flags |= TYPEFLAG_HASPOINTER;\n\n    stgdict->size = itemsize * length;\n    stgdict->align = itemalign;\n    stgdict->length = length;\n    Py_INCREF(proto);\n    stgdict->proto = proto;\n\n    stgdict->paramfunc = &PyCArrayType_paramfunc;\n\n    /* Arrays are passed as pointers to function calls. */\n    stgdict->ffi_type_pointer = ffi_type_pointer;\n\n    /* create the new instance (which is a class,\n       since we are a metatype!) */\n    result = (PyTypeObject *)PyType_Type.tp_new(type, args, kwds);\n    if (result == NULL) {\n        Py_DECREF(stgdict);\n        return NULL;\n    }\n\n    /* replace the class dict by our updated spam dict */\n    if (-1 == PyDict_Update((PyObject *)stgdict, result->tp_dict)) {\n        Py_DECREF(result);\n        Py_DECREF((PyObject *)stgdict);\n        return NULL;\n    }\n    Py_SETREF(result->tp_dict, (PyObject *)stgdict);\n\n    /* Special case for character arrays.\n       A permanent annoyance: char arrays are also strings!\n    */\n    if (itemdict->getfunc == _ctypes_get_fielddesc(\"c\")->getfunc) {\n        if (-1 == add_getset(result, CharArray_getsets)) {\n            Py_DECREF(result);\n            return NULL;\n        }\n#ifdef CTYPES_UNICODE\n    } else if (itemdict->getfunc == _ctypes_get_fielddesc(\"u\")->getfunc) {\n        if (-1 == add_getset(result, WCharArray_getsets)) {\n            Py_DECREF(result);\n            return NULL;\n        }\n#endif\n    }\n\n    return (PyObject *)result;\n}\n\nPyTypeObject PyCArrayType_Type = {\n    PyVarObject_HEAD_INIT(NULL, 0)\n    \"_ctypes.PyCArrayType\",                     /* tp_name */\n    0,                                          /* tp_basicsize */\n    0,                                          /* tp_itemsize */\n    0,                                          /* tp_dealloc */\n    0,                                          /* tp_print */\n    0,                                          /* tp_getattr */\n    0,                                          /* tp_setattr */\n    0,                                          /* tp_compare */\n    0,                                          /* tp_repr */\n    0,                                          /* tp_as_number */\n    &CDataType_as_sequence,                     /* tp_as_sequence */\n    0,                                          /* tp_as_mapping */\n    0,                                          /* tp_hash */\n    0,                                          /* tp_call */\n    0,                                          /* tp_str */\n    0,                                          /* tp_getattro */\n    0,                                          /* tp_setattro */\n    0,                                          /* tp_as_buffer */\n    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_BASETYPE, /* tp_flags */\n    \"metatype for the Array Objects\",           /* tp_doc */\n    0,                                          /* tp_traverse */\n    0,                                          /* tp_clear */\n    0,                                          /* tp_richcompare */\n    0,                                          /* tp_weaklistoffset */\n    0,                                          /* tp_iter */\n    0,                                          /* tp_iternext */\n    CDataType_methods,                          /* tp_methods */\n    0,                                          /* tp_members */\n    0,                                          /* tp_getset */\n    0,                                          /* tp_base */\n    0,                                          /* tp_dict */\n    0,                                          /* tp_descr_get */\n    0,                                          /* tp_descr_set */\n    0,                                          /* tp_dictoffset */\n    0,                                          /* tp_init */\n    0,                                          /* tp_alloc */\n    PyCArrayType_new,                                   /* tp_new */\n    0,                                          /* tp_free */\n};\n\n\n/******************************************************************/\n/*\n  PyCSimpleType_Type\n*/\n/*\n\nPyCSimpleType_new ensures that the new Simple_Type subclass created has a valid\n_type_ attribute.\n\n*/\n\nstatic char *SIMPLE_TYPE_CHARS = \"cbBhHiIlLdfuzZqQPXOv?g\";\n\nstatic PyObject *\nc_wchar_p_from_param(PyObject *type, PyObject *value)\n{\n    PyObject *as_parameter;\n    int res;\n#if (PYTHON_API_VERSION < 1012)\n# error not supported\n#endif\n    if (value == Py_None) {\n        Py_INCREF(Py_None);\n        return Py_None;\n    }\n    if (PyUnicode_Check(value) || PyString_Check(value)) {\n        PyCArgObject *parg;\n        struct fielddesc *fd = _ctypes_get_fielddesc(\"Z\");\n\n        parg = PyCArgObject_new();\n        if (parg == NULL)\n            return NULL;\n        parg->pffi_type = &ffi_type_pointer;\n        parg->tag = 'Z';\n        parg->obj = fd->setfunc(&parg->value, value, 0);\n        if (parg->obj == NULL) {\n            Py_DECREF(parg);\n            return NULL;\n        }\n        return (PyObject *)parg;\n    }\n    res = PyObject_IsInstance(value, type);\n    if (res == -1)\n        return NULL;\n    if (res) {\n        Py_INCREF(value);\n        return value;\n    }\n    if (ArrayObject_Check(value) || PointerObject_Check(value)) {\n        /* c_wchar array instance or pointer(c_wchar(...)) */\n        StgDictObject *dt = PyObject_stgdict(value);\n        StgDictObject *dict;\n        assert(dt); /* Cannot be NULL for pointer or array objects */\n        dict = dt && dt->proto ? PyType_stgdict(dt->proto) : NULL;\n        if (dict && (dict->setfunc == _ctypes_get_fielddesc(\"u\")->setfunc)) {\n            Py_INCREF(value);\n            return value;\n        }\n    }\n    if (PyCArg_CheckExact(value)) {\n        /* byref(c_char(...)) */\n        PyCArgObject *a = (PyCArgObject *)value;\n        StgDictObject *dict = PyObject_stgdict(a->obj);\n        if (dict && (dict->setfunc == _ctypes_get_fielddesc(\"u\")->setfunc)) {\n            Py_INCREF(value);\n            return value;\n        }\n    }\n\n    as_parameter = PyObject_GetAttrString(value, \"_as_parameter_\");\n    if (as_parameter) {\n        value = c_wchar_p_from_param(type, as_parameter);\n        Py_DECREF(as_parameter);\n        return value;\n    }\n    /* XXX better message */\n    PyErr_SetString(PyExc_TypeError,\n                    \"wrong type\");\n    return NULL;\n}\n\nstatic PyObject *\nc_char_p_from_param(PyObject *type, PyObject *value)\n{\n    PyObject *as_parameter;\n    int res;\n#if (PYTHON_API_VERSION < 1012)\n# error not supported\n#endif\n    if (value == Py_None) {\n        Py_INCREF(Py_None);\n        return Py_None;\n    }\n    if (PyString_Check(value) || PyUnicode_Check(value)) {\n        PyCArgObject *parg;\n        struct fielddesc *fd = _ctypes_get_fielddesc(\"z\");\n\n        parg = PyCArgObject_new();\n        if (parg == NULL)\n            return NULL;\n        parg->pffi_type = &ffi_type_pointer;\n        parg->tag = 'z';\n        parg->obj = fd->setfunc(&parg->value, value, 0);\n        if (parg->obj == NULL) {\n            Py_DECREF(parg);\n            return NULL;\n        }\n        return (PyObject *)parg;\n    }\n    res = PyObject_IsInstance(value, type);\n    if (res == -1)\n        return NULL;\n    if (res) {\n        Py_INCREF(value);\n        return value;\n    }\n    if (ArrayObject_Check(value) || PointerObject_Check(value)) {\n        /* c_char array instance or pointer(c_char(...)) */\n        StgDictObject *dt = PyObject_stgdict(value);\n        StgDictObject *dict;\n        assert(dt); /* Cannot be NULL for pointer or array objects */\n        dict = dt && dt->proto ? PyType_stgdict(dt->proto) : NULL;\n        if (dict && (dict->setfunc == _ctypes_get_fielddesc(\"c\")->setfunc)) {\n            Py_INCREF(value);\n            return value;\n        }\n    }\n    if (PyCArg_CheckExact(value)) {\n        /* byref(c_char(...)) */\n        PyCArgObject *a = (PyCArgObject *)value;\n        StgDictObject *dict = PyObject_stgdict(a->obj);\n        if (dict && (dict->setfunc == _ctypes_get_fielddesc(\"c\")->setfunc)) {\n            Py_INCREF(value);\n            return value;\n        }\n    }\n\n    as_parameter = PyObject_GetAttrString(value, \"_as_parameter_\");\n    if (as_parameter) {\n        value = c_char_p_from_param(type, as_parameter);\n        Py_DECREF(as_parameter);\n        return value;\n    }\n    /* XXX better message */\n    PyErr_SetString(PyExc_TypeError,\n                    \"wrong type\");\n    return NULL;\n}\n\nstatic PyObject *\nc_void_p_from_param(PyObject *type, PyObject *value)\n{\n    StgDictObject *stgd;\n    PyObject *as_parameter;\n    int res;\n#if (PYTHON_API_VERSION < 1012)\n# error not supported\n#endif\n\n/* None */\n    if (value == Py_None) {\n        Py_INCREF(Py_None);\n        return Py_None;\n    }\n    /* Should probably allow buffer interface as well */\n/* int, long */\n    if (_PyAnyInt_Check(value)) {\n        PyCArgObject *parg;\n        struct fielddesc *fd = _ctypes_get_fielddesc(\"P\");\n\n        parg = PyCArgObject_new();\n        if (parg == NULL)\n            return NULL;\n        parg->pffi_type = &ffi_type_pointer;\n        parg->tag = 'P';\n        parg->obj = fd->setfunc(&parg->value, value, 0);\n        if (parg->obj == NULL) {\n            Py_DECREF(parg);\n            return NULL;\n        }\n        return (PyObject *)parg;\n    }\n/* string */\n    if (PyString_Check(value)) {\n        PyCArgObject *parg;\n        struct fielddesc *fd = _ctypes_get_fielddesc(\"z\");\n\n        parg = PyCArgObject_new();\n        if (parg == NULL)\n            return NULL;\n        parg->pffi_type = &ffi_type_pointer;\n        parg->tag = 'z';\n        parg->obj = fd->setfunc(&parg->value, value, 0);\n        if (parg->obj == NULL) {\n            Py_DECREF(parg);\n            return NULL;\n        }\n        return (PyObject *)parg;\n    }\n/* unicode */\n    if (PyUnicode_Check(value)) {\n        PyCArgObject *parg;\n        struct fielddesc *fd = _ctypes_get_fielddesc(\"Z\");\n\n        parg = PyCArgObject_new();\n        if (parg == NULL)\n            return NULL;\n        parg->pffi_type = &ffi_type_pointer;\n        parg->tag = 'Z';\n        parg->obj = fd->setfunc(&parg->value, value, 0);\n        if (parg->obj == NULL) {\n            Py_DECREF(parg);\n            return NULL;\n        }\n        return (PyObject *)parg;\n    }\n/* c_void_p instance (or subclass) */\n    res = PyObject_IsInstance(value, type);\n    if (res == -1)\n        return NULL;\n    if (res) {\n        /* c_void_p instances */\n        Py_INCREF(value);\n        return value;\n    }\n/* ctypes array or pointer instance */\n    if (ArrayObject_Check(value) || PointerObject_Check(value)) {\n        /* Any array or pointer is accepted */\n        Py_INCREF(value);\n        return value;\n    }\n/* byref(...) */\n    if (PyCArg_CheckExact(value)) {\n        /* byref(c_xxx()) */\n        PyCArgObject *a = (PyCArgObject *)value;\n        if (a->tag == 'P') {\n            Py_INCREF(value);\n            return value;\n        }\n    }\n/* function pointer */\n    if (PyCFuncPtrObject_Check(value)) {\n        PyCArgObject *parg;\n        PyCFuncPtrObject *func;\n        func = (PyCFuncPtrObject *)value;\n        parg = PyCArgObject_new();\n        if (parg == NULL)\n            return NULL;\n        parg->pffi_type = &ffi_type_pointer;\n        parg->tag = 'P';\n        Py_INCREF(value);\n        parg->value.p = *(void **)func->b_ptr;\n        parg->obj = value;\n        return (PyObject *)parg;\n    }\n/* c_char_p, c_wchar_p */\n    stgd = PyObject_stgdict(value);\n    if (stgd && CDataObject_Check(value) && stgd->proto && PyString_Check(stgd->proto)) {\n        PyCArgObject *parg;\n\n        switch (PyString_AS_STRING(stgd->proto)[0]) {\n        case 'z': /* c_char_p */\n        case 'Z': /* c_wchar_p */\n            parg = PyCArgObject_new();\n            if (parg == NULL)\n                return NULL;\n            parg->pffi_type = &ffi_type_pointer;\n            parg->tag = 'Z';\n            Py_INCREF(value);\n            parg->obj = value;\n            /* Remember: b_ptr points to where the pointer is stored! */\n            parg->value.p = *(void **)(((CDataObject *)value)->b_ptr);\n            return (PyObject *)parg;\n        }\n    }\n\n    as_parameter = PyObject_GetAttrString(value, \"_as_parameter_\");\n    if (as_parameter) {\n        value = c_void_p_from_param(type, as_parameter);\n        Py_DECREF(as_parameter);\n        return value;\n    }\n    /* XXX better message */\n    PyErr_SetString(PyExc_TypeError,\n                    \"wrong type\");\n    return NULL;\n}\n#if (PYTHON_API_VERSION >= 1012)\n\nstatic PyMethodDef c_void_p_method = { \"from_param\", c_void_p_from_param, METH_O };\nstatic PyMethodDef c_char_p_method = { \"from_param\", c_char_p_from_param, METH_O };\nstatic PyMethodDef c_wchar_p_method = { \"from_param\", c_wchar_p_from_param, METH_O };\n\n#else\n#error\nstatic PyMethodDef c_void_p_method = { \"from_param\", c_void_p_from_param, METH_VARARGS };\nstatic PyMethodDef c_char_p_method = { \"from_param\", c_char_p_from_param, METH_VARARGS };\nstatic PyMethodDef c_wchar_p_method = { \"from_param\", c_wchar_p_from_param, METH_VARARGS };\n\n#endif\n\nstatic PyObject *CreateSwappedType(PyTypeObject *type, PyObject *args, PyObject *kwds,\n                                   PyObject *proto, struct fielddesc *fmt)\n{\n    PyTypeObject *result;\n    StgDictObject *stgdict;\n    PyObject *name = PyTuple_GET_ITEM(args, 0);\n    PyObject *swapped_args;\n    static PyObject *suffix;\n    Py_ssize_t i;\n\n    swapped_args = PyTuple_New(PyTuple_GET_SIZE(args));\n    if (!swapped_args)\n        return NULL;\n\n    if (suffix == NULL)\n#ifdef WORDS_BIGENDIAN\n        suffix = PyString_InternFromString(\"_le\");\n#else\n        suffix = PyString_InternFromString(\"_be\");\n#endif\n\n    Py_INCREF(name);\n    PyString_Concat(&name, suffix);\n    if (name == NULL) {\n        Py_DECREF(swapped_args);\n        return NULL;\n    }\n\n    PyTuple_SET_ITEM(swapped_args, 0, name);\n    for (i=1; i<PyTuple_GET_SIZE(args); ++i) {\n        PyObject *v = PyTuple_GET_ITEM(args, i);\n        Py_INCREF(v);\n        PyTuple_SET_ITEM(swapped_args, i, v);\n    }\n\n    /* create the new instance (which is a class,\n       since we are a metatype!) */\n    result = (PyTypeObject *)PyType_Type.tp_new(type, swapped_args, kwds);\n    Py_DECREF(swapped_args);\n    if (result == NULL)\n        return NULL;\n\n    stgdict = (StgDictObject *)PyObject_CallObject(\n        (PyObject *)&PyCStgDict_Type, NULL);\n    if (!stgdict) {\n        Py_DECREF(result);\n        return NULL;\n    }\n\n    stgdict->ffi_type_pointer = *fmt->pffi_type;\n    stgdict->align = fmt->pffi_type->alignment;\n    stgdict->length = 0;\n    stgdict->size = fmt->pffi_type->size;\n    stgdict->setfunc = fmt->setfunc_swapped;\n    stgdict->getfunc = fmt->getfunc_swapped;\n\n    Py_INCREF(proto);\n    stgdict->proto = proto;\n\n    /* replace the class dict by our updated spam dict */\n    if (-1 == PyDict_Update((PyObject *)stgdict, result->tp_dict)) {\n        Py_DECREF(result);\n        Py_DECREF((PyObject *)stgdict);\n        return NULL;\n    }\n    Py_SETREF(result->tp_dict, (PyObject *)stgdict);\n\n    return (PyObject *)result;\n}\n\nstatic PyCArgObject *\nPyCSimpleType_paramfunc(CDataObject *self)\n{\n    StgDictObject *dict;\n    char *fmt;\n    PyCArgObject *parg;\n    struct fielddesc *fd;\n\n    dict = PyObject_stgdict((PyObject *)self);\n    assert(dict); /* Cannot be NULL for CDataObject instances */\n    fmt = PyString_AsString(dict->proto);\n    assert(fmt);\n\n    fd = _ctypes_get_fielddesc(fmt);\n    assert(fd);\n\n    parg = PyCArgObject_new();\n    if (parg == NULL)\n        return NULL;\n\n    parg->tag = fmt[0];\n    parg->pffi_type = fd->pffi_type;\n    Py_INCREF(self);\n    parg->obj = (PyObject *)self;\n    memcpy(&parg->value, self->b_ptr, self->b_size);\n    return parg;\n}\n\nstatic PyObject *\nPyCSimpleType_new(PyTypeObject *type, PyObject *args, PyObject *kwds)\n{\n    PyTypeObject *result;\n    StgDictObject *stgdict;\n    PyObject *proto;\n    const char *proto_str;\n    Py_ssize_t proto_len;\n    PyMethodDef *ml;\n    struct fielddesc *fmt;\n\n    /* create the new instance (which is a class,\n       since we are a metatype!) */\n    result = (PyTypeObject *)PyType_Type.tp_new(type, args, kwds);\n    if (result == NULL)\n        return NULL;\n\n    proto = PyObject_GetAttrString((PyObject *)result, \"_type_\"); /* new ref */\n    if (!proto) {\n        PyErr_SetString(PyExc_AttributeError,\n                        \"class must define a '_type_' attribute\");\n  error:\n        Py_XDECREF(proto);\n        Py_XDECREF(result);\n        return NULL;\n    }\n    if (PyString_Check(proto)) {\n        proto_str = PyString_AS_STRING(proto);\n        proto_len = PyString_GET_SIZE(proto);\n    } else {\n        PyErr_SetString(PyExc_TypeError,\n            \"class must define a '_type_' string attribute\");\n        goto error;\n    }\n    if (proto_len != 1) {\n        PyErr_SetString(PyExc_ValueError,\n                        \"class must define a '_type_' attribute \"\n                        \"which must be a string of length 1\");\n        goto error;\n    }\n    if (!strchr(SIMPLE_TYPE_CHARS, *proto_str)) {\n        PyErr_Format(PyExc_AttributeError,\n                     \"class must define a '_type_' attribute which must be\\n\"\n                     \"a single character string containing one of '%s'.\",\n                     SIMPLE_TYPE_CHARS);\n        goto error;\n    }\n    fmt = _ctypes_get_fielddesc(PyString_AS_STRING(proto));\n    if (fmt == NULL) {\n        PyErr_Format(PyExc_ValueError,\n                     \"_type_ '%s' not supported\",\n                     PyString_AS_STRING(proto));\n        goto error;\n    }\n\n    stgdict = (StgDictObject *)PyObject_CallObject(\n        (PyObject *)&PyCStgDict_Type, NULL);\n    if (!stgdict)\n        goto error;\n\n    stgdict->ffi_type_pointer = *fmt->pffi_type;\n    stgdict->align = fmt->pffi_type->alignment;\n    stgdict->length = 0;\n    stgdict->size = fmt->pffi_type->size;\n    stgdict->setfunc = fmt->setfunc;\n    stgdict->getfunc = fmt->getfunc;\n#ifdef WORDS_BIGENDIAN\n    stgdict->format = _ctypes_alloc_format_string_for_type(proto_str[0], 1);\n#else\n    stgdict->format = _ctypes_alloc_format_string_for_type(proto_str[0], 0);\n#endif\n    if (stgdict->format == NULL) {\n        Py_DECREF(result);\n        Py_DECREF(proto);\n        Py_DECREF((PyObject *)stgdict);\n        return NULL;\n    }\n\n    stgdict->paramfunc = PyCSimpleType_paramfunc;\n/*\n    if (result->tp_base != &Simple_Type) {\n        stgdict->setfunc = NULL;\n        stgdict->getfunc = NULL;\n    }\n*/\n\n    /* This consumes the refcount on proto which we have */\n    stgdict->proto = proto;\n\n    /* replace the class dict by our updated spam dict */\n    if (-1 == PyDict_Update((PyObject *)stgdict, result->tp_dict)) {\n        Py_DECREF(result);\n        Py_DECREF((PyObject *)stgdict);\n        return NULL;\n    }\n    Py_DECREF(result->tp_dict);\n    result->tp_dict = (PyObject *)stgdict;\n\n    /* Install from_param class methods in ctypes base classes.\n       Overrides the PyCSimpleType_from_param generic method.\n     */\n    if (result->tp_base == &Simple_Type) {\n        switch (PyString_AS_STRING(proto)[0]) {\n        case 'z': /* c_char_p */\n            ml = &c_char_p_method;\n            stgdict->flags |= TYPEFLAG_ISPOINTER;\n            break;\n        case 'Z': /* c_wchar_p */\n            ml = &c_wchar_p_method;\n            stgdict->flags |= TYPEFLAG_ISPOINTER;\n            break;\n        case 'P': /* c_void_p */\n            ml = &c_void_p_method;\n            stgdict->flags |= TYPEFLAG_ISPOINTER;\n            break;\n        case 's':\n        case 'X':\n        case 'O':\n            ml = NULL;\n            stgdict->flags |= TYPEFLAG_ISPOINTER;\n            break;\n        default:\n            ml = NULL;\n            break;\n        }\n\n        if (ml) {\n#if (PYTHON_API_VERSION >= 1012)\n            PyObject *meth;\n            int x;\n            meth = PyDescr_NewClassMethod(result, ml);\n            if (!meth) {\n                Py_DECREF(result);\n                return NULL;\n            }\n#else\n#error\n            PyObject *meth, *func;\n            int x;\n            func = PyCFunction_New(ml, NULL);\n            if (!func) {\n                Py_DECREF(result);\n                return NULL;\n            }\n            meth = PyObject_CallFunctionObjArgs(\n                (PyObject *)&PyClassMethod_Type,\n                func, NULL);\n            Py_DECREF(func);\n            if (!meth) {\n                Py_DECREF(result);\n                return NULL;\n            }\n#endif\n            x = PyDict_SetItemString(result->tp_dict,\n                                     ml->ml_name,\n                                     meth);\n            Py_DECREF(meth);\n            if (x == -1) {\n                Py_DECREF(result);\n                return NULL;\n            }\n        }\n    }\n\n    if (type == &PyCSimpleType_Type && fmt->setfunc_swapped && fmt->getfunc_swapped) {\n        PyObject *swapped = CreateSwappedType(type, args, kwds,\n                                              proto, fmt);\n        StgDictObject *sw_dict;\n        if (swapped == NULL) {\n            Py_DECREF(result);\n            return NULL;\n        }\n        sw_dict = PyType_stgdict(swapped);\n#ifdef WORDS_BIGENDIAN\n        PyObject_SetAttrString((PyObject *)result, \"__ctype_le__\", swapped);\n        PyObject_SetAttrString((PyObject *)result, \"__ctype_be__\", (PyObject *)result);\n        PyObject_SetAttrString(swapped, \"__ctype_be__\", (PyObject *)result);\n        PyObject_SetAttrString(swapped, \"__ctype_le__\", swapped);\n        /* We are creating the type for the OTHER endian */\n        sw_dict->format = _ctypes_alloc_format_string(\"<\", stgdict->format+1);\n#else\n        PyObject_SetAttrString((PyObject *)result, \"__ctype_be__\", swapped);\n        PyObject_SetAttrString((PyObject *)result, \"__ctype_le__\", (PyObject *)result);\n        PyObject_SetAttrString(swapped, \"__ctype_le__\", (PyObject *)result);\n        PyObject_SetAttrString(swapped, \"__ctype_be__\", swapped);\n        /* We are creating the type for the OTHER endian */\n        sw_dict->format = _ctypes_alloc_format_string(\">\", stgdict->format+1);\n#endif\n        Py_DECREF(swapped);\n        if (PyErr_Occurred()) {\n            Py_DECREF(result);\n            return NULL;\n        }\n    };\n\n    return (PyObject *)result;\n}\n\n/*\n * This is a *class method*.\n * Convert a parameter into something that ConvParam can handle.\n */\nstatic PyObject *\nPyCSimpleType_from_param(PyObject *type, PyObject *value)\n{\n    StgDictObject *dict;\n    char *fmt;\n    PyCArgObject *parg;\n    struct fielddesc *fd;\n    PyObject *as_parameter;\n    int res;\n\n    /* If the value is already an instance of the requested type,\n       we can use it as is */\n    res = PyObject_IsInstance(value, type);\n    if (res == -1)\n        return NULL;\n    if (res) {\n        Py_INCREF(value);\n        return value;\n    }\n\n    dict = PyType_stgdict(type);\n    if (!dict) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"abstract class\");\n        return NULL;\n    }\n\n    /* I think we can rely on this being a one-character string */\n    fmt = PyString_AsString(dict->proto);\n    assert(fmt);\n\n    fd = _ctypes_get_fielddesc(fmt);\n    assert(fd);\n\n    parg = PyCArgObject_new();\n    if (parg == NULL)\n        return NULL;\n\n    parg->tag = fmt[0];\n    parg->pffi_type = fd->pffi_type;\n    parg->obj = fd->setfunc(&parg->value, value, 0);\n    if (parg->obj)\n        return (PyObject *)parg;\n    PyErr_Clear();\n    Py_DECREF(parg);\n\n    as_parameter = PyObject_GetAttrString(value, \"_as_parameter_\");\n    if (as_parameter) {\n        if (Py_EnterRecursiveCall(\"while processing _as_parameter_\")) {\n            Py_DECREF(as_parameter);\n            return NULL;\n        }\n        value = PyCSimpleType_from_param(type, as_parameter);\n        Py_LeaveRecursiveCall();\n        Py_DECREF(as_parameter);\n        return value;\n    }\n    PyErr_SetString(PyExc_TypeError,\n                    \"wrong type\");\n    return NULL;\n}\n\nstatic PyMethodDef PyCSimpleType_methods[] = {\n    { \"from_param\", PyCSimpleType_from_param, METH_O, from_param_doc },\n    { \"from_address\", CDataType_from_address, METH_O, from_address_doc },\n    { \"from_buffer\", CDataType_from_buffer, METH_VARARGS, from_buffer_doc, },\n    { \"from_buffer_copy\", CDataType_from_buffer_copy, METH_VARARGS, from_buffer_copy_doc, },\n    { \"in_dll\", CDataType_in_dll, METH_VARARGS, in_dll_doc},\n    { NULL, NULL },\n};\n\nPyTypeObject PyCSimpleType_Type = {\n    PyVarObject_HEAD_INIT(NULL, 0)\n    \"_ctypes.PyCSimpleType\",                                    /* tp_name */\n    0,                                          /* tp_basicsize */\n    0,                                          /* tp_itemsize */\n    0,                                          /* tp_dealloc */\n    0,                                          /* tp_print */\n    0,                                          /* tp_getattr */\n    0,                                          /* tp_setattr */\n    0,                                          /* tp_compare */\n    0,                                          /* tp_repr */\n    0,                                          /* tp_as_number */\n    &CDataType_as_sequence,             /* tp_as_sequence */\n    0,                                          /* tp_as_mapping */\n    0,                                          /* tp_hash */\n    0,                                          /* tp_call */\n    0,                                          /* tp_str */\n    0,                                          /* tp_getattro */\n    0,                                          /* tp_setattro */\n    0,                                          /* tp_as_buffer */\n    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_BASETYPE, /* tp_flags */\n    \"metatype for the PyCSimpleType Objects\",           /* tp_doc */\n    0,                                          /* tp_traverse */\n    0,                                          /* tp_clear */\n    0,                                          /* tp_richcompare */\n    0,                                          /* tp_weaklistoffset */\n    0,                                          /* tp_iter */\n    0,                                          /* tp_iternext */\n    PyCSimpleType_methods,                      /* tp_methods */\n    0,                                          /* tp_members */\n    0,                                          /* tp_getset */\n    0,                                          /* tp_base */\n    0,                                          /* tp_dict */\n    0,                                          /* tp_descr_get */\n    0,                                          /* tp_descr_set */\n    0,                                          /* tp_dictoffset */\n    0,                                          /* tp_init */\n    0,                                          /* tp_alloc */\n    PyCSimpleType_new,                                  /* tp_new */\n    0,                                          /* tp_free */\n};\n\n/******************************************************************/\n/*\n  PyCFuncPtrType_Type\n */\n\nstatic PyObject *\nconverters_from_argtypes(PyObject *ob)\n{\n    PyObject *converters;\n    Py_ssize_t i;\n    Py_ssize_t nArgs;\n\n    ob = PySequence_Tuple(ob); /* new reference */\n    if (!ob) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"_argtypes_ must be a sequence of types\");\n        return NULL;\n    }\n\n    nArgs = PyTuple_GET_SIZE(ob);\n    converters = PyTuple_New(nArgs);\n    if (!converters) {\n        Py_DECREF(ob);\n        return NULL;\n    }\n\n    /* I have to check if this is correct. Using c_char, which has a size\n       of 1, will be assumed to be pushed as only one byte!\n       Aren't these promoted to integers by the C compiler and pushed as 4 bytes?\n    */\n\n    for (i = 0; i < nArgs; ++i) {\n        PyObject *tp = PyTuple_GET_ITEM(ob, i);\n        PyObject *cnv = PyObject_GetAttrString(tp, \"from_param\");\n        if (!cnv)\n            goto argtypes_error_1;\n        PyTuple_SET_ITEM(converters, i, cnv);\n    }\n    Py_DECREF(ob);\n    return converters;\n\n  argtypes_error_1:\n    Py_XDECREF(converters);\n    Py_DECREF(ob);\n    PyErr_Format(PyExc_TypeError,\n#if (PY_VERSION_HEX < 0x02050000)\n                 \"item %d in _argtypes_ has no from_param method\",\n#else\n                 \"item %zd in _argtypes_ has no from_param method\",\n#endif\n                 i+1);\n    return NULL;\n}\n\nstatic int\nmake_funcptrtype_dict(StgDictObject *stgdict)\n{\n    PyObject *ob;\n    PyObject *converters = NULL;\n\n    stgdict->align = _ctypes_get_fielddesc(\"P\")->pffi_type->alignment;\n    stgdict->length = 1;\n    stgdict->size = sizeof(void *);\n    stgdict->setfunc = NULL;\n    stgdict->getfunc = NULL;\n    stgdict->ffi_type_pointer = ffi_type_pointer;\n\n    ob = PyDict_GetItemString((PyObject *)stgdict, \"_flags_\");\n    if (!ob || !PyInt_Check(ob)) {\n        PyErr_SetString(PyExc_TypeError,\n            \"class must define _flags_ which must be an integer\");\n        return -1;\n    }\n    stgdict->flags = PyInt_AS_LONG(ob) | TYPEFLAG_ISPOINTER;\n\n    /* _argtypes_ is optional... */\n    ob = PyDict_GetItemString((PyObject *)stgdict, \"_argtypes_\");\n    if (ob) {\n        converters = converters_from_argtypes(ob);\n        if (!converters)\n            goto error;\n        Py_INCREF(ob);\n        stgdict->argtypes = ob;\n        stgdict->converters = converters;\n    }\n\n    ob = PyDict_GetItemString((PyObject *)stgdict, \"_restype_\");\n    if (ob) {\n        if (ob != Py_None && !PyType_stgdict(ob) && !PyCallable_Check(ob)) {\n            PyErr_SetString(PyExc_TypeError,\n                \"_restype_ must be a type, a callable, or None\");\n            return -1;\n        }\n        Py_INCREF(ob);\n        stgdict->restype = ob;\n        stgdict->checker = PyObject_GetAttrString(ob, \"_check_retval_\");\n        if (stgdict->checker == NULL)\n            PyErr_Clear();\n    }\n/* XXX later, maybe.\n    ob = PyDict_GetItemString((PyObject *)stgdict, \"_errcheck_\");\n    if (ob) {\n        if (!PyCallable_Check(ob)) {\n            PyErr_SetString(PyExc_TypeError,\n                \"_errcheck_ must be callable\");\n            return -1;\n        }\n        Py_INCREF(ob);\n        stgdict->errcheck = ob;\n    }\n*/\n    return 0;\n\n  error:\n    Py_XDECREF(converters);\n    return -1;\n\n}\n\nstatic PyCArgObject *\nPyCFuncPtrType_paramfunc(CDataObject *self)\n{\n    PyCArgObject *parg;\n\n    parg = PyCArgObject_new();\n    if (parg == NULL)\n        return NULL;\n\n    parg->tag = 'P';\n    parg->pffi_type = &ffi_type_pointer;\n    Py_INCREF(self);\n    parg->obj = (PyObject *)self;\n    parg->value.p = *(void **)self->b_ptr;\n    return parg;\n}\n\nstatic PyObject *\nPyCFuncPtrType_new(PyTypeObject *type, PyObject *args, PyObject *kwds)\n{\n    PyTypeObject *result;\n    StgDictObject *stgdict;\n\n    stgdict = (StgDictObject *)PyObject_CallObject(\n        (PyObject *)&PyCStgDict_Type, NULL);\n    if (!stgdict)\n        return NULL;\n\n    stgdict->paramfunc = PyCFuncPtrType_paramfunc;\n    /* We do NOT expose the function signature in the format string.  It\n       is impossible, generally, because the only requirement for the\n       argtypes items is that they have a .from_param method - we do not\n       know the types of the arguments (although, in practice, most\n       argtypes would be a ctypes type).\n    */\n    stgdict->format = _ctypes_alloc_format_string(NULL, \"X{}\");\n    stgdict->flags |= TYPEFLAG_ISPOINTER;\n\n    /* create the new instance (which is a class,\n       since we are a metatype!) */\n    result = (PyTypeObject *)PyType_Type.tp_new(type, args, kwds);\n    if (result == NULL) {\n        Py_DECREF((PyObject *)stgdict);\n        return NULL;\n    }\n\n    /* replace the class dict by our updated storage dict */\n    if (-1 == PyDict_Update((PyObject *)stgdict, result->tp_dict)) {\n        Py_DECREF(result);\n        Py_DECREF((PyObject *)stgdict);\n        return NULL;\n    }\n    Py_SETREF(result->tp_dict, (PyObject *)stgdict);\n\n    if (-1 == make_funcptrtype_dict(stgdict)) {\n        Py_DECREF(result);\n        return NULL;\n    }\n\n    return (PyObject *)result;\n}\n\nPyTypeObject PyCFuncPtrType_Type = {\n    PyVarObject_HEAD_INIT(NULL, 0)\n    \"_ctypes.PyCFuncPtrType\",                           /* tp_name */\n    0,                                          /* tp_basicsize */\n    0,                                          /* tp_itemsize */\n    0,                                          /* tp_dealloc */\n    0,                                          /* tp_print */\n    0,                                          /* tp_getattr */\n    0,                                          /* tp_setattr */\n    0,                                          /* tp_compare */\n    0,                                          /* tp_repr */\n    0,                                          /* tp_as_number */\n    &CDataType_as_sequence,                     /* tp_as_sequence */\n    0,                                          /* tp_as_mapping */\n    0,                                          /* tp_hash */\n    0,                                          /* tp_call */\n    0,                                          /* tp_str */\n    0,                                          /* tp_getattro */\n    0,                                          /* tp_setattro */\n    0,                                          /* tp_as_buffer */\n    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_BASETYPE | Py_TPFLAGS_HAVE_GC, /* tp_flags */\n    \"metatype for C function pointers\",         /* tp_doc */\n    (traverseproc)CDataType_traverse,           /* tp_traverse */\n    (inquiry)CDataType_clear,                   /* tp_clear */\n    0,                                          /* tp_richcompare */\n    0,                                          /* tp_weaklistoffset */\n    0,                                          /* tp_iter */\n    0,                                          /* tp_iternext */\n    CDataType_methods,                          /* tp_methods */\n    0,                                          /* tp_members */\n    0,                                          /* tp_getset */\n    0,                                          /* tp_base */\n    0,                                          /* tp_dict */\n    0,                                          /* tp_descr_get */\n    0,                                          /* tp_descr_set */\n    0,                                          /* tp_dictoffset */\n    0,                                          /* tp_init */\n    0,                                          /* tp_alloc */\n    PyCFuncPtrType_new,                         /* tp_new */\n    0,                                          /* tp_free */\n};\n\n\n/*****************************************************************\n * Code to keep needed objects alive\n */\n\nstatic CDataObject *\nPyCData_GetContainer(CDataObject *self)\n{\n    while (self->b_base)\n        self = self->b_base;\n    if (self->b_objects == NULL) {\n        if (self->b_length) {\n            self->b_objects = PyDict_New();\n        } else {\n            Py_INCREF(Py_None);\n            self->b_objects = Py_None;\n        }\n    }\n    return self;\n}\n\nstatic PyObject *\nGetKeepedObjects(CDataObject *target)\n{\n    return PyCData_GetContainer(target)->b_objects;\n}\n\nstatic PyObject *\nunique_key(CDataObject *target, Py_ssize_t index)\n{\n    char string[256];\n    char *cp = string;\n    size_t bytes_left;\n\n    assert(sizeof(string) - 1 > sizeof(Py_ssize_t) * 2);\n#if (PY_VERSION_HEX < 0x02050000)\n    cp += sprintf(cp, \"%x\", index);\n#else\n    cp += sprintf(cp, \"%x\", Py_SAFE_DOWNCAST(index, Py_ssize_t, int));\n#endif\n    while (target->b_base) {\n        bytes_left = sizeof(string) - (cp - string) - 1;\n        /* Hex format needs 2 characters per byte */\n        if (bytes_left < sizeof(Py_ssize_t) * 2) {\n            PyErr_SetString(PyExc_ValueError,\n                            \"ctypes object structure too deep\");\n            return NULL;\n        }\n#if (PY_VERSION_HEX < 0x02050000)\n        cp += sprintf(cp, \":%x\", (int)target->b_index);\n#else\n        cp += sprintf(cp, \":%x\", Py_SAFE_DOWNCAST(target->b_index, Py_ssize_t, int));\n#endif\n        target = target->b_base;\n    }\n    return PyString_FromStringAndSize(string, cp-string);\n}\n\n/*\n * Keep a reference to 'keep' in the 'target', at index 'index'.\n *\n * If 'keep' is None, do nothing.\n *\n * Otherwise create a dictionary (if it does not yet exist) id the root\n * objects 'b_objects' item, which will store the 'keep' object under a unique\n * key.\n *\n * The unique_key helper travels the target's b_base pointer down to the root,\n * building a string containing hex-formatted indexes found during traversal,\n * separated by colons.\n *\n * The index tuple is used as a key into the root object's b_objects dict.\n *\n * Note: This function steals a refcount of the third argument, even if it\n * fails!\n */\nstatic int\nKeepRef(CDataObject *target, Py_ssize_t index, PyObject *keep)\n{\n    int result;\n    CDataObject *ob;\n    PyObject *key;\n\n/* Optimization: no need to store None */\n    if (keep == Py_None) {\n        Py_DECREF(Py_None);\n        return 0;\n    }\n    ob = PyCData_GetContainer(target);\n    if (ob->b_objects == NULL || !PyDict_CheckExact(ob->b_objects)) {\n        Py_XSETREF(ob->b_objects, keep); /* refcount consumed */\n        return 0;\n    }\n    key = unique_key(target, index);\n    if (key == NULL) {\n        Py_DECREF(keep);\n        return -1;\n    }\n    result = PyDict_SetItem(ob->b_objects, key, keep);\n    Py_DECREF(key);\n    Py_DECREF(keep);\n    return result;\n}\n\n/******************************************************************/\n/*\n  PyCData_Type\n */\nstatic int\nPyCData_traverse(CDataObject *self, visitproc visit, void *arg)\n{\n    Py_VISIT(self->b_objects);\n    Py_VISIT((PyObject *)self->b_base);\n    return 0;\n}\n\nstatic int\nPyCData_clear(CDataObject *self)\n{\n    Py_CLEAR(self->b_objects);\n    if ((self->b_needsfree)\n        && _CDataObject_HasExternalBuffer(self))\n        PyMem_Free(self->b_ptr);\n    self->b_ptr = NULL;\n    Py_CLEAR(self->b_base);\n    return 0;\n}\n\nstatic void\nPyCData_dealloc(PyObject *self)\n{\n    PyCData_clear((CDataObject *)self);\n    Py_TYPE(self)->tp_free(self);\n}\n\nstatic PyMemberDef PyCData_members[] = {\n    { \"_b_base_\", T_OBJECT,\n      offsetof(CDataObject, b_base), READONLY,\n      \"the base object\" },\n    { \"_b_needsfree_\", T_INT,\n      offsetof(CDataObject, b_needsfree), READONLY,\n      \"whether the object owns the memory or not\" },\n    { \"_objects\", T_OBJECT,\n      offsetof(CDataObject, b_objects), READONLY,\n      \"internal objects tree (NEVER CHANGE THIS OBJECT!)\"},\n    { NULL },\n};\n\n#if (PY_VERSION_HEX >= 0x02060000)\nstatic int PyCData_NewGetBuffer(PyObject *_self, Py_buffer *view, int flags)\n{\n    CDataObject *self = (CDataObject *)_self;\n    StgDictObject *dict = PyObject_stgdict(_self);\n    Py_ssize_t i;\n\n    if (view == NULL) return 0;\n\n    view->buf = self->b_ptr;\n    view->obj = _self;\n    Py_INCREF(_self);\n    view->len = self->b_size;\n    view->readonly = 0;\n    /* use default format character if not set */\n    view->format = dict->format ? dict->format : \"B\";\n    view->ndim = dict->ndim;\n    view->shape = dict->shape;\n    view->itemsize = self->b_size;\n    if (view->itemsize) {\n        for (i = 0; i < view->ndim; ++i) {\n            view->itemsize /= dict->shape[i];\n        }\n    }\n    view->strides = NULL;\n    view->suboffsets = NULL;\n    view->internal = NULL;\n    return 0;\n}\n#endif\n\nstatic Py_ssize_t PyCData_GetSegcount(PyObject *_self, Py_ssize_t *lenp)\n{\n    if (lenp)\n        *lenp = 1;\n    return 1;\n}\n\nstatic Py_ssize_t PyCData_GetBuffer(PyObject *_self, Py_ssize_t seg, void **pptr)\n{\n    CDataObject *self = (CDataObject *)_self;\n    if (seg != 0) {\n        /* Hm. Must this set an exception? */\n        return -1;\n    }\n    *pptr = self->b_ptr;\n    return self->b_size;\n}\n\nstatic PyBufferProcs PyCData_as_buffer = {\n    (readbufferproc)PyCData_GetBuffer,\n    (writebufferproc)PyCData_GetBuffer,\n    (segcountproc)PyCData_GetSegcount,\n    (charbufferproc)NULL,\n#if (PY_VERSION_HEX >= 0x02060000)\n    (getbufferproc)PyCData_NewGetBuffer,\n    (releasebufferproc)NULL,\n#endif\n};\n\n/*\n * CData objects are mutable, so they cannot be hashable!\n */\nstatic long\nPyCData_nohash(PyObject *self)\n{\n    PyErr_SetString(PyExc_TypeError, \"unhashable type\");\n    return -1;\n}\n\nstatic PyObject *\nPyCData_reduce(PyObject *_self, PyObject *args)\n{\n    CDataObject *self = (CDataObject *)_self;\n    PyObject *dict;\n\n    if (PyObject_stgdict(_self)->flags & (TYPEFLAG_ISPOINTER|TYPEFLAG_HASPOINTER)) {\n        PyErr_SetString(PyExc_ValueError,\n                        \"ctypes objects containing pointers cannot be pickled\");\n        return NULL;\n    }\n    dict = PyObject_GetAttrString(_self, \"__dict__\");\n    if (dict == NULL) {\n        return NULL;\n    }\n    return Py_BuildValue(\"O(O(NN))\", _unpickle, Py_TYPE(_self), dict,\n                         PyString_FromStringAndSize(self->b_ptr, self->b_size));\n}\n\nstatic PyObject *\nPyCData_setstate(PyObject *_self, PyObject *args)\n{\n    void *data;\n    Py_ssize_t len;\n    int res;\n    PyObject *dict, *mydict;\n    CDataObject *self = (CDataObject *)_self;\n    if (!PyArg_ParseTuple(args, \"Os#\", &dict, &data, &len))\n        return NULL;\n    if (len > self->b_size)\n        len = self->b_size;\n    memmove(self->b_ptr, data, len);\n    mydict = PyObject_GetAttrString(_self, \"__dict__\");\n    if (mydict == NULL) {\n        return NULL;\n    }\n    if (!PyDict_Check(mydict)) {\n        PyErr_Format(PyExc_TypeError,\n                     \"%.200s.__dict__ must be a dictionary, not %.200s\",\n                     Py_TYPE(_self)->tp_name, Py_TYPE(mydict)->tp_name);\n        Py_DECREF(mydict);\n        return NULL;\n    }\n    res = PyDict_Update(mydict, dict);\n    Py_DECREF(mydict);\n    if (res == -1)\n        return NULL;\n    Py_INCREF(Py_None);\n    return Py_None;\n}\n\n/*\n * default __ctypes_from_outparam__ method returns self.\n */\nstatic PyObject *\nPyCData_from_outparam(PyObject *self, PyObject *args)\n{\n    Py_INCREF(self);\n    return self;\n}\n\nstatic PyMethodDef PyCData_methods[] = {\n    { \"__ctypes_from_outparam__\", PyCData_from_outparam, METH_NOARGS, },\n    { \"__reduce__\", PyCData_reduce, METH_NOARGS, },\n    { \"__setstate__\", PyCData_setstate, METH_VARARGS, },\n    { NULL, NULL },\n};\n\nPyTypeObject PyCData_Type = {\n    PyVarObject_HEAD_INIT(NULL, 0)\n    \"_ctypes._CData\",\n    sizeof(CDataObject),                        /* tp_basicsize */\n    0,                                          /* tp_itemsize */\n    PyCData_dealloc,                                    /* tp_dealloc */\n    0,                                          /* tp_print */\n    0,                                          /* tp_getattr */\n    0,                                          /* tp_setattr */\n    0,                                          /* tp_compare */\n    0,                                          /* tp_repr */\n    0,                                          /* tp_as_number */\n    0,                                          /* tp_as_sequence */\n    0,                                          /* tp_as_mapping */\n    PyCData_nohash,                             /* tp_hash */\n    0,                                          /* tp_call */\n    0,                                          /* tp_str */\n    0,                                          /* tp_getattro */\n    0,                                          /* tp_setattro */\n    &PyCData_as_buffer,                         /* tp_as_buffer */\n    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_NEWBUFFER | Py_TPFLAGS_BASETYPE, /* tp_flags */\n    \"XXX to be provided\",                       /* tp_doc */\n    (traverseproc)PyCData_traverse,             /* tp_traverse */\n    (inquiry)PyCData_clear,                     /* tp_clear */\n    0,                                          /* tp_richcompare */\n    0,                                          /* tp_weaklistoffset */\n    0,                                          /* tp_iter */\n    0,                                          /* tp_iternext */\n    PyCData_methods,                                    /* tp_methods */\n    PyCData_members,                                    /* tp_members */\n    0,                                          /* tp_getset */\n    0,                                          /* tp_base */\n    0,                                          /* tp_dict */\n    0,                                          /* tp_descr_get */\n    0,                                          /* tp_descr_set */\n    0,                                          /* tp_dictoffset */\n    0,                                          /* tp_init */\n    0,                                          /* tp_alloc */\n    0,                                          /* tp_new */\n    0,                                          /* tp_free */\n};\n\nstatic int PyCData_MallocBuffer(CDataObject *obj, StgDictObject *dict)\n{\n    if ((size_t)dict->size <= sizeof(obj->b_value)) {\n        /* No need to call malloc, can use the default buffer */\n        obj->b_ptr = (char *)&obj->b_value;\n        /* The b_needsfree flag does not mean that we actually did\n           call PyMem_Malloc to allocate the memory block; instead it\n           means we are the *owner* of the memory and are responsible\n           for freeing resources associated with the memory.  This is\n           also the reason that b_needsfree is exposed to Python.\n         */\n        obj->b_needsfree = 1;\n    } else {\n        /* In python 2.4, and ctypes 0.9.6, the malloc call took about\n           33% of the creation time for c_int().\n        */\n        obj->b_ptr = (char *)PyMem_Malloc(dict->size);\n        if (obj->b_ptr == NULL) {\n            PyErr_NoMemory();\n            return -1;\n        }\n        obj->b_needsfree = 1;\n        memset(obj->b_ptr, 0, dict->size);\n    }\n    obj->b_size = dict->size;\n    return 0;\n}\n\nPyObject *\nPyCData_FromBaseObj(PyObject *type, PyObject *base, Py_ssize_t index, char *adr)\n{\n    CDataObject *cmem;\n    StgDictObject *dict;\n\n    assert(PyType_Check(type));\n    dict = PyType_stgdict(type);\n    if (!dict) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"abstract class\");\n        return NULL;\n    }\n    dict->flags |= DICTFLAG_FINAL;\n    cmem = (CDataObject *)((PyTypeObject *)type)->tp_alloc((PyTypeObject *)type, 0);\n    if (cmem == NULL)\n        return NULL;\n    assert(CDataObject_Check(cmem));\n\n    cmem->b_length = dict->length;\n    cmem->b_size = dict->size;\n    if (base) { /* use base's buffer */\n        assert(CDataObject_Check(base));\n        cmem->b_ptr = adr;\n        cmem->b_needsfree = 0;\n        Py_INCREF(base);\n        cmem->b_base = (CDataObject *)base;\n        cmem->b_index = index;\n    } else { /* copy contents of adr */\n        if (-1 == PyCData_MallocBuffer(cmem, dict)) {\n            return NULL;\n            Py_DECREF(cmem);\n        }\n        memcpy(cmem->b_ptr, adr, dict->size);\n        cmem->b_index = index;\n    }\n    return (PyObject *)cmem;\n}\n\n/*\n Box a memory block into a CData instance.\n*/\nPyObject *\nPyCData_AtAddress(PyObject *type, void *buf)\n{\n    CDataObject *pd;\n    StgDictObject *dict;\n\n    assert(PyType_Check(type));\n    dict = PyType_stgdict(type);\n    if (!dict) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"abstract class\");\n        return NULL;\n    }\n    dict->flags |= DICTFLAG_FINAL;\n\n    pd = (CDataObject *)((PyTypeObject *)type)->tp_alloc((PyTypeObject *)type, 0);\n    if (!pd)\n        return NULL;\n    assert(CDataObject_Check(pd));\n    pd->b_ptr = (char *)buf;\n    pd->b_length = dict->length;\n    pd->b_size = dict->size;\n    return (PyObject *)pd;\n}\n\n/*\n  This function returns TRUE for c_int, c_void_p, and these kind of\n  classes.  FALSE otherwise FALSE also for subclasses of c_int and\n  such.\n*/\nint _ctypes_simple_instance(PyObject *obj)\n{\n    PyTypeObject *type = (PyTypeObject *)obj;\n\n    if (PyCSimpleTypeObject_Check(type))\n        return type->tp_base != &Simple_Type;\n    return 0;\n}\n\nPyObject *\nPyCData_get(PyObject *type, GETFUNC getfunc, PyObject *src,\n          Py_ssize_t index, Py_ssize_t size, char *adr)\n{\n    StgDictObject *dict;\n    if (getfunc)\n        return getfunc(adr, size);\n    assert(type);\n    dict = PyType_stgdict(type);\n    if (dict && dict->getfunc && !_ctypes_simple_instance(type))\n        return dict->getfunc(adr, size);\n    return PyCData_FromBaseObj(type, src, index, adr);\n}\n\n/*\n  Helper function for PyCData_set below.\n*/\nstatic PyObject *\n_PyCData_set(CDataObject *dst, PyObject *type, SETFUNC setfunc, PyObject *value,\n           Py_ssize_t size, char *ptr)\n{\n    CDataObject *src;\n    int err;\n\n    if (setfunc)\n        return setfunc(ptr, value, size);\n\n    if (!CDataObject_Check(value)) {\n        StgDictObject *dict = PyType_stgdict(type);\n        if (dict && dict->setfunc)\n            return dict->setfunc(ptr, value, size);\n        /*\n           If value is a tuple, we try to call the type with the tuple\n           and use the result!\n        */\n        assert(PyType_Check(type));\n        if (PyTuple_Check(value)) {\n            PyObject *ob;\n            PyObject *result;\n            ob = PyObject_CallObject(type, value);\n            if (ob == NULL) {\n                _ctypes_extend_error(PyExc_RuntimeError, \"(%s) \",\n                                  ((PyTypeObject *)type)->tp_name);\n                return NULL;\n            }\n            result = _PyCData_set(dst, type, setfunc, ob,\n                                size, ptr);\n            Py_DECREF(ob);\n            return result;\n        } else if (value == Py_None && PyCPointerTypeObject_Check(type)) {\n            *(void **)ptr = NULL;\n            Py_INCREF(Py_None);\n            return Py_None;\n        } else {\n            PyErr_Format(PyExc_TypeError,\n                         \"expected %s instance, got %s\",\n                         ((PyTypeObject *)type)->tp_name,\n                         Py_TYPE(value)->tp_name);\n            return NULL;\n        }\n    }\n    src = (CDataObject *)value;\n\n    err = PyObject_IsInstance(value, type);\n    if (err == -1)\n        return NULL;\n    if (err) {\n        memcpy(ptr,\n               src->b_ptr,\n               size);\n\n        if (PyCPointerTypeObject_Check(type))\n            /* XXX */;\n\n        value = GetKeepedObjects(src);\n        Py_INCREF(value);\n        return value;\n    }\n\n    if (PyCPointerTypeObject_Check(type)\n        && ArrayObject_Check(value)) {\n        StgDictObject *p1, *p2;\n        PyObject *keep;\n        p1 = PyObject_stgdict(value);\n        assert(p1); /* Cannot be NULL for array instances */\n        p2 = PyType_stgdict(type);\n        assert(p2); /* Cannot be NULL for pointer types */\n\n        if (p1->proto != p2->proto) {\n            PyErr_Format(PyExc_TypeError,\n                         \"incompatible types, %s instance instead of %s instance\",\n                         Py_TYPE(value)->tp_name,\n                         ((PyTypeObject *)type)->tp_name);\n            return NULL;\n        }\n        *(void **)ptr = src->b_ptr;\n\n        keep = GetKeepedObjects(src);\n        /*\n          We are assigning an array object to a field which represents\n          a pointer. This has the same effect as converting an array\n          into a pointer. So, again, we have to keep the whole object\n          pointed to (which is the array in this case) alive, and not\n          only it's object list.  So we create a tuple, containing\n          b_objects list PLUS the array itself, and return that!\n        */\n        return PyTuple_Pack(2, keep, value);\n    }\n    PyErr_Format(PyExc_TypeError,\n                 \"incompatible types, %s instance instead of %s instance\",\n                 Py_TYPE(value)->tp_name,\n                 ((PyTypeObject *)type)->tp_name);\n    return NULL;\n}\n\n/*\n * Set a slice in object 'dst', which has the type 'type',\n * to the value 'value'.\n */\nint\nPyCData_set(PyObject *dst, PyObject *type, SETFUNC setfunc, PyObject *value,\n          Py_ssize_t index, Py_ssize_t size, char *ptr)\n{\n    CDataObject *mem = (CDataObject *)dst;\n    PyObject *result;\n\n    if (!CDataObject_Check(dst)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"not a ctype instance\");\n        return -1;\n    }\n\n    result = _PyCData_set(mem, type, setfunc, value,\n                        size, ptr);\n    if (result == NULL)\n        return -1;\n\n    /* KeepRef steals a refcount from it's last argument */\n    /* If KeepRef fails, we are stumped.  The dst memory block has already\n       been changed */\n    return KeepRef(mem, index, result);\n}\n\n\n/******************************************************************/\nstatic PyObject *\nGenericPyCData_new(PyTypeObject *type, PyObject *args, PyObject *kwds)\n{\n    CDataObject *obj;\n    StgDictObject *dict;\n\n    dict = PyType_stgdict((PyObject *)type);\n    if (!dict) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"abstract class\");\n        return NULL;\n    }\n    dict->flags |= DICTFLAG_FINAL;\n\n    obj = (CDataObject *)type->tp_alloc(type, 0);\n    if (!obj)\n        return NULL;\n\n    obj->b_base = NULL;\n    obj->b_index = 0;\n    obj->b_objects = NULL;\n    obj->b_length = dict->length;\n\n    if (-1 == PyCData_MallocBuffer(obj, dict)) {\n        Py_DECREF(obj);\n        return NULL;\n    }\n    return (PyObject *)obj;\n}\n/*****************************************************************/\n/*\n  PyCFuncPtr_Type\n*/\n\nstatic int\nPyCFuncPtr_set_errcheck(PyCFuncPtrObject *self, PyObject *ob)\n{\n    if (ob && !PyCallable_Check(ob)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"the errcheck attribute must be callable\");\n        return -1;\n    }\n    Py_XINCREF(ob);\n    Py_XSETREF(self->errcheck, ob);\n    return 0;\n}\n\nstatic PyObject *\nPyCFuncPtr_get_errcheck(PyCFuncPtrObject *self)\n{\n    if (self->errcheck) {\n        Py_INCREF(self->errcheck);\n        return self->errcheck;\n    }\n    Py_INCREF(Py_None);\n    return Py_None;\n}\n\nstatic int\nPyCFuncPtr_set_restype(PyCFuncPtrObject *self, PyObject *ob)\n{\n    if (ob == NULL) {\n        Py_CLEAR(self->restype);\n        Py_CLEAR(self->checker);\n        return 0;\n    }\n    if (ob != Py_None && !PyType_stgdict(ob) && !PyCallable_Check(ob)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"restype must be a type, a callable, or None\");\n        return -1;\n    }\n    Py_INCREF(ob);\n    Py_XSETREF(self->restype, ob);\n    Py_XSETREF(self->checker, PyObject_GetAttrString(ob, \"_check_retval_\"));\n    if (self->checker == NULL)\n        PyErr_Clear();\n    return 0;\n}\n\nstatic PyObject *\nPyCFuncPtr_get_restype(PyCFuncPtrObject *self)\n{\n    StgDictObject *dict;\n    if (self->restype) {\n        Py_INCREF(self->restype);\n        return self->restype;\n    }\n    dict = PyObject_stgdict((PyObject *)self);\n    assert(dict); /* Cannot be NULL for PyCFuncPtrObject instances */\n    if (dict->restype) {\n        Py_INCREF(dict->restype);\n        return dict->restype;\n    } else {\n        Py_INCREF(Py_None);\n        return Py_None;\n    }\n}\n\nstatic int\nPyCFuncPtr_set_argtypes(PyCFuncPtrObject *self, PyObject *ob)\n{\n    PyObject *converters;\n\n    if (ob == NULL || ob == Py_None) {\n        Py_CLEAR(self->converters);\n        Py_CLEAR(self->argtypes);\n    } else {\n        converters = converters_from_argtypes(ob);\n        if (!converters)\n            return -1;\n        Py_XSETREF(self->converters, converters);\n        Py_INCREF(ob);\n        Py_XSETREF(self->argtypes, ob);\n    }\n    return 0;\n}\n\nstatic PyObject *\nPyCFuncPtr_get_argtypes(PyCFuncPtrObject *self)\n{\n    StgDictObject *dict;\n    if (self->argtypes) {\n        Py_INCREF(self->argtypes);\n        return self->argtypes;\n    }\n    dict = PyObject_stgdict((PyObject *)self);\n    assert(dict); /* Cannot be NULL for PyCFuncPtrObject instances */\n    if (dict->argtypes) {\n        Py_INCREF(dict->argtypes);\n        return dict->argtypes;\n    } else {\n        Py_INCREF(Py_None);\n        return Py_None;\n    }\n}\n\nstatic PyGetSetDef PyCFuncPtr_getsets[] = {\n    { \"errcheck\", (getter)PyCFuncPtr_get_errcheck, (setter)PyCFuncPtr_set_errcheck,\n      \"a function to check for errors\", NULL },\n    { \"restype\", (getter)PyCFuncPtr_get_restype, (setter)PyCFuncPtr_set_restype,\n      \"specify the result type\", NULL },\n    { \"argtypes\", (getter)PyCFuncPtr_get_argtypes,\n      (setter)PyCFuncPtr_set_argtypes,\n      \"specify the argument types\", NULL },\n    { NULL, NULL }\n};\n\n#ifdef MS_WIN32\nstatic PPROC FindAddress(void *handle, char *name, PyObject *type)\n{\n#ifdef MS_WIN64\n    /* win64 has no stdcall calling conv, so it should\n       also not have the name mangling of it.\n    */\n    return (PPROC)GetProcAddress(handle, name);\n#else\n    PPROC address;\n    char *mangled_name;\n    int i;\n    StgDictObject *dict;\n\n    address = (PPROC)GetProcAddress(handle, name);\n    if (address)\n        return address;\n    if (((size_t)name & ~0xFFFF) == 0) {\n        return NULL;\n    }\n\n    dict = PyType_stgdict((PyObject *)type);\n    /* It should not happen that dict is NULL, but better be safe */\n    if (dict==NULL || dict->flags & FUNCFLAG_CDECL)\n        return address;\n\n    /* for stdcall, try mangled names:\n       funcname -> _funcname@<n>\n       where n is 0, 4, 8, 12, ..., 128\n     */\n    mangled_name = alloca(strlen(name) + 1 + 1 + 1 + 3); /* \\0 _ @ %d */\n    if (!mangled_name)\n        return NULL;\n    for (i = 0; i < 32; ++i) {\n        sprintf(mangled_name, \"_%s@%d\", name, i*4);\n        address = (PPROC)GetProcAddress(handle, mangled_name);\n        if (address)\n            return address;\n    }\n    return NULL;\n#endif\n}\n#endif\n\n/* Return 1 if usable, 0 else and exception set. */\nstatic int\n_check_outarg_type(PyObject *arg, Py_ssize_t index)\n{\n    StgDictObject *dict;\n\n    if (PyCPointerTypeObject_Check(arg))\n        return 1;\n\n    if (PyCArrayTypeObject_Check(arg))\n        return 1;\n\n    dict = PyType_stgdict(arg);\n    if (dict\n        /* simple pointer types, c_void_p, c_wchar_p, BSTR, ... */\n        && PyString_Check(dict->proto)\n/* We only allow c_void_p, c_char_p and c_wchar_p as a simple output parameter type */\n        && (strchr(\"PzZ\", PyString_AS_STRING(dict->proto)[0]))) {\n        return 1;\n    }\n\n    PyErr_Format(PyExc_TypeError,\n                 \"'out' parameter %d must be a pointer type, not %s\",\n                 Py_SAFE_DOWNCAST(index, Py_ssize_t, int),\n                 PyType_Check(arg) ?\n                 ((PyTypeObject *)arg)->tp_name :\n             Py_TYPE(arg)->tp_name);\n    return 0;\n}\n\n/* Returns 1 on success, 0 on error */\nstatic int\n_validate_paramflags(PyTypeObject *type, PyObject *paramflags)\n{\n    Py_ssize_t i, len;\n    StgDictObject *dict;\n    PyObject *argtypes;\n\n    dict = PyType_stgdict((PyObject *)type);\n    if (!dict) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"abstract class\");\n        return 0;\n    }\n    argtypes = dict->argtypes;\n\n    if (paramflags == NULL || dict->argtypes == NULL)\n        return 1;\n\n    if (!PyTuple_Check(paramflags)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"paramflags must be a tuple or None\");\n        return 0;\n    }\n\n    len = PyTuple_GET_SIZE(paramflags);\n    if (len != PyTuple_GET_SIZE(dict->argtypes)) {\n        PyErr_SetString(PyExc_ValueError,\n                        \"paramflags must have the same length as argtypes\");\n        return 0;\n    }\n\n    for (i = 0; i < len; ++i) {\n        PyObject *item = PyTuple_GET_ITEM(paramflags, i);\n        int flag;\n        char *name;\n        PyObject *defval;\n        PyObject *typ;\n        if (!PyArg_ParseTuple(item, \"i|zO\", &flag, &name, &defval)) {\n            PyErr_SetString(PyExc_TypeError,\n                   \"paramflags must be a sequence of (int [,string [,value]]) tuples\");\n            return 0;\n        }\n        typ = PyTuple_GET_ITEM(argtypes, i);\n        switch (flag & (PARAMFLAG_FIN | PARAMFLAG_FOUT | PARAMFLAG_FLCID)) {\n        case 0:\n        case PARAMFLAG_FIN:\n        case PARAMFLAG_FIN | PARAMFLAG_FLCID:\n        case PARAMFLAG_FIN | PARAMFLAG_FOUT:\n            break;\n        case PARAMFLAG_FOUT:\n            if (!_check_outarg_type(typ, i+1))\n                return 0;\n            break;\n        default:\n            PyErr_Format(PyExc_TypeError,\n                         \"paramflag value %d not supported\",\n                         flag);\n            return 0;\n        }\n    }\n    return 1;\n}\n\nstatic int\n_get_name(PyObject *obj, char **pname)\n{\n#ifdef MS_WIN32\n    if (_PyAnyInt_Check(obj)) {\n        /* We have to use MAKEINTRESOURCEA for Windows CE.\n           Works on Windows as well, of course.\n        */\n        *pname = MAKEINTRESOURCEA(PyInt_AsUnsignedLongMask(obj) & 0xFFFF);\n        return 1;\n    }\n#endif\n    if (PyString_Check(obj) || PyUnicode_Check(obj)) {\n        *pname = PyString_AsString(obj);\n        return *pname ? 1 : 0;\n    }\n    PyErr_SetString(PyExc_TypeError,\n                    \"function name must be string or integer\");\n    return 0;\n}\n\n\nstatic PyObject *\nPyCFuncPtr_FromDll(PyTypeObject *type, PyObject *args, PyObject *kwds)\n{\n    char *name;\n    int (* address)(void);\n    PyObject *ftuple;\n    PyObject *dll;\n    PyObject *obj;\n    PyCFuncPtrObject *self;\n    void *handle;\n    PyObject *paramflags = NULL;\n\n    if (!PyArg_ParseTuple(args, \"O|O\", &ftuple, &paramflags))\n        return NULL;\n    if (paramflags == Py_None)\n        paramflags = NULL;\n\n    ftuple = PySequence_Tuple(ftuple);\n    if (!ftuple)\n        /* Here ftuple is a borrowed reference */\n        return NULL;\n\n    if (!PyArg_ParseTuple(ftuple, \"O&O\", _get_name, &name, &dll)) {\n        Py_DECREF(ftuple);\n        return NULL;\n    }\n\n    obj = PyObject_GetAttrString(dll, \"_handle\");\n    if (!obj) {\n        Py_DECREF(ftuple);\n        return NULL;\n    }\n    if (!_PyAnyInt_Check(obj)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"the _handle attribute of the second argument must be an integer\");\n        Py_DECREF(ftuple);\n        Py_DECREF(obj);\n        return NULL;\n    }\n    handle = (void *)PyLong_AsVoidPtr(obj);\n    Py_DECREF(obj);\n    if (PyErr_Occurred()) {\n        PyErr_SetString(PyExc_ValueError,\n                        \"could not convert the _handle attribute to a pointer\");\n        Py_DECREF(ftuple);\n        return NULL;\n    }\n\n#ifdef MS_WIN32\n    address = FindAddress(handle, name, (PyObject *)type);\n    if (!address) {\n        if (!IS_INTRESOURCE(name))\n            PyErr_Format(PyExc_AttributeError,\n                         \"function '%s' not found\",\n                         name);\n        else\n            PyErr_Format(PyExc_AttributeError,\n                         \"function ordinal %d not found\",\n                         (WORD)(size_t)name);\n        Py_DECREF(ftuple);\n        return NULL;\n    }\n#else\n    address = (PPROC)ctypes_dlsym(handle, name);\n    if (!address) {\n#ifdef __CYGWIN__\n/* dlerror() isn't very helpful on cygwin */\n        PyErr_Format(PyExc_AttributeError,\n                     \"function '%s' not found\",\n                     name);\n#else\n        PyErr_SetString(PyExc_AttributeError, ctypes_dlerror());\n#endif\n        Py_DECREF(ftuple);\n        return NULL;\n    }\n#endif\n    if (!_validate_paramflags(type, paramflags)) {\n        Py_DECREF(ftuple);\n        return NULL;\n    }\n\n    self = (PyCFuncPtrObject *)GenericPyCData_new(type, args, kwds);\n    if (!self) {\n        Py_DECREF(ftuple);\n        return NULL;\n    }\n\n    Py_XINCREF(paramflags);\n    self->paramflags = paramflags;\n\n    *(void **)self->b_ptr = address;\n    Py_INCREF(dll);\n    Py_DECREF(ftuple);\n    if (-1 == KeepRef((CDataObject *)self, 0, dll)) {\n        Py_DECREF((PyObject *)self);\n        return NULL;\n    }\n\n    Py_INCREF(self);\n    self->callable = (PyObject *)self;\n    return (PyObject *)self;\n}\n\n#ifdef MS_WIN32\nstatic PyObject *\nPyCFuncPtr_FromVtblIndex(PyTypeObject *type, PyObject *args, PyObject *kwds)\n{\n    PyCFuncPtrObject *self;\n    int index;\n    char *name = NULL;\n    PyObject *paramflags = NULL;\n    GUID *iid = NULL;\n    Py_ssize_t iid_len = 0;\n\n    if (!PyArg_ParseTuple(args, \"is|Oz#\", &index, &name, &paramflags, &iid, &iid_len))\n        return NULL;\n    if (paramflags == Py_None)\n        paramflags = NULL;\n\n    if (!_validate_paramflags(type, paramflags))\n        return NULL;\n\n    self = (PyCFuncPtrObject *)GenericPyCData_new(type, args, kwds);\n    self->index = index + 0x1000;\n    Py_XINCREF(paramflags);\n    self->paramflags = paramflags;\n    if (iid_len == sizeof(GUID))\n        self->iid = iid;\n    return (PyObject *)self;\n}\n#endif\n\n/*\n  PyCFuncPtr_new accepts different argument lists in addition to the standard\n  _basespec_ keyword arg:\n\n  one argument form\n  \"i\" - function address\n  \"O\" - must be a callable, creates a C callable function\n\n  two or more argument forms (the third argument is a paramflags tuple)\n  \"(sO)|...\" - (function name, dll object (with an integer handle)), paramflags\n  \"(iO)|...\" - (function ordinal, dll object (with an integer handle)), paramflags\n  \"is|...\" - vtable index, method name, creates callable calling COM vtbl\n*/\nstatic PyObject *\nPyCFuncPtr_new(PyTypeObject *type, PyObject *args, PyObject *kwds)\n{\n    PyCFuncPtrObject *self;\n    PyObject *callable;\n    StgDictObject *dict;\n    CThunkObject *thunk;\n\n    if (PyTuple_GET_SIZE(args) == 0)\n        return GenericPyCData_new(type, args, kwds);\n\n    if (1 <= PyTuple_GET_SIZE(args) && PyTuple_Check(PyTuple_GET_ITEM(args, 0)))\n        return PyCFuncPtr_FromDll(type, args, kwds);\n\n#ifdef MS_WIN32\n    if (2 <= PyTuple_GET_SIZE(args) && PyInt_Check(PyTuple_GET_ITEM(args, 0)))\n        return PyCFuncPtr_FromVtblIndex(type, args, kwds);\n#endif\n\n    if (1 == PyTuple_GET_SIZE(args)\n        && _PyAnyInt_Check(PyTuple_GET_ITEM(args, 0))) {\n        CDataObject *ob;\n        void *ptr = PyLong_AsVoidPtr(PyTuple_GET_ITEM(args, 0));\n        if (ptr == NULL && PyErr_Occurred())\n            return NULL;\n        ob = (CDataObject *)GenericPyCData_new(type, args, kwds);\n        if (ob == NULL)\n            return NULL;\n        *(void **)ob->b_ptr = ptr;\n        return (PyObject *)ob;\n    }\n\n    if (!PyArg_ParseTuple(args, \"O\", &callable))\n        return NULL;\n    if (!PyCallable_Check(callable)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"argument must be callable or integer function address\");\n        return NULL;\n    }\n\n    /* XXX XXX This would allow passing additional options.  For COM\n       method *implementations*, we would probably want different\n       behaviour than in 'normal' callback functions: return a HRESULT if\n       an exception occurs in the callback, and print the traceback not\n       only on the console, but also to OutputDebugString() or something\n       like that.\n    */\n/*\n    if (kwds && PyDict_GetItemString(kwds, \"options\")) {\n        ...\n    }\n*/\n\n    dict = PyType_stgdict((PyObject *)type);\n    /* XXXX Fails if we do: 'PyCFuncPtr(lambda x: x)' */\n    if (!dict || !dict->argtypes) {\n        PyErr_SetString(PyExc_TypeError,\n               \"cannot construct instance of this class:\"\n            \" no argtypes\");\n        return NULL;\n    }\n\n    thunk = _ctypes_alloc_callback(callable,\n                                  dict->argtypes,\n                                  dict->restype,\n                                  dict->flags);\n    if (!thunk)\n        return NULL;\n\n    self = (PyCFuncPtrObject *)GenericPyCData_new(type, args, kwds);\n    if (self == NULL) {\n        Py_DECREF(thunk);\n        return NULL;\n    }\n\n    Py_INCREF(callable);\n    self->callable = callable;\n\n    self->thunk = thunk;\n    *(void **)self->b_ptr = (void *)thunk->pcl_exec;\n\n    Py_INCREF((PyObject *)thunk); /* for KeepRef */\n    if (-1 == KeepRef((CDataObject *)self, 0, (PyObject *)thunk)) {\n        Py_DECREF((PyObject *)self);\n        return NULL;\n    }\n    return (PyObject *)self;\n}\n\n\n/*\n  _byref consumes a refcount to its argument\n*/\nstatic PyObject *\n_byref(PyObject *obj)\n{\n    PyCArgObject *parg;\n    if (!CDataObject_Check(obj)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"expected CData instance\");\n        return NULL;\n    }\n\n    parg = PyCArgObject_new();\n    if (parg == NULL) {\n        Py_DECREF(obj);\n        return NULL;\n    }\n\n    parg->tag = 'P';\n    parg->pffi_type = &ffi_type_pointer;\n    parg->obj = obj;\n    parg->value.p = ((CDataObject *)obj)->b_ptr;\n    return (PyObject *)parg;\n}\n\nstatic PyObject *\n_get_arg(int *pindex, char *name, PyObject *defval, PyObject *inargs, PyObject *kwds)\n{\n    PyObject *v;\n\n    if (*pindex < PyTuple_GET_SIZE(inargs)) {\n        v = PyTuple_GET_ITEM(inargs, *pindex);\n        ++*pindex;\n        Py_INCREF(v);\n        return v;\n    }\n    if (kwds && (v = PyDict_GetItemString(kwds, name))) {\n        ++*pindex;\n        Py_INCREF(v);\n        return v;\n    }\n    if (defval) {\n        Py_INCREF(defval);\n        return defval;\n    }\n    /* we can't currently emit a better error message */\n    if (name)\n        PyErr_Format(PyExc_TypeError,\n                     \"required argument '%s' missing\", name);\n    else\n        PyErr_Format(PyExc_TypeError,\n                     \"not enough arguments\");\n    return NULL;\n}\n\n/*\n This function implements higher level functionality plus the ability to call\n functions with keyword arguments by looking at parameter flags.  parameter\n flags is a tuple of 1, 2 or 3-tuples.  The first entry in each is an integer\n specifying the direction of the data transfer for this parameter - 'in',\n 'out' or 'inout' (zero means the same as 'in').  The second entry is the\n parameter name, and the third is the default value if the parameter is\n missing in the function call.\n\n This function builds and returns a new tuple 'callargs' which contains the\n parameters to use in the call.  Items on this tuple are copied from the\n 'inargs' tuple for 'in' and 'in, out' parameters, and constructed from the\n 'argtypes' tuple for 'out' parameters.  It also calculates numretvals which\n is the number of return values for the function, outmask/inoutmask are\n bitmasks containing indexes into the callargs tuple specifying which\n parameters have to be returned.  _build_result builds the return value of the\n function.\n*/\nstatic PyObject *\n_build_callargs(PyCFuncPtrObject *self, PyObject *argtypes,\n                PyObject *inargs, PyObject *kwds,\n                int *poutmask, int *pinoutmask, unsigned int *pnumretvals)\n{\n    PyObject *paramflags = self->paramflags;\n    PyObject *callargs;\n    StgDictObject *dict;\n    Py_ssize_t i, len;\n    int inargs_index = 0;\n    /* It's a little bit difficult to determine how many arguments the\n    function call requires/accepts.  For simplicity, we count the consumed\n    args and compare this to the number of supplied args. */\n    Py_ssize_t actual_args;\n\n    *poutmask = 0;\n    *pinoutmask = 0;\n    *pnumretvals = 0;\n\n    /* Trivial cases, where we either return inargs itself, or a slice of it. */\n    if (argtypes == NULL || paramflags == NULL || PyTuple_GET_SIZE(argtypes) == 0) {\n#ifdef MS_WIN32\n        if (self->index)\n            return PyTuple_GetSlice(inargs, 1, PyTuple_GET_SIZE(inargs));\n#endif\n        Py_INCREF(inargs);\n        return inargs;\n    }\n\n    len = PyTuple_GET_SIZE(argtypes);\n    callargs = PyTuple_New(len); /* the argument tuple we build */\n    if (callargs == NULL)\n        return NULL;\n\n#ifdef MS_WIN32\n    /* For a COM method, skip the first arg */\n    if (self->index) {\n        inargs_index = 1;\n    }\n#endif\n    for (i = 0; i < len; ++i) {\n        PyObject *item = PyTuple_GET_ITEM(paramflags, i);\n        PyObject *ob;\n        int flag;\n        char *name = NULL;\n        PyObject *defval = NULL;\n\n        /* This way seems to be ~2 us faster than the PyArg_ParseTuple\n           calls below. */\n        /* We HAVE already checked that the tuple can be parsed with \"i|zO\", so... */\n        Py_ssize_t tsize = PyTuple_GET_SIZE(item);\n        flag = PyInt_AS_LONG(PyTuple_GET_ITEM(item, 0));\n        name = tsize > 1 ? PyString_AS_STRING(PyTuple_GET_ITEM(item, 1)) : NULL;\n        defval = tsize > 2 ? PyTuple_GET_ITEM(item, 2) : NULL;\n\n        switch (flag & (PARAMFLAG_FIN | PARAMFLAG_FOUT | PARAMFLAG_FLCID)) {\n        case PARAMFLAG_FIN | PARAMFLAG_FLCID:\n            /* ['in', 'lcid'] parameter.  Always taken from defval,\n             if given, else the integer 0. */\n            if (defval == NULL) {\n                defval = PyInt_FromLong(0);\n                if (defval == NULL)\n                    goto error;\n            } else\n                Py_INCREF(defval);\n            PyTuple_SET_ITEM(callargs, i, defval);\n            break;\n        case (PARAMFLAG_FIN | PARAMFLAG_FOUT):\n            *pinoutmask |= (1 << i); /* mark as inout arg */\n            (*pnumretvals)++;\n            /* fall through to PARAMFLAG_FIN... */\n        case 0:\n        case PARAMFLAG_FIN:\n            /* 'in' parameter.  Copy it from inargs. */\n            ob =_get_arg(&inargs_index, name, defval, inargs, kwds);\n            if (ob == NULL)\n                goto error;\n            PyTuple_SET_ITEM(callargs, i, ob);\n            break;\n        case PARAMFLAG_FOUT:\n            /* XXX Refactor this code into a separate function. */\n            /* 'out' parameter.\n               argtypes[i] must be a POINTER to a c type.\n\n               Cannot by supplied in inargs, but a defval will be used\n               if available.  XXX Should we support getting it from kwds?\n            */\n            if (defval) {\n                /* XXX Using mutable objects as defval will\n                   make the function non-threadsafe, unless we\n                   copy the object in each invocation */\n                Py_INCREF(defval);\n                PyTuple_SET_ITEM(callargs, i, defval);\n                *poutmask |= (1 << i); /* mark as out arg */\n                (*pnumretvals)++;\n                break;\n            }\n            ob = PyTuple_GET_ITEM(argtypes, i);\n            dict = PyType_stgdict(ob);\n            if (dict == NULL) {\n                /* Cannot happen: _validate_paramflags()\n                  would not accept such an object */\n                PyErr_Format(PyExc_RuntimeError,\n                             \"NULL stgdict unexpected\");\n                goto error;\n            }\n            if (PyString_Check(dict->proto)) {\n                PyErr_Format(\n                    PyExc_TypeError,\n                    \"%s 'out' parameter must be passed as default value\",\n                    ((PyTypeObject *)ob)->tp_name);\n                goto error;\n            }\n            if (PyCArrayTypeObject_Check(ob))\n                ob = PyObject_CallObject(ob, NULL);\n            else\n                /* Create an instance of the pointed-to type */\n                ob = PyObject_CallObject(dict->proto, NULL);\n            /*\n               XXX Is the following correct any longer?\n               We must not pass a byref() to the array then but\n               the array instance itself. Then, we cannot retrive\n               the result from the PyCArgObject.\n            */\n            if (ob == NULL)\n                goto error;\n            /* The .from_param call that will ocurr later will pass this\n               as a byref parameter. */\n            PyTuple_SET_ITEM(callargs, i, ob);\n            *poutmask |= (1 << i); /* mark as out arg */\n            (*pnumretvals)++;\n            break;\n        default:\n            PyErr_Format(PyExc_ValueError,\n                         \"paramflag %d not yet implemented\", flag);\n            goto error;\n            break;\n        }\n    }\n\n    /* We have counted the arguments we have consumed in 'inargs_index'.  This\n       must be the same as len(inargs) + len(kwds), otherwise we have\n       either too much or not enough arguments. */\n\n    actual_args = PyTuple_GET_SIZE(inargs) + (kwds ? PyDict_Size(kwds) : 0);\n    if (actual_args != inargs_index) {\n        /* When we have default values or named parameters, this error\n           message is misleading.  See unittests/test_paramflags.py\n         */\n        PyErr_Format(PyExc_TypeError,\n#if (PY_VERSION_HEX < 0x02050000)\n                     \"call takes exactly %d arguments (%d given)\",\n#else\n                     \"call takes exactly %d arguments (%zd given)\",\n#endif\n                     inargs_index, actual_args);\n        goto error;\n    }\n\n    /* outmask is a bitmask containing indexes into callargs.  Items at\n       these indexes contain values to return.\n     */\n    return callargs;\n  error:\n    Py_DECREF(callargs);\n    return NULL;\n}\n\n/* See also:\n   http://msdn.microsoft.com/library/en-us/com/html/769127a1-1a14-4ed4-9d38-7cf3e571b661.asp\n*/\n/*\n  Build return value of a function.\n\n  Consumes the refcount on result and callargs.\n*/\nstatic PyObject *\n_build_result(PyObject *result, PyObject *callargs,\n              int outmask, int inoutmask, unsigned int numretvals)\n{\n    unsigned int i, index;\n    int bit;\n    PyObject *tup = NULL;\n\n    if (callargs == NULL)\n        return result;\n    if (result == NULL || numretvals == 0) {\n        Py_DECREF(callargs);\n        return result;\n    }\n    Py_DECREF(result);\n\n    /* tup will not be allocated if numretvals == 1 */\n    /* allocate tuple to hold the result */\n    if (numretvals > 1) {\n        tup = PyTuple_New(numretvals);\n        if (tup == NULL) {\n            Py_DECREF(callargs);\n            return NULL;\n        }\n    }\n\n    index = 0;\n    for (bit = 1, i = 0; i < 32; ++i, bit <<= 1) {\n        PyObject *v;\n        if (bit & inoutmask) {\n            v = PyTuple_GET_ITEM(callargs, i);\n            Py_INCREF(v);\n            if (numretvals == 1) {\n                Py_DECREF(callargs);\n                return v;\n            }\n            PyTuple_SET_ITEM(tup, index, v);\n            index++;\n        } else if (bit & outmask) {\n            v = PyTuple_GET_ITEM(callargs, i);\n            v = PyObject_CallMethod(v, \"__ctypes_from_outparam__\", NULL);\n            if (v == NULL || numretvals == 1) {\n                Py_DECREF(callargs);\n                return v;\n            }\n            PyTuple_SET_ITEM(tup, index, v);\n            index++;\n        }\n        if (index == numretvals)\n            break;\n    }\n\n    Py_DECREF(callargs);\n    return tup;\n}\n\nstatic PyObject *\nPyCFuncPtr_call(PyCFuncPtrObject *self, PyObject *inargs, PyObject *kwds)\n{\n    PyObject *restype;\n    PyObject *converters;\n    PyObject *checker;\n    PyObject *argtypes;\n    StgDictObject *dict = PyObject_stgdict((PyObject *)self);\n    PyObject *result;\n    PyObject *callargs;\n    PyObject *errcheck;\n#ifdef MS_WIN32\n    IUnknown *piunk = NULL;\n#endif\n    void *pProc = NULL;\n\n    int inoutmask;\n    int outmask;\n    unsigned int numretvals;\n\n    assert(dict); /* Cannot be NULL for PyCFuncPtrObject instances */\n    restype = self->restype ? self->restype : dict->restype;\n    converters = self->converters ? self->converters : dict->converters;\n    checker = self->checker ? self->checker : dict->checker;\n    argtypes = self->argtypes ? self->argtypes : dict->argtypes;\n/* later, we probably want to have an errcheck field in stgdict */\n    errcheck = self->errcheck /* ? self->errcheck : dict->errcheck */;\n\n\n    pProc = *(void **)self->b_ptr;\n#ifdef MS_WIN32\n    if (self->index) {\n        /* It's a COM method */\n        CDataObject *this;\n        this = (CDataObject *)PyTuple_GetItem(inargs, 0); /* borrowed ref! */\n        if (!this) {\n            PyErr_SetString(PyExc_ValueError,\n                            \"native com method call without 'this' parameter\");\n            return NULL;\n        }\n        if (!CDataObject_Check(this)) {\n            PyErr_SetString(PyExc_TypeError,\n                            \"Expected a COM this pointer as first argument\");\n            return NULL;\n        }\n        /* there should be more checks? No, in Python */\n        /* First arg is a pointer to an interface instance */\n        if (!this->b_ptr || *(void **)this->b_ptr == NULL) {\n            PyErr_SetString(PyExc_ValueError,\n                            \"NULL COM pointer access\");\n            return NULL;\n        }\n        piunk = *(IUnknown **)this->b_ptr;\n        if (NULL == piunk->lpVtbl) {\n            PyErr_SetString(PyExc_ValueError,\n                            \"COM method call without VTable\");\n            return NULL;\n        }\n        pProc = ((void **)piunk->lpVtbl)[self->index - 0x1000];\n    }\n#endif\n    callargs = _build_callargs(self, argtypes,\n                               inargs, kwds,\n                               &outmask, &inoutmask, &numretvals);\n    if (callargs == NULL)\n        return NULL;\n\n    if (converters) {\n        int required = Py_SAFE_DOWNCAST(PyTuple_GET_SIZE(converters),\n                                        Py_ssize_t, int);\n        int actual = Py_SAFE_DOWNCAST(PyTuple_GET_SIZE(callargs),\n                                      Py_ssize_t, int);\n\n        if ((dict->flags & FUNCFLAG_CDECL) == FUNCFLAG_CDECL) {\n            /* For cdecl functions, we allow more actual arguments\n               than the length of the argtypes tuple.\n            */\n            if (required > actual) {\n                Py_DECREF(callargs);\n                PyErr_Format(PyExc_TypeError,\n              \"this function takes at least %d argument%s (%d given)\",\n                                 required,\n                                 required == 1 ? \"\" : \"s\",\n                                 actual);\n                return NULL;\n            }\n        } else if (required != actual) {\n            Py_DECREF(callargs);\n            PyErr_Format(PyExc_TypeError,\n                 \"this function takes %d argument%s (%d given)\",\n                     required,\n                     required == 1 ? \"\" : \"s\",\n                     actual);\n            return NULL;\n        }\n    }\n\n    result = _ctypes_callproc(pProc,\n                       callargs,\n#ifdef MS_WIN32\n                       piunk,\n                       self->iid,\n#endif\n                       dict->flags,\n                       converters,\n                       restype,\n                       checker);\n/* The 'errcheck' protocol */\n    if (result != NULL && errcheck) {\n        PyObject *v = PyObject_CallFunctionObjArgs(errcheck,\n                                                   result,\n                                                   self,\n                                                   callargs,\n                                                   NULL);\n        /* If the errcheck function failed, return NULL.\n           If the errcheck function returned callargs unchanged,\n           continue normal processing.\n           If the errcheck function returned something else,\n           use that as result.\n        */\n        if (v == NULL || v != callargs) {\n            Py_DECREF(result);\n            Py_DECREF(callargs);\n            return v;\n        }\n        Py_DECREF(v);\n    }\n\n    return _build_result(result, callargs,\n                         outmask, inoutmask, numretvals);\n}\n\nstatic int\nPyCFuncPtr_traverse(PyCFuncPtrObject *self, visitproc visit, void *arg)\n{\n    Py_VISIT(self->callable);\n    Py_VISIT(self->restype);\n    Py_VISIT(self->checker);\n    Py_VISIT(self->errcheck);\n    Py_VISIT(self->argtypes);\n    Py_VISIT(self->converters);\n    Py_VISIT(self->paramflags);\n    Py_VISIT(self->thunk);\n    return PyCData_traverse((CDataObject *)self, visit, arg);\n}\n\nstatic int\nPyCFuncPtr_clear(PyCFuncPtrObject *self)\n{\n    Py_CLEAR(self->callable);\n    Py_CLEAR(self->restype);\n    Py_CLEAR(self->checker);\n    Py_CLEAR(self->errcheck);\n    Py_CLEAR(self->argtypes);\n    Py_CLEAR(self->converters);\n    Py_CLEAR(self->paramflags);\n    Py_CLEAR(self->thunk);\n    return PyCData_clear((CDataObject *)self);\n}\n\nstatic void\nPyCFuncPtr_dealloc(PyCFuncPtrObject *self)\n{\n    PyCFuncPtr_clear(self);\n    Py_TYPE(self)->tp_free((PyObject *)self);\n}\n\nstatic PyObject *\nPyCFuncPtr_repr(PyCFuncPtrObject *self)\n{\n#ifdef MS_WIN32\n    if (self->index)\n        return PyString_FromFormat(\"<COM method offset %d: %s at %p>\",\n                                   self->index - 0x1000,\n                                   Py_TYPE(self)->tp_name,\n                                   self);\n#endif\n    return PyString_FromFormat(\"<%s object at %p>\",\n                               Py_TYPE(self)->tp_name,\n                               self);\n}\n\nstatic int\nPyCFuncPtr_nonzero(PyCFuncPtrObject *self)\n{\n    return ((*(void **)self->b_ptr != NULL)\n#ifdef MS_WIN32\n        || (self->index != 0)\n#endif\n        );\n}\n\nstatic PyNumberMethods PyCFuncPtr_as_number = {\n    0, /* nb_add */\n    0, /* nb_subtract */\n    0, /* nb_multiply */\n    0, /* nb_divide */\n    0, /* nb_remainder */\n    0, /* nb_divmod */\n    0, /* nb_power */\n    0, /* nb_negative */\n    0, /* nb_positive */\n    0, /* nb_absolute */\n    (inquiry)PyCFuncPtr_nonzero, /* nb_nonzero */\n};\n\nPyTypeObject PyCFuncPtr_Type = {\n    PyVarObject_HEAD_INIT(NULL, 0)\n    \"_ctypes.PyCFuncPtr\",\n    sizeof(PyCFuncPtrObject),                           /* tp_basicsize */\n    0,                                          /* tp_itemsize */\n    (destructor)PyCFuncPtr_dealloc,             /* tp_dealloc */\n    0,                                          /* tp_print */\n    0,                                          /* tp_getattr */\n    0,                                          /* tp_setattr */\n    0,                                          /* tp_compare */\n    (reprfunc)PyCFuncPtr_repr,                  /* tp_repr */\n    &PyCFuncPtr_as_number,                      /* tp_as_number */\n    0,                                          /* tp_as_sequence */\n    0,                                          /* tp_as_mapping */\n    0,                                          /* tp_hash */\n    (ternaryfunc)PyCFuncPtr_call,               /* tp_call */\n    0,                                          /* tp_str */\n    0,                                          /* tp_getattro */\n    0,                                          /* tp_setattro */\n    &PyCData_as_buffer,                         /* tp_as_buffer */\n    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_NEWBUFFER | Py_TPFLAGS_BASETYPE, /* tp_flags */\n    \"Function Pointer\",                         /* tp_doc */\n    (traverseproc)PyCFuncPtr_traverse,          /* tp_traverse */\n    (inquiry)PyCFuncPtr_clear,                  /* tp_clear */\n    0,                                          /* tp_richcompare */\n    0,                                          /* tp_weaklistoffset */\n    0,                                          /* tp_iter */\n    0,                                          /* tp_iternext */\n    0,                                          /* tp_methods */\n    0,                                          /* tp_members */\n    PyCFuncPtr_getsets,                         /* tp_getset */\n    0,                                          /* tp_base */\n    0,                                          /* tp_dict */\n    0,                                          /* tp_descr_get */\n    0,                                          /* tp_descr_set */\n    0,                                          /* tp_dictoffset */\n    0,                                          /* tp_init */\n    0,                                          /* tp_alloc */\n    PyCFuncPtr_new,                             /* tp_new */\n    0,                                          /* tp_free */\n};\n\n/*****************************************************************/\n/*\n  Struct_Type\n*/\n/*\n  This function is called to initialize a Structure or Union with positional\n  arguments. It calls itself recursively for all Structure or Union base\n  classes, then retrieves the _fields_ member to associate the argument\n  position with the correct field name.\n\n  Returns -1 on error, or the index of next argument on success.\n */\nstatic int\n_init_pos_args(PyObject *self, PyTypeObject *type,\n               PyObject *args, PyObject *kwds,\n               int index)\n{\n    StgDictObject *dict;\n    PyObject *fields;\n    int i;\n\n    if (PyType_stgdict((PyObject *)type->tp_base)) {\n        index = _init_pos_args(self, type->tp_base,\n                               args, kwds,\n                               index);\n        if (index == -1)\n            return -1;\n    }\n\n    dict = PyType_stgdict((PyObject *)type);\n    fields = PyDict_GetItemString((PyObject *)dict, \"_fields_\");\n    if (fields == NULL)\n        return index;\n\n    for (i = 0;\n         i < dict->length && (i+index) < PyTuple_GET_SIZE(args);\n         ++i) {\n        PyObject *pair = PySequence_GetItem(fields, i);\n        PyObject *name, *val;\n        int res;\n        if (!pair)\n            return -1;\n        name = PySequence_GetItem(pair, 0);\n        if (!name) {\n            Py_DECREF(pair);\n            return -1;\n        }\n        val = PyTuple_GET_ITEM(args, i + index);\n        if (kwds && PyDict_GetItem(kwds, name)) {\n            char *field = PyString_AsString(name);\n            if (field == NULL) {\n                PyErr_Clear();\n                field = \"???\";\n            }\n            PyErr_Format(PyExc_TypeError,\n                         \"duplicate values for field '%s'\",\n                         field);\n            Py_DECREF(pair);\n            Py_DECREF(name);\n            return -1;\n        }\n\n        res = PyObject_SetAttr(self, name, val);\n        Py_DECREF(pair);\n        Py_DECREF(name);\n        if (res == -1)\n            return -1;\n    }\n    return index + dict->length;\n}\n\nstatic int\nStruct_init(PyObject *self, PyObject *args, PyObject *kwds)\n{\n/* Optimization possible: Store the attribute names _fields_[x][0]\n * in C accessible fields somewhere ?\n */\n    if (!PyTuple_Check(args)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"args not a tuple?\");\n        return -1;\n    }\n    if (PyTuple_GET_SIZE(args)) {\n        int res = _init_pos_args(self, Py_TYPE(self),\n                                 args, kwds, 0);\n        if (res == -1)\n            return -1;\n        if (res < PyTuple_GET_SIZE(args)) {\n            PyErr_SetString(PyExc_TypeError,\n                            \"too many initializers\");\n            return -1;\n        }\n    }\n\n    if (kwds) {\n        PyObject *key, *value;\n        Py_ssize_t pos = 0;\n        while(PyDict_Next(kwds, &pos, &key, &value)) {\n            if (-1 == PyObject_SetAttr(self, key, value))\n                return -1;\n        }\n    }\n    return 0;\n}\n\nstatic PyTypeObject Struct_Type = {\n    PyVarObject_HEAD_INIT(NULL, 0)\n    \"_ctypes.Structure\",\n    sizeof(CDataObject),                        /* tp_basicsize */\n    0,                                          /* tp_itemsize */\n    0,                                          /* tp_dealloc */\n    0,                                          /* tp_print */\n    0,                                          /* tp_getattr */\n    0,                                          /* tp_setattr */\n    0,                                          /* tp_compare */\n    0,                                          /* tp_repr */\n    0,                                          /* tp_as_number */\n    0,                                          /* tp_as_sequence */\n    0,                                          /* tp_as_mapping */\n    0,                                          /* tp_hash */\n    0,                                          /* tp_call */\n    0,                                          /* tp_str */\n    0,                                          /* tp_getattro */\n    0,                                          /* tp_setattro */\n    &PyCData_as_buffer,                         /* tp_as_buffer */\n    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_NEWBUFFER | Py_TPFLAGS_BASETYPE, /* tp_flags */\n    \"Structure base class\",                     /* tp_doc */\n    (traverseproc)PyCData_traverse,             /* tp_traverse */\n    (inquiry)PyCData_clear,                     /* tp_clear */\n    0,                                          /* tp_richcompare */\n    0,                                          /* tp_weaklistoffset */\n    0,                                          /* tp_iter */\n    0,                                          /* tp_iternext */\n    0,                                          /* tp_methods */\n    0,                                          /* tp_members */\n    0,                                          /* tp_getset */\n    0,                                          /* tp_base */\n    0,                                          /* tp_dict */\n    0,                                          /* tp_descr_get */\n    0,                                          /* tp_descr_set */\n    0,                                          /* tp_dictoffset */\n    Struct_init,                                /* tp_init */\n    0,                                          /* tp_alloc */\n    GenericPyCData_new,                         /* tp_new */\n    0,                                          /* tp_free */\n};\n\nstatic PyTypeObject Union_Type = {\n    PyVarObject_HEAD_INIT(NULL, 0)\n    \"_ctypes.Union\",\n    sizeof(CDataObject),                        /* tp_basicsize */\n    0,                                          /* tp_itemsize */\n    0,                                          /* tp_dealloc */\n    0,                                          /* tp_print */\n    0,                                          /* tp_getattr */\n    0,                                          /* tp_setattr */\n    0,                                          /* tp_compare */\n    0,                                          /* tp_repr */\n    0,                                          /* tp_as_number */\n    0,                                          /* tp_as_sequence */\n    0,                                          /* tp_as_mapping */\n    0,                                          /* tp_hash */\n    0,                                          /* tp_call */\n    0,                                          /* tp_str */\n    0,                                          /* tp_getattro */\n    0,                                          /* tp_setattro */\n    &PyCData_as_buffer,                         /* tp_as_buffer */\n    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_NEWBUFFER | Py_TPFLAGS_BASETYPE, /* tp_flags */\n    \"Union base class\",                         /* tp_doc */\n    (traverseproc)PyCData_traverse,             /* tp_traverse */\n    (inquiry)PyCData_clear,                     /* tp_clear */\n    0,                                          /* tp_richcompare */\n    0,                                          /* tp_weaklistoffset */\n    0,                                          /* tp_iter */\n    0,                                          /* tp_iternext */\n    0,                                          /* tp_methods */\n    0,                                          /* tp_members */\n    0,                                          /* tp_getset */\n    0,                                          /* tp_base */\n    0,                                          /* tp_dict */\n    0,                                          /* tp_descr_get */\n    0,                                          /* tp_descr_set */\n    0,                                          /* tp_dictoffset */\n    Struct_init,                                /* tp_init */\n    0,                                          /* tp_alloc */\n    GenericPyCData_new,                         /* tp_new */\n    0,                                          /* tp_free */\n};\n\n\n/******************************************************************/\n/*\n  PyCArray_Type\n*/\nstatic int\nArray_init(CDataObject *self, PyObject *args, PyObject *kw)\n{\n    Py_ssize_t i;\n    Py_ssize_t n;\n\n    if (!PyTuple_Check(args)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"args not a tuple?\");\n        return -1;\n    }\n    n = PyTuple_GET_SIZE(args);\n    for (i = 0; i < n; ++i) {\n        PyObject *v;\n        v = PyTuple_GET_ITEM(args, i);\n        if (-1 == PySequence_SetItem((PyObject *)self, i, v))\n            return -1;\n    }\n    return 0;\n}\n\nstatic PyObject *\nArray_item(PyObject *_self, Py_ssize_t index)\n{\n    CDataObject *self = (CDataObject *)_self;\n    Py_ssize_t offset, size;\n    StgDictObject *stgdict;\n\n\n    if (index < 0 || index >= self->b_length) {\n        PyErr_SetString(PyExc_IndexError,\n                        \"invalid index\");\n        return NULL;\n    }\n\n    stgdict = PyObject_stgdict((PyObject *)self);\n    assert(stgdict); /* Cannot be NULL for array instances */\n    /* Would it be clearer if we got the item size from\n       stgdict->proto's stgdict?\n    */\n    size = stgdict->size / stgdict->length;\n    offset = index * size;\n\n    return PyCData_get(stgdict->proto, stgdict->getfunc, (PyObject *)self,\n                     index, size, self->b_ptr + offset);\n}\n\nstatic PyObject *\nArray_slice(PyObject *_self, Py_ssize_t ilow, Py_ssize_t ihigh)\n{\n    CDataObject *self = (CDataObject *)_self;\n    StgDictObject *stgdict, *itemdict;\n    PyObject *proto;\n    PyListObject *np;\n    Py_ssize_t i, len;\n\n    if (ilow < 0)\n        ilow = 0;\n    else if (ilow > self->b_length)\n        ilow = self->b_length;\n    if (ihigh < ilow)\n        ihigh = ilow;\n    else if (ihigh > self->b_length)\n        ihigh = self->b_length;\n    len = ihigh - ilow;\n\n    stgdict = PyObject_stgdict((PyObject *)self);\n    assert(stgdict); /* Cannot be NULL for array object instances */\n    proto = stgdict->proto;\n    itemdict = PyType_stgdict(proto);\n    assert(itemdict); /* proto is the item type of the array, a ctypes\n                         type, so this cannot be NULL */\n    if (itemdict->getfunc == _ctypes_get_fielddesc(\"c\")->getfunc) {\n        char *ptr = (char *)self->b_ptr;\n        return PyString_FromStringAndSize(ptr + ilow, len);\n#ifdef CTYPES_UNICODE\n    } else if (itemdict->getfunc == _ctypes_get_fielddesc(\"u\")->getfunc) {\n        wchar_t *ptr = (wchar_t *)self->b_ptr;\n        return PyUnicode_FromWideChar(ptr + ilow, len);\n#endif\n    }\n\n    np = (PyListObject *) PyList_New(len);\n    if (np == NULL)\n        return NULL;\n\n    for (i = 0; i < len; i++) {\n        PyObject *v = Array_item(_self, i+ilow);\n        PyList_SET_ITEM(np, i, v);\n    }\n    return (PyObject *)np;\n}\n\nstatic PyObject *\nArray_subscript(PyObject *_self, PyObject *item)\n{\n    CDataObject *self = (CDataObject *)_self;\n\n    if (PyIndex_Check(item)) {\n        Py_ssize_t i = PyNumber_AsSsize_t(item, PyExc_IndexError);\n\n        if (i == -1 && PyErr_Occurred())\n            return NULL;\n        if (i < 0)\n            i += self->b_length;\n        return Array_item(_self, i);\n    }\n    else if PySlice_Check(item) {\n        StgDictObject *stgdict, *itemdict;\n        PyObject *proto;\n        PyObject *np;\n        Py_ssize_t start, stop, step, slicelen, cur, i;\n\n        if (_PySlice_Unpack(item, &start, &stop, &step) < 0) {\n            return NULL;\n        }\n\n        stgdict = PyObject_stgdict((PyObject *)self);\n        assert(stgdict); /* Cannot be NULL for array object instances */\n        proto = stgdict->proto;\n        itemdict = PyType_stgdict(proto);\n        assert(itemdict); /* proto is the item type of the array, a\n                             ctypes type, so this cannot be NULL */\n\n        slicelen = _PySlice_AdjustIndices(self->b_length, &start, &stop, step);\n        if (itemdict->getfunc == _ctypes_get_fielddesc(\"c\")->getfunc) {\n            char *ptr = (char *)self->b_ptr;\n            char *dest;\n\n            if (slicelen <= 0)\n                return PyString_FromString(\"\");\n            if (step == 1) {\n                return PyString_FromStringAndSize(ptr + start,\n                                                  slicelen);\n            }\n            dest = (char *)PyMem_Malloc(slicelen);\n\n            if (dest == NULL)\n                return PyErr_NoMemory();\n\n            for (cur = start, i = 0; i < slicelen;\n                 cur += step, i++) {\n                dest[i] = ptr[cur];\n            }\n\n            np = PyString_FromStringAndSize(dest, slicelen);\n            PyMem_Free(dest);\n            return np;\n        }\n#ifdef CTYPES_UNICODE\n        if (itemdict->getfunc == _ctypes_get_fielddesc(\"u\")->getfunc) {\n            wchar_t *ptr = (wchar_t *)self->b_ptr;\n            wchar_t *dest;\n\n            if (slicelen <= 0)\n                return PyUnicode_FromUnicode(NULL, 0);\n            if (step == 1) {\n                return PyUnicode_FromWideChar(ptr + start,\n                                              slicelen);\n            }\n\n            dest = PyMem_New(wchar_t, slicelen);\n            if (dest == NULL) {\n                PyErr_NoMemory();\n                return NULL;\n            }\n\n            for (cur = start, i = 0; i < slicelen;\n                 cur += step, i++) {\n                dest[i] = ptr[cur];\n            }\n\n            np = PyUnicode_FromWideChar(dest, slicelen);\n            PyMem_Free(dest);\n            return np;\n        }\n#endif\n\n        np = PyList_New(slicelen);\n        if (np == NULL)\n            return NULL;\n\n        for (cur = start, i = 0; i < slicelen;\n             cur += step, i++) {\n            PyObject *v = Array_item(_self, cur);\n            PyList_SET_ITEM(np, i, v);\n        }\n        return np;\n    }\n    else {\n        PyErr_SetString(PyExc_TypeError,\n                        \"indices must be integers\");\n        return NULL;\n    }\n\n}\n\nstatic int\nArray_ass_item(PyObject *_self, Py_ssize_t index, PyObject *value)\n{\n    CDataObject *self = (CDataObject *)_self;\n    Py_ssize_t size, offset;\n    StgDictObject *stgdict;\n    char *ptr;\n\n    if (value == NULL) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"Array does not support item deletion\");\n        return -1;\n    }\n\n    stgdict = PyObject_stgdict((PyObject *)self);\n    assert(stgdict); /* Cannot be NULL for array object instances */\n    if (index < 0 || index >= stgdict->length) {\n        PyErr_SetString(PyExc_IndexError,\n                        \"invalid index\");\n        return -1;\n    }\n    size = stgdict->size / stgdict->length;\n    offset = index * size;\n    ptr = self->b_ptr + offset;\n\n    return PyCData_set((PyObject *)self, stgdict->proto, stgdict->setfunc, value,\n                     index, size, ptr);\n}\n\nstatic int\nArray_ass_slice(PyObject *_self, Py_ssize_t ilow, Py_ssize_t ihigh, PyObject *value)\n{\n    CDataObject *self = (CDataObject *)_self;\n    Py_ssize_t i, len;\n\n    if (value == NULL) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"Array does not support item deletion\");\n        return -1;\n    }\n\n    if (ilow < 0)\n        ilow = 0;\n    else if (ilow > self->b_length)\n        ilow = self->b_length;\n    if (ihigh < 0)\n        ihigh = 0;\n    if (ihigh < ilow)\n        ihigh = ilow;\n    else if (ihigh > self->b_length)\n        ihigh = self->b_length;\n\n    len = PySequence_Length(value);\n    if (len != ihigh - ilow) {\n        PyErr_SetString(PyExc_ValueError,\n                        \"Can only assign sequence of same size\");\n        return -1;\n    }\n    for (i = 0; i < len; i++) {\n        PyObject *item = PySequence_GetItem(value, i);\n        int result;\n        if (item == NULL)\n            return -1;\n        result = Array_ass_item(_self, i+ilow, item);\n        Py_DECREF(item);\n        if (result == -1)\n            return -1;\n    }\n    return 0;\n}\n\nstatic int\nArray_ass_subscript(PyObject *_self, PyObject *item, PyObject *value)\n{\n    CDataObject *self = (CDataObject *)_self;\n\n    if (value == NULL) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"Array does not support item deletion\");\n        return -1;\n    }\n\n    if (PyIndex_Check(item)) {\n        Py_ssize_t i = PyNumber_AsSsize_t(item, PyExc_IndexError);\n\n        if (i == -1 && PyErr_Occurred())\n            return -1;\n        if (i < 0)\n            i += self->b_length;\n        return Array_ass_item(_self, i, value);\n    }\n    else if (PySlice_Check(item)) {\n        Py_ssize_t start, stop, step, slicelen, otherlen, i, cur;\n\n        if (_PySlice_Unpack(item, &start, &stop, &step) < 0) {\n            return -1;\n        }\n        slicelen = _PySlice_AdjustIndices(self->b_length, &start, &stop, step);\n        if ((step < 0 && start < stop) ||\n            (step > 0 && start > stop))\n            stop = start;\n\n        otherlen = PySequence_Length(value);\n        if (otherlen != slicelen) {\n            PyErr_SetString(PyExc_ValueError,\n                \"Can only assign sequence of same size\");\n            return -1;\n        }\n        for (cur = start, i = 0; i < otherlen; cur += step, i++) {\n            PyObject *item = PySequence_GetItem(value, i);\n            int result;\n            if (item == NULL)\n                return -1;\n            result = Array_ass_item(_self, cur, item);\n            Py_DECREF(item);\n            if (result == -1)\n                return -1;\n        }\n        return 0;\n    }\n    else {\n        PyErr_SetString(PyExc_TypeError,\n                        \"indices must be integer\");\n        return -1;\n    }\n}\n\nstatic Py_ssize_t\nArray_length(PyObject *_self)\n{\n    CDataObject *self = (CDataObject *)_self;\n    return self->b_length;\n}\n\nstatic PySequenceMethods Array_as_sequence = {\n    Array_length,                               /* sq_length; */\n    0,                                          /* sq_concat; */\n    0,                                          /* sq_repeat; */\n    Array_item,                                 /* sq_item; */\n    Array_slice,                                /* sq_slice; */\n    Array_ass_item,                             /* sq_ass_item; */\n    Array_ass_slice,                            /* sq_ass_slice; */\n    0,                                          /* sq_contains; */\n\n    0,                                          /* sq_inplace_concat; */\n    0,                                          /* sq_inplace_repeat; */\n};\n\nstatic PyMappingMethods Array_as_mapping = {\n    Array_length,\n    Array_subscript,\n    Array_ass_subscript,\n};\n\nPyTypeObject PyCArray_Type = {\n    PyVarObject_HEAD_INIT(NULL, 0)\n    \"_ctypes.Array\",\n    sizeof(CDataObject),                        /* tp_basicsize */\n    0,                                          /* tp_itemsize */\n    0,                                          /* tp_dealloc */\n    0,                                          /* tp_print */\n    0,                                          /* tp_getattr */\n    0,                                          /* tp_setattr */\n    0,                                          /* tp_compare */\n    0,                                          /* tp_repr */\n    0,                                          /* tp_as_number */\n    &Array_as_sequence,                         /* tp_as_sequence */\n    &Array_as_mapping,                          /* tp_as_mapping */\n    0,                                          /* tp_hash */\n    0,                                          /* tp_call */\n    0,                                          /* tp_str */\n    0,                                          /* tp_getattro */\n    0,                                          /* tp_setattro */\n    &PyCData_as_buffer,                         /* tp_as_buffer */\n    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_NEWBUFFER | Py_TPFLAGS_BASETYPE, /* tp_flags */\n    \"XXX to be provided\",                       /* tp_doc */\n    (traverseproc)PyCData_traverse,             /* tp_traverse */\n    (inquiry)PyCData_clear,                     /* tp_clear */\n    0,                                          /* tp_richcompare */\n    0,                                          /* tp_weaklistoffset */\n    0,                                          /* tp_iter */\n    0,                                          /* tp_iternext */\n    0,                                          /* tp_methods */\n    0,                                          /* tp_members */\n    0,                                          /* tp_getset */\n    0,                                          /* tp_base */\n    0,                                          /* tp_dict */\n    0,                                          /* tp_descr_get */\n    0,                                          /* tp_descr_set */\n    0,                                          /* tp_dictoffset */\n    (initproc)Array_init,                       /* tp_init */\n    0,                                          /* tp_alloc */\n    GenericPyCData_new,                         /* tp_new */\n    0,                                          /* tp_free */\n};\n\nPyObject *\nPyCArrayType_from_ctype(PyObject *itemtype, Py_ssize_t length)\n{\n    static PyObject *cache;\n    PyObject *key;\n    PyObject *result;\n    char name[256];\n    PyObject *len;\n\n    if (cache == NULL) {\n        cache = PyDict_New();\n        if (cache == NULL)\n            return NULL;\n    }\n    len = PyInt_FromSsize_t(length);\n    if (len == NULL)\n        return NULL;\n    key = PyTuple_Pack(2, itemtype, len);\n    Py_DECREF(len);\n    if (!key)\n        return NULL;\n    result = PyDict_GetItemProxy(cache, key);\n    if (result) {\n        Py_INCREF(result);\n        Py_DECREF(key);\n        return result;\n    }\n\n    if (!PyType_Check(itemtype)) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"Expected a type object\");\n        Py_DECREF(key);\n        return NULL;\n    }\n#ifdef MS_WIN64\n    sprintf(name, \"%.200s_Array_%Id\",\n        ((PyTypeObject *)itemtype)->tp_name, length);\n#else\n    sprintf(name, \"%.200s_Array_%ld\",\n        ((PyTypeObject *)itemtype)->tp_name, (long)length);\n#endif\n\n    result = PyObject_CallFunction((PyObject *)&PyCArrayType_Type,\n#if (PY_VERSION_HEX < 0x02050000)\n                                   \"s(O){s:i,s:O}\",\n#else\n                                   \"s(O){s:n,s:O}\",\n#endif\n                                   name,\n                                   &PyCArray_Type,\n                                   \"_length_\",\n                                   length,\n                                   \"_type_\",\n                                   itemtype\n        );\n    if (result == NULL) {\n        Py_DECREF(key);\n        return NULL;\n    }\n    if (-1 == PyDict_SetItemProxy(cache, key, result)) {\n        Py_DECREF(key);\n        Py_DECREF(result);\n        return NULL;\n    }\n    Py_DECREF(key);\n    return result;\n}\n\n\n/******************************************************************/\n/*\n  Simple_Type\n*/\n\nstatic int\nSimple_set_value(CDataObject *self, PyObject *value)\n{\n    PyObject *result;\n    StgDictObject *dict = PyObject_stgdict((PyObject *)self);\n\n    if (value == NULL) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"can't delete attribute\");\n        return -1;\n    }\n    assert(dict); /* Cannot be NULL for CDataObject instances */\n    assert(dict->setfunc);\n    result = dict->setfunc(self->b_ptr, value, dict->size);\n    if (!result)\n        return -1;\n\n    /* consumes the refcount the setfunc returns */\n    return KeepRef(self, 0, result);\n}\n\nstatic int\nSimple_init(CDataObject *self, PyObject *args, PyObject *kw)\n{\n    PyObject *value = NULL;\n    if (!PyArg_UnpackTuple(args, \"__init__\", 0, 1, &value))\n        return -1;\n    if (value)\n        return Simple_set_value(self, value);\n    return 0;\n}\n\nstatic PyObject *\nSimple_get_value(CDataObject *self)\n{\n    StgDictObject *dict;\n    dict = PyObject_stgdict((PyObject *)self);\n    assert(dict); /* Cannot be NULL for CDataObject instances */\n    assert(dict->getfunc);\n    return dict->getfunc(self->b_ptr, self->b_size);\n}\n\nstatic PyGetSetDef Simple_getsets[] = {\n    { \"value\", (getter)Simple_get_value, (setter)Simple_set_value,\n      \"current value\", NULL },\n    { NULL, NULL }\n};\n\nstatic PyObject *\nSimple_from_outparm(PyObject *self, PyObject *args)\n{\n    if (_ctypes_simple_instance((PyObject *)Py_TYPE(self))) {\n        Py_INCREF(self);\n        return self;\n    }\n    /* call stgdict->getfunc */\n    return Simple_get_value((CDataObject *)self);\n}\n\nstatic PyMethodDef Simple_methods[] = {\n    { \"__ctypes_from_outparam__\", Simple_from_outparm, METH_NOARGS, },\n    { NULL, NULL },\n};\n\nstatic int Simple_nonzero(CDataObject *self)\n{\n    return memcmp(self->b_ptr, \"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\", self->b_size);\n}\n\nstatic PyNumberMethods Simple_as_number = {\n    0, /* nb_add */\n    0, /* nb_subtract */\n    0, /* nb_multiply */\n    0, /* nb_divide */\n    0, /* nb_remainder */\n    0, /* nb_divmod */\n    0, /* nb_power */\n    0, /* nb_negative */\n    0, /* nb_positive */\n    0, /* nb_absolute */\n    (inquiry)Simple_nonzero, /* nb_nonzero */\n};\n\n/* \"%s(%s)\" % (self.__class__.__name__, self.value) */\nstatic PyObject *\nSimple_repr(CDataObject *self)\n{\n    PyObject *val, *name, *args, *result;\n    static PyObject *format;\n\n    if (Py_TYPE(self)->tp_base != &Simple_Type) {\n        return PyString_FromFormat(\"<%s object at %p>\",\n                                   Py_TYPE(self)->tp_name, self);\n    }\n\n    if (format == NULL) {\n        format = PyString_InternFromString(\"%s(%r)\");\n        if (format == NULL)\n            return NULL;\n    }\n\n    val = Simple_get_value(self);\n    if (val == NULL)\n        return NULL;\n\n    name = PyString_FromString(Py_TYPE(self)->tp_name);\n    if (name == NULL) {\n        Py_DECREF(val);\n        return NULL;\n    }\n\n    args = PyTuple_Pack(2, name, val);\n    Py_DECREF(name);\n    Py_DECREF(val);\n    if (args == NULL)\n        return NULL;\n\n    result = PyString_Format(format, args);\n    Py_DECREF(args);\n    return result;\n}\n\nstatic PyTypeObject Simple_Type = {\n    PyVarObject_HEAD_INIT(NULL, 0)\n    \"_ctypes._SimpleCData\",\n    sizeof(CDataObject),                        /* tp_basicsize */\n    0,                                          /* tp_itemsize */\n    0,                                          /* tp_dealloc */\n    0,                                          /* tp_print */\n    0,                                          /* tp_getattr */\n    0,                                          /* tp_setattr */\n    0,                                          /* tp_compare */\n    (reprfunc)&Simple_repr,                     /* tp_repr */\n    &Simple_as_number,                          /* tp_as_number */\n    0,                                          /* tp_as_sequence */\n    0,                                          /* tp_as_mapping */\n    0,                                          /* tp_hash */\n    0,                                          /* tp_call */\n    0,                                          /* tp_str */\n    0,                                          /* tp_getattro */\n    0,                                          /* tp_setattro */\n    &PyCData_as_buffer,                         /* tp_as_buffer */\n    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_NEWBUFFER | Py_TPFLAGS_BASETYPE, /* tp_flags */\n    \"XXX to be provided\",                       /* tp_doc */\n    (traverseproc)PyCData_traverse,             /* tp_traverse */\n    (inquiry)PyCData_clear,                     /* tp_clear */\n    0,                                          /* tp_richcompare */\n    0,                                          /* tp_weaklistoffset */\n    0,                                          /* tp_iter */\n    0,                                          /* tp_iternext */\n    Simple_methods,                             /* tp_methods */\n    0,                                          /* tp_members */\n    Simple_getsets,                             /* tp_getset */\n    0,                                          /* tp_base */\n    0,                                          /* tp_dict */\n    0,                                          /* tp_descr_get */\n    0,                                          /* tp_descr_set */\n    0,                                          /* tp_dictoffset */\n    (initproc)Simple_init,                      /* tp_init */\n    0,                                          /* tp_alloc */\n    GenericPyCData_new,                         /* tp_new */\n    0,                                          /* tp_free */\n};\n\n/******************************************************************/\n/*\n  PyCPointer_Type\n*/\nstatic PyObject *\nPointer_item(PyObject *_self, Py_ssize_t index)\n{\n    CDataObject *self = (CDataObject *)_self;\n    Py_ssize_t size;\n    Py_ssize_t offset;\n    StgDictObject *stgdict, *itemdict;\n    PyObject *proto;\n\n    if (*(void **)self->b_ptr == NULL) {\n        PyErr_SetString(PyExc_ValueError,\n                        \"NULL pointer access\");\n        return NULL;\n    }\n\n    stgdict = PyObject_stgdict((PyObject *)self);\n    assert(stgdict); /* Cannot be NULL for pointer object instances */\n\n    proto = stgdict->proto;\n    assert(proto);\n    itemdict = PyType_stgdict(proto);\n    assert(itemdict); /* proto is the item type of the pointer, a ctypes\n                         type, so this cannot be NULL */\n\n    size = itemdict->size;\n    offset = index * itemdict->size;\n\n    return PyCData_get(proto, stgdict->getfunc, (PyObject *)self,\n                     index, size, (*(char **)self->b_ptr) + offset);\n}\n\nstatic int\nPointer_ass_item(PyObject *_self, Py_ssize_t index, PyObject *value)\n{\n    CDataObject *self = (CDataObject *)_self;\n    Py_ssize_t size;\n    Py_ssize_t offset;\n    StgDictObject *stgdict, *itemdict;\n    PyObject *proto;\n\n    if (value == NULL) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"Pointer does not support item deletion\");\n        return -1;\n    }\n\n    if (*(void **)self->b_ptr == NULL) {\n        PyErr_SetString(PyExc_ValueError,\n                        \"NULL pointer access\");\n        return -1;\n    }\n\n    stgdict = PyObject_stgdict((PyObject *)self);\n    assert(stgdict); /* Cannot be NULL for pointer instances */\n\n    proto = stgdict->proto;\n    assert(proto);\n\n    itemdict = PyType_stgdict(proto);\n    assert(itemdict); /* Cannot be NULL because the itemtype of a pointer\n                         is always a ctypes type */\n\n    size = itemdict->size;\n    offset = index * itemdict->size;\n\n    return PyCData_set((PyObject *)self, proto, stgdict->setfunc, value,\n                     index, size, (*(char **)self->b_ptr) + offset);\n}\n\nstatic PyObject *\nPointer_get_contents(CDataObject *self, void *closure)\n{\n    StgDictObject *stgdict;\n\n    if (*(void **)self->b_ptr == NULL) {\n        PyErr_SetString(PyExc_ValueError,\n                        \"NULL pointer access\");\n        return NULL;\n    }\n\n    stgdict = PyObject_stgdict((PyObject *)self);\n    assert(stgdict); /* Cannot be NULL for pointer instances */\n    return PyCData_FromBaseObj(stgdict->proto,\n                             (PyObject *)self, 0,\n                             *(void **)self->b_ptr);\n}\n\nstatic int\nPointer_set_contents(CDataObject *self, PyObject *value, void *closure)\n{\n    StgDictObject *stgdict;\n    CDataObject *dst;\n    PyObject *keep;\n\n    if (value == NULL) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"Pointer does not support item deletion\");\n        return -1;\n    }\n    stgdict = PyObject_stgdict((PyObject *)self);\n    assert(stgdict); /* Cannot be NULL for pointer instances */\n    assert(stgdict->proto);\n    if (!CDataObject_Check(value)) {\n        int res = PyObject_IsInstance(value, stgdict->proto);\n        if (res == -1)\n            return -1;\n        if (!res) {\n            PyErr_Format(PyExc_TypeError,\n                         \"expected %s instead of %s\",\n                         ((PyTypeObject *)(stgdict->proto))->tp_name,\n                         Py_TYPE(value)->tp_name);\n            return -1;\n        }\n    }\n\n    dst = (CDataObject *)value;\n    *(void **)self->b_ptr = dst->b_ptr;\n\n    /*\n       A Pointer instance must keep the value it points to alive.  So, a\n       pointer instance has b_length set to 2 instead of 1, and we set\n       'value' itself as the second item of the b_objects list, additionally.\n    */\n    Py_INCREF(value);\n    if (-1 == KeepRef(self, 1, value))\n        return -1;\n\n    keep = GetKeepedObjects(dst);\n    Py_INCREF(keep);\n    return KeepRef(self, 0, keep);\n}\n\nstatic PyGetSetDef Pointer_getsets[] = {\n    { \"contents\", (getter)Pointer_get_contents,\n      (setter)Pointer_set_contents,\n      \"the object this pointer points to (read-write)\", NULL },\n    { NULL, NULL }\n};\n\nstatic int\nPointer_init(CDataObject *self, PyObject *args, PyObject *kw)\n{\n    PyObject *value = NULL;\n\n    if (!PyArg_UnpackTuple(args, \"POINTER\", 0, 1, &value))\n        return -1;\n    if (value == NULL)\n        return 0;\n    return Pointer_set_contents(self, value, NULL);\n}\n\nstatic PyObject *\nPointer_new(PyTypeObject *type, PyObject *args, PyObject *kw)\n{\n    StgDictObject *dict = PyType_stgdict((PyObject *)type);\n    if (!dict || !dict->proto) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"Cannot create instance: has no _type_\");\n        return NULL;\n    }\n    return GenericPyCData_new(type, args, kw);\n}\n\nstatic PyObject *\nPointer_slice(PyObject *_self, Py_ssize_t ilow, Py_ssize_t ihigh)\n{\n    CDataObject *self = (CDataObject *)_self;\n    PyListObject *np;\n    StgDictObject *stgdict, *itemdict;\n    PyObject *proto;\n    Py_ssize_t i, len;\n\n    if (ilow < 0)\n        ilow = 0;\n    if (ihigh < ilow)\n        ihigh = ilow;\n    len = ihigh - ilow;\n\n    stgdict = PyObject_stgdict((PyObject *)self);\n    assert(stgdict); /* Cannot be NULL fr pointer instances */\n    proto = stgdict->proto;\n    assert(proto);\n    itemdict = PyType_stgdict(proto);\n    assert(itemdict);\n    if (itemdict->getfunc == _ctypes_get_fielddesc(\"c\")->getfunc) {\n        char *ptr = *(char **)self->b_ptr;\n        return PyString_FromStringAndSize(ptr + ilow, len);\n#ifdef CTYPES_UNICODE\n    } else if (itemdict->getfunc == _ctypes_get_fielddesc(\"u\")->getfunc) {\n        wchar_t *ptr = *(wchar_t **)self->b_ptr;\n        return PyUnicode_FromWideChar(ptr + ilow, len);\n#endif\n    }\n\n    np = (PyListObject *) PyList_New(len);\n    if (np == NULL)\n        return NULL;\n\n    for (i = 0; i < len; i++) {\n        PyObject *v = Pointer_item(_self, i+ilow);\n        PyList_SET_ITEM(np, i, v);\n    }\n    return (PyObject *)np;\n}\n\nstatic PyObject *\nPointer_subscript(PyObject *_self, PyObject *item)\n{\n    CDataObject *self = (CDataObject *)_self;\n    if (PyIndex_Check(item)) {\n        Py_ssize_t i = PyNumber_AsSsize_t(item, PyExc_IndexError);\n        if (i == -1 && PyErr_Occurred())\n            return NULL;\n        return Pointer_item(_self, i);\n    }\n    else if (PySlice_Check(item)) {\n        PySliceObject *slice = (PySliceObject *)item;\n        Py_ssize_t start, stop, step;\n        PyObject *np;\n        StgDictObject *stgdict, *itemdict;\n        PyObject *proto;\n        Py_ssize_t i, len, cur;\n\n        /* Since pointers have no length, and we want to apply\n           different semantics to negative indices than normal\n           slicing, we have to dissect the slice object ourselves.*/\n        if (slice->step == Py_None) {\n            step = 1;\n        }\n        else {\n            step = PyNumber_AsSsize_t(slice->step,\n                                      PyExc_ValueError);\n            if (step == -1 && PyErr_Occurred())\n                return NULL;\n            if (step == 0) {\n                PyErr_SetString(PyExc_ValueError,\n                                \"slice step cannot be zero\");\n                return NULL;\n            }\n        }\n        if (slice->start == Py_None) {\n            if (step < 0) {\n                PyErr_SetString(PyExc_ValueError,\n                                \"slice start is required \"\n                                \"for step < 0\");\n                return NULL;\n            }\n            start = 0;\n        }\n        else {\n            start = PyNumber_AsSsize_t(slice->start,\n                                       PyExc_ValueError);\n            if (start == -1 && PyErr_Occurred())\n                return NULL;\n        }\n        if (slice->stop == Py_None) {\n            PyErr_SetString(PyExc_ValueError,\n                            \"slice stop is required\");\n            return NULL;\n        }\n        stop = PyNumber_AsSsize_t(slice->stop,\n                                  PyExc_ValueError);\n        if (stop == -1 && PyErr_Occurred())\n            return NULL;\n        if ((step > 0 && start > stop) ||\n            (step < 0 && start < stop))\n            len = 0;\n        else if (step > 0)\n            len = (stop - start - 1) / step + 1;\n        else\n            len = (stop - start + 1) / step + 1;\n\n        stgdict = PyObject_stgdict((PyObject *)self);\n        assert(stgdict); /* Cannot be NULL for pointer instances */\n        proto = stgdict->proto;\n        assert(proto);\n        itemdict = PyType_stgdict(proto);\n        assert(itemdict);\n        if (itemdict->getfunc == _ctypes_get_fielddesc(\"c\")->getfunc) {\n            char *ptr = *(char **)self->b_ptr;\n            char *dest;\n\n            if (len <= 0)\n                return PyString_FromString(\"\");\n            if (step == 1) {\n                return PyString_FromStringAndSize(ptr + start,\n                                                  len);\n            }\n            dest = (char *)PyMem_Malloc(len);\n            if (dest == NULL)\n                return PyErr_NoMemory();\n            for (cur = start, i = 0; i < len; cur += step, i++) {\n                dest[i] = ptr[cur];\n            }\n            np = PyString_FromStringAndSize(dest, len);\n            PyMem_Free(dest);\n            return np;\n        }\n#ifdef CTYPES_UNICODE\n        if (itemdict->getfunc == _ctypes_get_fielddesc(\"u\")->getfunc) {\n            wchar_t *ptr = *(wchar_t **)self->b_ptr;\n            wchar_t *dest;\n\n            if (len <= 0)\n                return PyUnicode_FromUnicode(NULL, 0);\n            if (step == 1) {\n                return PyUnicode_FromWideChar(ptr + start,\n                                              len);\n            }\n            dest = PyMem_New(wchar_t, len);\n            if (dest == NULL)\n                return PyErr_NoMemory();\n            for (cur = start, i = 0; i < len; cur += step, i++) {\n                dest[i] = ptr[cur];\n            }\n            np = PyUnicode_FromWideChar(dest, len);\n            PyMem_Free(dest);\n            return np;\n        }\n#endif\n\n        np = PyList_New(len);\n        if (np == NULL)\n            return NULL;\n\n        for (cur = start, i = 0; i < len; cur += step, i++) {\n            PyObject *v = Pointer_item(_self, cur);\n            PyList_SET_ITEM(np, i, v);\n        }\n        return np;\n    }\n    else {\n        PyErr_SetString(PyExc_TypeError,\n                        \"Pointer indices must be integer\");\n        return NULL;\n    }\n}\n\nstatic PySequenceMethods Pointer_as_sequence = {\n    0,                                          /* inquiry sq_length; */\n    0,                                          /* binaryfunc sq_concat; */\n    0,                                          /* intargfunc sq_repeat; */\n    Pointer_item,                               /* intargfunc sq_item; */\n    Pointer_slice,                              /* intintargfunc sq_slice; */\n    Pointer_ass_item,                           /* intobjargproc sq_ass_item; */\n    0,                                          /* intintobjargproc sq_ass_slice; */\n    0,                                          /* objobjproc sq_contains; */\n    /* Added in release 2.0 */\n    0,                                          /* binaryfunc sq_inplace_concat; */\n    0,                                          /* intargfunc sq_inplace_repeat; */\n};\n\nstatic PyMappingMethods Pointer_as_mapping = {\n    0,\n    Pointer_subscript,\n};\n\nstatic int\nPointer_nonzero(CDataObject *self)\n{\n    return (*(void **)self->b_ptr != NULL);\n}\n\nstatic PyNumberMethods Pointer_as_number = {\n    0, /* nb_add */\n    0, /* nb_subtract */\n    0, /* nb_multiply */\n    0, /* nb_divide */\n    0, /* nb_remainder */\n    0, /* nb_divmod */\n    0, /* nb_power */\n    0, /* nb_negative */\n    0, /* nb_positive */\n    0, /* nb_absolute */\n    (inquiry)Pointer_nonzero, /* nb_nonzero */\n};\n\nPyTypeObject PyCPointer_Type = {\n    PyVarObject_HEAD_INIT(NULL, 0)\n    \"_ctypes._Pointer\",\n    sizeof(CDataObject),                        /* tp_basicsize */\n    0,                                          /* tp_itemsize */\n    0,                                          /* tp_dealloc */\n    0,                                          /* tp_print */\n    0,                                          /* tp_getattr */\n    0,                                          /* tp_setattr */\n    0,                                          /* tp_compare */\n    0,                                          /* tp_repr */\n    &Pointer_as_number,                         /* tp_as_number */\n    &Pointer_as_sequence,                       /* tp_as_sequence */\n    &Pointer_as_mapping,                        /* tp_as_mapping */\n    0,                                          /* tp_hash */\n    0,                                          /* tp_call */\n    0,                                          /* tp_str */\n    0,                                          /* tp_getattro */\n    0,                                          /* tp_setattro */\n    &PyCData_as_buffer,                         /* tp_as_buffer */\n    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_NEWBUFFER | Py_TPFLAGS_BASETYPE, /* tp_flags */\n    \"XXX to be provided\",                       /* tp_doc */\n    (traverseproc)PyCData_traverse,             /* tp_traverse */\n    (inquiry)PyCData_clear,                     /* tp_clear */\n    0,                                          /* tp_richcompare */\n    0,                                          /* tp_weaklistoffset */\n    0,                                          /* tp_iter */\n    0,                                          /* tp_iternext */\n    0,                                          /* tp_methods */\n    0,                                          /* tp_members */\n    Pointer_getsets,                            /* tp_getset */\n    0,                                          /* tp_base */\n    0,                                          /* tp_dict */\n    0,                                          /* tp_descr_get */\n    0,                                          /* tp_descr_set */\n    0,                                          /* tp_dictoffset */\n    (initproc)Pointer_init,                     /* tp_init */\n    0,                                          /* tp_alloc */\n    Pointer_new,                                /* tp_new */\n    0,                                          /* tp_free */\n};\n\n\n/******************************************************************/\n/*\n *  Module initialization.\n */\n\nstatic char *module_docs =\n\"Create and manipulate C compatible data types in Python.\";\n\n#ifdef MS_WIN32\n\nstatic char comerror_doc[] = \"Raised when a COM method call failed.\";\n\nstatic PyObject *\ncomerror_init(PyObject *self, PyObject *args)\n{\n    PyObject *hresult, *text, *details;\n    PyObject *a;\n    int status;\n\n    if (!PyArg_ParseTuple(args, \"OOOO:COMError\", &self, &hresult, &text, &details))\n        return NULL;\n\n    a = PySequence_GetSlice(args, 1, PySequence_Size(args));\n    if (!a)\n        return NULL;\n    status = PyObject_SetAttrString(self, \"args\", a);\n    Py_DECREF(a);\n    if (status < 0)\n        return NULL;\n\n    if (PyObject_SetAttrString(self, \"hresult\", hresult) < 0)\n        return NULL;\n\n    if (PyObject_SetAttrString(self, \"text\", text) < 0)\n        return NULL;\n\n    if (PyObject_SetAttrString(self, \"details\", details) < 0)\n        return NULL;\n\n    Py_INCREF(Py_None);\n    return Py_None;\n}\n\nstatic PyMethodDef comerror_methods[] = {\n    { \"__init__\", comerror_init, METH_VARARGS },\n    { NULL, NULL },\n};\n\nstatic int\ncreate_comerror(void)\n{\n    PyObject *dict = PyDict_New();\n    PyMethodDef *methods = comerror_methods;\n    PyObject *s;\n    int status;\n\n    if (dict == NULL)\n        return -1;\n\n    while (methods->ml_name) {\n        /* get a wrapper for the built-in function */\n        PyObject *func = PyCFunction_New(methods, NULL);\n        PyObject *meth;\n        if (func == NULL)\n            goto error;\n        meth = PyMethod_New(func, NULL, ComError);\n        Py_DECREF(func);\n        if (meth == NULL)\n            goto error;\n        PyDict_SetItemString(dict, methods->ml_name, meth);\n        Py_DECREF(meth);\n        ++methods;\n    }\n\n    s = PyString_FromString(comerror_doc);\n    if (s == NULL)\n        goto error;\n    status = PyDict_SetItemString(dict, \"__doc__\", s);\n    Py_DECREF(s);\n    if (status == -1)\n        goto error;\n\n    ComError = PyErr_NewException(\"_ctypes.COMError\",\n                                  NULL,\n                                  dict);\n    if (ComError == NULL)\n        goto error;\n\n    return 0;\n  error:\n    Py_DECREF(dict);\n    return -1;\n}\n\n#endif\n\nstatic PyObject *\nstring_at(const char *ptr, int size)\n{\n    if (size == -1)\n        return PyString_FromString(ptr);\n    return PyString_FromStringAndSize(ptr, size);\n}\n\nstatic int\ncast_check_pointertype(PyObject *arg)\n{\n    StgDictObject *dict;\n\n    if (PyCPointerTypeObject_Check(arg))\n        return 1;\n    if (PyCFuncPtrTypeObject_Check(arg))\n        return 1;\n    dict = PyType_stgdict(arg);\n    if (dict) {\n        if (PyString_Check(dict->proto)\n            && (strchr(\"sPzUZXO\", PyString_AS_STRING(dict->proto)[0]))) {\n            /* simple pointer types, c_void_p, c_wchar_p, BSTR, ... */\n            return 1;\n        }\n    }\n    PyErr_Format(PyExc_TypeError,\n                 \"cast() argument 2 must be a pointer type, not %s\",\n                 PyType_Check(arg)\n                 ? ((PyTypeObject *)arg)->tp_name\n                 : Py_TYPE(arg)->tp_name);\n    return 0;\n}\n\nstatic PyObject *\ncast(void *ptr, PyObject *src, PyObject *ctype)\n{\n    CDataObject *result;\n    if (0 == cast_check_pointertype(ctype))\n        return NULL;\n    result = (CDataObject *)PyObject_CallFunctionObjArgs(ctype, NULL);\n    if (result == NULL)\n        return NULL;\n\n    /*\n      The casted objects '_objects' member:\n\n      It must certainly contain the source objects one.\n      It must contain the source object itself.\n     */\n    if (CDataObject_Check(src)) {\n        CDataObject *obj = (CDataObject *)src;\n        /* PyCData_GetContainer will initialize src.b_objects, we need\n           this so it can be shared */\n        PyCData_GetContainer(obj);\n        /* But we need a dictionary! */\n        if (obj->b_objects == Py_None) {\n            Py_DECREF(Py_None);\n            obj->b_objects = PyDict_New();\n            if (obj->b_objects == NULL)\n                goto failed;\n        }\n        Py_XINCREF(obj->b_objects);\n        result->b_objects = obj->b_objects;\n        if (result->b_objects && PyDict_CheckExact(result->b_objects)) {\n            PyObject *index;\n            int rc;\n            index = PyLong_FromVoidPtr((void *)src);\n            if (index == NULL)\n                goto failed;\n            rc = PyDict_SetItem(result->b_objects, index, src);\n            Py_DECREF(index);\n            if (rc == -1)\n                goto failed;\n        }\n    }\n    /* Should we assert that result is a pointer type? */\n    memcpy(result->b_ptr, &ptr, sizeof(void *));\n    return (PyObject *)result;\n\n  failed:\n    Py_DECREF(result);\n    return NULL;\n}\n\n#ifdef CTYPES_UNICODE\nstatic PyObject *\nwstring_at(const wchar_t *ptr, int size)\n{\n    Py_ssize_t ssize = size;\n    if (ssize == -1)\n        ssize = wcslen(ptr);\n    return PyUnicode_FromWideChar(ptr, ssize);\n}\n#endif\n\nPyMODINIT_FUNC\ninit_ctypes(void)\n{\n    PyObject *m;\n\n/* Note:\n   ob_type is the metatype (the 'type'), defaults to PyType_Type,\n   tp_base is the base type, defaults to 'object' aka PyBaseObject_Type.\n*/\n#ifdef WITH_THREAD\n    PyEval_InitThreads();\n#endif\n    m = Py_InitModule3(\"_ctypes\", _ctypes_module_methods, module_docs);\n    if (!m)\n        return;\n\n    _ctypes_ptrtype_cache = PyDict_New();\n    if (_ctypes_ptrtype_cache == NULL)\n        return;\n\n    PyModule_AddObject(m, \"_pointer_type_cache\", (PyObject *)_ctypes_ptrtype_cache);\n\n    _unpickle = PyObject_GetAttrString(m, \"_unpickle\");\n    if (_unpickle == NULL)\n        return;\n\n    if (PyType_Ready(&PyCArg_Type) < 0)\n        return;\n\n    if (PyType_Ready(&PyCThunk_Type) < 0)\n        return;\n\n    /* StgDict is derived from PyDict_Type */\n    PyCStgDict_Type.tp_base = &PyDict_Type;\n    if (PyType_Ready(&PyCStgDict_Type) < 0)\n        return;\n\n    /*************************************************\n     *\n     * Metaclasses\n     */\n\n    PyCStructType_Type.tp_base = &PyType_Type;\n    if (PyType_Ready(&PyCStructType_Type) < 0)\n        return;\n\n    UnionType_Type.tp_base = &PyType_Type;\n    if (PyType_Ready(&UnionType_Type) < 0)\n        return;\n\n    PyCPointerType_Type.tp_base = &PyType_Type;\n    if (PyType_Ready(&PyCPointerType_Type) < 0)\n        return;\n\n    PyCArrayType_Type.tp_base = &PyType_Type;\n    if (PyType_Ready(&PyCArrayType_Type) < 0)\n        return;\n\n    PyCSimpleType_Type.tp_base = &PyType_Type;\n    if (PyType_Ready(&PyCSimpleType_Type) < 0)\n        return;\n\n    PyCFuncPtrType_Type.tp_base = &PyType_Type;\n    if (PyType_Ready(&PyCFuncPtrType_Type) < 0)\n        return;\n\n    /*************************************************\n     *\n     * Classes using a custom metaclass\n     */\n\n    if (PyType_Ready(&PyCData_Type) < 0)\n        return;\n\n    Py_TYPE(&Struct_Type) = &PyCStructType_Type;\n    Struct_Type.tp_base = &PyCData_Type;\n    if (PyType_Ready(&Struct_Type) < 0)\n        return;\n    Py_INCREF(&Struct_Type);\n    PyModule_AddObject(m, \"Structure\", (PyObject *)&Struct_Type);\n\n    Py_TYPE(&Union_Type) = &UnionType_Type;\n    Union_Type.tp_base = &PyCData_Type;\n    if (PyType_Ready(&Union_Type) < 0)\n        return;\n    Py_INCREF(&Union_Type);\n    PyModule_AddObject(m, \"Union\", (PyObject *)&Union_Type);\n\n    Py_TYPE(&PyCPointer_Type) = &PyCPointerType_Type;\n    PyCPointer_Type.tp_base = &PyCData_Type;\n    if (PyType_Ready(&PyCPointer_Type) < 0)\n        return;\n    Py_INCREF(&PyCPointer_Type);\n    PyModule_AddObject(m, \"_Pointer\", (PyObject *)&PyCPointer_Type);\n\n    Py_TYPE(&PyCArray_Type) = &PyCArrayType_Type;\n    PyCArray_Type.tp_base = &PyCData_Type;\n    if (PyType_Ready(&PyCArray_Type) < 0)\n        return;\n    Py_INCREF(&PyCArray_Type);\n    PyModule_AddObject(m, \"Array\", (PyObject *)&PyCArray_Type);\n\n    Py_TYPE(&Simple_Type) = &PyCSimpleType_Type;\n    Simple_Type.tp_base = &PyCData_Type;\n    if (PyType_Ready(&Simple_Type) < 0)\n        return;\n    Py_INCREF(&Simple_Type);\n    PyModule_AddObject(m, \"_SimpleCData\", (PyObject *)&Simple_Type);\n\n    Py_TYPE(&PyCFuncPtr_Type) = &PyCFuncPtrType_Type;\n    PyCFuncPtr_Type.tp_base = &PyCData_Type;\n    if (PyType_Ready(&PyCFuncPtr_Type) < 0)\n        return;\n    Py_INCREF(&PyCFuncPtr_Type);\n    PyModule_AddObject(m, \"CFuncPtr\", (PyObject *)&PyCFuncPtr_Type);\n\n    /*************************************************\n     *\n     * Simple classes\n     */\n\n    /* PyCField_Type is derived from PyBaseObject_Type */\n    if (PyType_Ready(&PyCField_Type) < 0)\n        return;\n\n    /*************************************************\n     *\n     * Other stuff\n     */\n\n    DictRemover_Type.tp_new = PyType_GenericNew;\n    if (PyType_Ready(&DictRemover_Type) < 0)\n        return;\n\n#ifdef MS_WIN32\n    if (create_comerror() < 0)\n        return;\n    PyModule_AddObject(m, \"COMError\", ComError);\n\n    PyModule_AddObject(m, \"FUNCFLAG_HRESULT\", PyInt_FromLong(FUNCFLAG_HRESULT));\n    PyModule_AddObject(m, \"FUNCFLAG_STDCALL\", PyInt_FromLong(FUNCFLAG_STDCALL));\n#endif\n    PyModule_AddObject(m, \"FUNCFLAG_CDECL\", PyInt_FromLong(FUNCFLAG_CDECL));\n    PyModule_AddObject(m, \"FUNCFLAG_USE_ERRNO\", PyInt_FromLong(FUNCFLAG_USE_ERRNO));\n    PyModule_AddObject(m, \"FUNCFLAG_USE_LASTERROR\", PyInt_FromLong(FUNCFLAG_USE_LASTERROR));\n    PyModule_AddObject(m, \"FUNCFLAG_PYTHONAPI\", PyInt_FromLong(FUNCFLAG_PYTHONAPI));\n    PyModule_AddStringConstant(m, \"__version__\", \"1.1.0\");\n\n    PyModule_AddObject(m, \"_memmove_addr\", PyLong_FromVoidPtr(memmove));\n    PyModule_AddObject(m, \"_memset_addr\", PyLong_FromVoidPtr(memset));\n    PyModule_AddObject(m, \"_string_at_addr\", PyLong_FromVoidPtr(string_at));\n    PyModule_AddObject(m, \"_cast_addr\", PyLong_FromVoidPtr(cast));\n#ifdef CTYPES_UNICODE\n    PyModule_AddObject(m, \"_wstring_at_addr\", PyLong_FromVoidPtr(wstring_at));\n#endif\n\n/* If RTLD_LOCAL is not defined (Windows!), set it to zero. */\n#ifndef RTLD_LOCAL\n#define RTLD_LOCAL 0\n#endif\n\n/* If RTLD_GLOBAL is not defined (cygwin), set it to the same value as\n   RTLD_LOCAL.\n*/\n#ifndef RTLD_GLOBAL\n#define RTLD_GLOBAL RTLD_LOCAL\n#endif\n\n    PyModule_AddObject(m, \"RTLD_LOCAL\", PyInt_FromLong(RTLD_LOCAL));\n    PyModule_AddObject(m, \"RTLD_GLOBAL\", PyInt_FromLong(RTLD_GLOBAL));\n\n    PyExc_ArgError = PyErr_NewException(\"ctypes.ArgumentError\", NULL, NULL);\n    if (PyExc_ArgError) {\n        Py_INCREF(PyExc_ArgError);\n        PyModule_AddObject(m, \"ArgumentError\", PyExc_ArgError);\n    }\n}\n\n/*****************************************************************\n * replacements for broken Python api functions (in Python 2.3).\n * See #1047269 Buffer overwrite in PyUnicode_AsWideChar\n */\n\n#if (PY_VERSION_HEX < 0x02040000)\n#ifdef HAVE_WCHAR_H\n\nPyObject *My_PyUnicode_FromWideChar(register const wchar_t *w,\n                                    Py_ssize_t size)\n{\n    PyUnicodeObject *unicode;\n\n    if (w == NULL) {\n        PyErr_BadInternalCall();\n        return NULL;\n    }\n\n    unicode = (PyUnicodeObject *)PyUnicode_FromUnicode(NULL, size);\n    if (!unicode)\n        return NULL;\n\n    /* Copy the wchar_t data into the new object */\n#ifdef HAVE_USABLE_WCHAR_T\n    memcpy(unicode->str, w, size * sizeof(wchar_t));\n#else\n    {\n        register Py_UNICODE *u;\n        register int i;\n        u = PyUnicode_AS_UNICODE(unicode);\n        /* In Python, the following line has a one-off error */\n        for (i = size; i > 0; i--)\n            *u++ = *w++;\n    }\n#endif\n\n    return (PyObject *)unicode;\n}\n\nPy_ssize_t My_PyUnicode_AsWideChar(PyUnicodeObject *unicode,\n                            register wchar_t *w,\n                            Py_ssize_t size)\n{\n    if (unicode == NULL) {\n        PyErr_BadInternalCall();\n        return -1;\n    }\n    if (size > PyUnicode_GET_SIZE(unicode))\n        size = PyUnicode_GET_SIZE(unicode);\n#ifdef HAVE_USABLE_WCHAR_T\n    memcpy(w, unicode->str, size * sizeof(wchar_t));\n#else\n    {\n        register Py_UNICODE *u;\n        register int i;\n        u = PyUnicode_AS_UNICODE(unicode);\n        /* In Python, the following line has a one-off error */\n        for (i = size; i > 0; i--)\n            *w++ = *u++;\n    }\n#endif\n\n    return size;\n}\n#endif\n#endif\n\n/*\n Local Variables:\n compile-command: \"cd .. && python setup.py -q build -g && python setup.py -q build install --home ~\"\n End:\n*/\n",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_ctypes/callproc.c": "/*****************************************************************\n  This file contains remnant Python 2.3 compatibility code that is no longer\n  strictly required.\n *****************************************************************/\n\n\n/*\n * History: First version dated from 3/97, derived from my SCMLIB version\n * for win16.\n */\n/*\n * Related Work:\n *      - calldll       http://www.nightmare.com/software.html\n *      - libffi        http://sourceware.cygnus.com/libffi/\n *      - ffcall        http://clisp.cons.org/~haible/packages-ffcall.html\n *   and, of course, Don Beaudry's MESS package, but this is more ctypes\n *   related.\n */\n\n\n/*\n  How are functions called, and how are parameters converted to C ?\n\n  1. _ctypes.c::PyCFuncPtr_call receives an argument tuple 'inargs' and a\n  keyword dictionary 'kwds'.\n\n  2. After several checks, _build_callargs() is called which returns another\n  tuple 'callargs'.  This may be the same tuple as 'inargs', a slice of\n  'inargs', or a completely fresh tuple, depending on several things (is it a\n  COM method?, are 'paramflags' available?).\n\n  3. _build_callargs also calculates bitarrays containing indexes into\n  the callargs tuple, specifying how to build the return value(s) of\n  the function.\n\n  4. _ctypes_callproc is then called with the 'callargs' tuple.  _ctypes_callproc first\n  allocates two arrays.  The first is an array of 'struct argument' items, the\n  second array has 'void *' entries.\n\n  5. If 'converters' are present (converters is a sequence of argtypes'\n  from_param methods), for each item in 'callargs' converter is called and the\n  result passed to ConvParam.  If 'converters' are not present, each argument\n  is directly passed to ConvParm.\n\n  6. For each arg, ConvParam stores the contained C data (or a pointer to it,\n  for structures) into the 'struct argument' array.\n\n  7. Finally, a loop fills the 'void *' array so that each item points to the\n  data contained in or pointed to by the 'struct argument' array.\n\n  8. The 'void *' argument array is what _call_function_pointer\n  expects. _call_function_pointer then has very little to do - only some\n  libffi specific stuff, then it calls ffi_call.\n\n  So, there are 4 data structures holding processed arguments:\n  - the inargs tuple (in PyCFuncPtr_call)\n  - the callargs tuple (in PyCFuncPtr_call)\n  - the 'struct arguments' array\n  - the 'void *' array\n\n */\n\n#include \"Python.h\"\n#include \"structmember.h\"\n\n#ifdef MS_WIN32\n#include <windows.h>\n#include <tchar.h>\n#else\n#include \"ctypes_dlfcn.h\"\n#endif\n\n#ifdef MS_WIN32\n#include <malloc.h>\n#endif\n\n#include <ffi.h>\n#include \"ctypes.h\"\n#ifdef HAVE_ALLOCA_H\n/* AIX needs alloca.h for alloca() */\n#include <alloca.h>\n#endif\n\n#if defined(_DEBUG) || defined(__MINGW32__)\n/* Don't use structured exception handling on Windows if this is defined.\n   MingW, AFAIK, doesn't support it.\n*/\n#define DONT_USE_SEH\n#endif\n\n\n#define CTYPES_CAPSULE_ERROROBJ \"_ctypes/callproc.c error object\"\nCTYPES_CAPSULE_INSTANTIATE_DESTRUCTOR(CTYPES_CAPSULE_ERROROBJ)\n\n#if defined(CTYPES_UNICODE) && !defined(HAVE_USABLE_WCHAR_T)\n#  define CTYPES_CAPSULE_WCHAR_T \"_ctypes/callproc.c wchar_t buffer from unicode\"\nCTYPES_CAPSULE_INSTANTIATE_DESTRUCTOR(CTYPES_CAPSULE_WCHAR_T)\n#endif\n\n/*\n  ctypes maintains thread-local storage that has space for two error numbers:\n  private copies of the system 'errno' value and, on Windows, the system error code\n  accessed by the GetLastError() and SetLastError() api functions.\n\n  Foreign functions created with CDLL(..., use_errno=True), when called, swap\n  the system 'errno' value with the private copy just before the actual\n  function call, and swapped again immediately afterwards.  The 'use_errno'\n  parameter defaults to False, in this case 'ctypes_errno' is not touched.\n\n  On Windows, foreign functions created with CDLL(..., use_last_error=True) or\n  WinDLL(..., use_last_error=True) swap the system LastError value with the\n  ctypes private copy.\n\n  The values are also swapped immeditately before and after ctypes callback\n  functions are called, if the callbacks are constructed using the new\n  optional use_errno parameter set to True: CFUNCTYPE(..., use_errno=TRUE) or\n  WINFUNCTYPE(..., use_errno=True).\n\n  New ctypes functions are provided to access the ctypes private copies from\n  Python:\n\n  - ctypes.set_errno(value) and ctypes.set_last_error(value) store 'value' in\n    the private copy and returns the previous value.\n\n  - ctypes.get_errno() and ctypes.get_last_error() returns the current ctypes\n    private copies value.\n*/\n\n/*\n  This function creates and returns a thread-local Python object that has\n  space to store two integer error numbers; once created the Python object is\n  kept alive in the thread state dictionary as long as the thread itself.\n*/\nPyObject *\n_ctypes_get_errobj(int **pspace)\n{\n    PyObject *dict = PyThreadState_GetDict();\n    PyObject *errobj;\n    static PyObject *error_object_name;\n    if (dict == 0) {\n        PyErr_SetString(PyExc_RuntimeError,\n                        \"cannot get thread state\");\n        return NULL;\n    }\n    if (error_object_name == NULL) {\n        error_object_name = PyString_InternFromString(\"ctypes.error_object\");\n        if (error_object_name == NULL)\n            return NULL;\n    }\n    errobj = PyDict_GetItem(dict, error_object_name);\n    if (errobj) {\n#ifdef CTYPES_USING_CAPSULE\n        if (!PyCapsule_IsValid(errobj, CTYPES_CAPSULE_ERROROBJ)) {\n            PyErr_SetString(PyExc_RuntimeError,\n                \"ctypes.error_object is an invalid capsule\");\n            return NULL;\n        }\n#endif /* CTYPES_USING_CAPSULE */\n        Py_INCREF(errobj);\n    }\n    else {\n        void *space = PyMem_Malloc(sizeof(int) * 2);\n        if (space == NULL)\n            return NULL;\n        memset(space, 0, sizeof(int) * 2);\n        errobj = CAPSULE_NEW(space, CTYPES_CAPSULE_ERROROBJ);\n        if (errobj == NULL) {\n            PyMem_Free(space);\n            return NULL;\n        }\n        if (-1 == PyDict_SetItem(dict, error_object_name,\n                                 errobj)) {\n            Py_DECREF(errobj);\n            return NULL;\n        }\n    }\n    *pspace = (int *)CAPSULE_DEREFERENCE(errobj, CTYPES_CAPSULE_ERROROBJ);\n    return errobj;\n}\n\nstatic PyObject *\nget_error_internal(PyObject *self, PyObject *args, int index)\n{\n    int *space;\n    PyObject *errobj = _ctypes_get_errobj(&space);\n    PyObject *result;\n\n    if (errobj == NULL)\n        return NULL;\n    result = PyInt_FromLong(space[index]);\n    Py_DECREF(errobj);\n    return result;\n}\n\nstatic PyObject *\nset_error_internal(PyObject *self, PyObject *args, int index)\n{\n    int new_errno, old_errno;\n    PyObject *errobj;\n    int *space;\n\n    if (!PyArg_ParseTuple(args, \"i\", &new_errno))\n        return NULL;\n    errobj = _ctypes_get_errobj(&space);\n    if (errobj == NULL)\n        return NULL;\n    old_errno = space[index];\n    space[index] = new_errno;\n    Py_DECREF(errobj);\n    return PyInt_FromLong(old_errno);\n}\n\nstatic PyObject *\nget_errno(PyObject *self, PyObject *args)\n{\n    return get_error_internal(self, args, 0);\n}\n\nstatic PyObject *\nset_errno(PyObject *self, PyObject *args)\n{\n    return set_error_internal(self, args, 0);\n}\n\n#ifdef MS_WIN32\n\nstatic PyObject *\nget_last_error(PyObject *self, PyObject *args)\n{\n    return get_error_internal(self, args, 1);\n}\n\nstatic PyObject *\nset_last_error(PyObject *self, PyObject *args)\n{\n    return set_error_internal(self, args, 1);\n}\n\nPyObject *ComError;\n\nstatic TCHAR *FormatError(DWORD code)\n{\n    TCHAR *lpMsgBuf;\n    DWORD n;\n    n = FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER |\n                      FORMAT_MESSAGE_FROM_SYSTEM |\n                      FORMAT_MESSAGE_IGNORE_INSERTS,\n                      NULL,\n                      code,\n                      MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), /* Default language */\n              (LPTSTR) &lpMsgBuf,\n              0,\n              NULL);\n    if (n) {\n        while (_istspace(lpMsgBuf[n-1]))\n            --n;\n        lpMsgBuf[n] = _T('\\0'); /* rstrip() */\n    }\n    return lpMsgBuf;\n}\n\n#ifndef DONT_USE_SEH\nstatic void SetException(DWORD code, EXCEPTION_RECORD *pr)\n{\n    /* The 'code' is a normal win32 error code so it could be handled by\n    PyErr_SetFromWindowsErr(). However, for some errors, we have additional\n    information not included in the error code. We handle those here and\n    delegate all others to the generic function. */\n    switch (code) {\n    case EXCEPTION_ACCESS_VIOLATION:\n        /* The thread attempted to read from or write\n           to a virtual address for which it does not\n           have the appropriate access. */\n        if (pr->ExceptionInformation[0] == 0)\n            PyErr_Format(PyExc_WindowsError,\n                         \"exception: access violation reading %p\",\n                         pr->ExceptionInformation[1]);\n        else\n            PyErr_Format(PyExc_WindowsError,\n                         \"exception: access violation writing %p\",\n                         pr->ExceptionInformation[1]);\n        break;\n\n    case EXCEPTION_BREAKPOINT:\n        /* A breakpoint was encountered. */\n        PyErr_SetString(PyExc_WindowsError,\n                        \"exception: breakpoint encountered\");\n        break;\n\n    case EXCEPTION_DATATYPE_MISALIGNMENT:\n        /* The thread attempted to read or write data that is\n           misaligned on hardware that does not provide\n           alignment. For example, 16-bit values must be\n           aligned on 2-byte boundaries, 32-bit values on\n           4-byte boundaries, and so on. */\n        PyErr_SetString(PyExc_WindowsError,\n                        \"exception: datatype misalignment\");\n        break;\n\n    case EXCEPTION_SINGLE_STEP:\n        /* A trace trap or other single-instruction mechanism\n           signaled that one instruction has been executed. */\n        PyErr_SetString(PyExc_WindowsError,\n                        \"exception: single step\");\n        break;\n\n    case EXCEPTION_ARRAY_BOUNDS_EXCEEDED:\n        /* The thread attempted to access an array element\n           that is out of bounds, and the underlying hardware\n           supports bounds checking. */\n        PyErr_SetString(PyExc_WindowsError,\n                        \"exception: array bounds exceeded\");\n        break;\n\n    case EXCEPTION_FLT_DENORMAL_OPERAND:\n        /* One of the operands in a floating-point operation\n           is denormal. A denormal value is one that is too\n           small to represent as a standard floating-point\n           value. */\n        PyErr_SetString(PyExc_WindowsError,\n                        \"exception: floating-point operand denormal\");\n        break;\n\n    case EXCEPTION_FLT_DIVIDE_BY_ZERO:\n        /* The thread attempted to divide a floating-point\n           value by a floating-point divisor of zero. */\n        PyErr_SetString(PyExc_WindowsError,\n                        \"exception: float divide by zero\");\n        break;\n\n    case EXCEPTION_FLT_INEXACT_RESULT:\n        /* The result of a floating-point operation cannot be\n           represented exactly as a decimal fraction. */\n        PyErr_SetString(PyExc_WindowsError,\n                        \"exception: float inexact\");\n        break;\n\n    case EXCEPTION_FLT_INVALID_OPERATION:\n        /* This exception represents any floating-point\n           exception not included in this list. */\n        PyErr_SetString(PyExc_WindowsError,\n                        \"exception: float invalid operation\");\n        break;\n\n    case EXCEPTION_FLT_OVERFLOW:\n        /* The exponent of a floating-point operation is\n           greater than the magnitude allowed by the\n           corresponding type. */\n        PyErr_SetString(PyExc_WindowsError,\n                        \"exception: float overflow\");\n        break;\n\n    case EXCEPTION_FLT_STACK_CHECK:\n        /* The stack overflowed or underflowed as the result\n           of a floating-point operation. */\n        PyErr_SetString(PyExc_WindowsError,\n                        \"exception: stack over/underflow\");\n        break;\n\n    case EXCEPTION_STACK_OVERFLOW:\n        /* The stack overflowed or underflowed as the result\n           of a floating-point operation. */\n        PyErr_SetString(PyExc_WindowsError,\n                        \"exception: stack overflow\");\n        break;\n\n    case EXCEPTION_FLT_UNDERFLOW:\n        /* The exponent of a floating-point operation is less\n           than the magnitude allowed by the corresponding\n           type. */\n        PyErr_SetString(PyExc_WindowsError,\n                        \"exception: float underflow\");\n        break;\n\n    case EXCEPTION_INT_DIVIDE_BY_ZERO:\n        /* The thread attempted to divide an integer value by\n           an integer divisor of zero. */\n        PyErr_SetString(PyExc_WindowsError,\n                        \"exception: integer divide by zero\");\n        break;\n\n    case EXCEPTION_INT_OVERFLOW:\n        /* The result of an integer operation caused a carry\n           out of the most significant bit of the result. */\n        PyErr_SetString(PyExc_WindowsError,\n                        \"exception: integer overflow\");\n        break;\n\n    case EXCEPTION_PRIV_INSTRUCTION:\n        /* The thread attempted to execute an instruction\n           whose operation is not allowed in the current\n           machine mode. */\n        PyErr_SetString(PyExc_WindowsError,\n                        \"exception: priviledged instruction\");\n        break;\n\n    case EXCEPTION_NONCONTINUABLE_EXCEPTION:\n        /* The thread attempted to continue execution after a\n           noncontinuable exception occurred. */\n        PyErr_SetString(PyExc_WindowsError,\n                        \"exception: nocontinuable\");\n        break;\n\n    default:\n        PyErr_SetFromWindowsErr(code);\n        break;\n    }\n}\n\nstatic DWORD HandleException(EXCEPTION_POINTERS *ptrs,\n                             DWORD *pdw, EXCEPTION_RECORD *record)\n{\n    *pdw = ptrs->ExceptionRecord->ExceptionCode;\n    *record = *ptrs->ExceptionRecord;\n    /* We don't want to catch breakpoint exceptions, they are used to attach\n     * a debugger to the process.\n     */\n    if (*pdw == EXCEPTION_BREAKPOINT)\n        return EXCEPTION_CONTINUE_SEARCH;\n    return EXCEPTION_EXECUTE_HANDLER;\n}\n#endif\n\nstatic PyObject *\ncheck_hresult(PyObject *self, PyObject *args)\n{\n    HRESULT hr;\n    if (!PyArg_ParseTuple(args, \"i\", &hr))\n        return NULL;\n    if (FAILED(hr))\n        return PyErr_SetFromWindowsErr(hr);\n    return PyInt_FromLong(hr);\n}\n\n#endif\n\n/**************************************************************/\n\nPyCArgObject *\nPyCArgObject_new(void)\n{\n    PyCArgObject *p;\n    p = PyObject_New(PyCArgObject, &PyCArg_Type);\n    if (p == NULL)\n        return NULL;\n    p->pffi_type = NULL;\n    p->tag = '\\0';\n    p->obj = NULL;\n    memset(&p->value, 0, sizeof(p->value));\n    return p;\n}\n\nstatic void\nPyCArg_dealloc(PyCArgObject *self)\n{\n    Py_XDECREF(self->obj);\n    PyObject_Del(self);\n}\n\nstatic PyObject *\nPyCArg_repr(PyCArgObject *self)\n{\n    char buffer[256];\n    switch(self->tag) {\n    case 'b':\n    case 'B':\n        sprintf(buffer, \"<cparam '%c' (%d)>\",\n            self->tag, self->value.b);\n        break;\n    case 'h':\n    case 'H':\n        sprintf(buffer, \"<cparam '%c' (%d)>\",\n            self->tag, self->value.h);\n        break;\n    case 'i':\n    case 'I':\n        sprintf(buffer, \"<cparam '%c' (%d)>\",\n            self->tag, self->value.i);\n        break;\n    case 'l':\n    case 'L':\n        sprintf(buffer, \"<cparam '%c' (%ld)>\",\n            self->tag, self->value.l);\n        break;\n\n#ifdef HAVE_LONG_LONG\n    case 'q':\n    case 'Q':\n        sprintf(buffer,\n            \"<cparam '%c' (%\" PY_FORMAT_LONG_LONG \"d)>\",\n            self->tag, self->value.q);\n        break;\n#endif\n    case 'd':\n        sprintf(buffer, \"<cparam '%c' (%f)>\",\n            self->tag, self->value.d);\n        break;\n    case 'f':\n        sprintf(buffer, \"<cparam '%c' (%f)>\",\n            self->tag, self->value.f);\n        break;\n\n    case 'c':\n        sprintf(buffer, \"<cparam '%c' (%c)>\",\n            self->tag, self->value.c);\n        break;\n\n/* Hm, are these 'z' and 'Z' codes useful at all?\n   Shouldn't they be replaced by the functionality of c_string\n   and c_wstring ?\n*/\n    case 'z':\n    case 'Z':\n    case 'P':\n        sprintf(buffer, \"<cparam '%c' (%p)>\",\n            self->tag, self->value.p);\n        break;\n\n    default:\n        sprintf(buffer, \"<cparam '%c' at %p>\",\n            self->tag, self);\n        break;\n    }\n    return PyString_FromString(buffer);\n}\n\nstatic PyMemberDef PyCArgType_members[] = {\n    { \"_obj\", T_OBJECT,\n      offsetof(PyCArgObject, obj), READONLY,\n      \"the wrapped object\" },\n    { NULL },\n};\n\nPyTypeObject PyCArg_Type = {\n    PyVarObject_HEAD_INIT(NULL, 0)\n    \"CArgObject\",\n    sizeof(PyCArgObject),\n    0,\n    (destructor)PyCArg_dealloc,                 /* tp_dealloc */\n    0,                                          /* tp_print */\n    0,                                          /* tp_getattr */\n    0,                                          /* tp_setattr */\n    0,                                          /* tp_compare */\n    (reprfunc)PyCArg_repr,                      /* tp_repr */\n    0,                                          /* tp_as_number */\n    0,                                          /* tp_as_sequence */\n    0,                                          /* tp_as_mapping */\n    0,                                          /* tp_hash */\n    0,                                          /* tp_call */\n    0,                                          /* tp_str */\n    0,                                          /* tp_getattro */\n    0,                                          /* tp_setattro */\n    0,                                          /* tp_as_buffer */\n    Py_TPFLAGS_DEFAULT,                         /* tp_flags */\n    0,                                          /* tp_doc */\n    0,                                          /* tp_traverse */\n    0,                                          /* tp_clear */\n    0,                                          /* tp_richcompare */\n    0,                                          /* tp_weaklistoffset */\n    0,                                          /* tp_iter */\n    0,                                          /* tp_iternext */\n    0,                                          /* tp_methods */\n    PyCArgType_members,                         /* tp_members */\n};\n\n/****************************************************************/\n/*\n * Convert a PyObject * into a parameter suitable to pass to an\n * C function call.\n *\n * 1. Python integers are converted to C int and passed by value.\n *    Py_None is converted to a C NULL pointer.\n *\n * 2. 3-tuples are expected to have a format character in the first\n *    item, which must be 'i', 'f', 'd', 'q', or 'P'.\n *    The second item will have to be an integer, float, double, long long\n *    or integer (denoting an address void *), will be converted to the\n *    corresponding C data type and passed by value.\n *\n * 3. Other Python objects are tested for an '_as_parameter_' attribute.\n *    The value of this attribute must be an integer which will be passed\n *    by value, or a 2-tuple or 3-tuple which will be used according\n *    to point 2 above. The third item (if any), is ignored. It is normally\n *    used to keep the object alive where this parameter refers to.\n *    XXX This convention is dangerous - you can construct arbitrary tuples\n *    in Python and pass them. Would it be safer to use a custom container\n *    datatype instead of a tuple?\n *\n * 4. Other Python objects cannot be passed as parameters - an exception is raised.\n *\n * 5. ConvParam will store the converted result in a struct containing format\n *    and value.\n */\n\nunion result {\n    char c;\n    char b;\n    short h;\n    int i;\n    long l;\n#ifdef HAVE_LONG_LONG\n    PY_LONG_LONG q;\n#endif\n    long double D;\n    double d;\n    float f;\n    void *p;\n};\n\nstruct argument {\n    ffi_type *ffi_type;\n    PyObject *keep;\n    union result value;\n};\n\n/*\n * Convert a single Python object into a PyCArgObject and return it.\n */\nstatic int ConvParam(PyObject *obj, Py_ssize_t index, struct argument *pa)\n{\n    StgDictObject *dict;\n    pa->keep = NULL; /* so we cannot forget it later */\n\n    dict = PyObject_stgdict(obj);\n    if (dict) {\n        PyCArgObject *carg;\n        assert(dict->paramfunc);\n        /* If it has an stgdict, it is a CDataObject */\n        carg = dict->paramfunc((CDataObject *)obj);\n        pa->ffi_type = carg->pffi_type;\n        memcpy(&pa->value, &carg->value, sizeof(pa->value));\n        pa->keep = (PyObject *)carg;\n        return 0;\n    }\n\n    if (PyCArg_CheckExact(obj)) {\n        PyCArgObject *carg = (PyCArgObject *)obj;\n        pa->ffi_type = carg->pffi_type;\n        Py_INCREF(obj);\n        pa->keep = obj;\n        memcpy(&pa->value, &carg->value, sizeof(pa->value));\n        return 0;\n    }\n\n    /* check for None, integer, string or unicode and use directly if successful */\n    if (obj == Py_None) {\n        pa->ffi_type = &ffi_type_pointer;\n        pa->value.p = NULL;\n        return 0;\n    }\n\n    if (PyInt_Check(obj)) {\n        pa->ffi_type = &ffi_type_sint;\n        pa->value.i = PyInt_AS_LONG(obj);\n        return 0;\n    }\n\n    if (PyLong_Check(obj)) {\n        pa->ffi_type = &ffi_type_sint;\n        pa->value.i = (long)PyLong_AsUnsignedLong(obj);\n        if (pa->value.i == -1 && PyErr_Occurred()) {\n            PyErr_Clear();\n            pa->value.i = PyLong_AsLong(obj);\n            if (pa->value.i == -1 && PyErr_Occurred()) {\n                PyErr_SetString(PyExc_OverflowError,\n                                \"long int too long to convert\");\n                return -1;\n            }\n        }\n        return 0;\n    }\n\n    if (PyString_Check(obj)) {\n        pa->ffi_type = &ffi_type_pointer;\n        pa->value.p = PyString_AS_STRING(obj);\n        Py_INCREF(obj);\n        pa->keep = obj;\n        return 0;\n    }\n\n#ifdef CTYPES_UNICODE\n    if (PyUnicode_Check(obj)) {\n#ifdef HAVE_USABLE_WCHAR_T\n        pa->ffi_type = &ffi_type_pointer;\n        pa->value.p = PyUnicode_AS_UNICODE(obj);\n        Py_INCREF(obj);\n        pa->keep = obj;\n        return 0;\n#else\n        int size = PyUnicode_GET_SIZE(obj);\n        pa->ffi_type = &ffi_type_pointer;\n        size += 1; /* terminating NUL */\n        size *= sizeof(wchar_t);\n        pa->value.p = PyMem_Malloc(size);\n        if (!pa->value.p) {\n            PyErr_NoMemory();\n            return -1;\n        }\n        memset(pa->value.p, 0, size);\n        pa->keep = CAPSULE_NEW(pa->value.p, CTYPES_CAPSULE_WCHAR_T);\n        if (!pa->keep) {\n            PyMem_Free(pa->value.p);\n            return -1;\n        }\n        if (-1 == PyUnicode_AsWideChar((PyUnicodeObject *)obj,\n                                       pa->value.p, PyUnicode_GET_SIZE(obj)))\n            return -1;\n        return 0;\n#endif\n    }\n#endif\n\n    {\n        PyObject *arg;\n        arg = PyObject_GetAttrString(obj, \"_as_parameter_\");\n        /* Which types should we exactly allow here?\n           integers are required for using Python classes\n           as parameters (they have to expose the '_as_parameter_'\n           attribute)\n        */\n        if (arg) {\n            int result;\n            result = ConvParam(arg, index, pa);\n            Py_DECREF(arg);\n            return result;\n        }\n        PyErr_Format(PyExc_TypeError,\n                     \"Don't know how to convert parameter %d\",\n                     Py_SAFE_DOWNCAST(index, Py_ssize_t, int));\n        return -1;\n    }\n}\n\n\nffi_type *_ctypes_get_ffi_type(PyObject *obj)\n{\n    StgDictObject *dict;\n    if (obj == NULL)\n        return &ffi_type_sint;\n    dict = PyType_stgdict(obj);\n    if (dict == NULL)\n        return &ffi_type_sint;\n#if defined(MS_WIN32) && !defined(_WIN32_WCE)\n    /* This little trick works correctly with MSVC.\n       It returns small structures in registers\n    */\n    if (dict->ffi_type_pointer.type == FFI_TYPE_STRUCT) {\n        if (can_return_struct_as_int(dict->ffi_type_pointer.size))\n            return &ffi_type_sint32;\n        else if (can_return_struct_as_sint64 (dict->ffi_type_pointer.size))\n            return &ffi_type_sint64;\n    }\n#endif\n    return &dict->ffi_type_pointer;\n}\n\n\n/*\n * libffi uses:\n *\n * ffi_status ffi_prep_cif(ffi_cif *cif, ffi_abi abi,\n *                         unsigned int nargs,\n *                         ffi_type *rtype,\n *                         ffi_type **atypes);\n *\n * and then\n *\n * void ffi_call(ffi_cif *cif, void *fn, void *rvalue, void **avalues);\n */\nstatic int _call_function_pointer(int flags,\n                                  PPROC pProc,\n                                  void **avalues,\n                                  ffi_type **atypes,\n                                  ffi_type *restype,\n                                  void *resmem,\n                                  int argcount)\n{\n#ifdef WITH_THREAD\n    PyThreadState *_save = NULL; /* For Py_BLOCK_THREADS and Py_UNBLOCK_THREADS */\n#endif\n    PyObject *error_object = NULL;\n    int *space;\n    ffi_cif cif;\n    int cc;\n#ifdef MS_WIN32\n    int delta;\n#ifndef DONT_USE_SEH\n    DWORD dwExceptionCode = 0;\n    EXCEPTION_RECORD record;\n#endif\n#endif\n    /* XXX check before here */\n    if (restype == NULL) {\n        PyErr_SetString(PyExc_RuntimeError,\n                        \"No ffi_type for result\");\n        return -1;\n    }\n\n    cc = FFI_DEFAULT_ABI;\n#if defined(MS_WIN32) && !defined(MS_WIN64) && !defined(_WIN32_WCE)\n    if ((flags & FUNCFLAG_CDECL) == 0)\n        cc = FFI_STDCALL;\n#endif\n    if (FFI_OK != ffi_prep_cif(&cif,\n                               cc,\n                               argcount,\n                               restype,\n                               atypes)) {\n        PyErr_SetString(PyExc_RuntimeError,\n                        \"ffi_prep_cif failed\");\n        return -1;\n    }\n\n    if (flags & (FUNCFLAG_USE_ERRNO | FUNCFLAG_USE_LASTERROR)) {\n        error_object = _ctypes_get_errobj(&space);\n        if (error_object == NULL)\n            return -1;\n    }\n#ifdef WITH_THREAD\n    if ((flags & FUNCFLAG_PYTHONAPI) == 0)\n        Py_UNBLOCK_THREADS\n#endif\n    if (flags & FUNCFLAG_USE_ERRNO) {\n        int temp = space[0];\n        space[0] = errno;\n        errno = temp;\n    }\n#ifdef MS_WIN32\n    if (flags & FUNCFLAG_USE_LASTERROR) {\n        int temp = space[1];\n        space[1] = GetLastError();\n        SetLastError(temp);\n    }\n#ifndef DONT_USE_SEH\n    __try {\n#endif\n        delta =\n#endif\n                ffi_call(&cif, (void *)pProc, resmem, avalues);\n#ifdef MS_WIN32\n#ifndef DONT_USE_SEH\n    }\n    __except (HandleException(GetExceptionInformation(),\n                              &dwExceptionCode, &record)) {\n        ;\n    }\n#endif\n    if (flags & FUNCFLAG_USE_LASTERROR) {\n        int temp = space[1];\n        space[1] = GetLastError();\n        SetLastError(temp);\n    }\n#endif\n    if (flags & FUNCFLAG_USE_ERRNO) {\n        int temp = space[0];\n        space[0] = errno;\n        errno = temp;\n    }\n#ifdef WITH_THREAD\n    if ((flags & FUNCFLAG_PYTHONAPI) == 0)\n        Py_BLOCK_THREADS\n#endif\n    Py_XDECREF(error_object);\n#ifdef MS_WIN32\n#ifndef DONT_USE_SEH\n    if (dwExceptionCode) {\n        SetException(dwExceptionCode, &record);\n        return -1;\n    }\n#endif\n#ifdef MS_WIN64\n    if (delta != 0) {\n        PyErr_Format(PyExc_RuntimeError,\n                 \"ffi_call failed with code %d\",\n                 delta);\n        return -1;\n    }\n#else\n    if (delta < 0) {\n        if (flags & FUNCFLAG_CDECL)\n            PyErr_Format(PyExc_ValueError,\n                     \"Procedure called with not enough \"\n                     \"arguments (%d bytes missing) \"\n                     \"or wrong calling convention\",\n                     -delta);\n        else\n            PyErr_Format(PyExc_ValueError,\n                     \"Procedure probably called with not enough \"\n                     \"arguments (%d bytes missing)\",\n                     -delta);\n        return -1;\n    } else if (delta > 0) {\n        PyErr_Format(PyExc_ValueError,\n                 \"Procedure probably called with too many \"\n                 \"arguments (%d bytes in excess)\",\n                 delta);\n        return -1;\n    }\n#endif\n#endif\n    if ((flags & FUNCFLAG_PYTHONAPI) && PyErr_Occurred())\n        return -1;\n    return 0;\n}\n\n/*\n * Convert the C value in result into a Python object, depending on restype.\n *\n * - If restype is NULL, return a Python integer.\n * - If restype is None, return None.\n * - If restype is a simple ctypes type (c_int, c_void_p), call the type's getfunc,\n *   pass the result to checker and return the result.\n * - If restype is another ctypes type, return an instance of that.\n * - Otherwise, call restype and return the result.\n */\nstatic PyObject *GetResult(PyObject *restype, void *result, PyObject *checker)\n{\n    StgDictObject *dict;\n    PyObject *retval, *v;\n\n    if (restype == NULL)\n        return PyInt_FromLong(*(int *)result);\n\n    if (restype == Py_None) {\n        Py_INCREF(Py_None);\n        return Py_None;\n    }\n\n    dict = PyType_stgdict(restype);\n    if (dict == NULL)\n        return PyObject_CallFunction(restype, \"i\", *(int *)result);\n\n    if (dict->getfunc && !_ctypes_simple_instance(restype)) {\n        retval = dict->getfunc(result, dict->size);\n        /* If restype is py_object (detected by comparing getfunc with\n           O_get), we have to call Py_DECREF because O_get has already\n           called Py_INCREF.\n        */\n        if (dict->getfunc == _ctypes_get_fielddesc(\"O\")->getfunc) {\n            Py_DECREF(retval);\n        }\n    } else\n        retval = PyCData_FromBaseObj(restype, NULL, 0, result);\n\n    if (!checker || !retval)\n        return retval;\n\n    v = PyObject_CallFunctionObjArgs(checker, retval, NULL);\n    if (v == NULL)\n        _ctypes_add_traceback(\"GetResult\", \"_ctypes/callproc.c\", __LINE__-2);\n    Py_DECREF(retval);\n    return v;\n}\n\n/*\n * Raise a new exception 'exc_class', adding additional text to the original\n * exception string.\n */\nvoid _ctypes_extend_error(PyObject *exc_class, char *fmt, ...)\n{\n    va_list vargs;\n    PyObject *tp, *v, *tb, *s, *cls_str, *msg_str;\n\n    va_start(vargs, fmt);\n    s = PyString_FromFormatV(fmt, vargs);\n    va_end(vargs);\n    if (!s)\n        return;\n\n    PyErr_Fetch(&tp, &v, &tb);\n    PyErr_NormalizeException(&tp, &v, &tb);\n    cls_str = PyObject_Str(tp);\n    if (cls_str) {\n        PyString_ConcatAndDel(&s, cls_str);\n        PyString_ConcatAndDel(&s, PyString_FromString(\": \"));\n        if (s == NULL)\n            goto error;\n    } else\n        PyErr_Clear();\n    msg_str = PyObject_Str(v);\n    if (msg_str)\n        PyString_ConcatAndDel(&s, msg_str);\n    else {\n        PyErr_Clear();\n        PyString_ConcatAndDel(&s, PyString_FromString(\"???\"));\n        if (s == NULL)\n            goto error;\n    }\n    PyErr_SetObject(exc_class, s);\nerror:\n    Py_XDECREF(tp);\n    Py_XDECREF(v);\n    Py_XDECREF(tb);\n    Py_XDECREF(s);\n}\n\n\n#ifdef MS_WIN32\n\nstatic PyObject *\nGetComError(HRESULT errcode, GUID *riid, IUnknown *pIunk)\n{\n    HRESULT hr;\n    ISupportErrorInfo *psei = NULL;\n    IErrorInfo *pei = NULL;\n    BSTR descr=NULL, helpfile=NULL, source=NULL;\n    GUID guid;\n    DWORD helpcontext=0;\n    LPOLESTR progid;\n    PyObject *obj;\n    TCHAR *text;\n\n    /* We absolutely have to release the GIL during COM method calls,\n       otherwise we may get a deadlock!\n    */\n#ifdef WITH_THREAD\n    Py_BEGIN_ALLOW_THREADS\n#endif\n\n    hr = pIunk->lpVtbl->QueryInterface(pIunk, &IID_ISupportErrorInfo, (void **)&psei);\n    if (FAILED(hr))\n        goto failed;\n\n    hr = psei->lpVtbl->InterfaceSupportsErrorInfo(psei, riid);\n    psei->lpVtbl->Release(psei);\n    if (FAILED(hr))\n        goto failed;\n\n    hr = GetErrorInfo(0, &pei);\n    if (hr != S_OK)\n        goto failed;\n\n    pei->lpVtbl->GetDescription(pei, &descr);\n    pei->lpVtbl->GetGUID(pei, &guid);\n    pei->lpVtbl->GetHelpContext(pei, &helpcontext);\n    pei->lpVtbl->GetHelpFile(pei, &helpfile);\n    pei->lpVtbl->GetSource(pei, &source);\n\n    pei->lpVtbl->Release(pei);\n\n  failed:\n#ifdef WITH_THREAD\n    Py_END_ALLOW_THREADS\n#endif\n\n    progid = NULL;\n    ProgIDFromCLSID(&guid, &progid);\n\n    text = FormatError(errcode);\n    obj = Py_BuildValue(\n#ifdef _UNICODE\n        \"iu(uuuiu)\",\n#else\n        \"is(uuuiu)\",\n#endif\n        errcode,\n        text,\n        descr, source, helpfile, helpcontext,\n        progid);\n    if (obj) {\n        PyErr_SetObject(ComError, obj);\n        Py_DECREF(obj);\n    }\n    LocalFree(text);\n\n    if (descr)\n        SysFreeString(descr);\n    if (helpfile)\n        SysFreeString(helpfile);\n    if (source)\n        SysFreeString(source);\n\n    return NULL;\n}\n#endif\n\n/*\n * Requirements, must be ensured by the caller:\n * - argtuple is tuple of arguments\n * - argtypes is either NULL, or a tuple of the same size as argtuple\n *\n * - XXX various requirements for restype, not yet collected\n */\nPyObject *_ctypes_callproc(PPROC pProc,\n                    PyObject *argtuple,\n#ifdef MS_WIN32\n                    IUnknown *pIunk,\n                    GUID *iid,\n#endif\n                    int flags,\n                    PyObject *argtypes, /* misleading name: This is a tuple of\n                                           methods, not types: the .from_param\n                                           class methods of the types */\n            PyObject *restype,\n            PyObject *checker)\n{\n    Py_ssize_t i, n, argcount, argtype_count;\n    void *resbuf;\n    struct argument *args, *pa;\n    ffi_type **atypes;\n    ffi_type *rtype;\n    void **avalues;\n    PyObject *retval = NULL;\n\n    n = argcount = PyTuple_GET_SIZE(argtuple);\n#ifdef MS_WIN32\n    /* an optional COM object this pointer */\n    if (pIunk)\n        ++argcount;\n#endif\n\n    args = (struct argument *)alloca(sizeof(struct argument) * argcount);\n    if (!args) {\n        PyErr_NoMemory();\n        return NULL;\n    }\n    memset(args, 0, sizeof(struct argument) * argcount);\n    argtype_count = argtypes ? PyTuple_GET_SIZE(argtypes) : 0;\n#ifdef MS_WIN32\n    if (pIunk) {\n        args[0].ffi_type = &ffi_type_pointer;\n        args[0].value.p = pIunk;\n        pa = &args[1];\n    } else\n#endif\n        pa = &args[0];\n\n    /* Convert the arguments */\n    for (i = 0; i < n; ++i, ++pa) {\n        PyObject *converter;\n        PyObject *arg;\n        int err;\n\n        arg = PyTuple_GET_ITEM(argtuple, i);            /* borrowed ref */\n        /* For cdecl functions, we allow more actual arguments\n           than the length of the argtypes tuple.\n           This is checked in _ctypes::PyCFuncPtr_Call\n        */\n        if (argtypes && argtype_count > i) {\n            PyObject *v;\n            converter = PyTuple_GET_ITEM(argtypes, i);\n            v = PyObject_CallFunctionObjArgs(converter,\n                                               arg,\n                                               NULL);\n            if (v == NULL) {\n                _ctypes_extend_error(PyExc_ArgError, \"argument %d: \", i+1);\n                goto cleanup;\n            }\n\n            err = ConvParam(v, i+1, pa);\n            Py_DECREF(v);\n            if (-1 == err) {\n                _ctypes_extend_error(PyExc_ArgError, \"argument %d: \", i+1);\n                goto cleanup;\n            }\n        } else {\n            err = ConvParam(arg, i+1, pa);\n            if (-1 == err) {\n                _ctypes_extend_error(PyExc_ArgError, \"argument %d: \", i+1);\n                goto cleanup; /* leaking ? */\n            }\n        }\n    }\n\n    rtype = _ctypes_get_ffi_type(restype);\n    resbuf = alloca(max(rtype->size, sizeof(ffi_arg)));\n\n    avalues = (void **)alloca(sizeof(void *) * argcount);\n    atypes = (ffi_type **)alloca(sizeof(ffi_type *) * argcount);\n    if (!resbuf || !avalues || !atypes) {\n        PyErr_NoMemory();\n        goto cleanup;\n    }\n    for (i = 0; i < argcount; ++i) {\n        atypes[i] = args[i].ffi_type;\n        if (atypes[i]->type == FFI_TYPE_STRUCT)\n            avalues[i] = (void *)args[i].value.p;\n        else\n            avalues[i] = (void *)&args[i].value;\n    }\n\n    if (-1 == _call_function_pointer(flags, pProc, avalues, atypes,\n                                     rtype, resbuf,\n                                     Py_SAFE_DOWNCAST(argcount,\n                                                      Py_ssize_t,\n                                                      int)))\n        goto cleanup;\n\n#ifdef WORDS_BIGENDIAN\n    /* libffi returns the result in a buffer with sizeof(ffi_arg). This\n       causes problems on big endian machines, since the result buffer\n       address cannot simply be used as result pointer, instead we must\n       adjust the pointer value:\n     */\n    /*\n      XXX I should find out and clarify why this is needed at all,\n      especially why adjusting for ffi_type_float must be avoided on\n      64-bit platforms.\n     */\n    if (rtype->type != FFI_TYPE_FLOAT\n        && rtype->type != FFI_TYPE_STRUCT\n        && rtype->size < sizeof(ffi_arg))\n        resbuf = (char *)resbuf + sizeof(ffi_arg) - rtype->size;\n#endif\n\n#ifdef MS_WIN32\n    if (iid && pIunk) {\n        if (*(int *)resbuf & 0x80000000)\n            retval = GetComError(*(HRESULT *)resbuf, iid, pIunk);\n        else\n            retval = PyInt_FromLong(*(int *)resbuf);\n    } else if (flags & FUNCFLAG_HRESULT) {\n        if (*(int *)resbuf & 0x80000000)\n            retval = PyErr_SetFromWindowsErr(*(int *)resbuf);\n        else\n            retval = PyInt_FromLong(*(int *)resbuf);\n    } else\n#endif\n        retval = GetResult(restype, resbuf, checker);\n  cleanup:\n    for (i = 0; i < argcount; ++i)\n        Py_XDECREF(args[i].keep);\n    return retval;\n}\n\nstatic int\n_parse_voidp(PyObject *obj, void **address)\n{\n    *address = PyLong_AsVoidPtr(obj);\n    if (*address == NULL)\n        return 0;\n    return 1;\n}\n\n#ifdef MS_WIN32\n\n#ifdef _UNICODE\n#  define PYBUILD_TSTR \"u\"\n#else\n#  define PYBUILD_TSTR \"s\"\n#  ifndef _T\n#    define _T(text) text\n#  endif\n#endif\n\nstatic char format_error_doc[] =\n\"FormatError([integer]) -> string\\n\\\n\\n\\\nConvert a win32 error code into a string. If the error code is not\\n\\\ngiven, the return value of a call to GetLastError() is used.\\n\";\nstatic PyObject *format_error(PyObject *self, PyObject *args)\n{\n    PyObject *result;\n    TCHAR *lpMsgBuf;\n    DWORD code = 0;\n    if (!PyArg_ParseTuple(args, \"|i:FormatError\", &code))\n        return NULL;\n    if (code == 0)\n        code = GetLastError();\n    lpMsgBuf = FormatError(code);\n    if (lpMsgBuf) {\n        result = Py_BuildValue(PYBUILD_TSTR, lpMsgBuf);\n        LocalFree(lpMsgBuf);\n    } else {\n        result = Py_BuildValue(\"s\", \"<no description>\");\n    }\n    return result;\n}\n\nstatic char load_library_doc[] =\n\"LoadLibrary(name) -> handle\\n\\\n\\n\\\nLoad an executable (usually a DLL), and return a handle to it.\\n\\\nThe handle may be used to locate exported functions in this\\n\\\nmodule.\\n\";\nstatic PyObject *load_library(PyObject *self, PyObject *args)\n{\n    TCHAR *name;\n    PyObject *nameobj;\n    PyObject *ignored;\n    HMODULE hMod;\n    if (!PyArg_ParseTuple(args, \"O|O:LoadLibrary\", &nameobj, &ignored))\n        return NULL;\n#ifdef _UNICODE\n    name = alloca((PyString_Size(nameobj) + 1) * sizeof(WCHAR));\n    if (!name) {\n        PyErr_NoMemory();\n        return NULL;\n    }\n\n    {\n        int r;\n        char *aname = PyString_AsString(nameobj);\n        if(!aname)\n            return NULL;\n        r = MultiByteToWideChar(CP_ACP, 0, aname, -1, name, PyString_Size(nameobj) + 1);\n        name[r] = 0;\n    }\n#else\n    name = PyString_AsString(nameobj);\n    if(!name)\n        return NULL;\n#endif\n\n    hMod = LoadLibrary(name);\n    if (!hMod)\n        return PyErr_SetFromWindowsErr(GetLastError());\n#ifdef _WIN64\n    return PyLong_FromVoidPtr(hMod);\n#else\n    return Py_BuildValue(\"i\", hMod);\n#endif\n}\n\nstatic char free_library_doc[] =\n\"FreeLibrary(handle) -> void\\n\\\n\\n\\\nFree the handle of an executable previously loaded by LoadLibrary.\\n\";\nstatic PyObject *free_library(PyObject *self, PyObject *args)\n{\n    void *hMod;\n    if (!PyArg_ParseTuple(args, \"O&:FreeLibrary\", &_parse_voidp, &hMod))\n        return NULL;\n    if (!FreeLibrary((HMODULE)hMod))\n        return PyErr_SetFromWindowsErr(GetLastError());\n    Py_INCREF(Py_None);\n    return Py_None;\n}\n\n/* obsolete, should be removed */\n/* Only used by sample code (in samples\\Windows\\COM.py) */\nstatic PyObject *\ncall_commethod(PyObject *self, PyObject *args)\n{\n    IUnknown *pIunk;\n    int index;\n    PyObject *arguments;\n    PPROC *lpVtbl;\n    PyObject *result;\n    CDataObject *pcom;\n    PyObject *argtypes = NULL;\n\n    if (!PyArg_ParseTuple(args,\n                          \"OiO!|O!\",\n                          &pcom, &index,\n                          &PyTuple_Type, &arguments,\n                          &PyTuple_Type, &argtypes))\n        return NULL;\n\n    if (argtypes && (PyTuple_GET_SIZE(arguments) != PyTuple_GET_SIZE(argtypes))) {\n        PyErr_Format(PyExc_TypeError,\n                     \"Method takes %d arguments (%d given)\",\n                     PyTuple_GET_SIZE(argtypes), PyTuple_GET_SIZE(arguments));\n        return NULL;\n    }\n\n    if (!CDataObject_Check(pcom) || (pcom->b_size != sizeof(void *))) {\n        PyErr_Format(PyExc_TypeError,\n                     \"COM Pointer expected instead of %s instance\",\n                     Py_TYPE(pcom)->tp_name);\n        return NULL;\n    }\n\n    if ((*(void **)(pcom->b_ptr)) == NULL) {\n        PyErr_SetString(PyExc_ValueError,\n                        \"The COM 'this' pointer is NULL\");\n        return NULL;\n    }\n\n    pIunk = (IUnknown *)(*(void **)(pcom->b_ptr));\n    lpVtbl = (PPROC *)(pIunk->lpVtbl);\n\n    result =  _ctypes_callproc(lpVtbl[index],\n                        arguments,\n#ifdef MS_WIN32\n                        pIunk,\n                        NULL,\n#endif\n                        FUNCFLAG_HRESULT, /* flags */\n                argtypes, /* self->argtypes */\n                NULL, /* self->restype */\n                NULL); /* checker */\n    return result;\n}\n\nstatic char copy_com_pointer_doc[] =\n\"CopyComPointer(src, dst) -> HRESULT value\\n\";\n\nstatic PyObject *\ncopy_com_pointer(PyObject *self, PyObject *args)\n{\n    PyObject *p1, *p2, *r = NULL;\n    struct argument a, b;\n    IUnknown *src, **pdst;\n    if (!PyArg_ParseTuple(args, \"OO:CopyComPointer\", &p1, &p2))\n        return NULL;\n    a.keep = b.keep = NULL;\n\n    if (-1 == ConvParam(p1, 0, &a) || -1 == ConvParam(p2, 1, &b))\n        goto done;\n    src = (IUnknown *)a.value.p;\n    pdst = (IUnknown **)b.value.p;\n\n    if (pdst == NULL)\n        r = PyInt_FromLong(E_POINTER);\n    else {\n        if (src)\n            src->lpVtbl->AddRef(src);\n        *pdst = src;\n        r = PyInt_FromLong(S_OK);\n    }\n  done:\n    Py_XDECREF(a.keep);\n    Py_XDECREF(b.keep);\n    return r;\n}\n#else\n\nstatic PyObject *py_dl_open(PyObject *self, PyObject *args)\n{\n    char *name;\n    void * handle;\n#ifdef RTLD_LOCAL\n    int mode = RTLD_NOW | RTLD_LOCAL;\n#else\n    /* cygwin doesn't define RTLD_LOCAL */\n    int mode = RTLD_NOW;\n#endif\n    if (!PyArg_ParseTuple(args, \"z|i:dlopen\", &name, &mode))\n        return NULL;\n    mode |= RTLD_NOW;\n    handle = ctypes_dlopen(name, mode);\n    if (!handle) {\n        char *errmsg = ctypes_dlerror();\n        if (!errmsg)\n            errmsg = \"dlopen() error\";\n        PyErr_SetString(PyExc_OSError,\n                               errmsg);\n        return NULL;\n    }\n    return PyLong_FromVoidPtr(handle);\n}\n\nstatic PyObject *py_dl_close(PyObject *self, PyObject *args)\n{\n    void *handle;\n\n    if (!PyArg_ParseTuple(args, \"O&:dlclose\", &_parse_voidp, &handle))\n        return NULL;\n    if (dlclose(handle)) {\n        PyErr_SetString(PyExc_OSError,\n                               ctypes_dlerror());\n        return NULL;\n    }\n    Py_INCREF(Py_None);\n    return Py_None;\n}\n\nstatic PyObject *py_dl_sym(PyObject *self, PyObject *args)\n{\n    char *name;\n    void *handle;\n    void *ptr;\n\n    if (!PyArg_ParseTuple(args, \"O&s:dlsym\",\n                          &_parse_voidp, &handle, &name))\n        return NULL;\n    ptr = ctypes_dlsym((void*)handle, name);\n    if (!ptr) {\n        PyErr_SetString(PyExc_OSError,\n                               ctypes_dlerror());\n        return NULL;\n    }\n    return PyLong_FromVoidPtr(ptr);\n}\n#endif\n\n/*\n * Only for debugging so far: So that we can call CFunction instances\n *\n * XXX Needs to accept more arguments: flags, argtypes, restype\n */\nstatic PyObject *\ncall_function(PyObject *self, PyObject *args)\n{\n    void *func;\n    PyObject *arguments;\n    PyObject *result;\n\n    if (!PyArg_ParseTuple(args,\n                          \"O&O!\",\n                          &_parse_voidp, &func,\n                          &PyTuple_Type, &arguments))\n        return NULL;\n\n    result =  _ctypes_callproc((PPROC)func,\n                        arguments,\n#ifdef MS_WIN32\n                        NULL,\n                        NULL,\n#endif\n                        0, /* flags */\n                NULL, /* self->argtypes */\n                NULL, /* self->restype */\n                NULL); /* checker */\n    return result;\n}\n\n/*\n * Only for debugging so far: So that we can call CFunction instances\n *\n * XXX Needs to accept more arguments: flags, argtypes, restype\n */\nstatic PyObject *\ncall_cdeclfunction(PyObject *self, PyObject *args)\n{\n    void *func;\n    PyObject *arguments;\n    PyObject *result;\n\n    if (!PyArg_ParseTuple(args,\n                          \"O&O!\",\n                          &_parse_voidp, &func,\n                          &PyTuple_Type, &arguments))\n        return NULL;\n\n    result =  _ctypes_callproc((PPROC)func,\n                        arguments,\n#ifdef MS_WIN32\n                        NULL,\n                        NULL,\n#endif\n                        FUNCFLAG_CDECL, /* flags */\n                NULL, /* self->argtypes */\n                NULL, /* self->restype */\n                NULL); /* checker */\n    return result;\n}\n\n/*****************************************************************\n * functions\n */\nstatic char sizeof_doc[] =\n\"sizeof(C type) -> integer\\n\"\n\"sizeof(C instance) -> integer\\n\"\n\"Return the size in bytes of a C instance\";\n\nstatic PyObject *\nsizeof_func(PyObject *self, PyObject *obj)\n{\n    StgDictObject *dict;\n\n    dict = PyType_stgdict(obj);\n    if (dict)\n        return PyInt_FromSsize_t(dict->size);\n\n    if (CDataObject_Check(obj))\n        return PyInt_FromSsize_t(((CDataObject *)obj)->b_size);\n    PyErr_SetString(PyExc_TypeError,\n                    \"this type has no size\");\n    return NULL;\n}\n\nstatic char alignment_doc[] =\n\"alignment(C type) -> integer\\n\"\n\"alignment(C instance) -> integer\\n\"\n\"Return the alignment requirements of a C instance\";\n\nstatic PyObject *\nalign_func(PyObject *self, PyObject *obj)\n{\n    StgDictObject *dict;\n\n    dict = PyType_stgdict(obj);\n    if (dict)\n        return PyInt_FromSsize_t(dict->align);\n\n    dict = PyObject_stgdict(obj);\n    if (dict)\n        return PyInt_FromSsize_t(dict->align);\n\n    PyErr_SetString(PyExc_TypeError,\n                    \"no alignment info\");\n    return NULL;\n}\n\nstatic char byref_doc[] =\n\"byref(C instance[, offset=0]) -> byref-object\\n\"\n\"Return a pointer lookalike to a C instance, only usable\\n\"\n\"as function argument\";\n\n/*\n * We must return something which can be converted to a parameter,\n * but still has a reference to self.\n */\nstatic PyObject *\nbyref(PyObject *self, PyObject *args)\n{\n    PyCArgObject *parg;\n    PyObject *obj;\n    PyObject *pyoffset = NULL;\n    Py_ssize_t offset = 0;\n\n    if (!PyArg_UnpackTuple(args, \"byref\", 1, 2,\n                           &obj, &pyoffset))\n        return NULL;\n    if (pyoffset) {\n        offset = PyNumber_AsSsize_t(pyoffset, NULL);\n        if (offset == -1 && PyErr_Occurred())\n            return NULL;\n    }\n    if (!CDataObject_Check(obj)) {\n        PyErr_Format(PyExc_TypeError,\n                     \"byref() argument must be a ctypes instance, not '%s'\",\n                     Py_TYPE(obj)->tp_name);\n        return NULL;\n    }\n\n    parg = PyCArgObject_new();\n    if (parg == NULL)\n        return NULL;\n\n    parg->tag = 'P';\n    parg->pffi_type = &ffi_type_pointer;\n    Py_INCREF(obj);\n    parg->obj = obj;\n    parg->value.p = (char *)((CDataObject *)obj)->b_ptr + offset;\n    return (PyObject *)parg;\n}\n\nstatic char addressof_doc[] =\n\"addressof(C instance) -> integer\\n\"\n\"Return the address of the C instance internal buffer\";\n\nstatic PyObject *\naddressof(PyObject *self, PyObject *obj)\n{\n    if (CDataObject_Check(obj))\n        return PyLong_FromVoidPtr(((CDataObject *)obj)->b_ptr);\n    PyErr_SetString(PyExc_TypeError,\n                    \"invalid type\");\n    return NULL;\n}\n\nstatic int\nconverter(PyObject *obj, void **address)\n{\n    *address = PyLong_AsVoidPtr(obj);\n    return *address != NULL;\n}\n\nstatic PyObject *\nMy_PyObj_FromPtr(PyObject *self, PyObject *args)\n{\n    PyObject *ob;\n    if (!PyArg_ParseTuple(args, \"O&:PyObj_FromPtr\", converter, &ob))\n        return NULL;\n    Py_INCREF(ob);\n    return ob;\n}\n\nstatic PyObject *\nMy_Py_INCREF(PyObject *self, PyObject *arg)\n{\n    Py_INCREF(arg); /* that's what this function is for */\n    Py_INCREF(arg); /* that for returning it */\n    return arg;\n}\n\nstatic PyObject *\nMy_Py_DECREF(PyObject *self, PyObject *arg)\n{\n    Py_DECREF(arg); /* that's what this function is for */\n    Py_INCREF(arg); /* that's for returning it */\n    return arg;\n}\n\n#ifdef CTYPES_UNICODE\n\nstatic char set_conversion_mode_doc[] =\n\"set_conversion_mode(encoding, errors) -> (previous-encoding, previous-errors)\\n\\\n\\n\\\nSet the encoding and error handling ctypes uses when converting\\n\\\nbetween unicode and strings.  Returns the previous values.\\n\";\n\nstatic PyObject *\nset_conversion_mode(PyObject *self, PyObject *args)\n{\n    char *coding, *mode, *errors, *encoding=NULL;\n    PyObject *result;\n\n    if (!PyArg_ParseTuple(args, \"zs:set_conversion_mode\", &coding, &mode))\n        return NULL;\n\n    result = Py_BuildValue(\"(zz)\", _ctypes_conversion_encoding,\n                           _ctypes_conversion_errors);\n    if (!result) {\n        return NULL;\n    }\n\n    if (coding) {\n        encoding = PyMem_Malloc(strlen(coding) + 1);\n        if (!encoding) {\n            Py_DECREF(result);\n            return PyErr_NoMemory();\n        }\n        strcpy(encoding, coding);\n    }\n\n    errors = PyMem_Malloc(strlen(mode) + 1);\n    if (!errors) {\n        Py_DECREF(result);\n        PyMem_Free(encoding);\n        return PyErr_NoMemory();\n    }\n    strcpy(errors, mode);\n\n    PyMem_Free(_ctypes_conversion_encoding);\n    _ctypes_conversion_encoding = encoding;\n\n    PyMem_Free(_ctypes_conversion_errors);\n    _ctypes_conversion_errors = errors;\n\n    return result;\n}\n#endif\n\nstatic PyObject *\nresize(PyObject *self, PyObject *args)\n{\n    CDataObject *obj;\n    StgDictObject *dict;\n    Py_ssize_t size;\n\n    if (!PyArg_ParseTuple(args,\n#if (PY_VERSION_HEX < 0x02050000)\n                          \"Oi:resize\",\n#else\n                          \"On:resize\",\n#endif\n                          &obj, &size))\n        return NULL;\n\n    dict = PyObject_stgdict((PyObject *)obj);\n    if (dict == NULL) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"excepted ctypes instance\");\n        return NULL;\n    }\n    if (size < dict->size) {\n        PyErr_Format(PyExc_ValueError,\n#if PY_VERSION_HEX < 0x02050000\n                     \"minimum size is %d\",\n#else\n                     \"minimum size is %zd\",\n#endif\n                     dict->size);\n        return NULL;\n    }\n    if (obj->b_needsfree == 0) {\n        PyErr_Format(PyExc_ValueError,\n                     \"Memory cannot be resized because this object doesn't own it\");\n        return NULL;\n    }\n    if (size <= sizeof(obj->b_value)) {\n        /* internal default buffer is large enough */\n        obj->b_size = size;\n        goto done;\n    }\n    if (!_CDataObject_HasExternalBuffer(obj)) {\n        /* We are currently using the objects default buffer, but it\n           isn't large enough any more. */\n        void *ptr = PyMem_Malloc(size);\n        if (ptr == NULL)\n            return PyErr_NoMemory();\n        memset(ptr, 0, size);\n        memmove(ptr, obj->b_ptr, obj->b_size);\n        obj->b_ptr = ptr;\n        obj->b_size = size;\n    } else {\n        void * ptr = PyMem_Realloc(obj->b_ptr, size);\n        if (ptr == NULL)\n            return PyErr_NoMemory();\n        obj->b_ptr = ptr;\n        obj->b_size = size;\n    }\n  done:\n    Py_INCREF(Py_None);\n    return Py_None;\n}\n\nstatic PyObject *\nunpickle(PyObject *self, PyObject *args)\n{\n    PyObject *typ;\n    PyObject *state;\n    PyObject *result;\n    PyObject *tmp;\n\n    if (!PyArg_ParseTuple(args, \"OO\", &typ, &state))\n        return NULL;\n    result = PyObject_CallMethod(typ, \"__new__\", \"O\", typ);\n    if (result == NULL)\n        return NULL;\n    tmp = PyObject_CallMethod(result, \"__setstate__\", \"O\", state);\n    if (tmp == NULL) {\n        Py_DECREF(result);\n        return NULL;\n    }\n    Py_DECREF(tmp);\n    return result;\n}\n\nstatic PyObject *\nPOINTER(PyObject *self, PyObject *cls)\n{\n    PyObject *result;\n    PyTypeObject *typ;\n    PyObject *key;\n    char *buf;\n\n    result = PyDict_GetItem(_ctypes_ptrtype_cache, cls);\n    if (result) {\n        Py_INCREF(result);\n        return result;\n    }\n    if (PyString_CheckExact(cls)) {\n        buf = PyMem_Malloc(strlen(PyString_AS_STRING(cls)) + 3 + 1);\n        if (buf == NULL)\n            return PyErr_NoMemory();\n        sprintf(buf, \"LP_%s\", PyString_AS_STRING(cls));\n        result = PyObject_CallFunction((PyObject *)Py_TYPE(&PyCPointer_Type),\n                                       \"s(O){}\",\n                                       buf,\n                                       &PyCPointer_Type);\n        PyMem_Free(buf);\n        if (result == NULL)\n            return result;\n        key = PyLong_FromVoidPtr(result);\n        if (key == NULL) {\n            Py_DECREF(result);\n            return NULL;\n        }\n    } else if (PyType_Check(cls)) {\n        typ = (PyTypeObject *)cls;\n        buf = PyMem_Malloc(strlen(typ->tp_name) + 3 + 1);\n        if (buf == NULL)\n            return PyErr_NoMemory();\n        sprintf(buf, \"LP_%s\", typ->tp_name);\n        result = PyObject_CallFunction((PyObject *)Py_TYPE(&PyCPointer_Type),\n                                       \"s(O){sO}\",\n                                       buf,\n                                       &PyCPointer_Type,\n                                       \"_type_\", cls);\n        PyMem_Free(buf);\n        if (result == NULL)\n            return result;\n        Py_INCREF(cls);\n        key = cls;\n    } else {\n        PyErr_SetString(PyExc_TypeError, \"must be a ctypes type\");\n        return NULL;\n    }\n    if (-1 == PyDict_SetItem(_ctypes_ptrtype_cache, key, result)) {\n        Py_DECREF(result);\n        Py_DECREF(key);\n        return NULL;\n    }\n    Py_DECREF(key);\n    return result;\n}\n\nstatic PyObject *\npointer(PyObject *self, PyObject *arg)\n{\n    PyObject *result;\n    PyObject *typ;\n\n    typ = PyDict_GetItem(_ctypes_ptrtype_cache, (PyObject *)Py_TYPE(arg));\n    if (typ)\n        return PyObject_CallFunctionObjArgs(typ, arg, NULL);\n    typ = POINTER(NULL, (PyObject *)Py_TYPE(arg));\n    if (typ == NULL)\n                    return NULL;\n    result = PyObject_CallFunctionObjArgs(typ, arg, NULL);\n    Py_DECREF(typ);\n    return result;\n}\n\nstatic PyObject *\nbuffer_info(PyObject *self, PyObject *arg)\n{\n    StgDictObject *dict = PyType_stgdict(arg);\n    PyObject *shape;\n    Py_ssize_t i;\n\n    if (dict == NULL)\n        dict = PyObject_stgdict(arg);\n    if (dict == NULL) {\n        PyErr_SetString(PyExc_TypeError,\n                        \"not a ctypes type or object\");\n        return NULL;\n    }\n    shape = PyTuple_New(dict->ndim);\n    if (shape == NULL)\n        return NULL;\n    for (i = 0; i < (int)dict->ndim; ++i)\n        PyTuple_SET_ITEM(shape, i, PyLong_FromSsize_t(dict->shape[i]));\n\n    if (PyErr_Occurred()) {\n        Py_DECREF(shape);\n        return NULL;\n    }\n    return Py_BuildValue(\"siN\", dict->format, dict->ndim, shape);\n}\n\nPyMethodDef _ctypes_module_methods[] = {\n    {\"get_errno\", get_errno, METH_NOARGS},\n    {\"set_errno\", set_errno, METH_VARARGS},\n    {\"POINTER\", POINTER, METH_O },\n    {\"pointer\", pointer, METH_O },\n    {\"_unpickle\", unpickle, METH_VARARGS },\n    {\"_buffer_info\", buffer_info, METH_O,\n     \"Return buffer interface information (for testing only)\"},\n    {\"resize\", resize, METH_VARARGS, \"Resize the memory buffer of a ctypes instance\"},\n#ifdef CTYPES_UNICODE\n    {\"set_conversion_mode\", set_conversion_mode, METH_VARARGS, set_conversion_mode_doc},\n#endif\n#ifdef MS_WIN32\n    {\"get_last_error\", get_last_error, METH_NOARGS},\n    {\"set_last_error\", set_last_error, METH_VARARGS},\n    {\"CopyComPointer\", copy_com_pointer, METH_VARARGS, copy_com_pointer_doc},\n    {\"FormatError\", format_error, METH_VARARGS, format_error_doc},\n    {\"LoadLibrary\", load_library, METH_VARARGS, load_library_doc},\n    {\"FreeLibrary\", free_library, METH_VARARGS, free_library_doc},\n    {\"call_commethod\", call_commethod, METH_VARARGS },\n    {\"_check_HRESULT\", check_hresult, METH_VARARGS},\n#else\n    {\"dlopen\", py_dl_open, METH_VARARGS,\n     \"dlopen(name, flag={RTLD_GLOBAL|RTLD_LOCAL}) open a shared library\"},\n    {\"dlclose\", py_dl_close, METH_VARARGS, \"dlclose a library\"},\n    {\"dlsym\", py_dl_sym, METH_VARARGS, \"find symbol in shared library\"},\n#endif\n    {\"alignment\", align_func, METH_O, alignment_doc},\n    {\"sizeof\", sizeof_func, METH_O, sizeof_doc},\n    {\"byref\", byref, METH_VARARGS, byref_doc},\n    {\"addressof\", addressof, METH_O, addressof_doc},\n    {\"call_function\", call_function, METH_VARARGS },\n    {\"call_cdeclfunction\", call_cdeclfunction, METH_VARARGS },\n    {\"PyObj_FromPtr\", My_PyObj_FromPtr, METH_VARARGS },\n    {\"Py_INCREF\", My_Py_INCREF, METH_O },\n    {\"Py_DECREF\", My_Py_DECREF, METH_O },\n    {NULL,      NULL}        /* Sentinel */\n};\n\n/*\n Local Variables:\n compile-command: \"cd .. && python setup.py -q build -g && python setup.py -q build install --home ~\"\n End:\n*/\n",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_ctypes/darwin/dlfcn.h": "/*\nCopyright (c) 2002 Jorge Acereda  <jacereda@users.sourceforge.net> &\n                   Peter O'Gorman <ogorman@users.sourceforge.net>\n                   \nPortions may be copyright others, see the AUTHORS file included with this\ndistribution.\n\nMaintained by Peter O'Gorman <ogorman@users.sourceforge.net>\n\nBug Reports and other queries should go to <ogorman@users.sourceforge.net>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n#ifndef _DLFCN_H_\n#define _DLFCN_H_\n\n#include <AvailabilityMacros.h>\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n\n/*\n * Structure filled in by dladdr().\n */\n\ntypedef struct dl_info {\n        const char      *dli_fname;     /* Pathname of shared object */\n        void            *dli_fbase;     /* Base address of shared object */\n        const char      *dli_sname;     /* Name of nearest symbol */\n        void            *dli_saddr;     /* Address of nearest symbol */\n} Dl_info;\n\n\n#if MAC_OS_X_VERSION_MIN_REQUIRED <= MAC_OS_X_VERSION_10_2\n#warning CTYPES_DARWIN_DLFCN\n#define CTYPES_DARWIN_DLFCN\nextern void * (*ctypes_dlopen)(const char *path, int mode);\nextern void * (*ctypes_dlsym)(void * handle, const char *symbol);\nextern const char * (*ctypes_dlerror)(void);\nextern int (*ctypes_dlclose)(void * handle);\nextern int (*ctypes_dladdr)(const void *, Dl_info *);\n#else\nextern void * dlopen(const char *path, int mode);\nextern void * dlsym(void * handle, const char *symbol);\nextern const char * dlerror(void);\nextern int dlclose(void * handle);\nextern int dladdr(const void *, Dl_info *);\n#endif\n\n#define RTLD_LAZY\t0x1\n#define RTLD_NOW\t0x2\n#define RTLD_LOCAL\t0x4\n#define RTLD_GLOBAL\t0x8\n#define RTLD_NOLOAD\t0x10\n#define RTLD_NODELETE\t0x80\n\n/* These are from the Mac OS X 10.4 headers */\n#define RTLD_NEXT       ((void *) -1)   /* Search subsequent objects. */\n#define RTLD_DEFAULT    ((void *) -2)   /* Use default search algorithm. */\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif /* _DLFCN_H_ */\n",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_ctypes/darwin/dlfcn_simple.c": "/*\nCopyright (c) 2002 Peter O'Gorman <ogorman@users.sourceforge.net>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n\n/* Just to prove that it isn't that hard to add Mac calls to your code :)\n   This works with pretty much everything, including kde3 xemacs and the gimp,\n   I'd guess that it'd work in at least 95% of cases, use this as your starting\n   point, rather than the mess that is dlfcn.c, assuming that your code does not\n   require ref counting or symbol lookups in dependent libraries\n*/\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <stdarg.h>\n#include <limits.h>\n#include <mach-o/dyld.h>\n#include <AvailabilityMacros.h>\n#include \"dlfcn.h\"\n\n#ifdef CTYPES_DARWIN_DLFCN\n\n#define ERR_STR_LEN 256\n\n#ifndef MAC_OS_X_VERSION_10_3\n#define MAC_OS_X_VERSION_10_3 1030\n#endif\n\n#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_3\n#define DARWIN_HAS_DLOPEN\nextern void * dlopen(const char *path, int mode) __attribute__((weak_import));\nextern void * dlsym(void * handle, const char *symbol) __attribute__((weak_import));\nextern const char * dlerror(void) __attribute__((weak_import));\nextern int dlclose(void * handle) __attribute__((weak_import));\nextern int dladdr(const void *, Dl_info *) __attribute__((weak_import));\n#endif /* MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_3 */\n\n#ifndef DARWIN_HAS_DLOPEN\n#define dlopen darwin_dlopen\n#define dlsym darwin_dlsym\n#define dlerror darwin_dlerror\n#define dlclose darwin_dlclose\n#define dladdr darwin_dladdr\n#endif\n\nvoid * (*ctypes_dlopen)(const char *path, int mode);\nvoid * (*ctypes_dlsym)(void * handle, const char *symbol);\nconst char * (*ctypes_dlerror)(void);\nint (*ctypes_dlclose)(void * handle);\nint (*ctypes_dladdr)(const void *, Dl_info *);\n\n#if MAC_OS_X_VERSION_MIN_REQUIRED < MAC_OS_X_VERSION_10_3\n/* Mac OS X 10.3+ has dlopen, so strip all this dead code to avoid warnings */\n\nstatic void *dlsymIntern(void *handle, const char *symbol);\n\nstatic const char *error(int setget, const char *str, ...);\n\n/* Set and get the error string for use by dlerror */\nstatic const char *error(int setget, const char *str, ...)\n{\n    static char errstr[ERR_STR_LEN];\n    static int err_filled = 0;\n    const char *retval;\n    va_list arg;\n    if (setget == 0)\n    {\n        va_start(arg, str);\n        strncpy(errstr, \"dlcompat: \", ERR_STR_LEN);\n        vsnprintf(errstr + 10, ERR_STR_LEN - 10, str, arg);\n        va_end(arg);\n        err_filled = 1;\n        retval = NULL;\n    }\n    else\n    {\n        if (!err_filled)\n            retval = NULL;\n        else\n            retval = errstr;\n        err_filled = 0;\n    }\n    return retval;\n}\n\n/* darwin_dlopen */\nstatic void *darwin_dlopen(const char *path, int mode)\n{\n    void *module = 0;\n    NSObjectFileImage ofi = 0;\n    NSObjectFileImageReturnCode ofirc;\n\n    /* If we got no path, the app wants the global namespace, use -1 as the marker\n       in this case */\n    if (!path)\n        return (void *)-1;\n\n    /* Create the object file image, works for things linked with the -bundle arg to ld */\n    ofirc = NSCreateObjectFileImageFromFile(path, &ofi);\n    switch (ofirc)\n    {\n        case NSObjectFileImageSuccess:\n            /* It was okay, so use NSLinkModule to link in the image */\n            module = NSLinkModule(ofi, path,\n                                                      NSLINKMODULE_OPTION_RETURN_ON_ERROR\n                                                      | (mode & RTLD_GLOBAL) ? 0 : NSLINKMODULE_OPTION_PRIVATE\n                                                      | (mode & RTLD_LAZY) ? 0 : NSLINKMODULE_OPTION_BINDNOW);\n            NSDestroyObjectFileImage(ofi);\n            break;\n        case NSObjectFileImageInappropriateFile:\n            /* It may have been a dynamic library rather than a bundle, try to load it */\n            module = (void *)NSAddImage(path, NSADDIMAGE_OPTION_RETURN_ON_ERROR);\n            break;\n        default:\n            /* God knows what we got */\n            error(0, \"Can not open \\\"%s\\\"\", path);\n            return 0;\n    }\n    if (!module)\n        error(0, \"Can not open \\\"%s\\\"\", path);\n    return module;\n\n}\n\n/* dlsymIntern is used by dlsym to find the symbol */\nstatic void *dlsymIntern(void *handle, const char *symbol)\n{\n    NSSymbol nssym = 0;\n    /* If the handle is -1, if is the app global context */\n    if (handle == (void *)-1)\n    {\n        /* Global context, use NSLookupAndBindSymbol */\n        if (NSIsSymbolNameDefined(symbol))\n        {\n            nssym = NSLookupAndBindSymbol(symbol);\n        }\n\n    }\n    /* Now see if the handle is a struch mach_header* or not, use NSLookupSymbol in image\n       for libraries, and NSLookupSymbolInModule for bundles */\n    else\n    {\n        /* Check for both possible magic numbers depending on x86/ppc byte order */\n        if ((((struct mach_header *)handle)->magic == MH_MAGIC) ||\n            (((struct mach_header *)handle)->magic == MH_CIGAM))\n        {\n            if (NSIsSymbolNameDefinedInImage((struct mach_header *)handle, symbol))\n            {\n                nssym = NSLookupSymbolInImage((struct mach_header *)handle,\n                                                                          symbol,\n                                                                          NSLOOKUPSYMBOLINIMAGE_OPTION_BIND\n                                                                          | NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR);\n            }\n\n        }\n        else\n        {\n            nssym = NSLookupSymbolInModule(handle, symbol);\n        }\n    }\n    if (!nssym)\n    {\n        error(0, \"Symbol \\\"%s\\\" Not found\", symbol);\n        return NULL;\n    }\n    return NSAddressOfSymbol(nssym);\n}\n\nstatic const char *darwin_dlerror(void)\n{\n    return error(1, (char *)NULL);\n}\n\nstatic int darwin_dlclose(void *handle)\n{\n    if ((((struct mach_header *)handle)->magic == MH_MAGIC) ||\n        (((struct mach_header *)handle)->magic == MH_CIGAM))\n    {\n        error(0, \"Can't remove dynamic libraries on darwin\");\n        return 0;\n    }\n    if (!NSUnLinkModule(handle, 0))\n    {\n        error(0, \"unable to unlink module %s\", NSNameOfModule(handle));\n        return 1;\n    }\n    return 0;\n}\n\n\n/* dlsym, prepend the underscore and call dlsymIntern */\nstatic void *darwin_dlsym(void *handle, const char *symbol)\n{\n    static char undersym[257];          /* Saves calls to malloc(3) */\n    int sym_len = strlen(symbol);\n    void *value = NULL;\n    char *malloc_sym = NULL;\n\n    if (sym_len < 256)\n    {\n        snprintf(undersym, 256, \"_%s\", symbol);\n        value = dlsymIntern(handle, undersym);\n    }\n    else\n    {\n        malloc_sym = malloc(sym_len + 2);\n        if (malloc_sym)\n        {\n            sprintf(malloc_sym, \"_%s\", symbol);\n            value = dlsymIntern(handle, malloc_sym);\n            free(malloc_sym);\n        }\n        else\n        {\n            error(0, \"Unable to allocate memory\");\n        }\n    }\n    return value;\n}\n\nstatic int darwin_dladdr(const void *handle, Dl_info *info) {\n    return 0;\n}\n#endif /* MAC_OS_X_VERSION_MIN_REQUIRED < MAC_OS_X_VERSION_10_3 */\n\n#if __GNUC__ < 4\n#pragma CALL_ON_LOAD ctypes_dlfcn_init\n#else\nstatic void __attribute__ ((constructor)) ctypes_dlfcn_init(void);\nstatic\n#endif\nvoid ctypes_dlfcn_init(void) {\n    if (dlopen != NULL) {\n        ctypes_dlsym = dlsym;\n        ctypes_dlopen = dlopen;\n        ctypes_dlerror = dlerror;\n        ctypes_dlclose = dlclose;\n        ctypes_dladdr = dladdr;\n    } else {\n#if MAC_OS_X_VERSION_MIN_REQUIRED < MAC_OS_X_VERSION_10_3\n        ctypes_dlsym = darwin_dlsym;\n        ctypes_dlopen = darwin_dlopen;\n        ctypes_dlerror = darwin_dlerror;\n        ctypes_dlclose = darwin_dlclose;\n        ctypes_dladdr = darwin_dladdr;\n#endif /* MAC_OS_X_VERSION_MIN_REQUIRED < MAC_OS_X_VERSION_10_3 */\n    }\n}\n\n#endif /* CTYPES_DARWIN_DLFCN */\n",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_ctypes/libffi/ltmain.sh": "#! /bin/sh\n\n# libtool (GNU libtool) 2.4.2.418\n# Provide generalized library-building support services.\n# Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n\n# Copyright (C) 1996-2013 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\nPROGRAM=libtool\nPACKAGE=libtool\nVERSION=2.4.2.418\npackage_revision=2.4.2.418\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# Run './libtool --help' for help with using this script from the\n# command line.\n\n\n## ------------------------------- ##\n## User overridable command paths. ##\n## ------------------------------- ##\n\n# After configure completes, it has a better idea of some of the\n# shell tools we need than the defaults used by the functions shared\n# with bootstrap, so set those here where they can still be over-\n# ridden by the user, but otherwise take precedence.\n\n: ${AUTOCONF=\"autoconf\"}\n: ${AUTOMAKE=\"automake\"}\n\n\n## -------------------------- ##\n## Source external libraries. ##\n## -------------------------- ##\n\n# Much of our low-level functionality needs to be sourced from external\n# libraries, which are installed to $pkgauxdir.\n\n# Set a version string for this script.\nscriptversion=2013-08-23.20; # UTC\n\n# General shell script boiler plate, and helper functions.\n# Written by Gary V. Vaughan, 2004\n\n# Copyright (C) 2004-2013 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n\n# As a special exception to the GNU General Public License, if you distribute\n# this file as part of a program or library that is built using GNU Libtool,\n# you may include this file under the same distribution terms that you use\n# for the rest of that program.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNES FOR A PARTICULAR PURPOSE. See the GNU\n# General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program. If not, see <http://www.gnu.org/licenses/>.\n\n# Please report bugs or propose patches to gary@gnu.org.\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# Evaluate this file near the top of your script to gain access to\n# the functions and variables defined here:\n#\n#   . `echo \"$0\" | ${SED-sed} 's|[^/]*$||'`/build-aux/funclib.sh\n#\n# If you need to override any of the default environment variable\n# settings, do that before evaluating this file.\n\n\n## -------------------- ##\n## Shell normalisation. ##\n## -------------------- ##\n\n# Some shells need a little help to be as Bourne compatible as possible.\n# Before doing anything else, make sure all that help has been provided!\n\nDUALCASE=1; export DUALCASE # for MKS sh\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in *posix*) set -o posix ;; esac\nfi\n\n# NLS nuisances: We save the old values in case they are required later.\n_G_user_locale=\n_G_safe_locale=\nfor _G_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\ndo\n  eval \"if test set = \\\"\\${$_G_var+set}\\\"; then\n          save_$_G_var=\\$$_G_var\n          $_G_var=C\n\t  export $_G_var\n\t  _G_user_locale=\\\"$_G_var=\\\\\\$save_\\$_G_var; \\$_G_user_locale\\\"\n\t  _G_safe_locale=\\\"$_G_var=C; \\$_G_safe_locale\\\"\n\tfi\"\ndone\n\n# CDPATH.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n# Make sure IFS has a sensible default\nsp=' '\nnl='\n'\nIFS=\"$sp\t$nl\"\n\n# There are still modern systems that have problems with 'echo' mis-\n# handling backslashes, among others, so make sure $bs_echo is set to a\n# command that correctly interprets backslashes.\n# (this code from Autoconf 2.68)\n\n# Printing a long string crashes Solaris 7 /usr/bin/printf.\nbs_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nbs_echo=$bs_echo$bs_echo$bs_echo$bs_echo$bs_echo\nbs_echo=$bs_echo$bs_echo$bs_echo$bs_echo$bs_echo$bs_echo\n# Prefer a ksh shell builtin over an external printf program on Solaris,\n# but without wasting forks for bash or zsh.\nif test -z \"$BASH_VERSION$ZSH_VERSION\" \\\n    && (test \"X`print -r -- $bs_echo`\" = \"X$bs_echo\") 2>/dev/null; then\n  bs_echo='print -r --'\n  bs_echo_n='print -rn --'\nelif (test \"X`printf %s $bs_echo`\" = \"X$bs_echo\") 2>/dev/null; then\n  bs_echo='printf %s\\n'\n  bs_echo_n='printf %s'\nelse\n  if test \"X`(/usr/ucb/echo -n -n $bs_echo) 2>/dev/null`\" = \"X-n $bs_echo\"; then\n    bs_echo_body='eval /usr/ucb/echo -n \"$1$nl\"'\n    bs_echo_n='/usr/ucb/echo -n'\n  else\n    bs_echo_body='eval expr \"X$1\" : \"X\\\\(.*\\\\)\"'\n    bs_echo_n_body='eval\n      arg=$1;\n      case $arg in #(\n      *\"$nl\"*)\n\texpr \"X$arg\" : \"X\\\\(.*\\\\)$nl\";\n\targ=`expr \"X$arg\" : \".*$nl\\\\(.*\\\\)\"`;;\n      esac;\n      expr \"X$arg\" : \"X\\\\(.*\\\\)\" | tr -d \"$nl\"\n    '\n    export bs_echo_n_body\n    bs_echo_n='sh -c $bs_echo_n_body bs_echo'\n  fi\n  export bs_echo_body\n  bs_echo='sh -c $bs_echo_body bs_echo'\nfi\n\n\n## ------------------------------- ##\n## User overridable command paths. ##\n## ------------------------------- ##\n\n# All uppercase variable names are used for environment variables.  These\n# variables can be overridden by the user before calling a script that\n# uses them if a suitable command of that name is not already available\n# in the command search PATH.\n\n: ${CP=\"cp -f\"}\n: ${ECHO=\"$bs_echo\"}\n: ${EGREP=\"grep -E\"}\n: ${FGREP=\"grep -F\"}\n: ${GREP=\"grep\"}\n: ${LN_S=\"ln -s\"}\n: ${MAKE=\"make\"}\n: ${MKDIR=\"mkdir\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n: ${SED=\"sed\"}\n: ${SHELL=\"${CONFIG_SHELL-/bin/sh}\"}\n\n\n## -------------------- ##\n## Useful sed snippets. ##\n## -------------------- ##\n\nsed_dirname='s|/[^/]*$||'\nsed_basename='s|^.*/||'\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='s|\\([`\"$\\\\]\\)|\\\\\\1|g'\n\n# Same as above, but do not quote variable references.\nsed_double_quote_subst='s/\\([\"`\\\\]\\)/\\\\\\1/g'\n\n# Sed substitution that turns a string into a regex matching for the\n# string literally.\nsed_make_literal_regex='s|[].[^$\\\\*\\/]|\\\\&|g'\n\n# Sed substitution that converts a w32 file name or path\n# that contains forward slashes, into one that contains\n# (escaped) backslashes.  A very naive implementation.\nsed_naive_backslashify='s|\\\\\\\\*|\\\\|g;s|/|\\\\|g;s|\\\\|\\\\\\\\|g'\n\n# Re-'\\' parameter expansions in output of sed_double_quote_subst that\n# were '\\'-ed in input to the same.  If an odd number of '\\' preceded a\n# '$' in input to sed_double_quote_subst, that '$' was protected from\n# expansion.  Since each input '\\' is now two '\\'s, look for any number\n# of runs of four '\\'s followed by two '\\'s and then a '$'.  '\\' that '$'.\n_G_bs='\\\\'\n_G_bs2='\\\\\\\\'\n_G_bs4='\\\\\\\\\\\\\\\\'\n_G_dollar='\\$'\nsed_double_backslash=\"\\\n  s/$_G_bs4/&\\\\\n/g\n  s/^$_G_bs2$_G_dollar/$_G_bs&/\n  s/\\\\([^$_G_bs]\\\\)$_G_bs2$_G_dollar/\\\\1$_G_bs2$_G_bs$_G_dollar/g\n  s/\\n//g\"\n\n\n## ----------------- ##\n## Global variables. ##\n## ----------------- ##\n\n# Except for the global variables explicitly listed below, the following\n# functions in the '^func_' namespace, and the '^require_' namespace\n# variables initialised in the 'Resource management' section, sourcing\n# this file will not pollute your global namespace with anything\n# else. There's no portable way to scope variables in Bourne shell\n# though, so actually running these functions will sometimes place\n# results into a variable named after the function, and often use\n# temporary variables in the '^_G_' namespace. If you are careful to\n# avoid using those namespaces casually in your sourcing script, things\n# should continue to work as you expect. And, of course, you can freely\n# overwrite any of the functions or variables defined here before\n# calling anything to customize them.\n\nEXIT_SUCCESS=0\nEXIT_FAILURE=1\nEXIT_MISMATCH=63  # $? = 63 is used to indicate version mismatch to missing.\nEXIT_SKIP=77\t  # $? = 77 is used to indicate a skipped test to automake.\n\n# Allow overriding, eg assuming that you follow the convention of\n# putting '$debug_cmd' at the start of all your functions, you can get\n# bash to show function call trace with:\n#\n#    debug_cmd='eval echo \"${FUNCNAME[0]} $*\" >&2' bash your-script-name\ndebug_cmd=${debug_cmd-\":\"}\nexit_cmd=:\n\n# By convention, finish your script with:\n#\n#    exit $exit_status\n#\n# so that you can set exit_status to non-zero if you want to indicate\n# something went wrong during execution without actually bailing out at\n# the point of failure.\nexit_status=$EXIT_SUCCESS\n\n# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh\n# is ksh but when the shell is invoked as \"sh\" and the current value of\n# the _XPG environment variable is not equal to 1 (one), the special\n# positional parameter $0, within a function call, is the name of the\n# function.\nprogpath=$0\n\n# The name of this program.\nprogname=`$bs_echo \"$progpath\" |$SED \"$sed_basename\"`\n\n# Make sure we have an absolute progpath for reexecution:\ncase $progpath in\n  [\\\\/]*|[A-Za-z]:\\\\*) ;;\n  *[\\\\/]*)\n     progdir=`$bs_echo \"$progpath\" |$SED \"$sed_dirname\"`\n     progdir=`cd \"$progdir\" && pwd`\n     progpath=$progdir/$progname\n     ;;\n  *)\n     _G_IFS=$IFS\n     IFS=${PATH_SEPARATOR-:}\n     for progdir in $PATH; do\n       IFS=$_G_IFS\n       test -x \"$progdir/$progname\" && break\n     done\n     IFS=$_G_IFS\n     test -n \"$progdir\" || progdir=`pwd`\n     progpath=$progdir/$progname\n     ;;\nesac\n\n\n## ----------------- ##\n## Standard options. ##\n## ----------------- ##\n\n# The following options affect the operation of the functions defined\n# below, and should be set appropriately depending on run-time para-\n# meters passed on the command line.\n\nopt_dry_run=false\nopt_quiet=false\nopt_verbose=false\n\n# Categories 'all' and 'none' are always available.  Append any others\n# you will pass as the first argument to func_warning from your own\n# code.\nwarning_categories=\n\n# By default, display warnings according to 'opt_warning_types'.  Set\n# 'warning_func'  to ':' to elide all warnings, or func_fatal_error to\n# treat the next displayed warning as a fatal error.\nwarning_func=func_warn_and_continue\n\n# Set to 'all' to display all warnings, 'none' to suppress all\n# warnings, or a space delimited list of some subset of\n# 'warning_categories' to display only the listed warnings.\nopt_warning_types=all\n\n\n## -------------------- ##\n## Resource management. ##\n## -------------------- ##\n\n# This section contains definitions for functions that each ensure a\n# particular resource (a file, or a non-empty configuration variable for\n# example) is available, and if appropriate to extract default values\n# from pertinent package files. Call them using their associated\n# 'require_*' variable to ensure that they are executed, at most, once.\n#\n# It's entirely deliberate that calling these functions can set\n# variables that don't obey the namespace limitations obeyed by the rest\n# of this file, in order that that they be as useful as possible to\n# callers.\n\n\n# require_term_colors\n# -------------------\n# Allow display of bold text on terminals that support it.\nrequire_term_colors=func_require_term_colors\nfunc_require_term_colors ()\n{\n    $debug_cmd\n\n    test -t 1 && {\n      # COLORTERM and USE_ANSI_COLORS environment variables take\n      # precedence, because most terminfo databases neglect to describe\n      # whether color sequences are supported.\n      test -n \"${COLORTERM+set}\" && : ${USE_ANSI_COLORS=\"1\"}\n\n      if test 1 = \"$USE_ANSI_COLORS\"; then\n        # Standard ANSI escape sequences\n        tc_reset='\u001b[0m'\n        tc_bold='\u001b[1m';   tc_standout='\u001b[7m'\n        tc_red='\u001b[31m';   tc_green='\u001b[32m'\n        tc_blue='\u001b[34m';  tc_cyan='\u001b[36m'\n      else\n        # Otherwise trust the terminfo database after all.\n        test -n \"`tput sgr0 2>/dev/null`\" && {\n          tc_reset=`tput sgr0`\n          test -n \"`tput bold 2>/dev/null`\" && tc_bold=`tput bold`\n          tc_standout=$tc_bold\n          test -n \"`tput smso 2>/dev/null`\" && tc_standout=`tput smso`\n          test -n \"`tput setaf 1 2>/dev/null`\" && tc_red=`tput setaf 1`\n          test -n \"`tput setaf 2 2>/dev/null`\" && tc_green=`tput setaf 2`\n          test -n \"`tput setaf 4 2>/dev/null`\" && tc_blue=`tput setaf 4`\n          test -n \"`tput setaf 5 2>/dev/null`\" && tc_cyan=`tput setaf 5`\n        }\n      fi\n    }\n\n    require_term_colors=:\n}\n\n\n## ----------------- ##\n## Function library. ##\n## ----------------- ##\n\n# This section contains a variety of useful functions to call in your\n# scripts. Take note of the portable wrappers for features provided by\n# some modern shells, which will fall back to slower equivalents on\n# less featureful shells.\n\n\n# func_append VAR VALUE\n# ---------------------\n# Append VALUE onto the existing contents of VAR.\n\n  # We should try to minimise forks, especially on Windows where they are\n  # unreasonably slow, so skip the feature probes when bash or zsh are\n  # being used:\n  if test set = \"${BASH_VERSION+set}${ZSH_VERSION+set}\"; then\n    : ${_G_HAVE_ARITH_OP=\"yes\"}\n    : ${_G_HAVE_XSI_OPS=\"yes\"}\n    # The += operator was introduced in bash 3.1\n    case $BASH_VERSION in\n      [12].* | 3.0 | 3.0*) ;;\n      *)\n        : ${_G_HAVE_PLUSEQ_OP=\"yes\"}\n        ;;\n    esac\n  fi\n\n  # _G_HAVE_PLUSEQ_OP\n  # Can be empty, in which case the shell is probed, \"yes\" if += is\n  # useable or anything else if it does not work.\n  test -z \"$_G_HAVE_PLUSEQ_OP\" \\\n    && (eval 'x=a; x+=\" b\"; test \"a b\" = \"$x\"') 2>/dev/null \\\n    && _G_HAVE_PLUSEQ_OP=yes\n\nif test yes = \"$_G_HAVE_PLUSEQ_OP\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_append ()\n  {\n    $debug_cmd\n\n    eval \"$1+=\\$2\"\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_append ()\n  {\n    $debug_cmd\n\n    eval \"$1=\\$$1\\$2\"\n  }\nfi\n\n\n# func_append_quoted VAR VALUE\n# ----------------------------\n# Quote VALUE and append to the end of shell variable VAR, separated\n# by a space.\nif test yes = \"$_G_HAVE_PLUSEQ_OP\"; then\n  eval 'func_append_quoted ()\n  {\n    $debug_cmd\n\n    func_quote_for_eval \"$2\"\n    eval \"$1+=\\\\ \\$func_quote_for_eval_result\"\n  }'\nelse\n  func_append_quoted ()\n  {\n    $debug_cmd\n\n    func_quote_for_eval \"$2\"\n    eval \"$1=\\$$1\\\\ \\$func_quote_for_eval_result\"\n  }\nfi\n\n\n# func_append_uniq VAR VALUE\n# --------------------------\n# Append unique VALUE onto the existing contents of VAR, assuming\n# entries are delimited by the first character of VALUE.  For example:\n#\n#   func_append_uniq options \" --another-option option-argument\"\n#\n# will only append to $options if \" --another-option option-argument \"\n# is not already present somewhere in $options already (note spaces at\n# each end implied by leading space in second argument).\nfunc_append_uniq ()\n{\n    $debug_cmd\n\n    eval _G_current_value='`$bs_echo $'$1'`'\n    _G_delim=`expr \"$2\" : '\\(.\\)'`\n\n    case $_G_delim$_G_current_value$_G_delim in\n      *\"$2$_G_delim\"*) ;;\n      *) func_append \"$@\" ;;\n    esac\n}\n\n\n# func_arith TERM...\n# ------------------\n# Set func_arith_result to the result of evaluating TERMs.\n  test -z \"$_G_HAVE_ARITH_OP\" \\\n    && (eval 'test 2 = $(( 1 + 1 ))') 2>/dev/null \\\n    && _G_HAVE_ARITH_OP=yes\n\nif test yes = \"$_G_HAVE_ARITH_OP\"; then\n  eval 'func_arith ()\n  {\n    $debug_cmd\n\n    func_arith_result=$(( $* ))\n  }'\nelse\n  func_arith ()\n  {\n    $debug_cmd\n\n    func_arith_result=`expr \"$@\"`\n  }\nfi\n\n\n# func_basename FILE\n# ------------------\n# Set func_basename_result to FILE with everything up to and including\n# the last / stripped.\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  # If this shell supports suffix pattern removal, then use it to avoid\n  # forking. Hide the definitions single quotes in case the shell chokes\n  # on unsupported syntax...\n  _b='func_basename_result=${1##*/}'\n  _d='case $1 in\n        */*) func_dirname_result=${1%/*}$2 ;;\n        *  ) func_dirname_result=$3        ;;\n      esac'\n\nelse\n  # ...otherwise fall back to using sed.\n  _b='func_basename_result=`$ECHO \"$1\" |$SED \"$sed_basename\"`'\n  _d='func_dirname_result=`$ECHO \"$1\"  |$SED \"$sed_dirname\"`\n      if test \"X$func_dirname_result\" = \"X$1\"; then\n        func_dirname_result=$3\n      else\n        func_append func_dirname_result \"$2\"\n      fi'\nfi\n\neval 'func_basename ()\n{\n    $debug_cmd\n\n    '\"$_b\"'\n}'\n\n\n# func_dirname FILE APPEND NONDIR_REPLACEMENT\n# -------------------------------------------\n# Compute the dirname of FILE.  If nonempty, add APPEND to the result,\n# otherwise set result to NONDIR_REPLACEMENT.\neval 'func_dirname ()\n{\n    $debug_cmd\n\n    '\"$_d\"'\n}'\n\n\n# func_dirname_and_basename FILE APPEND NONDIR_REPLACEMENT\n# --------------------------------------------------------\n# Perform func_basename and func_dirname in a single function\n# call:\n#   dirname:  Compute the dirname of FILE.  If nonempty,\n#             add APPEND to the result, otherwise set result\n#             to NONDIR_REPLACEMENT.\n#             value returned in \"$func_dirname_result\"\n#   basename: Compute filename of FILE.\n#             value retuned in \"$func_basename_result\"\n# For efficiency, we do not delegate to the functions above but instead\n# duplicate the functionality here.\neval 'func_dirname_and_basename ()\n{\n    $debug_cmd\n\n    '\"$_b\"'\n    '\"$_d\"'\n}'\n\n\n# func_echo ARG...\n# ----------------\n# Echo program name prefixed message.\nfunc_echo ()\n{\n    $debug_cmd\n\n    _G_message=$*\n\n    func_echo_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_IFS\n      $bs_echo \"$progname: $_G_line\"\n    done\n    IFS=$func_echo_IFS\n}\n\n\n# func_echo_all ARG...\n# --------------------\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\n\n# func_echo_infix_1 INFIX ARG...\n# ------------------------------\n# Echo program name, followed by INFIX on the first line, with any\n# additional lines not showing INFIX.\nfunc_echo_infix_1 ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    _G_infix=$1; shift\n    _G_indent=$_G_infix\n    _G_prefix=\"$progname: $_G_infix: \"\n    _G_message=$*\n\n    # Strip color escape sequences before counting printable length\n    for _G_tc in \"$tc_reset\" \"$tc_bold\" \"$tc_standout\" \"$tc_red\" \"$tc_green\" \"$tc_blue\" \"$tc_cyan\"\n    do\n      test -n \"$_G_tc\" && {\n        _G_esc_tc=`$bs_echo \"$_G_tc\" | sed \"$sed_make_literal_regex\"`\n        _G_indent=`$bs_echo \"$_G_indent\" | sed \"s|$_G_esc_tc||g\"`\n      }\n    done\n    _G_indent=\"$progname: \"`echo \"$_G_indent\" | sed 's|.| |g'`\"  \" ## exclude from sc_prohibit_nested_quotes\n\n    func_echo_infix_1_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_infix_1_IFS\n      $bs_echo \"$_G_prefix$tc_bold$_G_line$tc_reset\" >&2\n      _G_prefix=$_G_indent\n    done\n    IFS=$func_echo_infix_1_IFS\n}\n\n\n# func_error ARG...\n# -----------------\n# Echo program name prefixed message to standard error.\nfunc_error ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    func_echo_infix_1 \"  $tc_standout${tc_red}error$tc_reset\" \"$*\" >&2\n}\n\n\n# func_fatal_error ARG...\n# -----------------------\n# Echo program name prefixed message to standard error, and exit.\nfunc_fatal_error ()\n{\n    $debug_cmd\n\n    func_error \"$*\"\n    exit $EXIT_FAILURE\n}\n\n\n# func_grep EXPRESSION FILENAME\n# -----------------------------\n# Check whether EXPRESSION matches any line of FILENAME, without output.\nfunc_grep ()\n{\n    $debug_cmd\n\n    $GREP \"$1\" \"$2\" >/dev/null 2>&1\n}\n\n\n# func_len STRING\n# ---------------\n# Set func_len_result to the length of STRING. STRING may not\n# start with a hyphen.\n  test -z \"$_G_HAVE_XSI_OPS\" \\\n    && (eval 'x=a/b/c;\n      test 5aa/bb/cc = \"${#x}${x%%/*}${x%/*}${x#*/}${x##*/}\"') 2>/dev/null \\\n    && _G_HAVE_XSI_OPS=yes\n\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_len ()\n  {\n    $debug_cmd\n\n    func_len_result=${#1}\n  }'\nelse\n  func_len ()\n  {\n    $debug_cmd\n\n    func_len_result=`expr \"$1\" : \".*\" 2>/dev/null || echo $max_cmd_len`\n  }\nfi\n\n\n# func_mkdir_p DIRECTORY-PATH\n# ---------------------------\n# Make sure the entire path to DIRECTORY-PATH is available.\nfunc_mkdir_p ()\n{\n    $debug_cmd\n\n    _G_directory_path=$1\n    _G_dir_list=\n\n    if test -n \"$_G_directory_path\" && test : != \"$opt_dry_run\"; then\n\n      # Protect directory names starting with '-'\n      case $_G_directory_path in\n        -*) _G_directory_path=./$_G_directory_path ;;\n      esac\n\n      # While some portion of DIR does not yet exist...\n      while test ! -d \"$_G_directory_path\"; do\n        # ...make a list in topmost first order.  Use a colon delimited\n\t# list incase some portion of path contains whitespace.\n        _G_dir_list=$_G_directory_path:$_G_dir_list\n\n        # If the last portion added has no slash in it, the list is done\n        case $_G_directory_path in */*) ;; *) break ;; esac\n\n        # ...otherwise throw away the child directory and loop\n        _G_directory_path=`$ECHO \"$_G_directory_path\" | $SED -e \"$sed_dirname\"`\n      done\n      _G_dir_list=`$ECHO \"$_G_dir_list\" | $SED 's|:*$||'`\n\n      func_mkdir_p_IFS=$IFS; IFS=:\n      for _G_dir in $_G_dir_list; do\n\tIFS=$func_mkdir_p_IFS\n        # mkdir can fail with a 'File exist' error if two processes\n        # try to create one of the directories concurrently.  Don't\n        # stop in that case!\n        $MKDIR \"$_G_dir\" 2>/dev/null || :\n      done\n      IFS=$func_mkdir_p_IFS\n\n      # Bail out if we (or some other process) failed to create a directory.\n      test -d \"$_G_directory_path\" || \\\n        func_fatal_error \"Failed to create '$1'\"\n    fi\n}\n\n\n# func_mktempdir [BASENAME]\n# -------------------------\n# Make a temporary directory that won't clash with other running\n# libtool processes, and avoids race conditions if possible.  If\n# given, BASENAME is the basename for that directory.\nfunc_mktempdir ()\n{\n    $debug_cmd\n\n    _G_template=${TMPDIR-/tmp}/${1-$progname}\n\n    if test : = \"$opt_dry_run\"; then\n      # Return a directory name, but don't create it in dry-run mode\n      _G_tmpdir=$_G_template-$$\n    else\n\n      # If mktemp works, use that first and foremost\n      _G_tmpdir=`mktemp -d \"$_G_template-XXXXXXXX\" 2>/dev/null`\n\n      if test ! -d \"$_G_tmpdir\"; then\n        # Failing that, at least try and use $RANDOM to avoid a race\n        _G_tmpdir=$_G_template-${RANDOM-0}$$\n\n        func_mktempdir_umask=`umask`\n        umask 0077\n        $MKDIR \"$_G_tmpdir\"\n        umask $func_mktempdir_umask\n      fi\n\n      # If we're not in dry-run mode, bomb out on failure\n      test -d \"$_G_tmpdir\" || \\\n        func_fatal_error \"cannot create temporary directory '$_G_tmpdir'\"\n    fi\n\n    $ECHO \"$_G_tmpdir\"\n}\n\n\n# func_normal_abspath PATH\n# ------------------------\n# Remove doubled-up and trailing slashes, \".\" path components,\n# and cancel out any \"..\" path components in PATH after making\n# it an absolute path.\nfunc_normal_abspath ()\n{\n    $debug_cmd\n\n    # These SED scripts presuppose an absolute path with a trailing slash.\n    _G_pathcar='s|^/\\([^/]*\\).*$|\\1|'\n    _G_pathcdr='s|^/[^/]*||'\n    _G_removedotparts=':dotsl\n\t\ts|/\\./|/|g\n\t\tt dotsl\n\t\ts|/\\.$|/|'\n    _G_collapseslashes='s|/\\{1,\\}|/|g'\n    _G_finalslash='s|/*$|/|'\n\n    # Start from root dir and reassemble the path.\n    func_normal_abspath_result=\n    func_normal_abspath_tpath=$1\n    func_normal_abspath_altnamespace=\n    case $func_normal_abspath_tpath in\n      \"\")\n        # Empty path, that just means $cwd.\n        func_stripname '' '/' \"`pwd`\"\n        func_normal_abspath_result=$func_stripname_result\n        return\n        ;;\n      # The next three entries are used to spot a run of precisely\n      # two leading slashes without using negated character classes;\n      # we take advantage of case's first-match behaviour.\n      ///*)\n        # Unusual form of absolute path, do nothing.\n        ;;\n      //*)\n        # Not necessarily an ordinary path; POSIX reserves leading '//'\n        # and for example Cygwin uses it to access remote file shares\n        # over CIFS/SMB, so we conserve a leading double slash if found.\n        func_normal_abspath_altnamespace=/\n        ;;\n      /*)\n        # Absolute path, do nothing.\n        ;;\n      *)\n        # Relative path, prepend $cwd.\n        func_normal_abspath_tpath=`pwd`/$func_normal_abspath_tpath\n        ;;\n    esac\n\n    # Cancel out all the simple stuff to save iterations.  We also want\n    # the path to end with a slash for ease of parsing, so make sure\n    # there is one (and only one) here.\n    func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_removedotparts\" -e \"$_G_collapseslashes\" -e \"$_G_finalslash\"`\n    while :; do\n      # Processed it all yet?\n      if test / = \"$func_normal_abspath_tpath\"; then\n        # If we ascended to the root using \"..\" the result may be empty now.\n        if test -z \"$func_normal_abspath_result\"; then\n          func_normal_abspath_result=/\n        fi\n        break\n      fi\n      func_normal_abspath_tcomponent=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_pathcar\"`\n      func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_pathcdr\"`\n      # Figure out what to do with it\n      case $func_normal_abspath_tcomponent in\n        \"\")\n          # Trailing empty path component, ignore it.\n          ;;\n        ..)\n          # Parent dir; strip last assembled component from result.\n          func_dirname \"$func_normal_abspath_result\"\n          func_normal_abspath_result=$func_dirname_result\n          ;;\n        *)\n          # Actual path component, append it.\n          func_append func_normal_abspath_result \"/$func_normal_abspath_tcomponent\"\n          ;;\n      esac\n    done\n    # Restore leading double-slash if one was found on entry.\n    func_normal_abspath_result=$func_normal_abspath_altnamespace$func_normal_abspath_result\n}\n\n\n# func_notquiet ARG...\n# --------------------\n# Echo program name prefixed message only when not in quiet mode.\nfunc_notquiet ()\n{\n    $debug_cmd\n\n    $opt_quiet || func_echo ${1+\"$@\"}\n\n    # A bug in bash halts the script if the last line of a function\n    # fails when set -e is in force, so we need another command to\n    # work around that:\n    :\n}\n\n\n# func_relative_path SRCDIR DSTDIR\n# --------------------------------\n# Set func_relative_path_result to the relative path from SRCDIR to DSTDIR.\nfunc_relative_path ()\n{\n    $debug_cmd\n\n    func_relative_path_result=\n    func_normal_abspath \"$1\"\n    func_relative_path_tlibdir=$func_normal_abspath_result\n    func_normal_abspath \"$2\"\n    func_relative_path_tbindir=$func_normal_abspath_result\n\n    # Ascend the tree starting from libdir\n    while :; do\n      # check if we have found a prefix of bindir\n      case $func_relative_path_tbindir in\n        $func_relative_path_tlibdir)\n          # found an exact match\n          func_relative_path_tcancelled=\n          break\n          ;;\n        $func_relative_path_tlibdir*)\n          # found a matching prefix\n          func_stripname \"$func_relative_path_tlibdir\" '' \"$func_relative_path_tbindir\"\n          func_relative_path_tcancelled=$func_stripname_result\n          if test -z \"$func_relative_path_result\"; then\n            func_relative_path_result=.\n          fi\n          break\n          ;;\n        *)\n          func_dirname $func_relative_path_tlibdir\n          func_relative_path_tlibdir=$func_dirname_result\n          if test -z \"$func_relative_path_tlibdir\"; then\n            # Have to descend all the way to the root!\n            func_relative_path_result=../$func_relative_path_result\n            func_relative_path_tcancelled=$func_relative_path_tbindir\n            break\n          fi\n          func_relative_path_result=../$func_relative_path_result\n          ;;\n      esac\n    done\n\n    # Now calculate path; take care to avoid doubling-up slashes.\n    func_stripname '' '/' \"$func_relative_path_result\"\n    func_relative_path_result=$func_stripname_result\n    func_stripname '/' '/' \"$func_relative_path_tcancelled\"\n    if test -n \"$func_stripname_result\"; then\n      func_append func_relative_path_result \"/$func_stripname_result\"\n    fi\n\n    # Normalisation. If bindir is libdir, return '.' else relative path.\n    if test -n \"$func_relative_path_result\"; then\n      func_stripname './' '' \"$func_relative_path_result\"\n      func_relative_path_result=$func_stripname_result\n    fi\n\n    test -n \"$func_relative_path_result\" || func_relative_path_result=.\n\n    :\n}\n\n\n# func_quote_for_eval ARG...\n# --------------------------\n# Aesthetically quote ARGs to be evaled later.\n# This function returns two values:\n#   i) func_quote_for_eval_result\n#      double-quoted, suitable for a subsequent eval\n#  ii) func_quote_for_eval_unquoted_result\n#      has all characters that are still active within double\n#      quotes backslashified.\nfunc_quote_for_eval ()\n{\n    $debug_cmd\n\n    func_quote_for_eval_unquoted_result=\n    func_quote_for_eval_result=\n    while test 0 -lt $#; do\n      case $1 in\n        *[\\\\\\`\\\"\\$]*)\n\t  _G_unquoted_arg=`printf '%s\\n' \"$1\" |$SED \"$sed_quote_subst\"` ;;\n        *)\n          _G_unquoted_arg=$1 ;;\n      esac\n      if test -n \"$func_quote_for_eval_unquoted_result\"; then\n\tfunc_append func_quote_for_eval_unquoted_result \" $_G_unquoted_arg\"\n      else\n        func_append func_quote_for_eval_unquoted_result \"$_G_unquoted_arg\"\n      fi\n\n      case $_G_unquoted_arg in\n        # Double-quote args containing shell metacharacters to delay\n        # word splitting, command substitution and variable expansion\n        # for a subsequent eval.\n        # Many Bourne shells cannot handle close brackets correctly\n        # in scan sets, so we specify it separately.\n        *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n          _G_quoted_arg=\\\"$_G_unquoted_arg\\\"\n          ;;\n        *)\n          _G_quoted_arg=$_G_unquoted_arg\n\t  ;;\n      esac\n\n      if test -n \"$func_quote_for_eval_result\"; then\n\tfunc_append func_quote_for_eval_result \" $_G_quoted_arg\"\n      else\n        func_append func_quote_for_eval_result \"$_G_quoted_arg\"\n      fi\n      shift\n    done\n}\n\n\n# func_quote_for_expand ARG\n# -------------------------\n# Aesthetically quote ARG to be evaled later; same as above,\n# but do not quote variable references.\nfunc_quote_for_expand ()\n{\n    $debug_cmd\n\n    case $1 in\n      *[\\\\\\`\\\"]*)\n\t_G_arg=`$ECHO \"$1\" | $SED \\\n\t    -e \"$sed_double_quote_subst\" -e \"$sed_double_backslash\"` ;;\n      *)\n        _G_arg=$1 ;;\n    esac\n\n    case $_G_arg in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting and command substitution for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        _G_arg=\\\"$_G_arg\\\"\n        ;;\n    esac\n\n    func_quote_for_expand_result=$_G_arg\n}\n\n\n# func_stripname PREFIX SUFFIX NAME\n# ---------------------------------\n# strip PREFIX and SUFFIX from NAME, and store in func_stripname_result.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_stripname ()\n  {\n    $debug_cmd\n\n    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are\n    # positional parameters, so assign one to ordinary variable first.\n    func_stripname_result=$3\n    func_stripname_result=${func_stripname_result#\"$1\"}\n    func_stripname_result=${func_stripname_result%\"$2\"}\n  }'\nelse\n  func_stripname ()\n  {\n    $debug_cmd\n\n    case $2 in\n      .*) func_stripname_result=`$ECHO \"$3\" | $SED -e \"s%^$1%%\" -e \"s%\\\\\\\\$2\\$%%\"`;;\n      *)  func_stripname_result=`$ECHO \"$3\" | $SED -e \"s%^$1%%\" -e \"s%$2\\$%%\"`;;\n    esac\n  }\nfi\n\n\n# func_show_eval CMD [FAIL_EXP]\n# -----------------------------\n# Unless opt_quiet is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.\nfunc_show_eval ()\n{\n    $debug_cmd\n\n    _G_cmd=$1\n    _G_fail_exp=${2-':'}\n\n    func_quote_for_expand \"$_G_cmd\"\n    eval \"func_notquiet $func_quote_for_expand_result\"\n\n    $opt_dry_run || {\n      eval \"$_G_cmd\"\n      _G_status=$?\n      if test 0 -ne \"$_G_status\"; then\n\teval \"(exit $_G_status); $_G_fail_exp\"\n      fi\n    }\n}\n\n\n# func_show_eval_locale CMD [FAIL_EXP]\n# ------------------------------------\n# Unless opt_quiet is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.  Use the saved locale for evaluation.\nfunc_show_eval_locale ()\n{\n    $debug_cmd\n\n    _G_cmd=$1\n    _G_fail_exp=${2-':'}\n\n    $opt_quiet || {\n      func_quote_for_expand \"$_G_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    $opt_dry_run || {\n      eval \"$_G_user_locale\n\t    $_G_cmd\"\n      _G_status=$?\n      eval \"$_G_safe_locale\"\n      if test 0 -ne \"$_G_status\"; then\n\teval \"(exit $_G_status); $_G_fail_exp\"\n      fi\n    }\n}\n\n\n# func_tr_sh\n# ----------\n# Turn $1 into a string suitable for a shell variable name.\n# Result is stored in $func_tr_sh_result.  All characters\n# not in the set a-zA-Z0-9_ are replaced with '_'. Further,\n# if $1 begins with a digit, a '_' is prepended as well.\nfunc_tr_sh ()\n{\n    $debug_cmd\n\n    case $1 in\n    [0-9]* | *[!a-zA-Z0-9_]*)\n      func_tr_sh_result=`$ECHO \"$1\" | $SED -e 's/^\\([0-9]\\)/_\\1/' -e 's/[^a-zA-Z0-9_]/_/g'`\n      ;;\n    * )\n      func_tr_sh_result=$1\n      ;;\n    esac\n}\n\n\n# func_verbose ARG...\n# -------------------\n# Echo program name prefixed message in verbose mode only.\nfunc_verbose ()\n{\n    $debug_cmd\n\n    $opt_verbose && func_echo \"$*\"\n\n    :\n}\n\n\n# func_warn_and_continue ARG...\n# -----------------------------\n# Echo program name prefixed warning message to standard error.\nfunc_warn_and_continue ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    func_echo_infix_1 \"${tc_red}warning$tc_reset\" \"$*\" >&2\n}\n\n\n# func_warning CATEGORY ARG...\n# ----------------------------\n# Echo program name prefixed warning message to standard error. Warning\n# messages can be filtered according to CATEGORY, where this function\n# elides messages where CATEGORY is not listed in the global variable\n# 'opt_warning_types'.\nfunc_warning ()\n{\n    $debug_cmd\n\n    # CATEGORY must be in the warning_categories list!\n    case \" $warning_categories \" in\n      *\" $1 \"*) ;;\n      *) func_internal_error \"invalid warning category '$1'\" ;;\n    esac\n\n    _G_category=$1\n    shift\n\n    case \" $opt_warning_types \" in\n      *\" $_G_category \"*) $warning_func ${1+\"$@\"} ;;\n    esac\n}\n\n\n# func_sort_ver VER1 VER2\n# -----------------------\n# 'sort -V' is not generally available.\n# Note this deviates from the version comparison in automake\n# in that it treats 1.5 < 1.5.0, and treats 1.4.4a < 1.4-p3a\n# but this should suffice as we won't be specifying old\n# version formats or redundant trailing .0 in bootstrap.conf.\n# If we did want full compatibility then we should probably\n# use m4_version_compare from autoconf.\nfunc_sort_ver ()\n{\n    $debug_cmd\n\n    ver1=$1\n    ver2=$2\n\n    # Split on '.' and compare each component.\n    i=1\n    while :; do\n      p1=`echo \"$ver1\" |cut -d. -f$i`\n      p2=`echo \"$ver2\" |cut -d. -f$i`\n      if test ! \"$p1\"; then\n        echo \"$1 $2\"\n        break\n      elif test ! \"$p2\"; then\n        echo \"$2 $1\"\n        break\n      elif test ! \"$p1\" = \"$p2\"; then\n        if test \"$p1\" -gt \"$p2\" 2>/dev/null; then # numeric comparison\n          echo \"$2 $1\"\n        elif test \"$p2\" -gt \"$p1\" 2>/dev/null; then # numeric comparison\n          echo \"$1 $2\"\n        else # numeric, then lexicographic comparison\n          lp=`printf \"$p1\\n$p2\\n\" |sort -n |tail -n1`\n          if test \"$lp\" = \"$p2\"; then\n            echo \"$1 $2\"\n          else\n            echo \"$2 $1\"\n          fi\n        fi\n        break\n      fi\n      i=`expr $i + 1`\n    done\n}\n\n\n# Local variables:\n# mode: shell-script\n# sh-indentation: 2\n# eval: (add-hook 'write-file-hooks 'time-stamp)\n# time-stamp-pattern: \"10/scriptversion=%:y-%02m-%02d.%02H; # UTC\"\n# time-stamp-time-zone: \"UTC\"\n# End:\n#! /bin/sh\n\n# Set a version string for this script.\nscriptversion=2012-10-21.11; # UTC\n\n# A portable, pluggable option parser for Bourne shell.\n# Written by Gary V. Vaughan, 2010\n\n# Copyright (C) 2010-2013 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n# Please report bugs or propose patches to gary@gnu.org.\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# This file is a library for parsing options in your shell scripts along\n# with assorted other useful supporting features that you can make use\n# of too.\n#\n# For the simplest scripts you might need only:\n#\n#   #!/bin/sh\n#   . relative/path/to/funclib.sh\n#   . relative/path/to/options-parser\n#   scriptversion=1.0\n#   func_options ${1+\"$@\"}\n#   eval set dummy \"$func_options_result\"; shift\n#   ...rest of your script...\n#\n# In order for the '--version' option to work, you will need to have a\n# suitably formatted comment like the one at the top of this file\n# starting with '# Written by ' and ending with '# warranty; '.\n#\n# For '-h' and '--help' to work, you will also need a one line\n# description of your script's purpose in a comment directly above the\n# '# Written by ' line, like the one at the top of this file.\n#\n# The default options also support '--debug', which will turn on shell\n# execution tracing (see the comment above debug_cmd below for another\n# use), and '--verbose' and the func_verbose function to allow your script\n# to display verbose messages only when your user has specified\n# '--verbose'.\n#\n# After sourcing this file, you can plug processing for additional\n# options by amending the variables from the 'Configuration' section\n# below, and following the instructions in the 'Option parsing'\n# section further down.\n\n## -------------- ##\n## Configuration. ##\n## -------------- ##\n\n# You should override these variables in your script after sourcing this\n# file so that they reflect the customisations you have added to the\n# option parser.\n\n# The usage line for option parsing errors and the start of '-h' and\n# '--help' output messages. You can embed shell variables for delayed\n# expansion at the time the message is displayed, but you will need to\n# quote other shell meta-characters carefully to prevent them being\n# expanded when the contents are evaled.\nusage='$progpath [OPTION]...'\n\n# Short help message in response to '-h' and '--help'.  Add to this or\n# override it after sourcing this library to reflect the full set of\n# options your script accepts.\nusage_message=\"\\\n       --debug        enable verbose shell tracing\n   -W, --warnings=CATEGORY\n                      report the warnings falling in CATEGORY [all]\n   -v, --verbose      verbosely report processing\n       --version      print version information and exit\n   -h, --help         print short or long help message and exit\n\"\n\n# Additional text appended to 'usage_message' in response to '--help'.\nlong_help_message=\"\nWarning categories include:\n       'all'          show all warnings\n       'none'         turn off all the warnings\n       'error'        warnings are treated as fatal errors\"\n\n# Help message printed before fatal option parsing errors.\nfatal_help=\"Try '\\$progname --help' for more information.\"\n\n\n\n## ------------------------- ##\n## Hook function management. ##\n## ------------------------- ##\n\n# This section contains functions for adding, removing, and running hooks\n# to the main code.  A hook is just a named list of of function, that can\n# be run in order later on.\n\n# func_hookable FUNC_NAME\n# -----------------------\n# Declare that FUNC_NAME will run hooks added with\n# 'func_add_hook FUNC_NAME ...'.\nfunc_hookable ()\n{\n    $debug_cmd\n\n    func_append hookable_fns \" $1\"\n}\n\n\n# func_add_hook FUNC_NAME HOOK_FUNC\n# ---------------------------------\n# Request that FUNC_NAME call HOOK_FUNC before it returns.  FUNC_NAME must\n# first have been declared \"hookable\" by a call to 'func_hookable'.\nfunc_add_hook ()\n{\n    $debug_cmd\n\n    case \" $hookable_fns \" in\n      *\" $1 \"*) ;;\n      *) func_fatal_error \"'$1' does not accept hook functions.\" ;;\n    esac\n\n    eval func_append ${1}_hooks '\" $2\"'\n}\n\n\n# func_remove_hook FUNC_NAME HOOK_FUNC\n# ------------------------------------\n# Remove HOOK_FUNC from the list of functions called by FUNC_NAME.\nfunc_remove_hook ()\n{\n    $debug_cmd\n\n    eval ${1}_hooks='`$bs_echo \"\\$'$1'_hooks\" |$SED \"s| '$2'||\"`'\n}\n\n\n# func_run_hooks FUNC_NAME [ARG]...\n# ---------------------------------\n# Run all hook functions registered to FUNC_NAME.\n# It is assumed that the list of hook functions contains nothing more\n# than a whitespace-delimited list of legal shell function names, and\n# no effort is wasted trying to catch shell meta-characters or preserve\n# whitespace.\nfunc_run_hooks ()\n{\n    $debug_cmd\n\n    case \" $hookable_fns \" in\n      *\" $1 \"*) ;;\n      *) func_fatal_error \"'$1' does not support hook functions.\" ;;\n    esac\n\n    eval _G_hook_fns=\\$$1_hooks; shift\n\n    for _G_hook in $_G_hook_fns; do\n      eval $_G_hook '\"$@\"'\n\n      # store returned options list back into positional\n      # parameters for next 'cmd' execution.\n      eval _G_hook_result=\\$${_G_hook}_result\n      eval set dummy \"$_G_hook_result\"; shift\n    done\n\n    func_quote_for_eval ${1+\"$@\"}\n    func_run_hooks_result=$func_quote_for_eval_result\n}\n\n\n\n## --------------- ##\n## Option parsing. ##\n## --------------- ##\n\n# In order to add your own option parsing hooks, you must accept the\n# full positional parameter list in your hook function, remove any\n# options that you action, and then pass back the remaining unprocessed\n# options in '<hooked_function_name>_result', escaped suitably for\n# 'eval'.  Like this:\n#\n#    my_options_prep ()\n#    {\n#        $debug_cmd\n#\n#        # Extend the existing usage message.\n#        usage_message=$usage_message'\n#      -s, --silent       don'\\''t print informational messages\n#    '\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_options_prep_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_options_prep my_options_prep\n#\n#\n#    my_silent_option ()\n#    {\n#        $debug_cmd\n#\n#        # Note that for efficiency, we parse as many options as we can\n#        # recognise in a loop before passing the remainder back to the\n#        # caller on the first unrecognised argument we encounter.\n#        while test $# -gt 0; do\n#          opt=$1; shift\n#          case $opt in\n#            --silent|-s) opt_silent=: ;;\n#            # Separate non-argument short options:\n#            -s*)         func_split_short_opt \"$_G_opt\"\n#                         set dummy \"$func_split_short_opt_name\" \\\n#                             \"-$func_split_short_opt_arg\" ${1+\"$@\"}\n#                         shift\n#                         ;;\n#            *)            set dummy \"$_G_opt\" \"$*\"; shift; break ;;\n#          esac\n#        done\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_silent_option_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_parse_options my_silent_option\n#\n#\n#    my_option_validation ()\n#    {\n#        $debug_cmd\n#\n#        $opt_silent && $opt_verbose && func_fatal_help \"\\\n#    '--silent' and '--verbose' options are mutually exclusive.\"\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_option_validation_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_validate_options my_option_validation\n#\n# You'll alse need to manually amend $usage_message to reflect the extra\n# options you parse.  It's preferable to append if you can, so that\n# multiple option parsing hooks can be added safely.\n\n\n# func_options [ARG]...\n# ---------------------\n# All the functions called inside func_options are hookable. See the\n# individual implementations for details.\nfunc_hookable func_options\nfunc_options ()\n{\n    $debug_cmd\n\n    func_options_prep ${1+\"$@\"}\n    eval func_parse_options \\\n        ${func_options_prep_result+\"$func_options_prep_result\"}\n    eval func_validate_options \\\n        ${func_parse_options_result+\"$func_parse_options_result\"}\n\n    eval func_run_hooks func_options \\\n        ${func_validate_options_result+\"$func_validate_options_result\"}\n\n    # save modified positional parameters for caller\n    func_options_result=$func_run_hooks_result\n}\n\n\n# func_options_prep [ARG]...\n# --------------------------\n# All initialisations required before starting the option parse loop.\n# Note that when calling hook functions, we pass through the list of\n# positional parameters.  If a hook function modifies that list, and\n# needs to propogate that back to rest of this script, then the complete\n# modified list must be put in 'func_run_hooks_result' before\n# returning.\nfunc_hookable func_options_prep\nfunc_options_prep ()\n{\n    $debug_cmd\n\n    # Option defaults:\n    opt_verbose=false\n    opt_warning_types=\n\n    func_run_hooks func_options_prep ${1+\"$@\"}\n\n    # save modified positional parameters for caller\n    func_options_prep_result=$func_run_hooks_result\n}\n\n\n# func_parse_options [ARG]...\n# ---------------------------\n# The main option parsing loop.\nfunc_hookable func_parse_options\nfunc_parse_options ()\n{\n    $debug_cmd\n\n    func_parse_options_result=\n\n    # this just eases exit handling\n    while test $# -gt 0; do\n      # Defer to hook functions for initial option parsing, so they\n      # get priority in the event of reusing an option name.\n      func_run_hooks func_parse_options ${1+\"$@\"}\n\n      # Adjust func_parse_options positional parameters to match\n      eval set dummy \"$func_run_hooks_result\"; shift\n\n      # Break out of the loop if we already parsed every option.\n      test $# -gt 0 || break\n\n      _G_opt=$1\n      shift\n      case $_G_opt in\n        --debug|-x)   debug_cmd='set -x'\n                      func_echo \"enabling shell trace mode\"\n                      $debug_cmd\n                      ;;\n\n        --no-warnings|--no-warning|--no-warn)\n                      set dummy --warnings none ${1+\"$@\"}\n                      shift\n\t\t      ;;\n\n        --warnings|--warning|-W)\n                      test $# = 0 && func_missing_arg $_G_opt && break\n                      case \" $warning_categories $1\" in\n                        *\" $1 \"*)\n                          # trailing space prevents matching last $1 above\n                          func_append_uniq opt_warning_types \" $1\"\n                          ;;\n                        *all)\n                          opt_warning_types=$warning_categories\n                          ;;\n                        *none)\n                          opt_warning_types=none\n                          warning_func=:\n                          ;;\n                        *error)\n                          opt_warning_types=$warning_categories\n                          warning_func=func_fatal_error\n                          ;;\n                        *)\n                          func_fatal_error \\\n                             \"unsupported warning category: '$1'\"\n                          ;;\n                      esac\n                      shift\n                      ;;\n\n        --verbose|-v) opt_verbose=: ;;\n        --version)    func_version ;;\n        -\\?|-h)       func_usage ;;\n        --help)       func_help ;;\n\n\t# Separate optargs to long options (plugins may need this):\n\t--*=*)        func_split_equals \"$_G_opt\"\n\t              set dummy \"$func_split_equals_lhs\" \\\n                          \"$func_split_equals_rhs\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n       # Separate optargs to short options:\n        -W*)\n                      func_split_short_opt \"$_G_opt\"\n                      set dummy \"$func_split_short_opt_name\" \\\n                          \"$func_split_short_opt_arg\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n        # Separate non-argument short options:\n        -\\?*|-h*|-v*|-x*)\n                      func_split_short_opt \"$_G_opt\"\n                      set dummy \"$func_split_short_opt_name\" \\\n                          \"-$func_split_short_opt_arg\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n        --)           break ;;\n        -*)           func_fatal_help \"unrecognised option: '$_G_opt'\" ;;\n        *)            set dummy \"$_G_opt\" ${1+\"$@\"}; shift; break ;;\n      esac\n    done\n\n    # save modified positional parameters for caller\n    func_quote_for_eval ${1+\"$@\"}\n    func_parse_options_result=$func_quote_for_eval_result\n}\n\n\n# func_validate_options [ARG]...\n# ------------------------------\n# Perform any sanity checks on option settings and/or unconsumed\n# arguments.\nfunc_hookable func_validate_options\nfunc_validate_options ()\n{\n    $debug_cmd\n\n    # Display all warnings if -W was not given.\n    test -n \"$opt_warning_types\" || opt_warning_types=\" $warning_categories\"\n\n    func_run_hooks func_validate_options ${1+\"$@\"}\n\n    # Bail if the options were screwed!\n    $exit_cmd $EXIT_FAILURE\n\n    # save modified positional parameters for caller\n    func_validate_options_result=$func_run_hooks_result\n}\n\n\n\n## ------------------##\n## Helper functions. ##\n## ------------------##\n\n# This section contains the helper functions used by the rest of the\n# hookable option parser framework in ascii-betical order.\n\n\n# func_fatal_help ARG...\n# ----------------------\n# Echo program name prefixed message to standard error, followed by\n# a help hint, and exit.\nfunc_fatal_help ()\n{\n    $debug_cmd\n\n    eval \\$bs_echo \\\"\"Usage: $usage\"\\\"\n    eval \\$bs_echo \\\"\"$fatal_help\"\\\"\n    func_error ${1+\"$@\"}\n    exit $EXIT_FAILURE\n}\n\n\n# func_help\n# ---------\n# Echo long help message to standard output and exit.\nfunc_help ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $bs_echo \"$long_help_message\"\n    exit 0\n}\n\n\n# func_missing_arg ARGNAME\n# ------------------------\n# Echo program name prefixed message to standard error and set global\n# exit_cmd.\nfunc_missing_arg ()\n{\n    $debug_cmd\n\n    func_error \"Missing argument for '$1'.\"\n    exit_cmd=exit\n}\n\n\n# func_split_equals STRING\n# ------------------------\n# Set func_split_equals_lhs and func_split_equals_rhs shell variables after\n# splitting STRING at the '=' sign.\ntest -z \"$_G_HAVE_XSI_OPS\" \\\n    && (eval 'x=a/b/c;\n      test 5aa/bb/cc = \"${#x}${x%%/*}${x%/*}${x#*/}${x##*/}\"') 2>/dev/null \\\n    && _G_HAVE_XSI_OPS=yes\n\nif test yes = \"$_G_HAVE_XSI_OPS\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_split_equals ()\n  {\n      $debug_cmd\n\n      func_split_equals_lhs=${1%%=*}\n      func_split_equals_rhs=${1#*=}\n      test \"x$func_split_equals_lhs\" = \"x$1\" \\\n        && func_split_equals_rhs=\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_split_equals ()\n  {\n      $debug_cmd\n\n      func_split_equals_lhs=`expr \"x$1\" : 'x\\([^=]*\\)'`\n      func_split_equals_rhs=\n      test \"x$func_split_equals_lhs\" = \"x$1\" \\\n        || func_split_equals_rhs=`expr \"x$1\" : 'x[^=]*=\\(.*\\)$'`\n  }\nfi #func_split_equals\n\n\n# func_split_short_opt SHORTOPT\n# -----------------------------\n# Set func_split_short_opt_name and func_split_short_opt_arg shell\n# variables after splitting SHORTOPT after the 2nd character.\nif test yes = \"$_G_HAVE_XSI_OPS\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_split_short_opt ()\n  {\n      $debug_cmd\n\n      func_split_short_opt_arg=${1#??}\n      func_split_short_opt_name=${1%\"$func_split_short_opt_arg\"}\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_split_short_opt ()\n  {\n      $debug_cmd\n\n      func_split_short_opt_name=`expr \"x$1\" : 'x-\\(.\\)'`\n      func_split_short_opt_arg=`expr \"x$1\" : 'x-.\\(.*\\)$'`\n  }\nfi #func_split_short_opt\n\n\n# func_usage\n# ----------\n# Echo short help message to standard output and exit.\nfunc_usage ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $bs_echo \"Run '$progname --help |${PAGER-more}' for full usage\"\n    exit 0\n}\n\n\n# func_usage_message\n# ------------------\n# Echo short help message to standard output.\nfunc_usage_message ()\n{\n    $debug_cmd\n\n    eval \\$bs_echo \\\"\"Usage: $usage\"\\\"\n    echo\n    $SED -n 's|^# ||\n        /^Written by/{\n          x;p;x\n        }\n\th\n\t/^Written by/q' < \"$progpath\"\n    echo\n    eval \\$bs_echo \\\"\"$usage_message\"\\\"\n}\n\n\n# func_version\n# ------------\n# Echo version message to standard output and exit.\nfunc_version ()\n{\n    $debug_cmd\n\n    printf '%s\\n' \"$progname $scriptversion\"\n    $SED -n '/^##/q\n        /(C)/!b go\n        :more\n        /\\./!{\n          N\n          s|\\n# | |\n          b more\n        }\n        :go\n        /^# Written by /,/# warranty; / {\n          s|^# ||\n          s|^# *$||\n          s|\\((C)\\)[ 0-9,-]*[ ,-]\\([1-9][0-9]* \\)|\\1 \\2|\n          p\n        }\n        /^# Written by / {\n          s|^# ||\n          p\n        }\n        /^warranty; /q' < \"$progpath\"\n\n    exit $?\n}\n\n\n# Local variables:\n# mode: shell-script\n# sh-indentation: 2\n# eval: (add-hook 'write-file-hooks 'time-stamp)\n# time-stamp-pattern: \"10/scriptversion=%:y-%02m-%02d.%02H; # UTC\"\n# time-stamp-time-zone: \"UTC\"\n# End:\n\n# Set a version string.\nscriptversion='(GNU libtool) 2.4.2.418'\n\n\n# func_echo ARG...\n# ----------------\n# Libtool also displays the current mode in messages, so override\n# funclib.sh func_echo with this custom definition.\nfunc_echo ()\n{\n    $debug_cmd\n\n    _G_message=$*\n\n    func_echo_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_IFS\n      $bs_echo \"$progname${opt_mode+: $opt_mode}: $_G_line\"\n    done\n    IFS=$func_echo_IFS\n}\n\n\n# func_warning ARG...\n# -------------------\n# Libtool warnings are not categorized, so override funclib.sh\n# func_warning with this simpler definition.\nfunc_warning ()\n{\n    $debug_cmd\n\n    $warning_func ${1+\"$@\"}\n}\n\n\n## ---------------- ##\n## Options parsing. ##\n## ---------------- ##\n\n# Hook in the functions to make sure our own options are parsed during\n# the option parsing loop.\n\nusage='$progpath [OPTION]... [MODE-ARG]...'\n\n# Short help message in response to '-h'.\nusage_message=\"Options:\n       --config             show all configuration variables\n       --debug              enable verbose shell tracing\n   -n, --dry-run            display commands without modifying any files\n       --features           display basic configuration information and exit\n       --mode=MODE          use operation mode MODE\n       --no-warnings        equivalent to '-Wnone'\n       --preserve-dup-deps  don't remove duplicate dependency libraries\n       --quiet, --silent    don't print informational messages\n       --tag=TAG            use configuration variables from tag TAG\n   -v, --verbose            print more informational messages than default\n       --version            print version information\n   -W, --warnings=CATEGORY  report the warnings falling in CATEGORY [all]\n   -h, --help, --help-all   print short, long, or detailed help message\n\"\n\n# Additional text appended to 'usage_message' in response to '--help'.\nlong_help_message=$long_help_message\"\n\nMODE must be one of the following:\n\n       clean           remove files from the build directory\n       compile         compile a source file into a libtool object\n       execute         automatically set library path, then run a program\n       finish          complete the installation of libtool libraries\n       install         install libraries or executables\n       link            create a library or an executable\n       uninstall       remove libraries from an installed directory\n\nMODE-ARGS vary depending on the MODE.  When passed as first option,\n'--mode=MODE' may be abbreviated as 'MODE' or a unique abbreviation of that.\nTry '$progname --help --mode=MODE' for a more detailed description of MODE.\n\nWhen reporting a bug, please describe a test case to reproduce it and\ninclude the following information:\n\n       host-triplet:   $host\n       shell:          $SHELL\n       compiler:       $LTCC\n       compiler flags: $LTCFLAGS\n       linker:         $LD (gnu? $with_gnu_ld)\n       version:        $progname (GNU libtool) 2.4.2.418\n       automake:       `($AUTOMAKE --version) 2>/dev/null |$SED 1q`\n       autoconf:       `($AUTOCONF --version) 2>/dev/null |$SED 1q`\n\nReport bugs to <bug-libtool@gnu.org>.\nGNU libtool home page: <http://www.gnu.org/software/libtool/>.\nGeneral help using GNU software: <http://www.gnu.org/gethelp/>.\"\n\n\n# func_lo2o OBJECT-NAME\n# ---------------------\n# Transform OBJECT-NAME from a '.lo' suffix to the platform specific\n# object suffix.\n\nlo2o=s/\\\\.lo\\$/.$objext/\no2lo=s/\\\\.$objext\\$/.lo/\n\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_lo2o ()\n  {\n    case $1 in\n      *.lo) func_lo2o_result=${1%.lo}.$objext ;;\n      *   ) func_lo2o_result=$1               ;;\n    esac\n  }'\n\n  # func_xform LIBOBJ-OR-SOURCE\n  # ---------------------------\n  # Transform LIBOBJ-OR-SOURCE from a '.o' or '.c' (or otherwise)\n  # suffix to a '.lo' libtool-object suffix.\n  eval 'func_xform ()\n  {\n    func_xform_result=${1%.*}.lo\n  }'\nelse\n  # ...otherwise fall back to using sed.\n  func_lo2o ()\n  {\n    func_lo2o_result=`$ECHO \"$1\" | $SED \"$lo2o\"`\n  }\n\n  func_xform ()\n  {\n    func_xform_result=`$ECHO \"$1\" | $SED 's|\\.[^.]*$|.lo|'`\n  }\nfi\n\n\n# func_fatal_configuration ARG...\n# -------------------------------\n# Echo program name prefixed message to standard error, followed by\n# a configuration failure hint, and exit.\nfunc_fatal_configuration ()\n{\n    func__fatal_error ${1+\"$@\"} \\\n      \"See the $PACKAGE documentation for more information.\" \\\n      \"Fatal configuration error.\"\n}\n\n\n# func_config\n# -----------\n# Display the configuration for all the tags in this script.\nfunc_config ()\n{\n    re_begincf='^# ### BEGIN LIBTOOL'\n    re_endcf='^# ### END LIBTOOL'\n\n    # Default configuration.\n    $SED \"1,/$re_begincf CONFIG/d;/$re_endcf CONFIG/,\\$d\" < \"$progpath\"\n\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      $SED -n \"/$re_begincf TAG CONFIG: $tagname\\$/,/$re_endcf TAG CONFIG: $tagname\\$/p\" < \"$progpath\"\n    done\n\n    exit $?\n}\n\n\n# func_features\n# -------------\n# Display the features supported by this script.\nfunc_features ()\n{\n    echo \"host: $host\"\n    if test yes = \"$build_libtool_libs\"; then\n      echo \"enable shared libraries\"\n    else\n      echo \"disable shared libraries\"\n    fi\n    if test yes = \"$build_old_libs\"; then\n      echo \"enable static libraries\"\n    else\n      echo \"disable static libraries\"\n    fi\n\n    exit $?\n}\n\n\n# func_enable_tag TAGNAME\n# -----------------------\n# Verify that TAGNAME is valid, and either flag an error and exit, or\n# enable the TAGNAME tag.  We also add TAGNAME to the global $taglist\n# variable here.\nfunc_enable_tag ()\n{\n    # Global variable:\n    tagname=$1\n\n    re_begincf=\"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\\$\"\n    re_endcf=\"^# ### END LIBTOOL TAG CONFIG: $tagname\\$\"\n    sed_extractcf=/$re_begincf/,/$re_endcf/p\n\n    # Validate tagname.\n    case $tagname in\n      *[!-_A-Za-z0-9,/]*)\n        func_fatal_error \"invalid tag name: $tagname\"\n        ;;\n    esac\n\n    # Don't test for the \"default\" C tag, as we know it's\n    # there but not specially marked.\n    case $tagname in\n        CC) ;;\n    *)\n        if $GREP \"$re_begincf\" \"$progpath\" >/dev/null 2>&1; then\n\t  taglist=\"$taglist $tagname\"\n\n\t  # Evaluate the configuration.  Be careful to quote the path\n\t  # and the sed script, to avoid splitting on whitespace, but\n\t  # also don't use non-portable quotes within backquotes within\n\t  # quotes we have to do it in 2 steps:\n\t  extractedcf=`$SED -n -e \"$sed_extractcf\" < \"$progpath\"`\n\t  eval \"$extractedcf\"\n        else\n\t  func_error \"ignoring unknown tag $tagname\"\n        fi\n        ;;\n    esac\n}\n\n\n# func_check_version_match\n# ------------------------\n# Ensure that we are using m4 macros, and libtool script from the same\n# release of libtool.\nfunc_check_version_match ()\n{\n    if test \"$package_revision\" != \"$macro_revision\"; then\n      if test \"$VERSION\" != \"$macro_version\"; then\n        if test -z \"$macro_version\"; then\n          cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from an older release.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n        else\n          cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from $PACKAGE $macro_version.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n        fi\n      else\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,\n$progname: but the definition of this LT_INIT comes from revision $macro_revision.\n$progname: You should recreate aclocal.m4 with macros from revision $package_revision\n$progname: of $PACKAGE $VERSION and run autoconf again.\n_LT_EOF\n      fi\n\n      exit $EXIT_MISMATCH\n    fi\n}\n\n\n# libtool_options_prep [ARG]...\n# -----------------------------\n# Preparation for options parsed by libtool.\nlibtool_options_prep ()\n{\n    $debug_mode\n\n    # Option defaults:\n    opt_config=false\n    opt_dlopen=\n    opt_dry_run=false\n    opt_help=false\n    opt_mode=\n    opt_preserve_dup_deps=false\n    opt_quiet=false\n\n    nonopt=\n    preserve_args=\n\n    # Shorthand for --mode=foo, only valid as the first argument\n    case $1 in\n    clean|clea|cle|cl)\n      shift; set dummy --mode clean ${1+\"$@\"}; shift\n      ;;\n    compile|compil|compi|comp|com|co|c)\n      shift; set dummy --mode compile ${1+\"$@\"}; shift\n      ;;\n    execute|execut|execu|exec|exe|ex|e)\n      shift; set dummy --mode execute ${1+\"$@\"}; shift\n      ;;\n    finish|finis|fini|fin|fi|f)\n      shift; set dummy --mode finish ${1+\"$@\"}; shift\n      ;;\n    install|instal|insta|inst|ins|in|i)\n      shift; set dummy --mode install ${1+\"$@\"}; shift\n      ;;\n    link|lin|li|l)\n      shift; set dummy --mode link ${1+\"$@\"}; shift\n      ;;\n    uninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)\n      shift; set dummy --mode uninstall ${1+\"$@\"}; shift\n      ;;\n    esac\n\n    # Pass back the list of options.\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_options_prep_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_options_prep libtool_options_prep\n\n\n# libtool_parse_options [ARG]...\n# ---------------------------------\n# Provide handling for libtool specific options.\nlibtool_parse_options ()\n{\n    $debug_cmd\n\n    # Perform our own loop to consume as many options as possible in\n    # each iteration.\n    while test $# -gt 0; do\n      _G_opt=$1\n      shift\n      case $_G_opt in\n        --dry-run|--dryrun|-n)\n                        opt_dry_run=:\n                        ;;\n\n        --config)       func_config ;;\n\n        --dlopen|-dlopen)\n                        opt_dlopen=\"${opt_dlopen+$opt_dlopen\n}$1\"\n                        shift\n                        ;;\n\n        --preserve-dup-deps)\n                        opt_preserve_dup_deps=: ;;\n\n        --features)     func_features ;;\n\n        --finish)       set dummy --mode finish ${1+\"$@\"}; shift ;;\n\n        --help)         opt_help=: ;;\n\n        --help-all)     opt_help=': help-all' ;;\n\n        --mode)         test $# = 0 && func_missing_arg $_G_opt && break\n                        opt_mode=$1\n                        case $1 in\n                          # Valid mode arguments:\n                          clean|compile|execute|finish|install|link|relink|uninstall) ;;\n\n                          # Catch anything else as an error\n                          *) func_error \"invalid argument for $_G_opt\"\n                             exit_cmd=exit\n                             break\n                             ;;\n                        esac\n                        shift\n                        ;;\n\n        --no-silent|--no-quiet)\n                        opt_quiet=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --no-warnings|--no-warning|--no-warn)\n                        opt_warning=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --no-verbose)\n                        opt_verbose=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --silent|--quiet)\n                        opt_quiet=:\n                        opt_verbose=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --tag)          test $# = 0 && func_missing_arg $_G_opt && break\n                        opt_tag=$1\n                        func_append preserve_args \" $_G_opt $1\"\n                        func_enable_tag \"$1\"\n                        shift\n                        ;;\n\n        --verbose|-v)   opt_quiet=false\n                        opt_verbose=:\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n\t# An option not handled by this hook function:\n        *)\t\tset dummy \"$_G_opt\" ${1+\"$@\"};\tshift; break  ;;\n      esac\n    done\n\n\n    # save modified positional parameters for caller\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_parse_options_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_parse_options libtool_parse_options\n\n\n\n# libtool_validate_options [ARG]...\n# ---------------------------------\n# Perform any sanity checks on option settings and/or unconsumed\n# arguments.\nlibtool_validate_options ()\n{\n    # save first non-option argument\n    if test 0 -lt $#; then\n      nonopt=$1\n      shift\n    fi\n\n    # preserve --debug\n    test : = \"$debug_cmd\" || func_append preserve_args \" --debug\"\n\n    case $host in\n      *cygwin* | *mingw* | *pw32* | *cegcc*)\n        # don't eliminate duplications in $postdeps and $predeps\n        opt_duplicate_compiler_generated_deps=:\n        ;;\n      *)\n        opt_duplicate_compiler_generated_deps=$opt_preserve_dup_deps\n        ;;\n    esac\n\n    $opt_help || {\n      # Sanity checks first:\n      func_check_version_match\n\n      test yes != \"$build_libtool_libs\" \\\n        && test yes != \"$build_old_libs\" \\\n        && func_fatal_configuration \"not configured to build any kind of library\"\n\n      # Darwin sucks\n      eval std_shrext=\\\"$shrext_cmds\\\"\n\n      # Only execute mode is allowed to have -dlopen flags.\n      if test -n \"$opt_dlopen\" && test execute != \"$opt_mode\"; then\n        func_error \"unrecognized option '-dlopen'\"\n        $ECHO \"$help\" 1>&2\n        exit $EXIT_FAILURE\n      fi\n\n      # Change the help message to a mode-specific one.\n      generic_help=$help\n      help=\"Try '$progname --help --mode=$opt_mode' for more information.\"\n    }\n\n    # Pass back the unparsed argument list\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_validate_options_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_validate_options libtool_validate_options\n\n\n# Process options as early as possible so that --help and --version\n# can return quickly.\nfunc_options ${1+\"$@\"}\neval set dummy \"$func_options_result\"; shift\n\n\n\n## ----------- ##\n##    Main.    ##\n## ----------- ##\n\nmagic='%%%MAGIC variable%%%'\nmagic_exe='%%%MAGIC EXE variable%%%'\n\n# Global variables.\nextracted_archives=\nextracted_serial=0\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n$1\n_LTECHO_EOF'\n}\n\n# func_lalib_p file\n# True iff FILE is a libtool '.la' library or '.lo' object file.\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_lalib_p ()\n{\n    test -f \"$1\" &&\n      $SED -e 4q \"$1\" 2>/dev/null \\\n        | $GREP \"^# Generated by .*$PACKAGE\" > /dev/null 2>&1\n}\n\n# func_lalib_unsafe_p file\n# True iff FILE is a libtool '.la' library or '.lo' object file.\n# This function implements the same check as func_lalib_p without\n# resorting to external programs.  To this end, it redirects stdin and\n# closes it afterwards, without saving the original file descriptor.\n# As a safety measure, use it only where a negative result would be\n# fatal anyway.  Works if 'file' does not exist.\nfunc_lalib_unsafe_p ()\n{\n    lalib_p=no\n    if test -f \"$1\" && test -r \"$1\" && exec 5<&0 <\"$1\"; then\n\tfor lalib_p_l in 1 2 3 4\n\tdo\n\t    read lalib_p_line\n\t    case $lalib_p_line in\n\t\t\\#\\ Generated\\ by\\ *$PACKAGE* ) lalib_p=yes; break;;\n\t    esac\n\tdone\n\texec 0<&5 5<&-\n    fi\n    test yes = \"$lalib_p\"\n}\n\n# func_ltwrapper_script_p file\n# True iff FILE is a libtool wrapper script\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_script_p ()\n{\n    func_lalib_p \"$1\"\n}\n\n# func_ltwrapper_executable_p file\n# True iff FILE is a libtool wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_executable_p ()\n{\n    func_ltwrapper_exec_suffix=\n    case $1 in\n    *.exe) ;;\n    *) func_ltwrapper_exec_suffix=.exe ;;\n    esac\n    $GREP \"$magic_exe\" \"$1$func_ltwrapper_exec_suffix\" >/dev/null 2>&1\n}\n\n# func_ltwrapper_scriptname file\n# Assumes file is an ltwrapper_executable\n# uses $file to determine the appropriate filename for a\n# temporary ltwrapper_script.\nfunc_ltwrapper_scriptname ()\n{\n    func_dirname_and_basename \"$1\" \"\" \".\"\n    func_stripname '' '.exe' \"$func_basename_result\"\n    func_ltwrapper_scriptname_result=$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper\n}\n\n# func_ltwrapper_p file\n# True iff FILE is a libtool wrapper script or wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_p ()\n{\n    func_ltwrapper_script_p \"$1\" || func_ltwrapper_executable_p \"$1\"\n}\n\n\n# func_execute_cmds commands fail_cmd\n# Execute tilde-delimited COMMANDS.\n# If FAIL_CMD is given, eval that upon failure.\n# FAIL_CMD may read-access the current command in variable CMD!\nfunc_execute_cmds ()\n{\n    $debug_cmd\n\n    save_ifs=$IFS; IFS='~'\n    for cmd in $1; do\n      IFS=$sp$nl\n      eval cmd=\\\"$cmd\\\"\n      IFS=$save_ifs\n      func_show_eval \"$cmd\" \"${2-:}\"\n    done\n    IFS=$save_ifs\n}\n\n\n# func_source file\n# Source FILE, adding directory component if necessary.\n# Note that it is not necessary on cygwin/mingw to append a dot to\n# FILE even if both FILE and FILE.exe exist: automatic-append-.exe\n# behavior happens only for exec(3), not for open(2)!  Also, sourcing\n# 'FILE.' does not work on cygwin managed mounts.\nfunc_source ()\n{\n    $debug_cmd\n\n    case $1 in\n    */* | *\\\\*)\t. \"$1\" ;;\n    *)\t\t. \"./$1\" ;;\n    esac\n}\n\n\n# func_resolve_sysroot PATH\n# Replace a leading = in PATH with a sysroot.  Store the result into\n# func_resolve_sysroot_result\nfunc_resolve_sysroot ()\n{\n  func_resolve_sysroot_result=$1\n  case $func_resolve_sysroot_result in\n  =*)\n    func_stripname '=' '' \"$func_resolve_sysroot_result\"\n    func_resolve_sysroot_result=$lt_sysroot$func_stripname_result\n    ;;\n  esac\n}\n\n# func_replace_sysroot PATH\n# If PATH begins with the sysroot, replace it with = and\n# store the result into func_replace_sysroot_result.\nfunc_replace_sysroot ()\n{\n  case $lt_sysroot:$1 in\n  ?*:\"$lt_sysroot\"*)\n    func_stripname \"$lt_sysroot\" '' \"$1\"\n    func_replace_sysroot_result='='$func_stripname_result\n    ;;\n  *)\n    # Including no sysroot.\n    func_replace_sysroot_result=$1\n    ;;\n  esac\n}\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    $debug_cmd\n\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n\tfunc_append_quoted CC_quoted \"$arg\"\n      done\n      CC_expanded=`func_echo_all $CC`\n      CC_quoted_expanded=`func_echo_all $CC_quoted`\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n      \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if $GREP \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`$SED -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t      # Double-quote args containing other shell metacharacters.\n\t      func_append_quoted CC_quoted \"$arg\"\n\t    done\n\t    CC_expanded=`func_echo_all $CC`\n\t    CC_quoted_expanded=`func_echo_all $CC_quoted`\n\t    case \"$@ \" in\n\t    \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n\t    \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  func_echo \"unable to infer tagged configuration\"\n\t  func_fatal_error \"specify a tag with '--tag'\"\n#\telse\n#\t  func_verbose \"using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n\n# func_write_libtool_object output_name pic_name nonpic_name\n# Create a libtool object file (analogous to a \".la\" file),\n# but don't create it if we're doing a dry run.\nfunc_write_libtool_object ()\n{\n    write_libobj=$1\n    if test yes = \"$build_libtool_libs\"; then\n      write_lobj=\\'$2\\'\n    else\n      write_lobj=none\n    fi\n\n    if test yes = \"$build_old_libs\"; then\n      write_oldobj=\\'$3\\'\n    else\n      write_oldobj=none\n    fi\n\n    $opt_dry_run || {\n      cat >${write_libobj}T <<EOF\n# $write_libobj - a libtool object file\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object=$write_lobj\n\n# Name of the non-PIC object\nnon_pic_object=$write_oldobj\n\nEOF\n      $MV \"${write_libobj}T\" \"$write_libobj\"\n    }\n}\n\n\n##################################################\n# FILE NAME AND PATH CONVERSION HELPER FUNCTIONS #\n##################################################\n\n# func_convert_core_file_wine_to_w32 ARG\n# Helper function used by file name conversion functions when $build is *nix,\n# and $host is mingw, cygwin, or some other w32 environment. Relies on a\n# correctly configured wine environment available, with the winepath program\n# in $build's $PATH.\n#\n# ARG is the $build file name to be converted to w32 format.\n# Result is available in $func_convert_core_file_wine_to_w32_result, and will\n# be empty on error (or when ARG is empty)\nfunc_convert_core_file_wine_to_w32 ()\n{\n  $debug_cmd\n\n  func_convert_core_file_wine_to_w32_result=$1\n  if test -n \"$1\"; then\n    # Unfortunately, winepath does not exit with a non-zero error code, so we\n    # are forced to check the contents of stdout. On the other hand, if the\n    # command is not found, the shell will set an exit code of 127 and print\n    # *an error message* to stdout. So we must check for both error code of\n    # zero AND non-empty stdout, which explains the odd construction:\n    func_convert_core_file_wine_to_w32_tmp=`winepath -w \"$1\" 2>/dev/null`\n    if test \"$?\" -eq 0 && test -n \"$func_convert_core_file_wine_to_w32_tmp\"; then\n      func_convert_core_file_wine_to_w32_result=`$ECHO \"$func_convert_core_file_wine_to_w32_tmp\" |\n        $SED -e \"$sed_naive_backslashify\"`\n    else\n      func_convert_core_file_wine_to_w32_result=\n    fi\n  fi\n}\n# end: func_convert_core_file_wine_to_w32\n\n\n# func_convert_core_path_wine_to_w32 ARG\n# Helper function used by path conversion functions when $build is *nix, and\n# $host is mingw, cygwin, or some other w32 environment. Relies on a correctly\n# configured wine environment available, with the winepath program in $build's\n# $PATH. Assumes ARG has no leading or trailing path separator characters.\n#\n# ARG is path to be converted from $build format to win32.\n# Result is available in $func_convert_core_path_wine_to_w32_result.\n# Unconvertible file (directory) names in ARG are skipped; if no directory names\n# are convertible, then the result may be empty.\nfunc_convert_core_path_wine_to_w32 ()\n{\n  $debug_cmd\n\n  # unfortunately, winepath doesn't convert paths, only file names\n  func_convert_core_path_wine_to_w32_result=\n  if test -n \"$1\"; then\n    oldIFS=$IFS\n    IFS=:\n    for func_convert_core_path_wine_to_w32_f in $1; do\n      IFS=$oldIFS\n      func_convert_core_file_wine_to_w32 \"$func_convert_core_path_wine_to_w32_f\"\n      if test -n \"$func_convert_core_file_wine_to_w32_result\"; then\n        if test -z \"$func_convert_core_path_wine_to_w32_result\"; then\n          func_convert_core_path_wine_to_w32_result=$func_convert_core_file_wine_to_w32_result\n        else\n          func_append func_convert_core_path_wine_to_w32_result \";$func_convert_core_file_wine_to_w32_result\"\n        fi\n      fi\n    done\n    IFS=$oldIFS\n  fi\n}\n# end: func_convert_core_path_wine_to_w32\n\n\n# func_cygpath ARGS...\n# Wrapper around calling the cygpath program via LT_CYGPATH. This is used when\n# when (1) $build is *nix and Cygwin is hosted via a wine environment; or (2)\n# $build is MSYS and $host is Cygwin, or (3) $build is Cygwin. In case (1) or\n# (2), returns the Cygwin file name or path in func_cygpath_result (input\n# file name or path is assumed to be in w32 format, as previously converted\n# from $build's *nix or MSYS format). In case (3), returns the w32 file name\n# or path in func_cygpath_result (input file name or path is assumed to be in\n# Cygwin format). Returns an empty string on error.\n#\n# ARGS are passed to cygpath, with the last one being the file name or path to\n# be converted.\n#\n# Specify the absolute *nix (or w32) name to cygpath in the LT_CYGPATH\n# environment variable; do not put it in $PATH.\nfunc_cygpath ()\n{\n  $debug_cmd\n\n  if test -n \"$LT_CYGPATH\" && test -f \"$LT_CYGPATH\"; then\n    func_cygpath_result=`$LT_CYGPATH \"$@\" 2>/dev/null`\n    if test \"$?\" -ne 0; then\n      # on failure, ensure result is empty\n      func_cygpath_result=\n    fi\n  else\n    func_cygpath_result=\n    func_error \"LT_CYGPATH is empty or specifies non-existent file: '$LT_CYGPATH'\"\n  fi\n}\n#end: func_cygpath\n\n\n# func_convert_core_msys_to_w32 ARG\n# Convert file name or path ARG from MSYS format to w32 format.  Return\n# result in func_convert_core_msys_to_w32_result.\nfunc_convert_core_msys_to_w32 ()\n{\n  $debug_cmd\n\n  # awkward: cmd appends spaces to result\n  func_convert_core_msys_to_w32_result=`( cmd //c echo \"$1\" ) 2>/dev/null |\n    $SED -e 's/[ ]*$//' -e \"$sed_naive_backslashify\"`\n}\n#end: func_convert_core_msys_to_w32\n\n\n# func_convert_file_check ARG1 ARG2\n# Verify that ARG1 (a file name in $build format) was converted to $host\n# format in ARG2. Otherwise, emit an error message, but continue (resetting\n# func_to_host_file_result to ARG1).\nfunc_convert_file_check ()\n{\n  $debug_cmd\n\n  if test -z \"$2\" && test -n \"$1\"; then\n    func_error \"Could not determine host file name corresponding to\"\n    func_error \"  '$1'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback:\n    func_to_host_file_result=$1\n  fi\n}\n# end func_convert_file_check\n\n\n# func_convert_path_check FROM_PATHSEP TO_PATHSEP FROM_PATH TO_PATH\n# Verify that FROM_PATH (a path in $build format) was converted to $host\n# format in TO_PATH. Otherwise, emit an error message, but continue, resetting\n# func_to_host_file_result to a simplistic fallback value (see below).\nfunc_convert_path_check ()\n{\n  $debug_cmd\n\n  if test -z \"$4\" && test -n \"$3\"; then\n    func_error \"Could not determine the host path corresponding to\"\n    func_error \"  '$3'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback.  This is a deliberately simplistic \"conversion\" and\n    # should not be \"improved\".  See libtool.info.\n    if test \"x$1\" != \"x$2\"; then\n      lt_replace_pathsep_chars=\"s|$1|$2|g\"\n      func_to_host_path_result=`echo \"$3\" |\n        $SED -e \"$lt_replace_pathsep_chars\"`\n    else\n      func_to_host_path_result=$3\n    fi\n  fi\n}\n# end func_convert_path_check\n\n\n# func_convert_path_front_back_pathsep FRONTPAT BACKPAT REPL ORIG\n# Modifies func_to_host_path_result by prepending REPL if ORIG matches FRONTPAT\n# and appending REPL if ORIG matches BACKPAT.\nfunc_convert_path_front_back_pathsep ()\n{\n  $debug_cmd\n\n  case $4 in\n  $1 ) func_to_host_path_result=$3$func_to_host_path_result\n    ;;\n  esac\n  case $4 in\n  $2 ) func_append func_to_host_path_result \"$3\"\n    ;;\n  esac\n}\n# end func_convert_path_front_back_pathsep\n\n\n##################################################\n# $build to $host FILE NAME CONVERSION FUNCTIONS #\n##################################################\n# invoked via '$to_host_file_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# Result will be available in $func_to_host_file_result.\n\n\n# func_to_host_file ARG\n# Converts the file name ARG from $build format to $host format. Return result\n# in func_to_host_file_result.\nfunc_to_host_file ()\n{\n  $debug_cmd\n\n  $to_host_file_cmd \"$1\"\n}\n# end func_to_host_file\n\n\n# func_to_tool_file ARG LAZY\n# converts the file name ARG from $build format to toolchain format. Return\n# result in func_to_tool_file_result.  If the conversion in use is listed\n# in (the comma separated) LAZY, no conversion takes place.\nfunc_to_tool_file ()\n{\n  $debug_cmd\n\n  case ,$2, in\n    *,\"$to_tool_file_cmd\",*)\n      func_to_tool_file_result=$1\n      ;;\n    *)\n      $to_tool_file_cmd \"$1\"\n      func_to_tool_file_result=$func_to_host_file_result\n      ;;\n  esac\n}\n# end func_to_tool_file\n\n\n# func_convert_file_noop ARG\n# Copy ARG to func_to_host_file_result.\nfunc_convert_file_noop ()\n{\n  func_to_host_file_result=$1\n}\n# end func_convert_file_noop\n\n\n# func_convert_file_msys_to_w32 ARG\n# Convert file name ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_msys_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_to_host_file_result=$func_convert_core_msys_to_w32_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_w32\n\n\n# func_convert_file_cygwin_to_w32 ARG\n# Convert file name ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_cygwin_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    # because $build is cygwin, we call \"the\" cygpath in $PATH; no need to use\n    # LT_CYGPATH in this case.\n    func_to_host_file_result=`cygpath -m \"$1\"`\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_cygwin_to_w32\n\n\n# func_convert_file_nix_to_w32 ARG\n# Convert file name ARG from *nix to w32 format.  Requires a wine environment\n# and a working winepath. Returns result in func_to_host_file_result.\nfunc_convert_file_nix_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_to_host_file_result=$func_convert_core_file_wine_to_w32_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_w32\n\n\n# func_convert_file_msys_to_cygwin ARG\n# Convert file name ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_file_msys_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_file_result=$func_cygpath_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_cygwin\n\n\n# func_convert_file_nix_to_cygwin ARG\n# Convert file name ARG from *nix to Cygwin format.  Requires Cygwin installed\n# in a wine environment, working winepath, and LT_CYGPATH set.  Returns result\n# in func_to_host_file_result.\nfunc_convert_file_nix_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    # convert from *nix to w32, then use cygpath to convert from w32 to cygwin.\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_file_wine_to_w32_result\"\n    func_to_host_file_result=$func_cygpath_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_cygwin\n\n\n#############################################\n# $build to $host PATH CONVERSION FUNCTIONS #\n#############################################\n# invoked via '$to_host_path_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# The result will be available in $func_to_host_path_result.\n#\n# Path separators are also converted from $build format to $host format.  If\n# ARG begins or ends with a path separator character, it is preserved (but\n# converted to $host format) on output.\n#\n# All path conversion functions are named using the following convention:\n#   file name conversion function    : func_convert_file_X_to_Y ()\n#   path conversion function         : func_convert_path_X_to_Y ()\n# where, for any given $build/$host combination the 'X_to_Y' value is the\n# same.  If conversion functions are added for new $build/$host combinations,\n# the two new functions must follow this pattern, or func_init_to_host_path_cmd\n# will break.\n\n\n# func_init_to_host_path_cmd\n# Ensures that function \"pointer\" variable $to_host_path_cmd is set to the\n# appropriate value, based on the value of $to_host_file_cmd.\nto_host_path_cmd=\nfunc_init_to_host_path_cmd ()\n{\n  $debug_cmd\n\n  if test -z \"$to_host_path_cmd\"; then\n    func_stripname 'func_convert_file_' '' \"$to_host_file_cmd\"\n    to_host_path_cmd=func_convert_path_$func_stripname_result\n  fi\n}\n\n\n# func_to_host_path ARG\n# Converts the path ARG from $build format to $host format. Return result\n# in func_to_host_path_result.\nfunc_to_host_path ()\n{\n  $debug_cmd\n\n  func_init_to_host_path_cmd\n  $to_host_path_cmd \"$1\"\n}\n# end func_to_host_path\n\n\n# func_convert_path_noop ARG\n# Copy ARG to func_to_host_path_result.\nfunc_convert_path_noop ()\n{\n  func_to_host_path_result=$1\n}\n# end func_convert_path_noop\n\n\n# func_convert_path_msys_to_w32 ARG\n# Convert path ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_path_result.\nfunc_convert_path_msys_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from ARG.  MSYS\n    # behavior is inconsistent here; cygpath turns them into '.;' and ';.';\n    # and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=$func_convert_core_msys_to_w32_result\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_w32\n\n\n# func_convert_path_cygwin_to_w32 ARG\n# Convert path ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_cygwin_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_to_host_path_result=`cygpath -m -p \"$func_to_host_path_tmp1\"`\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_cygwin_to_w32\n\n\n# func_convert_path_nix_to_w32 ARG\n# Convert path ARG from *nix to w32 format.  Requires a wine environment and\n# a working winepath.  Returns result in func_to_host_file_result.\nfunc_convert_path_nix_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=$func_convert_core_path_wine_to_w32_result\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_w32\n\n\n# func_convert_path_msys_to_cygwin ARG\n# Convert path ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_path_msys_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_path_result=$func_cygpath_result\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_cygwin\n\n\n# func_convert_path_nix_to_cygwin ARG\n# Convert path ARG from *nix to Cygwin format.  Requires Cygwin installed in a\n# a wine environment, working winepath, and LT_CYGPATH set.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_nix_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from\n    # ARG. msys behavior is inconsistent here, cygpath turns them\n    # into '.;' and ';.', and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_path_wine_to_w32_result\"\n    func_to_host_path_result=$func_cygpath_result\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_cygwin\n\n\n# func_dll_def_p FILE\n# True iff FILE is a Windows DLL '.def' file.\n# Keep in sync with _LT_DLL_DEF_P in libtool.m4\nfunc_dll_def_p ()\n{\n  $debug_cmd\n\n  func_dll_def_p_tmp=`$SED -n \\\n    -e 's/^[\t ]*//' \\\n    -e '/^\\(;.*\\)*$/d' \\\n    -e 's/^\\(EXPORTS\\|LIBRARY\\)\\([\t ].*\\)*$/DEF/p' \\\n    -e q \\\n    \"$1\"`\n  test DEF = \"$func_dll_def_p_tmp\"\n}\n\n\n# func_mode_compile arg...\nfunc_mode_compile ()\n{\n    $debug_cmd\n\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=$nonopt  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n    pie_flag=\n\n    for arg\n    do\n      case $arg_mode in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=$arg\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=$arg\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  test -n \"$libobj\" && \\\n\t    func_fatal_error \"you cannot specify '-o' more than once\"\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-pie | -fpie | -fPIE)\n          func_append pie_flag \" $arg\"\n\t  continue\n\t  ;;\n\n\t-shared | -static | -prefer-pic | -prefer-non-pic)\n\t  func_append later \" $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  func_stripname '-Wc,' '' \"$arg\"\n\t  args=$func_stripname_result\n\t  lastarg=\n\t  save_ifs=$IFS; IFS=,\n\t  for arg in $args; do\n\t    IFS=$save_ifs\n\t    func_append_quoted lastarg \"$arg\"\n\t  done\n\t  IFS=$save_ifs\n\t  func_stripname ' ' '' \"$lastarg\"\n\t  lastarg=$func_stripname_result\n\n\t  # Add the arguments to base_compile.\n\t  func_append base_compile \" $lastarg\"\n\t  continue\n\t  ;;\n\n\t*)\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=$srcfile\n\t  srcfile=$arg\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      func_append_quoted base_compile \"$lastarg\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      func_fatal_error \"you must specify an argument for -Xcompile\"\n      ;;\n    target)\n      func_fatal_error \"you must specify a target with '-o'\"\n      ;;\n    *)\n      # Get the name of the library object.\n      test -z \"$libobj\" && {\n\tfunc_basename \"$srcfile\"\n\tlibobj=$func_basename_result\n      }\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    case $libobj in\n    *.[cCFSifmso] | \\\n    *.ada | *.adb | *.ads | *.asm | \\\n    *.c++ | *.cc | *.ii | *.class | *.cpp | *.cxx | \\\n    *.[fF][09]? | *.for | *.java | *.go | *.obj | *.sx | *.cu | *.cup)\n      func_xform \"$libobj\"\n      libobj=$func_xform_result\n      ;;\n    esac\n\n    case $libobj in\n    *.lo) func_lo2o \"$libobj\"; obj=$func_lo2o_result ;;\n    *)\n      func_fatal_error \"cannot determine name of library object from '$libobj'\"\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -shared)\n\ttest yes = \"$build_libtool_libs\" \\\n\t  || func_fatal_configuration \"cannot build a shared library\"\n\tbuild_old_libs=no\n\tcontinue\n\t;;\n\n      -static)\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    func_quote_for_eval \"$libobj\"\n    test \"X$libobj\" != \"X$func_quote_for_eval_result\" \\\n      && $ECHO \"X$libobj\" | $GREP '[]~#^*{};<>?\"'\"'\"'\t &()|`$[]' \\\n      && func_warning \"libobj name '$libobj' may not contain shell special characters.\"\n    func_dirname_and_basename \"$obj\" \"/\" \"\"\n    objname=$func_basename_result\n    xdir=$func_dirname_result\n    lobj=$xdir$objdir/$objname\n\n    test -z \"$base_compile\" && \\\n      func_fatal_help \"you must specify a compilation command\"\n\n    # Delete any leftover library objects.\n    if test yes = \"$build_old_libs\"; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2* | cegcc*)\n      pic_mode=default\n      ;;\n    esac\n    if test no = \"$pic_mode\" && test pass_all != \"$deplibs_check_method\"; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test no = \"$compiler_c_o\"; then\n      output_obj=`$ECHO \"$srcfile\" | $SED 's%^.*/%%; s%\\.[^.]*$%%'`.$objext\n      lockfile=$output_obj.lock\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test yes = \"$need_locks\"; then\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test warn = \"$need_locks\"; then\n      if test -f \"$lockfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n      func_append removelist \" $output_obj\"\n      $ECHO \"$srcfile\" > \"$lockfile\"\n    fi\n\n    $opt_dry_run || $RM $removelist\n    func_append removelist \" $lockfile\"\n    trap '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE' 1 2 15\n\n    func_to_tool_file \"$srcfile\" func_convert_file_msys_to_w32\n    srcfile=$func_to_tool_file_result\n    func_quote_for_eval \"$srcfile\"\n    qsrcfile=$func_quote_for_eval_result\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test yes = \"$build_libtool_libs\"; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test no != \"$pic_mode\"; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      func_mkdir_p \"$xdir$objdir\"\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tfunc_append command \" -o $lobj\"\n      fi\n\n      func_show_eval_locale \"$command\"\t\\\n          'test -n \"$output_obj\" && $RM $removelist; exit $EXIT_FAILURE'\n\n      if test warn = \"$need_locks\" &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$lobj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n\n      # Allow error messages only from the first compilation.\n      if test yes = \"$suppress_opt\"; then\n\tsuppress_output=' >/dev/null 2>&1'\n      fi\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test yes = \"$build_old_libs\"; then\n      if test yes != \"$pic_mode\"; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile$pie_flag\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test yes = \"$compiler_c_o\"; then\n\tfunc_append command \" -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      func_append command \"$suppress_output\"\n      func_show_eval_locale \"$command\" \\\n        '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'\n\n      if test warn = \"$need_locks\" &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$obj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n    fi\n\n    $opt_dry_run || {\n      func_write_libtool_object \"$libobj\" \"$objdir/$objname\" \"$objname\"\n\n      # Unlock the critical section if it was locked\n      if test no != \"$need_locks\"; then\n\tremovelist=$lockfile\n        $RM \"$lockfile\"\n      fi\n    }\n\n    exit $EXIT_SUCCESS\n}\n\n$opt_help || {\n  test compile = \"$opt_mode\" && func_mode_compile ${1+\"$@\"}\n}\n\nfunc_mode_help ()\n{\n    # We need to display help for each of the modes.\n    case $opt_mode in\n      \"\")\n        # Generic help is extracted from the usage comments\n        # at the start of this file.\n        func_help\n        ;;\n\n      clean)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically '/bin/rm').  RM-OPTIONS are options (such as '-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      compile)\n      $ECHO \\\n\"Usage: $progname [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -no-suppress      do not suppress compiler output for multiple passes\n  -prefer-pic       try to build PIC objects only\n  -prefer-non-pic   try to build non-PIC objects only\n  -shared           do not build a '.o' file suitable for static linking\n  -static           only build a '.o' file suitable for static linking\n  -Wc,FLAG          pass FLAG directly to the compiler\n\nCOMPILE-COMMAND is a command to be used in creating a 'standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix '.c' with the\nlibrary object suffix, '.lo'.\"\n        ;;\n\n      execute)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to '-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n        ;;\n\n      finish)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe '--dry-run' option if you just want to see what would be executed.\"\n        ;;\n\n      install)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the 'install' or 'cp' program.\n\nThe following components of INSTALL-COMMAND are treated specially:\n\n  -inst-prefix-dir PREFIX-DIR  Use PREFIX-DIR as a staging area for installation\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n        ;;\n\n      link)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -bindir BINDIR    specify path to binaries directory (for systems where\n                    libraries must be found in the PATH setting at runtime)\n  -dlopen FILE      '-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n                    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n                    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  Use a list of object files found in FILE to specify objects\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -shared           only do dynamic linking of libtool libraries\n  -shrext SUFFIX    override the standard shared library file extension\n  -static           do not do any dynamic linking of uninstalled libtool libraries\n  -static-libtool-libs\n                    do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n                    specify library version info [each variable defaults to 0]\n  -weak LIBNAME     declare that the target provides the LIBNAME interface\n  -Wc,FLAG\n  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler\n  -Wl,FLAG\n  -Xlinker FLAG     pass linker-specific FLAG directly to the linker\n  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)\n\nAll other options (arguments beginning with '-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in '.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in '.la', then a libtool library is created,\nonly library objects ('.lo' files) may be specified, and '-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in '.a' or '.lib', then a standard library is created\nusing 'ar' and 'ranlib', or on Windows using 'lib'.\n\nIf OUTPUT-FILE ends in '.lo' or '.$objext', then a reloadable object file\nis created, otherwise an executable program is created.\"\n        ;;\n\n      uninstall)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically '/bin/rm').  RM-OPTIONS are options (such as '-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      *)\n        func_fatal_help \"invalid operation mode '$opt_mode'\"\n        ;;\n    esac\n\n    echo\n    $ECHO \"Try '$progname --help' for more information about other modes.\"\n}\n\n# Now that we've collected a possible --mode arg, show help if necessary\nif $opt_help; then\n  if test : = \"$opt_help\"; then\n    func_mode_help\n  else\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\tfunc_mode_help\n      done\n    } | sed -n '1p; 2,$s/^Usage:/  or: /p'\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\techo\n\tfunc_mode_help\n      done\n    } |\n    sed '1d\n      /^When reporting/,/^Report/{\n\tH\n\td\n      }\n      $x\n      /information about other modes/d\n      /more detailed .*MODE/d\n      s/^Usage:.*--mode=\\([^ ]*\\) .*/Description of \\1 mode:/'\n  fi\n  exit $?\nfi\n\n\n# func_mode_execute arg...\nfunc_mode_execute ()\n{\n    $debug_cmd\n\n    # The first argument is the command name.\n    cmd=$nonopt\n    test -z \"$cmd\" && \\\n      func_fatal_help \"you must specify a COMMAND\"\n\n    # Handle -dlopen flags immediately.\n    for file in $opt_dlopen; do\n      test -f \"$file\" \\\n\t|| func_fatal_help \"'$file' is not a file\"\n\n      dir=\n      case $file in\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"'$lib' is not a valid libtool archive\"\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\tfunc_source \"$file\"\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && \\\n\t    func_warning \"'$file' was not linked with '-export-dynamic'\"\n\t  continue\n\tfi\n\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=$func_dirname_result\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  func_append dir \"/$objdir\"\n\telse\n\t  if test ! -f \"$dir/$dlname\"; then\n\t    func_fatal_error \"cannot find '$dlname' in '$dir' or '$dir/$objdir'\"\n\t  fi\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=$func_dirname_result\n\t;;\n\n      *)\n\tfunc_warning \"'-dlopen' is ignored for non-libtool libraries and objects\"\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=$absdir\n\n      # Now add the directory to shlibpath_var.\n      if eval \"test -z \\\"\\$$shlibpath_var\\\"\"; then\n\teval \"$shlibpath_var=\\\"\\$dir\\\"\"\n      else\n\teval \"$shlibpath_var=\\\"\\$dir:\\$$shlibpath_var\\\"\"\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=$magic\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -* | *.la | *.lo ) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif func_ltwrapper_script_p \"$file\"; then\n\t  func_source \"$file\"\n\t  # Transform arg to wrapped name.\n\t  file=$progdir/$program\n\telif func_ltwrapper_executable_p \"$file\"; then\n\t  func_ltwrapper_scriptname \"$file\"\n\t  func_source \"$func_ltwrapper_scriptname_result\"\n\t  # Transform arg to wrapped name.\n\t  file=$progdir/$program\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      func_append_quoted args \"$file\"\n    done\n\n    if $opt_dry_run; then\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$ECHO \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\techo \"export $shlibpath_var\"\n      fi\n      $ECHO \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    else\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\n      do\n\teval \"if test \\\"\\${save_$lt_var+set}\\\" = set; then\n                $lt_var=\\$save_$lt_var; export $lt_var\n\t      else\n\t\t$lt_unset $lt_var\n\t      fi\"\n      done\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\\$cmd$args\n    fi\n}\n\ntest execute = \"$opt_mode\" && func_mode_execute ${1+\"$@\"}\n\n\n# func_mode_finish arg...\nfunc_mode_finish ()\n{\n    $debug_cmd\n\n    libs=\n    libdirs=\n    admincmds=\n\n    for opt in \"$nonopt\" ${1+\"$@\"}\n    do\n      if test -d \"$opt\"; then\n\tfunc_append libdirs \" $opt\"\n\n      elif test -f \"$opt\"; then\n\tif func_lalib_unsafe_p \"$opt\"; then\n\t  func_append libs \" $opt\"\n\telse\n\t  func_warning \"'$opt' is not a valid libtool archive\"\n\tfi\n\n      else\n\tfunc_fatal_error \"invalid argument '$opt'\"\n      fi\n    done\n\n    if test -n \"$libs\"; then\n      if test -n \"$lt_sysroot\"; then\n        sysroot_regex=`$ECHO \"$lt_sysroot\" | $SED \"$sed_make_literal_regex\"`\n        sysroot_cmd=\"s/\\([ ']\\)$sysroot_regex/\\1/g;\"\n      else\n        sysroot_cmd=\n      fi\n\n      # Remove sysroot references\n      if $opt_dry_run; then\n        for lib in $libs; do\n          echo \"removing references to $lt_sysroot and '=' prefixes from $lib\"\n        done\n      else\n        tmpdir=`func_mktempdir`\n        for lib in $libs; do\n\t  sed -e \"$sysroot_cmd s/\\([ ']-[LR]\\)=/\\1/g; s/\\([ ']\\)=/\\1/g\" $lib \\\n\t    > $tmpdir/tmp-la\n\t  mv -f $tmpdir/tmp-la $lib\n\tdone\n        ${RM}r \"$tmpdir\"\n      fi\n    fi\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  func_execute_cmds \"$finish_cmds\" 'admincmds=\"$admincmds\n'\"$cmd\"'\"'\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $opt_dry_run || eval \"$cmds\" || func_append admincmds \"\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    $opt_quiet && exit $EXIT_SUCCESS\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      echo \"----------------------------------------------------------------------\"\n      echo \"Libraries have been installed in:\"\n      for libdir in $libdirs; do\n\t$ECHO \"   $libdir\"\n      done\n      echo\n      echo \"If you ever happen to want to link against installed libraries\"\n      echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n      echo \"specify the full pathname of the library, or use the '-LLIBDIR'\"\n      echo \"flag during linking and do at least one of the following:\"\n      if test -n \"$shlibpath_var\"; then\n\techo \"   - add LIBDIR to the '$shlibpath_var' environment variable\"\n\techo \"     during execution\"\n      fi\n      if test -n \"$runpath_var\"; then\n\techo \"   - add LIBDIR to the '$runpath_var' environment variable\"\n\techo \"     during linking\"\n      fi\n      if test -n \"$hardcode_libdir_flag_spec\"; then\n\tlibdir=LIBDIR\n\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\n\t$ECHO \"   - use the '$flag' linker flag\"\n      fi\n      if test -n \"$admincmds\"; then\n\t$ECHO \"   - have your system administrator run these commands:$admincmds\"\n      fi\n      if test -f /etc/ld.so.conf; then\n\techo \"   - have your system administrator add LIBDIR to '/etc/ld.so.conf'\"\n      fi\n      echo\n\n      echo \"See any operating system documentation about shared libraries for\"\n      case $host in\n\tsolaris2.[6789]|solaris2.1[0-9])\n\t  echo \"more information, such as the ld(1), crle(1) and ld.so(8) manual\"\n\t  echo \"pages.\"\n\t  ;;\n\t*)\n\t  echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n\t  ;;\n      esac\n      echo \"----------------------------------------------------------------------\"\n    fi\n    exit $EXIT_SUCCESS\n}\n\ntest finish = \"$opt_mode\" && func_mode_finish ${1+\"$@\"}\n\n\n# func_mode_install arg...\nfunc_mode_install ()\n{\n    $debug_cmd\n\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$SHELL\" = \"$nonopt\" || test /bin/sh = \"$nonopt\" ||\n       # Allow the use of GNU shtool's install command.\n       case $nonopt in *shtool*) :;; *) false;; esac\n    then\n      # Aesthetically quote it.\n      func_quote_for_eval \"$nonopt\"\n      install_prog=\"$func_quote_for_eval_result \"\n      arg=$1\n      shift\n    else\n      install_prog=\n      arg=$nonopt\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    func_quote_for_eval \"$arg\"\n    func_append install_prog \"$func_quote_for_eval_result\"\n    install_shared_prog=$install_prog\n    case \" $install_prog \" in\n      *[\\\\\\ /]cp\\ *) install_cp=: ;;\n      *) install_cp=false ;;\n    esac\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=false\n    stripme=\n    no_mode=:\n    for arg\n    do\n      arg2=\n      if test -n \"$dest\"; then\n\tfunc_append files \" $dest\"\n\tdest=$arg\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=: ;;\n      -f)\n\tif $install_cp; then :; else\n\t  prev=$arg\n\tfi\n\t;;\n      -g | -m | -o)\n\tprev=$arg\n\t;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*)\n\t;;\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  if test X-m = \"X$prev\" && test -n \"$install_override_mode\"; then\n\t    arg2=$install_override_mode\n\t    no_mode=false\n\t  fi\n\t  prev=\n\telse\n\t  dest=$arg\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      func_quote_for_eval \"$arg\"\n      func_append install_prog \" $func_quote_for_eval_result\"\n      if test -n \"$arg2\"; then\n\tfunc_quote_for_eval \"$arg2\"\n      fi\n      func_append install_shared_prog \" $func_quote_for_eval_result\"\n    done\n\n    test -z \"$install_prog\" && \\\n      func_fatal_help \"you must specify an install program\"\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the '$prev' option requires an argument\"\n\n    if test -n \"$install_override_mode\" && $no_mode; then\n      if $install_cp; then :; else\n\tfunc_quote_for_eval \"$install_override_mode\"\n\tfunc_append install_shared_prog \" -m $func_quote_for_eval_result\"\n      fi\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\tfunc_fatal_help \"no file or destination specified\"\n      else\n\tfunc_fatal_help \"you must specify a destination\"\n      fi\n    fi\n\n    # Strip any trailing slash from the destination.\n    func_stripname '' '/' \"$dest\"\n    dest=$func_stripname_result\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=:\n    if $isdir; then\n      destdir=$dest\n      destname=\n    else\n      func_dirname_and_basename \"$dest\" \"\" \".\"\n      destdir=$func_dirname_result\n      destname=$func_basename_result\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files; shift\n      test \"$#\" -gt 1 && \\\n\tfunc_fatal_help \"'$dest' is not a directory\"\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  func_fatal_help \"'$destdir' must be an absolute directory name\"\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=$magic\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tfunc_append staticlibs \" $file\"\n\t;;\n\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"'$file' is not a valid libtool archive\"\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\tfunc_source \"$file\"\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append current_libdirs \" $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append future_libdirs \" $libdir\" ;;\n\t  esac\n\tfi\n\n\tfunc_dirname \"$file\" \"/\" \"\"\n\tdir=$func_dirname_result\n\tfunc_append dir \"$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$ECHO \"$destdir\" | $SED -e \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  test \"$inst_prefix_dir\" = \"$destdir\" && \\\n\t    func_fatal_error \"error: cannot install '$file' to a directory not ending in $libdir\"\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  func_warning \"relinking '$file'\"\n\t  func_show_eval \"$relink_command\" \\\n\t    'func_fatal_error \"error: relink '\\''$file'\\'' with the above command before installing it\"'\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names; shift\n\tif test -n \"$1\"; then\n\t  realname=$1\n\t  shift\n\n\t  srcname=$realname\n\t  test -n \"$relink_command\" && srcname=${realname}T\n\n\t  # Install the shared library and build the symlinks.\n\t  func_show_eval \"$install_shared_prog $dir/$srcname $destdir/$realname\" \\\n\t      'exit $?'\n\t  tstripme=$stripme\n\t  case $host_os in\n\t  cygwin* | mingw* | pw32* | cegcc*)\n\t    case $realname in\n\t    *.dll.a)\n\t      tstripme=\n\t      ;;\n\t    esac\n\t    ;;\n\t  esac\n\t  if test -n \"$tstripme\" && test -n \"$striplib\"; then\n\t    func_show_eval \"$striplib $destdir/$realname\" 'exit $?'\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    # Try 'ln -sf' first, because the 'ln' binary might depend on\n\t    # the symlink we replace!  Solaris /bin/ln does not understand -f,\n\t    # so we also need to try rm && ln -s.\n\t    for linkname\n\t    do\n\t      test \"$linkname\" != \"$realname\" \\\n\t\t&& func_show_eval \"(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })\"\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=$destdir/$realname\n\t  func_execute_cmds \"$postinstall_cmds\" 'exit $?'\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tfunc_basename \"$file\"\n\tname=$func_basename_result\n\tinstname=$dir/${name}i\n\tfunc_show_eval \"$install_prog $instname $destdir/$name\" 'exit $?'\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && func_append staticlibs \" $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=$destdir/$destname\n\telse\n\t  func_basename \"$file\"\n\t  destfile=$func_basename_result\n\t  destfile=$destdir/$destfile\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  func_lo2o \"$destfile\"\n\t  staticdest=$func_lo2o_result\n\t  ;;\n\t*.$objext)\n\t  staticdest=$destfile\n\t  destfile=\n\t  ;;\n\t*)\n\t  func_fatal_help \"cannot copy a libtool object to '$destfile'\"\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\ttest -n \"$destfile\" && \\\n\t  func_show_eval \"$install_prog $file $destfile\" 'exit $?'\n\n\t# Install the old object if enabled.\n\tif test yes = \"$build_old_libs\"; then\n\t  # Deduce the name of the old-style object file.\n\t  func_lo2o \"$file\"\n\t  staticobj=$func_lo2o_result\n\t  func_show_eval \"$install_prog \\$staticobj \\$staticdest\" 'exit $?'\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=$destdir/$destname\n\telse\n\t  func_basename \"$file\"\n\t  destfile=$func_basename_result\n\t  destfile=$destdir/$destfile\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      func_stripname '' '.exe' \"$file\"\n\t      file=$func_stripname_result\n\t      stripped_ext=.exe\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin* | *mingw*)\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      wrapper=$func_ltwrapper_scriptname_result\n\t    else\n\t      func_stripname '' '.exe' \"$file\"\n\t      wrapper=$func_stripname_result\n\t    fi\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif func_ltwrapper_script_p \"$wrapper\"; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  func_source \"$wrapper\"\n\n\t  # Check the variables that should have been set.\n\t  test -z \"$generated_by_libtool_version\" && \\\n\t    func_fatal_error \"invalid libtool wrapper script '$wrapper'\"\n\n\t  finalize=:\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      func_source \"$lib\"\n\t    fi\n\t    libfile=$libdir/`$ECHO \"$lib\" | $SED 's%^.*/%%g'`\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      func_warning \"'$lib' has not been installed in '$libdir'\"\n\t      finalize=false\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  func_source \"$wrapper\"\n\n\t  outputname=\n\t  if test no = \"$fast_install\" && test -n \"$relink_command\"; then\n\t    $opt_dry_run || {\n\t      if $finalize; then\n\t        tmpdir=`func_mktempdir`\n\t\tfunc_basename \"$file$stripped_ext\"\n\t\tfile=$func_basename_result\n\t        outputname=$tmpdir/$file\n\t        # Replace the output file specification.\n\t        relink_command=`$ECHO \"$relink_command\" | $SED 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t        $opt_quiet || {\n\t          func_quote_for_expand \"$relink_command\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t        }\n\t        if eval \"$relink_command\"; then :\n\t          else\n\t\t  func_error \"error: relink '$file' with the above command before installing it\"\n\t\t  $opt_dry_run || ${RM}r \"$tmpdir\"\n\t\t  continue\n\t        fi\n\t        file=$outputname\n\t      else\n\t        func_warning \"cannot relink '$file'\"\n\t      fi\n\t    }\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$ECHO \"$file$stripped_ext\" | $SED \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyway\n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    func_stripname '' '.exe' \"$destfile\"\n\t    destfile=$func_stripname_result\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tfunc_show_eval \"$install_prog\\$stripme \\$file \\$destfile\" 'exit $?'\n\t$opt_dry_run || if test -n \"$outputname\"; then\n\t  ${RM}r \"$tmpdir\"\n\tfi\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      func_basename \"$file\"\n      name=$func_basename_result\n\n      # Set up the ranlib parameters.\n      oldlib=$destdir/$name\n      func_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n      tool_oldlib=$func_to_tool_file_result\n\n      func_show_eval \"$install_prog \\$file \\$oldlib\" 'exit $?'\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\tfunc_show_eval \"$old_striplib $tool_oldlib\" 'exit $?'\n      fi\n\n      # Do each command in the postinstall commands.\n      func_execute_cmds \"$old_postinstall_cmds\" 'exit $?'\n    done\n\n    test -n \"$future_libdirs\" && \\\n      func_warning \"remember to run '$progname --finish$future_libdirs'\"\n\n    if test -n \"$current_libdirs\"; then\n      # Maybe just do a dry run.\n      $opt_dry_run && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL \"$progpath\" $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest install = \"$opt_mode\" && func_mode_install ${1+\"$@\"}\n\n\n# func_generate_dlsyms outputname originator pic_p\n# Extract symbols from dlprefiles and create ${outputname}S.o with\n# a dlpreopen symbol table.\nfunc_generate_dlsyms ()\n{\n    $debug_cmd\n\n    my_outputname=$1\n    my_originator=$2\n    my_pic_p=${3-false}\n    my_prefix=`$ECHO \"$my_originator\" | sed 's%[^a-zA-Z0-9]%_%g'`\n    my_dlsyms=\n\n    if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n      if test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\tmy_dlsyms=${my_outputname}S.c\n      else\n\tfunc_error \"not configured to extract global symbols from dlpreopened files\"\n      fi\n    fi\n\n    if test -n \"$my_dlsyms\"; then\n      case $my_dlsyms in\n      \"\") ;;\n      *.c)\n\t# Discover the nlist of each of the dlfiles.\n\tnlist=$output_objdir/$my_outputname.nm\n\n\tfunc_show_eval \"$RM $nlist ${nlist}S ${nlist}T\"\n\n\t# Parse the name list into a source file.\n\tfunc_verbose \"creating $output_objdir/$my_dlsyms\"\n\n\t$opt_dry_run || $ECHO > \"$output_objdir/$my_dlsyms\" \"\\\n/* $my_dlsyms - symbol resolution table for '$my_outputname' dlsym emulation. */\n/* Generated by $PROGRAM (GNU $PACKAGE) $VERSION */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n#if defined __GNUC__ && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))\n#pragma GCC diagnostic ignored \\\"-Wstrict-prototypes\\\"\n#endif\n\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT_DLSYM_CONST\n#else\n# define LT_DLSYM_CONST const\n#endif\n\n#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\tif test yes = \"$dlself\"; then\n\t  func_verbose \"generating symbol list for '$output'\"\n\n\t  $opt_dry_run || echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t  # Add our own program objects to the symbol list.\n\t  progfiles=`$ECHO \"$objs$old_deplibs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\t  for progfile in $progfiles; do\n\t    func_to_tool_file \"$progfile\" func_convert_file_msys_to_w32\n\t    func_verbose \"extracting global C symbols from '$func_to_tool_file_result'\"\n\t    $opt_dry_run || eval \"$NM $func_to_tool_file_result | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  if test -n \"$export_symbols_regex\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  # Prepare the list of exported symbols\n\t  if test -z \"$export_symbols\"; then\n\t    export_symbols=$output_objdir/$outputname.exp\n\t    $opt_dry_run || {\n\t      $RM $export_symbols\n\t      eval \"$SED -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \\(.*\\)$/\\1/p' \"'< \"$nlist\" > \"$export_symbols\"'\n\t      case $host in\n\t      *cygwin* | *mingw* | *cegcc* )\n                eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n                eval 'cat \"$export_symbols\" >> \"$output_objdir/$outputname.def\"'\n\t        ;;\n\t      esac\n\t    }\n\t  else\n\t    $opt_dry_run || {\n\t      eval \"$SED -e 's/\\([].[*^$]\\)/\\\\\\\\\\1/g' -e 's/^/ /' -e 's/$/$/'\"' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"'\n\t      eval '$GREP -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t      case $host in\n\t        *cygwin* | *mingw* | *cegcc* )\n\t          eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n\t          eval 'cat \"$nlist\" >> \"$output_objdir/$outputname.def\"'\n\t          ;;\n\t      esac\n\t    }\n\t  fi\n\tfi\n\n\tfor dlprefile in $dlprefiles; do\n\t  func_verbose \"extracting global C symbols from '$dlprefile'\"\n\t  func_basename \"$dlprefile\"\n\t  name=$func_basename_result\n          case $host in\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # if an import library, we need to obtain dlname\n\t      if func_win32_import_lib_p \"$dlprefile\"; then\n\t        func_tr_sh \"$dlprefile\"\n\t        eval \"curr_lafile=\\$libfile_$func_tr_sh_result\"\n\t        dlprefile_dlbasename=\n\t        if test -n \"$curr_lafile\" && func_lalib_p \"$curr_lafile\"; then\n\t          # Use subshell, to avoid clobbering current variable values\n\t          dlprefile_dlname=`source \"$curr_lafile\" && echo \"$dlname\"`\n\t          if test -n \"$dlprefile_dlname\"; then\n\t            func_basename \"$dlprefile_dlname\"\n\t            dlprefile_dlbasename=$func_basename_result\n\t          else\n\t            # no lafile. user explicitly requested -dlpreopen <import library>.\n\t            $sharedlib_from_linklib_cmd \"$dlprefile\"\n\t            dlprefile_dlbasename=$sharedlib_from_linklib_result\n\t          fi\n\t        fi\n\t        $opt_dry_run || {\n\t          if test -n \"$dlprefile_dlbasename\"; then\n\t            eval '$ECHO \": $dlprefile_dlbasename\" >> \"$nlist\"'\n\t          else\n\t            func_warning \"Could not compute DLL name from $name\"\n\t            eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          fi\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe |\n\t            $SED -e '/I __imp/d' -e 's/I __nm_/D /;s/_nm__//' >> '$nlist'\"\n\t        }\n\t      else # not an import lib\n\t        $opt_dry_run || {\n\t          eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t        }\n\t      fi\n\t    ;;\n\t    *)\n\t      $opt_dry_run || {\n\t        eval '$ECHO \": $name \" >> \"$nlist\"'\n\t        func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t        eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t      }\n\t    ;;\n          esac\n\tdone\n\n\t$opt_dry_run || {\n\t  # Make sure we have at least an empty file.\n\t  test -f \"$nlist\" || : > \"$nlist\"\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t    $MV \"$nlist\"T \"$nlist\"\n\t  fi\n\n\t  # Try sorting and uniquifying the output.\n\t  if $GREP -v \"^: \" < \"$nlist\" |\n\t      if sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\tsort -k 3\n\t      else\n\t\tsort +2\n\t      fi |\n\t      uniq > \"$nlist\"S; then\n\t    :\n\t  else\n\t    $GREP -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t  fi\n\n\t  if test -f \"$nlist\"S; then\n\t    eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$my_dlsyms\"'\n\t  else\n\t    echo '/* NONE */' >> \"$output_objdir/$my_dlsyms\"\n\t  fi\n\n\t  func_show_eval '$RM \"${nlist}I\"'\n\t  if test -n \"$global_symbol_to_import\"; then\n\t    eval \"$global_symbol_to_import\"' < \"$nlist\"S > \"$nlist\"I'\n\t  fi\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n\n/* The mapping between symbol names and symbols.  */\ntypedef struct {\n  const char *name;\n  void *address;\n} lt_dlsymlist;\nextern LT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[];\\\n\"\n\n\t  if test -s \"$nlist\"I; then\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\nstatic void lt_syminit(void)\n{\n  LT_DLSYM_CONST lt_dlsymlist *symbol = lt_${my_prefix}_LTX_preloaded_symbols;\n  for (; symbol->name; ++symbol)\n    {\"\n\t    $SED 's/.*/      if (STREQ (symbol->name, \\\"&\\\")) symbol->address = (void *) \\&&;/' < \"$nlist\"I >> \"$output_objdir/$my_dlsyms\"\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n    }\n}\"\n\t  fi\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\nLT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[] =\n{ {\\\"$my_originator\\\", (void *) 0},\"\n\n\t  if test -s \"$nlist\"I; then\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {\\\"@INIT@\\\", (void *) &lt_syminit},\"\n\t  fi\n\n\t  case $need_lib_prefix in\n\t  no)\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  *)\n\t    eval \"$global_symbol_to_c_name_address_lib_prefix\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  esac\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_${my_prefix}_LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t} # !$opt_dry_run\n\n\tpic_flag_for_symtable=\n\tcase \"$compile_command \" in\n\t*\" -static \"*) ;;\n\t*)\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2.*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\" ;;\n\t  *-*-hpux*)\n\t    pic_flag_for_symtable=\" $pic_flag\"  ;;\n\t  *)\n\t    $my_pic_p && pic_flag_for_symtable=\" $pic_flag\"\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tsymtab_cflags=\n\tfor arg in $LTCFLAGS; do\n\t  case $arg in\n\t  -pie | -fpie | -fPIE) ;;\n\t  *) func_append symtab_cflags \" $arg\" ;;\n\t  esac\n\tdone\n\n\t# Now compile the dynamic symbol file.\n\tfunc_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable \"$my_dlsyms\")' 'exit $?'\n\n\t# Clean up the generated files.\n\tfunc_show_eval '$RM \"$output_objdir/$my_dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\" \"${nlist}I\"'\n\n\t# Transform the symbol file into the correct name.\n\tsymfileobj=$output_objdir/${my_outputname}S.$objext\n\tcase $host in\n\t*cygwin* | *mingw* | *cegcc* )\n\t  if test -f \"$output_objdir/$my_outputname.def\"; then\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t  else\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  fi\n\t  ;;\n\t*)\n\t  compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  ;;\n\tesac\n\t;;\n      *)\n\tfunc_fatal_error \"unknown suffix for '$my_dlsyms'\"\n\t;;\n      esac\n    else\n      # We keep going just in case the user didn't refer to\n      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n      # really was required.\n\n      # Nullify the symbol file.\n      compile_command=`$ECHO \"$compile_command\" | $SED \"s% @SYMFILE@%%\"`\n      finalize_command=`$ECHO \"$finalize_command\" | $SED \"s% @SYMFILE@%%\"`\n    fi\n}\n\n# func_cygming_gnu_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is a GNU/binutils-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_gnu_implib_p ()\n{\n  $debug_cmd\n\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_gnu_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $EGREP ' (_head_[A-Za-z0-9_]+_[ad]l*|[A-Za-z0-9_]+_[ad]l*_iname)$'`\n  test -n \"$func_cygming_gnu_implib_tmp\"\n}\n\n# func_cygming_ms_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is an MS-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_ms_implib_p ()\n{\n  $debug_cmd\n\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_ms_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $GREP '_NULL_IMPORT_DESCRIPTOR'`\n  test -n \"$func_cygming_ms_implib_tmp\"\n}\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\n# Despite the name, also deal with 64 bit binaries.\nfunc_win32_libid ()\n{\n  $debug_cmd\n\n  win32_libid_type=unknown\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    # Keep the egrep pattern in sync with the one in _LT_CHECK_MAGIC_METHOD.\n    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null |\n       $EGREP 'file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)' >/dev/null; then\n      case $nm_interface in\n      \"MS dumpbin\")\n\tif func_cygming_ms_implib_p \"$1\" ||\n\t   func_cygming_gnu_implib_p \"$1\"\n\tthen\n\t  win32_nmres=import\n\telse\n\t  win32_nmres=\n\tfi\n\t;;\n      *)\n\tfunc_to_tool_file \"$1\" func_convert_file_msys_to_w32\n\twin32_nmres=`eval $NM -f posix -A \\\"$func_to_tool_file_result\\\" |\n\t  $SED -n -e '\n\t    1,100{\n\t\t/ I /{\n\t\t    s|.*|import|\n\t\t    p\n\t\t    q\n\t\t}\n\t    }'`\n\t;;\n      esac\n      case $win32_nmres in\n      import*)  win32_libid_type=\"x86 archive import\";;\n      *)        win32_libid_type=\"x86 archive static\";;\n      esac\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $ECHO \"$win32_libid_type\"\n}\n\n# func_cygming_dll_for_implib ARG\n#\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib ()\n{\n  $debug_cmd\n\n  sharedlib_from_linklib_result=`$DLLTOOL --identify-strict --identify \"$1\"`\n}\n\n# func_cygming_dll_for_implib_fallback_core SECTION_NAME LIBNAMEs\n#\n# The is the core of a fallback implementation of a\n# platform-specific function to extract the name of the\n# DLL associated with the specified import library LIBNAME.\n#\n# SECTION_NAME is either .idata$6 or .idata$7, depending\n# on the platform and compiler that created the implib.\n#\n# Echos the name of the DLL associated with the\n# specified import library.\nfunc_cygming_dll_for_implib_fallback_core ()\n{\n  $debug_cmd\n\n  match_literal=`$ECHO \"$1\" | $SED \"$sed_make_literal_regex\"`\n  $OBJDUMP -s --section \"$1\" \"$2\" 2>/dev/null |\n    $SED '/^Contents of section '\"$match_literal\"':/{\n      # Place marker at beginning of archive member dllname section\n      s/.*/====MARK====/\n      p\n      d\n    }\n    # These lines can sometimes be longer than 43 characters, but\n    # are always uninteresting\n    /:[\t ]*file format pe[i]\\{,1\\}-/d\n    /^In archive [^:]*:/d\n    # Ensure marker is printed\n    /^====MARK====/p\n    # Remove all lines with less than 43 characters\n    /^.\\{43\\}/!d\n    # From remaining lines, remove first 43 characters\n    s/^.\\{43\\}//' |\n    $SED -n '\n      # Join marker and all lines until next marker into a single line\n      /^====MARK====/ b para\n      H\n      $ b para\n      b\n      :para\n      x\n      s/\\n//g\n      # Remove the marker\n      s/^====MARK====//\n      # Remove trailing dots and whitespace\n      s/[\\. \\t]*$//\n      # Print\n      /./p' |\n    # we now have a list, one entry per line, of the stringified\n    # contents of the appropriate section of all members of the\n    # archive that possess that section. Heuristic: eliminate\n    # all those that have a first or second character that is\n    # a '.' (that is, objdump's representation of an unprintable\n    # character.) This should work for all archives with less than\n    # 0x302f exports -- but will fail for DLLs whose name actually\n    # begins with a literal '.' or a single character followed by\n    # a '.'.\n    #\n    # Of those that remain, print the first one.\n    $SED -e '/^\\./d;/^.\\./d;q'\n}\n\n# func_cygming_dll_for_implib_fallback ARG\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n#\n# This fallback implementation is for use when $DLLTOOL\n# does not support the --identify-strict option.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib_fallback ()\n{\n  $debug_cmd\n\n  if func_cygming_gnu_implib_p \"$1\"; then\n    # binutils import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$7' \"$1\"`\n  elif func_cygming_ms_implib_p \"$1\"; then\n    # ms-generated import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$6' \"$1\"`\n  else\n    # unknown\n    sharedlib_from_linklib_result=\n  fi\n}\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    $debug_cmd\n\n    f_ex_an_ar_dir=$1; shift\n    f_ex_an_ar_oldlib=$1\n    if test yes = \"$lock_old_archive_extraction\"; then\n      lockfile=$f_ex_an_ar_oldlib.lock\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    fi\n    func_show_eval \"(cd \\$f_ex_an_ar_dir && $AR x \\\"\\$f_ex_an_ar_oldlib\\\")\" \\\n\t\t   'stat=$?; rm -f \"$lockfile\"; exit $stat'\n    if test yes = \"$lock_old_archive_extraction\"; then\n      $opt_dry_run || rm -f \"$lockfile\"\n    fi\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      func_fatal_error \"object name conflicts in archive: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\"\n    fi\n}\n\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    $debug_cmd\n\n    my_gentop=$1; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\n    my_xlib=\n    my_xabs=\n    my_xdir=\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=$my_xlib ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      func_basename \"$my_xlib\"\n      my_xlib=$func_basename_result\n      my_xlib_u=$my_xlib\n      while :; do\n        case \" $extracted_archives \" in\n\t*\" $my_xlib_u \"*)\n\t  func_arith $extracted_serial + 1\n\t  extracted_serial=$func_arith_result\n\t  my_xlib_u=lt$extracted_serial-$my_xlib ;;\n\t*) break ;;\n\tesac\n      done\n      extracted_archives=\"$extracted_archives $my_xlib_u\"\n      my_xdir=$my_gentop/$my_xlib_u\n\n      func_mkdir_p \"$my_xdir\"\n\n      case $host in\n      *-darwin*)\n\tfunc_verbose \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\t$opt_dry_run || {\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  func_basename \"$darwin_archive\"\n\t  darwin_base_archive=$func_basename_result\n\t  darwin_arches=`$LIPO -info \"$darwin_archive\" 2>/dev/null | $GREP Architectures 2>/dev/null || true`\n\t  if test -n \"$darwin_arches\"; then\n\t    darwin_arches=`$ECHO \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    func_verbose \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches; do\n\t      func_mkdir_p \"unfat-$$/$darwin_base_archive-$darwin_arch\"\n\t      $LIPO -thin $darwin_arch -output \"unfat-$$/$darwin_base_archive-$darwin_arch/$darwin_base_archive\" \"$darwin_archive\"\n\t      cd \"unfat-$$/$darwin_base_archive-$darwin_arch\"\n\t      func_extract_an_archive \"`pwd`\" \"$darwin_base_archive\"\n\t      cd \"$darwin_curdir\"\n\t      $RM \"unfat-$$/$darwin_base_archive-$darwin_arch/$darwin_base_archive\"\n\t    done # $darwin_arches\n            ## Okay now we've a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print | $SED -e \"$basename\" | sort -u`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | sort | $NL2SP`\n\t      $LIPO -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    $RM -rf unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd $darwin_orig_dir\n\t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\t} # !$opt_dry_run\n\t;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | sort | $NL2SP`\n    done\n\n    func_extract_archives_result=$my_oldobjs\n}\n\n\n# func_emit_wrapper [arg=no]\n#\n# Emit a libtool wrapper script on stdout.\n# Don't directly open a file because we may want to\n# incorporate the script contents within a cygwin/mingw\n# wrapper executable.  Must ONLY be called from within\n# func_mode_link because it depends on a number of variables\n# set therein.\n#\n# ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\n# variable will take.  If 'yes', then the emitted script\n# will assume that the directory where it is stored is\n# the $objdir directory.  This is a cygwin/mingw-specific\n# behavior.\nfunc_emit_wrapper ()\n{\n\tfunc_emit_wrapper_arg1=${1-no}\n\n\t$ECHO \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='$sed_quote_subst'\n\n# Be Bourne compatible\nif test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variables:\n  generated_by_libtool_version='$macro_version'\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$ECHO are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    file=\\\"\\$0\\\"\"\n\n    qECHO=`$ECHO \"$ECHO\" | $SED \"$sed_quote_subst\"`\n    $ECHO \"\\\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$1\n_LTECHO_EOF'\n}\n    ECHO=\\\"$qECHO\\\"\n  fi\n\n# Very basic option parsing. These options are (a) specific to\n# the libtool wrapper, (b) are identical between the wrapper\n# /script/ and the wrapper /executable/ that is used only on\n# windows platforms, and (c) all begin with the string \"--lt-\"\n# (application programs are unlikely to have options that match\n# this pattern).\n#\n# There are only two supported options: --lt-debug and\n# --lt-dump-script. There is, deliberately, no --lt-help.\n#\n# The first argument to this parsing function should be the\n# script's $0 value, followed by \"$@\".\nlt_option_debug=\nfunc_parse_lt_options ()\n{\n  lt_script_arg0=\\$0\n  shift\n  for lt_opt\n  do\n    case \\\"\\$lt_opt\\\" in\n    --lt-debug) lt_option_debug=1 ;;\n    --lt-dump-script)\n        lt_dump_D=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%/[^/]*$%%'\\`\n        test \\\"X\\$lt_dump_D\\\" = \\\"X\\$lt_script_arg0\\\" && lt_dump_D=.\n        lt_dump_F=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%^.*/%%'\\`\n        cat \\\"\\$lt_dump_D/\\$lt_dump_F\\\"\n        exit 0\n      ;;\n    --lt-*)\n        \\$ECHO \\\"Unrecognized --lt- option: '\\$lt_opt'\\\" 1>&2\n        exit 1\n      ;;\n    esac\n  done\n\n  # Print the debug banner immediately:\n  if test -n \\\"\\$lt_option_debug\\\"; then\n    echo \\\"$outputname:$output:\\$LINENO: libtool wrapper (GNU $PACKAGE) $VERSION\\\" 1>&2\n  fi\n}\n\n# Used when --lt-debug. Prints its arguments to stdout\n# (redirection is the responsibility of the caller)\nfunc_lt_dump_args ()\n{\n  lt_dump_args_N=1;\n  for lt_arg\n  do\n    \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[\\$lt_dump_args_N]: \\$lt_arg\\\"\n    lt_dump_args_N=\\`expr \\$lt_dump_args_N + 1\\`\n  done\n}\n\n# Core function for launching the target application\nfunc_exec_program_core ()\n{\n\"\n  case $host in\n  # Backslashes separate directories on plain windows\n  *-*-mingw | *-*-os2* | *-cegcc*)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[0]: \\$progdir\\\\\\\\\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir\\\\\\\\\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n\n  *)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[0]: \\$progdir/\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir/\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n  esac\n  $ECHO \"\\\n      \\$ECHO \\\"\\$0: cannot exec \\$program \\$*\\\" 1>&2\n      exit 1\n}\n\n# A function to encapsulate launching the target application\n# Strips options in the --lt-* namespace from \\$@ and\n# launches target application with the remaining arguments.\nfunc_exec_program ()\n{\n  case \\\" \\$* \\\" in\n  *\\\\ --lt-*)\n    for lt_wr_arg\n    do\n      case \\$lt_wr_arg in\n      --lt-*) ;;\n      *) set x \\\"\\$@\\\" \\\"\\$lt_wr_arg\\\"; shift;;\n      esac\n      shift\n    done ;;\n  esac\n  func_exec_program_core \\${1+\\\"\\$@\\\"}\n}\n\n  # Parse options\n  func_parse_lt_options \\\"\\$0\\\" \\${1+\\\"\\$@\\\"}\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  done\n\n  # Usually 'no', except on cygwin/mingw when embedded into\n  # the cwrapper.\n  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=$func_emit_wrapper_arg1\n  if test \\\"\\$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\\\" = \\\"yes\\\"; then\n    # special case for '.'\n    if test \\\"\\$thisdir\\\" = \\\".\\\"; then\n      thisdir=\\`pwd\\`\n    fi\n    # remove .libs from thisdir\n    case \\\"\\$thisdir\\\" in\n    *[\\\\\\\\/]$objdir ) thisdir=\\`\\$ECHO \\\"\\$thisdir\\\" | $SED 's%[\\\\\\\\/][^\\\\\\\\/]*$%%'\\` ;;\n    $objdir )   thisdir=. ;;\n    esac\n  fi\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test yes = \"$fast_install\"; then\n\t  $ECHO \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" ||\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | $SED 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $MKDIR \\\"\\$progdir\\\"\n    else\n      $RM \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $ECHO \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\$relink_command 2>&1\\`; then :\n      else\n\t$ECHO \\\"\\$relink_command_output\\\" >&2\n\t$RM \\\"\\$progdir/\\$file\\\"\n\texit 1\n      fi\n    fi\n\n    $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $RM \\\"\\$progdir/\\$program\\\";\n      $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $RM \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $ECHO \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$ECHO \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# fixup the dll searchpath if we need to.\n\t#\n\t# Fix the DLL searchpath if we need to.  Do this before prepending\n\t# to shlibpath, because on Windows, both are PATH and uninstalled\n\t# libraries must come first.\n\tif test -n \"$dllsearchpath\"; then\n\t  $ECHO \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t# Export our shlibpath_var if we have one.\n\tif test yes = \"$shlibpath_overrides_runpath\" && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $ECHO \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" | $SED 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t$ECHO \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n      func_exec_program \\${1+\\\"\\$@\\\"}\n    fi\n  else\n    # The program doesn't exist.\n    \\$ECHO \\\"\\$0: error: '\\$progdir/\\$program' does not exist\\\" 1>&2\n    \\$ECHO \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    \\$ECHO \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit 1\n  fi\nfi\\\n\"\n}\n\n\n# func_emit_cwrapperexe_src\n# emit the source code for a wrapper executable on stdout\n# Must ONLY be called from within func_mode_link because\n# it depends on a number of variable set therein.\nfunc_emit_cwrapperexe_src ()\n{\n\tcat <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n*/\nEOF\n\t    cat <<\"EOF\"\n#ifdef _MSC_VER\n# define _CRT_SECURE_NO_DEPRECATE 1\n#endif\n#include <stdio.h>\n#include <stdlib.h>\n#ifdef _MSC_VER\n# include <direct.h>\n# include <process.h>\n# include <io.h>\n#else\n# include <unistd.h>\n# include <stdint.h>\n# ifdef __CYGWIN__\n#  include <io.h>\n# endif\n#endif\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n#include <string.h>\n#include <ctype.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <sys/stat.h>\n\n#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)\n\n/* declarations of non-ANSI functions */\n#if defined __MINGW32__\n# ifdef __STRICT_ANSI__\nint _putenv (const char *);\n# endif\n#elif defined __CYGWIN__\n# ifdef __STRICT_ANSI__\nchar *realpath (const char *, char *);\nint putenv (char *);\nint setenv (const char *, const char *, int);\n# endif\n/* #elif defined other_platform || defined ... */\n#endif\n\n/* portability defines, excluding path handling macros */\n#if defined _MSC_VER\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n# define S_IXUSR _S_IEXEC\n#elif defined __MINGW32__\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n#elif defined __CYGWIN__\n# define HAVE_SETENV\n# define FOPEN_WB \"wb\"\n/* #elif defined other platforms ... */\n#endif\n\n#if defined PATH_MAX\n# define LT_PATHMAX PATH_MAX\n#elif defined MAXPATHLEN\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef S_IXOTH\n# define S_IXOTH 0\n#endif\n#ifndef S_IXGRP\n# define S_IXGRP 0\n#endif\n\n/* path handling portability macros */\n#ifndef DIR_SEPARATOR\n# define DIR_SEPARATOR '/'\n# define PATH_SEPARATOR ':'\n#endif\n\n#if defined _WIN32 || defined __MSDOS__ || defined __DJGPP__ || \\\n  defined __OS2__\n# define HAVE_DOS_BASED_FILE_SYSTEM\n# define FOPEN_WB \"wb\"\n# ifndef DIR_SEPARATOR_2\n#  define DIR_SEPARATOR_2 '\\\\'\n# endif\n# ifndef PATH_SEPARATOR_2\n#  define PATH_SEPARATOR_2 ';'\n# endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n\t(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#ifndef PATH_SEPARATOR_2\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)\n#else /* PATH_SEPARATOR_2 */\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)\n#endif /* PATH_SEPARATOR_2 */\n\n#ifndef FOPEN_WB\n# define FOPEN_WB \"w\"\n#endif\n#ifndef _O_BINARY\n# define _O_BINARY 0\n#endif\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free (stale); stale = 0; } \\\n} while (0)\n\n#if defined LT_DEBUGWRAPPER\nstatic int lt_debug = 1;\n#else\nstatic int lt_debug = 0;\n#endif\n\nconst char *program_name = \"libtool-wrapper\"; /* in case xstrdup fails */\n\nvoid *xmalloc (size_t num);\nchar *xstrdup (const char *string);\nconst char *base_name (const char *name);\nchar *find_executable (const char *wrapper);\nchar *chase_symlinks (const char *pathspec);\nint make_executable (const char *path);\nint check_executable (const char *path);\nchar *strendzap (char *str, const char *pat);\nvoid lt_debugprintf (const char *file, int line, const char *fmt, ...);\nvoid lt_fatal (const char *file, int line, const char *message, ...);\nstatic const char *nonnull (const char *s);\nstatic const char *nonempty (const char *s);\nvoid lt_setenv (const char *name, const char *value);\nchar *lt_extend_str (const char *orig_value, const char *add, int to_end);\nvoid lt_update_exe_path (const char *name, const char *value);\nvoid lt_update_lib_path (const char *name, const char *value);\nchar **prepare_spawn (char **argv);\nvoid lt_dump_script (FILE *f);\nEOF\n\n\t    cat <<EOF\nvolatile const char * MAGIC_EXE = \"$magic_exe\";\nconst char * LIB_PATH_VARNAME = \"$shlibpath_var\";\nEOF\n\n\t    if test yes = \"$shlibpath_overrides_runpath\" && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n              func_to_host_path \"$temp_rpath\"\n\t      cat <<EOF\nconst char * LIB_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * LIB_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test -n \"$dllsearchpath\"; then\n              func_to_host_path \"$dllsearchpath:\"\n\t      cat <<EOF\nconst char * EXE_PATH_VARNAME = \"PATH\";\nconst char * EXE_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * EXE_PATH_VARNAME = \"\";\nconst char * EXE_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test yes = \"$fast_install\"; then\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"lt-$outputname\"; /* hopefully, no .exe */\nEOF\n\t    else\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"$outputname\"; /* hopefully, no .exe */\nEOF\n\t    fi\n\n\n\t    cat <<\"EOF\"\n\n#define LTWRAPPER_OPTION_PREFIX         \"--lt-\"\n\nstatic const char *ltwrapper_option_prefix = LTWRAPPER_OPTION_PREFIX;\nstatic const char *dumpscript_opt       = LTWRAPPER_OPTION_PREFIX \"dump-script\";\nstatic const char *debug_opt            = LTWRAPPER_OPTION_PREFIX \"debug\";\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int  newargc;\n  char *tmp_pathspec;\n  char *actual_cwrapper_path;\n  char *actual_cwrapper_name;\n  char *target_name;\n  char *lt_argv_zero;\n  int rval = 127;\n\n  int i;\n\n  program_name = (char *) xstrdup (base_name (argv[0]));\n  newargz = XMALLOC (char *, (size_t) argc + 1);\n\n  /* very simple arg parsing; don't want to rely on getopt\n   * also, copy all non cwrapper options to newargz, except\n   * argz[0], which is handled differently\n   */\n  newargc=0;\n  for (i = 1; i < argc; i++)\n    {\n      if (STREQ (argv[i], dumpscript_opt))\n\t{\nEOF\n\t    case $host in\n\t      *mingw* | *cygwin* )\n\t\t# make stdout use \"unix\" line endings\n\t\techo \"          setmode(1,_O_BINARY);\"\n\t\t;;\n\t      esac\n\n\t    cat <<\"EOF\"\n\t  lt_dump_script (stdout);\n\t  return 0;\n\t}\n      if (STREQ (argv[i], debug_opt))\n\t{\n          lt_debug = 1;\n          continue;\n\t}\n      if (STREQ (argv[i], ltwrapper_option_prefix))\n        {\n          /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX\n             namespace, but it is not one of the ones we know about and\n             have already dealt with, above (inluding dump-script), then\n             report an error. Otherwise, targets might begin to believe\n             they are allowed to use options in the LTWRAPPER_OPTION_PREFIX\n             namespace. The first time any user complains about this, we'll\n             need to make LTWRAPPER_OPTION_PREFIX a configure-time option\n             or a configure.ac-settable value.\n           */\n          lt_fatal (__FILE__, __LINE__,\n\t\t    \"unrecognized %s option: '%s'\",\n                    ltwrapper_option_prefix, argv[i]);\n        }\n      /* otherwise ... */\n      newargz[++newargc] = xstrdup (argv[i]);\n    }\n  newargz[++newargc] = NULL;\n\nEOF\n\t    cat <<EOF\n  /* The GNU banner must be the first non-error debug message */\n  lt_debugprintf (__FILE__, __LINE__, \"libtool wrapper (GNU $PACKAGE) $VERSION\\n\");\nEOF\n\t    cat <<\"EOF\"\n  lt_debugprintf (__FILE__, __LINE__, \"(main) argv[0]: %s\\n\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__, \"(main) program_name: %s\\n\", program_name);\n\n  tmp_pathspec = find_executable (argv[0]);\n  if (tmp_pathspec == NULL)\n    lt_fatal (__FILE__, __LINE__, \"couldn't find %s\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (before symlink chase) at: %s\\n\",\n\t\t  tmp_pathspec);\n\n  actual_cwrapper_path = chase_symlinks (tmp_pathspec);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (after symlink chase) at: %s\\n\",\n\t\t  actual_cwrapper_path);\n  XFREE (tmp_pathspec);\n\n  actual_cwrapper_name = xstrdup (base_name (actual_cwrapper_path));\n  strendzap (actual_cwrapper_path, actual_cwrapper_name);\n\n  /* wrapper name transforms */\n  strendzap (actual_cwrapper_name, \".exe\");\n  tmp_pathspec = lt_extend_str (actual_cwrapper_name, \".exe\", 1);\n  XFREE (actual_cwrapper_name);\n  actual_cwrapper_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  /* target_name transforms -- use actual target program name; might have lt- prefix */\n  target_name = xstrdup (base_name (TARGET_PROGRAM_NAME));\n  strendzap (target_name, \".exe\");\n  tmp_pathspec = lt_extend_str (target_name, \".exe\", 1);\n  XFREE (target_name);\n  target_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(main) libtool target name: %s\\n\",\n\t\t  target_name);\nEOF\n\n\t    cat <<EOF\n  newargz[0] =\n    XMALLOC (char, (strlen (actual_cwrapper_path) +\n\t\t    strlen (\"$objdir\") + 1 + strlen (actual_cwrapper_name) + 1));\n  strcpy (newargz[0], actual_cwrapper_path);\n  strcat (newargz[0], \"$objdir\");\n  strcat (newargz[0], \"/\");\nEOF\n\n\t    cat <<\"EOF\"\n  /* stop here, and copy so we don't have to do this twice */\n  tmp_pathspec = xstrdup (newargz[0]);\n\n  /* do NOT want the lt- prefix here, so use actual_cwrapper_name */\n  strcat (newargz[0], actual_cwrapper_name);\n\n  /* DO want the lt- prefix here if it exists, so use target_name */\n  lt_argv_zero = lt_extend_str (tmp_pathspec, target_name, 1);\n  XFREE (tmp_pathspec);\n  tmp_pathspec = NULL;\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t    cat <<\"EOF\"\n  {\n    char* p;\n    while ((p = strchr (newargz[0], '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n    while ((p = strchr (lt_argv_zero, '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n  }\nEOF\n\t    ;;\n\t    esac\n\n\t    cat <<\"EOF\"\n  XFREE (target_name);\n  XFREE (actual_cwrapper_path);\n  XFREE (actual_cwrapper_name);\n\n  lt_setenv (\"BIN_SH\", \"xpg4\"); /* for Tru64 */\n  lt_setenv (\"DUALCASE\", \"1\");  /* for MSK sh */\n  /* Update the DLL searchpath.  EXE_PATH_VALUE ($dllsearchpath) must\n     be prepended before (that is, appear after) LIB_PATH_VALUE ($temp_rpath)\n     because on Windows, both *_VARNAMEs are PATH but uninstalled\n     libraries must come first. */\n  lt_update_exe_path (EXE_PATH_VARNAME, EXE_PATH_VALUE);\n  lt_update_lib_path (LIB_PATH_VARNAME, LIB_PATH_VALUE);\n\n  lt_debugprintf (__FILE__, __LINE__, \"(main) lt_argv_zero: %s\\n\",\n\t\t  nonnull (lt_argv_zero));\n  for (i = 0; i < newargc; i++)\n    {\n      lt_debugprintf (__FILE__, __LINE__, \"(main) newargz[%d]: %s\\n\",\n\t\t      i, nonnull (newargz[i]));\n    }\n\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n  /* execv doesn't actually work on mingw as expected on unix */\n  newargz = prepare_spawn (newargz);\n  rval = (int) _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);\n  if (rval == -1)\n    {\n      /* failed to start process */\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"(main) failed to launch target \\\"%s\\\": %s\\n\",\n\t\t      lt_argv_zero, nonnull (strerror (errno)));\n      return 127;\n    }\n  return rval;\nEOF\n\t\t;;\n\t      *)\n\t\tcat <<\"EOF\"\n  execv (lt_argv_zero, newargz);\n  return rval; /* =127, but avoids unused variable warning */\nEOF\n\t\t;;\n\t    esac\n\n\t    cat <<\"EOF\"\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void *p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (__FILE__, __LINE__, \"memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1),\n\t\t\t  string) : NULL;\n}\n\nconst char *\nbase_name (const char *name)\n{\n  const char *base;\n\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha ((unsigned char) name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return base;\n}\n\nint\ncheck_executable (const char *path)\n{\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(check_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if ((stat (path, &st) >= 0)\n      && (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)))\n    return 1;\n  else\n    return 0;\n}\n\nint\nmake_executable (const char *path)\n{\n  int rval = 0;\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(make_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if (stat (path, &st) >= 0)\n    {\n      rval = chmod (path, st.st_mode | S_IXOTH | S_IXGRP | S_IXUSR);\n    }\n  return rval;\n}\n\n/* Searches for the full path of the wrapper.  Returns\n   newly allocated full path name if found, NULL otherwise\n   Does not chase symlinks, even on platforms that support them.\n*/\nchar *\nfind_executable (const char *wrapper)\n{\n  int has_slash = 0;\n  const char *p;\n  const char *p_next;\n  /* static buffer for getcwd */\n  char tmp[LT_PATHMAX + 1];\n  size_t tmp_len;\n  char *concat_name;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(find_executable): %s\\n\",\n                  nonempty (wrapper));\n\n  if ((wrapper == NULL) || (*wrapper == '\\0'))\n    return NULL;\n\n  /* Absolute path? */\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n  if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')\n    {\n      concat_name = xstrdup (wrapper);\n      if (check_executable (concat_name))\n\treturn concat_name;\n      XFREE (concat_name);\n    }\n  else\n    {\n#endif\n      if (IS_DIR_SEPARATOR (wrapper[0]))\n\t{\n\t  concat_name = xstrdup (wrapper);\n\t  if (check_executable (concat_name))\n\t    return concat_name;\n\t  XFREE (concat_name);\n\t}\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n    }\n#endif\n\n  for (p = wrapper; *p; p++)\n    if (*p == '/')\n      {\n\thas_slash = 1;\n\tbreak;\n      }\n  if (!has_slash)\n    {\n      /* no slashes; search PATH */\n      const char *path = getenv (\"PATH\");\n      if (path != NULL)\n\t{\n\t  for (p = path; *p; p = p_next)\n\t    {\n\t      const char *q;\n\t      size_t p_len;\n\t      for (q = p; *q; q++)\n\t\tif (IS_PATH_SEPARATOR (*q))\n\t\t  break;\n\t      p_len = (size_t) (q - p);\n\t      p_next = (*q == '\\0' ? q : q + 1);\n\t      if (p_len == 0)\n\t\t{\n\t\t  /* empty path: current directory */\n\t\t  if (getcwd (tmp, LT_PATHMAX) == NULL)\n\t\t    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n                              nonnull (strerror (errno)));\n\t\t  tmp_len = strlen (tmp);\n\t\t  concat_name =\n\t\t    XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, tmp, tmp_len);\n\t\t  concat_name[tmp_len] = '/';\n\t\t  strcpy (concat_name + tmp_len + 1, wrapper);\n\t\t}\n\t      else\n\t\t{\n\t\t  concat_name =\n\t\t    XMALLOC (char, p_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, p, p_len);\n\t\t  concat_name[p_len] = '/';\n\t\t  strcpy (concat_name + p_len + 1, wrapper);\n\t\t}\n\t      if (check_executable (concat_name))\n\t\treturn concat_name;\n\t      XFREE (concat_name);\n\t    }\n\t}\n      /* not found in PATH; assume curdir */\n    }\n  /* Relative path | not found in path: prepend cwd */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n              nonnull (strerror (errno)));\n  tmp_len = strlen (tmp);\n  concat_name = XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n  memcpy (concat_name, tmp, tmp_len);\n  concat_name[tmp_len] = '/';\n  strcpy (concat_name + tmp_len + 1, wrapper);\n\n  if (check_executable (concat_name))\n    return concat_name;\n  XFREE (concat_name);\n  return NULL;\n}\n\nchar *\nchase_symlinks (const char *pathspec)\n{\n#ifndef S_ISLNK\n  return xstrdup (pathspec);\n#else\n  char buf[LT_PATHMAX];\n  struct stat s;\n  char *tmp_pathspec = xstrdup (pathspec);\n  char *p;\n  int has_symlinks = 0;\n  while (strlen (tmp_pathspec) && !has_symlinks)\n    {\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"checking path component for symlinks: %s\\n\",\n\t\t      tmp_pathspec);\n      if (lstat (tmp_pathspec, &s) == 0)\n\t{\n\t  if (S_ISLNK (s.st_mode) != 0)\n\t    {\n\t      has_symlinks = 1;\n\t      break;\n\t    }\n\n\t  /* search backwards for last DIR_SEPARATOR */\n\t  p = tmp_pathspec + strlen (tmp_pathspec) - 1;\n\t  while ((p > tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    p--;\n\t  if ((p == tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    {\n\t      /* no more DIR_SEPARATORS left */\n\t      break;\n\t    }\n\t  *p = '\\0';\n\t}\n      else\n\t{\n\t  lt_fatal (__FILE__, __LINE__,\n\t\t    \"error accessing file \\\"%s\\\": %s\",\n\t\t    tmp_pathspec, nonnull (strerror (errno)));\n\t}\n    }\n  XFREE (tmp_pathspec);\n\n  if (!has_symlinks)\n    {\n      return xstrdup (pathspec);\n    }\n\n  tmp_pathspec = realpath (pathspec, buf);\n  if (tmp_pathspec == 0)\n    {\n      lt_fatal (__FILE__, __LINE__,\n\t\t\"could not follow symlinks for %s\", pathspec);\n    }\n  return xstrdup (tmp_pathspec);\n#endif\n}\n\nchar *\nstrendzap (char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert (str != NULL);\n  assert (pat != NULL);\n\n  len = strlen (str);\n  patlen = strlen (pat);\n\n  if (patlen <= len)\n    {\n      str += len - patlen;\n      if (STREQ (str, pat))\n\t*str = '\\0';\n    }\n  return str;\n}\n\nvoid\nlt_debugprintf (const char *file, int line, const char *fmt, ...)\n{\n  va_list args;\n  if (lt_debug)\n    {\n      (void) fprintf (stderr, \"%s:%s:%d: \", program_name, file, line);\n      va_start (args, fmt);\n      (void) vfprintf (stderr, fmt, args);\n      va_end (args);\n    }\n}\n\nstatic void\nlt_error_core (int exit_status, const char *file,\n\t       int line, const char *mode,\n\t       const char *message, va_list ap)\n{\n  fprintf (stderr, \"%s:%s:%d: %s: \", program_name, file, line, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *file, int line, const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, file, line, \"FATAL\", message, ap);\n  va_end (ap);\n}\n\nstatic const char *\nnonnull (const char *s)\n{\n  return s ? s : \"(null)\";\n}\n\nstatic const char *\nnonempty (const char *s)\n{\n  return (s && !*s) ? \"(empty)\" : nonnull (s);\n}\n\nvoid\nlt_setenv (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_setenv) setting '%s' to '%s'\\n\",\n                  nonnull (name), nonnull (value));\n  {\n#ifdef HAVE_SETENV\n    /* always make a copy, for consistency with !HAVE_SETENV */\n    char *str = xstrdup (value);\n    setenv (name, str, 1);\n#else\n    size_t len = strlen (name) + 1 + strlen (value) + 1;\n    char *str = XMALLOC (char, len);\n    sprintf (str, \"%s=%s\", name, value);\n    if (putenv (str) != EXIT_SUCCESS)\n      {\n        XFREE (str);\n      }\n#endif\n  }\n}\n\nchar *\nlt_extend_str (const char *orig_value, const char *add, int to_end)\n{\n  char *new_value;\n  if (orig_value && *orig_value)\n    {\n      size_t orig_value_len = strlen (orig_value);\n      size_t add_len = strlen (add);\n      new_value = XMALLOC (char, add_len + orig_value_len + 1);\n      if (to_end)\n        {\n          strcpy (new_value, orig_value);\n          strcpy (new_value + orig_value_len, add);\n        }\n      else\n        {\n          strcpy (new_value, add);\n          strcpy (new_value + add_len, orig_value);\n        }\n    }\n  else\n    {\n      new_value = xstrdup (add);\n    }\n  return new_value;\n}\n\nvoid\nlt_update_exe_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_exe_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      /* some systems can't cope with a ':'-terminated path #' */\n      size_t len = strlen (new_value);\n      while ((len > 0) && IS_PATH_SEPARATOR (new_value[len-1]))\n        {\n          new_value[--len] = '\\0';\n        }\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nvoid\nlt_update_lib_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_lib_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nEOF\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n\n/* Prepares an argument vector before calling spawn().\n   Note that spawn() does not by itself call the command interpreter\n     (getenv (\"COMSPEC\") != NULL ? getenv (\"COMSPEC\") :\n      ({ OSVERSIONINFO v; v.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n         GetVersionEx(&v);\n         v.dwPlatformId == VER_PLATFORM_WIN32_NT;\n      }) ? \"cmd.exe\" : \"command.com\").\n   Instead it simply concatenates the arguments, separated by ' ', and calls\n   CreateProcess().  We must quote the arguments since Win32 CreateProcess()\n   interprets characters like ' ', '\\t', '\\\\', '\"' (but not '<' and '>') in a\n   special way:\n   - Space and tab are interpreted as delimiters. They are not treated as\n     delimiters if they are surrounded by double quotes: \"...\".\n   - Unescaped double quotes are removed from the input. Their only effect is\n     that within double quotes, space and tab are treated like normal\n     characters.\n   - Backslashes not followed by double quotes are not special.\n   - But 2*n+1 backslashes followed by a double quote become\n     n backslashes followed by a double quote (n >= 0):\n       \\\" -> \"\n       \\\\\\\" -> \\\"\n       \\\\\\\\\\\" -> \\\\\"\n */\n#define SHELL_SPECIAL_CHARS \"\\\"\\\\ \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\n#define SHELL_SPACE_CHARS \" \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\nchar **\nprepare_spawn (char **argv)\n{\n  size_t argc;\n  char **new_argv;\n  size_t i;\n\n  /* Count number of arguments.  */\n  for (argc = 0; argv[argc] != NULL; argc++)\n    ;\n\n  /* Allocate new argument vector.  */\n  new_argv = XMALLOC (char *, argc + 1);\n\n  /* Put quoted arguments into the new argument vector.  */\n  for (i = 0; i < argc; i++)\n    {\n      const char *string = argv[i];\n\n      if (string[0] == '\\0')\n\tnew_argv[i] = xstrdup (\"\\\"\\\"\");\n      else if (strpbrk (string, SHELL_SPECIAL_CHARS) != NULL)\n\t{\n\t  int quote_around = (strpbrk (string, SHELL_SPACE_CHARS) != NULL);\n\t  size_t length;\n\t  unsigned int backslashes;\n\t  const char *s;\n\t  char *quoted_string;\n\t  char *p;\n\n\t  length = 0;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    length++;\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\tlength += backslashes + 1;\n\t      length++;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    length += backslashes + 1;\n\n\t  quoted_string = XMALLOC (char, length + 1);\n\n\t  p = quoted_string;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    *p++ = '\"';\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\t{\n\t\t  unsigned int j;\n\t\t  for (j = backslashes + 1; j > 0; j--)\n\t\t    *p++ = '\\\\';\n\t\t}\n\t      *p++ = c;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    {\n\t      unsigned int j;\n\t      for (j = backslashes; j > 0; j--)\n\t\t*p++ = '\\\\';\n\t      *p++ = '\"';\n\t    }\n\t  *p = '\\0';\n\n\t  new_argv[i] = quoted_string;\n\t}\n      else\n\tnew_argv[i] = (char *) string;\n    }\n  new_argv[argc] = NULL;\n\n  return new_argv;\n}\nEOF\n\t\t;;\n\t    esac\n\n            cat <<\"EOF\"\nvoid lt_dump_script (FILE* f)\n{\nEOF\n\t    func_emit_wrapper yes |\n\t      $SED -n -e '\ns/^\\(.\\{79\\}\\)\\(..*\\)/\\1\\\n\\2/\nh\ns/\\([\\\\\"]\\)/\\\\\\1/g\ns/$/\\\\n/\ns/\\([^\\n]*\\).*/  fputs (\"\\1\", f);/p\ng\nD'\n            cat <<\"EOF\"\n}\nEOF\n}\n# end: func_emit_cwrapperexe_src\n\n# func_win32_import_lib_p ARG\n# True if ARG is an import lib, as indicated by $file_magic_cmd\nfunc_win32_import_lib_p ()\n{\n    $debug_cmd\n\n    case `eval $file_magic_cmd \\\"\\$1\\\" 2>/dev/null | $SED -e 10q` in\n    *import*) : ;;\n    *) false ;;\n    esac\n}\n\n# func_mode_link arg...\nfunc_mode_link ()\n{\n    $debug_cmd\n\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # what system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll that has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=$nonopt\n    base_compile=\"$nonopt $@\"\n    compile_command=$nonopt\n    finalize_command=$nonopt\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n    new_inherited_linker_flags=\n\n    avoid_version=no\n    bindir=\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    non_pic_objects=\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=false\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n    weak_libs=\n    single_module=$wl-single_module\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -shared)\n\ttest yes != \"$build_libtool_libs\" \\\n\t  && func_fatal_configuration \"cannot build a shared library\"\n\tbuild_old_libs=no\n\tbreak\n\t;;\n      -all-static | -static | -static-libtool-libs)\n\tcase $arg in\n\t-all-static)\n\t  if test yes = \"$build_libtool_libs\" && test -z \"$link_static_flag\"; then\n\t    func_warning \"complete static linking is impossible in this configuration\"\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\t-static)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=built\n\t  ;;\n\t-static-libtool-libs)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\tesac\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=$1\n      shift\n      func_quote_for_eval \"$arg\"\n      qarg=$func_quote_for_eval_unquoted_result\n      func_append libtool_args \" $func_quote_for_eval_result\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  func_append compile_command \" @OUTPUT@\"\n\t  func_append finalize_command \" @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tbindir)\n\t  bindir=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tdlfiles|dlprefiles)\n\t  $preload || {\n\t    # Add the symbol object into the linking commands.\n\t    func_append compile_command \" @SYMFILE@\"\n\t    func_append finalize_command \" @SYMFILE@\"\n\t    preload=:\n\t  }\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test no = \"$dlself\"; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test dlprefiles = \"$prev\"; then\n\t      dlself=yes\n\t    elif test dlfiles = \"$prev\" && test yes != \"$dlopen_self\"; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test dlfiles = \"$prev\"; then\n\t      func_append dlfiles \" $arg\"\n\t    else\n\t      func_append dlprefiles \" $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=$arg\n\t  test -f \"$arg\" \\\n\t    || func_fatal_error \"symbol file '$arg' does not exist\"\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tframework)\n\t  case $host in\n\t    *-*-darwin*)\n\t      case \"$deplibs \" in\n\t\t*\" $qarg.ltframework \"*) ;;\n\t\t*) func_append deplibs \" $qarg.ltframework\" # this is fixed later\n\t\t   ;;\n\t      esac\n\t      ;;\n\t  esac\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tmllvm)\n\t  # Clang does not use LLVM to link, so we can simply discard any\n\t  # '-mllvm $arg' options when doing the link step.\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat \"$save_arg\"`\n\t    do\n#\t      func_append moreargs \" $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if func_lalib_unsafe_p \"$arg\"; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\tfunc_source \"$arg\"\n\n\t\tif test -z \"$pic_object\" ||\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test none = \"$pic_object\" &&\n\t\t   test none = \"$non_pic_object\"; then\n\t\t  func_fatal_error \"cannot find name of object for '$arg'\"\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\tfunc_dirname \"$arg\" \"/\" \"\"\n\t\txdir=$func_dirname_result\n\n\t\tif test none != \"$pic_object\"; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=$xdir$pic_object\n\n\t\t  if test dlfiles = \"$prev\"; then\n\t\t    if test yes = \"$build_libtool_libs\" && test yes = \"$dlopen_support\"; then\n\t\t      func_append dlfiles \" $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test dlprefiles = \"$prev\"; then\n\t\t    # Preload the old-style object.\n\t\t    func_append dlprefiles \" $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  arg=$pic_object\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test none != \"$non_pic_object\"; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=$xdir$non_pic_object\n\n\t\t  # A standard non-PIC object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test none = \"$pic_object\"; then\n\t\t    arg=$non_pic_object\n\t\t  fi\n\t\telse\n\t\t  # If the PIC object exists, use it instead.\n\t\t  # $xdir was prepended to $pic_object above.\n\t\t  non_pic_object=$pic_object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif $opt_dry_run; then\n\t\t  # Extract subdirectory from the argument.\n\t\t  func_dirname \"$arg\" \"/\" \"\"\n\t\t  xdir=$func_dirname_result\n\n\t\t  func_lo2o \"$arg\"\n\t\t  pic_object=$xdir$objdir/$func_lo2o_result\n\t\t  non_pic_object=$xdir$func_lo2o_result\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t        else\n\t\t  func_fatal_error \"'$arg' is not a valid libtool object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    func_fatal_error \"link input file '$arg' does not exist\"\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=-$arg\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    func_fatal_error \"only absolute run-paths are allowed\"\n\t    ;;\n\t  esac\n\t  if test rpath = \"$prev\"; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append rpath \" $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append xrpath \" $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\tshrext)\n\t  shrext_cmds=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tweak)\n\t  func_append weak_libs \" $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\txcclinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txcompiler)\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $wl$qarg\"\n\t  prev=\n\t  func_append compile_command \" $wl$qarg\"\n\t  func_append finalize_command \" $wl$qarg\"\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=$arg\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  # See comment for -static flag below, for more details.\n\t  func_append compile_command \" $link_static_flag\"\n\t  func_append finalize_command \" $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\tfunc_fatal_error \"'-allow-undefined' must not be used because it is the default\"\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -bindir)\n\tprev=bindir\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  func_fatal_error \"more than one -exported-symbols argument is not allowed\"\n\tfi\n\tif test X-export-symbols = \"X$arg\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework)\n\tprev=framework\n\tcontinue\n\t;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tfunc_stripname \"-L\" '' \"$arg\"\n\tif test -z \"$func_stripname_result\"; then\n\t  if test \"$#\" -gt 0; then\n\t    func_fatal_error \"require no space between '-L' and '$1'\"\n\t  else\n\t    func_fatal_error \"need path for '-L' option\"\n\t  fi\n\tfi\n\tfunc_resolve_sysroot \"$func_stripname_result\"\n\tdir=$func_resolve_sysroot_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  test -z \"$absdir\" && \\\n\t    func_fatal_error \"cannot determine absolute directory name of '$dir'\"\n\t  dir=$absdir\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"* | *\" $arg \"*)\n\t  # Will only happen for absolute or sysroot arguments\n\t  ;;\n\t*)\n\t  # Preserve sysroot, but never include relative directories\n\t  case $dir in\n\t    [\\\\/]* | [A-Za-z]:[\\\\/]* | =*) func_append deplibs \" $arg\" ;;\n\t    *) func_append deplibs \" -L$dir\" ;;\n\t  esac\n\t  func_append lib_search_path \" $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$dir\" | $SED 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  ::) dllsearchpath=$dir;;\n\t  *) func_append dllsearchpath \":$dir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test X-lc = \"X$arg\" || test X-lm = \"X$arg\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* | *-*-bitrig*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    continue\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  esac\n\telif test X-lc_r = \"X$arg\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* | *-*-bitrig*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tfunc_append deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      -mllvm)\n\tprev=mllvm\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      # Darwin uses the -arch flag to determine output architecture.\n      -model|-arch|-isysroot|--sysroot)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n      |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tcase \"$new_inherited_linker_flags \" in\n\t    *\" $arg \"*) ;;\n\t    * ) func_append new_inherited_linker_flags \" $arg\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -multi_module)\n\tsingle_module=$wl-multi_module\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # and Darwin in order for the loader to find any dlls it needs.\n\t  func_warning \"'-no-install' is ignored for $host\"\n\t  func_warning \"assuming '-no-fast-install' instead\"\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tfunc_stripname '-R' '' \"$arg\"\n\tdir=$func_stripname_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t=*)\n\t  func_stripname '=' '' \"$dir\"\n\t  dir=$lt_sysroot$func_stripname_result\n\t  ;;\n\t*)\n\t  func_fatal_error \"only absolute run-paths are allowed\"\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) func_append xrpath \" $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -shared)\n\t# The effects of -shared are defined in a previous loop.\n\tcontinue\n\t;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -static | -static-libtool-libs)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -weak)\n        prev=weak\n\tcontinue\n\t;;\n\n      -Wc,*)\n\tfunc_stripname '-Wc,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=$IFS; IFS=,\n\tfor flag in $args; do\n\t  IFS=$save_ifs\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=$save_ifs\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Wl,*)\n\tfunc_stripname '-Wl,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=$IFS; IFS=,\n\tfor flag in $args; do\n\t  IFS=$save_ifs\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $wl$func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $wl$func_quote_for_eval_result\"\n\t  func_append linker_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=$save_ifs\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # -msg_* for osf cc\n      -msg_*)\n\tfunc_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n\n      # Flags to be passed through unchanged, with rationale:\n      # -64, -mips[0-9]      enable 64-bit mode for the SGI compiler\n      # -r[0-9][0-9]*        specify processor for the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode for the Sun compiler\n      # +DA*, +DD*           enable 64-bit mode for the HP compiler\n      # -q*                  compiler args for the IBM compiler\n      # -m*, -t[45]*, -txscale* architecture-specific flags for GCC\n      # -F/path              path to uninstalled frameworks, gcc on darwin\n      # -p, -pg, --coverage, -fprofile-*  profiling flags for GCC\n      # @file                GCC response files\n      # -tp=*                Portland pgcc target processor selection\n      # --sysroot=*          for sysroot support\n      # -O*, -g*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization\n      # -stdlib=*            select c++ std lib with clang\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \\\n      -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*|--sysroot=*| \\\n      -O*|-g*|-flto*|-fwhopr*|-fuse-linker-plugin|-stdlib=*)\n        func_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n        func_append compile_command \" $arg\"\n        func_append finalize_command \" $arg\"\n        func_append compiler_flags \" $arg\"\n        continue\n        ;;\n\n      # Some other compiler flag.\n      -* | +*)\n        func_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tfunc_append objs \" $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif func_lalib_unsafe_p \"$arg\"; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  func_source \"$arg\"\n\n\t  if test -z \"$pic_object\" ||\n\t     test -z \"$non_pic_object\" ||\n\t     test none = \"$pic_object\" &&\n\t     test none = \"$non_pic_object\"; then\n\t    func_fatal_error \"cannot find name of object for '$arg'\"\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  func_dirname \"$arg\" \"/\" \"\"\n\t  xdir=$func_dirname_result\n\n\t  test none = \"$pic_object\" || {\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=$xdir$pic_object\n\n\t    if test dlfiles = \"$prev\"; then\n\t      if test yes = \"$build_libtool_libs\" && test yes = \"$dlopen_support\"; then\n\t\tfunc_append dlfiles \" $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test dlprefiles = \"$prev\"; then\n\t      # Preload the old-style object.\n\t      func_append dlprefiles \" $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    func_append libobjs \" $pic_object\"\n\t    arg=$pic_object\n\t  }\n\n\t  # Non-PIC object.\n\t  if test none != \"$non_pic_object\"; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=$xdir$non_pic_object\n\n\t    # A standard non-PIC object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t    if test -z \"$pic_object\" || test none = \"$pic_object\"; then\n\t      arg=$non_pic_object\n\t    fi\n\t  else\n\t    # If the PIC object exists, use it instead.\n\t    # $xdir was prepended to $pic_object above.\n\t    non_pic_object=$pic_object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if $opt_dry_run; then\n\t    # Extract subdirectory from the argument.\n\t    func_dirname \"$arg\" \"/\" \"\"\n\t    xdir=$func_dirname_result\n\n\t    func_lo2o \"$arg\"\n\t    pic_object=$xdir$objdir/$func_lo2o_result\n\t    non_pic_object=$xdir$func_lo2o_result\n\t    func_append libobjs \" $pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  else\n\t    func_fatal_error \"'$arg' is not a valid libtool object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tfunc_append deplibs \" $arg\"\n\tfunc_append old_deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tfunc_resolve_sysroot \"$arg\"\n\tif test dlfiles = \"$prev\"; then\n\t  # This library was specified with -dlopen.\n\t  func_append dlfiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telif test dlprefiles = \"$prev\"; then\n\t  # The library was specified with -dlpreopen.\n\t  func_append dlprefiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telse\n\t  func_append deplibs \" $func_resolve_sysroot_result\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\tfunc_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n      fi\n    done # argument parsing loop\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the '$prevarg' option requires an argument\"\n\n    if test yes = \"$export_dynamic\" && test -n \"$export_dynamic_flag_spec\"; then\n      eval arg=\\\"$export_dynamic_flag_spec\\\"\n      func_append compile_command \" $arg\"\n      func_append finalize_command \" $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    func_basename \"$output\"\n    outputname=$func_basename_result\n    libobjs_save=$libobjs\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" \\| \\$SED \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\n    eval sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\n\n    func_dirname \"$output\" \"/\" \"\"\n    output_objdir=$func_dirname_result$objdir\n    func_to_tool_file \"$output_objdir/\"\n    tool_output_objdir=$func_to_tool_file_result\n    # Create the object directory.\n    func_mkdir_p \"$output_objdir\"\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      func_fatal_help \"you must specify an output file\"\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if $opt_preserve_dup_deps; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\tesac\n      fi\n      func_append libs \" $deplib\"\n    done\n\n    if test lib = \"$linkmode\"; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if $opt_duplicate_compiler_generated_deps; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) func_append specialdeplibs \" $pre_post_deps\" ;;\n\t  esac\n\t  func_append pre_post_deps \" $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    notinst_path= # paths that contain not-installed libtool libraries\n\n    case $linkmode in\n    lib)\n\tpasses=\"conv dlpreopen link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    func_fatal_help \"libraries can '-dlopen' only libtool libraries: $file\"\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=false\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n\n    for pass in $passes; do\n      # The preopen pass in lib mode reverses $deplibs; put it back here\n      # so that -L comes before libs that need it for instance...\n      if test lib,link = \"$linkmode,$pass\"; then\n\t## FIXME: Find the place where the list is rebuilt in the wrong\n\t##        order, and fix it there properly\n        tmp_deplibs=\n\tfor deplib in $deplibs; do\n\t  tmp_deplibs=\"$deplib $tmp_deplibs\"\n\tdone\n\tdeplibs=$tmp_deplibs\n      fi\n\n      if test lib,link = \"$linkmode,$pass\" ||\n\t test prog,scan = \"$linkmode,$pass\"; then\n\tlibs=$deplibs\n\tdeplibs=\n      fi\n      if test prog = \"$linkmode\"; then\n\tcase $pass in\n\tdlopen) libs=$dlfiles ;;\n\tdlpreopen) libs=$dlprefiles ;;\n\tlink) libs=\"$deplibs %DEPLIBS% $dependency_libs\" ;;\n\tesac\n      fi\n      if test lib,dlpreopen = \"$linkmode,$pass\"; then\n\t# Collect and forward deplibs of preopened libtool libs\n\tfor lib in $dlprefiles; do\n\t  # Ignore non-libtool-libs\n\t  dependency_libs=\n\t  func_resolve_sysroot \"$lib\"\n\t  case $lib in\n\t  *.la)\tfunc_source \"$func_resolve_sysroot_result\" ;;\n\t  esac\n\n\t  # Collect preopened libtool deplibs, except any this library\n\t  # has declared as weak libs\n\t  for deplib in $dependency_libs; do\n\t    func_basename \"$deplib\"\n            deplib_base=$func_basename_result\n\t    case \" $weak_libs \" in\n\t    *\" $deplib_base \"*) ;;\n\t    *) func_append deplibs \" $deplib\" ;;\n\t    esac\n\t  done\n\tdone\n\tlibs=$dlprefiles\n      fi\n      if test dlopen = \"$pass\"; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=$deplibs\n\tdeplibs=\n      fi\n\n      for deplib in $libs; do\n\tlib=\n\tfound=false\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n        |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\t  if test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    func_append compiler_flags \" $deplib\"\n\t    if test lib = \"$linkmode\"; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test lib != \"$linkmode\" && test prog != \"$linkmode\"; then\n\t    func_warning \"'-l' is ignored for archives/objects\"\n\t    continue\n\t  fi\n\t  func_stripname '-l' '' \"$deplib\"\n\t  name=$func_stripname_result\n\t  if test lib = \"$linkmode\"; then\n\t    searchdirs=\"$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path\"\n\t  else\n\t    searchdirs=\"$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path\"\n\t  fi\n\t  for searchdir in $searchdirs; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=$searchdir/lib$name$search_ext\n\t      if test -f \"$lib\"; then\n\t\tif test .la = \"$search_ext\"; then\n\t\t  found=:\n\t\telse\n\t\t  found=false\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if $found; then\n\t    # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif func_lalib_p \"$lib\"; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  func_source \"$lib\"\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=$l\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\"; then # only static version available\n\t\t    found=false\n\t\t    func_dirname \"$lib\" \"\" \".\"\n\t\t    ladir=$func_dirname_result\n\t\t    lib=$ladir/$old_library\n\t\t    if test prog,link = \"$linkmode,$pass\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test lib = \"$linkmode\" && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  else\n\t    # deplib doesn't seem to be a libtool library\n\t    if test prog,link = \"$linkmode,$pass\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test lib = \"$linkmode\" && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  fi\n\t  ;; # -l\n\t*.ltframework)\n\t  if test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$deplib $deplibs\"\n\t    if test lib = \"$linkmode\"; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test conv = \"$pass\" && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  prog)\n\t    if test conv = \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test scan = \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  *)\n\t    func_warning \"'-L' is ignored for archives/objects\"\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test link = \"$pass\"; then\n\t    func_stripname '-R' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    dir=$func_resolve_sysroot_result\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append xrpath \" $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la)\n\t  func_resolve_sysroot \"$deplib\"\n\t  lib=$func_resolve_sysroot_result\n\t  ;;\n\t*.$libext)\n\t  if test conv = \"$pass\"; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    # Linking convenience modules into shared libraries is allowed,\n\t    # but linking other static libraries is non-portable.\n\t    case \" $dlpreconveniencelibs \" in\n\t    *\" $deplib \"*) ;;\n\t    *)\n\t      valid_a_lib=false\n\t      case $deplibs_check_method in\n\t\tmatch_pattern*)\n\t\t  set dummy $deplibs_check_method; shift\n\t\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t\t  if eval \"\\$ECHO \\\"$deplib\\\"\" 2>/dev/null | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t    valid_a_lib=:\n\t\t  fi\n\t\t;;\n\t\tpass_all)\n\t\t  valid_a_lib=:\n\t\t;;\n\t      esac\n\t      if $valid_a_lib; then\n\t\techo\n\t\t$ECHO \"*** Warning: Linking the shared library $output against the\"\n\t\t$ECHO \"*** static library $deplib is not portable!\"\n\t\tdeplibs=\"$deplib $deplibs\"\n\t      else\n\t\techo\n\t\t$ECHO \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t\techo \"*** that it is just a static archive that I should not use here.\"\n\t      fi\n\t      ;;\n\t    esac\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test link != \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test conv = \"$pass\"; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test prog = \"$linkmode\"; then\n\t    if test dlpreopen = \"$pass\" || test yes != \"$dlopen_support\" || test no = \"$build_libtool_libs\"; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      func_append newdlprefiles \" $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      func_append newdlfiles \" $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=:\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\n\t$found || test -f \"$lib\" \\\n\t  || func_fatal_error \"cannot find the library '$lib' or unhandled argument '$deplib'\"\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$lib\" \\\n\t  || func_fatal_error \"'$lib' is not a valid libtool archive\"\n\n\tfunc_dirname \"$lib\" \"\" \".\"\n\tladir=$func_dirname_result\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\tinherited_linker_flags=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tfunc_source \"$lib\"\n\n\t# Convert \"-framework foo\" to \"foo.ltframework\"\n\tif test -n \"$inherited_linker_flags\"; then\n\t  tmp_inherited_linker_flags=`$ECHO \"$inherited_linker_flags\" | $SED 's/-framework \\([^ $]*\\)/\\1.ltframework/g'`\n\t  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do\n\t    case \" $new_inherited_linker_flags \" in\n\t      *\" $tmp_inherited_linker_flag \"*) ;;\n\t      *) func_append new_inherited_linker_flags \" $tmp_inherited_linker_flag\";;\n\t    esac\n\t  done\n\tfi\n\tdependency_libs=`$ECHO \" $dependency_libs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tif test lib,link = \"$linkmode,$pass\" ||\n\t   test prog,scan = \"$linkmode,$pass\" ||\n\t   { test prog != \"$linkmode\" && test lib != \"$linkmode\"; }; then\n\t  test -n \"$dlopen\" && func_append dlfiles \" $dlopen\"\n\t  test -n \"$dlpreopen\" && func_append dlprefiles \" $dlpreopen\"\n\tfi\n\n\tif test conv = \"$pass\"; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      func_fatal_error \"cannot find name of link library for '$lib'\"\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    func_append convenience \" $ladir/$objdir/$old_library\"\n\t    func_append old_convenience \" $ladir/$objdir/$old_library\"\n\t  elif test prog != \"$linkmode\" && test lib != \"$linkmode\"; then\n\t    func_fatal_error \"'$lib' is not a convenience library\"\n\t  fi\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    deplibs=\"$deplib $deplibs\"\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tif test -n \"$old_library\" &&\n\t   { test yes = \"$prefer_static_libs\" ||\n\t     test built,no = \"$prefer_static_libs,$installed\"; }; then\n\t  linklib=$old_library\n\telse\n\t  for l in $old_library $library_names; do\n\t    linklib=$l\n\t  done\n\tfi\n\tif test -z \"$linklib\"; then\n\t  func_fatal_error \"cannot find name of link library for '$lib'\"\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test dlopen = \"$pass\"; then\n\t  test -z \"$libdir\" \\\n\t    && func_fatal_error \"cannot -dlopen a convenience library: '$lib'\"\n\t  if test -z \"$dlname\" ||\n\t     test yes != \"$dlopen_support\" ||\n\t     test no = \"$build_libtool_libs\"\n\t  then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    func_append dlprefiles \" $lib $dependency_libs\"\n\t  else\n\t    func_append newdlfiles \" $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=$ladir ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    func_warning \"cannot determine absolute directory name of '$ladir'\"\n\t    func_warning \"passing it literally to the linker, although it might fail\"\n\t    abs_ladir=$ladir\n\t  fi\n\t  ;;\n\tesac\n\tfunc_basename \"$lib\"\n\tlaname=$func_basename_result\n\n\t# Find the relevant object directory and library name.\n\tif test yes = \"$installed\"; then\n\t  if test ! -f \"$lt_sysroot$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    func_warning \"library '$lib' was moved.\"\n\t    dir=$ladir\n\t    absdir=$abs_ladir\n\t    libdir=$abs_ladir\n\t  else\n\t    dir=$lt_sysroot$libdir\n\t    absdir=$lt_sysroot$libdir\n\t  fi\n\t  test yes = \"$hardcode_automatic\" && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=$ladir\n\t    absdir=$abs_ladir\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  else\n\t    dir=$ladir/$objdir\n\t    absdir=$abs_ladir/$objdir\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tfunc_stripname 'lib' '.la' \"$laname\"\n\tname=$func_stripname_result\n\n\t# This library was specified with -dlpreopen.\n\tif test dlpreopen = \"$pass\"; then\n\t  if test -z \"$libdir\" && test prog = \"$linkmode\"; then\n\t    func_fatal_error \"only libraries may -dlpreopen a convenience library: '$lib'\"\n\t  fi\n\t  case $host in\n\t    # special handling for platforms with PE-DLLs.\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # Linker will automatically link against shared library if both\n\t      # static and shared are present.  Therefore, ensure we extract\n\t      # symbols from the import library if a shared library is present\n\t      # (otherwise, the dlopen module name will be incorrect).  We do\n\t      # this by putting the import library name into $newdlprefiles.\n\t      # We recover the dlopen module name by 'saving' the la file\n\t      # name in a special purpose variable, and (later) extracting the\n\t      # dlname from the la file.\n\t      if test -n \"$dlname\"; then\n\t        func_tr_sh \"$dir/$linklib\"\n\t        eval \"libfile_$func_tr_sh_result=\\$abs_ladir/\\$laname\"\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      fi\n\t    ;;\n\t    * )\n\t      # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t      # are required to link).\n\t      if test -n \"$old_library\"; then\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t      elif test -n \"$dlname\"; then\n\t        func_append newdlprefiles \" $dir/$dlname\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      fi\n\t    ;;\n\t  esac\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test lib = \"$linkmode\"; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test prog = \"$linkmode\" && test link != \"$pass\"; then\n\t  func_append newlib_search_path \" $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=false\n\t  if test no != \"$link_all_deplibs\" || test -z \"$library_names\" ||\n\t     test no = \"$build_libtool_libs\"; then\n\t    linkalldeplibs=:\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) func_stripname '-L' '' \"$deplib\"\n\t         func_resolve_sysroot \"$func_stripname_result\"\n\t         func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t\t ;;\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if $linkalldeplibs; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test prog,link = \"$linkmode,$pass\"; then\n\t  if test -n \"$library_names\" &&\n\t     { { test no = \"$prefer_static_libs\" ||\n\t         test built,yes = \"$prefer_static_libs,$installed\"; } ||\n\t       test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\"; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case $temp_rpath: in\n\t      *\"$absdir:\"*) ;;\n\t      *) func_append temp_rpath \"$absdir:\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if $alldeplibs &&\n\t     { test pass_all = \"$deplibs_check_method\" ||\n\t       { test yes = \"$build_libtool_libs\" &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tuse_static_libs=$prefer_static_libs\n\tif test built = \"$use_static_libs\" && test yes = \"$installed\"; then\n\t  use_static_libs=no\n\tfi\n\tif test -n \"$library_names\" &&\n\t   { test no = \"$use_static_libs\" || test -z \"$old_library\"; }; then\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc*)\n\t      # No point in relinking DLLs because paths are not encoded\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=no\n\t    ;;\n\t  *)\n\t    if test no = \"$installed\"; then\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=yes\n\t    fi\n\t    ;;\n\t  esac\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on some\n\t  # systems (darwin).  Don't bleat about dlopened modules though!\n\t  dlopenmodule=\n\t  for dlpremoduletest in $dlprefiles; do\n\t    if test \"X$dlpremoduletest\" = \"X$lib\"; then\n\t      dlopenmodule=$dlpremoduletest\n\t      break\n\t    fi\n\t  done\n\t  if test -z \"$dlopenmodule\" && test yes = \"$shouldnotlink\" && test link = \"$pass\"; then\n\t    echo\n\t    if test prog = \"$linkmode\"; then\n\t      $ECHO \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $ECHO \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $ECHO \"*** $linklib is not portable!\"\n\t  fi\n\t  if test lib = \"$linkmode\" &&\n\t     test yes = \"$hardcode_into_libs\"; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    shift\n\t    realname=$1\n\t    shift\n\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=$dlname\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw* | *cegcc*)\n\t        func_arith $current - $age\n\t\tmajor=$func_arith_result\n\t\tversuffix=-$major\n\t\t;;\n\t      esac\n\t      eval soname=\\\"$soname_spec\\\"\n\t    else\n\t      soname=$realname\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=$soname\n\t    func_basename \"$soroot\"\n\t    soname=$func_basename_result\n\t    func_stripname 'lib' '.dll' \"$soname\"\n\t    newlib=libimp-$func_stripname_result.a\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      func_verbose \"extracting exported symbol list from '$soname'\"\n\t      func_execute_cmds \"$extract_expsyms_cmds\" 'exit $?'\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      func_verbose \"generating import library for '$soname'\"\n\t      func_execute_cmds \"$old_archive_from_expsyms_cmds\" 'exit $?'\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test prog = \"$linkmode\" || test relink != \"$opt_mode\"; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test no = \"$hardcode_direct\"; then\n\t\tadd=$dir/$linklib\n\t\tcase $host in\n\t\t  *-*-sco3.2v5.0.[024]*) add_dir=-L$dir ;;\n\t\t  *-*-sysv4*uw2*) add_dir=-L$dir ;;\n\t\t  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \\\n\t\t    *-*-unixware7*) add_dir=-L$dir ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a (non-dlopened) module then we cannot\n\t\t    # link against it, someone is ignoring the earlier warnings\n\t\t    if /usr/bin/file -L $add 2> /dev/null |\n\t\t\t $GREP \": [^:]* bundle\" >/dev/null; then\n\t\t      if test \"X$dlopenmodule\" != \"X$lib\"; then\n\t\t\t$ECHO \"*** Warning: lib $linklib is a module, not a shared library\"\n\t\t\tif test -z \"$old_library\"; then\n\t\t\t  echo\n\t\t\t  echo \"*** And there doesn't seem to be a static archive available\"\n\t\t\t  echo \"*** The link will probably fail, sorry\"\n\t\t\telse\n\t\t\t  add=$dir/$old_library\n\t\t\tfi\n\t\t      elif test -n \"$old_library\"; then\n\t\t\tadd=$dir/$old_library\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test no = \"$hardcode_minus_L\"; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=$dir ;;\n\t\tesac\n\t\tadd_dir=-L$dir\n\t\tadd=-l$name\n\t      elif test no = \"$hardcode_shlibpath_var\"; then\n\t\tadd_shlibpath=$dir\n\t\tadd=-l$name\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test yes = \"$hardcode_direct\" &&\n\t         test no = \"$hardcode_direct_absolute\"; then\n\t\tadd=$dir/$linklib\n\t      elif test yes = \"$hardcode_minus_L\"; then\n\t\tadd_dir=-L$absdir\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case $libdir in\n\t\t    [\\\\/]*)\n\t\t      func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=-l$name\n\t      elif test yes = \"$hardcode_shlibpath_var\"; then\n\t\tadd_shlibpath=$dir\n\t\tadd=-l$name\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test yes != \"$lib_linked\"; then\n\t      func_fatal_configuration \"unsupported hardcode properties\"\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) func_append compile_shlibpath \"$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test prog = \"$linkmode\"; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test yes != \"$hardcode_direct\" &&\n\t\t test yes != \"$hardcode_minus_L\" &&\n\t\t test yes = \"$hardcode_shlibpath_var\"; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) func_append finalize_shlibpath \"$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test prog = \"$linkmode\" || test relink = \"$opt_mode\"; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test yes = \"$hardcode_direct\" &&\n\t       test no = \"$hardcode_direct_absolute\"; then\n\t      add=$libdir/$linklib\n\t    elif test yes = \"$hardcode_minus_L\"; then\n\t      add_dir=-L$libdir\n\t      add=-l$name\n\t    elif test yes = \"$hardcode_shlibpath_var\"; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) func_append finalize_shlibpath \"$libdir:\" ;;\n\t      esac\n\t      add=-l$name\n\t    elif test yes = \"$hardcode_automatic\"; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\"; then\n\t\tadd=$inst_prefix_dir$libdir/$linklib\n\t      else\n\t\tadd=$libdir/$linklib\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=-L$libdir\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase $libdir in\n\t\t  [\\\\/]*)\n\t\t    func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=-l$name\n\t    fi\n\n\t    if test prog = \"$linkmode\"; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test prog = \"$linkmode\"; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test unsupported != \"$hardcode_direct\"; then\n\t    test -n \"$old_library\" && linklib=$old_library\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test yes = \"$build_libtool_libs\"; then\n\t  # Not a shared library\n\t  if test pass_all != \"$deplibs_check_method\"; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    echo\n\t    $ECHO \"*** Warning: This system cannot link to static lib archive $lib.\"\n\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test yes = \"$module\"; then\n\t      echo \"*** But as you try to build a module library, libtool will still create \"\n\t      echo \"*** a static module, that should work as long as the dlopening application\"\n\t      echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\techo\n\t\techo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\techo \"*** lists from a program, using 'nm' or equivalent, but libtool could\"\n\t\techo \"*** not find such a program.  So, this module is probably useless.\"\n\t\techo \"*** 'nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test no = \"$build_old_libs\"; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test lib = \"$linkmode\"; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test yes != \"$hardcode_into_libs\" ||\n\t       test yes = \"$build_old_libs\" ||\n\t       test yes = \"$link_static\"; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) func_stripname '-R' '' \"$libdir\"\n\t           temp_xrpath=$func_stripname_result\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) func_append xrpath \" $temp_xrpath\";;\n\t\t   esac;;\n\t      *) func_append temp_deplibs \" $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=$temp_deplibs\n\t  fi\n\n\t  func_append newlib_search_path \" $absdir\"\n\t  # Link against this library\n\t  test no = \"$link_static\" && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    case $deplib in\n              -L*) func_stripname '-L' '' \"$deplib\"\n                   func_resolve_sysroot \"$func_stripname_result\";;\n              *) func_resolve_sysroot \"$deplib\" ;;\n            esac\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $func_resolve_sysroot_result \"*)\n                func_append specialdeplibs \" $func_resolve_sysroot_result\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $func_resolve_sysroot_result\"\n\t  done\n\n\t  if test no != \"$link_all_deplibs\"; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      path=\n\t      case $deplib in\n\t      -L*) path=$deplib ;;\n\t      *.la)\n\t        func_resolve_sysroot \"$deplib\"\n\t        deplib=$func_resolve_sysroot_result\n\t        func_dirname \"$deplib\" \"\" \".\"\n\t\tdir=$func_dirname_result\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=$dir ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    func_warning \"cannot determine absolute directory name of '$dir'\"\n\t\t    absdir=$dir\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif $GREP \"^installed=no\" $deplib > /dev/null; then\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  depdepl=\n\t\t  eval deplibrary_names=`$SED -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\"; then\n\t\t    for tmp in $deplibrary_names; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$absdir/$objdir/$depdepl\"; then\n\t\t      depdepl=$absdir/$objdir/$depdepl\n\t\t      darwin_install_name=`$OTOOL -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`\n                      if test -z \"$darwin_install_name\"; then\n                          darwin_install_name=`$OTOOL64 -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`\n                      fi\n\t\t      func_append compiler_flags \" $wl-dylib_file $wl$darwin_install_name:$depdepl\"\n\t\t      func_append linker_flags \" -dylib_file $darwin_install_name:$depdepl\"\n\t\t      path=\n\t\t    fi\n\t\t  fi\n\t\t  ;;\n\t\t*)\n\t\t  path=-L$absdir/$objdir\n\t\t  ;;\n\t\tesac\n\t\telse\n\t\t  eval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  test -z \"$libdir\" && \\\n\t\t    func_fatal_error \"'$deplib' is not a valid libtool archive\"\n\t\t  test \"$absdir\" != \"$libdir\" && \\\n\t\t    func_warning \"'$deplib' seems to be moved\"\n\n\t\t  path=-L$absdir\n\t\tfi\n\t\t;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      if test link = \"$pass\"; then\n\tif test prog = \"$linkmode\"; then\n\t  compile_deplibs=\"$new_inherited_linker_flags $compile_deplibs\"\n\t  finalize_deplibs=\"$new_inherited_linker_flags $finalize_deplibs\"\n\telse\n\t  compiler_flags=\"$compiler_flags \"`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfi\n      fi\n      dependency_libs=$newdependency_libs\n      if test dlpreopen = \"$pass\"; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test dlopen != \"$pass\"; then\n\ttest conv = \"$pass\" || {\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append lib_search_path \" $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\t}\n\n\tif test prog,link = \"$linkmode,$pass\"; then\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\telse\n\t  vars=deplibs\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\\"\\$$var\\\"\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) func_append tmp_libs \" $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) func_append tmp_libs \" $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\\"$tmp_libs\\\"\n\tdone # for var\n      fi\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\n\t  ;;\n\tesac\n\tif test -n \"$i\"; then\n\t  func_append tmp_libs \" $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test prog = \"$linkmode\"; then\n      dlfiles=$newdlfiles\n    fi\n    if test prog = \"$linkmode\" || test lib = \"$linkmode\"; then\n      dlprefiles=$newdlprefiles\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n\tfunc_warning \"'-dlopen' is ignored for archives\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"'-l' and '-L' are ignored for archives\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"'-rpath' is ignored for archives\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"'-R' is ignored for archives\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info/-version-number' is ignored for archives\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for archives\"\n\n      test -n \"$export_symbols$export_symbols_regex\" && \\\n\tfunc_warning \"'-export-symbols' is ignored for archives\"\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=$output\n      func_append objs \"$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form 'libNAME.la'.\n      case $outputname in\n      lib*)\n\tfunc_stripname 'lib' '.la' \"$outputname\"\n\tname=$func_stripname_result\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval libname=\\\"$libname_spec\\\"\n\t;;\n      *)\n\ttest no = \"$module\" \\\n\t  && func_fatal_help \"libtool library '$output' must begin with 'lib'\"\n\n\tif test no != \"$need_lib_prefix\"; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  func_stripname '' '.la' \"$outputname\"\n\t  name=$func_stripname_result\n\t  eval shared_ext=\\\"$shrext_cmds\\\"\n\t  eval libname=\\\"$libname_spec\\\"\n\telse\n\t  func_stripname '' '.la' \"$outputname\"\n\t  libname=$func_stripname_result\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test pass_all != \"$deplibs_check_method\"; then\n\t  func_fatal_error \"cannot build libtool library '$output' from non-libtool objects on this host:$objs\"\n\telse\n\t  echo\n\t  $ECHO \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $ECHO \"*** objects $objs is not portable!\"\n\t  func_append libobjs \" $objs\"\n\tfi\n      fi\n\n      test no = \"$dlself\" \\\n\t|| func_warning \"'-dlopen self' is ignored for libtool libraries\"\n\n      set dummy $rpath\n      shift\n      test 1 -lt \"$#\" \\\n\t&& func_warning \"ignoring multiple '-rpath's for a libtool library\"\n\n      install_libdir=$1\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test yes = \"$build_libtool_libs\"; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a '.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\ttest -n \"$vinfo\" && \\\n\t  func_warning \"'-version-info/-version-number' is ignored for convenience libraries\"\n\n\ttest -n \"$release\" && \\\n\t  func_warning \"'-release' is ignored for convenience libraries\"\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=$IFS; IFS=:\n\tset dummy $vinfo 0 0 0\n\tshift\n\tIFS=$save_ifs\n\n\ttest -n \"$7\" && \\\n\t  func_fatal_help \"too many parameters to '-version-info'\"\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=$1\n\t  number_minor=$2\n\t  number_revision=$3\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # that has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  # correct linux to gnu/linux during the next big refactor\n\t  darwin|linux|osf|windows|none)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=$number_minor\n\t    revision=$number_revision\n\t    ;;\n\t  freebsd-aout|freebsd-elf|qnx|sunos)\n\t    current=$number_major\n\t    revision=$number_minor\n\t    age=0\n\t    ;;\n\t  irix|nonstopux)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=$number_minor\n\t    revision=$number_minor\n\t    lt_irix_increment=no\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=$1\n\t  revision=$2\n\t  age=$3\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"CURRENT '$current' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"REVISION '$revision' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"AGE '$age' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  func_error \"AGE '$age' is greater than the current interface number '$current'\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  # Darwin ld doesn't like 0 for these options...\n\t  func_arith $current + 1\n\t  minor_current=$func_arith_result\n\t  xlcverstring=\"$wl-compatibility_version $wl$minor_current $wl-current_version $wl$minor_current.$revision\"\n\t  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n          # On Darwin other compilers\n          case $CC in\n              nagfor*)\n                  verstring=\"$wl-compatibility_version $wl$minor_current $wl-current_version $wl$minor_current.$revision\"\n                  ;;\n              *)\n                  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n                  ;;\n          esac\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=.$current\n\t  versuffix=.$current.$revision\n\t  ;;\n\n\tfreebsd-elf)\n\t  major=.$current\n\t  versuffix=.$current\n\t  ;;\n\n\tirix | nonstopux)\n\t  if test no = \"$lt_irix_increment\"; then\n\t    func_arith $current - $age\n\t  else\n\t    func_arith $current - $age + 1\n\t  fi\n\t  major=$func_arith_result\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=$verstring_prefix$major.$revision\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test 0 -ne \"$loop\"; do\n\t    func_arith $revision - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=$verstring_prefix$major.$iface:$verstring\n\t  done\n\n\t  # Before this point, $major must not contain '.'.\n\t  major=.$major\n\t  versuffix=$major.$revision\n\t  ;;\n\n\tlinux) # correct to gnu/linux during the next big refactor\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  ;;\n\n\tosf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=.$current.$age.$revision\n\t  verstring=$current.$age.$revision\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test 0 -ne \"$loop\"; do\n\t    func_arith $current - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=$verstring:$iface.0\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  func_append verstring \":$current.0\"\n\t  ;;\n\n\tqnx)\n\t  major=.$current\n\t  versuffix=.$current\n\t  ;;\n\n\tsunos)\n\t  major=.$current\n\t  versuffix=.$current.$revision\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 file systems.\n\t  func_arith $current - $age\n\t  major=$func_arith_result\n\t  versuffix=-$major\n\t  ;;\n\n\t*)\n\t  func_fatal_configuration \"unknown library version type '$version_type'\"\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=0.0\n\t    ;;\n\t  esac\n\t  if test no = \"$need_version\"; then\n\t    versuffix=\n\t  else\n\t    versuffix=.0.0\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test yes,no = \"$avoid_version,$need_version\"; then\n\t  major=\n\t  versuffix=\n\t  verstring=\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test yes = \"$allow_undefined\"; then\n\t  if test unsupported = \"$allow_undefined_flag\"; then\n\t    if test yes = \"$build_old_libs\"; then\n\t      func_warning \"undefined symbols not allowed in $host shared libraries; building static only\"\n\t      build_libtool_libs=no\n\t    else\n\t      func_fatal_error \"can't build $host shared library unless -no-undefined is specified\"\n\t    fi\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=$no_undefined_flag\n\tfi\n\n      fi\n\n      func_generate_dlsyms \"$libname\" \"$libname\" :\n      func_append libobjs \" $symfileobj\"\n      test \" \" = \"$libobjs\" && libobjs=\n\n      if test relink != \"$opt_mode\"; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$ECHO \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext | *.gcno)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/$libname$release.*)\n\t       if test -n \"$precious_files_regex\"; then\n\t\t if $ECHO \"$p\" | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t\t then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       func_append removelist \" $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\ttest -n \"$removelist\" && \\\n\t  func_show_eval \"${RM}r \\$removelist\"\n      fi\n\n      # Now set the variables for building old libraries.\n      if test yes = \"$build_old_libs\" && test convenience != \"$build_libtool_libs\"; then\n\tfunc_append oldlibs \" $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.$libext$/d; $lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      #for path in $notinst_path; do\n      #\tlib_search_path=`$ECHO \"$lib_search_path \" | $SED \"s% $path % %g\"`\n      #\tdeplibs=`$ECHO \"$deplibs \" | $SED \"s% -L$path % %g\"`\n      #\tdependency_libs=`$ECHO \"$dependency_libs \" | $SED \"s% -L$path % %g\"`\n      #done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  func_replace_sysroot \"$libdir\"\n\t  func_append temp_xrpath \" -R$func_replace_sysroot_result\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n\tif test yes != \"$hardcode_into_libs\" || test yes = \"$build_old_libs\"; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=$dlfiles\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlfiles \" $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=$dlprefiles\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlprefiles \" $lib\" ;;\n\tesac\n      done\n\n      if test yes = \"$build_libtool_libs\"; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    ;;\n\t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test yes = \"$build_libtool_need_lc\"; then\n\t      func_append deplibs \" -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\n\tversuffix=\n\tmajor=\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $opt_dry_run || $RM conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $opt_dry_run || $RM conftest\n\t  if $LTCC $LTCFLAGS -o conftest conftest.c $deplibs; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\tif test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    func_append newdeplibs \" $i\"\n\t\t    i=\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t\tif test -n \"$i\"; then\n\t\t  libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t  deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t  set dummy $deplib_matches; shift\n\t\t  deplib_match=$1\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0; then\n\t\t    func_append newdeplibs \" $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    echo\n\t\t    $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\t$opt_dry_run || $RM conftest\n\t\tif $LTCC $LTCFLAGS -o conftest conftest.c $i; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      func_append newdeplibs \" $i\"\n\t\t      i=\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\"; then\n\t\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t    deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t    set dummy $deplib_matches; shift\n\t\t    deplib_match=$1\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0; then\n\t\t      func_append newdeplibs \" $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      echo\n\t\t      $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  $ECHO \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  echo \"*** make it link in!  You will probably need to install it or some\"\n\t\t  echo \"*** library that it depends on before this library will be fully\"\n\t\t  echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method; shift\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tif test -n \"$file_magic_glob\"; then\n\t\t  libnameglob=`func_echo_all \"$libname\" | $SED -e $file_magic_glob`\n\t\telse\n\t\t  libnameglob=$libname\n\t\tfi\n\t\ttest yes = \"$want_nocaseglob\" && nocaseglob=`shopt -p nocaseglob`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  if test yes = \"$want_nocaseglob\"; then\n\t\t    shopt -s nocaseglob\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t    $nocaseglob\n\t\t  else\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t  fi\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null |\n\t\t\t $GREP \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=$potent_lib\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | $SED 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=$potliblink;;\n\t\t\t*) potlib=`$ECHO \"$potlib\" | $SED 's|[^/]*$||'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval $file_magic_cmd \\\"\\$potlib\\\" 2>/dev/null |\n\t\t\t $SED -e 10q |\n\t\t\t $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tfunc_append newdeplibs \" $a_deplib\"\n\t\t\ta_deplib=\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\"; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method; shift\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=$potent_lib # see symlink-check above in file_magic test\n\t\t    if eval \"\\$ECHO \\\"$potent_lib\\\"\" 2>/dev/null | $SED 10q | \\\n\t\t       $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      func_append newdeplibs \" $a_deplib\"\n\t\t      a_deplib=\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\"; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\n\t  tmp_deplibs=`$ECHO \" $deplibs\" | $SED 's/ -lc$//; s/ -[LR][^ ]*//g'`\n\t  if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t    for i in $predeps $postdeps; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$ECHO \" $tmp_deplibs\" | $SED \"s|$i||\"`\n\t    done\n\t  fi\n\t  case $tmp_deplibs in\n\t  *[!\\\t\\ ]*)\n\t    echo\n\t    if test none = \"$deplibs_check_method\"; then\n\t      echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library with the System framework\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t  ;;\n\tesac\n\n\tif test yes = \"$droppeddeps\"; then\n\t  if test yes = \"$module\"; then\n\t    echo\n\t    echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $ECHO \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    echo \"*** a static module, that should work as long as the dlopening\"\n\t    echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      echo\n\t      echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      echo \"*** lists from a program, using 'nm' or equivalent, but libtool could\"\n\t      echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      echo \"*** 'nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test no = \"$build_old_libs\"; then\n\t      oldlibs=$output_objdir/$libname.$libext\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    echo \"*** automatically added whenever a program is linked with this library\"\n\t    echo \"*** or is declared to -dlopen it.\"\n\n\t    if test no = \"$allow_undefined\"; then\n\t      echo\n\t      echo \"*** Since this library must not contain undefined symbols,\"\n\t      echo \"*** because either the platform does not support them or\"\n\t      echo \"*** it was explicitly requested with -no-undefined,\"\n\t      echo \"*** libtool will only create a static version of it.\"\n\t      if test no = \"$build_old_libs\"; then\n\t\toldlibs=$output_objdir/$libname.$libext\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n      # Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n      case $host in\n\t*-*-darwin*)\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  new_inherited_linker_flags=`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  deplibs=`$ECHO \" $deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  ;;\n      esac\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      deplibs=$new_libs\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test yes = \"$build_libtool_libs\"; then\n\t# Remove $wl instances when linking with ld.\n\t# FIXME: should test the right _cmds variable.\n\tcase $archive_cmds in\n\t  *\\$LD\\ *) wl= ;;\n        esac\n\tif test yes = \"$hardcode_into_libs\"; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=$finalize_rpath\n\t  test relink = \"$opt_mode\" || rpath=$compile_rpath$rpath\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tfunc_replace_sysroot \"$libdir\"\n\t\tlibdir=$func_replace_sysroot_result\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=$libdir\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    func_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t\tfunc_append dep_rpath \" $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append perm_rpath \" $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=$hardcode_libdirs\n\t    eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      func_append rpath \"$dir:\"\n\t    done\n\t    eval \"$runpath_var='$rpath\\$$runpath_var'; export $runpath_var\"\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=$finalize_shlibpath\n\ttest relink = \"$opt_mode\" || shlibpath=$compile_shlibpath$shlibpath\n\tif test -n \"$shlibpath\"; then\n\t  eval \"$shlibpath_var='$shlibpath\\$$shlibpath_var'; export $shlibpath_var\"\n\tfi\n\n\t# Get the real and link names of the library.\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval library_names=\\\"$library_names_spec\\\"\n\tset dummy $library_names\n\tshift\n\trealname=$1\n\tshift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval soname=\\\"$soname_spec\\\"\n\telse\n\t  soname=$realname\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=$output_objdir/$realname\n\tlinknames=\n\tfor link\n\tdo\n\t  func_append linknames \" $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$ECHO \"$libobjs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\ttest \"X$libobjs\" = \"X \" && libobjs=\n\n\tdelfiles=\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $opt_dry_run || cp \"$export_symbols\" \"$output_objdir/$libname.uexp\"\n\t  export_symbols=$output_objdir/$libname.uexp\n\t  func_append delfiles \" $export_symbols\"\n\tfi\n\n\torig_export_symbols=\n\tcase $host_os in\n\tcygwin* | mingw* | cegcc*)\n\t  if test -n \"$export_symbols\" && test -z \"$export_symbols_regex\"; then\n\t    # exporting using user supplied symfile\n\t    func_dll_def_p \"$export_symbols\" || {\n\t      # and it's NOT already a .def file. Must figure out\n\t      # which of the given symbols are data symbols and tag\n\t      # them as such. So, trigger use of export_symbols_cmds.\n\t      # export_symbols gets reassigned inside the \"prepare\n\t      # the list of exported symbols\" if statement, so the\n\t      # include_expsyms logic still works.\n\t      orig_export_symbols=$export_symbols\n\t      export_symbols=\n\t      always_export_symbols=yes\n\t    }\n\t  fi\n\t  ;;\n\tesac\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test yes = \"$always_export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t    func_verbose \"generating symbol list for '$libname.la'\"\n\t    export_symbols=$output_objdir/$libname.exp\n\t    $opt_dry_run || $RM $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=$IFS; IFS='~'\n\t    for cmd1 in $cmds; do\n\t      IFS=$save_ifs\n\t      # Take the normal branch if the nm_file_list_spec branch\n\t      # doesn't work or if tool conversion is not needed.\n\t      case $nm_file_list_spec~$to_tool_file_cmd in\n\t\t*~func_convert_file_noop | *~func_convert_file_msys_to_w32 | ~*)\n\t\t  try_normal_branch=yes\n\t\t  eval cmd=\\\"$cmd1\\\"\n\t\t  func_len \" $cmd\"\n\t\t  len=$func_len_result\n\t\t  ;;\n\t\t*)\n\t\t  try_normal_branch=no\n\t\t  ;;\n\t      esac\n\t      if test yes = \"$try_normal_branch\" \\\n\t\t && { test \"$len\" -lt \"$max_cmd_len\" \\\n\t\t      || test \"$max_cmd_len\" -le -1; }\n\t      then\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\tskipped_export=false\n\t      elif test -n \"$nm_file_list_spec\"; then\n\t\tfunc_basename \"$output\"\n\t\toutput_la=$func_basename_result\n\t\tsave_libobjs=$libobjs\n\t\tsave_output=$output\n\t\toutput=$output_objdir/$output_la.nm\n\t\tfunc_to_tool_file \"$output\"\n\t\tlibobjs=$nm_file_list_spec$func_to_tool_file_result\n\t\tfunc_append delfiles \" $output\"\n\t\tfunc_verbose \"creating $NM input file list: $output\"\n\t\tfor obj in $save_libobjs; do\n\t\t  func_to_tool_file \"$obj\"\n\t\t  $ECHO \"$func_to_tool_file_result\"\n\t\tdone > \"$output\"\n\t\teval cmd=\\\"$cmd1\\\"\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\toutput=$save_output\n\t\tlibobjs=$save_libobjs\n\t\tskipped_export=false\n\t      else\n\t\t# The command line is too long to execute in one step.\n\t\tfunc_verbose \"using reloadable object file for export list...\"\n\t\tskipped_export=:\n\t\t# Break out early, otherwise skipped_export may be\n\t\t# set to false by a later but shorter cmd.\n\t\tbreak\n\t      fi\n\t    done\n\t    IFS=$save_ifs\n\t    if test -n \"$export_symbols_regex\" && test : != \"$skipped_export\"; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  tmp_export_symbols=$export_symbols\n\t  test -n \"$orig_export_symbols\" && tmp_export_symbols=$orig_export_symbols\n\t  $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\tfi\n\n\tif test : != \"$skipped_export\" && test -n \"$orig_export_symbols\"; then\n\t  # The given exports_symbols file has to be filtered, so filter it.\n\t  func_verbose \"filter symbol list for '$libname.la' to tag DATA exports\"\n\t  # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t  # 's' commands, which not all seds can handle. GNU sed should be fine\n\t  # though. Also, the filter scales superlinearly with the number of\n\t  # global variables. join(1) would be nice here, but unfortunately\n\t  # isn't a blessed tool.\n\t  $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t  func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t  export_symbols=$output_objdir/$libname.def\n\t  $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t  case \" $convenience \" in\n\t  *\" $test_deplib \"*) ;;\n\t  *)\n\t    func_append tmp_deplibs \" $test_deplib\"\n\t    ;;\n\t  esac\n\tdone\n\tdeplibs=$tmp_deplibs\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\" &&\n\t    test yes = \"$compiler_needs_object\" &&\n\t    test -z \"$libobjs\"; then\n\t    # extract the archives, so we have objects to list.\n\t    # TODO: could optimize this to just extract one archive.\n\t    whole_archive_flag_spec=\n\t  fi\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  else\n\t    gentop=$output_objdir/${outputname}x\n\t    func_append generated \" $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    func_append libobjs \" $func_extract_archives_result\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\tfi\n\n\tif test yes = \"$thread_safe\" && test -n \"$thread_safe_flag_spec\"; then\n\t  eval flag=\\\"$thread_safe_flag_spec\\\"\n\t  func_append linker_flags \" $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test relink = \"$opt_mode\"; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U)' || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test yes = \"$module\" && test -n \"$module_cmds\"; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$module_expsym_cmds\\\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$module_cmds\\\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$archive_expsym_cmds\\\"\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$archive_cmds\\\"\n\t    cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test : != \"$skipped_export\" &&\n\t   func_len \" $test_cmds\" &&\n\t   len=$func_len_result &&\n\t   test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise\n\t  # or, if using GNU ld and skipped_export is not :, use a linker\n\t  # script.\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  func_basename \"$output\"\n\t  output_la=$func_basename_result\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  last_robj=\n\t  k=1\n\n\t  if test -n \"$save_libobjs\" && test : != \"$skipped_export\" && test yes = \"$with_gnu_ld\"; then\n\t    output=$output_objdir/$output_la.lnkscript\n\t    func_verbose \"creating GNU ld script: $output\"\n\t    echo 'INPUT (' > $output\n\t    for obj in $save_libobjs\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    echo ')' >> $output\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$func_to_tool_file_result\n\t  elif test -n \"$save_libobjs\" && test : != \"$skipped_export\" && test -n \"$file_list_spec\"; then\n\t    output=$output_objdir/$output_la.lnk\n\t    func_verbose \"creating linker input file list: $output\"\n\t    : > $output\n\t    set x $save_libobjs\n\t    shift\n\t    firstobj=\n\t    if test yes = \"$compiler_needs_object\"; then\n\t      firstobj=\"$1 \"\n\t      shift\n\t    fi\n\t    for obj\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$firstobj\\\"$file_list_spec$func_to_tool_file_result\\\"\n\t  else\n\t    if test -n \"$save_libobjs\"; then\n\t      func_verbose \"creating reloadable object files...\"\n\t      output=$output_objdir/$output_la-$k.$objext\n\t      eval test_cmds=\\\"$reload_cmds\\\"\n\t      func_len \" $test_cmds\"\n\t      len0=$func_len_result\n\t      len=$len0\n\n\t      # Loop over the list of objects to be linked.\n\t      for obj in $save_libobjs\n\t      do\n\t\tfunc_len \" $obj\"\n\t\tfunc_arith $len + $func_len_result\n\t\tlen=$func_arith_result\n\t\tif test -z \"$objlist\" ||\n\t\t   test \"$len\" -lt \"$max_cmd_len\"; then\n\t\t  func_append objlist \" $obj\"\n\t\telse\n\t\t  # The command $test_cmds is almost too long, add a\n\t\t  # command to the queue.\n\t\t  if test 1 -eq \"$k\"; then\n\t\t    # The first file doesn't have a previous command to add.\n\t\t    reload_objs=$objlist\n\t\t    eval concat_cmds=\\\"$reload_cmds\\\"\n\t\t  else\n\t\t    # All subsequent reloadable object files will link in\n\t\t    # the last one created.\n\t\t    reload_objs=\"$objlist $last_robj\"\n\t\t    eval concat_cmds=\\\"\\$concat_cmds~$reload_cmds~\\$RM $last_robj\\\"\n\t\t  fi\n\t\t  last_robj=$output_objdir/$output_la-$k.$objext\n\t\t  func_arith $k + 1\n\t\t  k=$func_arith_result\n\t\t  output=$output_objdir/$output_la-$k.$objext\n\t\t  objlist=\" $obj\"\n\t\t  func_len \" $last_robj\"\n\t\t  func_arith $len0 + $func_len_result\n\t\t  len=$func_arith_result\n\t\tfi\n\t      done\n\t      # Handle the remaining objects by creating one last\n\t      # reloadable object file.  All subsequent reloadable object\n\t      # files will link in the last one created.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      reload_objs=\"$objlist $last_robj\"\n\t      eval concat_cmds=\\\"\\$concat_cmds$reload_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t        eval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t      func_append delfiles \" $output\"\n\n\t    else\n\t      output=\n\t    fi\n\n\t    ${skipped_export-false} && {\n\t      func_verbose \"generating symbol list for '$libname.la'\"\n\t      export_symbols=$output_objdir/$libname.exp\n\t      $opt_dry_run || $RM $export_symbols\n\t      libobjs=$output\n\t      # Append the command to create the export file.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$export_symbols_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t\teval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t    }\n\n\t    test -n \"$save_libobjs\" &&\n\t      func_verbose \"creating a temporary reloadable object file: $output\"\n\n\t    # Loop through the commands generated above and execute them.\n\t    save_ifs=$IFS; IFS='~'\n\t    for cmd in $concat_cmds; do\n\t      IFS=$save_ifs\n\t      $opt_quiet || {\n\t\t  func_quote_for_expand \"$cmd\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t      }\n\t      $opt_dry_run || eval \"$cmd\" || {\n\t\tlt_exit=$?\n\n\t\t# Restore the uninstalled library and exit\n\t\tif test relink = \"$opt_mode\"; then\n\t\t  ( cd \"$output_objdir\" && \\\n\t\t    $RM \"${realname}T\" && \\\n\t\t    $MV \"${realname}U\" \"$realname\" )\n\t\tfi\n\n\t\texit $lt_exit\n\t      }\n\t    done\n\t    IFS=$save_ifs\n\n\t    if test -n \"$export_symbols_regex\" && ${skipped_export-false}; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\n          ${skipped_export-false} && {\n\t    if test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t      tmp_export_symbols=$export_symbols\n\t      test -n \"$orig_export_symbols\" && tmp_export_symbols=$orig_export_symbols\n\t      $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\t    fi\n\n\t    if test -n \"$orig_export_symbols\"; then\n\t      # The given exports_symbols file has to be filtered, so filter it.\n\t      func_verbose \"filter symbol list for '$libname.la' to tag DATA exports\"\n\t      # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t      # 's' commands, which not all seds can handle. GNU sed should be fine\n\t      # though. Also, the filter scales superlinearly with the number of\n\t      # global variables. join(1) would be nice here, but unfortunately\n\t      # isn't a blessed tool.\n\t      $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t      func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t      export_symbols=$output_objdir/$libname.def\n\t      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\t    fi\n\t  }\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test yes = \"$module\" && test -n \"$module_cmds\"; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t    if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t      cmds=$archive_expsym_cmds\n\t    else\n\t      cmds=$archive_cmds\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$delfiles\"; then\n\t  # Append the command to remove temporary files to $cmds.\n\t  eval cmds=\\\"\\$cmds~\\$RM $delfiles\\\"\n\tfi\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append libobjs \" $func_extract_archives_result\"\n\t  test \"X$libobjs\" = \"X \" && libobjs=\n\tfi\n\n\tsave_ifs=$IFS; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=$sp$nl\n\t  eval cmd=\\\"$cmd\\\"\n\t  IFS=$save_ifs\n\t  $opt_quiet || {\n\t    func_quote_for_expand \"$cmd\"\n\t    eval \"func_echo $func_quote_for_expand_result\"\n\t  }\n\t  $opt_dry_run || eval \"$cmd\" || {\n\t    lt_exit=$?\n\n\t    # Restore the uninstalled library and exit\n\t    if test relink = \"$opt_mode\"; then\n\t      ( cd \"$output_objdir\" && \\\n\t        $RM \"${realname}T\" && \\\n\t\t$MV \"${realname}U\" \"$realname\" )\n\t    fi\n\n\t    exit $lt_exit\n\t  }\n\tdone\n\tIFS=$save_ifs\n\n\t# Restore the uninstalled library and exit\n\tif test relink = \"$opt_mode\"; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname)' || exit $?\n\n\t  if test -n \"$convenience\"; then\n\t    if test -z \"$whole_archive_flag_spec\"; then\n\t      func_show_eval '${RM}r \"$gentop\"'\n\t    fi\n\t  fi\n\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    func_show_eval '(cd \"$output_objdir\" && $RM \"$linkname\" && $LN_S \"$realname\" \"$linkname\")' 'exit $?'\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test yes = \"$module\" || test yes = \"$export_dynamic\"; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=$soname\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n\tfunc_warning \"'-dlopen' is ignored for objects\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"'-l' and '-L' are ignored for objects\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"'-rpath' is ignored for objects\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"'-R' is ignored for objects\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info' is ignored for objects\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for objects\"\n\n      case $output in\n      *.lo)\n\ttest -n \"$objs$old_deplibs\" && \\\n\t  func_fatal_error \"cannot build library object '$output' from non-libtool objects\"\n\n\tlibobj=$output\n\tfunc_lo2o \"$libobj\"\n\tobj=$func_lo2o_result\n\t;;\n      *)\n\tlibobj=\n\tobj=$output\n\t;;\n      esac\n\n      # Delete the old objects.\n      $opt_dry_run || $RM $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # reload_cmds runs $LD directly, so let us get rid of\n      # -Wl from whole_archive_flag_spec and hope we can get by with\n      # turning comma into space..\n      wl=\n\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval tmp_whole_archive_flags=\\\"$whole_archive_flag_spec\\\"\n\t  reload_conv_objs=$reload_objs\\ `$ECHO \"$tmp_whole_archive_flags\" | $SED 's|,| |g'`\n\telse\n\t  gentop=$output_objdir/${obj}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # If we're not building shared, we need to use non_pic_objs\n      test yes = \"$build_libtool_libs\" || libobjs=$non_pic_objects\n\n      # Create the old-style object.\n      reload_objs=$objs$old_deplibs' '`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.$libext$/d; /\\.lib$/d; $lo2o\" | $NL2SP`' '$reload_conv_objs\n\n      output=$obj\n      func_execute_cmds \"$reload_cmds\" 'exit $?'\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      test yes = \"$build_libtool_libs\" || {\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $opt_dry_run || eval \"echo timestamp > $libobj\" || exit $?\n\texit $EXIT_SUCCESS\n      }\n\n      if test -n \"$pic_flag\" || test default != \"$pic_mode\"; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=$libobj\n\tfunc_execute_cmds \"$reload_cmds\" 'exit $?'\n      fi\n\n      if test -n \"$gentop\"; then\n\tfunc_show_eval '${RM}r \"$gentop\"'\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) func_stripname '' '.exe' \"$output\"\n\t          output=$func_stripname_result.exe;;\n      esac\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info' is ignored for programs\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for programs\"\n\n      $preload \\\n\t&& test unknown,unknown,unknown = \"$dlopen_support,$dlopen_self,$dlopen_self_static\" \\\n\t&& func_warning \"'LT_INIT([dlopen])' not used. Assuming no dlopen support.\"\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t;;\n      esac\n\n      case $host in\n      *-*-darwin*)\n\t# Don't allow lazy linking, it breaks C++ global constructors\n\t# But is supposedly fixed on 10.4 or later (yay!).\n\tif test CXX = \"$tagname\"; then\n\t  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in\n\t    10.[0123])\n\t      func_append compile_command \" $wl-bind_at_load\"\n\t      func_append finalize_command \" $wl-bind_at_load\"\n\t    ;;\n\t  esac\n\tfi\n\t# Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t;;\n      esac\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $compile_deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $compile_deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      compile_deplibs=$new_libs\n\n\n      func_append compile_command \" $compile_deplibs\"\n      func_append finalize_command \" $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=$libdir\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$libdir\" | $SED -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  ::) dllsearchpath=$libdir;;\n\t  *) func_append dllsearchpath \":$libdir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=$hardcode_libdirs\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      compile_rpath=$rpath\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=$libdir\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=$hardcode_libdirs\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      finalize_rpath=$rpath\n\n      if test -n \"$libobjs\" && test yes = \"$build_old_libs\"; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$ECHO \"$compile_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$ECHO \"$finalize_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n      fi\n\n      func_generate_dlsyms \"$outputname\" \"@PROGRAM@\" false\n\n      # template prelinking step\n      if test -n \"$prelink_cmds\"; then\n\tfunc_execute_cmds \"$prelink_cmds\" 'exit $?'\n      fi\n\n      wrappers_required=:\n      case $host in\n      *cegcc* | *mingw32ce*)\n        # Disable wrappers for cegcc and mingw32ce hosts, we are cross compiling anyway.\n        wrappers_required=false\n        ;;\n      *cygwin* | *mingw* )\n        test yes = \"$build_libtool_libs\" || wrappers_required=false\n        ;;\n      *)\n        if test no = \"$need_relink\" || test yes != \"$build_libtool_libs\"; then\n          wrappers_required=false\n        fi\n        ;;\n      esac\n      $wrappers_required || {\n\t# Replace the output file specification.\n\tcompile_command=`$ECHO \"$compile_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=$compile_command$compile_rpath\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\texit_status=0\n\tfunc_show_eval \"$link_command\" 'exit_status=$?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\t# Delete the generated files.\n\tif test -f \"$output_objdir/${outputname}S.$objext\"; then\n\t  func_show_eval '$RM \"$output_objdir/${outputname}S.$objext\"'\n\tfi\n\n\texit $exit_status\n      }\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test yes = \"$no_install\"; then\n\t# We don't need to create a wrapper script.\n\tlink_command=$compile_var$compile_command$compile_rpath\n\t# Replace the output file specification.\n\tlink_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$opt_dry_run || $RM $output\n\t# Link the executable and exit\n\tfunc_show_eval \"$link_command\" 'exit $?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      case $hardcode_action,$fast_install in\n        relink,*)\n\t  # Fast installation is not supported\n\t  link_command=$compile_var$compile_command$compile_rpath\n\t  relink_command=$finalize_var$finalize_command$finalize_rpath\n\n\t  func_warning \"this platform does not like uninstalled shared libraries\"\n\t  func_warning \"'$output' will be relinked during installation\"\n\t  ;;\n        *,yes)\n\t  link_command=$finalize_var$compile_command$finalize_rpath\n\t  relink_command=`$ECHO \"$compile_var$compile_command$compile_rpath\" | $SED 's%@OUTPUT@%\\$progdir/\\$file%g'`\n          ;;\n\t*,no)\n\t  link_command=$compile_var$compile_command$compile_rpath\n\t  relink_command=$finalize_var$finalize_command$finalize_rpath\n          ;;\n\t*,needless)\n\t  link_command=$finalize_var$compile_command$finalize_rpath\n\t  relink_command=\n          ;;\n      esac\n\n      # Replace the output file specification.\n      link_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $opt_dry_run || $RM $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      func_show_eval \"$link_command\" 'exit $?'\n\n      if test -n \"$postlink_cmds\"; then\n\tfunc_to_tool_file \"$output_objdir/$outputname\"\n\tpostlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\tfunc_execute_cmds \"$postlink_cmds\" 'exit $?'\n      fi\n\n      # Now create the wrapper script.\n      func_verbose \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    func_quote_for_eval \"$var_value\"\n\t    relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\t  fi\n\tdone\n\trelink_command=\"(cd `pwd`; $relink_command)\"\n\trelink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if not in dry run mode.\n      $opt_dry_run || {\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) func_stripname '' '.exe' \"$output\"\n\t         output=$func_stripname_result ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    func_stripname '' '.exe' \"$outputname\"\n\t    outputname=$func_stripname_result ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n\t    func_dirname_and_basename \"$output\" \"\" \".\"\n\t    output_name=$func_basename_result\n\t    output_path=$func_dirname_result\n\t    cwrappersource=$output_path/$objdir/lt-$output_name.c\n\t    cwrapper=$output_path/$output_name.exe\n\t    $RM $cwrappersource $cwrapper\n\t    trap \"$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_cwrapperexe_src > $cwrappersource\n\n\t    # The wrapper executable is built using the $host compiler,\n\t    # because it contains $host paths and files. If cross-\n\t    # compiling, it, like the target executable, must be\n\t    # executed on the $host or under an emulation environment.\n\t    $opt_dry_run || {\n\t      $LTCC $LTCFLAGS -o $cwrapper $cwrappersource\n\t      $STRIP $cwrapper\n\t    }\n\n\t    # Now, create the wrapper script for func_source use:\n\t    func_ltwrapper_scriptname $cwrapper\n\t    $RM $func_ltwrapper_scriptname_result\n\t    trap \"$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE\" 1 2 15\n\t    $opt_dry_run || {\n\t      # note: this script will not be executed, so do not chmod.\n\t      if test \"x$build\" = \"x$host\"; then\n\t\t$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result\n\t      else\n\t\tfunc_emit_wrapper no > $func_ltwrapper_scriptname_result\n\t      fi\n\t    }\n\t  ;;\n\t  * )\n\t    $RM $output\n\t    trap \"$RM $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_wrapper no > $output\n\t    chmod +x $output\n\t  ;;\n\tesac\n      }\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      case $build_libtool_libs in\n        convenience)\n\t  oldobjs=\"$libobjs_save $symfileobj\"\n\t  addlibs=$convenience\n\t  build_libtool_libs=no\n\t  ;;\n\tmodule)\n\t  oldobjs=$libobjs_save\n\t  addlibs=$old_convenience\n\t  build_libtool_libs=no\n          ;;\n\t*)\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\t  $preload && test -f \"$symfileobj\" \\\n\t    && func_append oldobjs \" $symfileobj\"\n\t  addlibs=$old_convenience\n\t  ;;\n      esac\n\n      if test -n \"$addlibs\"; then\n\tgentop=$output_objdir/${outputname}x\n\tfunc_append generated \" $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\tfunc_append oldobjs \" $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test yes = \"$build_libtool_libs\"; then\n\tcmds=$old_archive_from_new_cmds\n      else\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append oldobjs \" $func_extract_archives_result\"\n\tfi\n\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      func_basename \"$obj\"\n\t      $ECHO \"$func_basename_result\"\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  echo \"copying selected object files to avoid basename conflicts...\"\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\t  func_mkdir_p \"$gentop\"\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_basename \"$obj\"\n\t    objbase=$func_basename_result\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tfunc_arith $counter + 1\n\t\tcounter=$func_arith_result\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      func_show_eval \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      func_append oldobjs \" $gentop/$newobj\"\n\t      ;;\n\t    *) func_append oldobjs \" $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\tfunc_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n\ttool_oldlib=$func_to_tool_file_result\n\teval cmds=\\\"$old_archive_cmds\\\"\n\n\tfunc_len \" $cmds\"\n\tlen=$func_len_result\n\tif test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telif test -n \"$archiver_list_spec\"; then\n\t  func_verbose \"using command file archive linking...\"\n\t  for obj in $oldobjs\n\t  do\n\t    func_to_tool_file \"$obj\"\n\t    $ECHO \"$func_to_tool_file_result\"\n\t  done > $output_objdir/$libname.libcmd\n\t  func_to_tool_file \"$output_objdir/$libname.libcmd\"\n\t  oldobjs=\" $archiver_list_spec$func_to_tool_file_result\"\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  func_verbose \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  eval test_cmds=\\\"$old_archive_cmds\\\"\n\t  func_len \" $test_cmds\"\n\t  len0=$func_len_result\n\t  len=$len0\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_len \" $obj\"\n\t    func_arith $len + $func_len_result\n\t    len=$func_arith_result\n\t    func_append objlist \" $obj\"\n\t    if test \"$len\" -lt \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\"; then\n\t\tRANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$old_archive_cmds\\\"\n\t      objlist=\n\t      len=$len0\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test -z \"$oldobjs\"; then\n\t    eval cmds=\\\"\\$concat_cmds\\\"\n\t  else\n\t    eval cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\n\t  fi\n\tfi\n      fi\n      func_execute_cmds \"$cmds\" 'exit $?'\n    done\n\n    test -n \"$generated\" && \\\n      func_show_eval \"${RM}r$generated\"\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test yes = \"$build_old_libs\" && old_library=$libname.$libext\n      func_verbose \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  func_quote_for_eval \"$var_value\"\n\t  relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      relink_command=\"(cd `pwd`; $SHELL \\\"$progpath\\\" $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      relink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      if test yes = \"$hardcode_automatic\"; then\n\trelink_command=\n      fi\n\n      # Only create the output if not a dry run.\n      $opt_dry_run || {\n\tfor installed in no yes; do\n\t  if test yes = \"$installed\"; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=$output_objdir/${outputname}i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tfunc_basename \"$deplib\"\n\t\tname=$func_basename_result\n\t\tfunc_resolve_sysroot \"$deplib\"\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $func_resolve_sysroot_result`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$deplib' is not a valid libtool archive\"\n\t\tfunc_append newdependency_libs \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      -L*)\n\t\tfunc_stripname -L '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -L$func_replace_sysroot_result\"\n\t\t;;\n\t      -R*)\n\t\tfunc_stripname -R '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -R$func_replace_sysroot_result\"\n\t\t;;\n\t      *) func_append newdependency_libs \" $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=$newdependency_libs\n\t    newdlfiles=\n\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t      *.la)\n\t        func_basename \"$lib\"\n\t\tname=$func_basename_result\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlfiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      *) func_append newdlfiles \" $lib\" ;;\n\t      esac\n\t    done\n\t    dlfiles=$newdlfiles\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t      *.la)\n\t\t# Only pass preopened files to the pseudo-archive (for\n\t\t# eventual linking with the app. that links it) if we\n\t\t# didn't already link the preopened objects directly into\n\t\t# the library:\n\t\tfunc_basename \"$lib\"\n\t\tname=$func_basename_result\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlprefiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      esac\n\t    done\n\t    dlprefiles=$newdlprefiles\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=$lib ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlfiles \" $abs\"\n\t    done\n\t    dlfiles=$newdlfiles\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=$lib ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlprefiles \" $abs\"\n\t    done\n\t    dlprefiles=$newdlprefiles\n\t  fi\n\t  $RM $output\n\t  # place dlname in correct position for cygwin\n\t  # In fact, it would be nice if we could use this code for all target\n\t  # systems that can't hard-code library paths into their executables\n\t  # and that have no shared library path variable independent of PATH,\n\t  # but it turns out we can't easily determine that from inspecting\n\t  # libtool variables, so we have to hard-code the OSs to which it\n\t  # applies here; at the moment, that means platforms that use the PE\n\t  # object format with DLL files.  See the long comment at the top of\n\t  # tests/bindir.at for full details.\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll)\n\t      # If a -bindir argument was supplied, place the dll there.\n\t      if test -n \"$bindir\"; then\n\t\tfunc_relative_path \"$install_libdir\" \"$bindir\"\n\t\ttdlname=$func_relative_path_result/$dlname\n\t      else\n\t\t# Otherwise fall back on heuristic.\n\t\ttdlname=../bin/$dlname\n\t      fi\n\t      ;;\n\t  esac\n\t  $ECHO > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Linker flags that cannot go in dependency_libs.\ninherited_linker_flags='$new_inherited_linker_flags'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Names of additional weak libraries provided by this library\nweak_library_names='$weak_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test no,yes = \"$installed,$need_relink\"; then\n\t    $ECHO >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      }\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      func_show_eval '( cd \"$output_objdir\" && $RM \"$outputname\" && $LN_S \"../$outputname\" \"$outputname\" )' 'exit $?'\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n}\n\nif test link = \"$opt_mode\" || test relink = \"$opt_mode\"; then\n  func_mode_link ${1+\"$@\"}\nfi\n\n\n# func_mode_uninstall arg...\nfunc_mode_uninstall ()\n{\n    $debug_cmd\n\n    RM=$nonopt\n    files=\n    rmforce=false\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=$magic\n\n    for arg\n    do\n      case $arg in\n      -f) func_append RM \" $arg\"; rmforce=: ;;\n      -*) func_append RM \" $arg\" ;;\n      *) func_append files \" $arg\" ;;\n      esac\n    done\n\n    test -z \"$RM\" && \\\n      func_fatal_help \"you must specify an RM program\"\n\n    rmdirs=\n\n    for file in $files; do\n      func_dirname \"$file\" \"\" \".\"\n      dir=$func_dirname_result\n      if test . = \"$dir\"; then\n\todir=$objdir\n      else\n\todir=$dir/$objdir\n      fi\n      func_basename \"$file\"\n      name=$func_basename_result\n      test uninstall = \"$opt_mode\" && odir=$dir\n\n      # Remember odir for removal later, being careful to avoid duplicates\n      if test clean = \"$opt_mode\"; then\n\tcase \" $rmdirs \" in\n\t  *\" $odir \"*) ;;\n\t  *) func_append rmdirs \" $odir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if { test -L \"$file\"; } >/dev/null 2>&1 ||\n\t { test -h \"$file\"; } >/dev/null 2>&1 ||\n\t test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif $rmforce; then\n\tcontinue\n      fi\n\n      rmfiles=$file\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif func_lalib_p \"$file\"; then\n\t  func_source $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    func_append rmfiles \" $odir/$n\"\n\t  done\n\t  test -n \"$old_library\" && func_append rmfiles \" $odir/$old_library\"\n\n\t  case $opt_mode in\n\t  clean)\n\t    case \" $library_names \" in\n\t    *\" $dlname \"*) ;;\n\t    *) test -n \"$dlname\" && func_append rmfiles \" $odir/$dlname\" ;;\n\t    esac\n\t    test -n \"$libdir\" && func_append rmfiles \" $odir/$name $odir/${name}i\"\n\t    ;;\n\t  uninstall)\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      func_execute_cmds \"$postuninstall_cmds\" '$rmforce || exit_status=1'\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      func_execute_cmds \"$old_postuninstall_cmds\" '$rmforce || exit_status=1'\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t    ;;\n\t  esac\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif func_lalib_p \"$file\"; then\n\n\t  # Read the .lo file\n\t  func_source $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" && test none != \"$pic_object\"; then\n\t    func_append rmfiles \" $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" && test none != \"$non_pic_object\"; then\n\t    func_append rmfiles \" $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test clean = \"$opt_mode\"; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    func_stripname '' '.exe' \"$file\"\n\t    file=$func_stripname_result\n\t    func_stripname '' '.exe' \"$name\"\n\t    noexename=$func_stripname_result\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    func_append rmfiles \" $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if func_ltwrapper_p \"$file\"; then\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      relink_command=\n\t      func_source $func_ltwrapper_scriptname_result\n\t      func_append rmfiles \" $func_ltwrapper_scriptname_result\"\n\t    else\n\t      relink_command=\n\t      func_source $dir/$noexename\n\t    fi\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    func_append rmfiles \" $odir/$name $odir/${name}S.$objext\"\n\t    if test yes = \"$fast_install\" && test -n \"$relink_command\"; then\n\t      func_append rmfiles \" $odir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\"; then\n\t      func_append rmfiles \" $odir/lt-$noexename.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      func_show_eval \"$RM $rmfiles\" 'exit_status=1'\n    done\n\n    # Try to remove the $objdir's in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\tfunc_show_eval \"rmdir $dir >/dev/null 2>&1\"\n      fi\n    done\n\n    exit $exit_status\n}\n\nif test uninstall = \"$opt_mode\" || test clean = \"$opt_mode\"; then\n  func_mode_uninstall ${1+\"$@\"}\nfi\n\ntest -z \"$opt_mode\" && {\n  help=$generic_help\n  func_fatal_help \"you must specify a MODE\"\n}\n\ntest -z \"$exec_cmd\" && \\\n  func_fatal_help \"invalid operation mode '$opt_mode'\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec \"$exec_cmd\"\n  exit $EXIT_FAILURE\nfi\n\nexit $exit_status\n\n\n# The TAGs below are defined such that we never get into a situation\n# where we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\nbuild_libtool_libs=no\nbuild_old_libs=yes\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\nbuild_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_ctypes/libffi/aclocal.m4": "# generated automatically by aclocal 1.13.4 -*- Autoconf -*-\n\n# Copyright (C) 1996-2013 Free Software Foundation, Inc.\n\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n# PARTICULAR PURPOSE.\n\nm4_ifndef([AC_CONFIG_MACRO_DIRS], [m4_defun([_AM_CONFIG_MACRO_DIRS], [])m4_defun([AC_CONFIG_MACRO_DIRS], [_AM_CONFIG_MACRO_DIRS($@)])])\nm4_ifndef([AC_AUTOCONF_VERSION],\n  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl\nm4_if(m4_defn([AC_AUTOCONF_VERSION]), [2.69],,\n[m4_warning([this file was generated for autoconf 2.69.\nYou have another version of autoconf.  It may work, but is not guaranteed to.\nIf you have problems, you may need to regenerate the build system entirely.\nTo do so, use the procedure documented by the package, typically 'autoreconf'.])])\n\n# ltdl.m4 - Configure ltdl for the target system. -*-Autoconf-*-\n#\n#   Copyright (C) 1999-2006, 2007, 2008, 2011 Free Software Foundation, Inc.\n#   Written by Thomas Tanner, 1999\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\n# serial 18 LTDL_INIT\n\n# LT_CONFIG_LTDL_DIR(DIRECTORY, [LTDL-MODE])\n# ------------------------------------------\n# DIRECTORY contains the libltdl sources.  It is okay to call this\n# function multiple times, as long as the same DIRECTORY is always given.\nAC_DEFUN([LT_CONFIG_LTDL_DIR],\n[AC_BEFORE([$0], [LTDL_INIT])\n_$0($*)\n])# LT_CONFIG_LTDL_DIR\n\n# We break this out into a separate macro, so that we can call it safely\n# internally without being caught accidentally by the sed scan in libtoolize.\nm4_defun([_LT_CONFIG_LTDL_DIR],\n[dnl remove trailing slashes\nm4_pushdef([_ARG_DIR], m4_bpatsubst([$1], [/*$]))\nm4_case(_LTDL_DIR,\n\t[], [dnl only set lt_ltdl_dir if _ARG_DIR is not simply `.'\n\t     m4_if(_ARG_DIR, [.],\n\t             [],\n\t\t [m4_define([_LTDL_DIR], _ARG_DIR)\n\t          _LT_SHELL_INIT([lt_ltdl_dir=']_ARG_DIR['])])],\n    [m4_if(_ARG_DIR, _LTDL_DIR,\n\t    [],\n\t[m4_fatal([multiple libltdl directories: `]_LTDL_DIR[', `]_ARG_DIR['])])])\nm4_popdef([_ARG_DIR])\n])# _LT_CONFIG_LTDL_DIR\n\n# Initialise:\nm4_define([_LTDL_DIR], [])\n\n\n# _LT_BUILD_PREFIX\n# ----------------\n# If Autoconf is new enough, expand to `${top_build_prefix}', otherwise\n# to `${top_builddir}/'.\nm4_define([_LT_BUILD_PREFIX],\n[m4_ifdef([AC_AUTOCONF_VERSION],\n   [m4_if(m4_version_compare(m4_defn([AC_AUTOCONF_VERSION]), [2.62]),\n\t  [-1], [m4_ifdef([_AC_HAVE_TOP_BUILD_PREFIX],\n\t\t\t  [${top_build_prefix}],\n\t\t\t  [${top_builddir}/])],\n\t  [${top_build_prefix}])],\n   [${top_builddir}/])[]dnl\n])\n\n\n# LTDL_CONVENIENCE\n# ----------------\n# sets LIBLTDL to the link flags for the libltdl convenience library and\n# LTDLINCL to the include flags for the libltdl header and adds\n# --enable-ltdl-convenience to the configure arguments.  Note that\n# AC_CONFIG_SUBDIRS is not called here.  LIBLTDL will be prefixed with\n# '${top_build_prefix}' if available, otherwise with '${top_builddir}/',\n# and LTDLINCL will be prefixed with '${top_srcdir}/' (note the single\n# quotes!).  If your package is not flat and you're not using automake,\n# define top_build_prefix, top_builddir, and top_srcdir appropriately\n# in your Makefiles.\nAC_DEFUN([LTDL_CONVENIENCE],\n[AC_BEFORE([$0], [LTDL_INIT])dnl\ndnl Although the argument is deprecated and no longer documented,\ndnl LTDL_CONVENIENCE used to take a DIRECTORY orgument, if we have one\ndnl here make sure it is the same as any other declaration of libltdl's\ndnl location!  This also ensures lt_ltdl_dir is set when configure.ac is\ndnl not yet using an explicit LT_CONFIG_LTDL_DIR.\nm4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl\n_$0()\n])# LTDL_CONVENIENCE\n\n# AC_LIBLTDL_CONVENIENCE accepted a directory argument in older libtools,\n# now we have LT_CONFIG_LTDL_DIR:\nAU_DEFUN([AC_LIBLTDL_CONVENIENCE],\n[_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])\n_LTDL_CONVENIENCE])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBLTDL_CONVENIENCE], [])\n\n\n# _LTDL_CONVENIENCE\n# -----------------\n# Code shared by LTDL_CONVENIENCE and LTDL_INIT([convenience]).\nm4_defun([_LTDL_CONVENIENCE],\n[case $enable_ltdl_convenience in\n  no) AC_MSG_ERROR([this package needs a convenience libltdl]) ;;\n  \"\") enable_ltdl_convenience=yes\n      ac_configure_args=\"$ac_configure_args --enable-ltdl-convenience\" ;;\nesac\nLIBLTDL='_LT_BUILD_PREFIX'\"${lt_ltdl_dir+$lt_ltdl_dir/}libltdlc.la\"\nLTDLDEPS=$LIBLTDL\nLTDLINCL='-I${top_srcdir}'\"${lt_ltdl_dir+/$lt_ltdl_dir}\"\n\nAC_SUBST([LIBLTDL])\nAC_SUBST([LTDLDEPS])\nAC_SUBST([LTDLINCL])\n\n# For backwards non-gettext consistent compatibility...\nINCLTDL=\"$LTDLINCL\"\nAC_SUBST([INCLTDL])\n])# _LTDL_CONVENIENCE\n\n\n# LTDL_INSTALLABLE\n# ----------------\n# sets LIBLTDL to the link flags for the libltdl installable library\n# and LTDLINCL to the include flags for the libltdl header and adds\n# --enable-ltdl-install to the configure arguments.  Note that\n# AC_CONFIG_SUBDIRS is not called from here.  If an installed libltdl\n# is not found, LIBLTDL will be prefixed with '${top_build_prefix}' if\n# available, otherwise with '${top_builddir}/', and LTDLINCL will be\n# prefixed with '${top_srcdir}/' (note the single quotes!).  If your\n# package is not flat and you're not using automake, define top_build_prefix,\n# top_builddir, and top_srcdir appropriately in your Makefiles.\n# In the future, this macro may have to be called after LT_INIT.\nAC_DEFUN([LTDL_INSTALLABLE],\n[AC_BEFORE([$0], [LTDL_INIT])dnl\ndnl Although the argument is deprecated and no longer documented,\ndnl LTDL_INSTALLABLE used to take a DIRECTORY orgument, if we have one\ndnl here make sure it is the same as any other declaration of libltdl's\ndnl location!  This also ensures lt_ltdl_dir is set when configure.ac is\ndnl not yet using an explicit LT_CONFIG_LTDL_DIR.\nm4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl\n_$0()\n])# LTDL_INSTALLABLE\n\n# AC_LIBLTDL_INSTALLABLE accepted a directory argument in older libtools,\n# now we have LT_CONFIG_LTDL_DIR:\nAU_DEFUN([AC_LIBLTDL_INSTALLABLE],\n[_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])\n_LTDL_INSTALLABLE])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBLTDL_INSTALLABLE], [])\n\n\n# _LTDL_INSTALLABLE\n# -----------------\n# Code shared by LTDL_INSTALLABLE and LTDL_INIT([installable]).\nm4_defun([_LTDL_INSTALLABLE],\n[if test -f $prefix/lib/libltdl.la; then\n  lt_save_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"-L$prefix/lib $LDFLAGS\"\n  AC_CHECK_LIB([ltdl], [lt_dlinit], [lt_lib_ltdl=yes])\n  LDFLAGS=\"$lt_save_LDFLAGS\"\n  if test x\"${lt_lib_ltdl-no}\" = xyes; then\n    if test x\"$enable_ltdl_install\" != xyes; then\n      # Don't overwrite $prefix/lib/libltdl.la without --enable-ltdl-install\n      AC_MSG_WARN([not overwriting libltdl at $prefix, force with `--enable-ltdl-install'])\n      enable_ltdl_install=no\n    fi\n  elif test x\"$enable_ltdl_install\" = xno; then\n    AC_MSG_WARN([libltdl not installed, but installation disabled])\n  fi\nfi\n\n# If configure.ac declared an installable ltdl, and the user didn't override\n# with --disable-ltdl-install, we will install the shipped libltdl.\ncase $enable_ltdl_install in\n  no) ac_configure_args=\"$ac_configure_args --enable-ltdl-install=no\"\n      LIBLTDL=\"-lltdl\"\n      LTDLDEPS=\n      LTDLINCL=\n      ;;\n  *)  enable_ltdl_install=yes\n      ac_configure_args=\"$ac_configure_args --enable-ltdl-install\"\n      LIBLTDL='_LT_BUILD_PREFIX'\"${lt_ltdl_dir+$lt_ltdl_dir/}libltdl.la\"\n      LTDLDEPS=$LIBLTDL\n      LTDLINCL='-I${top_srcdir}'\"${lt_ltdl_dir+/$lt_ltdl_dir}\"\n      ;;\nesac\n\nAC_SUBST([LIBLTDL])\nAC_SUBST([LTDLDEPS])\nAC_SUBST([LTDLINCL])\n\n# For backwards non-gettext consistent compatibility...\nINCLTDL=\"$LTDLINCL\"\nAC_SUBST([INCLTDL])\n])# LTDL_INSTALLABLE\n\n\n# _LTDL_MODE_DISPATCH\n# -------------------\nm4_define([_LTDL_MODE_DISPATCH],\n[dnl If _LTDL_DIR is `.', then we are configuring libltdl itself:\nm4_if(_LTDL_DIR, [],\n\t[],\n    dnl if _LTDL_MODE was not set already, the default value is `subproject':\n    [m4_case(m4_default(_LTDL_MODE, [subproject]),\n\t  [subproject], [AC_CONFIG_SUBDIRS(_LTDL_DIR)\n\t\t\t  _LT_SHELL_INIT([lt_dlopen_dir=\"$lt_ltdl_dir\"])],\n\t  [nonrecursive], [_LT_SHELL_INIT([lt_dlopen_dir=\"$lt_ltdl_dir\"; lt_libobj_prefix=\"$lt_ltdl_dir/\"])],\n\t  [recursive], [],\n\t[m4_fatal([unknown libltdl mode: ]_LTDL_MODE)])])dnl\ndnl Be careful not to expand twice:\nm4_define([$0], [])\n])# _LTDL_MODE_DISPATCH\n\n\n# _LT_LIBOBJ(MODULE_NAME)\n# -----------------------\n# Like AC_LIBOBJ, except that MODULE_NAME goes into _LT_LIBOBJS instead\n# of into LIBOBJS.\nAC_DEFUN([_LT_LIBOBJ], [\n  m4_pattern_allow([^_LT_LIBOBJS$])\n  _LT_LIBOBJS=\"$_LT_LIBOBJS $1.$ac_objext\"\n])# _LT_LIBOBJS\n\n\n# LTDL_INIT([OPTIONS])\n# --------------------\n# Clients of libltdl can use this macro to allow the installer to\n# choose between a shipped copy of the ltdl sources or a preinstalled\n# version of the library.  If the shipped ltdl sources are not in a\n# subdirectory named libltdl, the directory name must be given by\n# LT_CONFIG_LTDL_DIR.\nAC_DEFUN([LTDL_INIT],\n[dnl Parse OPTIONS\n_LT_SET_OPTIONS([$0], [$1])\n\ndnl We need to keep our own list of libobjs separate from our parent project,\ndnl and the easiest way to do that is redefine the AC_LIBOBJs macro while\ndnl we look for our own LIBOBJs.\nm4_pushdef([AC_LIBOBJ], m4_defn([_LT_LIBOBJ]))\nm4_pushdef([AC_LIBSOURCES])\n\ndnl If not otherwise defined, default to the 1.5.x compatible subproject mode:\nm4_if(_LTDL_MODE, [],\n        [m4_define([_LTDL_MODE], m4_default([$2], [subproject]))\n        m4_if([-1], [m4_bregexp(_LTDL_MODE, [\\(subproject\\|\\(non\\)?recursive\\)])],\n                [m4_fatal([unknown libltdl mode: ]_LTDL_MODE)])])\n\nAC_ARG_WITH([included_ltdl],\n    [AS_HELP_STRING([--with-included-ltdl],\n                    [use the GNU ltdl sources included here])])\n\nif test \"x$with_included_ltdl\" != xyes; then\n  # We are not being forced to use the included libltdl sources, so\n  # decide whether there is a useful installed version we can use.\n  AC_CHECK_HEADER([ltdl.h],\n      [AC_CHECK_DECL([lt_dlinterface_register],\n\t   [AC_CHECK_LIB([ltdl], [lt_dladvise_preload],\n\t       [with_included_ltdl=no],\n\t       [with_included_ltdl=yes])],\n\t   [with_included_ltdl=yes],\n\t   [AC_INCLUDES_DEFAULT\n\t    #include <ltdl.h>])],\n      [with_included_ltdl=yes],\n      [AC_INCLUDES_DEFAULT]\n  )\nfi\n\ndnl If neither LT_CONFIG_LTDL_DIR, LTDL_CONVENIENCE nor LTDL_INSTALLABLE\ndnl was called yet, then for old times' sake, we assume libltdl is in an\ndnl eponymous directory:\nAC_PROVIDE_IFELSE([LT_CONFIG_LTDL_DIR], [], [_LT_CONFIG_LTDL_DIR([libltdl])])\n\nAC_ARG_WITH([ltdl_include],\n    [AS_HELP_STRING([--with-ltdl-include=DIR],\n                    [use the ltdl headers installed in DIR])])\n\nif test -n \"$with_ltdl_include\"; then\n  if test -f \"$with_ltdl_include/ltdl.h\"; then :\n  else\n    AC_MSG_ERROR([invalid ltdl include directory: `$with_ltdl_include'])\n  fi\nelse\n  with_ltdl_include=no\nfi\n\nAC_ARG_WITH([ltdl_lib],\n    [AS_HELP_STRING([--with-ltdl-lib=DIR],\n                    [use the libltdl.la installed in DIR])])\n\nif test -n \"$with_ltdl_lib\"; then\n  if test -f \"$with_ltdl_lib/libltdl.la\"; then :\n  else\n    AC_MSG_ERROR([invalid ltdl library directory: `$with_ltdl_lib'])\n  fi\nelse\n  with_ltdl_lib=no\nfi\n\ncase ,$with_included_ltdl,$with_ltdl_include,$with_ltdl_lib, in\n  ,yes,no,no,)\n\tm4_case(m4_default(_LTDL_TYPE, [convenience]),\n\t    [convenience], [_LTDL_CONVENIENCE],\n\t    [installable], [_LTDL_INSTALLABLE],\n\t  [m4_fatal([unknown libltdl build type: ]_LTDL_TYPE)])\n\t;;\n  ,no,no,no,)\n\t# If the included ltdl is not to be used, then use the\n\t# preinstalled libltdl we found.\n\tAC_DEFINE([HAVE_LTDL], [1],\n\t  [Define this if a modern libltdl is already installed])\n\tLIBLTDL=-lltdl\n\tLTDLDEPS=\n\tLTDLINCL=\n\t;;\n  ,no*,no,*)\n\tAC_MSG_ERROR([`--with-ltdl-include' and `--with-ltdl-lib' options must be used together])\n\t;;\n  *)\twith_included_ltdl=no\n\tLIBLTDL=\"-L$with_ltdl_lib -lltdl\"\n\tLTDLDEPS=\n\tLTDLINCL=\"-I$with_ltdl_include\"\n\t;;\nesac\nINCLTDL=\"$LTDLINCL\"\n\n# Report our decision...\nAC_MSG_CHECKING([where to find libltdl headers])\nAC_MSG_RESULT([$LTDLINCL])\nAC_MSG_CHECKING([where to find libltdl library])\nAC_MSG_RESULT([$LIBLTDL])\n\n_LTDL_SETUP\n\ndnl restore autoconf definition.\nm4_popdef([AC_LIBOBJ])\nm4_popdef([AC_LIBSOURCES])\n\nAC_CONFIG_COMMANDS_PRE([\n    _ltdl_libobjs=\n    _ltdl_ltlibobjs=\n    if test -n \"$_LT_LIBOBJS\"; then\n      # Remove the extension.\n      _lt_sed_drop_objext='s/\\.o$//;s/\\.obj$//'\n      for i in `for i in $_LT_LIBOBJS; do echo \"$i\"; done | sed \"$_lt_sed_drop_objext\" | sort -u`; do\n        _ltdl_libobjs=\"$_ltdl_libobjs $lt_libobj_prefix$i.$ac_objext\"\n        _ltdl_ltlibobjs=\"$_ltdl_ltlibobjs $lt_libobj_prefix$i.lo\"\n      done\n    fi\n    AC_SUBST([ltdl_LIBOBJS], [$_ltdl_libobjs])\n    AC_SUBST([ltdl_LTLIBOBJS], [$_ltdl_ltlibobjs])\n])\n\n# Only expand once:\nm4_define([LTDL_INIT])\n])# LTDL_INIT\n\n# Old names:\nAU_DEFUN([AC_LIB_LTDL], [LTDL_INIT($@)])\nAU_DEFUN([AC_WITH_LTDL], [LTDL_INIT($@)])\nAU_DEFUN([LT_WITH_LTDL], [LTDL_INIT($@)])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIB_LTDL], [])\ndnl AC_DEFUN([AC_WITH_LTDL], [])\ndnl AC_DEFUN([LT_WITH_LTDL], [])\n\n\n# _LTDL_SETUP\n# -----------\n# Perform all the checks necessary for compilation of the ltdl objects\n#  -- including compiler checks and header checks.  This is a public\n# interface  mainly for the benefit of libltdl's own configure.ac, most\n# other users should call LTDL_INIT instead.\nAC_DEFUN([_LTDL_SETUP],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([LT_SYS_MODULE_EXT])dnl\nAC_REQUIRE([LT_SYS_MODULE_PATH])dnl\nAC_REQUIRE([LT_SYS_DLSEARCH_PATH])dnl\nAC_REQUIRE([LT_LIB_DLLOAD])dnl\nAC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl\nAC_REQUIRE([LT_FUNC_DLSYM_USCORE])dnl\nAC_REQUIRE([LT_SYS_DLOPEN_DEPLIBS])dnl\nAC_REQUIRE([gl_FUNC_ARGZ])dnl\n\nm4_require([_LT_CHECK_OBJDIR])dnl\nm4_require([_LT_HEADER_DLFCN])dnl\nm4_require([_LT_CHECK_DLPREOPEN])dnl\nm4_require([_LT_DECL_SED])dnl\n\ndnl Don't require this, or it will be expanded earlier than the code\ndnl that sets the variables it relies on:\n_LT_ENABLE_INSTALL\n\ndnl _LTDL_MODE specific code must be called at least once:\n_LTDL_MODE_DISPATCH\n\n# In order that ltdl.c can compile, find out the first AC_CONFIG_HEADERS\n# the user used.  This is so that ltdl.h can pick up the parent projects\n# config.h file, The first file in AC_CONFIG_HEADERS must contain the\n# definitions required by ltdl.c.\n# FIXME: Remove use of undocumented AC_LIST_HEADERS (2.59 compatibility).\nAC_CONFIG_COMMANDS_PRE([dnl\nm4_pattern_allow([^LT_CONFIG_H$])dnl\nm4_ifset([AH_HEADER],\n    [LT_CONFIG_H=AH_HEADER],\n    [m4_ifset([AC_LIST_HEADERS],\n\t    [LT_CONFIG_H=`echo \"AC_LIST_HEADERS\" | $SED 's,^[[      ]]*,,;s,[[ :]].*$,,'`],\n\t[])])])\nAC_SUBST([LT_CONFIG_H])\n\nAC_CHECK_HEADERS([unistd.h dl.h sys/dl.h dld.h mach-o/dyld.h dirent.h],\n\t[], [], [AC_INCLUDES_DEFAULT])\n\nAC_CHECK_FUNCS([closedir opendir readdir], [], [AC_LIBOBJ([lt__dirent])])\nAC_CHECK_FUNCS([strlcat strlcpy], [], [AC_LIBOBJ([lt__strl])])\n\nm4_pattern_allow([LT_LIBEXT])dnl\nAC_DEFINE_UNQUOTED([LT_LIBEXT],[\"$libext\"],[The archive extension])\n\nname=\neval \"lt_libprefix=\\\"$libname_spec\\\"\"\nm4_pattern_allow([LT_LIBPREFIX])dnl\nAC_DEFINE_UNQUOTED([LT_LIBPREFIX],[\"$lt_libprefix\"],[The archive prefix])\n\nname=ltdl\neval \"LTDLOPEN=\\\"$libname_spec\\\"\"\nAC_SUBST([LTDLOPEN])\n])# _LTDL_SETUP\n\n\n# _LT_ENABLE_INSTALL\n# ------------------\nm4_define([_LT_ENABLE_INSTALL],\n[AC_ARG_ENABLE([ltdl-install],\n    [AS_HELP_STRING([--enable-ltdl-install], [install libltdl])])\n\ncase ,${enable_ltdl_install},${enable_ltdl_convenience} in\n  *yes*) ;;\n  *) enable_ltdl_convenience=yes ;;\nesac\n\nm4_ifdef([AM_CONDITIONAL],\n[AM_CONDITIONAL(INSTALL_LTDL, test x\"${enable_ltdl_install-no}\" != xno)\n AM_CONDITIONAL(CONVENIENCE_LTDL, test x\"${enable_ltdl_convenience-no}\" != xno)])\n])# _LT_ENABLE_INSTALL\n\n\n# LT_SYS_DLOPEN_DEPLIBS\n# ---------------------\nAC_DEFUN([LT_SYS_DLOPEN_DEPLIBS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_CACHE_CHECK([whether deplibs are loaded by dlopen],\n  [lt_cv_sys_dlopen_deplibs],\n  [# PORTME does your system automatically load deplibs for dlopen?\n  # or its logical equivalent (e.g. shl_load for HP-UX < 11)\n  # For now, we just catch OSes we know something about -- in the\n  # future, we'll try test this programmatically.\n  lt_cv_sys_dlopen_deplibs=unknown\n  case $host_os in\n  aix3*|aix4.1.*|aix4.2.*)\n    # Unknown whether this is true for these versions of AIX, but\n    # we want this `case' here to explicitly catch those versions.\n    lt_cv_sys_dlopen_deplibs=unknown\n    ;;\n  aix[[4-9]]*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  amigaos*)\n    case $host_cpu in\n    powerpc)\n      lt_cv_sys_dlopen_deplibs=no\n      ;;\n    esac\n    ;;\n  darwin*)\n    # Assuming the user has installed a libdl from somewhere, this is true\n    # If you are looking for one http://www.opendarwin.org/projects/dlcompat\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  freebsd* | dragonfly*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  gnu* | linux* | k*bsd*-gnu | kopensolaris*-gnu)\n    # GNU and its variants, using gnu ld.so (Glibc)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  hpux10*|hpux11*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  interix*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  irix[[12345]]*|irix6.[[01]]*)\n    # Catch all versions of IRIX before 6.2, and indicate that we don't\n    # know how it worked for any of those versions.\n    lt_cv_sys_dlopen_deplibs=unknown\n    ;;\n  irix*)\n    # The case above catches anything before 6.2, and it's known that\n    # at 6.2 and later dlopen does load deplibs.\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  netbsd*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  openbsd*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  osf[[1234]]*)\n    # dlopen did load deplibs (at least at 4.x), but until the 5.x series,\n    # it did *not* use an RPATH in a shared library to find objects the\n    # library depends on, so we explicitly say `no'.\n    lt_cv_sys_dlopen_deplibs=no\n    ;;\n  osf5.0|osf5.0a|osf5.1)\n    # dlopen *does* load deplibs and with the right loader patch applied\n    # it even uses RPATH in a shared library to search for shared objects\n    # that the library depends on, but there's no easy way to know if that\n    # patch is installed.  Since this is the case, all we can really\n    # say is unknown -- it depends on the patch being installed.  If\n    # it is, this changes to `yes'.  Without it, it would be `no'.\n    lt_cv_sys_dlopen_deplibs=unknown\n    ;;\n  osf*)\n    # the two cases above should catch all versions of osf <= 5.1.  Read\n    # the comments above for what we know about them.\n    # At > 5.1, deplibs are loaded *and* any RPATH in a shared library\n    # is used to find them so we can finally say `yes'.\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  qnx*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  solaris*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n    libltdl_cv_sys_dlopen_deplibs=yes\n    ;;\n  esac\n  ])\nif test \"$lt_cv_sys_dlopen_deplibs\" != yes; then\n AC_DEFINE([LTDL_DLOPEN_DEPLIBS], [1],\n    [Define if the OS needs help to load dependent libraries for dlopen().])\nfi\n])# LT_SYS_DLOPEN_DEPLIBS\n\n# Old name:\nAU_ALIAS([AC_LTDL_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [])\n\n\n# LT_SYS_MODULE_EXT\n# -----------------\nAC_DEFUN([LT_SYS_MODULE_EXT],\n[m4_require([_LT_SYS_DYNAMIC_LINKER])dnl\nAC_CACHE_CHECK([which extension is used for runtime loadable modules],\n  [libltdl_cv_shlibext],\n[\nmodule=yes\neval libltdl_cv_shlibext=$shrext_cmds\nmodule=no\neval libltdl_cv_shrext=$shrext_cmds\n  ])\nif test -n \"$libltdl_cv_shlibext\"; then\n  m4_pattern_allow([LT_MODULE_EXT])dnl\n  AC_DEFINE_UNQUOTED([LT_MODULE_EXT], [\"$libltdl_cv_shlibext\"],\n    [Define to the extension used for runtime loadable modules, say, \".so\".])\nfi\nif test \"$libltdl_cv_shrext\" != \"$libltdl_cv_shlibext\"; then\n  m4_pattern_allow([LT_SHARED_EXT])dnl\n  AC_DEFINE_UNQUOTED([LT_SHARED_EXT], [\"$libltdl_cv_shrext\"],\n    [Define to the shared library suffix, say, \".dylib\".])\nfi\n])# LT_SYS_MODULE_EXT\n\n# Old name:\nAU_ALIAS([AC_LTDL_SHLIBEXT], [LT_SYS_MODULE_EXT])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_SHLIBEXT], [])\n\n\n# LT_SYS_MODULE_PATH\n# ------------------\nAC_DEFUN([LT_SYS_MODULE_PATH],\n[m4_require([_LT_SYS_DYNAMIC_LINKER])dnl\nAC_CACHE_CHECK([which variable specifies run-time module search path],\n  [lt_cv_module_path_var], [lt_cv_module_path_var=\"$shlibpath_var\"])\nif test -n \"$lt_cv_module_path_var\"; then\n  m4_pattern_allow([LT_MODULE_PATH_VAR])dnl\n  AC_DEFINE_UNQUOTED([LT_MODULE_PATH_VAR], [\"$lt_cv_module_path_var\"],\n    [Define to the name of the environment variable that determines the run-time module search path.])\nfi\n])# LT_SYS_MODULE_PATH\n\n# Old name:\nAU_ALIAS([AC_LTDL_SHLIBPATH], [LT_SYS_MODULE_PATH])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_SHLIBPATH], [])\n\n\n# LT_SYS_DLSEARCH_PATH\n# --------------------\nAC_DEFUN([LT_SYS_DLSEARCH_PATH],\n[m4_require([_LT_SYS_DYNAMIC_LINKER])dnl\nAC_CACHE_CHECK([for the default library search path],\n  [lt_cv_sys_dlsearch_path],\n  [lt_cv_sys_dlsearch_path=\"$sys_lib_dlsearch_path_spec\"])\nif test -n \"$lt_cv_sys_dlsearch_path\"; then\n  sys_dlsearch_path=\n  for dir in $lt_cv_sys_dlsearch_path; do\n    if test -z \"$sys_dlsearch_path\"; then\n      sys_dlsearch_path=\"$dir\"\n    else\n      sys_dlsearch_path=\"$sys_dlsearch_path$PATH_SEPARATOR$dir\"\n    fi\n  done\n  m4_pattern_allow([LT_DLSEARCH_PATH])dnl\n  AC_DEFINE_UNQUOTED([LT_DLSEARCH_PATH], [\"$sys_dlsearch_path\"],\n    [Define to the system default library search path.])\nfi\n])# LT_SYS_DLSEARCH_PATH\n\n# Old name:\nAU_ALIAS([AC_LTDL_SYSSEARCHPATH], [LT_SYS_DLSEARCH_PATH])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_SYSSEARCHPATH], [])\n\n\n# _LT_CHECK_DLPREOPEN\n# -------------------\nm4_defun([_LT_CHECK_DLPREOPEN],\n[m4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nAC_CACHE_CHECK([whether libtool supports -dlopen/-dlpreopen],\n  [libltdl_cv_preloaded_symbols],\n  [if test -n \"$lt_cv_sys_global_symbol_pipe\"; then\n    libltdl_cv_preloaded_symbols=yes\n  else\n    libltdl_cv_preloaded_symbols=no\n  fi\n  ])\nif test x\"$libltdl_cv_preloaded_symbols\" = xyes; then\n  AC_DEFINE([HAVE_PRELOADED_SYMBOLS], [1],\n    [Define if libtool can extract symbol lists from object files.])\nfi\n])# _LT_CHECK_DLPREOPEN\n\n\n# LT_LIB_DLLOAD\n# -------------\nAC_DEFUN([LT_LIB_DLLOAD],\n[m4_pattern_allow([^LT_DLLOADERS$])\nLT_DLLOADERS=\nAC_SUBST([LT_DLLOADERS])\n\nAC_LANG_PUSH([C])\n\nLIBADD_DLOPEN=\nAC_SEARCH_LIBS([dlopen], [dl],\n\t[AC_DEFINE([HAVE_LIBDL], [1],\n\t\t   [Define if you have the libdl library or equivalent.])\n\tif test \"$ac_cv_search_dlopen\" != \"none required\" ; then\n\t  LIBADD_DLOPEN=\"-ldl\"\n\tfi\n\tlibltdl_cv_lib_dl_dlopen=\"yes\"\n\tLT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la\"],\n    [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#if HAVE_DLFCN_H\n#  include <dlfcn.h>\n#endif\n    ]], [[dlopen(0, 0);]])],\n\t    [AC_DEFINE([HAVE_LIBDL], [1],\n\t\t       [Define if you have the libdl library or equivalent.])\n\t    libltdl_cv_func_dlopen=\"yes\"\n\t    LT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la\"],\n\t[AC_CHECK_LIB([svld], [dlopen],\n\t\t[AC_DEFINE([HAVE_LIBDL], [1],\n\t\t\t [Define if you have the libdl library or equivalent.])\n\t        LIBADD_DLOPEN=\"-lsvld\" libltdl_cv_func_dlopen=\"yes\"\n\t\tLT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la\"])])])\nif test x\"$libltdl_cv_func_dlopen\" = xyes || test x\"$libltdl_cv_lib_dl_dlopen\" = xyes\nthen\n  lt_save_LIBS=\"$LIBS\"\n  LIBS=\"$LIBS $LIBADD_DLOPEN\"\n  AC_CHECK_FUNCS([dlerror])\n  LIBS=\"$lt_save_LIBS\"\nfi\nAC_SUBST([LIBADD_DLOPEN])\n\nLIBADD_SHL_LOAD=\nAC_CHECK_FUNC([shl_load],\n\t[AC_DEFINE([HAVE_SHL_LOAD], [1],\n\t\t   [Define if you have the shl_load function.])\n\tLT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la\"],\n    [AC_CHECK_LIB([dld], [shl_load],\n\t    [AC_DEFINE([HAVE_SHL_LOAD], [1],\n\t\t       [Define if you have the shl_load function.])\n\t    LT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la\"\n\t    LIBADD_SHL_LOAD=\"-ldld\"])])\nAC_SUBST([LIBADD_SHL_LOAD])\n\ncase $host_os in\ndarwin[[1567]].*)\n# We only want this for pre-Mac OS X 10.4.\n  AC_CHECK_FUNC([_dyld_func_lookup],\n\t[AC_DEFINE([HAVE_DYLD], [1],\n\t\t   [Define if you have the _dyld_func_lookup function.])\n\tLT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dyld.la\"])\n  ;;\nbeos*)\n  LT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}load_add_on.la\"\n  ;;\ncygwin* | mingw* | os2* | pw32*)\n  AC_CHECK_DECLS([cygwin_conv_path], [], [], [[#include <sys/cygwin.h>]])\n  LT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}loadlibrary.la\"\n  ;;\nesac\n\nAC_CHECK_LIB([dld], [dld_link],\n\t[AC_DEFINE([HAVE_DLD], [1],\n\t\t   [Define if you have the GNU dld library.])\n\t\tLT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dld_link.la\"])\nAC_SUBST([LIBADD_DLD_LINK])\n\nm4_pattern_allow([^LT_DLPREOPEN$])\nLT_DLPREOPEN=\nif test -n \"$LT_DLLOADERS\"\nthen\n  for lt_loader in $LT_DLLOADERS; do\n    LT_DLPREOPEN=\"$LT_DLPREOPEN-dlpreopen $lt_loader \"\n  done\n  AC_DEFINE([HAVE_LIBDLLOADER], [1],\n            [Define if libdlloader will be built on this platform])\nfi\nAC_SUBST([LT_DLPREOPEN])\n\ndnl This isn't used anymore, but set it for backwards compatibility\nLIBADD_DL=\"$LIBADD_DLOPEN $LIBADD_SHL_LOAD\"\nAC_SUBST([LIBADD_DL])\n\nAC_LANG_POP\n])# LT_LIB_DLLOAD\n\n# Old name:\nAU_ALIAS([AC_LTDL_DLLIB], [LT_LIB_DLLOAD])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_DLLIB], [])\n\n\n# LT_SYS_SYMBOL_USCORE\n# --------------------\n# does the compiler prefix global symbols with an underscore?\nAC_DEFUN([LT_SYS_SYMBOL_USCORE],\n[m4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nAC_CACHE_CHECK([for _ prefix in compiled symbols],\n  [lt_cv_sys_symbol_underscore],\n  [lt_cv_sys_symbol_underscore=no\n  cat > conftest.$ac_ext <<_LT_EOF\nvoid nm_test_func(){}\nint main(){nm_test_func;return 0;}\n_LT_EOF\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    ac_nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| $lt_cv_sys_global_symbol_pipe \\> $ac_nlist) && test -s \"$ac_nlist\"; then\n      # See whether the symbols have a leading underscore.\n      if grep '^. _nm_test_func' \"$ac_nlist\" >/dev/null; then\n        lt_cv_sys_symbol_underscore=yes\n      else\n        if grep '^. nm_test_func ' \"$ac_nlist\" >/dev/null; then\n\t  :\n        else\n\t  echo \"configure: cannot find nm_test_func in $ac_nlist\" >&AS_MESSAGE_LOG_FD\n        fi\n      fi\n    else\n      echo \"configure: cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"configure: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.c >&AS_MESSAGE_LOG_FD\n  fi\n  rm -rf conftest*\n  ])\n  sys_symbol_underscore=$lt_cv_sys_symbol_underscore\n  AC_SUBST([sys_symbol_underscore])\n])# LT_SYS_SYMBOL_USCORE\n\n# Old name:\nAU_ALIAS([AC_LTDL_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_SYMBOL_USCORE], [])\n\n\n# LT_FUNC_DLSYM_USCORE\n# --------------------\nAC_DEFUN([LT_FUNC_DLSYM_USCORE],\n[AC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl\nif test x\"$lt_cv_sys_symbol_underscore\" = xyes; then\n  if test x\"$libltdl_cv_func_dlopen\" = xyes ||\n     test x\"$libltdl_cv_lib_dl_dlopen\" = xyes ; then\n\tAC_CACHE_CHECK([whether we have to add an underscore for dlsym],\n\t  [libltdl_cv_need_uscore],\n\t  [libltdl_cv_need_uscore=unknown\n          save_LIBS=\"$LIBS\"\n          LIBS=\"$LIBS $LIBADD_DLOPEN\"\n\t  _LT_TRY_DLOPEN_SELF(\n\t    [libltdl_cv_need_uscore=no], [libltdl_cv_need_uscore=yes],\n\t    [],\t\t\t\t [libltdl_cv_need_uscore=cross])\n\t  LIBS=\"$save_LIBS\"\n\t])\n  fi\nfi\n\nif test x\"$libltdl_cv_need_uscore\" = xyes; then\n  AC_DEFINE([NEED_USCORE], [1],\n    [Define if dlsym() requires a leading underscore in symbol names.])\nfi\n])# LT_FUNC_DLSYM_USCORE\n\n# Old name:\nAU_ALIAS([AC_LTDL_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_DLSYM_USCORE], [])\n\n# Copyright (C) 2002-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_AUTOMAKE_VERSION(VERSION)\n# ----------------------------\n# Automake X.Y traces this macro to ensure aclocal.m4 has been\n# generated from the m4 files accompanying Automake X.Y.\n# (This private macro should not be called outside this file.)\nAC_DEFUN([AM_AUTOMAKE_VERSION],\n[am__api_version='1.13'\ndnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to\ndnl require some minimum version.  Point them to the right macro.\nm4_if([$1], [1.13.4], [],\n      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl\n])\n\n# _AM_AUTOCONF_VERSION(VERSION)\n# -----------------------------\n# aclocal traces this macro to find the Autoconf version.\n# This is a private macro too.  Using m4_define simplifies\n# the logic in aclocal, which can simply ignore this definition.\nm4_define([_AM_AUTOCONF_VERSION], [])\n\n# AM_SET_CURRENT_AUTOMAKE_VERSION\n# -------------------------------\n# Call AM_AUTOMAKE_VERSION and AM_AUTOMAKE_VERSION so they can be traced.\n# This function is AC_REQUIREd by AM_INIT_AUTOMAKE.\nAC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],\n[AM_AUTOMAKE_VERSION([1.13.4])dnl\nm4_ifndef([AC_AUTOCONF_VERSION],\n  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl\n_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])\n\n# Figure out how to run the assembler.                      -*- Autoconf -*-\n\n# Copyright (C) 2001-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_PROG_AS\n# ----------\nAC_DEFUN([AM_PROG_AS],\n[# By default we simply use the C compiler to build assembly code.\nAC_REQUIRE([AC_PROG_CC])\ntest \"${CCAS+set}\" = set || CCAS=$CC\ntest \"${CCASFLAGS+set}\" = set || CCASFLAGS=$CFLAGS\nAC_ARG_VAR([CCAS],      [assembler compiler command (defaults to CC)])\nAC_ARG_VAR([CCASFLAGS], [assembler compiler flags (defaults to CFLAGS)])\n_AM_IF_OPTION([no-dependencies],, [_AM_DEPENDENCIES([CCAS])])dnl\n])\n\n# AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-\n\n# Copyright (C) 2001-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# For projects using AC_CONFIG_AUX_DIR([foo]), Autoconf sets\n# $ac_aux_dir to '$srcdir/foo'.  In other projects, it is set to\n# '$srcdir', '$srcdir/..', or '$srcdir/../..'.\n#\n# Of course, Automake must honor this variable whenever it calls a\n# tool from the auxiliary directory.  The problem is that $srcdir (and\n# therefore $ac_aux_dir as well) can be either absolute or relative,\n# depending on how configure is run.  This is pretty annoying, since\n# it makes $ac_aux_dir quite unusable in subdirectories: in the top\n# source directory, any form will work fine, but in subdirectories a\n# relative path needs to be adjusted first.\n#\n# $ac_aux_dir/missing\n#    fails when called from a subdirectory if $ac_aux_dir is relative\n# $top_srcdir/$ac_aux_dir/missing\n#    fails if $ac_aux_dir is absolute,\n#    fails when called from a subdirectory in a VPATH build with\n#          a relative $ac_aux_dir\n#\n# The reason of the latter failure is that $top_srcdir and $ac_aux_dir\n# are both prefixed by $srcdir.  In an in-source build this is usually\n# harmless because $srcdir is '.', but things will broke when you\n# start a VPATH build or use an absolute $srcdir.\n#\n# So we could use something similar to $top_srcdir/$ac_aux_dir/missing,\n# iff we strip the leading $srcdir from $ac_aux_dir.  That would be:\n#   am_aux_dir='\\$(top_srcdir)/'`expr \"$ac_aux_dir\" : \"$srcdir//*\\(.*\\)\"`\n# and then we would define $MISSING as\n#   MISSING=\"\\${SHELL} $am_aux_dir/missing\"\n# This will work as long as MISSING is not called from configure, because\n# unfortunately $(top_srcdir) has no meaning in configure.\n# However there are other variables, like CC, which are often used in\n# configure, and could therefore not use this \"fixed\" $ac_aux_dir.\n#\n# Another solution, used here, is to always expand $ac_aux_dir to an\n# absolute PATH.  The drawback is that using absolute paths prevent a\n# configured tree to be moved without reconfiguration.\n\nAC_DEFUN([AM_AUX_DIR_EXPAND],\n[dnl Rely on autoconf to set up CDPATH properly.\nAC_PREREQ([2.50])dnl\n# expand $ac_aux_dir to an absolute path\nam_aux_dir=`cd $ac_aux_dir && pwd`\n])\n\n# AM_CONDITIONAL                                            -*- Autoconf -*-\n\n# Copyright (C) 1997-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_CONDITIONAL(NAME, SHELL-CONDITION)\n# -------------------------------------\n# Define a conditional.\nAC_DEFUN([AM_CONDITIONAL],\n[AC_PREREQ([2.52])dnl\n m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],\n       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl\nAC_SUBST([$1_TRUE])dnl\nAC_SUBST([$1_FALSE])dnl\n_AM_SUBST_NOTMAKE([$1_TRUE])dnl\n_AM_SUBST_NOTMAKE([$1_FALSE])dnl\nm4_define([_AM_COND_VALUE_$1], [$2])dnl\nif $2; then\n  $1_TRUE=\n  $1_FALSE='#'\nelse\n  $1_TRUE='#'\n  $1_FALSE=\nfi\nAC_CONFIG_COMMANDS_PRE(\n[if test -z \"${$1_TRUE}\" && test -z \"${$1_FALSE}\"; then\n  AC_MSG_ERROR([[conditional \"$1\" was never defined.\nUsually this means the macro was only invoked conditionally.]])\nfi])])\n\n# Copyright (C) 1999-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n\n# There are a few dirty hacks below to avoid letting 'AC_PROG_CC' be\n# written in clear, in which case automake, when reading aclocal.m4,\n# will think it sees a *use*, and therefore will trigger all it's\n# C support machinery.  Also note that it means that autoscan, seeing\n# CC etc. in the Makefile, will ask for an AC_PROG_CC use...\n\n\n# _AM_DEPENDENCIES(NAME)\n# ----------------------\n# See how the compiler implements dependency checking.\n# NAME is \"CC\", \"CXX\", \"OBJC\", \"OBJCXX\", \"UPC\", or \"GJC\".\n# We try a few techniques and use that to set a single cache variable.\n#\n# We don't AC_REQUIRE the corresponding AC_PROG_CC since the latter was\n# modified to invoke _AM_DEPENDENCIES(CC); we would have a circular\n# dependency, and given that the user is not expected to run this macro,\n# just rely on AC_PROG_CC.\nAC_DEFUN([_AM_DEPENDENCIES],\n[AC_REQUIRE([AM_SET_DEPDIR])dnl\nAC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl\nAC_REQUIRE([AM_MAKE_INCLUDE])dnl\nAC_REQUIRE([AM_DEP_TRACK])dnl\n\nm4_if([$1], [CC],   [depcc=\"$CC\"   am_compiler_list=],\n      [$1], [CXX],  [depcc=\"$CXX\"  am_compiler_list=],\n      [$1], [OBJC], [depcc=\"$OBJC\" am_compiler_list='gcc3 gcc'],\n      [$1], [OBJCXX], [depcc=\"$OBJCXX\" am_compiler_list='gcc3 gcc'],\n      [$1], [UPC],  [depcc=\"$UPC\"  am_compiler_list=],\n      [$1], [GCJ],  [depcc=\"$GCJ\"  am_compiler_list='gcc3 gcc'],\n                    [depcc=\"$$1\"   am_compiler_list=])\n\nAC_CACHE_CHECK([dependency style of $depcc],\n               [am_cv_$1_dependencies_compiler_type],\n[if test -z \"$AMDEP_TRUE\" && test -f \"$am_depcomp\"; then\n  # We make a subdir and do the tests there.  Otherwise we can end up\n  # making bogus files that we don't know about and never remove.  For\n  # instance it was reported that on HP-UX the gcc test will end up\n  # making a dummy file named 'D' -- because '-MD' means \"put the output\n  # in D\".\n  rm -rf conftest.dir\n  mkdir conftest.dir\n  # Copy depcomp to subdir because otherwise we won't find it if we're\n  # using a relative directory.\n  cp \"$am_depcomp\" conftest.dir\n  cd conftest.dir\n  # We will build objects and dependencies in a subdirectory because\n  # it helps to detect inapplicable dependency modes.  For instance\n  # both Tru64's cc and ICC support -MD to output dependencies as a\n  # side effect of compilation, but ICC will put the dependencies in\n  # the current directory while Tru64 will put them in the object\n  # directory.\n  mkdir sub\n\n  am_cv_$1_dependencies_compiler_type=none\n  if test \"$am_compiler_list\" = \"\"; then\n     am_compiler_list=`sed -n ['s/^#*\\([a-zA-Z0-9]*\\))$/\\1/p'] < ./depcomp`\n  fi\n  am__universal=false\n  m4_case([$1], [CC],\n    [case \" $depcc \" in #(\n     *\\ -arch\\ *\\ -arch\\ *) am__universal=true ;;\n     esac],\n    [CXX],\n    [case \" $depcc \" in #(\n     *\\ -arch\\ *\\ -arch\\ *) am__universal=true ;;\n     esac])\n\n  for depmode in $am_compiler_list; do\n    # Setup a source with many dependencies, because some compilers\n    # like to wrap large dependency lists on column 80 (with \\), and\n    # we should not choose a depcomp mode which is confused by this.\n    #\n    # We need to recreate these files for each test, as the compiler may\n    # overwrite some of them when testing with obscure command lines.\n    # This happens at least with the AIX C compiler.\n    : > sub/conftest.c\n    for i in 1 2 3 4 5 6; do\n      echo '#include \"conftst'$i'.h\"' >> sub/conftest.c\n      # Using \": > sub/conftst$i.h\" creates only sub/conftst1.h with\n      # Solaris 10 /bin/sh.\n      echo '/* dummy */' > sub/conftst$i.h\n    done\n    echo \"${am__include} ${am__quote}sub/conftest.Po${am__quote}\" > confmf\n\n    # We check with '-c' and '-o' for the sake of the \"dashmstdout\"\n    # mode.  It turns out that the SunPro C++ compiler does not properly\n    # handle '-M -o', and we need to detect this.  Also, some Intel\n    # versions had trouble with output in subdirs.\n    am__obj=sub/conftest.${OBJEXT-o}\n    am__minus_obj=\"-o $am__obj\"\n    case $depmode in\n    gcc)\n      # This depmode causes a compiler race in universal mode.\n      test \"$am__universal\" = false || continue\n      ;;\n    nosideeffect)\n      # After this tag, mechanisms are not by side-effect, so they'll\n      # only be used when explicitly requested.\n      if test \"x$enable_dependency_tracking\" = xyes; then\n\tcontinue\n      else\n\tbreak\n      fi\n      ;;\n    msvc7 | msvc7msys | msvisualcpp | msvcmsys)\n      # This compiler won't grok '-c -o', but also, the minuso test has\n      # not run yet.  These depmodes are late enough in the game, and\n      # so weak that their functioning should not be impacted.\n      am__obj=conftest.${OBJEXT-o}\n      am__minus_obj=\n      ;;\n    none) break ;;\n    esac\n    if depmode=$depmode \\\n       source=sub/conftest.c object=$am__obj \\\n       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \\\n       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \\\n         >/dev/null 2>conftest.err &&\n       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&\n       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then\n      # icc doesn't choke on unknown options, it will just issue warnings\n      # or remarks (even with -Werror).  So we grep stderr for any message\n      # that says an option was ignored or not supported.\n      # When given -MP, icc 7.0 and 7.1 complain thusly:\n      #   icc: Command line warning: ignoring option '-M'; no argument required\n      # The diagnosis changed in icc 8.0:\n      #   icc: Command line remark: option '-MP' not supported\n      if (grep 'ignoring option' conftest.err ||\n          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else\n        am_cv_$1_dependencies_compiler_type=$depmode\n        break\n      fi\n    fi\n  done\n\n  cd ..\n  rm -rf conftest.dir\nelse\n  am_cv_$1_dependencies_compiler_type=none\nfi\n])\nAC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])\nAM_CONDITIONAL([am__fastdep$1], [\n  test \"x$enable_dependency_tracking\" != xno \\\n  && test \"$am_cv_$1_dependencies_compiler_type\" = gcc3])\n])\n\n\n# AM_SET_DEPDIR\n# -------------\n# Choose a directory name for dependency files.\n# This macro is AC_REQUIREd in _AM_DEPENDENCIES.\nAC_DEFUN([AM_SET_DEPDIR],\n[AC_REQUIRE([AM_SET_LEADING_DOT])dnl\nAC_SUBST([DEPDIR], [\"${am__leading_dot}deps\"])dnl\n])\n\n\n# AM_DEP_TRACK\n# ------------\nAC_DEFUN([AM_DEP_TRACK],\n[AC_ARG_ENABLE([dependency-tracking], [dnl\nAS_HELP_STRING(\n  [--enable-dependency-tracking],\n  [do not reject slow dependency extractors])\nAS_HELP_STRING(\n  [--disable-dependency-tracking],\n  [speeds up one-time build])])\nif test \"x$enable_dependency_tracking\" != xno; then\n  am_depcomp=\"$ac_aux_dir/depcomp\"\n  AMDEPBACKSLASH='\\'\n  am__nodep='_no'\nfi\nAM_CONDITIONAL([AMDEP], [test \"x$enable_dependency_tracking\" != xno])\nAC_SUBST([AMDEPBACKSLASH])dnl\n_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl\nAC_SUBST([am__nodep])dnl\n_AM_SUBST_NOTMAKE([am__nodep])dnl\n])\n\n# Generate code to set up dependency tracking.              -*- Autoconf -*-\n\n# Copyright (C) 1999-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n\n# _AM_OUTPUT_DEPENDENCY_COMMANDS\n# ------------------------------\nAC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS],\n[{\n  # Older Autoconf quotes --file arguments for eval, but not when files\n  # are listed without --file.  Let's play safe and only enable the eval\n  # if we detect the quoting.\n  case $CONFIG_FILES in\n  *\\'*) eval set x \"$CONFIG_FILES\" ;;\n  *)   set x $CONFIG_FILES ;;\n  esac\n  shift\n  for mf\n  do\n    # Strip MF so we end up with the name of the file.\n    mf=`echo \"$mf\" | sed -e 's/:.*$//'`\n    # Check whether this is an Automake generated Makefile or not.\n    # We used to match only the files named 'Makefile.in', but\n    # some people rename them; so instead we look at the file content.\n    # Grep'ing the first line is not enough: some people post-process\n    # each Makefile.in and add a new line on top of each file to say so.\n    # Grep'ing the whole file is not good either: AIX grep has a line\n    # limit of 2048, but all sed's we know have understand at least 4000.\n    if sed -n 's,^#.*generated by automake.*,X,p' \"$mf\" | grep X >/dev/null 2>&1; then\n      dirpart=`AS_DIRNAME(\"$mf\")`\n    else\n      continue\n    fi\n    # Extract the definition of DEPDIR, am__include, and am__quote\n    # from the Makefile without running 'make'.\n    DEPDIR=`sed -n 's/^DEPDIR = //p' < \"$mf\"`\n    test -z \"$DEPDIR\" && continue\n    am__include=`sed -n 's/^am__include = //p' < \"$mf\"`\n    test -z \"$am__include\" && continue\n    am__quote=`sed -n 's/^am__quote = //p' < \"$mf\"`\n    # Find all dependency output files, they are included files with\n    # $(DEPDIR) in their names.  We invoke sed twice because it is the\n    # simplest approach to changing $(DEPDIR) to its actual value in the\n    # expansion.\n    for file in `sed -n \"\n      s/^$am__include $am__quote\\(.*(DEPDIR).*\\)$am__quote\"'$/\\1/p' <\"$mf\" | \\\n\t sed -e 's/\\$(DEPDIR)/'\"$DEPDIR\"'/g'`; do\n      # Make sure the directory exists.\n      test -f \"$dirpart/$file\" && continue\n      fdir=`AS_DIRNAME([\"$file\"])`\n      AS_MKDIR_P([$dirpart/$fdir])\n      # echo \"creating $dirpart/$file\"\n      echo '# dummy' > \"$dirpart/$file\"\n    done\n  done\n}\n])# _AM_OUTPUT_DEPENDENCY_COMMANDS\n\n\n# AM_OUTPUT_DEPENDENCY_COMMANDS\n# -----------------------------\n# This macro should only be invoked once -- use via AC_REQUIRE.\n#\n# This code is only required when automatic dependency tracking\n# is enabled.  FIXME.  This creates each '.P' file that we will\n# need in order to bootstrap the dependency handling code.\nAC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS],\n[AC_CONFIG_COMMANDS([depfiles],\n     [test x\"$AMDEP_TRUE\" != x\"\" || _AM_OUTPUT_DEPENDENCY_COMMANDS],\n     [AMDEP_TRUE=\"$AMDEP_TRUE\" ac_aux_dir=\"$ac_aux_dir\"])\n])\n\n# Do all the work for Automake.                             -*- Autoconf -*-\n\n# Copyright (C) 1996-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# This macro actually does too much.  Some checks are only needed if\n# your package does certain things.  But this isn't really a big deal.\n\n# AM_INIT_AUTOMAKE(PACKAGE, VERSION, [NO-DEFINE])\n# AM_INIT_AUTOMAKE([OPTIONS])\n# -----------------------------------------------\n# The call with PACKAGE and VERSION arguments is the old style\n# call (pre autoconf-2.50), which is being phased out.  PACKAGE\n# and VERSION should now be passed to AC_INIT and removed from\n# the call to AM_INIT_AUTOMAKE.\n# We support both call styles for the transition.  After\n# the next Automake release, Autoconf can make the AC_INIT\n# arguments mandatory, and then we can depend on a new Autoconf\n# release and drop the old call support.\nAC_DEFUN([AM_INIT_AUTOMAKE],\n[AC_PREREQ([2.65])dnl\ndnl Autoconf wants to disallow AM_ names.  We explicitly allow\ndnl the ones we care about.\nm4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl\nAC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl\nAC_REQUIRE([AC_PROG_INSTALL])dnl\nif test \"`cd $srcdir && pwd`\" != \"`pwd`\"; then\n  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output\n  # is not polluted with repeated \"-I.\"\n  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl\n  # test to see if srcdir already configured\n  if test -f $srcdir/config.status; then\n    AC_MSG_ERROR([source directory already configured; run \"make distclean\" there first])\n  fi\nfi\n\n# test whether we have cygpath\nif test -z \"$CYGPATH_W\"; then\n  if (cygpath --version) >/dev/null 2>/dev/null; then\n    CYGPATH_W='cygpath -w'\n  else\n    CYGPATH_W=echo\n  fi\nfi\nAC_SUBST([CYGPATH_W])\n\n# Define the identity of the package.\ndnl Distinguish between old-style and new-style calls.\nm4_ifval([$2],\n[AC_DIAGNOSE([obsolete],\n             [$0: two- and three-arguments forms are deprecated.])\nm4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl\n AC_SUBST([PACKAGE], [$1])dnl\n AC_SUBST([VERSION], [$2])],\n[_AM_SET_OPTIONS([$1])dnl\ndnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.\nm4_if(\n  m4_ifdef([AC_PACKAGE_NAME], [ok]):m4_ifdef([AC_PACKAGE_VERSION], [ok]),\n  [ok:ok],,\n  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl\n AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl\n AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl\n\n_AM_IF_OPTION([no-define],,\n[AC_DEFINE_UNQUOTED([PACKAGE], [\"$PACKAGE\"], [Name of package])\n AC_DEFINE_UNQUOTED([VERSION], [\"$VERSION\"], [Version number of package])])dnl\n\n# Some tools Automake needs.\nAC_REQUIRE([AM_SANITY_CHECK])dnl\nAC_REQUIRE([AC_ARG_PROGRAM])dnl\nAM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])\nAM_MISSING_PROG([AUTOCONF], [autoconf])\nAM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])\nAM_MISSING_PROG([AUTOHEADER], [autoheader])\nAM_MISSING_PROG([MAKEINFO], [makeinfo])\nAC_REQUIRE([AM_PROG_INSTALL_SH])dnl\nAC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl\nAC_REQUIRE([AC_PROG_MKDIR_P])dnl\n# For better backward compatibility.  To be removed once Automake 1.9.x\n# dies out for good.  For more background, see:\n# <http://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>\n# <http://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>\nAC_SUBST([mkdir_p], ['$(MKDIR_P)'])\n# We need awk for the \"check\" target.  The system \"awk\" is bad on\n# some platforms.\nAC_REQUIRE([AC_PROG_AWK])dnl\nAC_REQUIRE([AC_PROG_MAKE_SET])dnl\nAC_REQUIRE([AM_SET_LEADING_DOT])dnl\n_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],\n\t      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],\n\t\t\t     [_AM_PROG_TAR([v7])])])\n_AM_IF_OPTION([no-dependencies],,\n[AC_PROVIDE_IFELSE([AC_PROG_CC],\n\t\t  [_AM_DEPENDENCIES([CC])],\n\t\t  [m4_define([AC_PROG_CC],\n\t\t\t     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl\nAC_PROVIDE_IFELSE([AC_PROG_CXX],\n\t\t  [_AM_DEPENDENCIES([CXX])],\n\t\t  [m4_define([AC_PROG_CXX],\n\t\t\t     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl\nAC_PROVIDE_IFELSE([AC_PROG_OBJC],\n\t\t  [_AM_DEPENDENCIES([OBJC])],\n\t\t  [m4_define([AC_PROG_OBJC],\n\t\t\t     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl\nAC_PROVIDE_IFELSE([AC_PROG_OBJCXX],\n\t\t  [_AM_DEPENDENCIES([OBJCXX])],\n\t\t  [m4_define([AC_PROG_OBJCXX],\n\t\t\t     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl\n])\nAC_REQUIRE([AM_SILENT_RULES])dnl\ndnl The testsuite driver may need to know about EXEEXT, so add the\ndnl 'am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This\ndnl macro is hooked onto _AC_COMPILER_EXEEXT early, see below.\nAC_CONFIG_COMMANDS_PRE(dnl\n[m4_provide_if([_AM_COMPILER_EXEEXT],\n  [AM_CONDITIONAL([am__EXEEXT], [test -n \"$EXEEXT\"])])])dnl\n])\n\ndnl Hook into '_AC_COMPILER_EXEEXT' early to learn its expansion.  Do not\ndnl add the conditional right here, as _AC_COMPILER_EXEEXT may be further\ndnl mangled by Autoconf and run in a shell conditional statement.\nm4_define([_AC_COMPILER_EXEEXT],\nm4_defn([_AC_COMPILER_EXEEXT])[m4_provide([_AM_COMPILER_EXEEXT])])\n\n\n# When config.status generates a header, we must update the stamp-h file.\n# This file resides in the same directory as the config header\n# that is generated.  The stamp files are numbered to have different names.\n\n# Autoconf calls _AC_AM_CONFIG_HEADER_HOOK (when defined) in the\n# loop where config.status creates the headers, so we can generate\n# our stamp files there.\nAC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK],\n[# Compute $1's index in $config_headers.\n_am_arg=$1\n_am_stamp_count=1\nfor _am_header in $config_headers :; do\n  case $_am_header in\n    $_am_arg | $_am_arg:* )\n      break ;;\n    * )\n      _am_stamp_count=`expr $_am_stamp_count + 1` ;;\n  esac\ndone\necho \"timestamp for $_am_arg\" >`AS_DIRNAME([\"$_am_arg\"])`/stamp-h[]$_am_stamp_count])\n\n# Copyright (C) 2001-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_PROG_INSTALL_SH\n# ------------------\n# Define $install_sh.\nAC_DEFUN([AM_PROG_INSTALL_SH],\n[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\nif test x\"${install_sh}\" != xset; then\n  case $am_aux_dir in\n  *\\ * | *\\\t*)\n    install_sh=\"\\${SHELL} '$am_aux_dir/install-sh'\" ;;\n  *)\n    install_sh=\"\\${SHELL} $am_aux_dir/install-sh\"\n  esac\nfi\nAC_SUBST([install_sh])])\n\n# Copyright (C) 2003-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# Check whether the underlying file-system supports filenames\n# with a leading dot.  For instance MS-DOS doesn't.\nAC_DEFUN([AM_SET_LEADING_DOT],\n[rm -rf .tst 2>/dev/null\nmkdir .tst 2>/dev/null\nif test -d .tst; then\n  am__leading_dot=.\nelse\n  am__leading_dot=_\nfi\nrmdir .tst 2>/dev/null\nAC_SUBST([am__leading_dot])])\n\n# Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-\n# From Jim Meyering\n\n# Copyright (C) 1996-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_MAINTAINER_MODE([DEFAULT-MODE])\n# ----------------------------------\n# Control maintainer-specific portions of Makefiles.\n# Default is to disable them, unless 'enable' is passed literally.\n# For symmetry, 'disable' may be passed as well.  Anyway, the user\n# can override the default with the --enable/--disable switch.\nAC_DEFUN([AM_MAINTAINER_MODE],\n[m4_case(m4_default([$1], [disable]),\n       [enable], [m4_define([am_maintainer_other], [disable])],\n       [disable], [m4_define([am_maintainer_other], [enable])],\n       [m4_define([am_maintainer_other], [enable])\n        m4_warn([syntax], [unexpected argument to AM@&t@_MAINTAINER_MODE: $1])])\nAC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])\n  dnl maintainer-mode's default is 'disable' unless 'enable' is passed\n  AC_ARG_ENABLE([maintainer-mode],\n    [AS_HELP_STRING([--]am_maintainer_other[-maintainer-mode],\n      am_maintainer_other[ make rules and dependencies not useful\n      (and sometimes confusing) to the casual installer])],\n    [USE_MAINTAINER_MODE=$enableval],\n    [USE_MAINTAINER_MODE=]m4_if(am_maintainer_other, [enable], [no], [yes]))\n  AC_MSG_RESULT([$USE_MAINTAINER_MODE])\n  AM_CONDITIONAL([MAINTAINER_MODE], [test $USE_MAINTAINER_MODE = yes])\n  MAINT=$MAINTAINER_MODE_TRUE\n  AC_SUBST([MAINT])dnl\n]\n)\n\n# Check to see how 'make' treats includes.\t            -*- Autoconf -*-\n\n# Copyright (C) 2001-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_MAKE_INCLUDE()\n# -----------------\n# Check to see how make treats includes.\nAC_DEFUN([AM_MAKE_INCLUDE],\n[am_make=${MAKE-make}\ncat > confinc << 'END'\nam__doit:\n\t@echo this is the am__doit target\n.PHONY: am__doit\nEND\n# If we don't find an include directive, just comment out the code.\nAC_MSG_CHECKING([for style of include used by $am_make])\nam__include=\"#\"\nam__quote=\n_am_result=none\n# First try GNU make style include.\necho \"include confinc\" > confmf\n# Ignore all kinds of additional output from 'make'.\ncase `$am_make -s -f confmf 2> /dev/null` in #(\n*the\\ am__doit\\ target*)\n  am__include=include\n  am__quote=\n  _am_result=GNU\n  ;;\nesac\n# Now try BSD make style include.\nif test \"$am__include\" = \"#\"; then\n   echo '.include \"confinc\"' > confmf\n   case `$am_make -s -f confmf 2> /dev/null` in #(\n   *the\\ am__doit\\ target*)\n     am__include=.include\n     am__quote=\"\\\"\"\n     _am_result=BSD\n     ;;\n   esac\nfi\nAC_SUBST([am__include])\nAC_SUBST([am__quote])\nAC_MSG_RESULT([$_am_result])\nrm -f confinc confmf\n])\n\n# Copyright (C) 1999-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_PROG_CC_C_O\n# --------------\n# Like AC_PROG_CC_C_O, but changed for automake.\nAC_DEFUN([AM_PROG_CC_C_O],\n[AC_REQUIRE([AC_PROG_CC_C_O])dnl\nAC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\nAC_REQUIRE_AUX_FILE([compile])dnl\n# FIXME: we rely on the cache variable name because\n# there is no other way.\nset dummy $CC\nam_cc=`echo $[2] | sed ['s/[^a-zA-Z0-9_]/_/g;s/^[0-9]/_/']`\neval am_t=\\$ac_cv_prog_cc_${am_cc}_c_o\nif test \"$am_t\" != yes; then\n   # Losing compiler, so override with the script.\n   # FIXME: It is wrong to rewrite CC.\n   # But if we don't then we get into trouble of one sort or another.\n   # A longer-term fix would be to have automake use am__CC in this case,\n   # and then we could set am__CC=\"\\$(top_srcdir)/compile \\$(CC)\"\n   CC=\"$am_aux_dir/compile $CC\"\nfi\ndnl Make sure AC_PROG_CC is never called again, or it will override our\ndnl setting of CC.\nm4_define([AC_PROG_CC],\n          [m4_fatal([AC_PROG_CC cannot be called after AM_PROG_CC_C_O])])\n])\n\n# Fake the existence of programs that GNU maintainers use.  -*- Autoconf -*-\n\n# Copyright (C) 1997-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_MISSING_PROG(NAME, PROGRAM)\n# ------------------------------\nAC_DEFUN([AM_MISSING_PROG],\n[AC_REQUIRE([AM_MISSING_HAS_RUN])\n$1=${$1-\"${am_missing_run}$2\"}\nAC_SUBST($1)])\n\n# AM_MISSING_HAS_RUN\n# ------------------\n# Define MISSING if not defined so far and test if it is modern enough.\n# If it is, set am_missing_run to use it, otherwise, to nothing.\nAC_DEFUN([AM_MISSING_HAS_RUN],\n[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\nAC_REQUIRE_AUX_FILE([missing])dnl\nif test x\"${MISSING+set}\" != xset; then\n  case $am_aux_dir in\n  *\\ * | *\\\t*)\n    MISSING=\"\\${SHELL} \\\"$am_aux_dir/missing\\\"\" ;;\n  *)\n    MISSING=\"\\${SHELL} $am_aux_dir/missing\" ;;\n  esac\nfi\n# Use eval to expand $SHELL\nif eval \"$MISSING --is-lightweight\"; then\n  am_missing_run=\"$MISSING \"\nelse\n  am_missing_run=\n  AC_MSG_WARN(['missing' script is too old or missing])\nfi\n])\n\n# Helper functions for option handling.                     -*- Autoconf -*-\n\n# Copyright (C) 2001-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# _AM_MANGLE_OPTION(NAME)\n# -----------------------\nAC_DEFUN([_AM_MANGLE_OPTION],\n[[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])\n\n# _AM_SET_OPTION(NAME)\n# --------------------\n# Set option NAME.  Presently that only means defining a flag for this option.\nAC_DEFUN([_AM_SET_OPTION],\n[m4_define(_AM_MANGLE_OPTION([$1]), [1])])\n\n# _AM_SET_OPTIONS(OPTIONS)\n# ------------------------\n# OPTIONS is a space-separated list of Automake options.\nAC_DEFUN([_AM_SET_OPTIONS],\n[m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])\n\n# _AM_IF_OPTION(OPTION, IF-SET, [IF-NOT-SET])\n# -------------------------------------------\n# Execute IF-SET if OPTION is set, IF-NOT-SET otherwise.\nAC_DEFUN([_AM_IF_OPTION],\n[m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])\n\n# Check to make sure that the build environment is sane.    -*- Autoconf -*-\n\n# Copyright (C) 1996-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_SANITY_CHECK\n# ---------------\nAC_DEFUN([AM_SANITY_CHECK],\n[AC_MSG_CHECKING([whether build environment is sane])\n# Reject unsafe characters in $srcdir or the absolute working directory\n# name.  Accept space and tab only in the latter.\nam_lf='\n'\ncase `pwd` in\n  *[[\\\\\\\"\\#\\$\\&\\'\\`$am_lf]]*)\n    AC_MSG_ERROR([unsafe absolute working directory name]);;\nesac\ncase $srcdir in\n  *[[\\\\\\\"\\#\\$\\&\\'\\`$am_lf\\ \\\t]]*)\n    AC_MSG_ERROR([unsafe srcdir value: '$srcdir']);;\nesac\n\n# Do 'set' in a subshell so we don't clobber the current shell's\n# arguments.  Must try -L first in case configure is actually a\n# symlink; some systems play weird games with the mod time of symlinks\n# (eg FreeBSD returns the mod time of the symlink's containing\n# directory).\nif (\n   am_has_slept=no\n   for am_try in 1 2; do\n     echo \"timestamp, slept: $am_has_slept\" > conftest.file\n     set X `ls -Lt \"$srcdir/configure\" conftest.file 2> /dev/null`\n     if test \"$[*]\" = \"X\"; then\n\t# -L didn't work.\n\tset X `ls -t \"$srcdir/configure\" conftest.file`\n     fi\n     if test \"$[*]\" != \"X $srcdir/configure conftest.file\" \\\n\t&& test \"$[*]\" != \"X conftest.file $srcdir/configure\"; then\n\n\t# If neither matched, then we have a broken ls.  This can happen\n\t# if, for instance, CONFIG_SHELL is bash and it inherits a\n\t# broken ls alias from the environment.  This has actually\n\t# happened.  Such a system could not be considered \"sane\".\n\tAC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken\n  alias in your environment])\n     fi\n     if test \"$[2]\" = conftest.file || test $am_try -eq 2; then\n       break\n     fi\n     # Just in case.\n     sleep 1\n     am_has_slept=yes\n   done\n   test \"$[2]\" = conftest.file\n   )\nthen\n   # Ok.\n   :\nelse\n   AC_MSG_ERROR([newly created file is older than distributed files!\nCheck your system clock])\nfi\nAC_MSG_RESULT([yes])\n# If we didn't sleep, we still need to ensure time stamps of config.status and\n# generated files are strictly newer.\nam_sleep_pid=\nif grep 'slept: no' conftest.file >/dev/null 2>&1; then\n  ( sleep 1 ) &\n  am_sleep_pid=$!\nfi\nAC_CONFIG_COMMANDS_PRE(\n  [AC_MSG_CHECKING([that generated files are newer than configure])\n   if test -n \"$am_sleep_pid\"; then\n     # Hide warnings about reused PIDs.\n     wait $am_sleep_pid 2>/dev/null\n   fi\n   AC_MSG_RESULT([done])])\nrm -f conftest.file\n])\n\n# Copyright (C) 2009-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_SILENT_RULES([DEFAULT])\n# --------------------------\n# Enable less verbose build rules; with the default set to DEFAULT\n# (\"yes\" being less verbose, \"no\" or empty being verbose).\nAC_DEFUN([AM_SILENT_RULES],\n[AC_ARG_ENABLE([silent-rules], [dnl\nAS_HELP_STRING(\n  [--enable-silent-rules],\n  [less verbose build output (undo: \"make V=1\")])\nAS_HELP_STRING(\n  [--disable-silent-rules],\n  [verbose build output (undo: \"make V=0\")])dnl\n])\ncase $enable_silent_rules in @%:@ (((\n  yes) AM_DEFAULT_VERBOSITY=0;;\n   no) AM_DEFAULT_VERBOSITY=1;;\n    *) AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;\nesac\ndnl\ndnl A few 'make' implementations (e.g., NonStop OS and NextStep)\ndnl do not support nested variable expansions.\ndnl See automake bug#9928 and bug#10237.\nam_make=${MAKE-make}\nAC_CACHE_CHECK([whether $am_make supports nested variables],\n   [am_cv_make_support_nested_variables],\n   [if AS_ECHO([['TRUE=$(BAR$(V))\nBAR0=false\nBAR1=true\nV=1\nam__doit:\n\t@$(TRUE)\n.PHONY: am__doit']]) | $am_make -f - >/dev/null 2>&1; then\n  am_cv_make_support_nested_variables=yes\nelse\n  am_cv_make_support_nested_variables=no\nfi])\nif test $am_cv_make_support_nested_variables = yes; then\n  dnl Using '$V' instead of '$(V)' breaks IRIX make.\n  AM_V='$(V)'\n  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'\nelse\n  AM_V=$AM_DEFAULT_VERBOSITY\n  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY\nfi\nAC_SUBST([AM_V])dnl\nAM_SUBST_NOTMAKE([AM_V])dnl\nAC_SUBST([AM_DEFAULT_V])dnl\nAM_SUBST_NOTMAKE([AM_DEFAULT_V])dnl\nAC_SUBST([AM_DEFAULT_VERBOSITY])dnl\nAM_BACKSLASH='\\'\nAC_SUBST([AM_BACKSLASH])dnl\n_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl\n])\n\n# Copyright (C) 2001-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_PROG_INSTALL_STRIP\n# ---------------------\n# One issue with vendor 'install' (even GNU) is that you can't\n# specify the program used to strip binaries.  This is especially\n# annoying in cross-compiling environments, where the build's strip\n# is unlikely to handle the host's binaries.\n# Fortunately install-sh will honor a STRIPPROG variable, so we\n# always use install-sh in \"make install-strip\", and initialize\n# STRIPPROG with the value of the STRIP variable (set by the user).\nAC_DEFUN([AM_PROG_INSTALL_STRIP],\n[AC_REQUIRE([AM_PROG_INSTALL_SH])dnl\n# Installed binaries are usually stripped using 'strip' when the user\n# run \"make install-strip\".  However 'strip' might not be the right\n# tool to use in cross-compilation environments, therefore Automake\n# will honor the 'STRIP' environment variable to overrule this program.\ndnl Don't test for $cross_compiling = yes, because it might be 'maybe'.\nif test \"$cross_compiling\" != no; then\n  AC_CHECK_TOOL([STRIP], [strip], :)\nfi\nINSTALL_STRIP_PROGRAM=\"\\$(install_sh) -c -s\"\nAC_SUBST([INSTALL_STRIP_PROGRAM])])\n\n# Copyright (C) 2006-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# _AM_SUBST_NOTMAKE(VARIABLE)\n# ---------------------------\n# Prevent Automake from outputting VARIABLE = @VARIABLE@ in Makefile.in.\n# This macro is traced by Automake.\nAC_DEFUN([_AM_SUBST_NOTMAKE])\n\n# AM_SUBST_NOTMAKE(VARIABLE)\n# --------------------------\n# Public sister of _AM_SUBST_NOTMAKE.\nAC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])\n\n# Check how to create a tarball.                            -*- Autoconf -*-\n\n# Copyright (C) 2004-2013 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# _AM_PROG_TAR(FORMAT)\n# --------------------\n# Check how to create a tarball in format FORMAT.\n# FORMAT should be one of 'v7', 'ustar', or 'pax'.\n#\n# Substitute a variable $(am__tar) that is a command\n# writing to stdout a FORMAT-tarball containing the directory\n# $tardir.\n#     tardir=directory && $(am__tar) > result.tar\n#\n# Substitute a variable $(am__untar) that extract such\n# a tarball read from stdin.\n#     $(am__untar) < result.tar\n#\nAC_DEFUN([_AM_PROG_TAR],\n[# Always define AMTAR for backward compatibility.  Yes, it's still used\n# in the wild :-(  We should find a proper way to deprecate it ...\nAC_SUBST([AMTAR], ['$${TAR-tar}'])\n\n# We'll loop over all known methods to create a tar archive until one works.\n_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'\n\nm4_if([$1], [v7],\n  [am__tar='$${TAR-tar} chof - \"$$tardir\"' am__untar='$${TAR-tar} xf -'],\n\n  [m4_case([$1],\n    [ustar],\n     [# The POSIX 1988 'ustar' format is defined with fixed-size fields.\n      # There is notably a 21 bits limit for the UID and the GID.  In fact,\n      # the 'pax' utility can hang on bigger UID/GID (see automake bug#8343\n      # and bug#13588).\n      am_max_uid=2097151 # 2^21 - 1\n      am_max_gid=$am_max_uid\n      # The $UID and $GID variables are not portable, so we need to resort\n      # to the POSIX-mandated id(1) utility.  Errors in the 'id' calls\n      # below are definitely unexpected, so allow the users to see them\n      # (that is, avoid stderr redirection).\n      am_uid=`id -u || echo unknown`\n      am_gid=`id -g || echo unknown`\n      AC_MSG_CHECKING([whether UID '$am_uid' is supported by ustar format])\n      if test $am_uid -le $am_max_uid; then\n         AC_MSG_RESULT([yes])\n      else\n         AC_MSG_RESULT([no])\n         _am_tools=none\n      fi\n      AC_MSG_CHECKING([whether GID '$am_gid' is supported by ustar format])\n      if test $am_gid -le $am_max_gid; then\n         AC_MSG_RESULT([yes])\n      else\n        AC_MSG_RESULT([no])\n        _am_tools=none\n      fi],\n\n  [pax],\n    [],\n\n  [m4_fatal([Unknown tar format])])\n\n  AC_MSG_CHECKING([how to create a $1 tar archive])\n\n  # Go ahead even if we have the value already cached.  We do so because we\n  # need to set the values for the 'am__tar' and 'am__untar' variables.\n  _am_tools=${am_cv_prog_tar_$1-$_am_tools}\n\n  for _am_tool in $_am_tools; do\n    case $_am_tool in\n    gnutar)\n      for _am_tar in tar gnutar gtar; do\n        AM_RUN_LOG([$_am_tar --version]) && break\n      done\n      am__tar=\"$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - \"'\"$$tardir\"'\n      am__tar_=\"$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - \"'\"$tardir\"'\n      am__untar=\"$_am_tar -xf -\"\n      ;;\n    plaintar)\n      # Must skip GNU tar: if it does not support --format= it doesn't create\n      # ustar tarball either.\n      (tar --version) >/dev/null 2>&1 && continue\n      am__tar='tar chf - \"$$tardir\"'\n      am__tar_='tar chf - \"$tardir\"'\n      am__untar='tar xf -'\n      ;;\n    pax)\n      am__tar='pax -L -x $1 -w \"$$tardir\"'\n      am__tar_='pax -L -x $1 -w \"$tardir\"'\n      am__untar='pax -r'\n      ;;\n    cpio)\n      am__tar='find \"$$tardir\" -print | cpio -o -H $1 -L'\n      am__tar_='find \"$tardir\" -print | cpio -o -H $1 -L'\n      am__untar='cpio -i -H $1 -d'\n      ;;\n    none)\n      am__tar=false\n      am__tar_=false\n      am__untar=false\n      ;;\n    esac\n\n    # If the value was cached, stop now.  We just wanted to have am__tar\n    # and am__untar set.\n    test -n \"${am_cv_prog_tar_$1}\" && break\n\n    # tar/untar a dummy directory, and stop if the command works.\n    rm -rf conftest.dir\n    mkdir conftest.dir\n    echo GrepMe > conftest.dir/file\n    AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])\n    rm -rf conftest.dir\n    if test -s conftest.tar; then\n      AM_RUN_LOG([$am__untar <conftest.tar])\n      AM_RUN_LOG([cat conftest.dir/file])\n      grep GrepMe conftest.dir/file >/dev/null 2>&1 && break\n    fi\n  done\n  rm -rf conftest.dir\n\n  AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])\n  AC_MSG_RESULT([$am_cv_prog_tar_$1])])\n\nAC_SUBST([am__tar])\nAC_SUBST([am__untar])\n]) # _AM_PROG_TAR\n\nm4_include([m4/asmcfi.m4])\nm4_include([m4/ax_append_flag.m4])\nm4_include([m4/ax_cc_maxopt.m4])\nm4_include([m4/ax_cflags_warn_all.m4])\nm4_include([m4/ax_check_compile_flag.m4])\nm4_include([m4/ax_compiler_vendor.m4])\nm4_include([m4/ax_configure_args.m4])\nm4_include([m4/ax_enable_builddir.m4])\nm4_include([m4/ax_gcc_archflag.m4])\nm4_include([m4/ax_gcc_x86_cpuid.m4])\nm4_include([m4/libtool.m4])\nm4_include([m4/ltoptions.m4])\nm4_include([m4/ltsugar.m4])\nm4_include([m4/ltversion.m4])\nm4_include([m4/lt~obsolete.m4])\nm4_include([acinclude.m4])\n",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_ctypes/libffi/m4/libtool.m4": "# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-\n#\n#   Copyright (C) 1996-2001, 2003-2013 Free Software Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\nm4_define([_LT_COPYING], [dnl\n#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,\n#                 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n#                 Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from http://www.gnu.org/licenses/gpl.html, or\n# obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n])\n\n# serial 58 LT_INIT\n\n\n# LT_PREREQ(VERSION)\n# ------------------\n# Complain and exit if this libtool version is less that VERSION.\nm4_defun([LT_PREREQ],\n[m4_if(m4_version_compare(m4_defn([LT_PACKAGE_VERSION]), [$1]), -1,\n       [m4_default([$3],\n\t\t   [m4_fatal([Libtool version $1 or higher is required],\n\t\t             63)])],\n       [$2])])\n\n\n# _LT_CHECK_BUILDDIR\n# ------------------\n# Complain if the absolute build directory name contains unusual characters\nm4_defun([_LT_CHECK_BUILDDIR],\n[case `pwd` in\n  *\\ * | *\\\t*)\n    AC_MSG_WARN([Libtool does not cope well with whitespace in `pwd`]) ;;\nesac\n])\n\n\n# LT_INIT([OPTIONS])\n# ------------------\nAC_DEFUN([LT_INIT],\n[AC_PREREQ([2.58])dnl We use AC_INCLUDES_DEFAULT\nAC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl\nAC_BEFORE([$0], [LT_LANG])dnl\nAC_BEFORE([$0], [LT_OUTPUT])dnl\nAC_BEFORE([$0], [LTDL_INIT])dnl\nm4_require([_LT_CHECK_BUILDDIR])dnl\n\ndnl Autoconf doesn't catch unexpanded LT_ macros by default:\nm4_pattern_forbid([^_?LT_[A-Z_]+$])dnl\nm4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl\ndnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4\ndnl unless we require an AC_DEFUNed macro:\nAC_REQUIRE([LTOPTIONS_VERSION])dnl\nAC_REQUIRE([LTSUGAR_VERSION])dnl\nAC_REQUIRE([LTVERSION_VERSION])dnl\nAC_REQUIRE([LTOBSOLETE_VERSION])dnl\nm4_require([_LT_PROG_LTMAIN])dnl\n\n_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])\n\ndnl Parse OPTIONS\n_LT_SET_OPTIONS([$0], [$1])\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=$ltmain\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\nAC_SUBST(LIBTOOL)dnl\n\n_LT_SETUP\n\n# Only expand once:\nm4_define([LT_INIT])\n])# LT_INIT\n\n# Old names:\nAU_ALIAS([AC_PROG_LIBTOOL], [LT_INIT])\nAU_ALIAS([AM_PROG_LIBTOOL], [LT_INIT])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PROG_LIBTOOL], [])\ndnl AC_DEFUN([AM_PROG_LIBTOOL], [])\n\n\n# _LT_CC_BASENAME(CC)\n# -------------------\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nm4_defun([_LT_CC_BASENAME],\n[for cc_temp in $1\"\"; do\n  case $cc_temp in\n    compile | *[[\\\\/]]compile | ccache | *[[\\\\/]]ccache ) ;;\n    distcc | *[[\\\\/]]distcc | purify | *[[\\\\/]]purify ) ;;\n    \\-*) ;;\n    *) break;;\n  esac\ndone\ncc_basename=`$ECHO \"$cc_temp\" | $SED \"s%.*/%%; s%^$host_alias-%%\"`\n])\n\n\n# _LT_FILEUTILS_DEFAULTS\n# ----------------------\n# It is okay to use these file commands and assume they have been set\n# sensibly after 'm4_require([_LT_FILEUTILS_DEFAULTS])'.\nm4_defun([_LT_FILEUTILS_DEFAULTS],\n[: ${CP=\"cp -f\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n])# _LT_FILEUTILS_DEFAULTS\n\n\n# _LT_SETUP\n# ---------\nm4_defun([_LT_SETUP],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_REQUIRE([_LT_PREPARE_SED_QUOTE_VARS])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\n\n_LT_DECL([], [PATH_SEPARATOR], [1], [The PATH separator for the build system])dnl\ndnl\n_LT_DECL([], [host_alias], [0], [The host system])dnl\n_LT_DECL([], [host], [0])dnl\n_LT_DECL([], [host_os], [0])dnl\ndnl\n_LT_DECL([], [build_alias], [0], [The build system])dnl\n_LT_DECL([], [build], [0])dnl\n_LT_DECL([], [build_os], [0])dnl\ndnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\ndnl\nAC_REQUIRE([AC_PROG_LN_S])dnl\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\n_LT_DECL([], [LN_S], [1], [Whether we need soft or hard links])dnl\ndnl\nAC_REQUIRE([LT_CMD_MAX_LEN])dnl\n_LT_DECL([objext], [ac_objext], [0], [Object file suffix (normally \"o\")])dnl\n_LT_DECL([], [exeext], [0], [Executable file suffix (normally \"\")])dnl\ndnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_PATH_CONVERSION_FUNCTIONS])dnl\nm4_require([_LT_CMD_RELOAD])dnl\nm4_require([_LT_CHECK_MAGIC_METHOD])dnl\nm4_require([_LT_CHECK_SHAREDLIB_FROM_LINKLIB])dnl\nm4_require([_LT_CMD_OLD_ARCHIVE])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_WITH_SYSROOT])dnl\n\n_LT_CONFIG_LIBTOOL_INIT([\n# See if we are running on zsh, and set the options that allow our\n# commands through without removal of \\ escapes INIT.\nif test -n \"\\${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n])\nif test -n \"${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n\n_LT_CHECK_OBJDIR\n\nm4_require([_LT_TAG_COMPILER])dnl\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test set != \"${COLLECT_NAMES+set}\"; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Global variables:\nofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a '.a' archive for static linking (except MSVC,\n# which needs '.lib').\nlibext=a\n\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n\nold_CC=$CC\nold_CFLAGS=$CFLAGS\n\n# Set sane defaults for various variables\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$LTCFLAGS\" && LTCFLAGS=$CFLAGS\ntest -z \"$LD\" && LD=ld\ntest -z \"$ac_objext\" && ac_objext=o\n\n_LT_CC_BASENAME([$compiler])\n\n# Only perform the check for file, if the check method requires it\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    _LT_PATH_MAGIC\n  fi\n  ;;\nesac\n\n# Use C for the default configuration in the libtool script\nLT_SUPPORTED_TAG([CC])\n_LT_LANG_C_CONFIG\n_LT_LANG_DEFAULT_CONFIG\n_LT_CONFIG_COMMANDS\n])# _LT_SETUP\n\n\n# _LT_PREPARE_SED_QUOTE_VARS\n# --------------------------\n# Define a few sed substitution that help us do robust quoting.\nm4_defun([_LT_PREPARE_SED_QUOTE_VARS],\n[# Backslashify metacharacters that are still active within\n# double-quoted strings.\nsed_quote_subst='s/\\([[\"`$\\\\]]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([[\"`\\\\]]\\)/\\\\\\1/g'\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to delay expansion of an escaped single quote.\ndelay_single_quote_subst='s/'\\''/'\\'\\\\\\\\\\\\\\'\\''/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n])\n\n# _LT_PROG_LTMAIN\n# ---------------\n# Note that this code is called both from 'configure', and 'config.status'\n# now that we use AC_CONFIG_COMMANDS to generate libtool.  Notably,\n# 'config.status' has no value for ac_aux_dir unless we are using Automake,\n# so we pass a copy along to make sure it has a sensible value anyway.\nm4_defun([_LT_PROG_LTMAIN],\n[m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([ltmain.sh])])dnl\n_LT_CONFIG_LIBTOOL_INIT([ac_aux_dir='$ac_aux_dir'])\nltmain=$ac_aux_dir/ltmain.sh\n])# _LT_PROG_LTMAIN\n\n\n## ------------------------------------- ##\n## Accumulate code for creating libtool. ##\n## ------------------------------------- ##\n\n# So that we can recreate a full libtool script including additional\n# tags, we accumulate the chunks of code to send to AC_CONFIG_COMMANDS\n# in macros and then make a single call at the end using the 'libtool'\n# label.\n\n\n# _LT_CONFIG_LIBTOOL_INIT([INIT-COMMANDS])\n# ----------------------------------------\n# Register INIT-COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL_INIT],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_INIT],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_INIT])\n\n\n# _LT_CONFIG_LIBTOOL([COMMANDS])\n# ------------------------------\n# Register COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_COMMANDS],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS])\n\n\n# _LT_CONFIG_SAVE_COMMANDS([COMMANDS], [INIT_COMMANDS])\n# -----------------------------------------------------\nm4_defun([_LT_CONFIG_SAVE_COMMANDS],\n[_LT_CONFIG_LIBTOOL([$1])\n_LT_CONFIG_LIBTOOL_INIT([$2])\n])\n\n\n# _LT_FORMAT_COMMENT([COMMENT])\n# -----------------------------\n# Add leading comment marks to the start of each line, and a trailing\n# full-stop to the whole comment if one is not present already.\nm4_define([_LT_FORMAT_COMMENT],\n[m4_ifval([$1], [\nm4_bpatsubst([m4_bpatsubst([$1], [^ *], [# ])],\n              [['`$\\]], [\\\\\\&])]m4_bmatch([$1], [[!?.]$], [], [.])\n)])\n\n\n\n## ------------------------ ##\n## FIXME: Eliminate VARNAME ##\n## ------------------------ ##\n\n\n# _LT_DECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION], [IS-TAGGED?])\n# -------------------------------------------------------------------\n# CONFIGNAME is the name given to the value in the libtool script.\n# VARNAME is the (base) name used in the configure script.\n# VALUE may be 0, 1 or 2 for a computed quote escaped value based on\n# VARNAME.  Any other value will be used directly.\nm4_define([_LT_DECL],\n[lt_if_append_uniq([lt_decl_varnames], [$2], [, ],\n    [lt_dict_add_subkey([lt_decl_dict], [$2], [libtool_name],\n\t[m4_ifval([$1], [$1], [$2])])\n    lt_dict_add_subkey([lt_decl_dict], [$2], [value], [$3])\n    m4_ifval([$4],\n\t[lt_dict_add_subkey([lt_decl_dict], [$2], [description], [$4])])\n    lt_dict_add_subkey([lt_decl_dict], [$2],\n\t[tagged?], [m4_ifval([$5], [yes], [no])])])\n])\n\n\n# _LT_TAGDECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION])\n# --------------------------------------------------------\nm4_define([_LT_TAGDECL], [_LT_DECL([$1], [$2], [$3], [$4], [yes])])\n\n\n# lt_decl_tag_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_tag_varnames],\n[_lt_decl_filter([tagged?], [yes], $@)])\n\n\n# _lt_decl_filter(SUBKEY, VALUE, [SEPARATOR], [VARNAME1..])\n# ---------------------------------------------------------\nm4_define([_lt_decl_filter],\n[m4_case([$#],\n  [0], [m4_fatal([$0: too few arguments: $#])],\n  [1], [m4_fatal([$0: too few arguments: $#: $1])],\n  [2], [lt_dict_filter([lt_decl_dict], [$1], [$2], [], lt_decl_varnames)],\n  [3], [lt_dict_filter([lt_decl_dict], [$1], [$2], [$3], lt_decl_varnames)],\n  [lt_dict_filter([lt_decl_dict], $@)])[]dnl\n])\n\n\n# lt_decl_quote_varnames([SEPARATOR], [VARNAME1...])\n# --------------------------------------------------\nm4_define([lt_decl_quote_varnames],\n[_lt_decl_filter([value], [1], $@)])\n\n\n# lt_decl_dquote_varnames([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_dquote_varnames],\n[_lt_decl_filter([value], [2], $@)])\n\n\n# lt_decl_varnames_tagged([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_varnames_tagged],\n[m4_assert([$# <= 2])dnl\n_$0(m4_quote(m4_default([$1], [[, ]])),\n    m4_ifval([$2], [[$2]], [m4_dquote(lt_decl_tag_varnames)]),\n    m4_split(m4_normalize(m4_quote(_LT_TAGS)), [ ]))])\nm4_define([_lt_decl_varnames_tagged],\n[m4_ifval([$3], [lt_combine([$1], [$2], [_], $3)])])\n\n\n# lt_decl_all_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_all_varnames],\n[_$0(m4_quote(m4_default([$1], [[, ]])),\n     m4_if([$2], [],\n\t   m4_quote(lt_decl_varnames),\n\tm4_quote(m4_shift($@))))[]dnl\n])\nm4_define([_lt_decl_all_varnames],\n[lt_join($@, lt_decl_varnames_tagged([$1],\n\t\t\tlt_decl_tag_varnames([[, ]], m4_shift($@))))dnl\n])\n\n\n# _LT_CONFIG_STATUS_DECLARE([VARNAME])\n# ------------------------------------\n# Quote a variable value, and forward it to 'config.status' so that its\n# declaration there will have the same value as in 'configure'.  VARNAME\n# must have a single quote delimited value for this to work.\nm4_define([_LT_CONFIG_STATUS_DECLARE],\n[$1='`$ECHO \"$][$1\" | $SED \"$delay_single_quote_subst\"`'])\n\n\n# _LT_CONFIG_STATUS_DECLARATIONS\n# ------------------------------\n# We delimit libtool config variables with single quotes, so when\n# we write them to config.status, we have to be sure to quote all\n# embedded single quotes properly.  In configure, this macro expands\n# each variable declared with _LT_DECL (and _LT_TAGDECL) into:\n#\n#    <var>='`$ECHO \"$<var>\" | $SED \"$delay_single_quote_subst\"`'\nm4_defun([_LT_CONFIG_STATUS_DECLARATIONS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_all_varnames),\n    [m4_n([_LT_CONFIG_STATUS_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAGS\n# ----------------\n# Output comment and list of tags supported by the script\nm4_defun([_LT_LIBTOOL_TAGS],\n[_LT_FORMAT_COMMENT([The names of the tagged configurations supported by this script])dnl\navailable_tags='_LT_TAGS'dnl\n])\n\n\n# _LT_LIBTOOL_DECLARE(VARNAME, [TAG])\n# -----------------------------------\n# Extract the dictionary values for VARNAME (optionally with TAG) and\n# expand to a commented shell variable setting:\n#\n#    # Some comment about what VAR is for.\n#    visible_name=$lt_internal_name\nm4_define([_LT_LIBTOOL_DECLARE],\n[_LT_FORMAT_COMMENT(m4_quote(lt_dict_fetch([lt_decl_dict], [$1],\n\t\t\t\t\t   [description])))[]dnl\nm4_pushdef([_libtool_name],\n    m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [libtool_name])))[]dnl\nm4_case(m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [value])),\n    [0], [_libtool_name=[$]$1],\n    [1], [_libtool_name=$lt_[]$1],\n    [2], [_libtool_name=$lt_[]$1],\n    [_libtool_name=lt_dict_fetch([lt_decl_dict], [$1], [value])])[]dnl\nm4_ifval([$2], [_$2])[]m4_popdef([_libtool_name])[]dnl\n])\n\n\n# _LT_LIBTOOL_CONFIG_VARS\n# -----------------------\n# Produce commented declarations of non-tagged libtool config variables\n# suitable for insertion in the LIBTOOL CONFIG section of the 'libtool'\n# script.  Tagged libtool config variables (even for the LIBTOOL CONFIG\n# section) are produced by _LT_LIBTOOL_TAG_VARS.\nm4_defun([_LT_LIBTOOL_CONFIG_VARS],\n[m4_foreach([_lt_var],\n    m4_quote(_lt_decl_filter([tagged?], [no], [], lt_decl_varnames)),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAG_VARS(TAG)\n# -------------------------\nm4_define([_LT_LIBTOOL_TAG_VARS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_tag_varnames),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var, [$1])])])])\n\n\n# _LT_TAGVAR(VARNAME, [TAGNAME])\n# ------------------------------\nm4_define([_LT_TAGVAR], [m4_ifval([$2], [$1_$2], [$1])])\n\n\n# _LT_CONFIG_COMMANDS\n# -------------------\n# Send accumulated output to $CONFIG_STATUS.  Thanks to the lists of\n# variables for single and double quote escaping we saved from calls\n# to _LT_DECL, we can put quote escaped variables declarations\n# into 'config.status', and then the shell code to quote escape them in\n# for loops in 'config.status'.  Finally, any additional code accumulated\n# from calls to _LT_CONFIG_LIBTOOL_INIT is expanded.\nm4_defun([_LT_CONFIG_COMMANDS],\n[AC_PROVIDE_IFELSE([LT_OUTPUT],\n\tdnl If the libtool generation code has been placed in $CONFIG_LT,\n\tdnl instead of duplicating it all over again into config.status,\n\tdnl then we will have config.status run $CONFIG_LT later, so it\n\tdnl needs to know what name is stored there:\n        [AC_CONFIG_COMMANDS([libtool],\n            [$SHELL $CONFIG_LT || AS_EXIT(1)], [CONFIG_LT='$CONFIG_LT'])],\n    dnl If the libtool generation code is destined for config.status,\n    dnl expand the accumulated commands and init code now:\n    [AC_CONFIG_COMMANDS([libtool],\n        [_LT_OUTPUT_LIBTOOL_COMMANDS], [_LT_OUTPUT_LIBTOOL_COMMANDS_INIT])])\n])#_LT_CONFIG_COMMANDS\n\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS_INIT],\n[\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nsed_quote_subst='$sed_quote_subst'\ndouble_quote_subst='$double_quote_subst'\ndelay_variable_subst='$delay_variable_subst'\n_LT_CONFIG_STATUS_DECLARATIONS\nLTCC='$LTCC'\nLTCFLAGS='$LTCFLAGS'\ncompiler='$compiler_DEFAULT'\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$[]1\n_LTECHO_EOF'\n}\n\n# Quote evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_quote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED \\\\\"\\\\\\$sed_quote_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n# Double-quote double-evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_dquote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED -e \\\\\"\\\\\\$double_quote_subst\\\\\" -e \\\\\"\\\\\\$sed_quote_subst\\\\\" -e \\\\\"\\\\\\$delay_variable_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n_LT_OUTPUT_LIBTOOL_INIT\n])\n\n# _LT_GENERATED_FILE_INIT(FILE, [COMMENT])\n# ------------------------------------\n# Generate a child script FILE with all initialization necessary to\n# reuse the environment learned by the parent script, and make the\n# file executable.  If COMMENT is supplied, it is inserted after the\n# '#!' sequence but before initialization text begins.  After this\n# macro, additional text can be appended to FILE to form the body of\n# the child script.  The macro ends with non-zero status if the\n# file could not be fully written (such as if the disk is full).\nm4_ifdef([AS_INIT_GENERATED],\n[m4_defun([_LT_GENERATED_FILE_INIT],[AS_INIT_GENERATED($@)])],\n[m4_defun([_LT_GENERATED_FILE_INIT],\n[m4_require([AS_PREPARE])]dnl\n[m4_pushdef([AS_MESSAGE_LOG_FD])]dnl\n[lt_write_fail=0\ncat >$1 <<_ASEOF || lt_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n$2\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$1 <<\\_ASEOF || lt_write_fail=1\nAS_SHELL_SANITIZE\n_AS_PREPARE\nexec AS_MESSAGE_FD>&1\n_ASEOF\ntest 0 = \"$lt_write_fail\" && chmod +x $1[]dnl\nm4_popdef([AS_MESSAGE_LOG_FD])])])# _LT_GENERATED_FILE_INIT\n\n# LT_OUTPUT\n# ---------\n# This macro allows early generation of the libtool script (before\n# AC_OUTPUT is called), incase it is used in configure for compilation\n# tests.\nAC_DEFUN([LT_OUTPUT],\n[: ${CONFIG_LT=./config.lt}\nAC_MSG_NOTICE([creating $CONFIG_LT])\n_LT_GENERATED_FILE_INIT([\"$CONFIG_LT\"],\n[# Run this file to recreate a libtool stub with the current configuration.])\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nlt_cl_silent=false\nexec AS_MESSAGE_LOG_FD>>config.log\n{\n  echo\n  AS_BOX([Running $as_me.])\n} >&AS_MESSAGE_LOG_FD\n\nlt_cl_help=\"\\\n'$as_me' creates a local libtool stub from the current configuration,\nfor use in further configure time tests before the real libtool is\ngenerated.\n\nUsage: $[0] [[OPTIONS]]\n\n  -h, --help      print this help, then exit\n  -V, --version   print version number, then exit\n  -q, --quiet     do not print progress messages\n  -d, --debug     don't remove temporary files\n\nReport bugs to <bug-libtool@gnu.org>.\"\n\nlt_cl_version=\"\\\nm4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl\nm4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])\nconfigured by $[0], generated by m4_PACKAGE_STRING.\n\nCopyright (C) 2011 Free Software Foundation, Inc.\nThis config.lt script is free software; the Free Software Foundation\ngives unlimited permision to copy, distribute and modify it.\"\n\nwhile test 0 != $[#]\ndo\n  case $[1] in\n    --version | --v* | -V )\n      echo \"$lt_cl_version\"; exit 0 ;;\n    --help | --h* | -h )\n      echo \"$lt_cl_help\"; exit 0 ;;\n    --debug | --d* | -d )\n      debug=: ;;\n    --quiet | --q* | --silent | --s* | -q )\n      lt_cl_silent=: ;;\n\n    -*) AC_MSG_ERROR([unrecognized option: $[1]\nTry '$[0] --help' for more information.]) ;;\n\n    *) AC_MSG_ERROR([unrecognized argument: $[1]\nTry '$[0] --help' for more information.]) ;;\n  esac\n  shift\ndone\n\nif $lt_cl_silent; then\n  exec AS_MESSAGE_FD>/dev/null\nfi\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<_LTEOF\n_LT_OUTPUT_LIBTOOL_COMMANDS_INIT\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nAC_MSG_NOTICE([creating $ofile])\n_LT_OUTPUT_LIBTOOL_COMMANDS\nAS_EXIT(0)\n_LTEOF\nchmod +x \"$CONFIG_LT\"\n\n# configure is writing to config.log, but config.lt does its own redirection,\n# appending to config.log, which fails on DOS, as config.log is still kept\n# open by configure.  Here we exec the FD to /dev/null, effectively closing\n# config.log, so it can be properly (re)opened and appended to by config.lt.\nlt_cl_success=:\ntest yes = \"$silent\" &&\n  lt_config_lt_args=\"$lt_config_lt_args --quiet\"\nexec AS_MESSAGE_LOG_FD>/dev/null\n$SHELL \"$CONFIG_LT\" $lt_config_lt_args || lt_cl_success=false\nexec AS_MESSAGE_LOG_FD>>config.log\n$lt_cl_success || AS_EXIT(1)\n])# LT_OUTPUT\n\n\n# _LT_CONFIG(TAG)\n# ---------------\n# If TAG is the built-in tag, create an initial libtool script with a\n# default configuration from the untagged config vars.  Otherwise add code\n# to config.status for appending the configuration named by TAG from the\n# matching tagged config vars.\nm4_defun([_LT_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_CONFIG_SAVE_COMMANDS([\n  m4_define([_LT_TAG], m4_if([$1], [], [C], [$1]))dnl\n  m4_if(_LT_TAG, [C], [\n    # See if we are running on zsh, and set the options that allow our\n    # commands through without removal of \\ escapes.\n    if test -n \"${ZSH_VERSION+set}\"; then\n      setopt NO_GLOB_SUBST\n    fi\n\n    cfgfile=${ofile}T\n    trap \"$RM \\\"$cfgfile\\\"; exit 1\" 1 2 15\n    $RM \"$cfgfile\"\n\n    cat <<_LT_EOF >> \"$cfgfile\"\n#! $SHELL\n\n# `$ECHO \"$ofile\" | sed 's%^.*/%%'` - Provide generalized library-building support services.\n# Generated automatically by $as_me ($PACKAGE) $VERSION\n# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n#\n_LT_COPYING\n_LT_LIBTOOL_TAGS\n\n# ### BEGIN LIBTOOL CONFIG\n_LT_LIBTOOL_CONFIG_VARS\n_LT_LIBTOOL_TAG_VARS\n# ### END LIBTOOL CONFIG\n\n_LT_EOF\n\n  case $host_os in\n  aix3*)\n    cat <<\\_LT_EOF >> \"$cfgfile\"\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test set != \"${COLLECT_NAMES+set}\"; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\n_LT_EOF\n    ;;\n  esac\n\n  _LT_PROG_LTMAIN\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '$q' \"$ltmain\" >> \"$cfgfile\" \\\n     || (rm -f \"$cfgfile\"; exit 1)\n\n   mv -f \"$cfgfile\" \"$ofile\" ||\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n],\n[cat <<_LT_EOF >> \"$ofile\"\n\ndnl Unfortunately we have to use $1 here, since _LT_TAG is not expanded\ndnl in a comment (ie after a #).\n# ### BEGIN LIBTOOL TAG CONFIG: $1\n_LT_LIBTOOL_TAG_VARS(_LT_TAG)\n# ### END LIBTOOL TAG CONFIG: $1\n_LT_EOF\n])dnl /m4_if\n],\n[m4_if([$1], [], [\n    PACKAGE='$PACKAGE'\n    VERSION='$VERSION'\n    RM='$RM'\n    ofile='$ofile'], [])\n])dnl /_LT_CONFIG_SAVE_COMMANDS\n])# _LT_CONFIG\n\n\n# LT_SUPPORTED_TAG(TAG)\n# ---------------------\n# Trace this macro to discover what tags are supported by the libtool\n# --tag option, using:\n#    autoconf --trace 'LT_SUPPORTED_TAG:$1'\nAC_DEFUN([LT_SUPPORTED_TAG], [])\n\n\n# C support is built-in for now\nm4_define([_LT_LANG_C_enabled], [])\nm4_define([_LT_TAGS], [])\n\n\n# LT_LANG(LANG)\n# -------------\n# Enable libtool support for the given language if not already enabled.\nAC_DEFUN([LT_LANG],\n[AC_BEFORE([$0], [LT_OUTPUT])dnl\nm4_case([$1],\n  [C],\t\t\t[_LT_LANG(C)],\n  [C++],\t\t[_LT_LANG(CXX)],\n  [Go],\t\t\t[_LT_LANG(GO)],\n  [Java],\t\t[_LT_LANG(GCJ)],\n  [Fortran 77],\t\t[_LT_LANG(F77)],\n  [Fortran],\t\t[_LT_LANG(FC)],\n  [Windows Resource],\t[_LT_LANG(RC)],\n  [m4_ifdef([_LT_LANG_]$1[_CONFIG],\n    [_LT_LANG($1)],\n    [m4_fatal([$0: unsupported language: \"$1\"])])])dnl\n])# LT_LANG\n\n\n# _LT_LANG(LANGNAME)\n# ------------------\nm4_defun([_LT_LANG],\n[m4_ifdef([_LT_LANG_]$1[_enabled], [],\n  [LT_SUPPORTED_TAG([$1])dnl\n  m4_append([_LT_TAGS], [$1 ])dnl\n  m4_define([_LT_LANG_]$1[_enabled], [])dnl\n  _LT_LANG_$1_CONFIG($1)])dnl\n])# _LT_LANG\n\n\nm4_ifndef([AC_PROG_GO], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_GO.  When it is available in    #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\nm4_defun([AC_PROG_GO],\n[AC_LANG_PUSH(Go)dnl\nAC_ARG_VAR([GOC],     [Go compiler command])dnl\nAC_ARG_VAR([GOFLAGS], [Go compiler flags])dnl\n_AC_ARG_VAR_LDFLAGS()dnl\nAC_CHECK_TOOL(GOC, gccgo)\nif test -z \"$GOC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    AC_CHECK_PROG(GOC, [${ac_tool_prefix}gccgo], [${ac_tool_prefix}gccgo])\n  fi\nfi\nif test -z \"$GOC\"; then\n  AC_CHECK_PROG(GOC, gccgo, gccgo, false)\nfi\n])#m4_defun\n])#m4_ifndef\n\n\n# _LT_LANG_DEFAULT_CONFIG\n# -----------------------\nm4_defun([_LT_LANG_DEFAULT_CONFIG],\n[AC_PROVIDE_IFELSE([AC_PROG_CXX],\n  [LT_LANG(CXX)],\n  [m4_define([AC_PROG_CXX], defn([AC_PROG_CXX])[LT_LANG(CXX)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_F77],\n  [LT_LANG(F77)],\n  [m4_define([AC_PROG_F77], defn([AC_PROG_F77])[LT_LANG(F77)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_FC],\n  [LT_LANG(FC)],\n  [m4_define([AC_PROG_FC], defn([AC_PROG_FC])[LT_LANG(FC)])])\n\ndnl The call to [A][M_PROG_GCJ] is quoted like that to stop aclocal\ndnl pulling things in needlessly.\nAC_PROVIDE_IFELSE([AC_PROG_GCJ],\n  [LT_LANG(GCJ)],\n  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],\n    [LT_LANG(GCJ)],\n    [AC_PROVIDE_IFELSE([LT_PROG_GCJ],\n      [LT_LANG(GCJ)],\n      [m4_ifdef([AC_PROG_GCJ],\n\t[m4_define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([A][M_PROG_GCJ],\n\t[m4_define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([LT_PROG_GCJ],\n\t[m4_define([LT_PROG_GCJ], defn([LT_PROG_GCJ])[LT_LANG(GCJ)])])])])])\n\nAC_PROVIDE_IFELSE([AC_PROG_GO],\n  [LT_LANG(GO)],\n  [m4_define([AC_PROG_GO], defn([AC_PROG_GO])[LT_LANG(GO)])])\n\nAC_PROVIDE_IFELSE([LT_PROG_RC],\n  [LT_LANG(RC)],\n  [m4_define([LT_PROG_RC], defn([LT_PROG_RC])[LT_LANG(RC)])])\n])# _LT_LANG_DEFAULT_CONFIG\n\n# Obsolete macros:\nAU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])\nAU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])\nAU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])\nAU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])\nAU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_CXX], [])\ndnl AC_DEFUN([AC_LIBTOOL_F77], [])\ndnl AC_DEFUN([AC_LIBTOOL_FC], [])\ndnl AC_DEFUN([AC_LIBTOOL_GCJ], [])\ndnl AC_DEFUN([AC_LIBTOOL_RC], [])\n\n\n# _LT_TAG_COMPILER\n# ----------------\nm4_defun([_LT_TAG_COMPILER],\n[AC_REQUIRE([AC_PROG_CC])dnl\n\n_LT_DECL([LTCC], [CC], [1], [A C compiler])dnl\n_LT_DECL([LTCFLAGS], [CFLAGS], [1], [LTCC compiler flags])dnl\n_LT_TAGDECL([CC], [compiler], [1], [A language specific compiler])dnl\n_LT_TAGDECL([with_gcc], [GCC], [0], [Is the compiler the GNU compiler?])dnl\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n])# _LT_TAG_COMPILER\n\n\n# _LT_COMPILER_BOILERPLATE\n# ------------------------\n# Check for compiler boilerplate output or warnings with\n# the simple compiler test code.\nm4_defun([_LT_COMPILER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$RM conftest*\n])# _LT_COMPILER_BOILERPLATE\n\n\n# _LT_LINKER_BOILERPLATE\n# ----------------------\n# Check for linker boilerplate output or warnings with\n# the simple link test code.\nm4_defun([_LT_LINKER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$RM -r conftest*\n])# _LT_LINKER_BOILERPLATE\n\n# _LT_REQUIRED_DARWIN_CHECKS\n# -------------------------\nm4_defun_once([_LT_REQUIRED_DARWIN_CHECKS],[\n  case $host_os in\n    rhapsody* | darwin*)\n    AC_CHECK_TOOL([DSYMUTIL], [dsymutil], [:])\n    AC_CHECK_TOOL([NMEDIT], [nmedit], [:])\n    AC_CHECK_TOOL([LIPO], [lipo], [:])\n    AC_CHECK_TOOL([OTOOL], [otool], [:])\n    AC_CHECK_TOOL([OTOOL64], [otool64], [:])\n    _LT_DECL([], [DSYMUTIL], [1],\n      [Tool to manipulate archived DWARF debug symbol files on Mac OS X])\n    _LT_DECL([], [NMEDIT], [1],\n      [Tool to change global to local symbols on Mac OS X])\n    _LT_DECL([], [LIPO], [1],\n      [Tool to manipulate fat objects and archives on Mac OS X])\n    _LT_DECL([], [OTOOL], [1],\n      [ldd/readelf like tool for Mach-O binaries on Mac OS X])\n    _LT_DECL([], [OTOOL64], [1],\n      [ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4])\n\n    AC_CACHE_CHECK([for -single_module linker flag],[lt_cv_apple_cc_single_mod],\n      [lt_cv_apple_cc_single_mod=no\n      if test -z \"$LT_MULTI_MODULE\"; then\n\t# By default we will add the -single_module flag. You can override\n\t# by either setting the environment variable LT_MULTI_MODULE\n\t# non-empty at configure time, or by adding -multi_module to the\n\t# link flags.\n\trm -rf libconftest.dylib*\n\techo \"int foo(void){return 1;}\" > conftest.c\n\techo \"$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n-dynamiclib -Wl,-single_module conftest.c\" >&AS_MESSAGE_LOG_FD\n\t$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n\t  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err\n        _lt_result=$?\n\t# If there is a non-empty error log, and \"single_module\"\n\t# appears in it, assume the flag caused a linker warning\n        if test -s conftest.err && $GREP single_module conftest.err; then\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\t# Otherwise, if the output was created with a 0 exit code from\n\t# the compiler, it worked.\n\telif test -f libconftest.dylib && test 0 = \"$_lt_result\"; then\n\t  lt_cv_apple_cc_single_mod=yes\n\telse\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\tfi\n\trm -rf libconftest.dylib*\n\trm -f conftest.*\n      fi])\n\n    AC_CACHE_CHECK([for -exported_symbols_list linker flag],\n      [lt_cv_ld_exported_symbols_list],\n      [lt_cv_ld_exported_symbols_list=no\n      save_LDFLAGS=$LDFLAGS\n      echo \"_main\" > conftest.sym\n      LDFLAGS=\"$LDFLAGS -Wl,-exported_symbols_list,conftest.sym\"\n      AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n\t[lt_cv_ld_exported_symbols_list=yes],\n\t[lt_cv_ld_exported_symbols_list=no])\n\tLDFLAGS=$save_LDFLAGS\n    ])\n\n    AC_CACHE_CHECK([for -force_load linker flag],[lt_cv_ld_force_load],\n      [lt_cv_ld_force_load=no\n      cat > conftest.c << _LT_EOF\nint forced_loaded() { return 2;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS -c -o conftest.o conftest.c\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&AS_MESSAGE_LOG_FD\n      echo \"$AR cru libconftest.a conftest.o\" >&AS_MESSAGE_LOG_FD\n      $AR cru libconftest.a conftest.o 2>&AS_MESSAGE_LOG_FD\n      echo \"$RANLIB libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $RANLIB libconftest.a 2>&AS_MESSAGE_LOG_FD\n      cat > conftest.c << _LT_EOF\nint main() { return 0;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a 2>conftest.err\n      _lt_result=$?\n      if test -s conftest.err && $GREP force_load conftest.err; then\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      elif test -f conftest && test 0 = \"$_lt_result\" && $GREP forced_load conftest >/dev/null 2>&1; then\n\tlt_cv_ld_force_load=yes\n      else\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      fi\n        rm -f conftest.err libconftest.a conftest conftest.c\n        rm -rf conftest.dSYM\n    ])\n    case $host_os in\n    rhapsody* | darwin1.[[012]])\n      _lt_dar_allow_undefined='$wl-undefined ${wl}suppress' ;;\n    darwin1.*)\n      _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n    darwin*) # darwin 5.x on\n      # if running on 10.5 or later, the deployment target defaults\n      # to the OS version, if on x86, and 10.4, the deployment\n      # target defaults to 10.4. Don't you love it?\n      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n\t10.0,*86*-darwin8*|10.0,*-darwin[[91]]*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n\t10.[[012]]*)\n\t  _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n\t10.*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n      esac\n    ;;\n  esac\n    if test yes = \"$lt_cv_apple_cc_single_mod\"; then\n      _lt_dar_single_mod='$single_module'\n    fi\n    if test yes = \"$lt_cv_ld_exported_symbols_list\"; then\n      _lt_dar_export_syms=' $wl-exported_symbols_list,$output_objdir/$libname-symbols.expsym'\n    else\n      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/$libname-symbols.expsym $lib'\n    fi\n    if test : != \"$DSYMUTIL\" && test no = \"$lt_cv_ld_force_load\"; then\n      _lt_dsymutil='~$DSYMUTIL $lib || :'\n    else\n      _lt_dsymutil=\n    fi\n    ;;\n  esac\n])\n\n\n# _LT_DARWIN_LINKER_FEATURES([TAG])\n# ---------------------------------\n# Checks for linker and compiler features on darwin\nm4_defun([_LT_DARWIN_LINKER_FEATURES],\n[\n  m4_require([_LT_REQUIRED_DARWIN_CHECKS])\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_automatic, $1)=yes\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  if test yes = \"$lt_cv_ld_force_load\"; then\n    _LT_TAGVAR(whole_archive_flag_spec, $1)='`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience $wl-force_load,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"`'\n    m4_case([$1], [F77], [_LT_TAGVAR(compiler_needs_object, $1)=yes],\n                  [FC],  [_LT_TAGVAR(compiler_needs_object, $1)=yes])\n  else\n    _LT_TAGVAR(whole_archive_flag_spec, $1)=''\n  fi\n  _LT_TAGVAR(link_all_deplibs, $1)=yes\n  _LT_TAGVAR(allow_undefined_flag, $1)=$_lt_dar_allow_undefined\n  case $cc_basename in\n     ifort*|nagfor*) _lt_dar_can_shared=yes ;;\n     *) _lt_dar_can_shared=$GCC ;;\n  esac\n  if test yes = \"$_lt_dar_can_shared\"; then\n    output_verbose_link_cmd=func_echo_all\n    _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dsymutil\"\n    _LT_TAGVAR(module_cmds, $1)=\"\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dsymutil\"\n    _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dar_export_syms$_lt_dsymutil\"\n    _LT_TAGVAR(module_expsym_cmds, $1)=\"sed -e 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dar_export_syms$_lt_dsymutil\"\n    m4_if([$1], [CXX],\n[   if test yes != \"$lt_cv_apple_cc_single_mod\"; then\n      _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dsymutil\"\n      _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dar_export_syms$_lt_dsymutil\"\n    fi\n],[])\n  else\n  _LT_TAGVAR(ld_shlibs, $1)=no\n  fi\n])\n\n# _LT_SYS_MODULE_PATH_AIX([TAGNAME])\n# ----------------------------------\n# Links a minimal program and checks the executable\n# for the system default hardcoded library path. In most cases,\n# this is /usr/lib:/lib, but when the MPI compilers are used\n# the location of the communication and MPI libs are included too.\n# If we don't find anything, use the default library path according\n# to the aix ld manual.\n# Store the results from the different compilers for each TAGNAME.\n# Allow overriding them for all tags through lt_cv_aix_libpath.\nm4_defun([_LT_SYS_MODULE_PATH_AIX],\n[m4_require([_LT_DECL_SED])dnl\nif test set = \"${lt_cv_aix_libpath+set}\"; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  AC_CACHE_VAL([_LT_TAGVAR([lt_cv_aix_libpath_], [$1])],\n  [AC_LINK_IFELSE([AC_LANG_PROGRAM],[\n  lt_aix_libpath_sed='[\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }]'\n  _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi],[])\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=/usr/lib:/lib\n  fi\n  ])\n  aix_libpath=$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\nfi\n])# _LT_SYS_MODULE_PATH_AIX\n\n\n# _LT_SHELL_INIT(ARG)\n# -------------------\nm4_define([_LT_SHELL_INIT],\n[m4_divert_text([M4SH-INIT], [$1\n])])# _LT_SHELL_INIT\n\n\n\n# _LT_PROG_ECHO_BACKSLASH\n# -----------------------\n# Find how we can fake an echo command that does not interpret backslash.\n# In particular, with Autoconf 2.60 or later we add some code to the start\n# of the generated configure script that will find a shell with a builtin\n# printf (that we can use as an echo command).\nm4_defun([_LT_PROG_ECHO_BACKSLASH],\n[ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n\nAC_MSG_CHECKING([how to print strings])\n# Test print first, because it will be a builtin if present.\nif test \"X`( print -r -- -n ) 2>/dev/null`\" = X-n && \\\n   test \"X`print -r -- $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='print -r --'\nelif test \"X`printf %s $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='printf %s\\n'\nelse\n  # Use this function as a fallback that always works.\n  func_fallback_echo ()\n  {\n    eval 'cat <<_LTECHO_EOF\n$[]1\n_LTECHO_EOF'\n  }\n  ECHO='func_fallback_echo'\nfi\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\ncase $ECHO in\n  printf*) AC_MSG_RESULT([printf]) ;;\n  print*) AC_MSG_RESULT([print -r]) ;;\n  *) AC_MSG_RESULT([cat]) ;;\nesac\n\nm4_ifdef([_AS_DETECT_SUGGESTED],\n[_AS_DETECT_SUGGESTED([\n  test -n \"${ZSH_VERSION+set}${BASH_VERSION+set}\" || (\n    ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n    PATH=/empty FPATH=/empty; export PATH FPATH\n    test \"X`printf %s $ECHO`\" = \"X$ECHO\" \\\n      || test \"X`print -r -- $ECHO`\" = \"X$ECHO\" )])])\n\n_LT_DECL([], [SHELL], [1], [Shell to use when invoking shell scripts])\n_LT_DECL([], [ECHO], [1], [An echo program that protects backslashes])\n])# _LT_PROG_ECHO_BACKSLASH\n\n\n# _LT_WITH_SYSROOT\n# ----------------\nAC_DEFUN([_LT_WITH_SYSROOT],\n[AC_MSG_CHECKING([for sysroot])\nAC_ARG_WITH([sysroot],\n[AS_HELP_STRING([--with-sysroot@<:@=DIR@:>@],\n  [Search for dependent libraries within DIR (or the compiler's sysroot\n   if not specified).])],\n[], [with_sysroot=no])\n\ndnl lt_sysroot will always be passed unquoted.  We quote it here\ndnl in case the user passed a directory name.\nlt_sysroot=\ncase $with_sysroot in #(\n yes)\n   if test yes = \"$GCC\"; then\n     lt_sysroot=`$CC --print-sysroot 2>/dev/null`\n   fi\n   ;; #(\n /*)\n   lt_sysroot=`echo \"$with_sysroot\" | sed -e \"$sed_quote_subst\"`\n   ;; #(\n no|'')\n   ;; #(\n *)\n   AC_MSG_RESULT([$with_sysroot])\n   AC_MSG_ERROR([The sysroot must be an absolute path.])\n   ;;\nesac\n\n AC_MSG_RESULT([${lt_sysroot:-no}])\n_LT_DECL([], [lt_sysroot], [0], [The root where to search for ]dnl\n[dependent libraries, and where our libraries should be installed.])])\n\n# _LT_ENABLE_LOCK\n# ---------------\nm4_defun([_LT_ENABLE_LOCK],\n[AC_ARG_ENABLE([libtool-lock],\n  [AS_HELP_STRING([--disable-libtool-lock],\n    [avoid locking (might break parallel builds)])])\ntest no = \"$enable_libtool_lock\" || enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out what ABI is being produced by ac_compile, and set mode\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.$ac_objext` in\n      *ELF-32*)\n\tHPUX_IA64_MODE=32\n\t;;\n      *ELF-64*)\n\tHPUX_IA64_MODE=64\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    if test yes = \"$lt_cv_prog_gnu_ld\"; then\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -melf32bsmip\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -melf32bmipn32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -melf64bmip\"\n\t;;\n      esac\n    else\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -32\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -n32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -64\"\n\t  ;;\n      esac\n    fi\n  fi\n  rm -rf conftest*\n  ;;\n\nmips64*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    emul=elf\n    case `/usr/bin/file conftest.$ac_objext` in\n      *32-bit*)\n\temul=\"${emul}32\"\n\t;;\n      *64-bit*)\n\temul=\"${emul}64\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *MSB*)\n\temul=\"${emul}btsmip\"\n\t;;\n      *LSB*)\n\temul=\"${emul}ltsmip\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *N32*)\n\temul=\"${emul}n32\"\n\t;;\n    esac\n    LD=\"${LD-ld} -m $emul\"\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*kfreebsd*-gnu|x86_64-*linux*|powerpc*-*linux*| \\\ns390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.  Note that the listed cases only cover the\n  # situations where additional linker options are needed (such as when\n  # doing 32-bit compilation for a host where ld defaults to 64-bit, or\n  # vice versa); the common cases where no linker options are needed do\n  # not appear in the list.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n      *32-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_i386_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    case `/usr/bin/file conftest.o` in\n\t      *x86-64*)\n\t\tLD=\"${LD-ld} -m elf32_x86_64\"\n\t\t;;\n\t      *)\n\t\tLD=\"${LD-ld} -m elf_i386\"\n\t\t;;\n\t    esac\n\t    ;;\n\t  powerpc64le-*linux*)\n\t    LD=\"${LD-ld} -m elf32lppclinux\"\n\t    ;;\n\t  powerpc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32ppclinux\"\n\t    ;;\n\t  s390x-*linux*)\n\t    LD=\"${LD-ld} -m elf_s390\"\n\t    ;;\n\t  sparc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32_sparc\"\n\t    ;;\n\tesac\n\t;;\n      *64-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_x86_64_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_x86_64\"\n\t    ;;\n\t  powerpcle-*linux*)\n\t    LD=\"${LD-ld} -m elf64lppc\"\n\t    ;;\n\t  powerpc-*linux*)\n\t    LD=\"${LD-ld} -m elf64ppc\"\n\t    ;;\n\t  s390*-*linux*|s390*-*tpf*)\n\t    LD=\"${LD-ld} -m elf64_s390\"\n\t    ;;\n\t  sparc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64_sparc\"\n\t    ;;\n\tesac\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=$CFLAGS\n  CFLAGS=\"$CFLAGS -belf\"\n  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n    [AC_LANG_PUSH(C)\n     AC_LINK_IFELSE([AC_LANG_PROGRAM([[]],[[]])],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])\n     AC_LANG_POP])\n  if test yes != \"$lt_cv_cc_needs_belf\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=$SAVE_CFLAGS\n  fi\n  ;;\n*-*solaris*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n    *64-bit*)\n      case $lt_cv_prog_gnu_ld in\n      yes*)\n        case $host in\n        i?86-*-solaris*|x86_64-*-solaris*)\n          LD=\"${LD-ld} -m elf_x86_64\"\n          ;;\n        sparc*-*-solaris*)\n          LD=\"${LD-ld} -m elf64_sparc\"\n          ;;\n        esac\n        # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.\n        if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then\n          LD=${LD-ld}_sol2\n        fi\n        ;;\n      *)\n\tif ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then\n\t  LD=\"${LD-ld} -64\"\n\tfi\n\t;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\nesac\n\nneed_locks=$enable_libtool_lock\n])# _LT_ENABLE_LOCK\n\n\n# _LT_PROG_AR\n# -----------\nm4_defun([_LT_PROG_AR],\n[AC_CHECK_TOOLS(AR, [ar], false)\n: ${AR=ar}\n: ${AR_FLAGS=cru}\n_LT_DECL([], [AR], [1], [The archiver])\n_LT_DECL([], [AR_FLAGS], [1], [Flags to create an archive])\n\nAC_CACHE_CHECK([for archiver @FILE support], [lt_cv_ar_at_file],\n  [lt_cv_ar_at_file=no\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM],\n     [echo conftest.$ac_objext > conftest.lst\n      lt_ar_try='$AR $AR_FLAGS libconftest.a @conftest.lst >&AS_MESSAGE_LOG_FD'\n      AC_TRY_EVAL([lt_ar_try])\n      if test 0 -eq \"$ac_status\"; then\n\t# Ensure the archiver fails upon bogus file names.\n\trm -f conftest.$ac_objext libconftest.a\n\tAC_TRY_EVAL([lt_ar_try])\n\tif test 0 -ne \"$ac_status\"; then\n          lt_cv_ar_at_file=@\n        fi\n      fi\n      rm -f conftest.* libconftest.a\n     ])\n  ])\n\nif test no = \"$lt_cv_ar_at_file\"; then\n  archiver_list_spec=\nelse\n  archiver_list_spec=$lt_cv_ar_at_file\nfi\n_LT_DECL([], [archiver_list_spec], [1],\n  [How to feed a file listing to the archiver])\n])# _LT_PROG_AR\n\n\n# _LT_CMD_OLD_ARCHIVE\n# -------------------\nm4_defun([_LT_CMD_OLD_ARCHIVE],\n[_LT_PROG_AR\n\nAC_CHECK_TOOL(STRIP, strip, :)\ntest -z \"$STRIP\" && STRIP=:\n_LT_DECL([], [STRIP], [1], [A symbol stripping program])\n\nAC_CHECK_TOOL(RANLIB, ranlib, :)\ntest -z \"$RANLIB\" && RANLIB=:\n_LT_DECL([], [RANLIB], [1],\n    [Commands used to install an old-style archive])\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  bitrig* | openbsd*)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB -t \\$tool_oldlib\"\n    ;;\n  *)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB \\$tool_oldlib\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$tool_oldlib\"\nfi\n\ncase $host_os in\n  darwin*)\n    lock_old_archive_extraction=yes ;;\n  *)\n    lock_old_archive_extraction=no ;;\nesac\n_LT_DECL([], [old_postinstall_cmds], [2])\n_LT_DECL([], [old_postuninstall_cmds], [2])\n_LT_TAGDECL([], [old_archive_cmds], [2],\n    [Commands used to build an old-style archive])\n_LT_DECL([], [lock_old_archive_extraction], [0],\n    [Whether to use a lock for old archive extraction])\n])# _LT_CMD_OLD_ARCHIVE\n\n\n# _LT_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#\t\t[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([_LT_COMPILER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$3\"  ## exclude from sc_useless_quotes_in_assignment\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       $2=yes\n     fi\n   fi\n   $RM conftest*\n])\n\nif test yes = \"[$]$2\"; then\n    m4_if([$5], , :, [$5])\nelse\n    m4_if([$6], , :, [$6])\nfi\n])# _LT_COMPILER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_COMPILER_OPTION], [_LT_COMPILER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [])\n\n\n# _LT_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#                  [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------\n# Check whether the given linker option works\nAC_DEFUN([_LT_LINKER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   save_LDFLAGS=$LDFLAGS\n   LDFLAGS=\"$LDFLAGS $3\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&AS_MESSAGE_LOG_FD\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         $2=yes\n       fi\n     else\n       $2=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=$save_LDFLAGS\n])\n\nif test yes = \"[$]$2\"; then\n    m4_if([$4], , :, [$4])\nelse\n    m4_if([$5], , :, [$5])\nfi\n])# _LT_LINKER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_LINKER_OPTION], [_LT_LINKER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [])\n\n\n# LT_CMD_MAX_LEN\n#---------------\nAC_DEFUN([LT_CMD_MAX_LEN],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n# find the maximum length of command line arguments\nAC_MSG_CHECKING([the maximum length of command line arguments])\nAC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl\n  i=0\n  teststring=ABCD\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw* | cegcc*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  mint*)\n    # On MiNT this can take a long time and run out of memory.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  bitrig* | darwin* | dragonfly* | freebsd* | netbsd* | openbsd*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536\t# usable default for all BSDs\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n\n  interix*)\n    # We know the value 262144 and hardcode it with a safety zone (like BSD)\n    lt_cv_sys_max_cmd_len=196608\n    ;;\n\n  os2*)\n    # The test takes a long time on OS/2.\n    lt_cv_sys_max_cmd_len=8192\n    ;;\n\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    #\n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  sco3.2v5*)\n    lt_cv_sys_max_cmd_len=102400\n    ;;\n  sysv5* | sco5v6* | sysv4.2uw2*)\n    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`\n    if test -n \"$kargmax\"; then\n      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[\t ]]//'`\n    else\n      lt_cv_sys_max_cmd_len=32768\n    fi\n    ;;\n  *)\n    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`\n    if test -n \"$lt_cv_sys_max_cmd_len\" && \\\n       test undefined != \"$lt_cv_sys_max_cmd_len\"; then\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    else\n      # Make teststring a little bigger before we do anything with it.\n      # a 1K string should be a reasonable start.\n      for i in 1 2 3 4 5 6 7 8; do\n        teststring=$teststring$teststring\n      done\n      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n      # If test is not a shell built-in, we'll probably end up computing a\n      # maximum length that is only half of the actual maximum length, but\n      # we can't tell.\n      while { test X`env echo \"$teststring$teststring\" 2>/dev/null` \\\n\t         = \"X$teststring$teststring\"; } >/dev/null 2>&1 &&\n\t      test 17 != \"$i\" # 1/2 MB should be enough\n      do\n        i=`expr $i + 1`\n        teststring=$teststring$teststring\n      done\n      # Only check the string length outside the loop.\n      lt_cv_sys_max_cmd_len=`expr \"X$teststring\" : \".*\" 2>&1`\n      teststring=\n      # Add a significant safety factor because C++ compilers can tack on\n      # massive amounts of additional arguments before passing them to the\n      # linker.  It appears as though 1/2 is a usable value.\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    fi\n    ;;\n  esac\n])\nif test -n \"$lt_cv_sys_max_cmd_len\"; then\n  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)\nelse\n  AC_MSG_RESULT(none)\nfi\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n_LT_DECL([], [max_cmd_len], [0],\n    [What is the maximum length of a command?])\n])# LT_CMD_MAX_LEN\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_SYS_MAX_CMD_LEN], [LT_CMD_MAX_LEN])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [])\n\n\n# _LT_HEADER_DLFCN\n# ----------------\nm4_defun([_LT_HEADER_DLFCN],\n[AC_CHECK_HEADERS([dlfcn.h], [], [], [AC_INCLUDES_DEFAULT])dnl\n])# _LT_HEADER_DLFCN\n\n\n# _LT_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,\n#                      ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)\n# ----------------------------------------------------------------\nm4_defun([_LT_TRY_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test yes = \"$cross_compiling\"; then :\n  [$4]\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<_LT_EOF\n[#line $LINENO \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n/* When -fvisbility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nint fnord () __attribute__((visibility(\"default\")));\n#endif\n\nint fnord () { return 42; }\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else\n        {\n\t  if (dlsym( self,\"_fnord\"))  status = $lt_dlneed_uscore;\n          else puts (dlerror ());\n\t}\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n  return status;\n}]\n_LT_EOF\n  if AC_TRY_EVAL(ac_link) && test -s \"conftest$ac_exeext\" 2>/dev/null; then\n    (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) $1 ;;\n      x$lt_dlneed_uscore) $2 ;;\n      x$lt_dlunknown|x*) $3 ;;\n    esac\n  else :\n    # compilation failed\n    $3\n  fi\nfi\nrm -fr conftest*\n])# _LT_TRY_DLOPEN_SELF\n\n\n# LT_SYS_DLOPEN_SELF\n# ------------------\nAC_DEFUN([LT_SYS_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test yes != \"$enable_dlopen\"; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=load_add_on\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32* | cegcc*)\n    lt_cv_dlopen=LoadLibrary\n    lt_cv_dlopen_libs=\n    ;;\n\n  cygwin*)\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    ;;\n\n  darwin*)\n    # if libdl is installed we need to link against it\n    AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],[\n    lt_cv_dlopen=dyld\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ])\n    ;;\n\n  tpf*)\n    # Don't try to run any link tests for TPF.  We know it's impossible\n    # because TPF is a cross-compiler, and we know how we open DSOs.\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=no\n    ;;\n\n  *)\n    AC_CHECK_FUNC([shl_load],\n\t  [lt_cv_dlopen=shl_load],\n      [AC_CHECK_LIB([dld], [shl_load],\n\t    [lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld],\n\t[AC_CHECK_FUNC([dlopen],\n\t      [lt_cv_dlopen=dlopen],\n\t  [AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],\n\t    [AC_CHECK_LIB([svld], [dlopen],\n\t\t  [lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld],\n\t      [AC_CHECK_LIB([dld], [dld_link],\n\t\t    [lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld])\n\t      ])\n\t    ])\n\t  ])\n\t])\n      ])\n    ;;\n  esac\n\n  if test no = \"$lt_cv_dlopen\"; then\n    enable_dlopen=no\n  else\n    enable_dlopen=yes\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=$CPPFLAGS\n    test yes = \"$ac_cv_header_dlfcn_h\" && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=$LDFLAGS\n    wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=$LIBS\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    AC_CACHE_CHECK([whether a program can dlopen itself],\n\t  lt_cv_dlopen_self, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,\n\t    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)\n    ])\n\n    if test yes = \"$lt_cv_dlopen_self\"; then\n      wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $lt_prog_compiler_static\\\"\n      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],\n\t  lt_cv_dlopen_self_static, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,\n\t    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)\n      ])\n    fi\n\n    CPPFLAGS=$save_CPPFLAGS\n    LDFLAGS=$save_LDFLAGS\n    LIBS=$save_LIBS\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n_LT_DECL([dlopen_support], [enable_dlopen], [0],\n\t [Whether dlopen is supported])\n_LT_DECL([dlopen_self], [enable_dlopen_self], [0],\n\t [Whether dlopen of programs is supported])\n_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],\n\t [Whether dlopen of statically linked programs is supported])\n])# LT_SYS_DLOPEN_SELF\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [])\n\n\n# _LT_COMPILER_C_O([TAGNAME])\n# ---------------------------\n# Check to see if options -c and -o are simultaneously supported by compiler.\n# This macro does not hard code the compiler like AC_PROG_CC_C_O.\nm4_defun([_LT_COMPILER_C_O],\n[m4_require([_LT_DECL_SED])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       _LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n     fi\n   fi\n   chmod u+w . 2>&AS_MESSAGE_LOG_FD\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n])\n_LT_TAGDECL([compiler_c_o], [lt_cv_prog_compiler_c_o], [1],\n\t[Does compiler simultaneously support -c and -o options?])\n])# _LT_COMPILER_C_O\n\n\n# _LT_COMPILER_FILE_LOCKS([TAGNAME])\n# ----------------------------------\n# Check to see if we can do hard links to lock some files if needed\nm4_defun([_LT_COMPILER_FILE_LOCKS],\n[m4_require([_LT_ENABLE_LOCK])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_COMPILER_C_O([$1])\n\nhard_links=nottested\nif test no = \"$_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)\" && test no != \"$need_locks\"; then\n  # do not overwrite the value of need_locks provided by the user\n  AC_MSG_CHECKING([if we can lock with hard links])\n  hard_links=yes\n  $RM conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  AC_MSG_RESULT([$hard_links])\n  if test no = \"$hard_links\"; then\n    AC_MSG_WARN(['$CC' does not support '-c -o', so 'make -j' may be unsafe])\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n_LT_DECL([], [need_locks], [1], [Must we lock files when doing compilation?])\n])# _LT_COMPILER_FILE_LOCKS\n\n\n# _LT_CHECK_OBJDIR\n# ----------------\nm4_defun([_LT_CHECK_OBJDIR],\n[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],\n[rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null])\nobjdir=$lt_cv_objdir\n_LT_DECL([], [objdir], [0],\n         [The name of the directory that contains temporary libtool files])dnl\nm4_pattern_allow([LT_OBJDIR])dnl\nAC_DEFINE_UNQUOTED([LT_OBJDIR], \"$lt_cv_objdir/\",\n  [Define to the sub-directory where libtool stores uninstalled libraries.])\n])# _LT_CHECK_OBJDIR\n\n\n# _LT_LINKER_HARDCODE_LIBPATH([TAGNAME])\n# --------------------------------------\n# Check hardcoding attributes.\nm4_defun([_LT_LINKER_HARDCODE_LIBPATH],\n[AC_MSG_CHECKING([how to hardcode library paths into programs])\n_LT_TAGVAR(hardcode_action, $1)=\nif test -n \"$_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\" ||\n   test -n \"$_LT_TAGVAR(runpath_var, $1)\" ||\n   test yes = \"$_LT_TAGVAR(hardcode_automatic, $1)\"; then\n\n  # We can hardcode non-existent directories.\n  if test no != \"$_LT_TAGVAR(hardcode_direct, $1)\" &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test no != \"$_LT_TAGVAR(hardcode_shlibpath_var, $1)\" &&\n     test no != \"$_LT_TAGVAR(hardcode_minus_L, $1)\"; then\n    # Linking always hardcodes the temporary library directory.\n    _LT_TAGVAR(hardcode_action, $1)=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    _LT_TAGVAR(hardcode_action, $1)=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  _LT_TAGVAR(hardcode_action, $1)=unsupported\nfi\nAC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, $1)])\n\nif test relink = \"$_LT_TAGVAR(hardcode_action, $1)\" ||\n   test yes = \"$_LT_TAGVAR(inherit_rpath, $1)\"; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test yes = \"$shlibpath_overrides_runpath\" ||\n     test no = \"$enable_shared\"; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n_LT_TAGDECL([], [hardcode_action], [0],\n    [How to hardcode a shared library path into an executable])\n])# _LT_LINKER_HARDCODE_LIBPATH\n\n\n# _LT_CMD_STRIPLIB\n# ----------------\nm4_defun([_LT_CMD_STRIPLIB],\n[m4_require([_LT_DECL_EGREP])\nstriplib=\nold_striplib=\nAC_MSG_CHECKING([whether stripping libraries is possible])\nif test -n \"$STRIP\" && $STRIP -V 2>&1 | $GREP \"GNU strip\" >/dev/null; then\n  test -z \"$old_striplib\" && old_striplib=\"$STRIP --strip-debug\"\n  test -z \"$striplib\" && striplib=\"$STRIP --strip-unneeded\"\n  AC_MSG_RESULT([yes])\nelse\n# FIXME - insert some real tests, host_os isn't really good enough\n  case $host_os in\n  darwin*)\n    if test -n \"$STRIP\"; then\n      striplib=\"$STRIP -x\"\n      old_striplib=\"$STRIP -S\"\n      AC_MSG_RESULT([yes])\n    else\n      AC_MSG_RESULT([no])\n    fi\n    ;;\n  *)\n    AC_MSG_RESULT([no])\n    ;;\n  esac\nfi\n_LT_DECL([], [old_striplib], [1], [Commands to strip libraries])\n_LT_DECL([], [striplib], [1])\n])# _LT_CMD_STRIPLIB\n\n\n# _LT_SYS_DYNAMIC_LINKER([TAG])\n# -----------------------------\n# PORTME Fill in your ld.so characteristics\nm4_defun([_LT_SYS_DYNAMIC_LINKER],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_OBJDUMP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nAC_MSG_CHECKING([dynamic linker characteristics])\nm4_if([$1],\n\t[], [\nif test yes = \"$GCC\"; then\n  case $host_os in\n    darwin*) lt_awk_arg='/^libraries:/,/LR/' ;;\n    *) lt_awk_arg='/^libraries:/' ;;\n  esac\n  case $host_os in\n    mingw* | cegcc*) lt_sed_strip_eq='s|=\\([[A-Za-z]]:\\)|\\1|g' ;;\n    *) lt_sed_strip_eq='s|=/|/|g' ;;\n  esac\n  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e \"s/^libraries://\" -e $lt_sed_strip_eq`\n  case $lt_search_path_spec in\n  *\\;*)\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED 's/;/ /g'`\n    ;;\n  *)\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED \"s/$PATH_SEPARATOR/ /g\"`\n    ;;\n  esac\n  # Ok, now we have the path, separated by spaces, we can step through it\n  # and add multilib dir if necessary...\n  lt_tmp_lt_search_path_spec=\n  lt_multi_os_dir=/`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`\n  # ...but if some path component already ends with the multilib dir we assume\n  # that all is fine and trust -print-search-dirs as is (GCC 4.2? or newer).\n  case \"$lt_multi_os_dir; $lt_search_path_spec \" in\n  \"/; \"* | \"/.; \"* | \"/./; \"* | *\"$lt_multi_os_dir \"* | *\"$lt_multi_os_dir/ \"*)\n    lt_multi_os_dir=\n    ;;\n  esac\n  for lt_sys_path in $lt_search_path_spec; do\n    if test -d \"$lt_sys_path$lt_multi_os_dir\"; then\n      lt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path$lt_multi_os_dir\"\n    elif test -n \"$lt_multi_os_dir\"; then\n      test -d \"$lt_sys_path\" && \\\n\tlt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path\"\n    fi\n  done\n  lt_search_path_spec=`$ECHO \"$lt_tmp_lt_search_path_spec\" | awk '\nBEGIN {RS = \" \"; FS = \"/|\\n\";} {\n  lt_foo = \"\";\n  lt_count = 0;\n  for (lt_i = NF; lt_i > 0; lt_i--) {\n    if ($lt_i != \"\" && $lt_i != \".\") {\n      if ($lt_i == \"..\") {\n        lt_count++;\n      } else {\n        if (lt_count == 0) {\n          lt_foo = \"/\" $lt_i lt_foo;\n        } else {\n          lt_count--;\n        }\n      }\n    }\n  }\n  if (lt_foo != \"\") { lt_freq[[lt_foo]]++; }\n  if (lt_freq[[lt_foo]] == 1) { print lt_foo; }\n}'`\n  # AWK program above erroneously prepends '/' to C:/dos/paths\n  # for these hosts.\n  case $host_os in\n    mingw* | cegcc*) lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" |\\\n      $SED 's|/\\([[A-Za-z]]:\\)|\\1|g'` ;;\n  esac\n  sys_lib_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $lt_NL2SP`\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi])\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=.so\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\ncase $host_os in\naix3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='$libname$release$shared_ext$major'\n  ;;\n\naix[[4-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test ia64 = \"$host_cpu\"; then\n    # AIX 5 supports IA64\n    library_names_spec='$libname$release$shared_ext$major $libname$release$shared_ext$versuffix $libname$shared_ext'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line '#! .'.  This would cause the generated library to\n    # depend on '.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[[01]] | aix4.[[01]].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | $CC -E - | $GREP yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # AIX (on Power*) has no versioning support, so currently we cannot hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    if test yes = \"$aix_use_runtimelinking\"; then\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    else\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n    fi\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  case $host_cpu in\n  powerpc)\n    # Since July 2007 AmigaOS4 officially supports .so libraries.\n    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    ;;\n  m68k)\n    library_names_spec='$libname.ixlibrary $libname.a'\n    # Create ${libname}_ixlibrary.a entries in /sys/libs.\n    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all \"$lib\" | $SED '\\''s%^.*/\\([[^/]]*\\)\\.ixlibrary$%\\1%'\\''`; $RM /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n    ;;\n  esac\n  ;;\n\nbeos*)\n  library_names_spec='$libname$shared_ext'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[[45]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32* | cegcc*)\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$cc_basename in\n  yes,*)\n    # gcc\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname~\n      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n      fi'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo $libname | sed -e 's/^lib/cyg/'``echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\nm4_if([$1], [],[\n      sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/lib/w32api\"])\n      ;;\n    mingw* | cegcc*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo $libname | sed -e 's/^lib/pw/'``echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n      ;;\n    esac\n    dynamic_linker='Win32 ld.exe'\n    ;;\n\n  *,cl*)\n    # Native MSVC\n    libname_spec='$name'\n    soname_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n    library_names_spec='$libname.dll.lib'\n\n    case $build_os in\n    mingw*)\n      sys_lib_search_path_spec=\n      lt_save_ifs=$IFS\n      IFS=';'\n      for lt_path in $LIB\n      do\n        IFS=$lt_save_ifs\n        # Let DOS variable expansion print the short 8.3 style file name.\n        lt_path=`cd \"$lt_path\" 2>/dev/null && cmd //C \"for %i in (\".\") do @echo %~si\"`\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec $lt_path\"\n      done\n      IFS=$lt_save_ifs\n      # Convert to MSYS style.\n      sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | sed -e 's|\\\\\\\\|/|g' -e 's| \\\\([[a-zA-Z]]\\\\):| /\\\\1|g' -e 's|^ ||'`\n      ;;\n    cygwin*)\n      # Convert to unix form, then to dos form, then back to unix form\n      # but this time dos style (no spaces!) so that the unix form looks\n      # like /cygdrive/c/PROGRA~1:/cygdr...\n      sys_lib_search_path_spec=`cygpath --path --unix \"$LIB\"`\n      sys_lib_search_path_spec=`cygpath --path --dos \"$sys_lib_search_path_spec\" 2>/dev/null`\n      sys_lib_search_path_spec=`cygpath --path --unix \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      ;;\n    *)\n      sys_lib_search_path_spec=$LIB\n      if $ECHO \"$sys_lib_search_path_spec\" | [$GREP ';[c-zC-Z]:/' >/dev/null]; then\n        # It is most probably a Windows format PATH.\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      # FIXME: find the short name or the path components, as spaces are\n      # common. (e.g. \"Program Files\" -> \"PROGRA~1\")\n      ;;\n    esac\n\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n    dynamic_linker='Win32 link.exe'\n    ;;\n\n  *)\n    # Assume MSVC wrapper\n    library_names_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext $libname.lib'\n    dynamic_linker='Win32 ld.exe'\n    ;;\n  esac\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$major$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$major$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\nm4_if([$1], [],[\n  sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/local/lib\"])\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[[23]].*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext $libname$shared_ext'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2.*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[[01]]* | freebsdelf3.[[01]]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[[2-9]]* | freebsdelf3.[[2-9]]* | \\\n  freebsd4.[[0-5]] | freebsdelf4.[[0-5]] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  *) # from 4.6 on, and DragonFly\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\nhaiku*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  dynamic_linker=\"$host_os runtime_loader\"\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    if test 32 = \"$HPUX_IA64_MODE\"; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n    fi\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  hppa*64*)\n    shrext_cmds='.sl'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...\n  postinstall_cmds='chmod 555 $lib'\n  # or fails outright, so override atomically:\n  install_override_mode=555\n  ;;\n\ninterix[[3-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test yes = \"$lt_cv_prog_gnu_ld\"; then\n\t\tversion_type=linux # correct to gnu/linux during the next big refactor\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$release$shared_ext $libname$shared_ext'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib$libsuff /lib$libsuff /usr/local/lib$libsuff\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib$libsuff /lib$libsuff\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\nlinux*android*)\n  version_type=none # Android doesn't support versioned libraries.\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext'\n  soname_spec='$libname$release$shared_ext'\n  finish_cmds=\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  dynamic_linker='Android linker'\n  # Don't embed -rpath directories since the linker doesn't support them.\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n\n  # Some binutils ld are patched to set DT_RUNPATH\n  AC_CACHE_VAL([lt_cv_shlibpath_overrides_runpath],\n    [lt_cv_shlibpath_overrides_runpath=no\n    save_LDFLAGS=$LDFLAGS\n    save_libdir=$libdir\n    eval \"libdir=/foo; wl=\\\"$_LT_TAGVAR(lt_prog_compiler_wl, $1)\\\"; \\\n\t LDFLAGS=\\\"\\$LDFLAGS $_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\\\"\"\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n      [AS_IF([ ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep \"RUNPATH.*$libdir\" >/dev/null],\n\t [lt_cv_shlibpath_overrides_runpath=yes])])\n    LDFLAGS=$save_LDFLAGS\n    libdir=$save_libdir\n    ])\n  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Append ld.so.conf contents to the search path\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/\"//g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\n*nto* | *qnx*)\n  version_type=qnx\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='ldqnx.so'\n  ;;\n\nopenbsd* | bitrig*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=/usr/lib\n  need_lib_prefix=no\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    need_version=no\n  else\n    need_version=yes\n  fi\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nos2*)\n  libname_spec='$name'\n  shrext_cmds=.dll\n  need_lib_prefix=no\n  library_names_spec='$libname$shared_ext $libname.a'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=LIBPATH\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  ;;\n\nrdos*)\n  dynamic_linker=no\n  ;;\n\nsolaris*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test yes = \"$with_gnu_ld\"; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec; then\n    version_type=linux # correct to gnu/linux during the next big refactor\n    library_names_spec='$libname$shared_ext.$versuffix $libname$shared_ext.$major $libname$shared_ext'\n    soname_spec='$libname$shared_ext.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=freebsd-elf\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  if test yes = \"$with_gnu_ld\"; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\ntpf*)\n  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nuts4*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\nAC_MSG_RESULT([$dynamic_linker])\ntest no = \"$dynamic_linker\" && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test yes = \"$GCC\"; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\nif test set = \"${lt_cv_sys_lib_search_path_spec+set}\"; then\n  sys_lib_search_path_spec=$lt_cv_sys_lib_search_path_spec\nfi\nif test set = \"${lt_cv_sys_lib_dlsearch_path_spec+set}\"; then\n  sys_lib_dlsearch_path_spec=$lt_cv_sys_lib_dlsearch_path_spec\nfi\n\n_LT_DECL([], [variables_saved_for_relink], [1],\n    [Variables whose values should be saved in libtool wrapper scripts and\n    restored at link time])\n_LT_DECL([], [need_lib_prefix], [0],\n    [Do we need the \"lib\" prefix for modules?])\n_LT_DECL([], [need_version], [0], [Do we need a version for libraries?])\n_LT_DECL([], [version_type], [0], [Library versioning type])\n_LT_DECL([], [runpath_var], [0],  [Shared library runtime path variable])\n_LT_DECL([], [shlibpath_var], [0],[Shared library path variable])\n_LT_DECL([], [shlibpath_overrides_runpath], [0],\n    [Is shlibpath searched before the hard-coded library search path?])\n_LT_DECL([], [libname_spec], [1], [Format of library name prefix])\n_LT_DECL([], [library_names_spec], [1],\n    [[List of archive names.  First name is the real one, the rest are links.\n    The last name is the one that the linker finds with -lNAME]])\n_LT_DECL([], [soname_spec], [1],\n    [[The coded name of the library, if different from the real name]])\n_LT_DECL([], [install_override_mode], [1],\n    [Permission mode override for installation of shared libraries])\n_LT_DECL([], [postinstall_cmds], [2],\n    [Command to use after installation of a shared archive])\n_LT_DECL([], [postuninstall_cmds], [2],\n    [Command to use after uninstallation of a shared archive])\n_LT_DECL([], [finish_cmds], [2],\n    [Commands used to finish a libtool library installation in a directory])\n_LT_DECL([], [finish_eval], [1],\n    [[As \"finish_cmds\", except a single script fragment to be evaled but\n    not shown]])\n_LT_DECL([], [hardcode_into_libs], [0],\n    [Whether we should hardcode library paths into libraries])\n_LT_DECL([], [sys_lib_search_path_spec], [2],\n    [Compile-time system search path for libraries])\n_LT_DECL([], [sys_lib_dlsearch_path_spec], [2],\n    [Run-time system search path for libraries])\n])# _LT_SYS_DYNAMIC_LINKER\n\n\n# _LT_PATH_TOOL_PREFIX(TOOL)\n# --------------------------\n# find a file program that can recognize shared library\nAC_DEFUN([_LT_PATH_TOOL_PREFIX],\n[m4_require([_LT_DECL_EGREP])dnl\nAC_MSG_CHECKING([for $1])\nAC_CACHE_VAL(lt_cv_path_MAGIC_CMD,\n[case $MAGIC_CMD in\n[[\\\\/*] |  ?:[\\\\/]*])\n  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=$MAGIC_CMD\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\ndnl $ac_dummy forces splitting on constant user-supplied paths.\ndnl POSIX.2 word splitting is done only on the output of word expansions,\ndnl not every word.  This closes a longstanding sh security hole.\n  ac_dummy=\"m4_if([$2], , $PATH, [$2])\"\n  for ac_dir in $ac_dummy; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$1\"; then\n      lt_cv_path_MAGIC_CMD=$ac_dir/\"$1\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=$lt_cv_path_MAGIC_CMD\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<_LT_EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\n_LT_EOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=$lt_save_ifs\n  MAGIC_CMD=$lt_save_MAGIC_CMD\n  ;;\nesac])\nMAGIC_CMD=$lt_cv_path_MAGIC_CMD\nif test -n \"$MAGIC_CMD\"; then\n  AC_MSG_RESULT($MAGIC_CMD)\nelse\n  AC_MSG_RESULT(no)\nfi\n_LT_DECL([], [MAGIC_CMD], [0],\n\t [Used to examine libraries when file_magic_cmd begins with \"file\"])dnl\n])# _LT_PATH_TOOL_PREFIX\n\n# Old name:\nAU_ALIAS([AC_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PATH_TOOL_PREFIX], [])\n\n\n# _LT_PATH_MAGIC\n# --------------\n# find a file program that can recognize a shared library\nm4_defun([_LT_PATH_MAGIC],\n[_LT_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    _LT_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)\n  else\n    MAGIC_CMD=:\n  fi\nfi\n])# _LT_PATH_MAGIC\n\n\n# LT_PATH_LD\n# ----------\n# find the pathname to the GNU or non-GNU linker\nAC_DEFUN([LT_PATH_LD],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PROG_ECHO_BACKSLASH])dnl\n\nAC_ARG_WITH([gnu-ld],\n    [AS_HELP_STRING([--with-gnu-ld],\n\t[assume the C compiler uses GNU ld @<:@default=no@:>@])],\n    [test no = \"$withval\" || with_gnu_ld=yes],\n    [with_gnu_ld=no])dnl\n\nac_prog=ld\nif test yes = \"$GCC\"; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  AC_MSG_CHECKING([for ld used by $CC])\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return, which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [[\\\\/]]* | ?:[[\\\\/]]*)\n      re_direlt='/[[^/]][[^/]]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=$ac_prog\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test yes = \"$with_gnu_ld\"; then\n  AC_MSG_CHECKING([for GNU ld])\nelse\n  AC_MSG_CHECKING([for non-GNU ld])\nfi\nAC_CACHE_VAL(lt_cv_path_LD,\n[if test -z \"$LD\"; then\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=$ac_dir/$ac_prog\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest no != \"$with_gnu_ld\" && break\n\t;;\n      *)\n\ttest yes != \"$with_gnu_ld\" && break\n\t;;\n      esac\n    fi\n  done\n  IFS=$lt_save_ifs\nelse\n  lt_cv_path_LD=$LD # Let the user override the test with a path.\nfi])\nLD=$lt_cv_path_LD\nif test -n \"$LD\"; then\n  AC_MSG_RESULT($LD)\nelse\n  AC_MSG_RESULT(no)\nfi\ntest -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\n_LT_PATH_LD_GNU\nAC_SUBST([LD])\n\n_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])\n])# LT_PATH_LD\n\n# Old names:\nAU_ALIAS([AM_PROG_LD], [LT_PATH_LD])\nAU_ALIAS([AC_PROG_LD], [LT_PATH_LD])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_LD], [])\ndnl AC_DEFUN([AC_PROG_LD], [])\n\n\n# _LT_PATH_LD_GNU\n#- --------------\nm4_defun([_LT_PATH_LD_GNU],\n[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,\n[# I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac])\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n])# _LT_PATH_LD_GNU\n\n\n# _LT_CMD_RELOAD\n# --------------\n# find reload flag for linker\n#   -- PORTME Some linkers may need a different reload flag.\nm4_defun([_LT_CMD_RELOAD],\n[AC_CACHE_CHECK([for $LD option to reload object files],\n  lt_cv_ld_reload_flag,\n  [lt_cv_ld_reload_flag='-r'])\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    if test yes != \"$GCC\"; then\n      reload_cmds=false\n    fi\n    ;;\n  darwin*)\n    if test yes = \"$GCC\"; then\n      reload_cmds='$LTCC $LTCFLAGS -nostdlib $wl-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n_LT_TAGDECL([], [reload_flag], [1], [How to create reloadable object files])dnl\n_LT_TAGDECL([], [reload_cmds], [2])dnl\n])# _LT_CMD_RELOAD\n\n\n# _LT_CHECK_MAGIC_METHOD\n# ----------------------\n# how to check for library dependencies\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_MAGIC_METHOD],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nAC_CACHE_CHECK([how to recognize dependent libraries],\nlt_cv_deplibs_check_method,\n[lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# 'unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# that responds to the $file_magic_cmd with a given extended regex.\n# If you have 'file' or equivalent on your system and you're not sure\n# whether 'pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix[[4-9]]*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[[45]]*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump',\n  # unless we find 'file', for example because we are cross-compiling.\n  if ( file / ) >/dev/null 2>&1; then\n    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n    lt_cv_file_magic_cmd='func_win32_libid'\n  else\n    # Keep this pattern in sync with the one in func_win32_libid.\n    lt_cv_deplibs_check_method='file_magic file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)'\n    lt_cv_file_magic_cmd='$OBJDUMP -f'\n  fi\n  ;;\n\ncegcc*)\n  # use the weaker test based on 'objdump'. See mingw*.\n  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | dragonfly*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\nhaiku*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case $host_cpu in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF[ -][0-9][0-9])(-bit)?( [LM]SB)? shared object( file)?[, -]* PA-RISC [0-9]\\.[0-9]']\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]]\\.[[0-9]]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\ninterix[[3-9]]*)\n  # PIC code is broken on Interix 3.x, that's why |\\.a not |_pic\\.a here\n  lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|\\.a)$'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\n*nto* | *qnx*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nopenbsd* | bitrig*)\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nrdos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.3*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  pc)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\ntpf*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n])\n\nfile_magic_glob=\nwant_nocaseglob=no\nif test \"$build\" = \"$host\"; then\n  case $host_os in\n  mingw* | pw32*)\n    if ( shopt | grep nocaseglob ) >/dev/null 2>&1; then\n      want_nocaseglob=yes\n    else\n      file_magic_glob=`echo aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ | $SED -e \"s/\\(..\\)/s\\/[[\\1]]\\/[[\\1]]\\/g;/g\"`\n    fi\n    ;;\n  esac\nfi\n\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n\n_LT_DECL([], [deplibs_check_method], [1],\n    [Method to check whether dependent libraries are shared objects])\n_LT_DECL([], [file_magic_cmd], [1],\n    [Command to use when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [file_magic_glob], [1],\n    [How to find potential files when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [want_nocaseglob], [1],\n    [Find potential files using nocaseglob when deplibs_check_method = \"file_magic\"])\n])# _LT_CHECK_MAGIC_METHOD\n\n\n# LT_PATH_NM\n# ----------\n# find the pathname to a BSD- or MS-compatible name lister\nAC_DEFUN([LT_PATH_NM],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,\n[if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=$NM\nelse\n  lt_nm_to_check=${ac_tool_prefix}nm\n  if test -n \"$ac_tool_prefix\" && test \"$build\" = \"$host\"; then\n    lt_nm_to_check=\"$lt_nm_to_check nm\"\n  fi\n  for lt_tmp_nm in $lt_nm_to_check; do\n    lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do\n      IFS=$lt_save_ifs\n      test -z \"$ac_dir\" && ac_dir=.\n      tmp_nm=$ac_dir/$lt_tmp_nm\n      if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\"; then\n\t# Check to see if the nm accepts a BSD-compat flag.\n\t# Adding the 'sed 1q' prevents false positives on HP-UX, which says:\n\t#   nm: unknown option \"B\" ignored\n\t# Tru64's nm complains that /dev/null is an invalid object file\n\tcase `\"$tmp_nm\" -B /dev/null 2>&1 | sed '1q'` in\n\t*/dev/null* | *'Invalid file or object type'*)\n\t  lt_cv_path_NM=\"$tmp_nm -B\"\n\t  break 2\n\t  ;;\n\t*)\n\t  case `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t  */dev/null*)\n\t    lt_cv_path_NM=\"$tmp_nm -p\"\n\t    break 2\n\t    ;;\n\t  *)\n\t    lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t    continue # so that we can try to find one that supports BSD flags\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n      fi\n    done\n    IFS=$lt_save_ifs\n  done\n  : ${lt_cv_path_NM=no}\nfi])\nif test no != \"$lt_cv_path_NM\"; then\n  NM=$lt_cv_path_NM\nelse\n  # Didn't find any BSD compatible name lister, look for dumpbin.\n  if test -n \"$DUMPBIN\"; then :\n    # Let the user override the test.\n  else\n    AC_CHECK_TOOLS(DUMPBIN, [dumpbin \"link -dump\"], :)\n    case `$DUMPBIN -symbols -headers /dev/null 2>&1 | sed '1q'` in\n    *COFF*)\n      DUMPBIN=\"$DUMPBIN -symbols -headers\"\n      ;;\n    *)\n      DUMPBIN=:\n      ;;\n    esac\n  fi\n  AC_SUBST([DUMPBIN])\n  if test : != \"$DUMPBIN\"; then\n    NM=$DUMPBIN\n  fi\nfi\ntest -z \"$NM\" && NM=nm\nAC_SUBST([NM])\n_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl\n\nAC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],\n  [lt_cv_nm_interface=\"BSD nm\"\n  echo \"int some_variable = 0;\" > conftest.$ac_ext\n  (eval echo \"\\\"\\$as_me:$LINENO: $ac_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$ac_compile\" 2>conftest.err)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: output\\\"\" >&AS_MESSAGE_LOG_FD)\n  cat conftest.out >&AS_MESSAGE_LOG_FD\n  if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n    lt_cv_nm_interface=\"MS dumpbin\"\n  fi\n  rm -f conftest*])\n])# LT_PATH_NM\n\n# Old names:\nAU_ALIAS([AM_PROG_NM], [LT_PATH_NM])\nAU_ALIAS([AC_PROG_NM], [LT_PATH_NM])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_NM], [])\ndnl AC_DEFUN([AC_PROG_NM], [])\n\n# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n# --------------------------------\n# how to determine the name of the shared library\n# associated with a specific link library.\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_SHAREDLIB_FROM_LINKLIB],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nm4_require([_LT_DECL_DLLTOOL])\nAC_CACHE_CHECK([how to associate runtime and link libraries],\nlt_cv_sharedlib_from_linklib_cmd,\n[lt_cv_sharedlib_from_linklib_cmd='unknown'\n\ncase $host_os in\ncygwin* | mingw* | pw32* | cegcc*)\n  # two different shell functions defined in ltmain.sh;\n  # decide which one to use based on capabilities of $DLLTOOL\n  case `$DLLTOOL --help 2>&1` in\n  *--identify-strict*)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib\n    ;;\n  *)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback\n    ;;\n  esac\n  ;;\n*)\n  # fallback: assume linklib IS sharedlib\n  lt_cv_sharedlib_from_linklib_cmd=$ECHO\n  ;;\nesac\n])\nsharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd\ntest -z \"$sharedlib_from_linklib_cmd\" && sharedlib_from_linklib_cmd=$ECHO\n\n_LT_DECL([], [sharedlib_from_linklib_cmd], [1],\n    [Command to associate shared and link libraries])\n])# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n\n\n# _LT_PATH_MANIFEST_TOOL\n# ----------------------\n# locate the manifest tool\nm4_defun([_LT_PATH_MANIFEST_TOOL],\n[AC_CHECK_TOOL(MANIFEST_TOOL, mt, :)\ntest -z \"$MANIFEST_TOOL\" && MANIFEST_TOOL=mt\nAC_CACHE_CHECK([if $MANIFEST_TOOL is a manifest tool], [lt_cv_path_mainfest_tool],\n  [lt_cv_path_mainfest_tool=no\n  echo \"$as_me:$LINENO: $MANIFEST_TOOL '-?'\" >&AS_MESSAGE_LOG_FD\n  $MANIFEST_TOOL '-?' 2>conftest.err > conftest.out\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  if $GREP 'Manifest Tool' conftest.out > /dev/null; then\n    lt_cv_path_mainfest_tool=yes\n  fi\n  rm -f conftest*])\nif test yes != \"$lt_cv_path_mainfest_tool\"; then\n  MANIFEST_TOOL=:\nfi\n_LT_DECL([], [MANIFEST_TOOL], [1], [Manifest tool])dnl\n])# _LT_PATH_MANIFEST_TOOL\n\n\n# _LT_DLL_DEF_P([FILE])\n# ---------------------\n# True iff FILE is a Windows DLL '.def' file.\n# Keep in sync with func_dll_def_p in the libtool script\nAC_DEFUN([_LT_DLL_DEF_P],\n[dnl\n  test DEF = \"`$SED -n dnl\n    -e '\\''s/^[[\t ]]*//'\\'' dnl Strip leading whitespace\n    -e '\\''/^\\(;.*\\)*$/d'\\'' dnl      Delete empty lines and comments\n    -e '\\''s/^\\(EXPORTS\\|LIBRARY\\)\\([[\t ]].*\\)*$/DEF/p'\\'' dnl\n    -e q dnl                          Only consider the first \"real\" line\n    $1`\" dnl\n])# _LT_DLL_DEF_P\n\n\n# LT_LIB_M\n# --------\n# check for math library\nAC_DEFUN([LT_LIB_M],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nLIBM=\ncase $host in\n*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)\n  # These system don't have libm, or don't need it\n  ;;\n*-ncr-sysv4.3*)\n  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=-lmw)\n  AC_CHECK_LIB(m, cos, LIBM=\"$LIBM -lm\")\n  ;;\n*)\n  AC_CHECK_LIB(m, cos, LIBM=-lm)\n  ;;\nesac\nAC_SUBST([LIBM])\n])# LT_LIB_M\n\n# Old name:\nAU_ALIAS([AC_CHECK_LIBM], [LT_LIB_M])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_CHECK_LIBM], [])\n\n\n# _LT_COMPILER_NO_RTTI([TAGNAME])\n# -------------------------------\nm4_defun([_LT_COMPILER_NO_RTTI],\n[m4_require([_LT_TAG_COMPILER])dnl\n\n_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n\nif test yes = \"$GCC\"; then\n  case $cc_basename in\n  nvcc*)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -Xcompiler -fno-builtin' ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin' ;;\n  esac\n\n  _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],\n    lt_cv_prog_compiler_rtti_exceptions,\n    [-fno-rtti -fno-exceptions], [],\n    [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\"$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions\"])\nfi\n_LT_TAGDECL([no_builtin_flag], [lt_prog_compiler_no_builtin_flag], [1],\n\t[Compiler flag to turn off builtin functions])\n])# _LT_COMPILER_NO_RTTI\n\n\n# _LT_CMD_GLOBAL_SYMBOLS\n# ----------------------\nm4_defun([_LT_CMD_GLOBAL_SYMBOLS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_PROG_AWK])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_TAG_COMPILER])dnl\n\n# Check for command to grab the raw symbol name followed by C symbol from nm.\nAC_MSG_CHECKING([command to parse $NM output from $compiler object])\nAC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],\n[\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[[BCDEGRST]]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([[_A-Za-z]][[_A-Za-z0-9]]*\\)'\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[[BCDT]]'\n  ;;\ncygwin* | mingw* | pw32* | cegcc*)\n  symcode='[[ABCDGISTW]]'\n  ;;\nhpux*)\n  if test ia64 = \"$host_cpu\"; then\n    symcode='[[ABCDEGRST]]'\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[[BCDEGRST]]'\n  ;;\nosf*)\n  symcode='[[BCDEGQRST]]'\n  ;;\nsolaris*)\n  symcode='[[BDRT]]'\n  ;;\nsco3.2v5*)\n  symcode='[[DT]]'\n  ;;\nsysv4.2uw2*)\n  symcode='[[DT]]'\n  ;;\nsysv5* | sco5v6* | unixware* | OpenUNIX*)\n  symcode='[[ABDT]]'\n  ;;\nsysv4)\n  symcode='[[DFNSTU]]'\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[[ABCDGIRSTW]]' ;;\nesac\n\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  # Gets list of data symbols to import.\n  lt_cv_sys_global_symbol_to_import=\"sed -n -e 's/^I .* \\(.*\\)$/\\1/p'\"\n  # Adjust the below global symbol transforms to fixup imported variables.\n  lt_cdecl_hook=\" -e 's/^I .* \\(.*\\)$/extern __declspec(dllimport) char \\1;/p'\"\n  lt_c_name_hook=\" -e 's/^I .* \\(.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\"\n  lt_c_name_lib_hook=\"\\\n  -e 's/^I .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\\\n  -e 's/^I .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) 0},/p'\"\nelse\n  # Disable hooks by default.\n  lt_cv_sys_global_symbol_to_import=\n  lt_cdecl_hook=\n  lt_c_name_hook=\n  lt_c_name_lib_hook=\nfi\n\n# Transform an extracted symbol line into a proper C declaration.\n# Some systems (esp. on ia64) link data and code symbols differently,\n# so use this general approach.\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n\"\\\n$lt_cdecl_hook\\\n\" -e 's/^T .* \\(.*\\)$/extern int \\1();/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n\"\\\n$lt_c_name_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\n\n# Transform an extracted symbol line into symbol name with lib prefix and\n# symbol address.\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix=\"sed -n\"\\\n$lt_c_name_lib_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) \\&\\1},/p'\"\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`$ECHO 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# Try without a prefix underscore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  if test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n    # Fake it for dumpbin and say T for any non-static function,\n    # D for any global variable and I for any imported variable.\n    # Also find C++ and __fastcall symbols from MSVC++,\n    # which start with @ or ?.\n    lt_cv_sys_global_symbol_pipe=\"$AWK ['\"\\\n\"     {last_section=section; section=\\$ 3};\"\\\n\"     /^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};\"\\\n\"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};\"\\\n\"     /^ *Symbol name *: /{split(\\$ 0,sn,\\\":\\\"); si=substr(sn[2],2)};\"\\\n\"     /^ *Type *: code/{print \\\"T\\\",si,substr(si,length(prfx))};\"\\\n\"     /^ *Type *: data/{print \\\"I\\\",si,substr(si,length(prfx))};\"\\\n\"     \\$ 0!~/External *\\|/{next};\"\\\n\"     / 0+ UNDEF /{next}; / UNDEF \\([^|]\\)*()/{next};\"\\\n\"     {if(hide[section]) next};\"\\\n\"     {f=\\\"D\\\"}; \\$ 0~/\\(\\).*\\|/{f=\\\"T\\\"};\"\\\n\"     {split(\\$ 0,a,/\\||\\r/); split(a[2],s)};\"\\\n\"     s[1]~/^[@?]/{print f,s[1],s[1]; next};\"\\\n\"     s[1]~prfx {split(s[1],t,\\\"@\\\"); print f,t[1],substr(t[1],length(prfx))}\"\\\n\"     ' prfx=^$ac_symprfx]\"\n  else\n    lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[[\t ]]\\($symcode$symcode*\\)[[\t ]][[\t ]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n  fi\n  lt_cv_sys_global_symbol_pipe=\"$lt_cv_sys_global_symbol_pipe | sed '/ __gnu_lto/d'\"\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<_LT_EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(void);\nvoid nm_test_func(void){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\n_LT_EOF\n\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| \"$lt_cv_sys_global_symbol_pipe\" \\> $nlist) && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if $GREP ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif $GREP ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<_LT_EOF > conftest.$ac_ext\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT@&t@_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT@&t@_DLSYM_CONST\n#else\n# define LT@&t@_DLSYM_CONST const\n#endif\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n_LT_EOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | $GREP -v main >> conftest.$ac_ext'\n\n\t  cat <<_LT_EOF >> conftest.$ac_ext\n\n/* The mapping between symbol names and symbols.  */\nLT@&t@_DLSYM_CONST struct {\n  const char *name;\n  void       *address;\n}\nlt__PROGRAM__LTX_preloaded_symbols[[]] =\n{\n  { \"@PROGRAM@\", (void *) 0 },\n_LT_EOF\n\t  $SED \"s/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/\" < \"$nlist\" | $GREP -v main >> conftest.$ac_ext\n\t  cat <<\\_LT_EOF >> conftest.$ac_ext\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt__PROGRAM__LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n_LT_EOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_globsym_save_LIBS=$LIBS\n\t  lt_globsym_save_CFLAGS=$CFLAGS\n\t  LIBS=conftstm.$ac_objext\n\t  CFLAGS=\"$CFLAGS$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\"\n\t  if AC_TRY_EVAL(ac_link) && test -s conftest$ac_exeext; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=$lt_globsym_save_LIBS\n\t  CFLAGS=$lt_globsym_save_CFLAGS\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&AS_MESSAGE_LOG_FD\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&AS_MESSAGE_LOG_FD\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"$progname: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.$ac_ext >&5\n  fi\n  rm -rf conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test yes = \"$pipe_works\"; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n])\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  AC_MSG_RESULT(failed)\nelse\n  AC_MSG_RESULT(ok)\nfi\n\n# Response file support.\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  nm_file_list_spec='@'\nelif $NM --help 2>/dev/null | grep '[[@]]FILE' >/dev/null; then\n  nm_file_list_spec='@'\nfi\n\n_LT_DECL([global_symbol_pipe], [lt_cv_sys_global_symbol_pipe], [1],\n    [Take the output of nm and produce a listing of raw symbols and C names])\n_LT_DECL([global_symbol_to_cdecl], [lt_cv_sys_global_symbol_to_cdecl], [1],\n    [Transform the output of nm in a proper C declaration])\n_LT_DECL([global_symbol_to_import], [lt_cv_sys_global_symbol_to_import], [1],\n    [Transform the output of nm into a list of symbols to manually relocate])\n_LT_DECL([global_symbol_to_c_name_address],\n    [lt_cv_sys_global_symbol_to_c_name_address], [1],\n    [Transform the output of nm in a C name address pair])\n_LT_DECL([global_symbol_to_c_name_address_lib_prefix],\n    [lt_cv_sys_global_symbol_to_c_name_address_lib_prefix], [1],\n    [Transform the output of nm in a C name address pair when lib prefix is needed])\n_LT_DECL([nm_interface], [lt_cv_nm_interface], [1],\n    [The name lister interface])\n_LT_DECL([], [nm_file_list_spec], [1],\n    [Specify filename containing input files for $NM])\n]) # _LT_CMD_GLOBAL_SYMBOLS\n\n\n# _LT_COMPILER_PIC([TAGNAME])\n# ---------------------------\nm4_defun([_LT_COMPILER_PIC],\n[m4_require([_LT_TAG_COMPILER])dnl\n_LT_TAGVAR(lt_prog_compiler_wl, $1)=\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n_LT_TAGVAR(lt_prog_compiler_static, $1)=\n\nm4_if([$1], [CXX], [\n  # C++ specific cases for pic, static, wl, etc.\n  if test yes = \"$GXX\"; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | cygwin* | os2* | pw32* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n      ;;\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n    *qnx* | *nto*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix[[4-9]]*)\n\t# All AIX code is PIC.\n\tif test ia64 = \"$host_cpu\"; then\n\t  # AIX 5 now supports IA64 processor\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\telse\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_TAGVAR(lt_prog_compiler_static, $1)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n      mingw* | cygwin* | os2* | pw32* | cegcc*)\n\t# This hack is so that the source file can tell whether it is being\n\t# built for inclusion in a dll (and should export symbols for example).\n\tm4_if([$1], [GCJ], [],\n\t  [_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n\t;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n\t    if test ia64 != \"$host_cpu\"; then\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n\t    case $host_cpu in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      interix*)\n\t# This is c89, which is MS Visual C++ (no shared libs)\n\t# Anyone wants to do a port?\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    ;;\n\t  ecpc* )\n\t    # old Intel C++ for x86_64, which still supported -KPIC.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  icpc* )\n\t    # Intel C++, used to be incompatible with GCC.\n\t    # ICC 10 doesn't accept -KPIC any more.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  pgCC* | pgcpp*)\n\t    # Portland Group C++ compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  xlc* | xlC* | bgxl[[cC]]* | mpixl[[cC]]*)\n\t    # IBM XL 8.0, 9.0 on PPC and BlueGene\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd*)\n\t;;\n      *qnx* | *nto*)\n        # QNX uses GNU C++, but need to define -shared option too, otherwise\n        # it will coredump.\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n        ;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      vxworks*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n\t;;\n    esac\n  fi\n],\n[\n  if test yes = \"$GCC\"; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      enable_shared=no\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n\n    case $cc_basename in\n    nvcc*) # Cuda Compiler Driver 2.2\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Xlinker '\n      if test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"-Xcompiler $_LT_TAGVAR(lt_prog_compiler_pic, $1)\"\n      fi\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      else\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      case $cc_basename in\n      nagfor*)\n        # NAG Fortran compiler\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      esac\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC (with -KPIC) is the default.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n      case $cc_basename in\n      # old Intel for x86_64, which still supported -KPIC.\n      ecc*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # icc used to be incompatible with GCC.\n      # ICC 10 doesn't accept -KPIC any more.\n      icc* | ifort*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # Lahey Fortran 8.1.\n      lf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='--shared'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='--static'\n\t;;\n      nagfor*)\n\t# NAG Fortran compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t;;\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t;;\n      pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      ccc*)\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n        # All Alpha code is PIC.\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n        ;;\n      xl* | bgxl* | bgf* | mpixl*)\n\t# IBM XL C 8.0/Fortran 10.1, 11.1 on PPC and BlueGene\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t;;\n      *)\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ Ceres\\ Fortran* | *Sun*Fortran*\\ [[1-7]].* | *Sun*Fortran*\\ 8.[[0-3]]*)\n\t  # Sun Fortran 8.3 passes all unrecognized flags to the linker\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)=''\n\t  ;;\n\t*Sun\\ F* | *Sun*Fortran*)\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t  ;;\n\t*Sun\\ C*)\n\t  # Sun C 5.9\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  ;;\n        *Intel*\\ [[CF]]*Compiler*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t  ;;\n\t*Portland\\ Group*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  ;;\n\tesac\n\t;;\n      esac\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    osf3* | osf4* | osf5*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # All OSF/1 code is PIC.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    rdos*)\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95* | sunf77* | sunf90* | sunf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    unicos*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n    esac\n  fi\n])\ncase $host_os in\n  # For platforms that do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n    ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])\"\n    ;;\nesac\n\nAC_CACHE_CHECK([for $compiler option to produce PIC],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_prog_compiler_pic, $1)])\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n  _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, $1) works],\n    [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, $1)],\n    [$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])], [],\n    [case $_LT_TAGVAR(lt_prog_compiler_pic, $1) in\n     \"\" | \" \"*) ;;\n     *) _LT_TAGVAR(lt_prog_compiler_pic, $1)=\" $_LT_TAGVAR(lt_prog_compiler_pic, $1)\" ;;\n     esac],\n    [_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n     _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])\nfi\n_LT_TAGDECL([pic_flag], [lt_prog_compiler_pic], [1],\n\t[Additional compiler flags for building library objects])\n\n_LT_TAGDECL([wl], [lt_prog_compiler_wl], [1],\n\t[How to pass a linker flag through the compiler])\n#\n# Check to make sure the static flag actually works.\n#\nwl=$_LT_TAGVAR(lt_prog_compiler_wl, $1) eval lt_tmp_static_flag=\\\"$_LT_TAGVAR(lt_prog_compiler_static, $1)\\\"\n_LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works],\n  _LT_TAGVAR(lt_cv_prog_compiler_static_works, $1),\n  $lt_tmp_static_flag,\n  [],\n  [_LT_TAGVAR(lt_prog_compiler_static, $1)=])\n_LT_TAGDECL([link_static_flag], [lt_prog_compiler_static], [1],\n\t[Compiler flag to prevent dynamic linking])\n])# _LT_COMPILER_PIC\n\n\n# _LT_LINKER_SHLIBS([TAGNAME])\n# ----------------------------\n# See if the linker supports building shared libraries.\nm4_defun([_LT_LINKER_SHLIBS],\n[AC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\nm4_if([$1], [CXX], [\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  case $host_os in\n  aix[[4-9]]*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to AIX nm, but means don't demangle with GNU nm\n    # Also, AIX nm treats weak defined symbols like other global defined\n    # symbols, whereas GNU nm marks them as \"W\".\n    if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n    else\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    _LT_TAGVAR(export_symbols_cmds, $1)=$ltdll_cmds\n    ;;\n  cygwin* | mingw* | cegcc*)\n    case $cc_basename in\n    cl*)\n      _LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n      ;;\n    *)\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n      ;;\n    esac\n    ;;\n  *)\n    _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n    ;;\n  esac\n], [\n  runpath_var=\n  _LT_TAGVAR(allow_undefined_flag, $1)=\n  _LT_TAGVAR(always_export_symbols, $1)=no\n  _LT_TAGVAR(archive_cmds, $1)=\n  _LT_TAGVAR(archive_expsym_cmds, $1)=\n  _LT_TAGVAR(compiler_needs_object, $1)=no\n  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n  _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(hardcode_automatic, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n  _LT_TAGVAR(hardcode_minus_L, $1)=no\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  _LT_TAGVAR(inherit_rpath, $1)=no\n  _LT_TAGVAR(link_all_deplibs, $1)=unknown\n  _LT_TAGVAR(module_cmds, $1)=\n  _LT_TAGVAR(module_expsym_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_new_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_expsyms_cmds, $1)=\n  _LT_TAGVAR(thread_safe_flag_spec, $1)=\n  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  _LT_TAGVAR(include_expsyms, $1)=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ' (' and ')$', so one must not match beginning or\n  # end of line.  Example: 'a|bc|.*d.*' will exclude the symbols 'a' and 'bc',\n  # as well as any symbol that contains 'd'.\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  # Exclude shared library initialization/finalization symbols.\ndnl Note also adjust exclude_expsyms for C++ above.\n  extract_expsyms_cmds=\n\n  case $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test yes != \"$GCC\"; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++)\n    with_gnu_ld=yes\n    ;;\n  openbsd* | bitrig*)\n    with_gnu_ld=no\n    ;;\n  esac\n\n  _LT_TAGVAR(ld_shlibs, $1)=yes\n\n  # On some targets, GNU ld is compatible enough with the native linker\n  # that we're better off using the native interface for both.\n  lt_use_gnu_ld_interface=no\n  if test yes = \"$with_gnu_ld\"; then\n    case $host_os in\n      aix*)\n\t# The AIX port of GNU ld has always aspired to compatibility\n\t# with the native linker.  However, as the warning in the GNU ld\n\t# block says, versions before 2.19.5* couldn't really create working\n\t# shared libraries, regardless of the interface used.\n\tcase `$LD -v 2>&1` in\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.19.5*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.[[2-9]]*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ [[3-9]]*) ;;\n\t  *)\n\t    lt_use_gnu_ld_interface=yes\n\t    ;;\n\tesac\n\t;;\n      *)\n\tlt_use_gnu_ld_interface=yes\n\t;;\n    esac\n  fi\n\n  if test yes = \"$lt_use_gnu_ld_interface\"; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='$wl'\n\n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n    else\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v | $SED -e 's/([^)]\\+)\\s\\+//' 2>&1` in\n      *GNU\\ gold*) supports_anon_versioning=yes ;;\n      *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n\n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix[[3-9]]*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test ia64 != \"$host_cpu\"; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.19, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to install binutils\n*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.\n*** You will then need to restart the configuration process.\n\n_LT_EOF\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n      # as there is no search path for DLLs.\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-all-symbols'\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=no\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n\n      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t# If the export-symbols file already is a .def file, use it as\n\t# is; otherwise, prepend EXPORTS...\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n          cp $export_symbols $output_objdir/$soname.def;\n        else\n          echo EXPORTS > $output_objdir/$soname.def;\n          cat $export_symbols >> $output_objdir/$soname.def;\n        fi~\n        $CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    haiku*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    interix[[3-9]]*)\n      _LT_TAGVAR(hardcode_direct, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n      # Instead, shared libraries are loaded at an image base (0x10000000 by\n      # default) and relocated if they conflict, which is a slow very memory\n      # consuming and fragmenting process.  To avoid this, we pick a random,\n      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      ;;\n\n    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)\n      tmp_diet=no\n      if test linux-dietlibc = \"$host_os\"; then\n\tcase $cc_basename in\n\t  diet\\ *) tmp_diet=yes;;\t# linux-dietlibc with static linking (!diet-dyn)\n\tesac\n      fi\n      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \\\n\t && test no = \"$tmp_diet\"\n      then\n\ttmp_addflag=' $pic_flag'\n\ttmp_sharedflag='-shared'\n\tcase $cc_basename,$host_cpu in\n        pgcc*)\t\t\t\t# Portland Group C compiler\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag'\n\t  ;;\n\tpgf77* | pgf90* | pgf95* | pgfortran*)\n\t\t\t\t\t# Portland Group f77 and f90 compilers\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tlf95*)\t\t\t\t# Lahey Fortran 8.1\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n\t  tmp_sharedflag='--shared' ;;\n        nagfor*)                        # NAGFOR 5.3\n          tmp_sharedflag='-Wl,-shared' ;;\n\txl[[cC]]* | bgxl[[cC]]* | mpixl[[cC]]*) # IBM XL C 8.0 on PPC (deal with xlf below)\n\t  tmp_sharedflag='-qmkshrobj'\n\t  tmp_addflag= ;;\n\tnvcc*)\t# Cuda Compiler Driver 2.2\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  ;;\n\tesac\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ C*)\t\t\t# Sun C 5.9\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  tmp_sharedflag='-G' ;;\n\t*Sun\\ F*)\t\t\t# Sun Fortran 8.3\n\t  tmp_sharedflag='-G' ;;\n\tesac\n\t_LT_TAGVAR(archive_cmds, $1)='$CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\n        if test yes = \"$supports_anon_versioning\"; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n            cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n            echo \"local: *; };\" >> $output_objdir/$libname.ver~\n            $CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n        fi\n\n\tcase $cc_basename in\n\txlf* | bgf* | bgxlf* | mpixlf*)\n\t  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='--whole-archive$convenience --no-whole-archive'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'\n\t  if test yes = \"$supports_anon_versioning\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n              cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n              echo \"local: *; };\" >> $output_objdir/$libname.ver~\n              $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'\n\t  fi\n\t  ;;\n\tesac\n      else\n        _LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris*)\n      if $LD -v 2>&1 | $GREP 'BFD 2\\.8' > /dev/null; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.1[[0-5]].*)\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 cannot\n*** reliably create shared libraries on SCO systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n\t;;\n\t*)\n\t  # For security reasons, it is highly recommended that you always\n\t  # use absolute paths for naming shared libraries, and exclude the\n\t  # DT_RUNPATH tag from executables and libraries.  But doing so\n\t  # requires that you compile everything twice, which is a pain.\n\t  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t;;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n\n    if test no = \"$_LT_TAGVAR(ld_shlibs, $1)\"; then\n      runpath_var=\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      if test yes = \"$GCC\" && test -z \"$lt_prog_compiler_static\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\t_LT_TAGVAR(hardcode_direct, $1)=unsupported\n      fi\n      ;;\n\n    aix[[4-9]]*)\n      if test ia64 = \"$host_cpu\"; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to AIX nm, but means don't demangle with GNU nm\n\t# Also, AIX nm treats weak defined symbols like other global\n\t# defined symbols, whereas GNU nm marks them as \"W\".\n\tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# need to do runtime linking.\n\tcase $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t  for ld_flag in $LDFLAGS; do\n\t  if (test x-brtl = \"x$ld_flag\" || test x-Wl,-brtl = \"x$ld_flag\"); then\n\t    aix_use_runtimelinking=yes\n\t    break\n\t  fi\n\t  done\n\t  ;;\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      _LT_TAGVAR(archive_cmds, $1)=''\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(file_list_spec, $1)='$wl-f,'\n\n      if test yes = \"$GCC\"; then\n\tcase $host_os in aix4.[[012]]|aix4.[[012]].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t   strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t  # We have reworked collect2\n\t  :\n\t  else\n\t  # We have old collect2\n\t  _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n\t  ;;\n\tesac\n\tshared_flag='-shared'\n\tif test yes = \"$aix_use_runtimelinking\"; then\n\t  shared_flag=\"$shared_flag \"'$wl-G'\n\tfi\n      else\n\t# not using gcc\n\tif test ia64 = \"$host_cpu\"; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag='$wl-G'\n\t  else\n\t    shared_flag='$wl-bM:SRE'\n\t  fi\n\tfi\n      fi\n\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-bexpall'\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      if test yes = \"$aix_use_runtimelinking\"; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n        # Determine the default libpath from the value encoded in an\n        # empty executable.\n        _LT_SYS_MODULE_PATH_AIX([$1])\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n      else\n\tif test ia64 = \"$host_cpu\"; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $libdir:/usr/lib:/lib'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an\n\t # empty executable.\n\t _LT_SYS_MODULE_PATH_AIX([$1])\n\t _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  _LT_TAGVAR(no_undefined_flag, $1)=' $wl-bernotok'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-berok'\n\t  if test yes = \"$with_gnu_ld\"; then\n\t    # We only use this code for GNU lds that support --whole-archive.\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t  else\n\t    # Exported symbols can be pulled into shared objects from archives\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t  fi\n\t  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  # This is similar to how AIX traditionally builds its shared libraries.\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs $wl-bnoentry $compiler_flags $wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    bsdi[[45]]*)\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      case $cc_basename in\n      cl*)\n\t# Native MSVC\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t_LT_TAGVAR(always_export_symbols, $1)=yes\n\t_LT_TAGVAR(file_list_spec, $1)='@'\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n            cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n            echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n          else\n            $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n          fi~\n          $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n          linknames='\n\t# The linker will not automatically build a static lib if we build a DLL.\n\t# _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t_LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n\t_LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1,DATA/'\\'' | $SED -e '\\''/^[[AITW]][[ ]]/s/.*[[ ]]//'\\'' | sort | uniq > $export_symbols'\n\t# Don't use ranlib\n\t_LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t_LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n          lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n          case $lt_outputfile in\n            *.exe|*.EXE) ;;\n            *)\n              lt_outputfile=$lt_outputfile.exe\n              lt_tool_outputfile=$lt_tool_outputfile.exe\n              ;;\n          esac~\n          if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n            $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n            $RM \"$lt_outputfile.manifest\";\n          fi'\n\t;;\n      *)\n\t# Assume MSVC wrapper\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `func_echo_all \"$deplibs\" | $SED '\\''s/ -lc$//'\\''` -link -dll~linknames='\n\t# The linker will automatically build a .lib file if we build a DLL.\n\t_LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t# FIXME: Should let the user specify the lib program.\n\t_LT_TAGVAR(old_archive_cmds, $1)='lib -OUT:$oldlib$oldobjs$old_deplibs'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      _LT_DARWIN_LINKER_FEATURES($1)\n      ;;\n\n    dgux*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2.*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | dragonfly*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    hpux9*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n      ;;\n\n    hpux10*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t# hardcode_minus_L: Not really in the search PATH,\n\t# but as the default location of the library.\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n      fi\n      ;;\n\n    hpux11*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\tm4_if($1, [], [\n\t  # Older versions of the 11.00 compiler do not understand -b yet\n\t  # (HP92453-01 A.11.01.20 doesn't, HP92453-01 B.11.X.35175-35176.GP does)\n\t  _LT_LINKER_OPTION([if $CC understands -b],\n\t    _LT_TAGVAR(lt_cv_prog_compiler__b, $1), [-b],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])],\n\t  [_LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'])\n\t  ;;\n\tesac\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\tcase $host_cpu in\n\thppa*64*|ia64*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t# Try to use the -exported_symbol ld option, if it does not\n\t# work, assume that -exports_file does not work either and\n\t# implicitly export all symbols.\n\t# This should be the same for all languages, so no per-tag cache variable.\n\tAC_CACHE_CHECK([whether the $host_os linker accepts -exported_symbol],\n\t  [lt_cv_irix_exported_symbol],\n\t  [save_LDFLAGS=$LDFLAGS\n\t   LDFLAGS=\"$LDFLAGS -shared $wl-exported_symbol ${wl}foo $wl-update_registry $wl/dev/null\"\n\t   AC_LINK_IFELSE(\n\t     [AC_LANG_SOURCE(\n\t        [AC_LANG_CASE([C], [[int foo (void) { return 0; }]],\n\t\t\t      [C++], [[int foo (void) { return 0; }]],\n\t\t\t      [Fortran 77], [[\n      subroutine foo\n      end]],\n\t\t\t      [Fortran], [[\n      subroutine foo\n      end]])])],\n\t      [lt_cv_irix_exported_symbol=yes],\n\t      [lt_cv_irix_exported_symbol=no])\n           LDFLAGS=$save_LDFLAGS])\n\tif test yes = \"$lt_cv_irix_exported_symbol\"; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations $wl-exports_file $wl$export_symbols -o $lib'\n\tfi\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -exports_file $export_symbols -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(inherit_rpath, $1)=yes\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *nto* | *qnx*)\n      ;;\n\n    openbsd* | bitrig*)\n      if test -f /usr/libexec/ld.so; then\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\tif test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags $wl-retain-symbols-file,$export_symbols'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\telse\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\tfi\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY $libname INITINSTANCE\" > $output_objdir/$libname.def~$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~echo DATA >> $output_objdir/$libname.def~echo \" SINGLE NONSHARED\" >> $output_objdir/$libname.def~echo EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_from_new_cmds, $1)='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'\n      ;;\n\n    osf3*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $pic_flag $libobjs $deplibs $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; printf \"%s\\\\n\" \"-hidden\">> $lib.exp~\n          $CC -shared$allow_undefined_flag $wl-input $wl$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~$RM $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(no_undefined_flag, $1)=' -z defs'\n      if test yes = \"$GCC\"; then\n\twlarc='$wl'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl-z ${wl}text $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n          $CC -shared $pic_flag $wl-z ${wl}text $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n      else\n\tcase `$CC -V 2>&1` in\n\t*\"Compilers 5.0\"*)\n\t  wlarc=''\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $LD -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'\n\t  ;;\n\t*)\n\t  wlarc='$wl'\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $CC -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n\t  ;;\n\tesac\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      case $host_os in\n      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n      *)\n\t# The compiler driver will combine and reorder linker options,\n\t# but understands '-z linker_flag'.  GCC discards it without '$wl',\n\t# but is careful enough not to reorder.\n\t# Supported since Solaris 2.6 (maybe 2.5.1?)\n\tif test yes = \"$GCC\"; then\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\telse\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\tfi\n\t;;\n      esac\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    sunos4*)\n      if test sequent = \"$host_vendor\"; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n        ;;\n\tmotorola)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4.3*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n      fi\n      ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6*)\n      # Note: We CANNOT use -z defs as we might desire, because we do not\n      # link with -lc, and that would cause any symbols used from libc to\n      # always be unresolved, which means just about no library would\n      # ever link correctly.  If we're not using GNU ld we use -z text\n      # though, which does catch some bad symbols but isn't as heavy-handed\n      # as -z defs.\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(allow_undefined_flag, $1)='$wl-z,nodefs'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R,$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Bexport'\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      _LT_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    esac\n\n    if test sni = \"$host_vendor\"; then\n      case $host in\n      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Blargedynsym'\n\t;;\n      esac\n    fi\n  fi\n])\nAC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\ntest no = \"$_LT_TAGVAR(ld_shlibs, $1)\" && can_build_shared=no\n\n_LT_TAGVAR(with_gnu_ld, $1)=$with_gnu_ld\n\n_LT_DECL([], [libext], [0], [Old archive suffix (normally \"a\")])dnl\n_LT_DECL([], [shrext_cmds], [1], [Shared library suffix (normally \".so\")])dnl\n_LT_DECL([], [extract_expsyms_cmds], [2],\n    [The commands to extract the exported symbol list from a shared archive])\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$_LT_TAGVAR(archive_cmds_need_lc, $1)\" in\nx|xyes)\n  # Assume -lc should be added\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\n  if test yes,yes = \"$GCC,$enable_shared\"; then\n    case $_LT_TAGVAR(archive_cmds, $1) in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      AC_CACHE_CHECK([whether -lc should be explicitly linked in],\n\t[lt_cv_]_LT_TAGVAR(archive_cmds_need_lc, $1),\n\t[$RM conftest*\n\techo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n\tif AC_TRY_EVAL(ac_compile) 2>conftest.err; then\n\t  soname=conftest\n\t  lib=conftest\n\t  libobjs=conftest.$ac_objext\n\t  deplibs=\n\t  wl=$_LT_TAGVAR(lt_prog_compiler_wl, $1)\n\t  pic_flag=$_LT_TAGVAR(lt_prog_compiler_pic, $1)\n\t  compiler_flags=-v\n\t  linker_flags=-v\n\t  verstring=\n\t  output_objdir=.\n\t  libname=conftest\n\t  lt_save_allow_undefined_flag=$_LT_TAGVAR(allow_undefined_flag, $1)\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\n\t  if AC_TRY_EVAL(_LT_TAGVAR(archive_cmds, $1) 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1)\n\t  then\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t  else\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  fi\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag\n\telse\n\t  cat conftest.err 1>&5\n\tfi\n\t$RM conftest*\n\t])\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=$lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)\n      ;;\n    esac\n  fi\n  ;;\nesac\n\n_LT_TAGDECL([build_libtool_need_lc], [archive_cmds_need_lc], [0],\n    [Whether or not to add -lc for building shared libraries])\n_LT_TAGDECL([allow_libtool_libs_with_static_runtimes],\n    [enable_shared_with_static_runtimes], [0],\n    [Whether or not to disallow shared libs when runtime libs are static])\n_LT_TAGDECL([], [export_dynamic_flag_spec], [1],\n    [Compiler flag to allow reflexive dlopens])\n_LT_TAGDECL([], [whole_archive_flag_spec], [1],\n    [Compiler flag to generate shared objects directly from archives])\n_LT_TAGDECL([], [compiler_needs_object], [1],\n    [Whether the compiler copes with passing no objects directly])\n_LT_TAGDECL([], [old_archive_from_new_cmds], [2],\n    [Create an old-style archive from a shared archive])\n_LT_TAGDECL([], [old_archive_from_expsyms_cmds], [2],\n    [Create a temporary old-style archive to link instead of a shared archive])\n_LT_TAGDECL([], [archive_cmds], [2], [Commands used to build a shared archive])\n_LT_TAGDECL([], [archive_expsym_cmds], [2])\n_LT_TAGDECL([], [module_cmds], [2],\n    [Commands used to build a loadable module if different from building\n    a shared archive.])\n_LT_TAGDECL([], [module_expsym_cmds], [2])\n_LT_TAGDECL([], [with_gnu_ld], [1],\n    [Whether we are building with GNU ld or not])\n_LT_TAGDECL([], [allow_undefined_flag], [1],\n    [Flag that allows shared libraries with undefined symbols to be built])\n_LT_TAGDECL([], [no_undefined_flag], [1],\n    [Flag that enforces no undefined symbols])\n_LT_TAGDECL([], [hardcode_libdir_flag_spec], [1],\n    [Flag to hardcode $libdir into a binary during linking.\n    This must work even if $libdir does not exist])\n_LT_TAGDECL([], [hardcode_libdir_separator], [1],\n    [Whether we need a single \"-rpath\" flag with a separated argument])\n_LT_TAGDECL([], [hardcode_direct], [0],\n    [Set to \"yes\" if using DIR/libNAME$shared_ext during linking hardcodes\n    DIR into the resulting binary])\n_LT_TAGDECL([], [hardcode_direct_absolute], [0],\n    [Set to \"yes\" if using DIR/libNAME$shared_ext during linking hardcodes\n    DIR into the resulting binary and the resulting library dependency is\n    \"absolute\", i.e impossible to change by setting $shlibpath_var if the\n    library is relocated])\n_LT_TAGDECL([], [hardcode_minus_L], [0],\n    [Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_shlibpath_var], [0],\n    [Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_automatic], [0],\n    [Set to \"yes\" if building a shared library automatically hardcodes DIR\n    into the library and all subsequent libraries and executables linked\n    against it])\n_LT_TAGDECL([], [inherit_rpath], [0],\n    [Set to yes if linker adds runtime paths of dependent libraries\n    to runtime path list])\n_LT_TAGDECL([], [link_all_deplibs], [0],\n    [Whether libtool must link a program against all its dependency libraries])\n_LT_TAGDECL([], [always_export_symbols], [0],\n    [Set to \"yes\" if exported symbols are required])\n_LT_TAGDECL([], [export_symbols_cmds], [2],\n    [The commands to list exported symbols])\n_LT_TAGDECL([], [exclude_expsyms], [1],\n    [Symbols that should not be listed in the preloaded symbols])\n_LT_TAGDECL([], [include_expsyms], [1],\n    [Symbols that must always be exported])\n_LT_TAGDECL([], [prelink_cmds], [2],\n    [Commands necessary for linking programs (against libraries) with templates])\n_LT_TAGDECL([], [postlink_cmds], [2],\n    [Commands necessary for finishing linking programs])\n_LT_TAGDECL([], [file_list_spec], [1],\n    [Specify filename containing input files])\ndnl FIXME: Not yet implemented\ndnl _LT_TAGDECL([], [thread_safe_flag_spec], [1],\ndnl    [Compiler flag to generate thread safe objects])\n])# _LT_LINKER_SHLIBS\n\n\n# _LT_LANG_C_CONFIG([TAG])\n# ------------------------\n# Ensure that the configuration variables for a C compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_C_CONFIG],\n[m4_require([_LT_DECL_EGREP])dnl\nlt_save_CC=$CC\nAC_LANG_PUSH(C)\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}'\n\n_LT_TAG_COMPILER\n# Save the default compiler, since it gets overwritten when the other\n# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.\ncompiler_DEFAULT=$CC\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_SYS_DYNAMIC_LINKER($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n  LT_SYS_DLOPEN_SELF\n  _LT_CMD_STRIPLIB\n\n  # Report what library types will actually be built\n  AC_MSG_CHECKING([if libtool supports shared libraries])\n  AC_MSG_RESULT([$can_build_shared])\n\n  AC_MSG_CHECKING([whether to build shared libraries])\n  test no = \"$can_build_shared\" && enable_shared=no\n\n  # On AIX, shared libraries and static libraries use the same namespace, and\n  # are all built from PIC.\n  case $host_os in\n  aix3*)\n    test yes = \"$enable_shared\" && enable_static=no\n    if test -n \"$RANLIB\"; then\n      archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n      postinstall_cmds='$RANLIB $lib'\n    fi\n    ;;\n\n  aix[[4-9]]*)\n    if test ia64 != \"$host_cpu\" && test no = \"$aix_use_runtimelinking\"; then\n      test yes = \"$enable_shared\" && enable_static=no\n    fi\n    ;;\n  esac\n  AC_MSG_RESULT([$enable_shared])\n\n  AC_MSG_CHECKING([whether to build static libraries])\n  # Make sure either enable_shared or enable_static is yes.\n  test yes = \"$enable_shared\" || enable_static=yes\n  AC_MSG_RESULT([$enable_static])\n\n  _LT_CONFIG($1)\nfi\nAC_LANG_POP\nCC=$lt_save_CC\n])# _LT_LANG_C_CONFIG\n\n\n# _LT_LANG_CXX_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a C++ compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_CXX_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nif test -n \"$CXX\" && ( test no != \"$CXX\" &&\n    ( (test g++ = \"$CXX\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test g++ != \"$CXX\"))); then\n  AC_PROG_CXXCPP\nelse\n  _lt_caught_CXX_error=yes\nfi\n\nAC_LANG_PUSH(C++)\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(compiler_needs_object, $1)=no\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for C++ test sources.\nac_ext=cpp\n\n# Object file extension for compiled C++ test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the CXX compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_caught_CXX_error\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"int some_variable = 0;\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code='int main(int, char *[[]]) { return(0); }'\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_CFLAGS=$CFLAGS\n  lt_save_LD=$LD\n  lt_save_GCC=$GCC\n  GCC=$GXX\n  lt_save_with_gnu_ld=$with_gnu_ld\n  lt_save_path_LD=$lt_cv_path_LD\n  if test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n    lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\n  else\n    $as_unset lt_cv_prog_gnu_ld\n  fi\n  if test -n \"${lt_cv_path_LDCXX+set}\"; then\n    lt_cv_path_LD=$lt_cv_path_LDCXX\n  else\n    $as_unset lt_cv_path_LD\n  fi\n  test -z \"${LDCXX+set}\" || LD=$LDCXX\n  CC=${CXX-\"c++\"}\n  CFLAGS=$CXXFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    # We don't want -fno-exception when compiling C++ code, so set the\n    # no_builtin_flag separately\n    if test yes = \"$GXX\"; then\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\n    else\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n    fi\n\n    if test yes = \"$GXX\"; then\n      # Set up default GNU C++ configuration\n\n      LT_PATH_LD\n\n      # Check if GNU C++ uses GNU ld as the underlying linker, since the\n      # archiving commands below assume that GNU ld is being used.\n      if test yes = \"$with_gnu_ld\"; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\n        # If archive_cmds runs LD, not CC, wlarc should be empty\n        # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n        #     investigate it a little bit more. (MM)\n        wlarc='$wl'\n\n        # ancient GNU ld didn't support --whole-archive et. al.\n        if eval \"`$CC -print-prog-name=ld` --help 2>&1\" |\n\t  $GREP 'no-whole-archive' > /dev/null; then\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n        else\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\n        fi\n      else\n        with_gnu_ld=no\n        wlarc=\n\n        # A generic and very simple default shared library creation\n        # command for GNU C++ for the case where it uses the native\n        # linker, instead of GNU ld.  If possible, this setting should\n        # overridden to take advantage of the native linker features on\n        # the platform it is being used on.\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n      fi\n\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n    else\n      GXX=no\n      with_gnu_ld=no\n      wlarc=\n    fi\n\n    # PORTME: fill in a description of your system's C++ link characteristics\n    AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\n    _LT_TAGVAR(ld_shlibs, $1)=yes\n    case $host_os in\n      aix3*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n      aix[[4-9]]*)\n        if test ia64 = \"$host_cpu\"; then\n          # On IA64, the linker does run time linking by default, so we don't\n          # have to do anything special.\n          aix_use_runtimelinking=no\n          exp_sym_flag='-Bexport'\n          no_entry_flag=\n        else\n          aix_use_runtimelinking=no\n\n          # Test if we are trying to use run time linking or normal\n          # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n          # need to do runtime linking.\n          case $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t    for ld_flag in $LDFLAGS; do\n\t      case $ld_flag in\n\t      *-brtl*)\n\t        aix_use_runtimelinking=yes\n\t        break\n\t        ;;\n\t      esac\n\t    done\n\t    ;;\n          esac\n\n          exp_sym_flag='-bexport'\n          no_entry_flag='-bnoentry'\n        fi\n\n        # When large executables or shared objects are built, AIX ld can\n        # have problems creating the table of contents.  If linking a library\n        # or program results in \"error TOC overflow\" add -mminimal-toc to\n        # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n        # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n        _LT_TAGVAR(archive_cmds, $1)=''\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        _LT_TAGVAR(file_list_spec, $1)='$wl-f,'\n\n        if test yes = \"$GXX\"; then\n          case $host_os in aix4.[[012]]|aix4.[[012]].*)\n          # We only want to do this on AIX 4.2 and lower, the check\n          # below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t     strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t    # We have reworked collect2\n\t    :\n\t  else\n\t    # We have old collect2\n\t    _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t    # It fails to find uninstalled libraries when the uninstalled\n\t    # path is not listed in the libpath.  Setting hardcode_minus_L\n\t    # to unsupported forces relinking\n\t    _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n          esac\n          shared_flag='-shared'\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag=$shared_flag' $wl-G'\n\t  fi\n        else\n          # not using gcc\n          if test ia64 = \"$host_cpu\"; then\n\t  # VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t  # chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n          else\n\t    if test yes = \"$aix_use_runtimelinking\"; then\n\t      shared_flag='$wl-G'\n\t    else\n\t      shared_flag='$wl-bM:SRE'\n\t    fi\n          fi\n        fi\n\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-bexpall'\n        # It seems that -bexpall does not export symbols beginning with\n        # underscore (_), so it is better to generate a list of symbols to\n\t# export.\n        _LT_TAGVAR(always_export_symbols, $1)=yes\n        if test yes = \"$aix_use_runtimelinking\"; then\n          # Warning - without using the other runtime loading flags (-brtl),\n          # -berok will link without error, but may produce a broken library.\n          _LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n          # Determine the default libpath from the value encoded in an empty\n          # executable.\n          _LT_SYS_MODULE_PATH_AIX([$1])\n          _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n        else\n          if test ia64 = \"$host_cpu\"; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $libdir:/usr/lib:/lib'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n          else\n\t    # Determine the default libpath from the value encoded in an\n\t    # empty executable.\n\t    _LT_SYS_MODULE_PATH_AIX([$1])\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t    # Warning - without using the other run time loading flags,\n\t    # -berok will link without error, but may produce a broken library.\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' $wl-bernotok'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-berok'\n\t    if test yes = \"$with_gnu_ld\"; then\n\t      # We only use this code for GNU lds that support --whole-archive.\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    else\n\t      # Exported symbols can be pulled into shared objects from archives\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t    fi\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t    # This is similar to how AIX traditionally builds its shared\n\t    # libraries.\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs $wl-bnoentry $compiler_flags $wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n          fi\n        fi\n        ;;\n\n      beos*)\n\tif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  # Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t  # support --undefined.  This deserves some investigation.  FIXME\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      chorus*)\n        case $cc_basename in\n          *)\n\t  # FIXME: insert proper C++ library support\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\t  ;;\n        esac\n        ;;\n\n      cygwin* | mingw* | pw32* | cegcc*)\n\tcase $GXX,$cc_basename in\n\t,cl* | no,cl*)\n\t  # Native MSVC\n\t  # hardcode_libdir_flag_spec is actually meaningless, as there is\n\t  # no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=yes\n\t  _LT_TAGVAR(file_list_spec, $1)='@'\n\t  # Tell ltmain to make .lib files, not .a files.\n\t  libext=lib\n\t  # Tell ltmain to make .dll files, not .so files.\n\t  shrext_cmds=.dll\n\t  # FIXME: Setting linknames here is a bad hack.\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n              cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n              echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n            else\n              $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n            fi~\n            $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n            linknames='\n\t  # The linker will not automatically build a static lib if we build a DLL.\n\t  # _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t  # Don't use ranlib\n\t  _LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t  _LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n            lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n            case $lt_outputfile in\n              *.exe|*.EXE) ;;\n              *)\n                lt_outputfile=$lt_outputfile.exe\n                lt_tool_outputfile=$lt_tool_outputfile.exe\n                ;;\n            esac~\n            func_to_tool_file \"$lt_outputfile\"~\n            if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n              $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n              $RM \"$lt_outputfile.manifest\";\n            fi'\n\t  ;;\n\t*)\n\t  # g++\n\t  # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n\t  # as there is no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-all-symbols'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=no\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\n\t  if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t    # If the export-symbols file already is a .def file, use it as\n\t    # is; otherwise, prepend EXPORTS...\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n              cp $export_symbols $output_objdir/$soname.def;\n            else\n              echo EXPORTS > $output_objdir/$soname.def;\n              cat $export_symbols >> $output_objdir/$soname.def;\n            fi~\n            $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t  ;;\n\tesac\n\t;;\n      darwin* | rhapsody*)\n        _LT_DARWIN_LINKER_FEATURES($1)\n\t;;\n\n      dgux*)\n        case $cc_basename in\n          ec++*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          ghcx*)\n\t    # Green Hills C++ Compiler\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      freebsd2.*)\n        # C++ shared libraries reported to be fairly broken before\n\t# switch to ELF\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      freebsd-elf*)\n        _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n        ;;\n\n      freebsd* | dragonfly*)\n        # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n        # conventions\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n        ;;\n\n      haiku*)\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        ;;\n\n      hpux9*)\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t             # but as the default\n\t\t\t\t             # location of the library.\n\n        case $cc_basename in\n          CC*)\n            # FIXME: insert proper C++ library support\n            _LT_TAGVAR(ld_shlibs, $1)=no\n            ;;\n          aCC*)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -b $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            # Commands to make compiler produce verbose output that lists\n            # what \"hidden\" libraries, object files and flags are used when\n            # linking a shared library.\n            #\n            # There doesn't appear to be a way to prevent this compiler from\n            # explicitly linking system object files so we need to strip them\n            # from the output so that they don't get included in the library\n            # dependencies.\n            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP \"\\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n            ;;\n          *)\n            if test yes = \"$GXX\"; then\n              _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -nostdlib $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            else\n              # FIXME: insert proper C++ library support\n              _LT_TAGVAR(ld_shlibs, $1)=no\n            fi\n            ;;\n        esac\n        ;;\n\n      hpux10*|hpux11*)\n        if test no = \"$with_gnu_ld\"; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n          case $host_cpu in\n            hppa*64*|ia64*)\n              ;;\n            *)\n\t      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n              ;;\n          esac\n        fi\n        case $host_cpu in\n          hppa*64*|ia64*)\n            _LT_TAGVAR(hardcode_direct, $1)=no\n            _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n            ;;\n          *)\n            _LT_TAGVAR(hardcode_direct, $1)=yes\n            _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t\t         # but as the default\n\t\t\t\t\t         # location of the library.\n            ;;\n        esac\n\n        case $cc_basename in\n          CC*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          aCC*)\n\t    case $host_cpu in\n\t      hppa*64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      ia64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      *)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t    esac\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP \"\\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        case $host_cpu in\n\t          hppa*64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          ia64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          *)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t        esac\n\t      fi\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      interix[[3-9]]*)\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t# Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n\t# Instead, shared libraries are loaded at an image base (0x10000000 by\n\t# default) and relocated if they conflict, which is a slow very memory\n\t# consuming and fragmenting process.  To avoid this, we pick a random,\n\t# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n\t# time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t;;\n      irix5* | irix6*)\n        case $cc_basename in\n          CC*)\n\t    # SGI C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t      else\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` -o $lib'\n\t      fi\n\t    fi\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\t    ;;\n        esac\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(inherit_rpath, $1)=yes\n        ;;\n\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib $wl-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP \"ld\"`; rm -f libconftest$shared_ext; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\t    ;;\n\t  icpc* | ecpc* )\n\t    # Intel C++\n\t    with_gnu_ld=yes\n\t    # version 8.0 and above of icpc choke on multiply defined symbols\n\t    # if we add $predep_objects and $postdep_objects, however 7.1 and\n\t    # earlier do not add the objects themselves.\n\t    case `$CC -V 2>&1` in\n\t      *\"Version 7.\"*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t      *)  # Version 8.0 or newer\n\t        tmp_idyn=\n\t        case $host_cpu in\n\t\t  ia64*) tmp_idyn=' -i_dynamic';;\n\t\tesac\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t    esac\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    ;;\n          pgCC* | pgcpp*)\n            # Portland Group C++ compiler\n\t    case `$CC -V` in\n\t    *pgCC\\ [[1-5]].* | *pgcpp\\ [[1-5]].*)\n\t      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~\n               rm -rf $tpldir~\n               $CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n               compile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n\t      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n                $AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n                $RANLIB $oldlib'\n\t      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    *) # Version 6 and above use weak symbols\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl--rpath $wl$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n            ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname  -o $lib $wl-retain-symbols-file $wl$export_symbols'\n\n\t    runpath_var=LD_RUN_PATH\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"X$list\" | $Xsed'\n\t    ;;\n\t  xl* | mpixl* | bgxl*)\n\t    # IBM XL 8.0 on PPC, with GNU ld\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    if test yes = \"$supports_anon_versioning\"; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n                cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n                echo \"local: *; };\" >> $output_objdir/$libname.ver~\n                $CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n\t    fi\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file $wl$export_symbols'\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t      _LT_TAGVAR(compiler_needs_object, $1)=yes\n\n\t      # Not sure whether something based on\n\t      # $CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1\n\t      # would be better.\n\t      output_verbose_link_cmd='func_echo_all'\n\n\t      # Archives containing C++ object files must be created using\n\t      # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t      # necessary to make sure instantiated templates are included\n\t      # in the archive.\n\t      _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n\n      lynxos*)\n        # FIXME: insert proper C++ library support\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      m88k*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      mvs*)\n        case $cc_basename in\n          cxx*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\t  *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\tesac\n\t;;\n\n      netbsd*)\n        if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n\t  wlarc=\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\tfi\n\t# Workaround some broken pre-1.5 toolchains\n\toutput_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n\t;;\n\n      *nto* | *qnx*)\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n\t;;\n\n      openbsd* | bitrig*)\n\tif test -f /usr/libexec/ld.so; then\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file,$export_symbols -o $lib'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n\t  fi\n\t  output_verbose_link_cmd=func_echo_all\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      osf3* | osf4* | osf5*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo \"$lib\" | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Archives containing C++ object files must be created using\n\t    # the KAI C++ compiler.\n\t    case $host in\n\t      osf3*) _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs' ;;\n\t      *) _LT_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs' ;;\n\t    esac\n\t    ;;\n          RCC*)\n\t    # Rational C++ 2.4.1\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          cxx*)\n\t    case $host in\n\t      osf3*)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t\t;;\n\t      *)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n                  echo \"-hidden\">> $lib.exp~\n                  $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname $wl-input $wl$lib.exp  `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~\n                  $RM $lib.exp'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t\t;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\" | $GREP -v \"ld:\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n\t  *)\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t      case $host in\n\t        osf3*)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t        *)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t      esac\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t      # Commands to make compiler produce verbose output that lists\n\t      # what \"hidden\" libraries, object files and flags are used when\n\t      # linking a shared library.\n\t      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      psos*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      sunos4*)\n        case $cc_basename in\n          CC*)\n\t    # Sun C++ 4.x\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          lcc*)\n\t    # Lucid\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      solaris*)\n        case $cc_basename in\n          CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n            _LT_TAGVAR(archive_cmds_need_lc,$1)=yes\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n              $CC -G$allow_undefined_flag $wl-M $wl$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t    _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t    case $host_os in\n\t      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t      *)\n\t\t# The compiler driver will combine and reorder linker options,\n\t\t# but understands '-z linker_flag'.\n\t        # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t\t_LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\t        ;;\n\t    esac\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\n\t    output_verbose_link_cmd='func_echo_all'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t    ;;\n          gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\n\t    # The C++ compiler must be used to create the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    # GNU C++ compiler with Solaris linker\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' $wl-z ${wl}defs'\n\t      if $CC --version | $GREP -v '^2\\.7' > /dev/null; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -shared $pic_flag -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      else\n\t        # g++ 2.7 appears to require '-G' NOT '-shared' on this\n\t        # platform.\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -G -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      fi\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $wl$libdir'\n\t      case $host_os in\n\t\tsolaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t\t*)\n\t\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\t\t  ;;\n\t      esac\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      case $cc_basename in\n        CC*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n      esac\n      ;;\n\n      sysv5* | sco3.2v5* | sco5v6*)\n\t# Note: We CANNOT use -z defs as we might desire, because we do not\n\t# link with -lc, and that would cause any symbols used from libc to\n\t# always be unresolved, which means just about no library would\n\t# ever link correctly.  If we're not using GNU ld we use -z text\n\t# though, which does catch some bad symbols but isn't as heavy-handed\n\t# as -z defs.\n\t_LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n\t_LT_TAGVAR(allow_undefined_flag, $1)='$wl-z,nodefs'\n\t_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R,$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n\t_LT_TAGVAR(link_all_deplibs, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Bexport'\n\trunpath_var='LD_RUN_PATH'\n\n\tcase $cc_basename in\n          CC*)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Tprelink_objects $oldobjs~\n              '\"$_LT_TAGVAR(old_archive_cmds, $1)\"\n\t    _LT_TAGVAR(reload_cmds, $1)='$CC -Tprelink_objects $reload_objs~\n              '\"$_LT_TAGVAR(reload_cmds, $1)\"\n\t    ;;\n\t  *)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    ;;\n\tesac\n      ;;\n\n      tandem*)\n        case $cc_basename in\n          NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      vxworks*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      *)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n    esac\n\n    AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\n    test no = \"$_LT_TAGVAR(ld_shlibs, $1)\" && can_build_shared=no\n\n    _LT_TAGVAR(GCC, $1)=$GXX\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\n  LDCXX=$LD\n  LD=$lt_save_LD\n  GCC=$lt_save_GCC\n  with_gnu_ld=$lt_save_with_gnu_ld\n  lt_cv_path_LDCXX=$lt_cv_path_LD\n  lt_cv_path_LD=$lt_save_path_LD\n  lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\n  lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\nfi # test yes != \"$_lt_caught_CXX_error\"\n\nAC_LANG_POP\n])# _LT_LANG_CXX_CONFIG\n\n\n# _LT_FUNC_STRIPNAME_CNF\n# ----------------------\n# func_stripname_cnf prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\n#\n# This function is identical to the (non-XSI) version of func_stripname,\n# except this one can be used by m4 code that may be executed by configure,\n# rather than the libtool script.\nm4_defun([_LT_FUNC_STRIPNAME_CNF],[dnl\nAC_REQUIRE([_LT_DECL_SED])\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])\nfunc_stripname_cnf ()\n{\n  case @S|@2 in\n  .*) func_stripname_result=`$ECHO \"@S|@3\" | $SED \"s%^@S|@1%%; s%\\\\\\\\@S|@2\\$%%\"`;;\n  *)  func_stripname_result=`$ECHO \"@S|@3\" | $SED \"s%^@S|@1%%; s%@S|@2\\$%%\"`;;\n  esac\n} # func_stripname_cnf\n])# _LT_FUNC_STRIPNAME_CNF\n\n# _LT_SYS_HIDDEN_LIBDEPS([TAGNAME])\n# ---------------------------------\n# Figure out \"hidden\" library dependencies from verbose\n# compiler output when linking a shared library.\n# Parse the compiler output and extract the necessary\n# objects, libraries and library flags.\nm4_defun([_LT_SYS_HIDDEN_LIBDEPS],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nAC_REQUIRE([_LT_FUNC_STRIPNAME_CNF])dnl\n# Dependencies to place before and after the object being linked:\n_LT_TAGVAR(predep_objects, $1)=\n_LT_TAGVAR(postdep_objects, $1)=\n_LT_TAGVAR(predeps, $1)=\n_LT_TAGVAR(postdeps, $1)=\n_LT_TAGVAR(compiler_lib_search_path, $1)=\n\ndnl we can't use the lt_simple_compile_test_code here,\ndnl because it contains code intended for an executable,\ndnl not a library.  It's possible we should let each\ndnl tag define a new lt_????_link_test_code variable,\ndnl but it's only used here...\nm4_if([$1], [], [cat > conftest.$ac_ext <<_LT_EOF\nint a;\nvoid foo (void) { a = 0; }\n_LT_EOF\n], [$1], [CXX], [cat > conftest.$ac_ext <<_LT_EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\n_LT_EOF\n], [$1], [F77], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer*4 a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [FC], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [GCJ], [cat > conftest.$ac_ext <<_LT_EOF\npublic class foo {\n  private int a;\n  public void bar (void) {\n    a = 0;\n  }\n};\n_LT_EOF\n], [$1], [GO], [cat > conftest.$ac_ext <<_LT_EOF\npackage foo\nfunc foo() {\n}\n_LT_EOF\n])\n\n_lt_libdeps_save_CFLAGS=$CFLAGS\ncase \"$CC $CFLAGS \" in #(\n*\\ -flto*\\ *) CFLAGS=\"$CFLAGS -fno-lto\" ;;\n*\\ -fwhopr*\\ *) CFLAGS=\"$CFLAGS -fno-whopr\" ;;\n*\\ -fuse-linker-plugin*\\ *) CFLAGS=\"$CFLAGS -fno-use-linker-plugin\" ;;\nesac\n\ndnl Parse the compiler output and extract the necessary\ndnl objects, libraries and library flags.\nif AC_TRY_EVAL(ac_compile); then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  for p in `eval \"$output_verbose_link_cmd\"`; do\n    case $prev$p in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test x-L = \"$p\" ||\n          test x-R = \"$p\"; then\n\t prev=$p\n\t continue\n       fi\n\n       # Expand the sysroot to ease extracting the directories later.\n       if test -z \"$prev\"; then\n         case $p in\n         -L*) func_stripname_cnf '-L' '' \"$p\"; prev=-L; p=$func_stripname_result ;;\n         -R*) func_stripname_cnf '-R' '' \"$p\"; prev=-R; p=$func_stripname_result ;;\n         -l*) func_stripname_cnf '-l' '' \"$p\"; prev=-l; p=$func_stripname_result ;;\n         esac\n       fi\n       case $p in\n       =*) func_stripname_cnf '=' '' \"$p\"; p=$lt_sysroot$func_stripname_result ;;\n       esac\n       if test no = \"$pre_test_object_deps_done\"; then\n\t case $prev in\n\t -L | -R)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$_LT_TAGVAR(compiler_lib_search_path, $1)\"; then\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=$prev$p\n\t   else\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${_LT_TAGVAR(compiler_lib_search_path, $1)} $prev$p\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$_LT_TAGVAR(postdeps, $1)\"; then\n\t   _LT_TAGVAR(postdeps, $1)=$prev$p\n\t else\n\t   _LT_TAGVAR(postdeps, $1)=\"${_LT_TAGVAR(postdeps, $1)} $prev$p\"\n\t fi\n       fi\n       prev=\n       ;;\n\n    *.lto.$objext) ;; # Ignore GCC LTO objects\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test no = \"$pre_test_object_deps_done\"; then\n\t if test -z \"$_LT_TAGVAR(predep_objects, $1)\"; then\n\t   _LT_TAGVAR(predep_objects, $1)=$p\n\t else\n\t   _LT_TAGVAR(predep_objects, $1)=\"$_LT_TAGVAR(predep_objects, $1) $p\"\n\t fi\n       else\n\t if test -z \"$_LT_TAGVAR(postdep_objects, $1)\"; then\n\t   _LT_TAGVAR(postdep_objects, $1)=$p\n\t else\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$_LT_TAGVAR(postdep_objects, $1) $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling $1 test program\"\nfi\n\n$RM -f confest.$objext\nCFLAGS=$_lt_libdeps_save_CFLAGS\n\n# PORTME: override above test on systems where it is broken\nm4_if([$1], [CXX],\n[case $host_os in\ninterix[[3-9]]*)\n  # Interix 3.5 installs completely hosed .la files for C++, so rather than\n  # hack all around it, let's just trust \"g++\" to DTRT.\n  _LT_TAGVAR(predep_objects,$1)=\n  _LT_TAGVAR(postdep_objects,$1)=\n  _LT_TAGVAR(postdeps,$1)=\n  ;;\n\nlinux*)\n  case `$CC -V 2>&1 | sed 5q` in\n  *Sun\\ C*)\n    # Sun C++ 5.9\n\n    # The more standards-conforming stlport4 library is\n    # incompatible with the Cstd library. Avoid specifying\n    # it if it's in CXXFLAGS. Ignore libCrun as\n    # -library=stlport4 depends on it.\n    case \" $CXX $CXXFLAGS \" in\n    *\" -library=stlport4 \"*)\n      solaris_use_stlport4=yes\n      ;;\n    esac\n\n    if test yes != \"$solaris_use_stlport4\"; then\n      _LT_TAGVAR(postdeps,$1)='-library=Cstd -library=Crun'\n    fi\n    ;;\n  esac\n  ;;\n\nsolaris*)\n  case $cc_basename in\n  CC* | sunCC*)\n    # The more standards-conforming stlport4 library is\n    # incompatible with the Cstd library. Avoid specifying\n    # it if it's in CXXFLAGS. Ignore libCrun as\n    # -library=stlport4 depends on it.\n    case \" $CXX $CXXFLAGS \" in\n    *\" -library=stlport4 \"*)\n      solaris_use_stlport4=yes\n      ;;\n    esac\n\n    # Adding this requires a known-good setup of shared libraries for\n    # Sun compiler versions before 5.6, else PIC objects from an old\n    # archive will be linked into the output, leading to subtle bugs.\n    if test yes != \"$solaris_use_stlport4\"; then\n      _LT_TAGVAR(postdeps,$1)='-library=Cstd -library=Crun'\n    fi\n    ;;\n  esac\n  ;;\nesac\n])\n\ncase \" $_LT_TAGVAR(postdeps, $1) \" in\n*\" -lc \"*) _LT_TAGVAR(archive_cmds_need_lc, $1)=no ;;\nesac\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=\nif test -n \"${_LT_TAGVAR(compiler_lib_search_path, $1)}\"; then\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=`echo \" ${_LT_TAGVAR(compiler_lib_search_path, $1)}\" | $SED -e 's! -L! !g' -e 's!^ !!'`\nfi\n_LT_TAGDECL([], [compiler_lib_search_dirs], [1],\n    [The directories searched by this compiler when creating a shared library])\n_LT_TAGDECL([], [predep_objects], [1],\n    [Dependencies to place before and after the objects being linked to\n    create a shared library])\n_LT_TAGDECL([], [postdep_objects], [1])\n_LT_TAGDECL([], [predeps], [1])\n_LT_TAGDECL([], [postdeps], [1])\n_LT_TAGDECL([], [compiler_lib_search_path], [1],\n    [The library search path used internally by the compiler when linking\n    a shared library])\n])# _LT_SYS_HIDDEN_LIBDEPS\n\n\n# _LT_LANG_F77_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a Fortran 77 compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_F77_CONFIG],\n[AC_LANG_PUSH(Fortran 77)\nif test -z \"$F77\" || test no = \"$F77\"; then\n  _lt_disable_F77=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for f77 test sources.\nac_ext=f\n\n# Object file extension for compiled f77 test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the F77 compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_disable_F77\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${F77-\"f77\"}\n  CFLAGS=$FFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n  GCC=$G77\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test no = \"$can_build_shared\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test yes = \"$enable_shared\" && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test ia64 != \"$host_cpu\" && test no = \"$aix_use_runtimelinking\"; then\n\t  test yes = \"$enable_shared\" && enable_static=no\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test yes = \"$enable_shared\" || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=$G77\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test yes != \"$_lt_disable_F77\"\n\nAC_LANG_POP\n])# _LT_LANG_F77_CONFIG\n\n\n# _LT_LANG_FC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for a Fortran compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_FC_CONFIG],\n[AC_LANG_PUSH(Fortran)\n\nif test -z \"$FC\" || test no = \"$FC\"; then\n  _lt_disable_FC=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for fc test sources.\nac_ext=${ac_fc_srcext-f}\n\n# Object file extension for compiled fc test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the FC compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_disable_FC\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${FC-\"f95\"}\n  CFLAGS=$FCFLAGS\n  compiler=$CC\n  GCC=$ac_cv_fc_compiler_gnu\n\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test no = \"$can_build_shared\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test yes = \"$enable_shared\" && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test ia64 != \"$host_cpu\" && test no = \"$aix_use_runtimelinking\"; then\n\t  test yes = \"$enable_shared\" && enable_static=no\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test yes = \"$enable_shared\" || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=$ac_cv_fc_compiler_gnu\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test yes != \"$_lt_disable_FC\"\n\nAC_LANG_POP\n])# _LT_LANG_FC_CONFIG\n\n\n# _LT_LANG_GCJ_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Java Compiler compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_GCJ_CONFIG],\n[AC_REQUIRE([LT_PROG_GCJ])dnl\nAC_LANG_SAVE\n\n# Source file extension for Java test sources.\nac_ext=java\n\n# Object file extension for compiled Java test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"class foo {}\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GCJ-\"gcj\"}\nCFLAGS=$GCJFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=$LD\n_LT_CC_BASENAME([$compiler])\n\n# GCJ did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GCJ_CONFIG\n\n\n# _LT_LANG_GO_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Go compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_GO_CONFIG],\n[AC_REQUIRE([LT_PROG_GO])dnl\nAC_LANG_SAVE\n\n# Source file extension for Go test sources.\nac_ext=go\n\n# Object file extension for compiled Go test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"package main; func main() { }\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='package main; func main() { }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GOC-\"gccgo\"}\nCFLAGS=$GOFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=$LD\n_LT_CC_BASENAME([$compiler])\n\n# Go did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GO_CONFIG\n\n\n# _LT_LANG_RC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for the Windows resource compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_RC_CONFIG],\n[AC_REQUIRE([LT_PROG_RC])dnl\nAC_LANG_SAVE\n\n# Source file extension for RC test sources.\nac_ext=rc\n\n# Object file extension for compiled RC test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code='sample MENU { MENUITEM \"&Soup\", 100, CHECKED }'\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=$lt_simple_compile_test_code\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=\nCC=${RC-\"windres\"}\nCFLAGS=\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n\nif test -n \"$compiler\"; then\n  :\n  _LT_CONFIG($1)\nfi\n\nGCC=$lt_save_GCC\nAC_LANG_RESTORE\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_RC_CONFIG\n\n\n# LT_PROG_GCJ\n# -----------\nAC_DEFUN([LT_PROG_GCJ],\n[m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],\n  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],\n    [AC_CHECK_TOOL(GCJ, gcj,)\n      test set = \"${GCJFLAGS+set}\" || GCJFLAGS=\"-g -O2\"\n      AC_SUBST(GCJFLAGS)])])[]dnl\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_GCJ], [LT_PROG_GCJ])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_GCJ], [])\n\n\n# LT_PROG_GO\n# ----------\nAC_DEFUN([LT_PROG_GO],\n[AC_CHECK_TOOL(GOC, gccgo,)\n])\n\n\n# LT_PROG_RC\n# ----------\nAC_DEFUN([LT_PROG_RC],\n[AC_CHECK_TOOL(RC, windres,)\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_RC], [LT_PROG_RC])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_RC], [])\n\n\n# _LT_DECL_EGREP\n# --------------\n# If we don't have a new enough Autoconf to choose the best grep\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_EGREP],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_REQUIRE([AC_PROG_FGREP])dnl\ntest -z \"$GREP\" && GREP=grep\n_LT_DECL([], [GREP], [1], [A grep program that handles long lines])\n_LT_DECL([], [EGREP], [1], [An ERE matcher])\n_LT_DECL([], [FGREP], [1], [A literal string matcher])\ndnl Non-bleeding-edge autoconf doesn't subst GREP, so do it here too\nAC_SUBST([GREP])\n])\n\n\n# _LT_DECL_OBJDUMP\n# --------------\n# If we don't have a new enough Autoconf to choose the best objdump\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_OBJDUMP],\n[AC_CHECK_TOOL(OBJDUMP, objdump, false)\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [An object symbol dumper])\nAC_SUBST([OBJDUMP])\n])\n\n# _LT_DECL_DLLTOOL\n# ----------------\n# Ensure DLLTOOL variable is set.\nm4_defun([_LT_DECL_DLLTOOL],\n[AC_CHECK_TOOL(DLLTOOL, dlltool, false)\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n_LT_DECL([], [DLLTOOL], [1], [DLL creation program])\nAC_SUBST([DLLTOOL])\n])\n\n# _LT_DECL_SED\n# ------------\n# Check for a fully-functional sed program, that truncates\n# as few characters as possible.  Prefer GNU sed if found.\nm4_defun([_LT_DECL_SED],\n[AC_PROG_SED\ntest -z \"$SED\" && SED=sed\nXsed=\"$SED -e 1s/^X//\"\n_LT_DECL([], [SED], [1], [A sed program that does not truncate output])\n_LT_DECL([], [Xsed], [\"\\$SED -e 1s/^X//\"],\n    [Sed that helps us avoid accidentally triggering echo(1) options like -n])\n])# _LT_DECL_SED\n\nm4_ifndef([AC_PROG_SED], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_SED.  When it is available in   #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\n\nm4_defun([AC_PROG_SED],\n[AC_MSG_CHECKING([for a sed that does not truncate output])\nAC_CACHE_VAL(lt_cv_path_SED,\n[# Loop through the user's path and test for sed and gsed.\n# Then use that list of sed's as ones to test for truncation.\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  for lt_ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      if $as_executable_p \"$as_dir/$lt_ac_prog$ac_exec_ext\"; then\n        lt_ac_sed_list=\"$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext\"\n      fi\n    done\n  done\ndone\nIFS=$as_save_IFS\nlt_ac_max=0\nlt_ac_count=0\n# Add /usr/xpg4/bin/sed as it is typically found on Solaris\n# along with /bin/sed that truncates output.\nfor lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do\n  test ! -f \"$lt_ac_sed\" && continue\n  cat /dev/null > conftest.in\n  lt_ac_count=0\n  echo $ECHO_N \"0123456789$ECHO_C\" >conftest.in\n  # Check for GNU sed and select it if it is found.\n  if \"$lt_ac_sed\" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then\n    lt_cv_path_SED=$lt_ac_sed\n    break\n  fi\n  while true; do\n    cat conftest.in conftest.in >conftest.tmp\n    mv conftest.tmp conftest.in\n    cp conftest.in conftest.nl\n    echo >>conftest.nl\n    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break\n    cmp -s conftest.out conftest.nl || break\n    # 10000 chars as input seems more than enough\n    test 10 -lt \"$lt_ac_count\" && break\n    lt_ac_count=`expr $lt_ac_count + 1`\n    if test \"$lt_ac_count\" -gt \"$lt_ac_max\"; then\n      lt_ac_max=$lt_ac_count\n      lt_cv_path_SED=$lt_ac_sed\n    fi\n  done\ndone\n])\nSED=$lt_cv_path_SED\nAC_SUBST([SED])\nAC_MSG_RESULT([$SED])\n])#AC_PROG_SED\n])#m4_ifndef\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_SED], [AC_PROG_SED])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_SED], [])\n\n\n# _LT_CHECK_SHELL_FEATURES\n# ------------------------\n# Find out whether the shell is Bourne or XSI compatible,\n# or has some other useful features.\nm4_defun([_LT_CHECK_SHELL_FEATURES],\n[if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then\n  lt_unset=unset\nelse\n  lt_unset=false\nfi\n_LT_DECL([], [lt_unset], [0], [whether the shell understands \"unset\"])dnl\n\n# test EBCDIC or ASCII\ncase `echo X|tr X '\\101'` in\n A) # ASCII based system\n    # \\n is not interpreted correctly by Solaris 8 /usr/ucb/tr\n  lt_SP2NL='tr \\040 \\012'\n  lt_NL2SP='tr \\015\\012 \\040\\040'\n  ;;\n *) # EBCDIC based system\n  lt_SP2NL='tr \\100 \\n'\n  lt_NL2SP='tr \\r\\n \\100\\100'\n  ;;\nesac\n_LT_DECL([SP2NL], [lt_SP2NL], [1], [turn spaces into newlines])dnl\n_LT_DECL([NL2SP], [lt_NL2SP], [1], [turn newlines into spaces])dnl\n])# _LT_CHECK_SHELL_FEATURES\n\n\n# _LT_PATH_CONVERSION_FUNCTIONS\n# -----------------------------\n# Determine what file name conversion functions should be used by\n# func_to_host_file (and, implicitly, by func_to_host_path).  These are needed\n# for certain cross-compile configurations and native mingw.\nm4_defun([_LT_PATH_CONVERSION_FUNCTIONS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_MSG_CHECKING([how to convert $build file names to $host format])\nAC_CACHE_VAL(lt_cv_to_host_file_cmd,\n[case $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_w32\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_cygwin_to_w32\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_w32\n        ;;\n    esac\n    ;;\n  *-*-cygwin* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_cygwin\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_noop\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_cygwin\n        ;;\n    esac\n    ;;\n  * ) # unhandled hosts (and \"normal\" native builds)\n    lt_cv_to_host_file_cmd=func_convert_file_noop\n    ;;\nesac\n])\nto_host_file_cmd=$lt_cv_to_host_file_cmd\nAC_MSG_RESULT([$lt_cv_to_host_file_cmd])\n_LT_DECL([to_host_file_cmd], [lt_cv_to_host_file_cmd],\n         [0], [convert $build file names to $host format])dnl\n\nAC_MSG_CHECKING([how to convert $build file names to toolchain format])\nAC_CACHE_VAL(lt_cv_to_tool_file_cmd,\n[#assume ordinary cross tools, or native build.\nlt_cv_to_tool_file_cmd=func_convert_file_noop\ncase $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_tool_file_cmd=func_convert_file_msys_to_w32\n        ;;\n    esac\n    ;;\nesac\n])\nto_tool_file_cmd=$lt_cv_to_tool_file_cmd\nAC_MSG_RESULT([$lt_cv_to_tool_file_cmd])\n_LT_DECL([to_tool_file_cmd], [lt_cv_to_tool_file_cmd],\n         [0], [convert $build files to toolchain format])dnl\n])# _LT_PATH_CONVERSION_FUNCTIONS\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/tarfile.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/shlex.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/heapq.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/plat-mac/dialogs.rsrc",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/plat-mac/macerrors.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/plat-mac/errors.rsrc",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/ensurepip/_bundled/pip-19.2.3-py2.py3-none-any.whl",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/ensurepip/_bundled/setuptools-41.2.0-py2.py3-none-any.whl",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/encodings/string_escape.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/encodings/punycode.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/msilib/__init__.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/sqlite3/__init__.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/sqlite3/dbapi2.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/sqlite3/test/transactions.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/sqlite3/test/py25tests.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/sqlite3/test/hooks.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/sqlite3/test/types.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/sqlite3/test/factory.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/sqlite3/test/dbapi.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/sqlite3/test/userfunctions.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/sqlite3/test/regression.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/idlelib/NEWS.txt",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/idlelib/Icons/idle.ico",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/idlelib/Icons/plusnode.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/idlelib/Icons/idle_32.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/idlelib/Icons/idle_48.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/idlelib/Icons/idle_16.png",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/idlelib/Icons/folder.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/idlelib/Icons/openfolder.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/idlelib/Icons/minusnode.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/idlelib/Icons/tk.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/idlelib/Icons/python.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/idlelib/Icons/idle.icns",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/idlelib/Icons/idle_48.png",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/idlelib/Icons/idle_32.png",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/idlelib/Icons/idle_16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/test_shlex.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/test_marshal.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/test_csv.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/testtar.tar",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/zipdir.zip",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/test_cookielib.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/sgml_input.html",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/Sine-1000Hz-300ms.aif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/audiotest.au",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/185test.db",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/test_source_encoding.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/audiodata/pluck-pcm8.au",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/audiodata/pluck-pcm24.wav",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/audiodata/pluck-pcm8.wav",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/audiodata/pluck-pcm24.aiff",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/audiodata/pluck-pcm8.aiff",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/audiodata/pluck-pcm16.au",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/audiodata/pluck-ulaw.au",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/audiodata/pluck-pcm32.au",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/audiodata/pluck-pcm32.aiff",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/audiodata/pluck-pcm16.wav",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/audiodata/pluck-ulaw.aifc",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/audiodata/pluck-pcm32.wav",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/audiodata/pluck-pcm16.aiff",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/cjkencodings/johab.txt",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/cjkencodings/shift_jis.txt",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/cjkencodings/gb18030.txt",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/cjkencodings/euc_jp.txt",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/cjkencodings/big5.txt",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/cjkencodings/euc_jisx0213.txt",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/cjkencodings/big5hkscs.txt",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/cjkencodings/euc_kr.txt",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/cjkencodings/shift_jisx0213.txt",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/cjkencodings/gb2312.txt",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/cjkencodings/gbk.txt",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/cjkencodings/cp949.txt",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/imghdrdata/python.ppm",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/imghdrdata/python.pbm",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/imghdrdata/python.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/imghdrdata/python.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/imghdrdata/python.ras",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/imghdrdata/python.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/imghdrdata/python.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/imghdrdata/python.pgm",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/imghdrdata/python.png",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/imghdrdata/python.sgi",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/xmltestdata/test.xml",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/test/xmltestdata/test.xml.out",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/email/test/data/msg_15.txt",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/email/test/data/PyBanner048.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/email/test/data/audiotest.au",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/distutils/command/wininst-9.0.exe",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/distutils/command/wininst-8.0.exe",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/distutils/command/wininst-6.0.exe",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/distutils/command/bdist_msi.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/distutils/command/wininst-7.1.exe",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/distutils/command/wininst-9.0-amd64.exe",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Lib/ctypes/test/test_unicode.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/BuildScript/resources/background.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Resources/app/Resources/PythonApplet.icns",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Resources/app/Resources/PythonInterpreter.icns",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/PythonLauncher/English.lproj/MyDocument.nib/objects.nib",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/PythonLauncher/English.lproj/MainMenu.nib/objects.nib",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/PythonLauncher/English.lproj/PreferenceWindow.nib/objects.nib",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Demo/applescript/Disk_Copy/Standard_Suite.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Demo/applescript/Disk_Copy/Special_Events.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Demo/example2/dnslookup-2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Demo/example2/dnslookup-2.rsrc",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Demo/resources/copyres.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Demo/PICTbrowse/oldPICTbrowse.rsrc",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Demo/PICTbrowse/PICTbrowse.rsrc",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Demo/html.icons/options.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Demo/html.icons/createmake.png",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Demo/html.icons/mkapplet.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Demo/html.icons/python.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Demo/html.icons/preferences.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Demo/example1/dnslookup-1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Demo/example1/dnslookup-1.rsrc",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/scripts/BuildApplet.rsrc",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/scripts/errors.txt",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/scripts/BuildApplet.icns",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Icons/Python Folder.icns",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Icons/PythonSource.icns",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Icons/Disk Image.icns",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Icons/PythonLauncher.icns",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Icons/PythonCompiled.icns",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Icons/IDLE.icns",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Modules/cg/CFMLateImport.c",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Mac/Modules/cg/CFMLateImport.h",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Tools/msi/WixCA.blob",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Tools/i18n/msgfmt.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Tools/i18n/pygettext.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Tools/scripts/hotshotmain.py",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Objects/listsort.txt",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Doc/howto/logging_flow.png",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Doc/tools/static/py.png",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Doc/faq/python-video-icon.png",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/PC/py.ico",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/PC/python_nt.rc",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/PC/_msi.c",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/PC/pyc.ico",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/PC/pycon.ico",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/PC/bdist_wininst/PythonPowered.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/PC/VS7.1/python.iss",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/PC/VS7.1/python20.wse",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/PC/VS7.1/installer.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/PC/VS9.0/installer.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/PCbuild/installer.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Demo/tkinter/ttk/img/close.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Demo/tkinter/ttk/img/close_active.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Demo/tkinter/ttk/img/close_pressed.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Demo/tix/bitmaps/tix.gif",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_heapqmodule.c",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/unicodedata.c",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/prepare_protocol.h",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/connection.c",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/cursor.c",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/cache.h",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/statement.h",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/sqlitecompat.h",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/statement.c",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/cache.c",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/util.h",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/module.c",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/row.c",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/util.c",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/prepare_protocol.c",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/module.h",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/row.h",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/connection.h",
        "/tmp/vanessa/spack-stage/spack-stage-python-2.7.18-yhwstxmfv2mgf4rasnrkvc2x6kyp3ixg/spack-src/Modules/_sqlite/cursor.h"
    ],
    "total_files": 4386
}