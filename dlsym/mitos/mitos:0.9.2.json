{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-mitos-0.9.2-yakcluyi6d7nyqaskapav2q2csxzfkmc/spack-src/src/mitoshooks.cpp": "#include \"mitoshooks.h\"\n\n#include \"Mitos.h\"\n\n#include <stdio.h>\n#include <dlfcn.h>\n\n#include <unistd.h>\n#include <sys/syscall.h>\n\nstruct func_args\n{\n    void *(*func)(void*);\n    void *args;\n};\n\nvoid* routine_wrapper(void *args)\n{\n    func_args *routine_struct = (func_args*)args;\n\n    Mitos_begin_sampler();\n\n    return routine_struct->func(routine_struct->args);\n}\n\n// pthread hooks\nint pthread_create(pthread_t *thread, pthread_attr_t *attr, void *(*start_routine) (void*), void *arg)\n{\n    //fprintf(stderr, \"pthread_create hook\\n\");\n    static pthread_create_fn_t og_pthread_create = NULL;\n    if(!og_pthread_create)\n        og_pthread_create = (pthread_create_fn_t)dlsym(RTLD_NEXT, \"pthread_create\");\n\n    struct func_args *f = (struct func_args*)malloc(sizeof(struct func_args));\n    f->func = start_routine;\n    f->args = arg;\n\n    return og_pthread_create(thread, attr, routine_wrapper, f);\n}\n\nvoid pthread_exit(void *retval)\n{\n    //fprintf(stderr, \"pthread_exit hook\\n\");\n    static pthread_exit_fn_t og_pthread_exit = NULL;\n    if(!og_pthread_exit)\n        og_pthread_exit = (pthread_exit_fn_t)dlsym(RTLD_NEXT, \"pthread_exit\");\n\n    Mitos_end_sampler();\n\n    og_pthread_exit(retval);\n}\n\n// MPI hooks\nmitos_output mout;\n\nvoid sample_handler(perf_event_sample *sample, void *args)\n{\n    //fprintf(stderr, \"MPI handler sample: cpu=%d, tid=%d\\n\", sample->cpu, sample->tid);\n    Mitos_write_sample(sample, &mout);\n}\n\nint MPI_Init(int *argc, char ***argv)\n{\n    //fprintf(stderr, \"MPI_Init hook\\n\");\n    int ret = PMPI_Init(argc, argv);\n\n    int mpi_rank;\n    MPI_Comm_rank(MPI_COMM_WORLD, &mpi_rank);\n\n    char rank_prefix[32];\n    sprintf(rank_prefix, \"rank_%d\", mpi_rank);\n\n    Mitos_create_output(&mout, rank_prefix);\n    Mitos_pre_process(&mout);\n\n    Mitos_set_handler_fn(&sample_handler,NULL);\n    Mitos_set_sample_latency_threshold(3);\n    Mitos_set_sample_time_frequency(4000);\n    Mitos_begin_sampler();\n\n    return ret;\n}\n\nint MPI_Init_thread(int *argc, char ***argv, int required, int *provided)\n{\n    //fprintf(stderr, \"MPI_Init_thread hook\\n\");\n    int ret = PMPI_Init_thread(argc, argv, required, provided);\n\n    int mpi_rank;\n    MPI_Comm_rank(MPI_COMM_WORLD, &mpi_rank);\n\n    char rank_prefix[32];\n    sprintf(rank_prefix, \"rank_%d\", mpi_rank);\n\n    Mitos_create_output(&mout, rank_prefix);\n    Mitos_pre_process(&mout);\n\n    Mitos_set_handler_fn(&sample_handler,NULL);\n    Mitos_set_sample_latency_threshold(3);\n    Mitos_set_sample_time_frequency(4000);\n    Mitos_begin_sampler();\n\n    return ret;\n}\n\nint MPI_Finalize()\n{\n    //fprintf(stderr, \"MPI_Finalize hook\\n\");\n    Mitos_end_sampler();\n    Mitos_post_process(\"/proc/self/exe\", &mout);\n\n    return PMPI_Finalize();\n}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-mitos-0.9.2-yakcluyi6d7nyqaskapav2q2csxzfkmc/spack-src/.git/objects/pack/pack-e80efed041374cc89bc0c11b65a073235b8da386.idx",
        "/tmp/vanessa/spack-stage/spack-stage-mitos-0.9.2-yakcluyi6d7nyqaskapav2q2csxzfkmc/spack-src/.git/objects/pack/pack-e80efed041374cc89bc0c11b65a073235b8da386.pack"
    ],
    "total_files": 40
}