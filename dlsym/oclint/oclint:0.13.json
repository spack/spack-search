{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-oclint-0.13-ue53b2dlz5lcxhzgry6ohrqhrbzzexci/spack-src/oclint-driver/reporters_dlfcn_port.cpp": "#include <dirent.h>\n#include <dlfcn.h>\n#include <iostream>\n\n#include \"oclint/GenericException.h\"\n#include \"oclint/Options.h\"\n\n#include \"reporters.h\"\n\nstatic oclint::Reporter* selectedReporter = nullptr;\n\nvoid loadReporter()\n{\n    selectedReporter = nullptr;\n    std::string reportDirPath = oclint::option::reporterPath();\n    DIR *pDir = opendir(reportDirPath.c_str());\n    if (pDir != nullptr)\n    {\n        struct dirent *dirp;\n        while ((dirp = readdir(pDir)))\n        {\n            if (dirp->d_name[0] == '.')\n            {\n                continue;\n            }\n            std::string reporterPath = reportDirPath + \"/\" + std::string(dirp->d_name);\n            void *reporterHandle = dlopen(reporterPath.c_str(), RTLD_LAZY);\n            if (reporterHandle == nullptr)\n            {\n                std::cerr << dlerror() << std::endl;\n                closedir(pDir);\n                throw oclint::GenericException(\"cannot open dynamic library: \" + reporterPath);\n            }\n            oclint::Reporter* (*createMethodPointer)();\n            createMethodPointer = (oclint::Reporter* (*)())dlsym(reporterHandle, \"create\");\n            oclint::Reporter* reporter = (oclint::Reporter*)createMethodPointer();\n            if (reporter->name() == oclint::option::reportType())\n            {\n                selectedReporter = reporter;\n                break;\n            }\n        }\n        closedir(pDir);\n    }\n    if (selectedReporter == nullptr)\n    {\n        throw oclint::GenericException(\n            \"cannot find dynamic library for report type: \" + oclint::option::reportType());\n    }\n}\n\noclint::Reporter* reporter()\n{\n    return selectedReporter;\n}\n"
    },
    "skipped": [],
    "total_files": 320
}