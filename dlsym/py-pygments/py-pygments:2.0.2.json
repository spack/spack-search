{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/pygments/lexers/julia.py": "# -*- coding: utf-8 -*-\n\"\"\"\n    pygments.lexers.julia\n    ~~~~~~~~~~~~~~~~~~~~~\n\n    Lexers for the Julia language.\n\n    :copyright: Copyright 2006-2014 by the Pygments team, see AUTHORS.\n    :license: BSD, see LICENSE for details.\n\"\"\"\n\nimport re\n\nfrom pygments.lexer import Lexer, RegexLexer, bygroups, combined, do_insertions\nfrom pygments.token import Text, Comment, Operator, Keyword, Name, String, \\\n    Number, Punctuation, Generic\nfrom pygments.util import shebang_matches\n\n__all__ = ['JuliaLexer', 'JuliaConsoleLexer']\n\n\nclass JuliaLexer(RegexLexer):\n    \"\"\"\n    For `Julia <http://julialang.org/>`_ source code.\n\n    .. versionadded:: 1.6\n    \"\"\"\n    name = 'Julia'\n    aliases = ['julia', 'jl']\n    filenames = ['*.jl']\n    mimetypes = ['text/x-julia', 'application/x-julia']\n\n    builtins = [\n        'exit', 'whos', 'edit', 'load', 'is', 'isa', 'isequal', 'typeof', 'tuple',\n        'ntuple', 'uid', 'hash', 'finalizer', 'convert', 'promote', 'subtype',\n        'typemin', 'typemax', 'realmin', 'realmax', 'sizeof', 'eps', 'promote_type',\n        'method_exists', 'applicable', 'invoke', 'dlopen', 'dlsym', 'system',\n        'error', 'throw', 'assert', 'new', 'Inf', 'Nan', 'pi', 'im',\n    ]\n\n    tokens = {\n        'root': [\n            (r'\\n', Text),\n            (r'[^\\S\\n]+', Text),\n            (r'#=', Comment.Multiline, \"blockcomment\"),\n            (r'#.*$', Comment),\n            (r'[]{}:(),;[@]', Punctuation),\n            (r'\\\\\\n', Text),\n            (r'\\\\', Text),\n\n            # keywords\n            (r'(begin|while|for|in|return|break|continue|'\n             r'macro|quote|let|if|elseif|else|try|catch|end|'\n             r'bitstype|ccall|do|using|module|import|export|'\n             r'importall|baremodule|immutable)\\b', Keyword),\n            (r'(local|global|const)\\b', Keyword.Declaration),\n            (r'(Bool|Int|Int8|Int16|Int32|Int64|Uint|Uint8|Uint16|Uint32|Uint64'\n             r'|Float32|Float64|Complex64|Complex128|Any|Nothing|None)\\b',\n                Keyword.Type),\n\n            # functions\n            (r'(function)((?:\\s|\\\\\\s)+)',\n                bygroups(Keyword, Name.Function), 'funcname'),\n\n            # types\n            (r'(type|typealias|abstract)((?:\\s|\\\\\\s)+)',\n                bygroups(Keyword, Name.Class), 'typename'),\n\n            # operators\n            (r'==|!=|<=|>=|->|&&|\\|\\||::|<:|[-~+/*%=<>&^|.?!$]', Operator),\n            (r'\\.\\*|\\.\\^|\\.\\\\|\\.\\/|\\\\', Operator),\n\n            # builtins\n            ('(' + '|'.join(builtins) + r')\\b',  Name.Builtin),\n\n            # backticks\n            (r'`(?s).*?`', String.Backtick),\n\n            # chars\n            (r\"'(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,3}|\\\\u[a-fA-F0-9]{1,4}|\"\n             r\"\\\\U[a-fA-F0-9]{1,6}|[^\\\\\\'\\n])'\", String.Char),\n\n            # try to match trailing transpose\n            (r'(?<=[.\\w)\\]])\\'+', Operator),\n\n            # strings\n            (r'(?:[IL])\"', String, 'string'),\n            (r'[E]?\"', String, combined('stringescape', 'string')),\n\n            # names\n            (r'@[\\w.]+', Name.Decorator),\n            (r'[a-zA-Z_]\\w*', Name),\n\n            # numbers\n            (r'(\\d+(_\\d+)+\\.\\d*|\\d*\\.\\d+(_\\d+)+)([eEf][+-]?[0-9]+)?', Number.Float),\n            (r'(\\d+\\.\\d*|\\d*\\.\\d+)([eEf][+-]?[0-9]+)?', Number.Float),\n            (r'\\d+(_\\d+)+[eEf][+-]?[0-9]+', Number.Float),\n            (r'\\d+[eEf][+-]?[0-9]+', Number.Float),\n            (r'0b[01]+(_[01]+)+', Number.Bin),\n            (r'0b[01]+', Number.Bin),\n            (r'0o[0-7]+(_[0-7]+)+', Number.Oct),\n            (r'0o[0-7]+', Number.Oct),\n            (r'0x[a-fA-F0-9]+(_[a-fA-F0-9]+)+', Number.Hex),\n            (r'0x[a-fA-F0-9]+', Number.Hex),\n            (r'\\d+(_\\d+)+', Number.Integer),\n            (r'\\d+', Number.Integer)\n        ],\n\n        'funcname': [\n            ('[a-zA-Z_]\\w*', Name.Function, '#pop'),\n            ('\\([^\\s\\w{]{1,2}\\)', Operator, '#pop'),\n            ('[^\\s\\w{]{1,2}', Operator, '#pop'),\n        ],\n\n        'typename': [\n            ('[a-zA-Z_]\\w*', Name.Class, '#pop')\n        ],\n\n        'stringescape': [\n            (r'\\\\([\\\\abfnrtv\"\\']|\\n|N\\{.*?\\}|u[a-fA-F0-9]{4}|'\n             r'U[a-fA-F0-9]{8}|x[a-fA-F0-9]{2}|[0-7]{1,3})', String.Escape)\n        ],\n        \"blockcomment\": [\n            (r'[^=#]', Comment.Multiline),\n            (r'#=', Comment.Multiline, '#push'),\n            (r'=#', Comment.Multiline, '#pop'),\n            (r'[=#]', Comment.Multiline),\n        ],\n        'string': [\n            (r'\"', String, '#pop'),\n            (r'\\\\\\\\|\\\\\"|\\\\\\n', String.Escape),  # included here for raw strings\n            (r'\\$(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?',\n                String.Interpol),\n            (r'[^\\\\\"$]+', String),\n            # quotes, dollar signs, and backslashes must be parsed one at a time\n            (r'[\"\\\\]', String),\n            # unhandled string formatting sign\n            (r'\\$', String)\n        ],\n    }\n\n    def analyse_text(text):\n        return shebang_matches(text, r'julia')\n\n\nline_re  = re.compile('.*?\\n')\n\n\nclass JuliaConsoleLexer(Lexer):\n    \"\"\"\n    For Julia console sessions. Modeled after MatlabSessionLexer.\n\n    .. versionadded:: 1.6\n    \"\"\"\n    name = 'Julia console'\n    aliases = ['jlcon']\n\n    def get_tokens_unprocessed(self, text):\n        jllexer = JuliaLexer(**self.options)\n\n        curcode = ''\n        insertions = []\n\n        for match in line_re.finditer(text):\n            line = match.group()\n\n            if line.startswith('julia>'):\n                insertions.append((len(curcode),\n                                   [(0, Generic.Prompt, line[:6])]))\n                curcode += line[6:]\n\n            elif line.startswith('      '):\n\n                idx = len(curcode)\n\n                # without is showing error on same line as before...?\n                line = \"\\n\" + line\n                token = (0, Generic.Traceback, line)\n                insertions.append((idx, [token]))\n\n            else:\n                if curcode:\n                    for item in do_insertions(\n                            insertions, jllexer.get_tokens_unprocessed(curcode)):\n                        yield item\n                    curcode = ''\n                    insertions = []\n\n                yield match.start(), Generic.Output, line\n\n        if curcode:  # or item:\n            for item in do_insertions(\n                    insertions, jllexer.get_tokens_unprocessed(curcode)):\n                yield item\n",
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/tests/cover/pygments_lexers_julia.html": "<!doctype html PUBLIC \"-//W3C//DTD html 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n<head>\n    <meta http-equiv='Content-Type' content='text/html; charset=utf-8'>\n    \n    \n    <meta http-equiv='X-UA-Compatible' content='IE=emulateIE7' />\n    <title>Coverage for pygments.lexers.julia: 71%</title>\n    <link rel='stylesheet' href='style.css' type='text/css'>\n    \n    <script type='text/javascript' src='jquery.min.js'></script>\n    <script type='text/javascript' src='jquery.hotkeys.js'></script>\n    <script type='text/javascript' src='jquery.isonscreen.js'></script>\n    <script type='text/javascript' src='coverage_html.js'></script>\n    <script type='text/javascript' charset='utf-8'>\n        jQuery(document).ready(coverage.pyfile_ready);\n    </script>\n</head>\n<body id='pyfile'>\n\n<div id='header'>\n    <div class='content'>\n        <h1>Coverage for <b>pygments.lexers.julia</b> :\n            <span class='pc_cov'>71%</span>\n        </h1>\n        <img id='keyboard_icon' src='keybd_closed.png'>\n        <h2 class='stats'>\n            42 statements &nbsp;\n            <span class='run hide_run shortkey_r button_toggle_run'>30 run</span>\n            <span class='mis shortkey_m button_toggle_mis'>12 missing</span>\n            <span class='exc shortkey_x button_toggle_exc'>0 excluded</span>\n            \n        </h2>\n    </div>\n</div>\n\n<div class='help_panel'>\n    <img id='panel_icon' src='keybd_open.png'>\n<p class='legend'>Hot-keys on this page</p>\n    <div>\n<p class='keyhelp'>\n        <span class='key'>r</span>\n        <span class='key'>m</span>\n        <span class='key'>x</span>\n        <span class='key'>p</span> &nbsp; toggle line displays\n    </p>\n<p class='keyhelp'>\n        <span class='key'>j</span>\n        <span class='key'>k</span> &nbsp; next/prev highlighted chunk\n    </p>\n<p class='keyhelp'>\n        <span class='key'>0</span> &nbsp; (zero) top of page\n    </p>\n<p class='keyhelp'>\n        <span class='key'>1</span> &nbsp; (one) first highlighted chunk\n    </p>\n    </div>\n</div>\n\n<div id='source'>\n    <table cellspacing='0' cellpadding='0'>\n        <tr>\n            <td class='linenos' valign='top'>\n<p id='n1' class='pln'><a href='#n1'>1</a></p>\n<p id='n2' class='stm run hide_run'><a href='#n2'>2</a></p>\n<p id='n3' class='pln'><a href='#n3'>3</a></p>\n<p id='n4' class='pln'><a href='#n4'>4</a></p>\n<p id='n5' class='pln'><a href='#n5'>5</a></p>\n<p id='n6' class='pln'><a href='#n6'>6</a></p>\n<p id='n7' class='pln'><a href='#n7'>7</a></p>\n<p id='n8' class='pln'><a href='#n8'>8</a></p>\n<p id='n9' class='pln'><a href='#n9'>9</a></p>\n<p id='n10' class='pln'><a href='#n10'>10</a></p>\n<p id='n11' class='pln'><a href='#n11'>11</a></p>\n<p id='n12' class='stm run hide_run'><a href='#n12'>12</a></p>\n<p id='n13' class='pln'><a href='#n13'>13</a></p>\n<p id='n14' class='stm run hide_run'><a href='#n14'>14</a></p>\n<p id='n15' class='stm run hide_run'><a href='#n15'>15</a></p>\n<p id='n16' class='pln'><a href='#n16'>16</a></p>\n<p id='n17' class='stm run hide_run'><a href='#n17'>17</a></p>\n<p id='n18' class='pln'><a href='#n18'>18</a></p>\n<p id='n19' class='stm run hide_run'><a href='#n19'>19</a></p>\n<p id='n20' class='pln'><a href='#n20'>20</a></p>\n<p id='n21' class='pln'><a href='#n21'>21</a></p>\n<p id='n22' class='stm run hide_run'><a href='#n22'>22</a></p>\n<p id='n23' class='pln'><a href='#n23'>23</a></p>\n<p id='n24' class='pln'><a href='#n24'>24</a></p>\n<p id='n25' class='pln'><a href='#n25'>25</a></p>\n<p id='n26' class='pln'><a href='#n26'>26</a></p>\n<p id='n27' class='pln'><a href='#n27'>27</a></p>\n<p id='n28' class='stm run hide_run'><a href='#n28'>28</a></p>\n<p id='n29' class='stm run hide_run'><a href='#n29'>29</a></p>\n<p id='n30' class='stm run hide_run'><a href='#n30'>30</a></p>\n<p id='n31' class='stm run hide_run'><a href='#n31'>31</a></p>\n<p id='n32' class='pln'><a href='#n32'>32</a></p>\n<p id='n33' class='stm run hide_run'><a href='#n33'>33</a></p>\n<p id='n34' class='pln'><a href='#n34'>34</a></p>\n<p id='n35' class='pln'><a href='#n35'>35</a></p>\n<p id='n36' class='pln'><a href='#n36'>36</a></p>\n<p id='n37' class='pln'><a href='#n37'>37</a></p>\n<p id='n38' class='pln'><a href='#n38'>38</a></p>\n<p id='n39' class='pln'><a href='#n39'>39</a></p>\n<p id='n40' class='pln'><a href='#n40'>40</a></p>\n<p id='n41' class='stm run hide_run'><a href='#n41'>41</a></p>\n<p id='n42' class='pln'><a href='#n42'>42</a></p>\n<p id='n43' class='pln'><a href='#n43'>43</a></p>\n<p id='n44' class='pln'><a href='#n44'>44</a></p>\n<p id='n45' class='pln'><a href='#n45'>45</a></p>\n<p id='n46' class='pln'><a href='#n46'>46</a></p>\n<p id='n47' class='pln'><a href='#n47'>47</a></p>\n<p id='n48' class='pln'><a href='#n48'>48</a></p>\n<p id='n49' class='pln'><a href='#n49'>49</a></p>\n<p id='n50' class='pln'><a href='#n50'>50</a></p>\n<p id='n51' class='pln'><a href='#n51'>51</a></p>\n<p id='n52' class='pln'><a href='#n52'>52</a></p>\n<p id='n53' class='pln'><a href='#n53'>53</a></p>\n<p id='n54' class='pln'><a href='#n54'>54</a></p>\n<p id='n55' class='pln'><a href='#n55'>55</a></p>\n<p id='n56' class='pln'><a href='#n56'>56</a></p>\n<p id='n57' class='pln'><a href='#n57'>57</a></p>\n<p id='n58' class='pln'><a href='#n58'>58</a></p>\n<p id='n59' class='pln'><a href='#n59'>59</a></p>\n<p id='n60' class='pln'><a href='#n60'>60</a></p>\n<p id='n61' class='pln'><a href='#n61'>61</a></p>\n<p id='n62' class='pln'><a href='#n62'>62</a></p>\n<p id='n63' class='pln'><a href='#n63'>63</a></p>\n<p id='n64' class='pln'><a href='#n64'>64</a></p>\n<p id='n65' class='pln'><a href='#n65'>65</a></p>\n<p id='n66' class='pln'><a href='#n66'>66</a></p>\n<p id='n67' class='pln'><a href='#n67'>67</a></p>\n<p id='n68' class='pln'><a href='#n68'>68</a></p>\n<p id='n69' class='pln'><a href='#n69'>69</a></p>\n<p id='n70' class='pln'><a href='#n70'>70</a></p>\n<p id='n71' class='pln'><a href='#n71'>71</a></p>\n<p id='n72' class='pln'><a href='#n72'>72</a></p>\n<p id='n73' class='pln'><a href='#n73'>73</a></p>\n<p id='n74' class='pln'><a href='#n74'>74</a></p>\n<p id='n75' class='pln'><a href='#n75'>75</a></p>\n<p id='n76' class='pln'><a href='#n76'>76</a></p>\n<p id='n77' class='pln'><a href='#n77'>77</a></p>\n<p id='n78' class='pln'><a href='#n78'>78</a></p>\n<p id='n79' class='pln'><a href='#n79'>79</a></p>\n<p id='n80' class='pln'><a href='#n80'>80</a></p>\n<p id='n81' class='pln'><a href='#n81'>81</a></p>\n<p id='n82' class='pln'><a href='#n82'>82</a></p>\n<p id='n83' class='pln'><a href='#n83'>83</a></p>\n<p id='n84' class='pln'><a href='#n84'>84</a></p>\n<p id='n85' class='pln'><a href='#n85'>85</a></p>\n<p id='n86' class='pln'><a href='#n86'>86</a></p>\n<p id='n87' class='pln'><a href='#n87'>87</a></p>\n<p id='n88' class='pln'><a href='#n88'>88</a></p>\n<p id='n89' class='pln'><a href='#n89'>89</a></p>\n<p id='n90' class='pln'><a href='#n90'>90</a></p>\n<p id='n91' class='pln'><a href='#n91'>91</a></p>\n<p id='n92' class='pln'><a href='#n92'>92</a></p>\n<p id='n93' class='pln'><a href='#n93'>93</a></p>\n<p id='n94' class='pln'><a href='#n94'>94</a></p>\n<p id='n95' class='pln'><a href='#n95'>95</a></p>\n<p id='n96' class='pln'><a href='#n96'>96</a></p>\n<p id='n97' class='pln'><a href='#n97'>97</a></p>\n<p id='n98' class='pln'><a href='#n98'>98</a></p>\n<p id='n99' class='pln'><a href='#n99'>99</a></p>\n<p id='n100' class='pln'><a href='#n100'>100</a></p>\n<p id='n101' class='pln'><a href='#n101'>101</a></p>\n<p id='n102' class='pln'><a href='#n102'>102</a></p>\n<p id='n103' class='pln'><a href='#n103'>103</a></p>\n<p id='n104' class='pln'><a href='#n104'>104</a></p>\n<p id='n105' class='pln'><a href='#n105'>105</a></p>\n<p id='n106' class='pln'><a href='#n106'>106</a></p>\n<p id='n107' class='pln'><a href='#n107'>107</a></p>\n<p id='n108' class='pln'><a href='#n108'>108</a></p>\n<p id='n109' class='pln'><a href='#n109'>109</a></p>\n<p id='n110' class='pln'><a href='#n110'>110</a></p>\n<p id='n111' class='pln'><a href='#n111'>111</a></p>\n<p id='n112' class='pln'><a href='#n112'>112</a></p>\n<p id='n113' class='pln'><a href='#n113'>113</a></p>\n<p id='n114' class='pln'><a href='#n114'>114</a></p>\n<p id='n115' class='pln'><a href='#n115'>115</a></p>\n<p id='n116' class='pln'><a href='#n116'>116</a></p>\n<p id='n117' class='pln'><a href='#n117'>117</a></p>\n<p id='n118' class='pln'><a href='#n118'>118</a></p>\n<p id='n119' class='pln'><a href='#n119'>119</a></p>\n<p id='n120' class='pln'><a href='#n120'>120</a></p>\n<p id='n121' class='pln'><a href='#n121'>121</a></p>\n<p id='n122' class='pln'><a href='#n122'>122</a></p>\n<p id='n123' class='pln'><a href='#n123'>123</a></p>\n<p id='n124' class='pln'><a href='#n124'>124</a></p>\n<p id='n125' class='pln'><a href='#n125'>125</a></p>\n<p id='n126' class='pln'><a href='#n126'>126</a></p>\n<p id='n127' class='pln'><a href='#n127'>127</a></p>\n<p id='n128' class='pln'><a href='#n128'>128</a></p>\n<p id='n129' class='pln'><a href='#n129'>129</a></p>\n<p id='n130' class='pln'><a href='#n130'>130</a></p>\n<p id='n131' class='pln'><a href='#n131'>131</a></p>\n<p id='n132' class='pln'><a href='#n132'>132</a></p>\n<p id='n133' class='pln'><a href='#n133'>133</a></p>\n<p id='n134' class='pln'><a href='#n134'>134</a></p>\n<p id='n135' class='pln'><a href='#n135'>135</a></p>\n<p id='n136' class='pln'><a href='#n136'>136</a></p>\n<p id='n137' class='pln'><a href='#n137'>137</a></p>\n<p id='n138' class='pln'><a href='#n138'>138</a></p>\n<p id='n139' class='pln'><a href='#n139'>139</a></p>\n<p id='n140' class='pln'><a href='#n140'>140</a></p>\n<p id='n141' class='pln'><a href='#n141'>141</a></p>\n<p id='n142' class='stm run hide_run'><a href='#n142'>142</a></p>\n<p id='n143' class='stm run hide_run'><a href='#n143'>143</a></p>\n<p id='n144' class='pln'><a href='#n144'>144</a></p>\n<p id='n145' class='pln'><a href='#n145'>145</a></p>\n<p id='n146' class='stm run hide_run'><a href='#n146'>146</a></p>\n<p id='n147' class='pln'><a href='#n147'>147</a></p>\n<p id='n148' class='pln'><a href='#n148'>148</a></p>\n<p id='n149' class='stm run hide_run'><a href='#n149'>149</a></p>\n<p id='n150' class='pln'><a href='#n150'>150</a></p>\n<p id='n151' class='pln'><a href='#n151'>151</a></p>\n<p id='n152' class='pln'><a href='#n152'>152</a></p>\n<p id='n153' class='pln'><a href='#n153'>153</a></p>\n<p id='n154' class='pln'><a href='#n154'>154</a></p>\n<p id='n155' class='stm run hide_run'><a href='#n155'>155</a></p>\n<p id='n156' class='stm run hide_run'><a href='#n156'>156</a></p>\n<p id='n157' class='pln'><a href='#n157'>157</a></p>\n<p id='n158' class='stm run hide_run'><a href='#n158'>158</a></p>\n<p id='n159' class='stm run hide_run'><a href='#n159'>159</a></p>\n<p id='n160' class='pln'><a href='#n160'>160</a></p>\n<p id='n161' class='stm run hide_run'><a href='#n161'>161</a></p>\n<p id='n162' class='stm run hide_run'><a href='#n162'>162</a></p>\n<p id='n163' class='pln'><a href='#n163'>163</a></p>\n<p id='n164' class='stm run hide_run'><a href='#n164'>164</a></p>\n<p id='n165' class='stm run hide_run'><a href='#n165'>165</a></p>\n<p id='n166' class='pln'><a href='#n166'>166</a></p>\n<p id='n167' class='stm run hide_run'><a href='#n167'>167</a></p>\n<p id='n168' class='stm mis'><a href='#n168'>168</a></p>\n<p id='n169' class='pln'><a href='#n169'>169</a></p>\n<p id='n170' class='stm mis'><a href='#n170'>170</a></p>\n<p id='n171' class='pln'><a href='#n171'>171</a></p>\n<p id='n172' class='stm run hide_run'><a href='#n172'>172</a></p>\n<p id='n173' class='pln'><a href='#n173'>173</a></p>\n<p id='n174' class='stm mis'><a href='#n174'>174</a></p>\n<p id='n175' class='pln'><a href='#n175'>175</a></p>\n<p id='n176' class='pln'><a href='#n176'>176</a></p>\n<p id='n177' class='stm mis'><a href='#n177'>177</a></p>\n<p id='n178' class='stm mis'><a href='#n178'>178</a></p>\n<p id='n179' class='stm mis'><a href='#n179'>179</a></p>\n<p id='n180' class='pln'><a href='#n180'>180</a></p>\n<p id='n181' class='pln'><a href='#n181'>181</a></p>\n<p id='n182' class='stm run hide_run'><a href='#n182'>182</a></p>\n<p id='n183' class='stm mis'><a href='#n183'>183</a></p>\n<p id='n184' class='pln'><a href='#n184'>184</a></p>\n<p id='n185' class='stm mis'><a href='#n185'>185</a></p>\n<p id='n186' class='stm mis'><a href='#n186'>186</a></p>\n<p id='n187' class='stm mis'><a href='#n187'>187</a></p>\n<p id='n188' class='pln'><a href='#n188'>188</a></p>\n<p id='n189' class='stm run hide_run'><a href='#n189'>189</a></p>\n<p id='n190' class='pln'><a href='#n190'>190</a></p>\n<p id='n191' class='stm run hide_run'><a href='#n191'>191</a></p>\n<p id='n192' class='stm mis'><a href='#n192'>192</a></p>\n<p id='n193' class='pln'><a href='#n193'>193</a></p>\n<p id='n194' class='stm mis'><a href='#n194'>194</a></p>\n                \n            </td>\n            <td class='text' valign='top'>\n<p id='t1' class='pln'><span class='com'># -*- coding: utf-8 -*-</span><span class='strut'>&nbsp;</span></p>\n<p id='t2' class='stm run hide_run'><span class='str'>&quot;&quot;&quot;</span><span class='strut'>&nbsp;</span></p>\n<p id='t3' class='pln'><span class='str'>&nbsp; &nbsp; pygments.lexers.julia</span><span class='strut'>&nbsp;</span></p>\n<p id='t4' class='pln'><span class='str'>&nbsp; &nbsp; ~~~~~~~~~~~~~~~~~~~~~</span><span class='strut'>&nbsp;</span></p>\n<p id='t5' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t6' class='pln'><span class='str'>&nbsp; &nbsp; Lexers for the Julia language.</span><span class='strut'>&nbsp;</span></p>\n<p id='t7' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t8' class='pln'><span class='str'>&nbsp; &nbsp; :copyright: Copyright 2006-2014 by the Pygments team, see AUTHORS.</span><span class='strut'>&nbsp;</span></p>\n<p id='t9' class='pln'><span class='str'>&nbsp; &nbsp; :license: BSD, see LICENSE for details.</span><span class='strut'>&nbsp;</span></p>\n<p id='t10' class='pln'><span class='str'>&quot;&quot;&quot;</span><span class='strut'>&nbsp;</span></p>\n<p id='t11' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t12' class='stm run hide_run'><span class='key'>import</span> <span class='nam'>re</span><span class='strut'>&nbsp;</span></p>\n<p id='t13' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t14' class='stm run hide_run'><span class='key'>from</span> <span class='nam'>pygments</span><span class='op'>.</span><span class='nam'>lexer</span> <span class='key'>import</span> <span class='nam'>Lexer</span><span class='op'>,</span> <span class='nam'>RegexLexer</span><span class='op'>,</span> <span class='nam'>bygroups</span><span class='op'>,</span> <span class='nam'>combined</span><span class='op'>,</span> <span class='nam'>do_insertions</span><span class='strut'>&nbsp;</span></p>\n<p id='t15' class='stm run hide_run'><span class='key'>from</span> <span class='nam'>pygments</span><span class='op'>.</span><span class='nam'>token</span> <span class='key'>import</span> <span class='nam'>Text</span><span class='op'>,</span> <span class='nam'>Comment</span><span class='op'>,</span> <span class='nam'>Operator</span><span class='op'>,</span> <span class='nam'>Keyword</span><span class='op'>,</span> <span class='nam'>Name</span><span class='op'>,</span> <span class='nam'>String</span><span class='op'>,</span> <span class='xx'>\\</span><span class='strut'>&nbsp;</span></p>\n<p id='t16' class='pln'>&nbsp; &nbsp; <span class='nam'>Number</span><span class='op'>,</span> <span class='nam'>Punctuation</span><span class='op'>,</span> <span class='nam'>Generic</span><span class='strut'>&nbsp;</span></p>\n<p id='t17' class='stm run hide_run'><span class='key'>from</span> <span class='nam'>pygments</span><span class='op'>.</span><span class='nam'>util</span> <span class='key'>import</span> <span class='nam'>shebang_matches</span><span class='strut'>&nbsp;</span></p>\n<p id='t18' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t19' class='stm run hide_run'><span class='nam'>__all__</span> <span class='op'>=</span> <span class='op'>[</span><span class='str'>&#39;JuliaLexer&#39;</span><span class='op'>,</span> <span class='str'>&#39;JuliaConsoleLexer&#39;</span><span class='op'>]</span><span class='strut'>&nbsp;</span></p>\n<p id='t20' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t21' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t22' class='stm run hide_run'><span class='key'>class</span> <span class='nam'>JuliaLexer</span><span class='op'>(</span><span class='nam'>RegexLexer</span><span class='op'>)</span><span class='op'>:</span><span class='strut'>&nbsp;</span></p>\n<p id='t23' class='pln'>&nbsp; &nbsp; <span class='str'>&quot;&quot;&quot;</span><span class='strut'>&nbsp;</span></p>\n<p id='t24' class='pln'><span class='str'>&nbsp; &nbsp; For `Julia &lt;http://julialang.org/&gt;`_ source code.</span><span class='strut'>&nbsp;</span></p>\n<p id='t25' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t26' class='pln'><span class='str'>&nbsp; &nbsp; .. versionadded:: 1.6</span><span class='strut'>&nbsp;</span></p>\n<p id='t27' class='pln'><span class='str'>&nbsp; &nbsp; &quot;&quot;&quot;</span><span class='strut'>&nbsp;</span></p>\n<p id='t28' class='stm run hide_run'>&nbsp; &nbsp; <span class='nam'>name</span> <span class='op'>=</span> <span class='str'>&#39;Julia&#39;</span><span class='strut'>&nbsp;</span></p>\n<p id='t29' class='stm run hide_run'>&nbsp; &nbsp; <span class='nam'>aliases</span> <span class='op'>=</span> <span class='op'>[</span><span class='str'>&#39;julia&#39;</span><span class='op'>,</span> <span class='str'>&#39;jl&#39;</span><span class='op'>]</span><span class='strut'>&nbsp;</span></p>\n<p id='t30' class='stm run hide_run'>&nbsp; &nbsp; <span class='nam'>filenames</span> <span class='op'>=</span> <span class='op'>[</span><span class='str'>&#39;*.jl&#39;</span><span class='op'>]</span><span class='strut'>&nbsp;</span></p>\n<p id='t31' class='stm run hide_run'>&nbsp; &nbsp; <span class='nam'>mimetypes</span> <span class='op'>=</span> <span class='op'>[</span><span class='str'>&#39;text/x-julia&#39;</span><span class='op'>,</span> <span class='str'>&#39;application/x-julia&#39;</span><span class='op'>]</span><span class='strut'>&nbsp;</span></p>\n<p id='t32' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t33' class='stm run hide_run'>&nbsp; &nbsp; <span class='nam'>builtins</span> <span class='op'>=</span> <span class='op'>[</span><span class='strut'>&nbsp;</span></p>\n<p id='t34' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='str'>&#39;exit&#39;</span><span class='op'>,</span> <span class='str'>&#39;whos&#39;</span><span class='op'>,</span> <span class='str'>&#39;edit&#39;</span><span class='op'>,</span> <span class='str'>&#39;load&#39;</span><span class='op'>,</span> <span class='str'>&#39;is&#39;</span><span class='op'>,</span> <span class='str'>&#39;isa&#39;</span><span class='op'>,</span> <span class='str'>&#39;isequal&#39;</span><span class='op'>,</span> <span class='str'>&#39;typeof&#39;</span><span class='op'>,</span> <span class='str'>&#39;tuple&#39;</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t35' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='str'>&#39;ntuple&#39;</span><span class='op'>,</span> <span class='str'>&#39;uid&#39;</span><span class='op'>,</span> <span class='str'>&#39;hash&#39;</span><span class='op'>,</span> <span class='str'>&#39;finalizer&#39;</span><span class='op'>,</span> <span class='str'>&#39;convert&#39;</span><span class='op'>,</span> <span class='str'>&#39;promote&#39;</span><span class='op'>,</span> <span class='str'>&#39;subtype&#39;</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t36' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='str'>&#39;typemin&#39;</span><span class='op'>,</span> <span class='str'>&#39;typemax&#39;</span><span class='op'>,</span> <span class='str'>&#39;realmin&#39;</span><span class='op'>,</span> <span class='str'>&#39;realmax&#39;</span><span class='op'>,</span> <span class='str'>&#39;sizeof&#39;</span><span class='op'>,</span> <span class='str'>&#39;eps&#39;</span><span class='op'>,</span> <span class='str'>&#39;promote_type&#39;</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t37' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='str'>&#39;method_exists&#39;</span><span class='op'>,</span> <span class='str'>&#39;applicable&#39;</span><span class='op'>,</span> <span class='str'>&#39;invoke&#39;</span><span class='op'>,</span> <span class='str'>&#39;dlopen&#39;</span><span class='op'>,</span> <span class='str'>&#39;dlsym&#39;</span><span class='op'>,</span> <span class='str'>&#39;system&#39;</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t38' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='str'>&#39;error&#39;</span><span class='op'>,</span> <span class='str'>&#39;throw&#39;</span><span class='op'>,</span> <span class='str'>&#39;assert&#39;</span><span class='op'>,</span> <span class='str'>&#39;new&#39;</span><span class='op'>,</span> <span class='str'>&#39;Inf&#39;</span><span class='op'>,</span> <span class='str'>&#39;Nan&#39;</span><span class='op'>,</span> <span class='str'>&#39;pi&#39;</span><span class='op'>,</span> <span class='str'>&#39;im&#39;</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t39' class='pln'>&nbsp; &nbsp; <span class='op'>]</span><span class='strut'>&nbsp;</span></p>\n<p id='t40' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t41' class='stm run hide_run'>&nbsp; &nbsp; <span class='nam'>tokens</span> <span class='op'>=</span> <span class='op'>{</span><span class='strut'>&nbsp;</span></p>\n<p id='t42' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='str'>&#39;root&#39;</span><span class='op'>:</span> <span class='op'>[</span><span class='strut'>&nbsp;</span></p>\n<p id='t43' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;\\n&#39;</span><span class='op'>,</span> <span class='nam'>Text</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t44' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;[^\\S\\n]+&#39;</span><span class='op'>,</span> <span class='nam'>Text</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t45' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;#=&#39;</span><span class='op'>,</span> <span class='nam'>Comment</span><span class='op'>.</span><span class='nam'>Multiline</span><span class='op'>,</span> <span class='str'>&quot;blockcomment&quot;</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t46' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;#.*$&#39;</span><span class='op'>,</span> <span class='nam'>Comment</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t47' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;[]{}:(),;[@]&#39;</span><span class='op'>,</span> <span class='nam'>Punctuation</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t48' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;\\\\\\n&#39;</span><span class='op'>,</span> <span class='nam'>Text</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t49' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;\\\\&#39;</span><span class='op'>,</span> <span class='nam'>Text</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t50' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t51' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='com'># keywords</span><span class='strut'>&nbsp;</span></p>\n<p id='t52' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;(begin|while|for|in|return|break|continue|&#39;</span><span class='strut'>&nbsp;</span></p>\n<p id='t53' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <span class='str'>r&#39;macro|quote|let|if|elseif|else|try|catch|end|&#39;</span><span class='strut'>&nbsp;</span></p>\n<p id='t54' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <span class='str'>r&#39;bitstype|ccall|do|using|module|import|export|&#39;</span><span class='strut'>&nbsp;</span></p>\n<p id='t55' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <span class='str'>r&#39;importall|baremodule|immutable)\\b&#39;</span><span class='op'>,</span> <span class='nam'>Keyword</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t56' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;(local|global|const)\\b&#39;</span><span class='op'>,</span> <span class='nam'>Keyword</span><span class='op'>.</span><span class='nam'>Declaration</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t57' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;(Bool|Int|Int8|Int16|Int32|Int64|Uint|Uint8|Uint16|Uint32|Uint64&#39;</span><span class='strut'>&nbsp;</span></p>\n<p id='t58' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <span class='str'>r&#39;|Float32|Float64|Complex64|Complex128|Any|Nothing|None)\\b&#39;</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t59' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>Keyword</span><span class='op'>.</span><span class='nam'>Type</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t60' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t61' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='com'># functions</span><span class='strut'>&nbsp;</span></p>\n<p id='t62' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;(function)((?:\\s|\\\\\\s)+)&#39;</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t63' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>bygroups</span><span class='op'>(</span><span class='nam'>Keyword</span><span class='op'>,</span> <span class='nam'>Name</span><span class='op'>.</span><span class='nam'>Function</span><span class='op'>)</span><span class='op'>,</span> <span class='str'>&#39;funcname&#39;</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t64' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t65' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='com'># types</span><span class='strut'>&nbsp;</span></p>\n<p id='t66' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;(type|typealias|abstract)((?:\\s|\\\\\\s)+)&#39;</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t67' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>bygroups</span><span class='op'>(</span><span class='nam'>Keyword</span><span class='op'>,</span> <span class='nam'>Name</span><span class='op'>.</span><span class='nam'>Class</span><span class='op'>)</span><span class='op'>,</span> <span class='str'>&#39;typename&#39;</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t68' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t69' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='com'># operators</span><span class='strut'>&nbsp;</span></p>\n<p id='t70' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;==|!=|&lt;=|&gt;=|-&gt;|&amp;&amp;|\\|\\||::|&lt;:|[-~+/*%=&lt;&gt;&amp;^|.?!$]&#39;</span><span class='op'>,</span> <span class='nam'>Operator</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t71' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;\\.\\*|\\.\\^|\\.\\\\|\\.\\/|\\\\&#39;</span><span class='op'>,</span> <span class='nam'>Operator</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t72' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t73' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='com'># builtins</span><span class='strut'>&nbsp;</span></p>\n<p id='t74' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>&#39;(&#39;</span> <span class='op'>+</span> <span class='str'>&#39;|&#39;</span><span class='op'>.</span><span class='nam'>join</span><span class='op'>(</span><span class='nam'>builtins</span><span class='op'>)</span> <span class='op'>+</span> <span class='str'>r&#39;)\\b&#39;</span><span class='op'>,</span>&nbsp; <span class='nam'>Name</span><span class='op'>.</span><span class='nam'>Builtin</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t75' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t76' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='com'># backticks</span><span class='strut'>&nbsp;</span></p>\n<p id='t77' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;`(?s).*?`&#39;</span><span class='op'>,</span> <span class='nam'>String</span><span class='op'>.</span><span class='nam'>Backtick</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t78' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t79' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='com'># chars</span><span class='strut'>&nbsp;</span></p>\n<p id='t80' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&quot;&#39;(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,3}|\\\\u[a-fA-F0-9]{1,4}|&quot;</span><span class='strut'>&nbsp;</span></p>\n<p id='t81' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <span class='str'>r&quot;\\\\U[a-fA-F0-9]{1,6}|[^\\\\\\&#39;\\n])&#39;&quot;</span><span class='op'>,</span> <span class='nam'>String</span><span class='op'>.</span><span class='nam'>Char</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t82' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t83' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='com'># try to match trailing transpose</span><span class='strut'>&nbsp;</span></p>\n<p id='t84' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;(?&lt;=[.\\w)\\]])\\&#39;+&#39;</span><span class='op'>,</span> <span class='nam'>Operator</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t85' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t86' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='com'># strings</span><span class='strut'>&nbsp;</span></p>\n<p id='t87' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;(?:[IL])&quot;&#39;</span><span class='op'>,</span> <span class='nam'>String</span><span class='op'>,</span> <span class='str'>&#39;string&#39;</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t88' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;[E]?&quot;&#39;</span><span class='op'>,</span> <span class='nam'>String</span><span class='op'>,</span> <span class='nam'>combined</span><span class='op'>(</span><span class='str'>&#39;stringescape&#39;</span><span class='op'>,</span> <span class='str'>&#39;string&#39;</span><span class='op'>)</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t89' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t90' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='com'># names</span><span class='strut'>&nbsp;</span></p>\n<p id='t91' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;@[\\w.]+&#39;</span><span class='op'>,</span> <span class='nam'>Name</span><span class='op'>.</span><span class='nam'>Decorator</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t92' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;[a-zA-Z_]\\w*&#39;</span><span class='op'>,</span> <span class='nam'>Name</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t93' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t94' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='com'># numbers</span><span class='strut'>&nbsp;</span></p>\n<p id='t95' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;(\\d+(_\\d+)+\\.\\d*|\\d*\\.\\d+(_\\d+)+)([eEf][+-]?[0-9]+)?&#39;</span><span class='op'>,</span> <span class='nam'>Number</span><span class='op'>.</span><span class='nam'>Float</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t96' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;(\\d+\\.\\d*|\\d*\\.\\d+)([eEf][+-]?[0-9]+)?&#39;</span><span class='op'>,</span> <span class='nam'>Number</span><span class='op'>.</span><span class='nam'>Float</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t97' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;\\d+(_\\d+)+[eEf][+-]?[0-9]+&#39;</span><span class='op'>,</span> <span class='nam'>Number</span><span class='op'>.</span><span class='nam'>Float</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t98' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;\\d+[eEf][+-]?[0-9]+&#39;</span><span class='op'>,</span> <span class='nam'>Number</span><span class='op'>.</span><span class='nam'>Float</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t99' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;0b[01]+(_[01]+)+&#39;</span><span class='op'>,</span> <span class='nam'>Number</span><span class='op'>.</span><span class='nam'>Bin</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t100' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;0b[01]+&#39;</span><span class='op'>,</span> <span class='nam'>Number</span><span class='op'>.</span><span class='nam'>Bin</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t101' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;0o[0-7]+(_[0-7]+)+&#39;</span><span class='op'>,</span> <span class='nam'>Number</span><span class='op'>.</span><span class='nam'>Oct</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t102' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;0o[0-7]+&#39;</span><span class='op'>,</span> <span class='nam'>Number</span><span class='op'>.</span><span class='nam'>Oct</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t103' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;0x[a-fA-F0-9]+(_[a-fA-F0-9]+)+&#39;</span><span class='op'>,</span> <span class='nam'>Number</span><span class='op'>.</span><span class='nam'>Hex</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t104' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;0x[a-fA-F0-9]+&#39;</span><span class='op'>,</span> <span class='nam'>Number</span><span class='op'>.</span><span class='nam'>Hex</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t105' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;\\d+(_\\d+)+&#39;</span><span class='op'>,</span> <span class='nam'>Number</span><span class='op'>.</span><span class='nam'>Integer</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t106' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;\\d+&#39;</span><span class='op'>,</span> <span class='nam'>Number</span><span class='op'>.</span><span class='nam'>Integer</span><span class='op'>)</span><span class='strut'>&nbsp;</span></p>\n<p id='t107' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>]</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t108' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t109' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='str'>&#39;funcname&#39;</span><span class='op'>:</span> <span class='op'>[</span><span class='strut'>&nbsp;</span></p>\n<p id='t110' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>&#39;[a-zA-Z_]\\w*&#39;</span><span class='op'>,</span> <span class='nam'>Name</span><span class='op'>.</span><span class='nam'>Function</span><span class='op'>,</span> <span class='str'>&#39;#pop&#39;</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t111' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>&#39;\\([^\\s\\w{]{1,2}\\)&#39;</span><span class='op'>,</span> <span class='nam'>Operator</span><span class='op'>,</span> <span class='str'>&#39;#pop&#39;</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t112' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>&#39;[^\\s\\w{]{1,2}&#39;</span><span class='op'>,</span> <span class='nam'>Operator</span><span class='op'>,</span> <span class='str'>&#39;#pop&#39;</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t113' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>]</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t114' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t115' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='str'>&#39;typename&#39;</span><span class='op'>:</span> <span class='op'>[</span><span class='strut'>&nbsp;</span></p>\n<p id='t116' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>&#39;[a-zA-Z_]\\w*&#39;</span><span class='op'>,</span> <span class='nam'>Name</span><span class='op'>.</span><span class='nam'>Class</span><span class='op'>,</span> <span class='str'>&#39;#pop&#39;</span><span class='op'>)</span><span class='strut'>&nbsp;</span></p>\n<p id='t117' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>]</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t118' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t119' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='str'>&#39;stringescape&#39;</span><span class='op'>:</span> <span class='op'>[</span><span class='strut'>&nbsp;</span></p>\n<p id='t120' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;\\\\([\\\\abfnrtv&quot;\\&#39;]|\\n|N\\{.*?\\}|u[a-fA-F0-9]{4}|&#39;</span><span class='strut'>&nbsp;</span></p>\n<p id='t121' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <span class='str'>r&#39;U[a-fA-F0-9]{8}|x[a-fA-F0-9]{2}|[0-7]{1,3})&#39;</span><span class='op'>,</span> <span class='nam'>String</span><span class='op'>.</span><span class='nam'>Escape</span><span class='op'>)</span><span class='strut'>&nbsp;</span></p>\n<p id='t122' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>]</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t123' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='str'>&quot;blockcomment&quot;</span><span class='op'>:</span> <span class='op'>[</span><span class='strut'>&nbsp;</span></p>\n<p id='t124' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;[^=#]&#39;</span><span class='op'>,</span> <span class='nam'>Comment</span><span class='op'>.</span><span class='nam'>Multiline</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t125' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;#=&#39;</span><span class='op'>,</span> <span class='nam'>Comment</span><span class='op'>.</span><span class='nam'>Multiline</span><span class='op'>,</span> <span class='str'>&#39;#push&#39;</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t126' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;=#&#39;</span><span class='op'>,</span> <span class='nam'>Comment</span><span class='op'>.</span><span class='nam'>Multiline</span><span class='op'>,</span> <span class='str'>&#39;#pop&#39;</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t127' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;[=#]&#39;</span><span class='op'>,</span> <span class='nam'>Comment</span><span class='op'>.</span><span class='nam'>Multiline</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t128' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>]</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t129' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='str'>&#39;string&#39;</span><span class='op'>:</span> <span class='op'>[</span><span class='strut'>&nbsp;</span></p>\n<p id='t130' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;&quot;&#39;</span><span class='op'>,</span> <span class='nam'>String</span><span class='op'>,</span> <span class='str'>&#39;#pop&#39;</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t131' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;\\\\\\\\|\\\\&quot;|\\\\\\n&#39;</span><span class='op'>,</span> <span class='nam'>String</span><span class='op'>.</span><span class='nam'>Escape</span><span class='op'>)</span><span class='op'>,</span>&nbsp; <span class='com'># included here for raw strings</span><span class='strut'>&nbsp;</span></p>\n<p id='t132' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;\\$(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?&#39;</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t133' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>String</span><span class='op'>.</span><span class='nam'>Interpol</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t134' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;[^\\\\&quot;$]+&#39;</span><span class='op'>,</span> <span class='nam'>String</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t135' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='com'># quotes, dollar signs, and backslashes must be parsed one at a time</span><span class='strut'>&nbsp;</span></p>\n<p id='t136' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;[&quot;\\\\]&#39;</span><span class='op'>,</span> <span class='nam'>String</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t137' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='com'># unhandled string formatting sign</span><span class='strut'>&nbsp;</span></p>\n<p id='t138' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>(</span><span class='str'>r&#39;\\$&#39;</span><span class='op'>,</span> <span class='nam'>String</span><span class='op'>)</span><span class='strut'>&nbsp;</span></p>\n<p id='t139' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='op'>]</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t140' class='pln'>&nbsp; &nbsp; <span class='op'>}</span><span class='strut'>&nbsp;</span></p>\n<p id='t141' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t142' class='stm run hide_run'>&nbsp; &nbsp; <span class='key'>def</span> <span class='nam'>analyse_text</span><span class='op'>(</span><span class='nam'>text</span><span class='op'>)</span><span class='op'>:</span><span class='strut'>&nbsp;</span></p>\n<p id='t143' class='stm run hide_run'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='key'>return</span> <span class='nam'>shebang_matches</span><span class='op'>(</span><span class='nam'>text</span><span class='op'>,</span> <span class='str'>r&#39;julia&#39;</span><span class='op'>)</span><span class='strut'>&nbsp;</span></p>\n<p id='t144' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t145' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t146' class='stm run hide_run'><span class='nam'>line_re</span>&nbsp; <span class='op'>=</span> <span class='nam'>re</span><span class='op'>.</span><span class='nam'>compile</span><span class='op'>(</span><span class='str'>&#39;.*?\\n&#39;</span><span class='op'>)</span><span class='strut'>&nbsp;</span></p>\n<p id='t147' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t148' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t149' class='stm run hide_run'><span class='key'>class</span> <span class='nam'>JuliaConsoleLexer</span><span class='op'>(</span><span class='nam'>Lexer</span><span class='op'>)</span><span class='op'>:</span><span class='strut'>&nbsp;</span></p>\n<p id='t150' class='pln'>&nbsp; &nbsp; <span class='str'>&quot;&quot;&quot;</span><span class='strut'>&nbsp;</span></p>\n<p id='t151' class='pln'><span class='str'>&nbsp; &nbsp; For Julia console sessions. Modeled after MatlabSessionLexer.</span><span class='strut'>&nbsp;</span></p>\n<p id='t152' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t153' class='pln'><span class='str'>&nbsp; &nbsp; .. versionadded:: 1.6</span><span class='strut'>&nbsp;</span></p>\n<p id='t154' class='pln'><span class='str'>&nbsp; &nbsp; &quot;&quot;&quot;</span><span class='strut'>&nbsp;</span></p>\n<p id='t155' class='stm run hide_run'>&nbsp; &nbsp; <span class='nam'>name</span> <span class='op'>=</span> <span class='str'>&#39;Julia console&#39;</span><span class='strut'>&nbsp;</span></p>\n<p id='t156' class='stm run hide_run'>&nbsp; &nbsp; <span class='nam'>aliases</span> <span class='op'>=</span> <span class='op'>[</span><span class='str'>&#39;jlcon&#39;</span><span class='op'>]</span><span class='strut'>&nbsp;</span></p>\n<p id='t157' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t158' class='stm run hide_run'>&nbsp; &nbsp; <span class='key'>def</span> <span class='nam'>get_tokens_unprocessed</span><span class='op'>(</span><span class='nam'>self</span><span class='op'>,</span> <span class='nam'>text</span><span class='op'>)</span><span class='op'>:</span><span class='strut'>&nbsp;</span></p>\n<p id='t159' class='stm run hide_run'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>jllexer</span> <span class='op'>=</span> <span class='nam'>JuliaLexer</span><span class='op'>(</span><span class='op'>**</span><span class='nam'>self</span><span class='op'>.</span><span class='nam'>options</span><span class='op'>)</span><span class='strut'>&nbsp;</span></p>\n<p id='t160' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t161' class='stm run hide_run'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>curcode</span> <span class='op'>=</span> <span class='str'>&#39;&#39;</span><span class='strut'>&nbsp;</span></p>\n<p id='t162' class='stm run hide_run'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>insertions</span> <span class='op'>=</span> <span class='op'>[</span><span class='op'>]</span><span class='strut'>&nbsp;</span></p>\n<p id='t163' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t164' class='stm run hide_run'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='key'>for</span> <span class='nam'>match</span> <span class='key'>in</span> <span class='nam'>line_re</span><span class='op'>.</span><span class='nam'>finditer</span><span class='op'>(</span><span class='nam'>text</span><span class='op'>)</span><span class='op'>:</span><span class='strut'>&nbsp;</span></p>\n<p id='t165' class='stm run hide_run'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>line</span> <span class='op'>=</span> <span class='nam'>match</span><span class='op'>.</span><span class='nam'>group</span><span class='op'>(</span><span class='op'>)</span><span class='strut'>&nbsp;</span></p>\n<p id='t166' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t167' class='stm run hide_run'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='key'>if</span> <span class='nam'>line</span><span class='op'>.</span><span class='nam'>startswith</span><span class='op'>(</span><span class='str'>&#39;julia&gt;&#39;</span><span class='op'>)</span><span class='op'>:</span><span class='strut'>&nbsp;</span></p>\n<p id='t168' class='stm mis'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>insertions</span><span class='op'>.</span><span class='nam'>append</span><span class='op'>(</span><span class='op'>(</span><span class='nam'>len</span><span class='op'>(</span><span class='nam'>curcode</span><span class='op'>)</span><span class='op'>,</span><span class='strut'>&nbsp;</span></p>\n<p id='t169' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <span class='op'>[</span><span class='op'>(</span><span class='num'>0</span><span class='op'>,</span> <span class='nam'>Generic</span><span class='op'>.</span><span class='nam'>Prompt</span><span class='op'>,</span> <span class='nam'>line</span><span class='op'>[</span><span class='op'>:</span><span class='num'>6</span><span class='op'>]</span><span class='op'>)</span><span class='op'>]</span><span class='op'>)</span><span class='op'>)</span><span class='strut'>&nbsp;</span></p>\n<p id='t170' class='stm mis'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>curcode</span> <span class='op'>+=</span> <span class='nam'>line</span><span class='op'>[</span><span class='num'>6</span><span class='op'>:</span><span class='op'>]</span><span class='strut'>&nbsp;</span></p>\n<p id='t171' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t172' class='stm run hide_run'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='key'>elif</span> <span class='nam'>line</span><span class='op'>.</span><span class='nam'>startswith</span><span class='op'>(</span><span class='str'>&#39;&nbsp; &nbsp; &nbsp; &#39;</span><span class='op'>)</span><span class='op'>:</span><span class='strut'>&nbsp;</span></p>\n<p id='t173' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t174' class='stm mis'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>idx</span> <span class='op'>=</span> <span class='nam'>len</span><span class='op'>(</span><span class='nam'>curcode</span><span class='op'>)</span><span class='strut'>&nbsp;</span></p>\n<p id='t175' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t176' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='com'># without is showing error on same line as before...?</span><span class='strut'>&nbsp;</span></p>\n<p id='t177' class='stm mis'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>line</span> <span class='op'>=</span> <span class='str'>&quot;\\n&quot;</span> <span class='op'>+</span> <span class='nam'>line</span><span class='strut'>&nbsp;</span></p>\n<p id='t178' class='stm mis'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>token</span> <span class='op'>=</span> <span class='op'>(</span><span class='num'>0</span><span class='op'>,</span> <span class='nam'>Generic</span><span class='op'>.</span><span class='nam'>Traceback</span><span class='op'>,</span> <span class='nam'>line</span><span class='op'>)</span><span class='strut'>&nbsp;</span></p>\n<p id='t179' class='stm mis'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>insertions</span><span class='op'>.</span><span class='nam'>append</span><span class='op'>(</span><span class='op'>(</span><span class='nam'>idx</span><span class='op'>,</span> <span class='op'>[</span><span class='nam'>token</span><span class='op'>]</span><span class='op'>)</span><span class='op'>)</span><span class='strut'>&nbsp;</span></p>\n<p id='t180' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t181' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='key'>else</span><span class='op'>:</span><span class='strut'>&nbsp;</span></p>\n<p id='t182' class='stm run hide_run'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='key'>if</span> <span class='nam'>curcode</span><span class='op'>:</span><span class='strut'>&nbsp;</span></p>\n<p id='t183' class='stm mis'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='key'>for</span> <span class='nam'>item</span> <span class='key'>in</span> <span class='nam'>do_insertions</span><span class='op'>(</span><span class='strut'>&nbsp;</span></p>\n<p id='t184' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>insertions</span><span class='op'>,</span> <span class='nam'>jllexer</span><span class='op'>.</span><span class='nam'>get_tokens_unprocessed</span><span class='op'>(</span><span class='nam'>curcode</span><span class='op'>)</span><span class='op'>)</span><span class='op'>:</span><span class='strut'>&nbsp;</span></p>\n<p id='t185' class='stm mis'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='key'>yield</span> <span class='nam'>item</span><span class='strut'>&nbsp;</span></p>\n<p id='t186' class='stm mis'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>curcode</span> <span class='op'>=</span> <span class='str'>&#39;&#39;</span><span class='strut'>&nbsp;</span></p>\n<p id='t187' class='stm mis'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>insertions</span> <span class='op'>=</span> <span class='op'>[</span><span class='op'>]</span><span class='strut'>&nbsp;</span></p>\n<p id='t188' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t189' class='stm run hide_run'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='key'>yield</span> <span class='nam'>match</span><span class='op'>.</span><span class='nam'>start</span><span class='op'>(</span><span class='op'>)</span><span class='op'>,</span> <span class='nam'>Generic</span><span class='op'>.</span><span class='nam'>Output</span><span class='op'>,</span> <span class='nam'>line</span><span class='strut'>&nbsp;</span></p>\n<p id='t190' class='pln'><span class='strut'>&nbsp;</span></p>\n<p id='t191' class='stm run hide_run'>&nbsp; &nbsp; &nbsp; &nbsp; <span class='key'>if</span> <span class='nam'>curcode</span><span class='op'>:</span>&nbsp; <span class='com'># or item:</span><span class='strut'>&nbsp;</span></p>\n<p id='t192' class='stm mis'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='key'>for</span> <span class='nam'>item</span> <span class='key'>in</span> <span class='nam'>do_insertions</span><span class='op'>(</span><span class='strut'>&nbsp;</span></p>\n<p id='t193' class='pln'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='nam'>insertions</span><span class='op'>,</span> <span class='nam'>jllexer</span><span class='op'>.</span><span class='nam'>get_tokens_unprocessed</span><span class='op'>(</span><span class='nam'>curcode</span><span class='op'>)</span><span class='op'>)</span><span class='op'>:</span><span class='strut'>&nbsp;</span></p>\n<p id='t194' class='stm mis'>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class='key'>yield</span> <span class='nam'>item</span><span class='strut'>&nbsp;</span></p>\n                \n            </td>\n        </tr>\n    </table>\n</div>\n\n<div id='footer'>\n    <div class='content'>\n        <p>\n            <a class='nav' href='index.html'>&#xab; index</a> &nbsp; &nbsp; <a class='nav' href='http://nedbatchelder.com/code/coverage'>coverage.py v3.7.1</a>\n        </p>\n    </div>\n</div>\n\n</body>\n</html>\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/tests/.coverage",
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/tests/cover/keybd_open.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/tests/cover/keybd_closed.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/tests/examplefiles/example.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/tests/examplefiles/AlternatingGroup.mu",
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/tests/examplefiles/example.pas",
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/tests/examplefiles/example.xhtml",
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/tests/examplefiles/example.xtend",
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/doc/_static/logo_only.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/doc/_static/logo_new.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/doc/_static/favicon.ico",
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/doc/_themes/pygments14/static/listitem.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/doc/_themes/pygments14/static/pocoo.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/doc/_themes/pygments14/static/logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/doc/_themes/pygments14/static/bodybg.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-pygments-2.0.2-bdr7ezt3ceua7luso2catzhjaky6amxy/spack-src/doc/_themes/pygments14/static/docbg.png"
    ],
    "total_files": 728
}