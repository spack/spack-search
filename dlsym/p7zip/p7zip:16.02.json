{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/CPP/Windows/DLL.cpp": "// Windows/DLL.cpp\n\n#include \"StdAfx.h\"\n\n#ifdef __APPLE_CC__\n#include <mach-o/dyld.h>\n#elif ENV_BEOS\n#include <kernel/image.h>\n#include <Path.h>\n#else\n#define UINT64 DLL_UINT64 // HP-UX , dlfcn.h defines UINT64 but p7zip also defines UINT64\n#include <dlfcn.h>  // dlopen ...\n#undef UINT64\n#endif\n\n#include \"DLL.h\"\n#include \"Defs.h\"\n#ifdef _UNICODE\n#include \"../Common/StringConvert.h\"\n#endif\n\n#define NEED_NAME_WINDOWS_TO_UNIX\n#include \"myPrivate.h\"\n\n// #define TRACEN(u) u;\n#define TRACEN(u)  /* */\n\nnamespace NWindows {\nnamespace NDLL {\n\nbool CLibrary::Free()\n{\nTRACEN((printf(\"CLibrary::Free(this=%p,%p)\\n\",(void *)this,(void *)_module)))\n  if (_module == 0)\n    return true;\n\n#ifdef __APPLE_CC__\n  int ret = NSUnLinkModule ((NSModule)_module, 0);\n#elif ENV_BEOS\n  int ret = unload_add_on((image_id)_module);\n#else\n  int ret = dlclose(_module);\n#endif\nTRACEN((printf(\"CLibrary::Free dlclose(%p)=%d\\n\",(void *)_module,ret)))\n  if (ret != 0) return false;\n  _module = 0;\n  return true;\n}\n\nstatic FARPROC local_GetProcAddress(HMODULE module,LPCSTR lpProcName)\n{\n  void *ptr = 0;\n  TRACEN((printf(\"local_GetProcAddress(%p,%s)\\n\",(void *)module,lpProcName)))\n  if (module) {\n#ifdef __APPLE_CC__\n    char name[MAX_PATHNAME_LEN];\n    snprintf(name,sizeof(name),\"_%s\",lpProcName);\n    name[sizeof(name)-1] = 0;\n    TRACEN((printf(\"NSLookupSymbolInModule(%p,%s)\\n\",(void *)module,name)))\n    NSSymbol sym;\n    sym = NSLookupSymbolInModule((NSModule)module, name);\n    if (sym) {\n      ptr = NSAddressOfSymbol(sym);\n    } else {\n      ptr = 0;\n    }\n#elif ENV_BEOS\n    if (get_image_symbol((image_id)module, lpProcName, B_SYMBOL_TYPE_TEXT, &ptr) != B_OK)\n      ptr = 0;\n#else\n    ptr = dlsym (module, lpProcName);\n#endif\n    TRACEN((printf(\"CLibrary::GetProc : dlsym(%p,%s)=%p\\n\",(void *)module,lpProcName,ptr)))\n  }\n  return (FARPROC)ptr;\n}\n\nFARPROC CLibrary::GetProc(LPCSTR lpProcName) const\n{\n  TRACEN((printf(\"CLibrary::GetProc(%p,%s)\\n\",(void *)_module,lpProcName)))\n  return local_GetProcAddress(_module,lpProcName);\n}\n\nbool CLibrary::Load(LPCTSTR lpLibFileName)\n{\n  if(!Free())\n    return false;\n\n  void *handler = 0;\n  char  name[MAX_PATHNAME_LEN+1];\n#ifdef _UNICODE\n  AString name2 = UnicodeStringToMultiByte(lpLibFileName);\n  strcpy(name,nameWindowToUnix((const char *)name2));\n#else\n  strcpy(name,nameWindowToUnix(lpLibFileName));\n#endif\n\n  // replace \".dll\" with \".so\"\n  size_t len = strlen(name);\n  if ((len >=4) && (strcmp(name+len-4,\".dll\") == 0)) {\n    strcpy(name+len-4,\".so\");\n  }\n\n  TRACEN((printf(\"CLibrary::Load(this=%p,%ls) => %s\\n\",(void *)this,lpLibFileName,name)))\n\n#ifdef __APPLE_CC__\n  NSObjectFileImage image;\n  NSObjectFileImageReturnCode nsret;\n\n  nsret = NSCreateObjectFileImageFromFile (name, &image);\n  if (nsret == NSObjectFileImageSuccess) {\n     TRACEN((printf(\"NSCreateObjectFileImageFromFile(%s) : OK\\n\",name)))\n     handler = (HMODULE)NSLinkModule(image,name,NSLINKMODULE_OPTION_RETURN_ON_ERROR\n           | NSLINKMODULE_OPTION_PRIVATE | NSLINKMODULE_OPTION_BINDNOW);\n  } else {\n     TRACEN((printf(\"NSCreateObjectFileImageFromFile(%s) : ERROR\\n\",name)))\n  }\n#elif ENV_BEOS\n  // normalize path (remove things like \"./\", \"..\", etc..), otherwise it won't work\n  BPath p(name, NULL, true);\n  status_t err = B_OK;\n  image_id image = load_add_on(p.Path());\nTRACEN((printf(\"load_add_on(%s)=%d\\n\",p.Path(),(int)image)))\n  if (image < 0) {\n    err = (image_id)handler;\n    handler = 0;\n  } else {\n    err = 0;\n    handler = (HMODULE)image;\n  }\n#else\n  int options_dlopen = 0;\n#ifdef RTLD_LOCAL\n  options_dlopen |= RTLD_LOCAL;\n#endif\n#ifdef RTLD_NOW\n  options_dlopen |= RTLD_NOW;\n#endif\n#ifdef RTLD_GROUP\n  #if ! (defined(hpux) || defined(__hpux))\n  options_dlopen |= RTLD_GROUP; // mainly for solaris but not for HPUX\n  #endif\n#endif\n  TRACEN((printf(\"CLibrary::Load - dlopen(%s,0x%d)\\n\",name,options_dlopen)))\n  handler = dlopen(name,options_dlopen);\n#endif // __APPLE_CC__\n  TRACEN((printf(\"CLibrary::Load(%s) => %p\\n\",name,handler)))\n  if (handler) {\n\n    // Call DllMain() like in Windows : useless now\n\n    // Propagate the value of global_use_utf16_conversion into the plugins\n    int *tmp = (int *)local_GetProcAddress(handler,\"global_use_utf16_conversion\");\n    if (tmp) *tmp = global_use_utf16_conversion;\n#ifdef ENV_HAVE_LSTAT\n    tmp = (int *)local_GetProcAddress(handler,\"global_use_lstat\");\n    if (tmp) *tmp = global_use_lstat;\n#endif\n    // test construtors calls\n    void (*fctTest)(void) = (void (*)(void))local_GetProcAddress(handler,\"sync_TestConstructor\");\n    if (fctTest) fctTest();\n\n  } else {\n#ifdef __APPLE_CC__\n    NSLinkEditErrors c;\n    int num_err;\n    const char *file,*err;\n    NSLinkEditError(&c,&num_err,&file,&err);\n    printf(\"Can't load '%ls' (%s)\\n\", lpLibFileName,err);\n#elif ENV_BEOS\n    printf(\"Can't load '%ls' (%s)\\n\", lpLibFileName,strerror(err));\n#else\n    printf(\"Can't load '%ls' (%s)\\n\", lpLibFileName,dlerror());\n#endif\n  }\n\n  _module = handler;\n  TRACEN((printf(\"CLibrary::Load(this=%p,%ls) => _module=%p\\n\",(void *)this,lpLibFileName,_module)))\n\n  return true;\n}\n\n\n}}\n\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/GUI/p7zip_16_ok.png",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/GUI/p7zip_32.png",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/GUI/p7zip_16.png",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/GUI/p7zip_16.icns",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/GUI/Contents/Resources/p7zip.icns",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/CPP/ANDROID/Lzham/obj/local/armeabi/objs/Lzham/__/__/__/__/CPP/7zip/Compress/DllExportsCompress.o",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/CPP/ANDROID/Lzham/obj/local/armeabi/objs/Lzham/__/__/__/__/CPP/7zip/Compress/CodecExports.o",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/CPP/ANDROID/Lzham/obj/local/armeabi/objs/Lzham/__/__/__/__/CPP/7zip/Common/StreamUtils.o",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/check/test/7za433_7zip_bzip2.7z",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/check/test/7za433_7zip_lzma2_crypto.7z",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/check/test/7za433_tar.tar",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/check/test/7za433_7zip_lzma2_bcj2.7z",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/check/test/7za.exe.lzma",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/check/test/7za.exe.xz",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/check/test/7za433_7zip_ppmd.7z",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/check/test/7za433_7zip_ppmd_bcj2.7z",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/check/test/7za433_7zip_lzma2.7z",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/check/test/7za433_7zip_lzma.7z",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/check/test/7za433_7zip_lzma_bcj2.7z",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/check/test/7za.exe.lzma86",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/check/test/7za.exe.lzma_eos",
        "/tmp/vanessa/spack-stage/spack-stage-p7zip-16.02-pyhm4pwzdiarkodhricss4fferpisx67/spack-src/check/test/7za433_7zip_lzma_crypto.7z"
    ],
    "total_files": 1236
}