{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libtool.m4": "# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-\n#\n#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,\n#                 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\nm4_define([_LT_COPYING], [dnl\n#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,\n#                 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from http://www.gnu.org/licenses/gpl.html, or\n# obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n])\n\n# serial 56 LT_INIT\n\n\n# LT_PREREQ(VERSION)\n# ------------------\n# Complain and exit if this libtool version is less that VERSION.\nm4_defun([LT_PREREQ],\n[m4_if(m4_version_compare(m4_defn([LT_PACKAGE_VERSION]), [$1]), -1,\n       [m4_default([$3],\n\t\t   [m4_fatal([Libtool version $1 or higher is required],\n\t\t             63)])],\n       [$2])])\n\n\n# _LT_CHECK_BUILDDIR\n# ------------------\n# Complain if the absolute build directory name contains unusual characters\nm4_defun([_LT_CHECK_BUILDDIR],\n[case `pwd` in\n  *\\ * | *\\\t*)\n    AC_MSG_WARN([Libtool does not cope well with whitespace in `pwd`]) ;;\nesac\n])\n\n\n# LT_INIT([OPTIONS])\n# ------------------\nAC_DEFUN([LT_INIT],\n[AC_PREREQ([2.58])dnl We use AC_INCLUDES_DEFAULT\nAC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl\nAC_BEFORE([$0], [LT_LANG])dnl\nAC_BEFORE([$0], [LT_OUTPUT])dnl\nAC_BEFORE([$0], [LTDL_INIT])dnl\nm4_require([_LT_CHECK_BUILDDIR])dnl\n\ndnl Autoconf doesn't catch unexpanded LT_ macros by default:\nm4_pattern_forbid([^_?LT_[A-Z_]+$])dnl\nm4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl\ndnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4\ndnl unless we require an AC_DEFUNed macro:\nAC_REQUIRE([LTOPTIONS_VERSION])dnl\nAC_REQUIRE([LTSUGAR_VERSION])dnl\nAC_REQUIRE([LTVERSION_VERSION])dnl\nAC_REQUIRE([LTOBSOLETE_VERSION])dnl\nm4_require([_LT_PROG_LTMAIN])dnl\n\n_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])\n\ndnl Parse OPTIONS\n_LT_SET_OPTIONS([$0], [$1])\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=\"$ltmain\"\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\nAC_SUBST(LIBTOOL)dnl\n\n_LT_SETUP\n\n# Only expand once:\nm4_define([LT_INIT])\n])# LT_INIT\n\n# Old names:\nAU_ALIAS([AC_PROG_LIBTOOL], [LT_INIT])\nAU_ALIAS([AM_PROG_LIBTOOL], [LT_INIT])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PROG_LIBTOOL], [])\ndnl AC_DEFUN([AM_PROG_LIBTOOL], [])\n\n\n# _LT_CC_BASENAME(CC)\n# -------------------\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nm4_defun([_LT_CC_BASENAME],\n[for cc_temp in $1\"\"; do\n  case $cc_temp in\n    compile | *[[\\\\/]]compile | ccache | *[[\\\\/]]ccache ) ;;\n    distcc | *[[\\\\/]]distcc | purify | *[[\\\\/]]purify ) ;;\n    \\-*) ;;\n    *) break;;\n  esac\ndone\ncc_basename=`$ECHO \"$cc_temp\" | $SED \"s%.*/%%; s%^$host_alias-%%\"`\n])\n\n\n# _LT_FILEUTILS_DEFAULTS\n# ----------------------\n# It is okay to use these file commands and assume they have been set\n# sensibly after `m4_require([_LT_FILEUTILS_DEFAULTS])'.\nm4_defun([_LT_FILEUTILS_DEFAULTS],\n[: ${CP=\"cp -f\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n])# _LT_FILEUTILS_DEFAULTS\n\n\n# _LT_SETUP\n# ---------\nm4_defun([_LT_SETUP],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_REQUIRE([_LT_PREPARE_SED_QUOTE_VARS])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\n\n_LT_DECL([], [host_alias], [0], [The host system])dnl\n_LT_DECL([], [host], [0])dnl\n_LT_DECL([], [host_os], [0])dnl\ndnl\n_LT_DECL([], [build_alias], [0], [The build system])dnl\n_LT_DECL([], [build], [0])dnl\n_LT_DECL([], [build_os], [0])dnl\ndnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\ndnl\nAC_REQUIRE([AC_PROG_LN_S])dnl\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\n_LT_DECL([], [LN_S], [1], [Whether we need soft or hard links])dnl\ndnl\nAC_REQUIRE([LT_CMD_MAX_LEN])dnl\n_LT_DECL([objext], [ac_objext], [0], [Object file suffix (normally \"o\")])dnl\n_LT_DECL([], [exeext], [0], [Executable file suffix (normally \"\")])dnl\ndnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_CMD_RELOAD])dnl\nm4_require([_LT_CHECK_MAGIC_METHOD])dnl\nm4_require([_LT_CMD_OLD_ARCHIVE])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\n\n_LT_CONFIG_LIBTOOL_INIT([\n# See if we are running on zsh, and set the options which allow our\n# commands through without removal of \\ escapes INIT.\nif test -n \"\\${ZSH_VERSION+set}\" ; then\n   setopt NO_GLOB_SUBST\nfi\n])\nif test -n \"${ZSH_VERSION+set}\" ; then\n   setopt NO_GLOB_SUBST\nfi\n\n_LT_CHECK_OBJDIR\n\nm4_require([_LT_TAG_COMPILER])dnl\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test \"X${COLLECT_NAMES+set}\" != Xset; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Global variables:\nofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a `.a' archive for static linking (except MSVC,\n# which needs '.lib').\nlibext=a\n\nwith_gnu_ld=\"$lt_cv_prog_gnu_ld\"\n\nold_CC=\"$CC\"\nold_CFLAGS=\"$CFLAGS\"\n\n# Set sane defaults for various variables\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$LTCFLAGS\" && LTCFLAGS=$CFLAGS\ntest -z \"$LD\" && LD=ld\ntest -z \"$ac_objext\" && ac_objext=o\n\n_LT_CC_BASENAME([$compiler])\n\n# Only perform the check for file, if the check method requires it\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    _LT_PATH_MAGIC\n  fi\n  ;;\nesac\n\n# Use C for the default configuration in the libtool script\nLT_SUPPORTED_TAG([CC])\n_LT_LANG_C_CONFIG\n_LT_LANG_DEFAULT_CONFIG\n_LT_CONFIG_COMMANDS\n])# _LT_SETUP\n\n\n# _LT_PREPARE_SED_QUOTE_VARS\n# --------------------------\n# Define a few sed substitution that help us do robust quoting.\nm4_defun([_LT_PREPARE_SED_QUOTE_VARS],\n[# Backslashify metacharacters that are still active within\n# double-quoted strings.\nsed_quote_subst='s/\\([[\"`$\\\\]]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([[\"`\\\\]]\\)/\\\\\\1/g'\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to delay expansion of an escaped single quote.\ndelay_single_quote_subst='s/'\\''/'\\'\\\\\\\\\\\\\\'\\''/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n])\n\n# _LT_PROG_LTMAIN\n# ---------------\n# Note that this code is called both from `configure', and `config.status'\n# now that we use AC_CONFIG_COMMANDS to generate libtool.  Notably,\n# `config.status' has no value for ac_aux_dir unless we are using Automake,\n# so we pass a copy along to make sure it has a sensible value anyway.\nm4_defun([_LT_PROG_LTMAIN],\n[m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([ltmain.sh])])dnl\n_LT_CONFIG_LIBTOOL_INIT([ac_aux_dir='$ac_aux_dir'])\nltmain=\"$ac_aux_dir/ltmain.sh\"\n])# _LT_PROG_LTMAIN\n\n\n## ------------------------------------- ##\n## Accumulate code for creating libtool. ##\n## ------------------------------------- ##\n\n# So that we can recreate a full libtool script including additional\n# tags, we accumulate the chunks of code to send to AC_CONFIG_COMMANDS\n# in macros and then make a single call at the end using the `libtool'\n# label.\n\n\n# _LT_CONFIG_LIBTOOL_INIT([INIT-COMMANDS])\n# ----------------------------------------\n# Register INIT-COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL_INIT],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_INIT],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_INIT])\n\n\n# _LT_CONFIG_LIBTOOL([COMMANDS])\n# ------------------------------\n# Register COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_COMMANDS],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS])\n\n\n# _LT_CONFIG_SAVE_COMMANDS([COMMANDS], [INIT_COMMANDS])\n# -----------------------------------------------------\nm4_defun([_LT_CONFIG_SAVE_COMMANDS],\n[_LT_CONFIG_LIBTOOL([$1])\n_LT_CONFIG_LIBTOOL_INIT([$2])\n])\n\n\n# _LT_FORMAT_COMMENT([COMMENT])\n# -----------------------------\n# Add leading comment marks to the start of each line, and a trailing\n# full-stop to the whole comment if one is not present already.\nm4_define([_LT_FORMAT_COMMENT],\n[m4_ifval([$1], [\nm4_bpatsubst([m4_bpatsubst([$1], [^ *], [# ])],\n              [['`$\\]], [\\\\\\&])]m4_bmatch([$1], [[!?.]$], [], [.])\n)])\n\n\n\n## ------------------------ ##\n## FIXME: Eliminate VARNAME ##\n## ------------------------ ##\n\n\n# _LT_DECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION], [IS-TAGGED?])\n# -------------------------------------------------------------------\n# CONFIGNAME is the name given to the value in the libtool script.\n# VARNAME is the (base) name used in the configure script.\n# VALUE may be 0, 1 or 2 for a computed quote escaped value based on\n# VARNAME.  Any other value will be used directly.\nm4_define([_LT_DECL],\n[lt_if_append_uniq([lt_decl_varnames], [$2], [, ],\n    [lt_dict_add_subkey([lt_decl_dict], [$2], [libtool_name],\n\t[m4_ifval([$1], [$1], [$2])])\n    lt_dict_add_subkey([lt_decl_dict], [$2], [value], [$3])\n    m4_ifval([$4],\n\t[lt_dict_add_subkey([lt_decl_dict], [$2], [description], [$4])])\n    lt_dict_add_subkey([lt_decl_dict], [$2],\n\t[tagged?], [m4_ifval([$5], [yes], [no])])])\n])\n\n\n# _LT_TAGDECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION])\n# --------------------------------------------------------\nm4_define([_LT_TAGDECL], [_LT_DECL([$1], [$2], [$3], [$4], [yes])])\n\n\n# lt_decl_tag_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_tag_varnames],\n[_lt_decl_filter([tagged?], [yes], $@)])\n\n\n# _lt_decl_filter(SUBKEY, VALUE, [SEPARATOR], [VARNAME1..])\n# ---------------------------------------------------------\nm4_define([_lt_decl_filter],\n[m4_case([$#],\n  [0], [m4_fatal([$0: too few arguments: $#])],\n  [1], [m4_fatal([$0: too few arguments: $#: $1])],\n  [2], [lt_dict_filter([lt_decl_dict], [$1], [$2], [], lt_decl_varnames)],\n  [3], [lt_dict_filter([lt_decl_dict], [$1], [$2], [$3], lt_decl_varnames)],\n  [lt_dict_filter([lt_decl_dict], $@)])[]dnl\n])\n\n\n# lt_decl_quote_varnames([SEPARATOR], [VARNAME1...])\n# --------------------------------------------------\nm4_define([lt_decl_quote_varnames],\n[_lt_decl_filter([value], [1], $@)])\n\n\n# lt_decl_dquote_varnames([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_dquote_varnames],\n[_lt_decl_filter([value], [2], $@)])\n\n\n# lt_decl_varnames_tagged([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_varnames_tagged],\n[m4_assert([$# <= 2])dnl\n_$0(m4_quote(m4_default([$1], [[, ]])),\n    m4_ifval([$2], [[$2]], [m4_dquote(lt_decl_tag_varnames)]),\n    m4_split(m4_normalize(m4_quote(_LT_TAGS)), [ ]))])\nm4_define([_lt_decl_varnames_tagged],\n[m4_ifval([$3], [lt_combine([$1], [$2], [_], $3)])])\n\n\n# lt_decl_all_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_all_varnames],\n[_$0(m4_quote(m4_default([$1], [[, ]])),\n     m4_if([$2], [],\n\t   m4_quote(lt_decl_varnames),\n\tm4_quote(m4_shift($@))))[]dnl\n])\nm4_define([_lt_decl_all_varnames],\n[lt_join($@, lt_decl_varnames_tagged([$1],\n\t\t\tlt_decl_tag_varnames([[, ]], m4_shift($@))))dnl\n])\n\n\n# _LT_CONFIG_STATUS_DECLARE([VARNAME])\n# ------------------------------------\n# Quote a variable value, and forward it to `config.status' so that its\n# declaration there will have the same value as in `configure'.  VARNAME\n# must have a single quote delimited value for this to work.\nm4_define([_LT_CONFIG_STATUS_DECLARE],\n[$1='`$ECHO \"$][$1\" | $SED \"$delay_single_quote_subst\"`'])\n\n\n# _LT_CONFIG_STATUS_DECLARATIONS\n# ------------------------------\n# We delimit libtool config variables with single quotes, so when\n# we write them to config.status, we have to be sure to quote all\n# embedded single quotes properly.  In configure, this macro expands\n# each variable declared with _LT_DECL (and _LT_TAGDECL) into:\n#\n#    <var>='`$ECHO \"$<var>\" | $SED \"$delay_single_quote_subst\"`'\nm4_defun([_LT_CONFIG_STATUS_DECLARATIONS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_all_varnames),\n    [m4_n([_LT_CONFIG_STATUS_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAGS\n# ----------------\n# Output comment and list of tags supported by the script\nm4_defun([_LT_LIBTOOL_TAGS],\n[_LT_FORMAT_COMMENT([The names of the tagged configurations supported by this script])dnl\navailable_tags=\"_LT_TAGS\"dnl\n])\n\n\n# _LT_LIBTOOL_DECLARE(VARNAME, [TAG])\n# -----------------------------------\n# Extract the dictionary values for VARNAME (optionally with TAG) and\n# expand to a commented shell variable setting:\n#\n#    # Some comment about what VAR is for.\n#    visible_name=$lt_internal_name\nm4_define([_LT_LIBTOOL_DECLARE],\n[_LT_FORMAT_COMMENT(m4_quote(lt_dict_fetch([lt_decl_dict], [$1],\n\t\t\t\t\t   [description])))[]dnl\nm4_pushdef([_libtool_name],\n    m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [libtool_name])))[]dnl\nm4_case(m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [value])),\n    [0], [_libtool_name=[$]$1],\n    [1], [_libtool_name=$lt_[]$1],\n    [2], [_libtool_name=$lt_[]$1],\n    [_libtool_name=lt_dict_fetch([lt_decl_dict], [$1], [value])])[]dnl\nm4_ifval([$2], [_$2])[]m4_popdef([_libtool_name])[]dnl\n])\n\n\n# _LT_LIBTOOL_CONFIG_VARS\n# -----------------------\n# Produce commented declarations of non-tagged libtool config variables\n# suitable for insertion in the LIBTOOL CONFIG section of the `libtool'\n# script.  Tagged libtool config variables (even for the LIBTOOL CONFIG\n# section) are produced by _LT_LIBTOOL_TAG_VARS.\nm4_defun([_LT_LIBTOOL_CONFIG_VARS],\n[m4_foreach([_lt_var],\n    m4_quote(_lt_decl_filter([tagged?], [no], [], lt_decl_varnames)),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAG_VARS(TAG)\n# -------------------------\nm4_define([_LT_LIBTOOL_TAG_VARS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_tag_varnames),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var, [$1])])])])\n\n\n# _LT_TAGVAR(VARNAME, [TAGNAME])\n# ------------------------------\nm4_define([_LT_TAGVAR], [m4_ifval([$2], [$1_$2], [$1])])\n\n\n# _LT_CONFIG_COMMANDS\n# -------------------\n# Send accumulated output to $CONFIG_STATUS.  Thanks to the lists of\n# variables for single and double quote escaping we saved from calls\n# to _LT_DECL, we can put quote escaped variables declarations\n# into `config.status', and then the shell code to quote escape them in\n# for loops in `config.status'.  Finally, any additional code accumulated\n# from calls to _LT_CONFIG_LIBTOOL_INIT is expanded.\nm4_defun([_LT_CONFIG_COMMANDS],\n[AC_PROVIDE_IFELSE([LT_OUTPUT],\n\tdnl If the libtool generation code has been placed in $CONFIG_LT,\n\tdnl instead of duplicating it all over again into config.status,\n\tdnl then we will have config.status run $CONFIG_LT later, so it\n\tdnl needs to know what name is stored there:\n        [AC_CONFIG_COMMANDS([libtool],\n            [$SHELL $CONFIG_LT || AS_EXIT(1)], [CONFIG_LT='$CONFIG_LT'])],\n    dnl If the libtool generation code is destined for config.status,\n    dnl expand the accumulated commands and init code now:\n    [AC_CONFIG_COMMANDS([libtool],\n        [_LT_OUTPUT_LIBTOOL_COMMANDS], [_LT_OUTPUT_LIBTOOL_COMMANDS_INIT])])\n])#_LT_CONFIG_COMMANDS\n\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS_INIT],\n[\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nsed_quote_subst='$sed_quote_subst'\ndouble_quote_subst='$double_quote_subst'\ndelay_variable_subst='$delay_variable_subst'\n_LT_CONFIG_STATUS_DECLARATIONS\nLTCC='$LTCC'\nLTCFLAGS='$LTCFLAGS'\ncompiler='$compiler_DEFAULT'\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$[]1\n_LTECHO_EOF'\n}\n\n# Quote evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_quote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED \\\\\"\\\\\\$sed_quote_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\"\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n# Double-quote double-evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_dquote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED -e \\\\\"\\\\\\$double_quote_subst\\\\\" -e \\\\\"\\\\\\$sed_quote_subst\\\\\" -e \\\\\"\\\\\\$delay_variable_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\"\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n_LT_OUTPUT_LIBTOOL_INIT\n])\n\n# _LT_GENERATED_FILE_INIT(FILE, [COMMENT])\n# ------------------------------------\n# Generate a child script FILE with all initialization necessary to\n# reuse the environment learned by the parent script, and make the\n# file executable.  If COMMENT is supplied, it is inserted after the\n# `#!' sequence but before initialization text begins.  After this\n# macro, additional text can be appended to FILE to form the body of\n# the child script.  The macro ends with non-zero status if the\n# file could not be fully written (such as if the disk is full).\nm4_ifdef([AS_INIT_GENERATED],\n[m4_defun([_LT_GENERATED_FILE_INIT],[AS_INIT_GENERATED($@)])],\n[m4_defun([_LT_GENERATED_FILE_INIT],\n[m4_require([AS_PREPARE])]dnl\n[m4_pushdef([AS_MESSAGE_LOG_FD])]dnl\n[lt_write_fail=0\ncat >$1 <<_ASEOF || lt_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n$2\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$1 <<\\_ASEOF || lt_write_fail=1\nAS_SHELL_SANITIZE\n_AS_PREPARE\nexec AS_MESSAGE_FD>&1\n_ASEOF\ntest $lt_write_fail = 0 && chmod +x $1[]dnl\nm4_popdef([AS_MESSAGE_LOG_FD])])])# _LT_GENERATED_FILE_INIT\n\n# LT_OUTPUT\n# ---------\n# This macro allows early generation of the libtool script (before\n# AC_OUTPUT is called), incase it is used in configure for compilation\n# tests.\nAC_DEFUN([LT_OUTPUT],\n[: ${CONFIG_LT=./config.lt}\nAC_MSG_NOTICE([creating $CONFIG_LT])\n_LT_GENERATED_FILE_INIT([\"$CONFIG_LT\"],\n[# Run this file to recreate a libtool stub with the current configuration.])\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nlt_cl_silent=false\nexec AS_MESSAGE_LOG_FD>>config.log\n{\n  echo\n  AS_BOX([Running $as_me.])\n} >&AS_MESSAGE_LOG_FD\n\nlt_cl_help=\"\\\n\\`$as_me' creates a local libtool stub from the current configuration,\nfor use in further configure time tests before the real libtool is\ngenerated.\n\nUsage: $[0] [[OPTIONS]]\n\n  -h, --help      print this help, then exit\n  -V, --version   print version number, then exit\n  -q, --quiet     do not print progress messages\n  -d, --debug     don't remove temporary files\n\nReport bugs to <bug-libtool@gnu.org>.\"\n\nlt_cl_version=\"\\\nm4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl\nm4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])\nconfigured by $[0], generated by m4_PACKAGE_STRING.\n\nCopyright (C) 2009 Free Software Foundation, Inc.\nThis config.lt script is free software; the Free Software Foundation\ngives unlimited permision to copy, distribute and modify it.\"\n\nwhile test $[#] != 0\ndo\n  case $[1] in\n    --version | --v* | -V )\n      echo \"$lt_cl_version\"; exit 0 ;;\n    --help | --h* | -h )\n      echo \"$lt_cl_help\"; exit 0 ;;\n    --debug | --d* | -d )\n      debug=: ;;\n    --quiet | --q* | --silent | --s* | -q )\n      lt_cl_silent=: ;;\n\n    -*) AC_MSG_ERROR([unrecognized option: $[1]\nTry \\`$[0] --help' for more information.]) ;;\n\n    *) AC_MSG_ERROR([unrecognized argument: $[1]\nTry \\`$[0] --help' for more information.]) ;;\n  esac\n  shift\ndone\n\nif $lt_cl_silent; then\n  exec AS_MESSAGE_FD>/dev/null\nfi\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<_LTEOF\n_LT_OUTPUT_LIBTOOL_COMMANDS_INIT\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nAC_MSG_NOTICE([creating $ofile])\n_LT_OUTPUT_LIBTOOL_COMMANDS\nAS_EXIT(0)\n_LTEOF\nchmod +x \"$CONFIG_LT\"\n\n# configure is writing to config.log, but config.lt does its own redirection,\n# appending to config.log, which fails on DOS, as config.log is still kept\n# open by configure.  Here we exec the FD to /dev/null, effectively closing\n# config.log, so it can be properly (re)opened and appended to by config.lt.\nlt_cl_success=:\ntest \"$silent\" = yes &&\n  lt_config_lt_args=\"$lt_config_lt_args --quiet\"\nexec AS_MESSAGE_LOG_FD>/dev/null\n$SHELL \"$CONFIG_LT\" $lt_config_lt_args || lt_cl_success=false\nexec AS_MESSAGE_LOG_FD>>config.log\n$lt_cl_success || AS_EXIT(1)\n])# LT_OUTPUT\n\n\n# _LT_CONFIG(TAG)\n# ---------------\n# If TAG is the built-in tag, create an initial libtool script with a\n# default configuration from the untagged config vars.  Otherwise add code\n# to config.status for appending the configuration named by TAG from the\n# matching tagged config vars.\nm4_defun([_LT_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_CONFIG_SAVE_COMMANDS([\n  m4_define([_LT_TAG], m4_if([$1], [], [C], [$1]))dnl\n  m4_if(_LT_TAG, [C], [\n    # See if we are running on zsh, and set the options which allow our\n    # commands through without removal of \\ escapes.\n    if test -n \"${ZSH_VERSION+set}\" ; then\n      setopt NO_GLOB_SUBST\n    fi\n\n    cfgfile=\"${ofile}T\"\n    trap \"$RM \\\"$cfgfile\\\"; exit 1\" 1 2 15\n    $RM \"$cfgfile\"\n\n    cat <<_LT_EOF >> \"$cfgfile\"\n#! $SHELL\n\n# `$ECHO \"$ofile\" | sed 's%^.*/%%'` - Provide generalized library-building support services.\n# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION\n# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n#\n_LT_COPYING\n_LT_LIBTOOL_TAGS\n\n# ### BEGIN LIBTOOL CONFIG\n_LT_LIBTOOL_CONFIG_VARS\n_LT_LIBTOOL_TAG_VARS\n# ### END LIBTOOL CONFIG\n\n_LT_EOF\n\n  case $host_os in\n  aix3*)\n    cat <<\\_LT_EOF >> \"$cfgfile\"\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test \"X${COLLECT_NAMES+set}\" != Xset; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\n_LT_EOF\n    ;;\n  esac\n\n  _LT_PROG_LTMAIN\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '/^# Generated shell functions inserted here/q' \"$ltmain\" >> \"$cfgfile\" \\\n    || (rm -f \"$cfgfile\"; exit 1)\n\n  _LT_PROG_XSI_SHELLFNS\n\n  sed -n '/^# Generated shell functions inserted here/,$p' \"$ltmain\" >> \"$cfgfile\" \\\n    || (rm -f \"$cfgfile\"; exit 1)\n\n  mv -f \"$cfgfile\" \"$ofile\" ||\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n],\n[cat <<_LT_EOF >> \"$ofile\"\n\ndnl Unfortunately we have to use $1 here, since _LT_TAG is not expanded\ndnl in a comment (ie after a #).\n# ### BEGIN LIBTOOL TAG CONFIG: $1\n_LT_LIBTOOL_TAG_VARS(_LT_TAG)\n# ### END LIBTOOL TAG CONFIG: $1\n_LT_EOF\n])dnl /m4_if\n],\n[m4_if([$1], [], [\n    PACKAGE='$PACKAGE'\n    VERSION='$VERSION'\n    TIMESTAMP='$TIMESTAMP'\n    RM='$RM'\n    ofile='$ofile'], [])\n])dnl /_LT_CONFIG_SAVE_COMMANDS\n])# _LT_CONFIG\n\n\n# LT_SUPPORTED_TAG(TAG)\n# ---------------------\n# Trace this macro to discover what tags are supported by the libtool\n# --tag option, using:\n#    autoconf --trace 'LT_SUPPORTED_TAG:$1'\nAC_DEFUN([LT_SUPPORTED_TAG], [])\n\n\n# C support is built-in for now\nm4_define([_LT_LANG_C_enabled], [])\nm4_define([_LT_TAGS], [])\n\n\n# LT_LANG(LANG)\n# -------------\n# Enable libtool support for the given language if not already enabled.\nAC_DEFUN([LT_LANG],\n[AC_BEFORE([$0], [LT_OUTPUT])dnl\nm4_case([$1],\n  [C],\t\t\t[_LT_LANG(C)],\n  [C++],\t\t[_LT_LANG(CXX)],\n  [Java],\t\t[_LT_LANG(GCJ)],\n  [Fortran 77],\t\t[_LT_LANG(F77)],\n  [Fortran],\t\t[_LT_LANG(FC)],\n  [Windows Resource],\t[_LT_LANG(RC)],\n  [m4_ifdef([_LT_LANG_]$1[_CONFIG],\n    [_LT_LANG($1)],\n    [m4_fatal([$0: unsupported language: \"$1\"])])])dnl\n])# LT_LANG\n\n\n# _LT_LANG(LANGNAME)\n# ------------------\nm4_defun([_LT_LANG],\n[m4_ifdef([_LT_LANG_]$1[_enabled], [],\n  [LT_SUPPORTED_TAG([$1])dnl\n  m4_append([_LT_TAGS], [$1 ])dnl\n  m4_define([_LT_LANG_]$1[_enabled], [])dnl\n  _LT_LANG_$1_CONFIG($1)])dnl\n])# _LT_LANG\n\n\n# _LT_LANG_DEFAULT_CONFIG\n# -----------------------\nm4_defun([_LT_LANG_DEFAULT_CONFIG],\n[AC_PROVIDE_IFELSE([AC_PROG_CXX],\n  [LT_LANG(CXX)],\n  [m4_define([AC_PROG_CXX], defn([AC_PROG_CXX])[LT_LANG(CXX)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_F77],\n  [LT_LANG(F77)],\n  [m4_define([AC_PROG_F77], defn([AC_PROG_F77])[LT_LANG(F77)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_FC],\n  [LT_LANG(FC)],\n  [m4_define([AC_PROG_FC], defn([AC_PROG_FC])[LT_LANG(FC)])])\n\ndnl The call to [A][M_PROG_GCJ] is quoted like that to stop aclocal\ndnl pulling things in needlessly.\nAC_PROVIDE_IFELSE([AC_PROG_GCJ],\n  [LT_LANG(GCJ)],\n  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],\n    [LT_LANG(GCJ)],\n    [AC_PROVIDE_IFELSE([LT_PROG_GCJ],\n      [LT_LANG(GCJ)],\n      [m4_ifdef([AC_PROG_GCJ],\n\t[m4_define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([A][M_PROG_GCJ],\n\t[m4_define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([LT_PROG_GCJ],\n\t[m4_define([LT_PROG_GCJ], defn([LT_PROG_GCJ])[LT_LANG(GCJ)])])])])])\n\nAC_PROVIDE_IFELSE([LT_PROG_RC],\n  [LT_LANG(RC)],\n  [m4_define([LT_PROG_RC], defn([LT_PROG_RC])[LT_LANG(RC)])])\n])# _LT_LANG_DEFAULT_CONFIG\n\n# Obsolete macros:\nAU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])\nAU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])\nAU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])\nAU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])\nAU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_CXX], [])\ndnl AC_DEFUN([AC_LIBTOOL_F77], [])\ndnl AC_DEFUN([AC_LIBTOOL_FC], [])\ndnl AC_DEFUN([AC_LIBTOOL_GCJ], [])\ndnl AC_DEFUN([AC_LIBTOOL_RC], [])\n\n\n# _LT_TAG_COMPILER\n# ----------------\nm4_defun([_LT_TAG_COMPILER],\n[AC_REQUIRE([AC_PROG_CC])dnl\n\n_LT_DECL([LTCC], [CC], [1], [A C compiler])dnl\n_LT_DECL([LTCFLAGS], [CFLAGS], [1], [LTCC compiler flags])dnl\n_LT_TAGDECL([CC], [compiler], [1], [A language specific compiler])dnl\n_LT_TAGDECL([with_gcc], [GCC], [0], [Is the compiler the GNU compiler?])dnl\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n])# _LT_TAG_COMPILER\n\n\n# _LT_COMPILER_BOILERPLATE\n# ------------------------\n# Check for compiler boilerplate output or warnings with\n# the simple compiler test code.\nm4_defun([_LT_COMPILER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$RM conftest*\n])# _LT_COMPILER_BOILERPLATE\n\n\n# _LT_LINKER_BOILERPLATE\n# ----------------------\n# Check for linker boilerplate output or warnings with\n# the simple link test code.\nm4_defun([_LT_LINKER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$RM -r conftest*\n])# _LT_LINKER_BOILERPLATE\n\n# _LT_REQUIRED_DARWIN_CHECKS\n# -------------------------\nm4_defun_once([_LT_REQUIRED_DARWIN_CHECKS],[\n  case $host_os in\n    rhapsody* | darwin*)\n    AC_CHECK_TOOL([DSYMUTIL], [dsymutil], [:])\n    AC_CHECK_TOOL([NMEDIT], [nmedit], [:])\n    AC_CHECK_TOOL([LIPO], [lipo], [:])\n    AC_CHECK_TOOL([OTOOL], [otool], [:])\n    AC_CHECK_TOOL([OTOOL64], [otool64], [:])\n    _LT_DECL([], [DSYMUTIL], [1],\n      [Tool to manipulate archived DWARF debug symbol files on Mac OS X])\n    _LT_DECL([], [NMEDIT], [1],\n      [Tool to change global to local symbols on Mac OS X])\n    _LT_DECL([], [LIPO], [1],\n      [Tool to manipulate fat objects and archives on Mac OS X])\n    _LT_DECL([], [OTOOL], [1],\n      [ldd/readelf like tool for Mach-O binaries on Mac OS X])\n    _LT_DECL([], [OTOOL64], [1],\n      [ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4])\n\n    AC_CACHE_CHECK([for -single_module linker flag],[lt_cv_apple_cc_single_mod],\n      [lt_cv_apple_cc_single_mod=no\n      if test -z \"${LT_MULTI_MODULE}\"; then\n\t# By default we will add the -single_module flag. You can override\n\t# by either setting the environment variable LT_MULTI_MODULE\n\t# non-empty at configure time, or by adding -multi_module to the\n\t# link flags.\n\trm -rf libconftest.dylib*\n\techo \"int foo(void){return 1;}\" > conftest.c\n\techo \"$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n-dynamiclib -Wl,-single_module conftest.c\" >&AS_MESSAGE_LOG_FD\n\t$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n\t  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err\n        _lt_result=$?\n\tif test -f libconftest.dylib && test ! -s conftest.err && test $_lt_result = 0; then\n\t  lt_cv_apple_cc_single_mod=yes\n\telse\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\tfi\n\trm -rf libconftest.dylib*\n\trm -f conftest.*\n      fi])\n    AC_CACHE_CHECK([for -exported_symbols_list linker flag],\n      [lt_cv_ld_exported_symbols_list],\n      [lt_cv_ld_exported_symbols_list=no\n      save_LDFLAGS=$LDFLAGS\n      echo \"_main\" > conftest.sym\n      LDFLAGS=\"$LDFLAGS -Wl,-exported_symbols_list,conftest.sym\"\n      AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n\t[lt_cv_ld_exported_symbols_list=yes],\n\t[lt_cv_ld_exported_symbols_list=no])\n\tLDFLAGS=\"$save_LDFLAGS\"\n    ])\n    AC_CACHE_CHECK([for -force_load linker flag],[lt_cv_ld_force_load],\n      [lt_cv_ld_force_load=no\n      cat > conftest.c << _LT_EOF\nint forced_loaded() { return 2;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS -c -o conftest.o conftest.c\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&AS_MESSAGE_LOG_FD\n      echo \"$AR cru libconftest.a conftest.o\" >&AS_MESSAGE_LOG_FD\n      $AR cru libconftest.a conftest.o 2>&AS_MESSAGE_LOG_FD\n      cat > conftest.c << _LT_EOF\nint main() { return 0;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a 2>conftest.err\n      _lt_result=$?\n      if test -f conftest && test ! -s conftest.err && test $_lt_result = 0 && $GREP forced_load conftest 2>&1 >/dev/null; then\n\tlt_cv_ld_force_load=yes\n      else\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      fi\n        rm -f conftest.err libconftest.a conftest conftest.c\n        rm -rf conftest.dSYM\n    ])\n    case $host_os in\n    rhapsody* | darwin1.[[012]])\n      _lt_dar_allow_undefined='${wl}-undefined ${wl}suppress' ;;\n    darwin1.*)\n      _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;\n    darwin*) # darwin 5.x on\n      # if running on 10.5 or later, the deployment target defaults\n      # to the OS version, if on x86, and 10.4, the deployment\n      # target defaults to 10.4. Don't you love it?\n      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n\t10.0,*86*-darwin8*|10.0,*-darwin[[91]]*)\n\t  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;\n\t10.[[012]]*)\n\t  _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;\n\t10.*)\n\t  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;\n      esac\n    ;;\n  esac\n    if test \"$lt_cv_apple_cc_single_mod\" = \"yes\"; then\n      _lt_dar_single_mod='$single_module'\n    fi\n    if test \"$lt_cv_ld_exported_symbols_list\" = \"yes\"; then\n      _lt_dar_export_syms=' ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'\n    else\n      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/${libname}-symbols.expsym ${lib}'\n    fi\n    if test \"$DSYMUTIL\" != \":\" && test \"$lt_cv_ld_force_load\" = \"no\"; then\n      _lt_dsymutil='~$DSYMUTIL $lib || :'\n    else\n      _lt_dsymutil=\n    fi\n    ;;\n  esac\n])\n\n\n# _LT_DARWIN_LINKER_FEATURES\n# --------------------------\n# Checks for linker and compiler features on darwin\nm4_defun([_LT_DARWIN_LINKER_FEATURES],\n[\n  m4_require([_LT_REQUIRED_DARWIN_CHECKS])\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_automatic, $1)=yes\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  if test \"$lt_cv_ld_force_load\" = \"yes\"; then\n    _LT_TAGVAR(whole_archive_flag_spec, $1)='`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience ${wl}-force_load,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"`'\n  else\n    _LT_TAGVAR(whole_archive_flag_spec, $1)=''\n  fi\n  _LT_TAGVAR(link_all_deplibs, $1)=yes\n  _LT_TAGVAR(allow_undefined_flag, $1)=\"$_lt_dar_allow_undefined\"\n  case $cc_basename in\n     ifort*) _lt_dar_can_shared=yes ;;\n     *) _lt_dar_can_shared=$GCC ;;\n  esac\n  if test \"$_lt_dar_can_shared\" = \"yes\"; then\n    output_verbose_link_cmd=func_echo_all\n    _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod${_lt_dsymutil}\"\n    _LT_TAGVAR(module_cmds, $1)=\"\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags${_lt_dsymutil}\"\n    _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's,^,_,' < \\$export_symbols > \\$output_objdir/\\${libname}-symbols.expsym~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring ${_lt_dar_single_mod}${_lt_dar_export_syms}${_lt_dsymutil}\"\n    _LT_TAGVAR(module_expsym_cmds, $1)=\"sed -e 's,^,_,' < \\$export_symbols > \\$output_objdir/\\${libname}-symbols.expsym~\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags${_lt_dar_export_syms}${_lt_dsymutil}\"\n    m4_if([$1], [CXX],\n[   if test \"$lt_cv_apple_cc_single_mod\" != \"yes\"; then\n      _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -r -keep_private_externs -nostdlib -o \\${lib}-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\${lib}-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring${_lt_dsymutil}\"\n      _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's,^,_,' < \\$export_symbols > \\$output_objdir/\\${libname}-symbols.expsym~\\$CC -r -keep_private_externs -nostdlib -o \\${lib}-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\${lib}-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring${_lt_dar_export_syms}${_lt_dsymutil}\"\n    fi\n],[])\n  else\n  _LT_TAGVAR(ld_shlibs, $1)=no\n  fi\n])\n\n# _LT_SYS_MODULE_PATH_AIX\n# -----------------------\n# Links a minimal program and checks the executable\n# for the system default hardcoded library path. In most cases,\n# this is /usr/lib:/lib, but when the MPI compilers are used\n# the location of the communication and MPI libs are included too.\n# If we don't find anything, use the default library path according\n# to the aix ld manual.\nm4_defun([_LT_SYS_MODULE_PATH_AIX],\n[m4_require([_LT_DECL_SED])dnl\nAC_LINK_IFELSE(AC_LANG_PROGRAM,[\nlt_aix_libpath_sed='\n    /Import File Strings/,/^$/ {\n\t/^0/ {\n\t    s/^0  *\\(.*\\)$/\\1/\n\t    p\n\t}\n    }'\naix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n# Check for a 64-bit object if we didn't find anything.\nif test -z \"$aix_libpath\"; then\n  aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\nfi],[])\nif test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n])# _LT_SYS_MODULE_PATH_AIX\n\n\n# _LT_SHELL_INIT(ARG)\n# -------------------\nm4_define([_LT_SHELL_INIT],\n[m4_divert_text([M4SH-INIT], [$1\n])])# _LT_SHELL_INIT\n\n\n\n# _LT_PROG_ECHO_BACKSLASH\n# -----------------------\n# Find how we can fake an echo command that does not interpret backslash.\n# In particular, with Autoconf 2.60 or later we add some code to the start\n# of the generated configure script which will find a shell with a builtin\n# printf (which we can use as an echo command).\nm4_defun([_LT_PROG_ECHO_BACKSLASH],\n[ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n\nAC_MSG_CHECKING([how to print strings])\n# Test print first, because it will be a builtin if present.\nif test \"X`print -r -- -n 2>/dev/null`\" = X-n && \\\n   test \"X`print -r -- $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='print -r --'\nelif test \"X`printf %s $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='printf %s\\n'\nelse\n  # Use this function as a fallback that always works.\n  func_fallback_echo ()\n  {\n    eval 'cat <<_LTECHO_EOF\n$[]1\n_LTECHO_EOF'\n  }\n  ECHO='func_fallback_echo'\nfi\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\" \n}\n\ncase \"$ECHO\" in\n  printf*) AC_MSG_RESULT([printf]) ;;\n  print*) AC_MSG_RESULT([print -r]) ;;\n  *) AC_MSG_RESULT([cat]) ;;\nesac\n\nm4_ifdef([_AS_DETECT_SUGGESTED],\n[_AS_DETECT_SUGGESTED([\n  test -n \"${ZSH_VERSION+set}${BASH_VERSION+set}\" || (\n    ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n    PATH=/empty FPATH=/empty; export PATH FPATH\n    test \"X`printf %s $ECHO`\" = \"X$ECHO\" \\\n      || test \"X`print -r -- $ECHO`\" = \"X$ECHO\" )])])\n\n_LT_DECL([], [SHELL], [1], [Shell to use when invoking shell scripts])\n_LT_DECL([], [ECHO], [1], [An echo program that protects backslashes])\n])# _LT_PROG_ECHO_BACKSLASH\n\n\n# _LT_ENABLE_LOCK\n# ---------------\nm4_defun([_LT_ENABLE_LOCK],\n[AC_ARG_ENABLE([libtool-lock],\n  [AS_HELP_STRING([--disable-libtool-lock],\n    [avoid locking (might break parallel builds)])])\ntest \"x$enable_libtool_lock\" != xno && enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.$ac_objext` in\n      *ELF-32*)\n\tHPUX_IA64_MODE=\"32\"\n\t;;\n      *ELF-64*)\n\tHPUX_IA64_MODE=\"64\"\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out which ABI we are using.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    if test \"$lt_cv_prog_gnu_ld\" = yes; then\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -melf32bsmip\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -melf32bmipn32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -melf64bmip\"\n\t;;\n      esac\n    else\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -32\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -n32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -64\"\n\t  ;;\n      esac\n    fi\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*kfreebsd*-gnu|x86_64-*linux*|powerpc*-*linux*| \\\ns390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n      *32-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_i386_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    case `/usr/bin/file conftest.o` in\n\t      *x86-64*)\n\t\tLD=\"${LD-ld} -m elf32_x86_64\"\n\t\t;;\n\t      *)\n\t\tLD=\"${LD-ld} -m elf_i386\"\n\t\t;;\n\t    esac\n\t    ;;\n\t  powerpc64le-*linux*)\n\t    LD=\"${LD-ld} -m elf32lppclinux\"\n\t    ;;\n\t  powerpc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32ppclinux\"\n\t    ;;\n\t  s390x-*linux*)\n\t    LD=\"${LD-ld} -m elf_s390\"\n\t    ;;\n\t  sparc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32_sparc\"\n\t    ;;\n\tesac\n\t;;\n      *64-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_x86_64_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_x86_64\"\n\t    ;;\n\t  powerpcle-*linux*)\n\t    LD=\"${LD-ld} -m elf64lppc\"\n\t    ;;\n\t  powerpc-*linux*)\n\t    LD=\"${LD-ld} -m elf64ppc\"\n\t    ;;\n\t  s390*-*linux*|s390*-*tpf*)\n\t    LD=\"${LD-ld} -m elf64_s390\"\n\t    ;;\n\t  sparc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64_sparc\"\n\t    ;;\n\tesac\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=\"$CFLAGS\"\n  CFLAGS=\"$CFLAGS -belf\"\n  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n    [AC_LANG_PUSH(C)\n     AC_LINK_IFELSE([AC_LANG_PROGRAM([[]],[[]])],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])\n     AC_LANG_POP])\n  if test x\"$lt_cv_cc_needs_belf\" != x\"yes\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=\"$SAVE_CFLAGS\"\n  fi\n  ;;\nsparc*-*solaris*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n    *64-bit*)\n      case $lt_cv_prog_gnu_ld in\n      yes*) LD=\"${LD-ld} -m elf64_sparc\" ;;\n      *)\n\tif ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then\n\t  LD=\"${LD-ld} -64\"\n\tfi\n\t;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\nesac\n\nneed_locks=\"$enable_libtool_lock\"\n])# _LT_ENABLE_LOCK\n\n\n# _LT_CMD_OLD_ARCHIVE\n# -------------------\nm4_defun([_LT_CMD_OLD_ARCHIVE],\n[AC_CHECK_TOOL(AR, ar, false)\ntest -z \"$AR\" && AR=ar\ntest -z \"$AR_FLAGS\" && AR_FLAGS=cru\n_LT_DECL([], [AR], [1], [The archiver])\n_LT_DECL([], [AR_FLAGS], [1])\n\nAC_CHECK_TOOL(STRIP, strip, :)\ntest -z \"$STRIP\" && STRIP=:\n_LT_DECL([], [STRIP], [1], [A symbol stripping program])\n\nAC_CHECK_TOOL(RANLIB, ranlib, :)\ntest -z \"$RANLIB\" && RANLIB=:\n_LT_DECL([], [RANLIB], [1],\n    [Commands used to install an old-style archive])\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  openbsd*)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB -t \\$oldlib\"\n    ;;\n  *)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB \\$oldlib\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$oldlib\"\nfi\n\ncase $host_os in\n  darwin*)\n    lock_old_archive_extraction=yes ;;\n  *)\n    lock_old_archive_extraction=no ;;\nesac\n_LT_DECL([], [old_postinstall_cmds], [2])\n_LT_DECL([], [old_postuninstall_cmds], [2])\n_LT_TAGDECL([], [old_archive_cmds], [2],\n    [Commands used to build an old-style archive])\n_LT_DECL([], [lock_old_archive_extraction], [0],\n    [Whether to use a lock for old archive extraction])\n])# _LT_CMD_OLD_ARCHIVE\n\n\n# _LT_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#\t\t[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([_LT_COMPILER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$3\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       $2=yes\n     fi\n   fi\n   $RM conftest*\n])\n\nif test x\"[$]$2\" = xyes; then\n    m4_if([$5], , :, [$5])\nelse\n    m4_if([$6], , :, [$6])\nfi\n])# _LT_COMPILER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_COMPILER_OPTION], [_LT_COMPILER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [])\n\n\n# _LT_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#                  [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------\n# Check whether the given linker option works\nAC_DEFUN([_LT_LINKER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   save_LDFLAGS=\"$LDFLAGS\"\n   LDFLAGS=\"$LDFLAGS $3\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&AS_MESSAGE_LOG_FD\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         $2=yes\n       fi\n     else\n       $2=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=\"$save_LDFLAGS\"\n])\n\nif test x\"[$]$2\" = xyes; then\n    m4_if([$4], , :, [$4])\nelse\n    m4_if([$5], , :, [$5])\nfi\n])# _LT_LINKER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_LINKER_OPTION], [_LT_LINKER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [])\n\n\n# LT_CMD_MAX_LEN\n#---------------\nAC_DEFUN([LT_CMD_MAX_LEN],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n# find the maximum length of command line arguments\nAC_MSG_CHECKING([the maximum length of command line arguments])\nAC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl\n  i=0\n  teststring=\"ABCD\"\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw* | cegcc*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  mint*)\n    # On MiNT this can take a long time and run out of memory.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536\t# usable default for all BSDs\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n\n  interix*)\n    # We know the value 262144 and hardcode it with a safety zone (like BSD)\n    lt_cv_sys_max_cmd_len=196608\n    ;;\n\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    #\n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  sco3.2v5*)\n    lt_cv_sys_max_cmd_len=102400\n    ;;\n  sysv5* | sco5v6* | sysv4.2uw2*)\n    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`\n    if test -n \"$kargmax\"; then\n      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[\t ]]//'`\n    else\n      lt_cv_sys_max_cmd_len=32768\n    fi\n    ;;\n  *)\n    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`\n    if test -n \"$lt_cv_sys_max_cmd_len\"; then\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    else\n      # Make teststring a little bigger before we do anything with it.\n      # a 1K string should be a reasonable start.\n      for i in 1 2 3 4 5 6 7 8 ; do\n        teststring=$teststring$teststring\n      done\n      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n      # If test is not a shell built-in, we'll probably end up computing a\n      # maximum length that is only half of the actual maximum length, but\n      # we can't tell.\n      while { test \"X\"`func_fallback_echo \"$teststring$teststring\" 2>/dev/null` \\\n\t         = \"X$teststring$teststring\"; } >/dev/null 2>&1 &&\n\t      test $i != 17 # 1/2 MB should be enough\n      do\n        i=`expr $i + 1`\n        teststring=$teststring$teststring\n      done\n      # Only check the string length outside the loop.\n      lt_cv_sys_max_cmd_len=`expr \"X$teststring\" : \".*\" 2>&1`\n      teststring=\n      # Add a significant safety factor because C++ compilers can tack on\n      # massive amounts of additional arguments before passing them to the\n      # linker.  It appears as though 1/2 is a usable value.\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    fi\n    ;;\n  esac\n])\nif test -n $lt_cv_sys_max_cmd_len ; then\n  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)\nelse\n  AC_MSG_RESULT(none)\nfi\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n_LT_DECL([], [max_cmd_len], [0],\n    [What is the maximum length of a command?])\n])# LT_CMD_MAX_LEN\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_SYS_MAX_CMD_LEN], [LT_CMD_MAX_LEN])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [])\n\n\n# _LT_HEADER_DLFCN\n# ----------------\nm4_defun([_LT_HEADER_DLFCN],\n[AC_CHECK_HEADERS([dlfcn.h], [], [], [AC_INCLUDES_DEFAULT])dnl\n])# _LT_HEADER_DLFCN\n\n\n# _LT_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,\n#                      ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)\n# ----------------------------------------------------------------\nm4_defun([_LT_TRY_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test \"$cross_compiling\" = yes; then :\n  [$4]\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<_LT_EOF\n[#line __oline__ \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n/* When -fvisbility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined(__GNUC__) && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nvoid fnord () __attribute__((visibility(\"default\")));\n#endif\n\nvoid fnord () { int i=42; }\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else\n        {\n\t  if (dlsym( self,\"_fnord\"))  status = $lt_dlneed_uscore;\n          else puts (dlerror ());\n\t}\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n  return status;\n}]\n_LT_EOF\n  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext} 2>/dev/null; then\n    (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) $1 ;;\n      x$lt_dlneed_uscore) $2 ;;\n      x$lt_dlunknown|x*) $3 ;;\n    esac\n  else :\n    # compilation failed\n    $3\n  fi\nfi\nrm -fr conftest*\n])# _LT_TRY_DLOPEN_SELF\n\n\n# LT_SYS_DLOPEN_SELF\n# ------------------\nAC_DEFUN([LT_SYS_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test \"x$enable_dlopen\" != xyes; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=\"load_add_on\"\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32* | cegcc*)\n    lt_cv_dlopen=\"LoadLibrary\"\n    lt_cv_dlopen_libs=\n    ;;\n\n  cygwin*)\n    lt_cv_dlopen=\"dlopen\"\n    lt_cv_dlopen_libs=\n    ;;\n\n  darwin*)\n  # if libdl is installed we need to link against it\n    AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"],[\n    lt_cv_dlopen=\"dyld\"\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ])\n    ;;\n\n  *)\n    AC_CHECK_FUNC([shl_load],\n\t  [lt_cv_dlopen=\"shl_load\"],\n      [AC_CHECK_LIB([dld], [shl_load],\n\t    [lt_cv_dlopen=\"shl_load\" lt_cv_dlopen_libs=\"-ldld\"],\n\t[AC_CHECK_FUNC([dlopen],\n\t      [lt_cv_dlopen=\"dlopen\"],\n\t  [AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"],\n\t    [AC_CHECK_LIB([svld], [dlopen],\n\t\t  [lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-lsvld\"],\n\t      [AC_CHECK_LIB([dld], [dld_link],\n\t\t    [lt_cv_dlopen=\"dld_link\" lt_cv_dlopen_libs=\"-ldld\"])\n\t      ])\n\t    ])\n\t  ])\n\t])\n      ])\n    ;;\n  esac\n\n  if test \"x$lt_cv_dlopen\" != xno; then\n    enable_dlopen=yes\n  else\n    enable_dlopen=no\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=\"$CPPFLAGS\"\n    test \"x$ac_cv_header_dlfcn_h\" = xyes && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=\"$LDFLAGS\"\n    wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=\"$LIBS\"\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    AC_CACHE_CHECK([whether a program can dlopen itself],\n\t  lt_cv_dlopen_self, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,\n\t    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)\n    ])\n\n    if test \"x$lt_cv_dlopen_self\" = xyes; then\n      wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $lt_prog_compiler_static\\\"\n      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],\n\t  lt_cv_dlopen_self_static, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,\n\t    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)\n      ])\n    fi\n\n    CPPFLAGS=\"$save_CPPFLAGS\"\n    LDFLAGS=\"$save_LDFLAGS\"\n    LIBS=\"$save_LIBS\"\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n_LT_DECL([dlopen_support], [enable_dlopen], [0],\n\t [Whether dlopen is supported])\n_LT_DECL([dlopen_self], [enable_dlopen_self], [0],\n\t [Whether dlopen of programs is supported])\n_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],\n\t [Whether dlopen of statically linked programs is supported])\n])# LT_SYS_DLOPEN_SELF\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [])\n\n\n# _LT_COMPILER_C_O([TAGNAME])\n# ---------------------------\n# Check to see if options -c and -o are simultaneously supported by compiler.\n# This macro does not hard code the compiler like AC_PROG_CC_C_O.\nm4_defun([_LT_COMPILER_C_O],\n[m4_require([_LT_DECL_SED])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       _LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n     fi\n   fi\n   chmod u+w . 2>&AS_MESSAGE_LOG_FD\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n])\n_LT_TAGDECL([compiler_c_o], [lt_cv_prog_compiler_c_o], [1],\n\t[Does compiler simultaneously support -c and -o options?])\n])# _LT_COMPILER_C_O\n\n\n# _LT_COMPILER_FILE_LOCKS([TAGNAME])\n# ----------------------------------\n# Check to see if we can do hard links to lock some files if needed\nm4_defun([_LT_COMPILER_FILE_LOCKS],\n[m4_require([_LT_ENABLE_LOCK])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_COMPILER_C_O([$1])\n\nhard_links=\"nottested\"\nif test \"$_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)\" = no && test \"$need_locks\" != no; then\n  # do not overwrite the value of need_locks provided by the user\n  AC_MSG_CHECKING([if we can lock with hard links])\n  hard_links=yes\n  $RM conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  AC_MSG_RESULT([$hard_links])\n  if test \"$hard_links\" = no; then\n    AC_MSG_WARN([`$CC' does not support `-c -o', so `make -j' may be unsafe])\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n_LT_DECL([], [need_locks], [1], [Must we lock files when doing compilation?])\n])# _LT_COMPILER_FILE_LOCKS\n\n\n# _LT_CHECK_OBJDIR\n# ----------------\nm4_defun([_LT_CHECK_OBJDIR],\n[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],\n[rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null])\nobjdir=$lt_cv_objdir\n_LT_DECL([], [objdir], [0],\n         [The name of the directory that contains temporary libtool files])dnl\nm4_pattern_allow([LT_OBJDIR])dnl\nAC_DEFINE_UNQUOTED(LT_OBJDIR, \"$lt_cv_objdir/\",\n  [Define to the sub-directory in which libtool stores uninstalled libraries.])\n])# _LT_CHECK_OBJDIR\n\n\n# _LT_LINKER_HARDCODE_LIBPATH([TAGNAME])\n# --------------------------------------\n# Check hardcoding attributes.\nm4_defun([_LT_LINKER_HARDCODE_LIBPATH],\n[AC_MSG_CHECKING([how to hardcode library paths into programs])\n_LT_TAGVAR(hardcode_action, $1)=\nif test -n \"$_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\" ||\n   test -n \"$_LT_TAGVAR(runpath_var, $1)\" ||\n   test \"X$_LT_TAGVAR(hardcode_automatic, $1)\" = \"Xyes\" ; then\n\n  # We can hardcode non-existent directories.\n  if test \"$_LT_TAGVAR(hardcode_direct, $1)\" != no &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test \"$_LT_TAGVAR(hardcode_shlibpath_var, $1)\" != no &&\n     test \"$_LT_TAGVAR(hardcode_minus_L, $1)\" != no; then\n    # Linking always hardcodes the temporary library directory.\n    _LT_TAGVAR(hardcode_action, $1)=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    _LT_TAGVAR(hardcode_action, $1)=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  _LT_TAGVAR(hardcode_action, $1)=unsupported\nfi\nAC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, $1)])\n\nif test \"$_LT_TAGVAR(hardcode_action, $1)\" = relink ||\n   test \"$_LT_TAGVAR(inherit_rpath, $1)\" = yes; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test \"$shlibpath_overrides_runpath\" = yes ||\n     test \"$enable_shared\" = no; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n_LT_TAGDECL([], [hardcode_action], [0],\n    [How to hardcode a shared library path into an executable])\n])# _LT_LINKER_HARDCODE_LIBPATH\n\n\n# _LT_CMD_STRIPLIB\n# ----------------\nm4_defun([_LT_CMD_STRIPLIB],\n[m4_require([_LT_DECL_EGREP])\nstriplib=\nold_striplib=\nAC_MSG_CHECKING([whether stripping libraries is possible])\nif test -n \"$STRIP\" && $STRIP -V 2>&1 | $GREP \"GNU strip\" >/dev/null; then\n  test -z \"$old_striplib\" && old_striplib=\"$STRIP --strip-debug\"\n  test -z \"$striplib\" && striplib=\"$STRIP --strip-unneeded\"\n  AC_MSG_RESULT([yes])\nelse\n# FIXME - insert some real tests, host_os isn't really good enough\n  case $host_os in\n  darwin*)\n    if test -n \"$STRIP\" ; then\n      striplib=\"$STRIP -x\"\n      old_striplib=\"$STRIP -S\"\n      AC_MSG_RESULT([yes])\n    else\n      AC_MSG_RESULT([no])\n    fi\n    ;;\n  *)\n    AC_MSG_RESULT([no])\n    ;;\n  esac\nfi\n_LT_DECL([], [old_striplib], [1], [Commands to strip libraries])\n_LT_DECL([], [striplib], [1])\n])# _LT_CMD_STRIPLIB\n\n\n# _LT_SYS_DYNAMIC_LINKER([TAG])\n# -----------------------------\n# PORTME Fill in your ld.so characteristics\nm4_defun([_LT_SYS_DYNAMIC_LINKER],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_OBJDUMP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nAC_MSG_CHECKING([dynamic linker characteristics])\nm4_if([$1],\n\t[], [\nif test \"$GCC\" = yes; then\n  case $host_os in\n    darwin*) lt_awk_arg=\"/^libraries:/,/LR/\" ;;\n    *) lt_awk_arg=\"/^libraries:/\" ;;\n  esac\n  case $host_os in\n    mingw* | cegcc*) lt_sed_strip_eq=\"s,=\\([[A-Za-z]]:\\),\\1,g\" ;;\n    *) lt_sed_strip_eq=\"s,=/,/,g\" ;;\n  esac\n  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e \"s/^libraries://\" -e $lt_sed_strip_eq`\n  case $lt_search_path_spec in\n  *\\;*)\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED 's/;/ /g'`\n    ;;\n  *)\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED \"s/$PATH_SEPARATOR/ /g\"`\n    ;;\n  esac\n  # Ok, now we have the path, separated by spaces, we can step through it\n  # and add multilib dir if necessary.\n  lt_tmp_lt_search_path_spec=\n  lt_multi_os_dir=`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`\n  for lt_sys_path in $lt_search_path_spec; do\n    if test -d \"$lt_sys_path/$lt_multi_os_dir\"; then\n      lt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path/$lt_multi_os_dir\"\n    else\n      test -d \"$lt_sys_path\" && \\\n\tlt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path\"\n    fi\n  done\n  lt_search_path_spec=`$ECHO \"$lt_tmp_lt_search_path_spec\" | awk '\nBEGIN {RS=\" \"; FS=\"/|\\n\";} {\n  lt_foo=\"\";\n  lt_count=0;\n  for (lt_i = NF; lt_i > 0; lt_i--) {\n    if ($lt_i != \"\" && $lt_i != \".\") {\n      if ($lt_i == \"..\") {\n        lt_count++;\n      } else {\n        if (lt_count == 0) {\n          lt_foo=\"/\" $lt_i lt_foo;\n        } else {\n          lt_count--;\n        }\n      }\n    }\n  }\n  if (lt_foo != \"\") { lt_freq[[lt_foo]]++; }\n  if (lt_freq[[lt_foo]] == 1) { print lt_foo; }\n}'`\n  # AWK program above erroneously prepends '/' to C:/dos/paths\n  # for these hosts.\n  case $host_os in\n    mingw* | cegcc*) lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" |\\\n      $SED 's,/\\([[A-Za-z]]:\\),\\1,g'` ;;\n  esac\n  sys_lib_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $lt_NL2SP`\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi])\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=\".so\"\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\ncase $host_os in\naix3*)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='${libname}${release}${shared_ext}$major'\n  ;;\n\naix[[4-9]]*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test \"$host_cpu\" = ia64; then\n    # AIX 5 supports IA64\n    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line `#! .'.  This would cause the generated library to\n    # depend on `.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[[01]] | aix4.[[01]].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | ${CC} -E - | $GREP yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    if test \"$aix_use_runtimelinking\" = yes; then\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    else\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='${libname}${release}.a $libname.a'\n      soname_spec='${libname}${release}${shared_ext}$major'\n    fi\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  case $host_cpu in\n  powerpc)\n    # Since July 2007 AmigaOS4 officially supports .so libraries.\n    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    ;;\n  m68k)\n    library_names_spec='$libname.ixlibrary $libname.a'\n    # Create ${libname}_ixlibrary.a entries in /sys/libs.\n    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all \"$lib\" | $SED '\\''s%^.*/\\([[^/]]*\\)\\.ixlibrary$%\\1%'\\''`; test $RM /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n    ;;\n  esac\n  ;;\n\nbeos*)\n  library_names_spec='${libname}${shared_ext}'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[[45]]*)\n  version_type=linux\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32* | cegcc*)\n  version_type=windows\n  shrext_cmds=\".dll\"\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$host_os in\n  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\${file}`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\${base_file}'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname~\n      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n      fi'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\nm4_if([$1], [],[\n      sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/lib/w32api\"])\n      ;;\n    mingw* | cegcc*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      ;;\n    esac\n    ;;\n\n  *)\n    library_names_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext} $libname.lib'\n    ;;\n  esac\n  dynamic_linker='Win32 ld.exe'\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${major}$shared_ext ${libname}$shared_ext'\n  soname_spec='${libname}${release}${major}$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\nm4_if([$1], [],[\n  sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/local/lib\"])\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[[23]].*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2.*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[[01]]* | freebsdelf3.[[01]]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[[2-9]]* | freebsdelf3.[[2-9]]* | \\\n  freebsd4.[[0-5]] | freebsdelf4.[[0-5]] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  *) # from 4.6 on, and DragonFly\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\ngnu*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  hardcode_into_libs=yes\n  ;;\n\nhaiku*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  dynamic_linker=\"$host_os runtime_loader\"\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/beos/system/lib'\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    if test \"X$HPUX_IA64_MODE\" = X32; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n    fi\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  hppa*64*)\n    shrext_cmds='.sl'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...\n  postinstall_cmds='chmod 555 $lib'\n  # or fails outright, so override atomically:\n  install_override_mode=555\n  ;;\n\ninterix[[3-9]]*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test \"$lt_cv_prog_gnu_ld\" = yes; then\n\t\tversion_type=linux\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib${libsuff} /lib${libsuff}\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\n# This must be Linux ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n\n  # Some binutils ld are patched to set DT_RUNPATH\n  AC_CACHE_VAL([lt_cv_shlibpath_overrides_runpath],\n    [lt_cv_shlibpath_overrides_runpath=no\n    save_LDFLAGS=$LDFLAGS\n    save_libdir=$libdir\n    eval \"libdir=/foo; wl=\\\"$_LT_TAGVAR(lt_prog_compiler_wl, $1)\\\"; \\\n\t LDFLAGS=\\\"\\$LDFLAGS $_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\\\"\"\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n      [AS_IF([ ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep \"RUNPATH.*$libdir\" >/dev/null],\n\t [lt_cv_shlibpath_overrides_runpath=yes])])\n    LDFLAGS=$save_LDFLAGS\n    libdir=$save_libdir\n    ])\n  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Append ld.so.conf contents to the search path\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/\"//g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\n*nto* | *qnx*)\n  version_type=qnx\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='ldqnx.so'\n  ;;\n\nopenbsd*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=\"/usr/lib\"\n  need_lib_prefix=no\n  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.\n  case $host_os in\n    openbsd3.3 | openbsd3.3.*)\tneed_version=yes ;;\n    *)\t\t\t\tneed_version=no  ;;\n  esac\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n    case $host_os in\n      openbsd2.[[89]] | openbsd2.[[89]].*)\n\tshlibpath_overrides_runpath=no\n\t;;\n      *)\n\tshlibpath_overrides_runpath=yes\n\t;;\n      esac\n  else\n    shlibpath_overrides_runpath=yes\n  fi\n  ;;\n\nos2*)\n  libname_spec='$name'\n  shrext_cmds=\".dll\"\n  need_lib_prefix=no\n  library_names_spec='$libname${shared_ext} $libname.a'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=LIBPATH\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=\"$sys_lib_search_path_spec\"\n  ;;\n\nrdos*)\n  dynamic_linker=no\n  ;;\n\nsolaris*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test \"$with_gnu_ld\" = yes; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec ;then\n    version_type=linux\n    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'\n    soname_spec='$libname${shared_ext}.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=freebsd-elf\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  if test \"$with_gnu_ld\" = yes; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\ntpf*)\n  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nuts4*)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\nAC_MSG_RESULT([$dynamic_linker])\ntest \"$dynamic_linker\" = no && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test \"$GCC\" = yes; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\nif test \"${lt_cv_sys_lib_search_path_spec+set}\" = set; then\n  sys_lib_search_path_spec=\"$lt_cv_sys_lib_search_path_spec\"\nfi\nif test \"${lt_cv_sys_lib_dlsearch_path_spec+set}\" = set; then\n  sys_lib_dlsearch_path_spec=\"$lt_cv_sys_lib_dlsearch_path_spec\"\nfi\n\n_LT_DECL([], [variables_saved_for_relink], [1],\n    [Variables whose values should be saved in libtool wrapper scripts and\n    restored at link time])\n_LT_DECL([], [need_lib_prefix], [0],\n    [Do we need the \"lib\" prefix for modules?])\n_LT_DECL([], [need_version], [0], [Do we need a version for libraries?])\n_LT_DECL([], [version_type], [0], [Library versioning type])\n_LT_DECL([], [runpath_var], [0],  [Shared library runtime path variable])\n_LT_DECL([], [shlibpath_var], [0],[Shared library path variable])\n_LT_DECL([], [shlibpath_overrides_runpath], [0],\n    [Is shlibpath searched before the hard-coded library search path?])\n_LT_DECL([], [libname_spec], [1], [Format of library name prefix])\n_LT_DECL([], [library_names_spec], [1],\n    [[List of archive names.  First name is the real one, the rest are links.\n    The last name is the one that the linker finds with -lNAME]])\n_LT_DECL([], [soname_spec], [1],\n    [[The coded name of the library, if different from the real name]])\n_LT_DECL([], [install_override_mode], [1],\n    [Permission mode override for installation of shared libraries])\n_LT_DECL([], [postinstall_cmds], [2],\n    [Command to use after installation of a shared archive])\n_LT_DECL([], [postuninstall_cmds], [2],\n    [Command to use after uninstallation of a shared archive])\n_LT_DECL([], [finish_cmds], [2],\n    [Commands used to finish a libtool library installation in a directory])\n_LT_DECL([], [finish_eval], [1],\n    [[As \"finish_cmds\", except a single script fragment to be evaled but\n    not shown]])\n_LT_DECL([], [hardcode_into_libs], [0],\n    [Whether we should hardcode library paths into libraries])\n_LT_DECL([], [sys_lib_search_path_spec], [2],\n    [Compile-time system search path for libraries])\n_LT_DECL([], [sys_lib_dlsearch_path_spec], [2],\n    [Run-time system search path for libraries])\n])# _LT_SYS_DYNAMIC_LINKER\n\n\n# _LT_PATH_TOOL_PREFIX(TOOL)\n# --------------------------\n# find a file program which can recognize shared library\nAC_DEFUN([_LT_PATH_TOOL_PREFIX],\n[m4_require([_LT_DECL_EGREP])dnl\nAC_MSG_CHECKING([for $1])\nAC_CACHE_VAL(lt_cv_path_MAGIC_CMD,\n[case $MAGIC_CMD in\n[[\\\\/*] |  ?:[\\\\/]*])\n  lt_cv_path_MAGIC_CMD=\"$MAGIC_CMD\" # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=\"$MAGIC_CMD\"\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\ndnl $ac_dummy forces splitting on constant user-supplied paths.\ndnl POSIX.2 word splitting is done only on the output of word expansions,\ndnl not every word.  This closes a longstanding sh security hole.\n  ac_dummy=\"m4_if([$2], , $PATH, [$2])\"\n  for ac_dir in $ac_dummy; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f $ac_dir/$1; then\n      lt_cv_path_MAGIC_CMD=\"$ac_dir/$1\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=\"$lt_cv_path_MAGIC_CMD\"\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<_LT_EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\n_LT_EOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\n  MAGIC_CMD=\"$lt_save_MAGIC_CMD\"\n  ;;\nesac])\nMAGIC_CMD=\"$lt_cv_path_MAGIC_CMD\"\nif test -n \"$MAGIC_CMD\"; then\n  AC_MSG_RESULT($MAGIC_CMD)\nelse\n  AC_MSG_RESULT(no)\nfi\n_LT_DECL([], [MAGIC_CMD], [0],\n\t [Used to examine libraries when file_magic_cmd begins with \"file\"])dnl\n])# _LT_PATH_TOOL_PREFIX\n\n# Old name:\nAU_ALIAS([AC_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PATH_TOOL_PREFIX], [])\n\n\n# _LT_PATH_MAGIC\n# --------------\n# find a file program which can recognize a shared library\nm4_defun([_LT_PATH_MAGIC],\n[_LT_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    _LT_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)\n  else\n    MAGIC_CMD=:\n  fi\nfi\n])# _LT_PATH_MAGIC\n\n\n# LT_PATH_LD\n# ----------\n# find the pathname to the GNU or non-GNU linker\nAC_DEFUN([LT_PATH_LD],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PROG_ECHO_BACKSLASH])dnl\n\nAC_ARG_WITH([gnu-ld],\n    [AS_HELP_STRING([--with-gnu-ld],\n\t[assume the C compiler uses GNU ld @<:@default=no@:>@])],\n    [test \"$withval\" = no || with_gnu_ld=yes],\n    [with_gnu_ld=no])dnl\n\nac_prog=ld\nif test \"$GCC\" = yes; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  AC_MSG_CHECKING([for ld used by $CC])\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [[\\\\/]]* | ?:[[\\\\/]]*)\n      re_direlt='/[[^/]][[^/]]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=\"$ac_prog\"\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test \"$with_gnu_ld\" = yes; then\n  AC_MSG_CHECKING([for GNU ld])\nelse\n  AC_MSG_CHECKING([for non-GNU ld])\nfi\nAC_CACHE_VAL(lt_cv_path_LD,\n[if test -z \"$LD\"; then\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=\"$ac_dir/$ac_prog\"\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest \"$with_gnu_ld\" != no && break\n\t;;\n      *)\n\ttest \"$with_gnu_ld\" != yes && break\n\t;;\n      esac\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\nelse\n  lt_cv_path_LD=\"$LD\" # Let the user override the test with a path.\nfi])\nLD=\"$lt_cv_path_LD\"\nif test -n \"$LD\"; then\n  AC_MSG_RESULT($LD)\nelse\n  AC_MSG_RESULT(no)\nfi\ntest -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\n_LT_PATH_LD_GNU\nAC_SUBST([LD])\n\n_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])\n])# LT_PATH_LD\n\n# Old names:\nAU_ALIAS([AM_PROG_LD], [LT_PATH_LD])\nAU_ALIAS([AC_PROG_LD], [LT_PATH_LD])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_LD], [])\ndnl AC_DEFUN([AC_PROG_LD], [])\n\n\n# _LT_PATH_LD_GNU\n#- --------------\nm4_defun([_LT_PATH_LD_GNU],\n[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,\n[# I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac])\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n])# _LT_PATH_LD_GNU\n\n\n# _LT_CMD_RELOAD\n# --------------\n# find reload flag for linker\n#   -- PORTME Some linkers may need a different reload flag.\nm4_defun([_LT_CMD_RELOAD],\n[AC_CACHE_CHECK([for $LD option to reload object files],\n  lt_cv_ld_reload_flag,\n  [lt_cv_ld_reload_flag='-r'])\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  darwin*)\n    if test \"$GCC\" = yes; then\n      reload_cmds='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n_LT_TAGDECL([], [reload_flag], [1], [How to create reloadable object files])dnl\n_LT_TAGDECL([], [reload_cmds], [2])dnl\n])# _LT_CMD_RELOAD\n\n\n# _LT_CHECK_MAGIC_METHOD\n# ----------------------\n# how to check for library dependencies\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_MAGIC_METHOD],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nAC_CACHE_CHECK([how to recognize dependent libraries],\nlt_cv_deplibs_check_method,\n[lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# `unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# which responds to the $file_magic_cmd with a given extended regex.\n# If you have `file' or equivalent on your system and you're not sure\n# whether `pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix[[4-9]]*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[[45]]*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump',\n  # unless we find 'file', for example because we are cross-compiling.\n  # func_win32_libid assumes BSD nm, so disallow it if using MS dumpbin.\n  if ( test \"$lt_cv_nm_interface\" = \"BSD nm\" && file / ) >/dev/null 2>&1; then\n    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n    lt_cv_file_magic_cmd='func_win32_libid'\n  else\n    lt_cv_deplibs_check_method='file_magic file format pei*-i386(.*architecture: i386)?'\n    lt_cv_file_magic_cmd='$OBJDUMP -f'\n  fi\n  ;;\n\ncegcc*)\n  # use the weaker test based on 'objdump'. See mingw*.\n  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | dragonfly*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\ngnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhaiku*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case $host_cpu in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF[ -][0-9][0-9])(-bit)?( [LM]SB)? shared object( file)?[, -]* PA-RISC [0-9]\\.[0-9]']\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]]\\.[[0-9]]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\ninterix[[3-9]]*)\n  # PIC code is broken on Interix 3.x, that's why |\\.a not |_pic\\.a here\n  lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|\\.a)$'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be Linux ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\n*nto* | *qnx*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nopenbsd*)\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nrdos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.3*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  pc)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\ntpf*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n])\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n\n_LT_DECL([], [deplibs_check_method], [1],\n    [Method to check whether dependent libraries are shared objects])\n_LT_DECL([], [file_magic_cmd], [1],\n    [Command to use when deplibs_check_method == \"file_magic\"])\n])# _LT_CHECK_MAGIC_METHOD\n\n\n# LT_PATH_NM\n# ----------\n# find the pathname to a BSD- or MS-compatible name lister\nAC_DEFUN([LT_PATH_NM],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,\n[if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=\"$NM\"\nelse\n  lt_nm_to_check=\"${ac_tool_prefix}nm\"\n  if test -n \"$ac_tool_prefix\" && test \"$build\" = \"$host\"; then\n    lt_nm_to_check=\"$lt_nm_to_check nm\"\n  fi\n  for lt_tmp_nm in $lt_nm_to_check; do\n    lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do\n      IFS=\"$lt_save_ifs\"\n      test -z \"$ac_dir\" && ac_dir=.\n      tmp_nm=\"$ac_dir/$lt_tmp_nm\"\n      if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\" ; then\n\t# Check to see if the nm accepts a BSD-compat flag.\n\t# Adding the `sed 1q' prevents false positives on HP-UX, which says:\n\t#   nm: unknown option \"B\" ignored\n\t# Tru64's nm complains that /dev/null is an invalid object file\n\tcase `\"$tmp_nm\" -B /dev/null 2>&1 | sed '1q'` in\n\t*/dev/null* | *'Invalid file or object type'*)\n\t  lt_cv_path_NM=\"$tmp_nm -B\"\n\t  break\n\t  ;;\n\t*)\n\t  case `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t  */dev/null*)\n\t    lt_cv_path_NM=\"$tmp_nm -p\"\n\t    break\n\t    ;;\n\t  *)\n\t    lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t    continue # so that we can try to find one that supports BSD flags\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n      fi\n    done\n    IFS=\"$lt_save_ifs\"\n  done\n  : ${lt_cv_path_NM=no}\nfi])\nif test \"$lt_cv_path_NM\" != \"no\"; then\n  NM=\"$lt_cv_path_NM\"\nelse\n  # Didn't find any BSD compatible name lister, look for dumpbin.\n  if test -n \"$DUMPBIN\"; then :\n    # Let the user override the test.\n  else\n    AC_CHECK_TOOLS(DUMPBIN, [dumpbin \"link -dump\"], :)\n    case `$DUMPBIN -symbols /dev/null 2>&1 | sed '1q'` in\n    *COFF*)\n      DUMPBIN=\"$DUMPBIN -symbols\"\n      ;;\n    *)\n      DUMPBIN=:\n      ;;\n    esac\n  fi\n  AC_SUBST([DUMPBIN])\n  if test \"$DUMPBIN\" != \":\"; then\n    NM=\"$DUMPBIN\"\n  fi\nfi\ntest -z \"$NM\" && NM=nm\nAC_SUBST([NM])\n_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl\n\nAC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],\n  [lt_cv_nm_interface=\"BSD nm\"\n  echo \"int some_variable = 0;\" > conftest.$ac_ext\n  (eval echo \"\\\"\\$as_me:$LINENO: $ac_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$ac_compile\" 2>conftest.err)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: output\\\"\" >&AS_MESSAGE_LOG_FD)\n  cat conftest.out >&AS_MESSAGE_LOG_FD\n  if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n    lt_cv_nm_interface=\"MS dumpbin\"\n  fi\n  rm -f conftest*])\n])# LT_PATH_NM\n\n# Old names:\nAU_ALIAS([AM_PROG_NM], [LT_PATH_NM])\nAU_ALIAS([AC_PROG_NM], [LT_PATH_NM])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_NM], [])\ndnl AC_DEFUN([AC_PROG_NM], [])\n\n\n# LT_LIB_M\n# --------\n# check for math library\nAC_DEFUN([LT_LIB_M],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nLIBM=\ncase $host in\n*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)\n  # These system don't have libm, or don't need it\n  ;;\n*-ncr-sysv4.3*)\n  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=\"-lmw\")\n  AC_CHECK_LIB(m, cos, LIBM=\"$LIBM -lm\")\n  ;;\n*)\n  AC_CHECK_LIB(m, cos, LIBM=\"-lm\")\n  ;;\nesac\nAC_SUBST([LIBM])\n])# LT_LIB_M\n\n# Old name:\nAU_ALIAS([AC_CHECK_LIBM], [LT_LIB_M])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_CHECK_LIBM], [])\n\n\n# _LT_COMPILER_NO_RTTI([TAGNAME])\n# -------------------------------\nm4_defun([_LT_COMPILER_NO_RTTI],\n[m4_require([_LT_TAG_COMPILER])dnl\n\n_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n\nif test \"$GCC\" = yes; then\n  case $cc_basename in\n  nvcc*)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -Xcompiler -fno-builtin' ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin' ;;\n  esac\n\n  _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],\n    lt_cv_prog_compiler_rtti_exceptions,\n    [-fno-rtti -fno-exceptions], [],\n    [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\"$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions\"])\nfi\n_LT_TAGDECL([no_builtin_flag], [lt_prog_compiler_no_builtin_flag], [1],\n\t[Compiler flag to turn off builtin functions])\n])# _LT_COMPILER_NO_RTTI\n\n\n# _LT_CMD_GLOBAL_SYMBOLS\n# ----------------------\nm4_defun([_LT_CMD_GLOBAL_SYMBOLS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_PROG_AWK])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_TAG_COMPILER])dnl\n\n# Check for command to grab the raw symbol name followed by C symbol from nm.\nAC_MSG_CHECKING([command to parse $NM output from $compiler object])\nAC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],\n[\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[[BCDEGRST]]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([[_A-Za-z]][[_A-Za-z0-9]]*\\)'\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[[BCDT]]'\n  ;;\ncygwin* | mingw* | pw32* | cegcc*)\n  symcode='[[ABCDGISTW]]'\n  ;;\nhpux*)\n  if test \"$host_cpu\" = ia64; then\n    symcode='[[ABCDEGRST]]'\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[[BCDEGRST]]'\n  ;;\nosf*)\n  symcode='[[BCDEGQRST]]'\n  ;;\nsolaris*)\n  symcode='[[BDRT]]'\n  ;;\nsco3.2v5*)\n  symcode='[[DT]]'\n  ;;\nsysv4.2uw2*)\n  symcode='[[DT]]'\n  ;;\nsysv5* | sco5v6* | unixware* | OpenUNIX*)\n  symcode='[[ABDT]]'\n  ;;\nsysv4)\n  symcode='[[DFNSTU]]'\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[[ABCDGIRSTW]]' ;;\nesac\n\n# Transform an extracted symbol line into a proper C declaration.\n# Some systems (esp. on ia64) link data and code symbols differently,\n# so use this general approach.\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n -e 's/^T .* \\(.*\\)$/extern int \\1();/p' -e 's/^$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n -e 's/^: \\([[^ ]]*\\) $/  {\\\\\\\"\\1\\\\\\\", (void *) 0},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"\\2\\\", (void *) \\&\\2},/p'\"\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix=\"sed -n -e 's/^: \\([[^ ]]*\\) $/  {\\\\\\\"\\1\\\\\\\", (void *) 0},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\(lib[[^ ]]*\\)$/  {\\\"\\2\\\", (void *) \\&\\2},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"lib\\2\\\", (void *) \\&\\2},/p'\"\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`$ECHO 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# Try without a prefix underscore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  if test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n    # Fake it for dumpbin and say T for any non-static function\n    # and D for any global variable.\n    # Also find C++ and __fastcall symbols from MSVC++,\n    # which start with @ or ?.\n    lt_cv_sys_global_symbol_pipe=\"$AWK ['\"\\\n\"     {last_section=section; section=\\$ 3};\"\\\n\"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};\"\\\n\"     \\$ 0!~/External *\\|/{next};\"\\\n\"     / 0+ UNDEF /{next}; / UNDEF \\([^|]\\)*()/{next};\"\\\n\"     {if(hide[section]) next};\"\\\n\"     {f=0}; \\$ 0~/\\(\\).*\\|/{f=1}; {printf f ? \\\"T \\\" : \\\"D \\\"};\"\\\n\"     {split(\\$ 0, a, /\\||\\r/); split(a[2], s)};\"\\\n\"     s[1]~/^[@?]/{print s[1], s[1]; next};\"\\\n\"     s[1]~prfx {split(s[1],t,\\\"@\\\"); print t[1], substr(t[1],length(prfx))}\"\\\n\"     ' prfx=^$ac_symprfx]\"\n  else\n    lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[[\t ]]\\($symcode$symcode*\\)[[\t ]][[\t ]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n  fi\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<_LT_EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(void);\nvoid nm_test_func(void){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\n_LT_EOF\n\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| \"$lt_cv_sys_global_symbol_pipe\" \\> $nlist) && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if $GREP ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif $GREP ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<_LT_EOF > conftest.$ac_ext\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n_LT_EOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | $GREP -v main >> conftest.$ac_ext'\n\n\t  cat <<_LT_EOF >> conftest.$ac_ext\n\n/* The mapping between symbol names and symbols.  */\nconst struct {\n  const char *name;\n  void       *address;\n}\nlt__PROGRAM__LTX_preloaded_symbols[[]] =\n{\n  { \"@PROGRAM@\", (void *) 0 },\n_LT_EOF\n\t  $SED \"s/^$symcode$symcode* \\(.*\\) \\(.*\\)$/  {\\\"\\2\\\", (void *) \\&\\2},/\" < \"$nlist\" | $GREP -v main >> conftest.$ac_ext\n\t  cat <<\\_LT_EOF >> conftest.$ac_ext\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt__PROGRAM__LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n_LT_EOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_save_LIBS=\"$LIBS\"\n\t  lt_save_CFLAGS=\"$CFLAGS\"\n\t  LIBS=\"conftstm.$ac_objext\"\n\t  CFLAGS=\"$CFLAGS$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\"\n\t  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext}; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=\"$lt_save_LIBS\"\n\t  CFLAGS=\"$lt_save_CFLAGS\"\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&AS_MESSAGE_LOG_FD\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&AS_MESSAGE_LOG_FD\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"$progname: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.$ac_ext >&5\n  fi\n  rm -rf conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test \"$pipe_works\" = yes; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n])\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  AC_MSG_RESULT(failed)\nelse\n  AC_MSG_RESULT(ok)\nfi\n\n_LT_DECL([global_symbol_pipe], [lt_cv_sys_global_symbol_pipe], [1],\n    [Take the output of nm and produce a listing of raw symbols and C names])\n_LT_DECL([global_symbol_to_cdecl], [lt_cv_sys_global_symbol_to_cdecl], [1],\n    [Transform the output of nm in a proper C declaration])\n_LT_DECL([global_symbol_to_c_name_address],\n    [lt_cv_sys_global_symbol_to_c_name_address], [1],\n    [Transform the output of nm in a C name address pair])\n_LT_DECL([global_symbol_to_c_name_address_lib_prefix],\n    [lt_cv_sys_global_symbol_to_c_name_address_lib_prefix], [1],\n    [Transform the output of nm in a C name address pair when lib prefix is needed])\n]) # _LT_CMD_GLOBAL_SYMBOLS\n\n\n# _LT_COMPILER_PIC([TAGNAME])\n# ---------------------------\nm4_defun([_LT_COMPILER_PIC],\n[m4_require([_LT_TAG_COMPILER])dnl\n_LT_TAGVAR(lt_prog_compiler_wl, $1)=\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n_LT_TAGVAR(lt_prog_compiler_static, $1)=\n\nAC_MSG_CHECKING([for $compiler option to produce PIC])\nm4_if([$1], [CXX], [\n  # C++ specific cases for pic, static, wl, etc.\n  if test \"$GXX\" = yes; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the `-m68020' flag to GCC prevents building anything better,\n            # like `-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | cygwin* | os2* | pw32* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n      ;;\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n    *qnx* | *nto*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix[[4-9]]*)\n\t# All AIX code is PIC.\n\tif test \"$host_cpu\" = ia64; then\n\t  # AIX 5 now supports IA64 processor\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\telse\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_TAGVAR(lt_prog_compiler_static, $1)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n\t    if test \"$host_cpu\" != ia64; then\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n\t    case $host_cpu in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      interix*)\n\t# This is c89, which is MS Visual C++ (no shared libs)\n\t# Anyone wants to do a port?\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux* | k*bsd*-gnu | kopensolaris*-gnu)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    ;;\n\t  ecpc* )\n\t    # old Intel C++ for x86_64 which still supported -KPIC.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  icpc* )\n\t    # Intel C++, used to be incompatible with GCC.\n\t    # ICC 10 doesn't accept -KPIC any more.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  pgCC* | pgcpp*)\n\t    # Portland Group C++ compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  xlc* | xlC* | bgxl[[cC]]* | mpixl[[cC]]*)\n\t    # IBM XL 8.0, 9.0 on PPC and BlueGene\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd*)\n\t;;\n      *qnx* | *nto*)\n        # QNX uses GNU C++, but need to define -shared option too, otherwise\n        # it will coredump.\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n        ;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      vxworks*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n\t;;\n    esac\n  fi\n],\n[\n  if test \"$GCC\" = yes; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the `-m68020' flag to GCC prevents building anything better,\n            # like `-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      enable_shared=no\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n\n    case $cc_basename in\n    nvcc*) # Cuda Compiler Driver 2.2\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Xlinker '\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-Xcompiler -fPIC'\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      else\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC (with -KPIC) is the default.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    linux* | k*bsd*-gnu | kopensolaris*-gnu)\n      case $cc_basename in\n      # old Intel for x86_64 which still supported -KPIC.\n      ecc*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # icc used to be incompatible with GCC.\n      # ICC 10 doesn't accept -KPIC any more.\n      icc* | ifort*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # Lahey Fortran 8.1.\n      lf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='--shared'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='--static'\n\t;;\n      pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      ccc*)\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n        # All Alpha code is PIC.\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n        ;;\n      xl* | bgxl* | bgf* | mpixl*)\n\t# IBM XL C 8.0/Fortran 10.1, 11.1 on PPC and BlueGene\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t;;\n      *)\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ F* | *Sun*Fortran*)\n\t  # Sun Fortran 8.3 passes all unrecognized flags to the linker\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)=''\n\t  ;;\n\t*Sun\\ C*)\n\t  # Sun C 5.9\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  ;;\n\tesac\n\t;;\n      esac\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    osf3* | osf4* | osf5*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # All OSF/1 code is PIC.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    rdos*)\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec ;then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    unicos*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n    esac\n  fi\n])\ncase $host_os in\n  # For platforms which do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n    ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])\"\n    ;;\nesac\nAC_MSG_RESULT([$_LT_TAGVAR(lt_prog_compiler_pic, $1)])\n_LT_TAGDECL([wl], [lt_prog_compiler_wl], [1],\n\t[How to pass a linker flag through the compiler])\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n  _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, $1) works],\n    [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, $1)],\n    [$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])], [],\n    [case $_LT_TAGVAR(lt_prog_compiler_pic, $1) in\n     \"\" | \" \"*) ;;\n     *) _LT_TAGVAR(lt_prog_compiler_pic, $1)=\" $_LT_TAGVAR(lt_prog_compiler_pic, $1)\" ;;\n     esac],\n    [_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n     _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])\nfi\n_LT_TAGDECL([pic_flag], [lt_prog_compiler_pic], [1],\n\t[Additional compiler flags for building library objects])\n\n#\n# Check to make sure the static flag actually works.\n#\nwl=$_LT_TAGVAR(lt_prog_compiler_wl, $1) eval lt_tmp_static_flag=\\\"$_LT_TAGVAR(lt_prog_compiler_static, $1)\\\"\n_LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works],\n  _LT_TAGVAR(lt_cv_prog_compiler_static_works, $1),\n  $lt_tmp_static_flag,\n  [],\n  [_LT_TAGVAR(lt_prog_compiler_static, $1)=])\n_LT_TAGDECL([link_static_flag], [lt_prog_compiler_static], [1],\n\t[Compiler flag to prevent dynamic linking])\n])# _LT_COMPILER_PIC\n\n\n# _LT_LINKER_SHLIBS([TAGNAME])\n# ----------------------------\n# See if the linker supports building shared libraries.\nm4_defun([_LT_LINKER_SHLIBS],\n[AC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\nm4_if([$1], [CXX], [\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  case $host_os in\n  aix[[4-9]]*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to AIX nm, but means don't demangle with GNU nm\n    # Also, AIX nm treats weak defined symbols like other global defined\n    # symbols, whereas GNU nm marks them as \"W\".\n    if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n    else\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    _LT_TAGVAR(export_symbols_cmds, $1)=\"$ltdll_cmds\"\n  ;;\n  cygwin* | mingw* | cegcc*)\n    _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;/^.*[[ ]]__nm__/s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n  ;;\n  *)\n    _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  ;;\n  esac\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n], [\n  runpath_var=\n  _LT_TAGVAR(allow_undefined_flag, $1)=\n  _LT_TAGVAR(always_export_symbols, $1)=no\n  _LT_TAGVAR(archive_cmds, $1)=\n  _LT_TAGVAR(archive_expsym_cmds, $1)=\n  _LT_TAGVAR(compiler_needs_object, $1)=no\n  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n  _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(hardcode_automatic, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n  _LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n  _LT_TAGVAR(hardcode_minus_L, $1)=no\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  _LT_TAGVAR(inherit_rpath, $1)=no\n  _LT_TAGVAR(link_all_deplibs, $1)=unknown\n  _LT_TAGVAR(module_cmds, $1)=\n  _LT_TAGVAR(module_expsym_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_new_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_expsyms_cmds, $1)=\n  _LT_TAGVAR(thread_safe_flag_spec, $1)=\n  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  _LT_TAGVAR(include_expsyms, $1)=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ` (' and `)$', so one must not match beginning or\n  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',\n  # as well as any symbol that contains `d'.\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  # Exclude shared library initialization/finalization symbols.\ndnl Note also adjust exclude_expsyms for C++ above.\n  extract_expsyms_cmds=\n\n  case $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test \"$GCC\" != yes; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++)\n    with_gnu_ld=yes\n    ;;\n  openbsd*)\n    with_gnu_ld=no\n    ;;\n  esac\n\n  _LT_TAGVAR(ld_shlibs, $1)=yes\n\n  # On some targets, GNU ld is compatible enough with the native linker\n  # that we're better off using the native interface for both.\n  lt_use_gnu_ld_interface=no\n  if test \"$with_gnu_ld\" = yes; then\n    case $host_os in\n      aix*)\n\t# The AIX port of GNU ld has always aspired to compatibility\n\t# with the native linker.  However, as the warning in the GNU ld\n\t# block says, versions before 2.19.5* couldn't really create working\n\t# shared libraries, regardless of the interface used.\n\tcase `$LD -v 2>&1` in\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.19.5*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.[[2-9]]*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ [[3-9]]*) ;;\n\t  *)\n\t    lt_use_gnu_ld_interface=yes\n\t    ;;\n\tesac\n\t;;\n      *)\n\tlt_use_gnu_ld_interface=yes\n\t;;\n    esac\n  fi\n\n  if test \"$lt_use_gnu_ld_interface\" = yes; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='${wl}'\n\n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n    else\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v 2>&1` in\n      *GNU\\ gold*) supports_anon_versioning=yes ;;\n      *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n\n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix[[3-9]]*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test \"$host_cpu\" != ia64; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.19, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to install binutils\n*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.\n*** You will then need to restart the configuration process.\n\n_LT_EOF\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n      # as there is no search path for DLLs.\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-all-symbols'\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=no\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/'\\'' | $SED -e '\\''/^[[AITW]][[ ]]/s/.*[[ ]]//'\\'' | sort | uniq > $export_symbols'\n\n      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t# If the export-symbols file already is a .def file (1st line\n\t# is EXPORTS), use it as is; otherwise, prepend...\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t  cp $export_symbols $output_objdir/$soname.def;\n\telse\n\t  echo EXPORTS > $output_objdir/$soname.def;\n\t  cat $export_symbols >> $output_objdir/$soname.def;\n\tfi~\n\t$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    haiku*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    interix[[3-9]]*)\n      _LT_TAGVAR(hardcode_direct, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n      # Instead, shared libraries are loaded at an image base (0x10000000 by\n      # default) and relocated if they conflict, which is a slow very memory\n      # consuming and fragmenting process.  To avoid this, we pick a random,\n      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s,^,_,\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      ;;\n\n    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)\n      tmp_diet=no\n      if test \"$host_os\" = linux-dietlibc; then\n\tcase $cc_basename in\n\t  diet\\ *) tmp_diet=yes;;\t# linux-dietlibc with static linking (!diet-dyn)\n\tesac\n      fi\n      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \\\n\t && test \"$tmp_diet\" = no\n      then\n\ttmp_addflag=\n\ttmp_sharedflag='-shared'\n\tcase $cc_basename,$host_cpu in\n        pgcc*)\t\t\t\t# Portland Group C compiler\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  tmp_addflag=' $pic_flag'\n\t  ;;\n\tpgf77* | pgf90* | pgf95* | pgfortran*)\n\t\t\t\t\t# Portland Group f77 and f90 compilers\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  tmp_addflag=' $pic_flag -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tlf95*)\t\t\t\t# Lahey Fortran 8.1\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n\t  tmp_sharedflag='--shared' ;;\n\txl[[cC]]* | bgxl[[cC]]* | mpixl[[cC]]*) # IBM XL C 8.0 on PPC (deal with xlf below)\n\t  tmp_sharedflag='-qmkshrobj'\n\t  tmp_addflag= ;;\n\tnvcc*)\t# Cuda Compiler Driver 2.2\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  ;;\n\tesac\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ C*)\t\t\t# Sun C 5.9\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  tmp_sharedflag='-G' ;;\n\t*Sun\\ F*)\t\t\t# Sun Fortran 8.3\n\t  tmp_sharedflag='-G' ;;\n\tesac\n\t_LT_TAGVAR(archive_cmds, $1)='$CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\n        if test \"x$supports_anon_versioning\" = xyes; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n\t    cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n\t    echo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t    $CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'\n        fi\n\n\tcase $cc_basename in\n\txlf* | bgf* | bgxlf* | mpixlf*)\n\t  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='--whole-archive$convenience --no-whole-archive'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='-rpath $libdir'\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $compiler_flags -soname $soname -o $lib'\n\t  if test \"x$supports_anon_versioning\" = xyes; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n\t      cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n\t      echo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t      $LD -shared $libobjs $deplibs $compiler_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'\n\t  fi\n\t  ;;\n\tesac\n      else\n        _LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris*)\n      if $LD -v 2>&1 | $GREP 'BFD 2\\.8' > /dev/null; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.1[[0-5]].*)\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not\n*** reliably create shared libraries on SCO systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n\t;;\n\t*)\n\t  # For security reasons, it is highly recommended that you always\n\t  # use absolute paths for naming shared libraries, and exclude the\n\t  # DT_RUNPATH tag from executables and libraries.  But doing so\n\t  # requires that you compile everything twice, which is a pain.\n\t  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t;;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n\n    if test \"$_LT_TAGVAR(ld_shlibs, $1)\" = no; then\n      runpath_var=\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      if test \"$GCC\" = yes && test -z \"$lt_prog_compiler_static\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\t_LT_TAGVAR(hardcode_direct, $1)=unsupported\n      fi\n      ;;\n\n    aix[[4-9]]*)\n      if test \"$host_cpu\" = ia64; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\"\"\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to AIX nm, but means don't demangle with GNU nm\n\t# Also, AIX nm treats weak defined symbols like other global\n\t# defined symbols, whereas GNU nm marks them as \"W\".\n\tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# need to do runtime linking.\n\tcase $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t  for ld_flag in $LDFLAGS; do\n\t  if (test $ld_flag = \"-brtl\" || test $ld_flag = \"-Wl,-brtl\"); then\n\t    aix_use_runtimelinking=yes\n\t    break\n\t  fi\n\t  done\n\t  ;;\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      _LT_TAGVAR(archive_cmds, $1)=''\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(file_list_spec, $1)='${wl}-f,'\n\n      if test \"$GCC\" = yes; then\n\tcase $host_os in aix4.[[012]]|aix4.[[012]].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`${CC} -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t   strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t  # We have reworked collect2\n\t  :\n\t  else\n\t  # We have old collect2\n\t  _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n\t  ;;\n\tesac\n\tshared_flag='-shared'\n\tif test \"$aix_use_runtimelinking\" = yes; then\n\t  shared_flag=\"$shared_flag \"'${wl}-G'\n\tfi\n      else\n\t# not using gcc\n\tif test \"$host_cpu\" = ia64; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n\t  if test \"$aix_use_runtimelinking\" = yes; then\n\t    shared_flag='${wl}-G'\n\t  else\n\t    shared_flag='${wl}-bM:SRE'\n\t  fi\n\tfi\n      fi\n\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-bexpall'\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      if test \"$aix_use_runtimelinking\" = yes; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n        # Determine the default libpath from the value encoded in an\n        # empty executable.\n        _LT_SYS_MODULE_PATH_AIX\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags `if test \"x${allow_undefined_flag}\" != \"x\"; then func_echo_all \"${wl}${allow_undefined_flag}\"; else :; fi` '\"\\${wl}$exp_sym_flag:\\$export_symbols $shared_flag\"\n      else\n\tif test \"$host_cpu\" = ia64; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an\n\t # empty executable.\n\t _LT_SYS_MODULE_PATH_AIX\n\t _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'\n\t  if test \"$with_gnu_ld\" = yes; then\n\t    # We only use this code for GNU lds that support --whole-archive.\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t  else\n\t    # Exported symbols can be pulled into shared objects from archives\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t  fi\n\t  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  # This is similar to how AIX traditionally builds its shared libraries.\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    bsdi[[45]]*)\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      # Tell ltmain to make .lib files, not .a files.\n      libext=lib\n      # Tell ltmain to make .dll files, not .so files.\n      shrext_cmds=\".dll\"\n      # FIXME: Setting linknames here is a bad hack.\n      _LT_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `func_echo_all \"$deplibs\" | $SED '\\''s/ -lc$//'\\''` -link -dll~linknames='\n      # The linker will automatically build a .lib file if we build a DLL.\n      _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n      # FIXME: Should let the user specify the lib program.\n      _LT_TAGVAR(old_archive_cmds, $1)='lib -OUT:$oldlib$oldobjs$old_deplibs'\n      _LT_TAGVAR(fix_srcfile_path, $1)='`cygpath -w \"$srcfile\"`'\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      ;;\n\n    darwin* | rhapsody*)\n      _LT_DARWIN_LINKER_FEATURES($1)\n      ;;\n\n    dgux*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2.*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | dragonfly*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared -o $lib $libobjs $deplibs $compiler_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    hpux9*)\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      ;;\n\n    hpux10*)\n      if test \"$GCC\" = yes && test \"$with_gnu_ld\" = no; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      if test \"$with_gnu_ld\" = no; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t_LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='+b $libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\t# hardcode_minus_L: Not really in the search PATH,\n\t# but as the default location of the library.\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n      fi\n      ;;\n\n    hpux11*)\n      if test \"$GCC\" = yes && test \"$with_gnu_ld\" = no; then\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\tm4_if($1, [], [\n\t  # Older versions of the 11.00 compiler do not understand -b yet\n\t  # (HP92453-01 A.11.01.20 doesn't, HP92453-01 B.11.X.35175-35176.GP does)\n\t  _LT_LINKER_OPTION([if $CC understands -b],\n\t    _LT_TAGVAR(lt_cv_prog_compiler__b, $1), [-b],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])],\n\t  [_LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'])\n\t  ;;\n\tesac\n      fi\n      if test \"$with_gnu_ld\" = no; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\tcase $host_cpu in\n\thppa*64*|ia64*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t# Try to use the -exported_symbol ld option, if it does not\n\t# work, assume that -exports_file does not work either and\n\t# implicitly export all symbols.\n        save_LDFLAGS=\"$LDFLAGS\"\n        LDFLAGS=\"$LDFLAGS -shared ${wl}-exported_symbol ${wl}foo ${wl}-update_registry ${wl}/dev/null\"\n        AC_LINK_IFELSE(int foo(void) {},\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations ${wl}-exports_file ${wl}$export_symbols -o $lib'\n        )\n        LDFLAGS=\"$save_LDFLAGS\"\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -exports_file $export_symbols -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(inherit_rpath, $1)=yes\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *nto* | *qnx*)\n      ;;\n\n    openbsd*)\n      if test -f /usr/libexec/ld.so; then\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\tif test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\telse\n\t  case $host_os in\n\t   openbsd[[01]].* | openbsd2.[[0-7]] | openbsd2.[[0-7]].*)\n\t     _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n\t     _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t     ;;\n\t   *)\n\t     _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t     _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t     ;;\n\t  esac\n\tfi\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY $libname INITINSTANCE\" > $output_objdir/$libname.def~$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~echo DATA >> $output_objdir/$libname.def~echo \" SINGLE NONSHARED\" >> $output_objdir/$libname.def~echo EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_from_new_cmds, $1)='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'\n      ;;\n\n    osf3*)\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; printf \"%s\\\\n\" \"-hidden\">> $lib.exp~\n\t$CC -shared${allow_undefined_flag} ${wl}-input ${wl}$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib~$RM $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(no_undefined_flag, $1)=' -z defs'\n      if test \"$GCC\" = yes; then\n\twlarc='${wl}'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-z ${wl}text ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t  $CC -shared ${wl}-z ${wl}text ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n      else\n\tcase `$CC -V 2>&1` in\n\t*\"Compilers 5.0\"*)\n\t  wlarc=''\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'\n\t  ;;\n\t*)\n\t  wlarc='${wl}'\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t  $CC -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n\t  ;;\n\tesac\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      case $host_os in\n      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n      *)\n\t# The compiler driver will combine and reorder linker options,\n\t# but understands `-z linker_flag'.  GCC discards it without `$wl',\n\t# but is careful enough not to reorder.\n\t# Supported since Solaris 2.6 (maybe 2.5.1?)\n\tif test \"$GCC\" = yes; then\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'\n\telse\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\tfi\n\t;;\n      esac\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    sunos4*)\n      if test \"x$host_vendor\" = xsequent; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n        ;;\n\tmotorola)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4.3*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n      fi\n      ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6*)\n      # Note: We can NOT use -z defs as we might desire, because we do not\n      # link with -lc, and that would cause any symbols used from libc to\n      # always be unresolved, which means just about no library would\n      # ever link correctly.  If we're not using GNU ld we use -z text\n      # though, which does catch some bad symbols but isn't as heavy-handed\n      # as -z defs.\n      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R,$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'\n      runpath_var='LD_RUN_PATH'\n\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      _LT_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    esac\n\n    if test x$host_vendor = xsni; then\n      case $host in\n      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Blargedynsym'\n\t;;\n      esac\n    fi\n  fi\n])\nAC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\ntest \"$_LT_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\n_LT_TAGVAR(with_gnu_ld, $1)=$with_gnu_ld\n\n_LT_DECL([], [libext], [0], [Old archive suffix (normally \"a\")])dnl\n_LT_DECL([], [shrext_cmds], [1], [Shared library suffix (normally \".so\")])dnl\n_LT_DECL([], [extract_expsyms_cmds], [2],\n    [The commands to extract the exported symbol list from a shared archive])\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$_LT_TAGVAR(archive_cmds_need_lc, $1)\" in\nx|xyes)\n  # Assume -lc should be added\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\n  if test \"$enable_shared\" = yes && test \"$GCC\" = yes; then\n    case $_LT_TAGVAR(archive_cmds, $1) in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      AC_CACHE_CHECK([whether -lc should be explicitly linked in],\n\t[lt_cv_]_LT_TAGVAR(archive_cmds_need_lc, $1),\n\t[$RM conftest*\n\techo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n\tif AC_TRY_EVAL(ac_compile) 2>conftest.err; then\n\t  soname=conftest\n\t  lib=conftest\n\t  libobjs=conftest.$ac_objext\n\t  deplibs=\n\t  wl=$_LT_TAGVAR(lt_prog_compiler_wl, $1)\n\t  pic_flag=$_LT_TAGVAR(lt_prog_compiler_pic, $1)\n\t  compiler_flags=-v\n\t  linker_flags=-v\n\t  verstring=\n\t  output_objdir=.\n\t  libname=conftest\n\t  lt_save_allow_undefined_flag=$_LT_TAGVAR(allow_undefined_flag, $1)\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\n\t  if AC_TRY_EVAL(_LT_TAGVAR(archive_cmds, $1) 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1)\n\t  then\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t  else\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  fi\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag\n\telse\n\t  cat conftest.err 1>&5\n\tfi\n\t$RM conftest*\n\t])\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=$lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)\n      ;;\n    esac\n  fi\n  ;;\nesac\n\n_LT_TAGDECL([build_libtool_need_lc], [archive_cmds_need_lc], [0],\n    [Whether or not to add -lc for building shared libraries])\n_LT_TAGDECL([allow_libtool_libs_with_static_runtimes],\n    [enable_shared_with_static_runtimes], [0],\n    [Whether or not to disallow shared libs when runtime libs are static])\n_LT_TAGDECL([], [export_dynamic_flag_spec], [1],\n    [Compiler flag to allow reflexive dlopens])\n_LT_TAGDECL([], [whole_archive_flag_spec], [1],\n    [Compiler flag to generate shared objects directly from archives])\n_LT_TAGDECL([], [compiler_needs_object], [1],\n    [Whether the compiler copes with passing no objects directly])\n_LT_TAGDECL([], [old_archive_from_new_cmds], [2],\n    [Create an old-style archive from a shared archive])\n_LT_TAGDECL([], [old_archive_from_expsyms_cmds], [2],\n    [Create a temporary old-style archive to link instead of a shared archive])\n_LT_TAGDECL([], [archive_cmds], [2], [Commands used to build a shared archive])\n_LT_TAGDECL([], [archive_expsym_cmds], [2])\n_LT_TAGDECL([], [module_cmds], [2],\n    [Commands used to build a loadable module if different from building\n    a shared archive.])\n_LT_TAGDECL([], [module_expsym_cmds], [2])\n_LT_TAGDECL([], [with_gnu_ld], [1],\n    [Whether we are building with GNU ld or not])\n_LT_TAGDECL([], [allow_undefined_flag], [1],\n    [Flag that allows shared libraries with undefined symbols to be built])\n_LT_TAGDECL([], [no_undefined_flag], [1],\n    [Flag that enforces no undefined symbols])\n_LT_TAGDECL([], [hardcode_libdir_flag_spec], [1],\n    [Flag to hardcode $libdir into a binary during linking.\n    This must work even if $libdir does not exist])\n_LT_TAGDECL([], [hardcode_libdir_flag_spec_ld], [1],\n    [[If ld is used when linking, flag to hardcode $libdir into a binary\n    during linking.  This must work even if $libdir does not exist]])\n_LT_TAGDECL([], [hardcode_libdir_separator], [1],\n    [Whether we need a single \"-rpath\" flag with a separated argument])\n_LT_TAGDECL([], [hardcode_direct], [0],\n    [Set to \"yes\" if using DIR/libNAME${shared_ext} during linking hardcodes\n    DIR into the resulting binary])\n_LT_TAGDECL([], [hardcode_direct_absolute], [0],\n    [Set to \"yes\" if using DIR/libNAME${shared_ext} during linking hardcodes\n    DIR into the resulting binary and the resulting library dependency is\n    \"absolute\", i.e impossible to change by setting ${shlibpath_var} if the\n    library is relocated])\n_LT_TAGDECL([], [hardcode_minus_L], [0],\n    [Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_shlibpath_var], [0],\n    [Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_automatic], [0],\n    [Set to \"yes\" if building a shared library automatically hardcodes DIR\n    into the library and all subsequent libraries and executables linked\n    against it])\n_LT_TAGDECL([], [inherit_rpath], [0],\n    [Set to yes if linker adds runtime paths of dependent libraries\n    to runtime path list])\n_LT_TAGDECL([], [link_all_deplibs], [0],\n    [Whether libtool must link a program against all its dependency libraries])\n_LT_TAGDECL([], [fix_srcfile_path], [1],\n    [Fix the shell variable $srcfile for the compiler])\n_LT_TAGDECL([], [always_export_symbols], [0],\n    [Set to \"yes\" if exported symbols are required])\n_LT_TAGDECL([], [export_symbols_cmds], [2],\n    [The commands to list exported symbols])\n_LT_TAGDECL([], [exclude_expsyms], [1],\n    [Symbols that should not be listed in the preloaded symbols])\n_LT_TAGDECL([], [include_expsyms], [1],\n    [Symbols that must always be exported])\n_LT_TAGDECL([], [prelink_cmds], [2],\n    [Commands necessary for linking programs (against libraries) with templates])\n_LT_TAGDECL([], [file_list_spec], [1],\n    [Specify filename containing input files])\ndnl FIXME: Not yet implemented\ndnl _LT_TAGDECL([], [thread_safe_flag_spec], [1],\ndnl    [Compiler flag to generate thread safe objects])\n])# _LT_LINKER_SHLIBS\n\n\n# _LT_LANG_C_CONFIG([TAG])\n# ------------------------\n# Ensure that the configuration variables for a C compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_C_CONFIG],\n[m4_require([_LT_DECL_EGREP])dnl\nlt_save_CC=\"$CC\"\nAC_LANG_PUSH(C)\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}'\n\n_LT_TAG_COMPILER\n# Save the default compiler, since it gets overwritten when the other\n# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.\ncompiler_DEFAULT=$CC\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_SYS_DYNAMIC_LINKER($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n  LT_SYS_DLOPEN_SELF\n  _LT_CMD_STRIPLIB\n\n  # Report which library types will actually be built\n  AC_MSG_CHECKING([if libtool supports shared libraries])\n  AC_MSG_RESULT([$can_build_shared])\n\n  AC_MSG_CHECKING([whether to build shared libraries])\n  test \"$can_build_shared\" = \"no\" && enable_shared=no\n\n  # On AIX, shared libraries and static libraries use the same namespace, and\n  # are all built from PIC.\n  case $host_os in\n  aix3*)\n    test \"$enable_shared\" = yes && enable_static=no\n    if test -n \"$RANLIB\"; then\n      archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n      postinstall_cmds='$RANLIB $lib'\n    fi\n    ;;\n\n  aix[[4-9]]*)\n    if test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n      test \"$enable_shared\" = yes && enable_static=no\n    fi\n    ;;\n  esac\n  AC_MSG_RESULT([$enable_shared])\n\n  AC_MSG_CHECKING([whether to build static libraries])\n  # Make sure either enable_shared or enable_static is yes.\n  test \"$enable_shared\" = yes || enable_static=yes\n  AC_MSG_RESULT([$enable_static])\n\n  _LT_CONFIG($1)\nfi\nAC_LANG_POP\nCC=\"$lt_save_CC\"\n])# _LT_LANG_C_CONFIG\n\n\n# _LT_LANG_CXX_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a C++ compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_CXX_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nif test -n \"$CXX\" && ( test \"X$CXX\" != \"Xno\" &&\n    ( (test \"X$CXX\" = \"Xg++\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test \"X$CXX\" != \"Xg++\"))) ; then\n  AC_PROG_CXXCPP\nelse\n  _lt_caught_CXX_error=yes\nfi\n\nAC_LANG_PUSH(C++)\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(compiler_needs_object, $1)=no\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for C++ test sources.\nac_ext=cpp\n\n# Object file extension for compiled C++ test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the CXX compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test \"$_lt_caught_CXX_error\" != yes; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"int some_variable = 0;\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code='int main(int, char *[[]]) { return(0); }'\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_LD=$LD\n  lt_save_GCC=$GCC\n  GCC=$GXX\n  lt_save_with_gnu_ld=$with_gnu_ld\n  lt_save_path_LD=$lt_cv_path_LD\n  if test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n    lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\n  else\n    $as_unset lt_cv_prog_gnu_ld\n  fi\n  if test -n \"${lt_cv_path_LDCXX+set}\"; then\n    lt_cv_path_LD=$lt_cv_path_LDCXX\n  else\n    $as_unset lt_cv_path_LD\n  fi\n  test -z \"${LDCXX+set}\" || LD=$LDCXX\n  CC=${CXX-\"c++\"}\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    # We don't want -fno-exception when compiling C++ code, so set the\n    # no_builtin_flag separately\n    if test \"$GXX\" = yes; then\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\n    else\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n    fi\n\n    if test \"$GXX\" = yes; then\n      # Set up default GNU C++ configuration\n\n      LT_PATH_LD\n\n      # Check if GNU C++ uses GNU ld as the underlying linker, since the\n      # archiving commands below assume that GNU ld is being used.\n      if test \"$with_gnu_ld\" = yes; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\n        # If archive_cmds runs LD, not CC, wlarc should be empty\n        # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n        #     investigate it a little bit more. (MM)\n        wlarc='${wl}'\n\n        # ancient GNU ld didn't support --whole-archive et. al.\n        if eval \"`$CC -print-prog-name=ld` --help 2>&1\" |\n\t  $GREP 'no-whole-archive' > /dev/null; then\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n        else\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\n        fi\n      else\n        with_gnu_ld=no\n        wlarc=\n\n        # A generic and very simple default shared library creation\n        # command for GNU C++ for the case where it uses the native\n        # linker, instead of GNU ld.  If possible, this setting should\n        # overridden to take advantage of the native linker features on\n        # the platform it is being used on.\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n      fi\n\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n    else\n      GXX=no\n      with_gnu_ld=no\n      wlarc=\n    fi\n\n    # PORTME: fill in a description of your system's C++ link characteristics\n    AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\n    _LT_TAGVAR(ld_shlibs, $1)=yes\n    case $host_os in\n      aix3*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n      aix[[4-9]]*)\n        if test \"$host_cpu\" = ia64; then\n          # On IA64, the linker does run time linking by default, so we don't\n          # have to do anything special.\n          aix_use_runtimelinking=no\n          exp_sym_flag='-Bexport'\n          no_entry_flag=\"\"\n        else\n          aix_use_runtimelinking=no\n\n          # Test if we are trying to use run time linking or normal\n          # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n          # need to do runtime linking.\n          case $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t    for ld_flag in $LDFLAGS; do\n\t      case $ld_flag in\n\t      *-brtl*)\n\t        aix_use_runtimelinking=yes\n\t        break\n\t        ;;\n\t      esac\n\t    done\n\t    ;;\n          esac\n\n          exp_sym_flag='-bexport'\n          no_entry_flag='-bnoentry'\n        fi\n\n        # When large executables or shared objects are built, AIX ld can\n        # have problems creating the table of contents.  If linking a library\n        # or program results in \"error TOC overflow\" add -mminimal-toc to\n        # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n        # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n        _LT_TAGVAR(archive_cmds, $1)=''\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        _LT_TAGVAR(file_list_spec, $1)='${wl}-f,'\n\n        if test \"$GXX\" = yes; then\n          case $host_os in aix4.[[012]]|aix4.[[012]].*)\n          # We only want to do this on AIX 4.2 and lower, the check\n          # below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`${CC} -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t     strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t    # We have reworked collect2\n\t    :\n\t  else\n\t    # We have old collect2\n\t    _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t    # It fails to find uninstalled libraries when the uninstalled\n\t    # path is not listed in the libpath.  Setting hardcode_minus_L\n\t    # to unsupported forces relinking\n\t    _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n          esac\n          shared_flag='-shared'\n\t  if test \"$aix_use_runtimelinking\" = yes; then\n\t    shared_flag=\"$shared_flag \"'${wl}-G'\n\t  fi\n        else\n          # not using gcc\n          if test \"$host_cpu\" = ia64; then\n\t  # VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t  # chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n          else\n\t    if test \"$aix_use_runtimelinking\" = yes; then\n\t      shared_flag='${wl}-G'\n\t    else\n\t      shared_flag='${wl}-bM:SRE'\n\t    fi\n          fi\n        fi\n\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-bexpall'\n        # It seems that -bexpall does not export symbols beginning with\n        # underscore (_), so it is better to generate a list of symbols to\n\t# export.\n        _LT_TAGVAR(always_export_symbols, $1)=yes\n        if test \"$aix_use_runtimelinking\" = yes; then\n          # Warning - without using the other runtime loading flags (-brtl),\n          # -berok will link without error, but may produce a broken library.\n          _LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n          # Determine the default libpath from the value encoded in an empty\n          # executable.\n          _LT_SYS_MODULE_PATH_AIX\n          _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags `if test \"x${allow_undefined_flag}\" != \"x\"; then func_echo_all \"${wl}${allow_undefined_flag}\"; else :; fi` '\"\\${wl}$exp_sym_flag:\\$export_symbols $shared_flag\"\n        else\n          if test \"$host_cpu\" = ia64; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$exp_sym_flag:\\$export_symbols\"\n          else\n\t    # Determine the default libpath from the value encoded in an\n\t    # empty executable.\n\t    _LT_SYS_MODULE_PATH_AIX\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t    # Warning - without using the other run time loading flags,\n\t    # -berok will link without error, but may produce a broken library.\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'\n\t    if test \"$with_gnu_ld\" = yes; then\n\t      # We only use this code for GNU lds that support --whole-archive.\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t    else\n\t      # Exported symbols can be pulled into shared objects from archives\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t    fi\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t    # This is similar to how AIX traditionally builds its shared\n\t    # libraries.\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n          fi\n        fi\n        ;;\n\n      beos*)\n\tif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  # Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t  # support --undefined.  This deserves some investigation.  FIXME\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      chorus*)\n        case $cc_basename in\n          *)\n\t  # FIXME: insert proper C++ library support\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\t  ;;\n        esac\n        ;;\n\n      cygwin* | mingw* | pw32* | cegcc*)\n        # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n        # as there is no search path for DLLs.\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-all-symbols'\n        _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n        _LT_TAGVAR(always_export_symbols, $1)=no\n        _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\n        if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n          # If the export-symbols file already is a .def file (1st line\n          # is EXPORTS), use it as is; otherwise, prepend...\n          _LT_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t    cp $export_symbols $output_objdir/$soname.def;\n          else\n\t    echo EXPORTS > $output_objdir/$soname.def;\n\t    cat $export_symbols >> $output_objdir/$soname.def;\n          fi~\n          $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n        else\n          _LT_TAGVAR(ld_shlibs, $1)=no\n        fi\n        ;;\n      darwin* | rhapsody*)\n        _LT_DARWIN_LINKER_FEATURES($1)\n\t;;\n\n      dgux*)\n        case $cc_basename in\n          ec++*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          ghcx*)\n\t    # Green Hills C++ Compiler\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      freebsd2.*)\n        # C++ shared libraries reported to be fairly broken before\n\t# switch to ELF\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      freebsd-elf*)\n        _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n        ;;\n\n      freebsd* | dragonfly*)\n        # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n        # conventions\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n        ;;\n\n      gnu*)\n        ;;\n\n      haiku*)\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        ;;\n\n      hpux9*)\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t             # but as the default\n\t\t\t\t             # location of the library.\n\n        case $cc_basename in\n          CC*)\n            # FIXME: insert proper C++ library support\n            _LT_TAGVAR(ld_shlibs, $1)=no\n            ;;\n          aCC*)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -b ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n            # Commands to make compiler produce verbose output that lists\n            # what \"hidden\" libraries, object files and flags are used when\n            # linking a shared library.\n            #\n            # There doesn't appear to be a way to prevent this compiler from\n            # explicitly linking system object files so we need to strip them\n            # from the output so that they don't get included in the library\n            # dependencies.\n            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP \"\\-L\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n            ;;\n          *)\n            if test \"$GXX\" = yes; then\n              _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -nostdlib -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n            else\n              # FIXME: insert proper C++ library support\n              _LT_TAGVAR(ld_shlibs, $1)=no\n            fi\n            ;;\n        esac\n        ;;\n\n      hpux10*|hpux11*)\n        if test $with_gnu_ld = no; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n          case $host_cpu in\n            hppa*64*|ia64*)\n              ;;\n            *)\n\t      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n              ;;\n          esac\n        fi\n        case $host_cpu in\n          hppa*64*|ia64*)\n            _LT_TAGVAR(hardcode_direct, $1)=no\n            _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n            ;;\n          *)\n            _LT_TAGVAR(hardcode_direct, $1)=yes\n            _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t\t         # but as the default\n\t\t\t\t\t         # location of the library.\n            ;;\n        esac\n\n        case $cc_basename in\n          CC*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          aCC*)\n\t    case $host_cpu in\n\t      hppa*64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      ia64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      *)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t    esac\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP \"\\-L\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n          *)\n\t    if test \"$GXX\" = yes; then\n\t      if test $with_gnu_ld = no; then\n\t        case $host_cpu in\n\t          hppa*64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          ia64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          *)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t        esac\n\t      fi\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      interix[[3-9]]*)\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\t# Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n\t# Instead, shared libraries are loaded at an image base (0x10000000 by\n\t# default) and relocated if they conflict, which is a slow very memory\n\t# consuming and fragmenting process.  To avoid this, we pick a random,\n\t# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n\t# time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s,^,_,\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t;;\n      irix5* | irix6*)\n        case $cc_basename in\n          CC*)\n\t    # SGI C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    if test \"$GXX\" = yes; then\n\t      if test \"$with_gnu_ld\" = no; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t      else\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` -o $lib'\n\t      fi\n\t    fi\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\t    ;;\n        esac\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(inherit_rpath, $1)=yes\n        ;;\n\n      linux* | k*bsd*-gnu | kopensolaris*-gnu)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib ${wl}-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP \"ld\"`; rm -f libconftest$shared_ext; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\t    ;;\n\t  icpc* | ecpc* )\n\t    # Intel C++\n\t    with_gnu_ld=yes\n\t    # version 8.0 and above of icpc choke on multiply defined symbols\n\t    # if we add $predep_objects and $postdep_objects, however 7.1 and\n\t    # earlier do not add the objects themselves.\n\t    case `$CC -V 2>&1` in\n\t      *\"Version 7.\"*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t      *)  # Version 8.0 or newer\n\t        tmp_idyn=\n\t        case $host_cpu in\n\t\t  ia64*) tmp_idyn=' -i_dynamic';;\n\t\tesac\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t    esac\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t    ;;\n          pgCC* | pgcpp*)\n            # Portland Group C++ compiler\n\t    case `$CC -V` in\n\t    *pgCC\\ [[1-5]].* | *pgcpp\\ [[1-5]].*)\n\t      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n\t      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n\t\t$RANLIB $oldlib'\n\t      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n\t      ;;\n\t    *) # Version 6 and above use weak symbols\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n\t      ;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n            ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname  -o $lib ${wl}-retain-symbols-file $wl$export_symbols'\n\n\t    runpath_var=LD_RUN_PATH\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"X$list\" | $Xsed'\n\t    ;;\n\t  xl* | mpixl* | bgxl*)\n\t    # IBM XL 8.0 on PPC, with GNU ld\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t    if test \"x$supports_anon_versioning\" = xyes; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n\t\tcat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n\t\techo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t\t$CC -qmkshrobj $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'\n\t    fi\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag} -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G${allow_undefined_flag} -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file ${wl}$export_symbols'\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t      _LT_TAGVAR(compiler_needs_object, $1)=yes\n\n\t      # Not sure whether something based on\n\t      # $CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1\n\t      # would be better.\n\t      output_verbose_link_cmd='func_echo_all'\n\n\t      # Archives containing C++ object files must be created using\n\t      # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t      # necessary to make sure instantiated templates are included\n\t      # in the archive.\n\t      _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n\n      lynxos*)\n        # FIXME: insert proper C++ library support\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      m88k*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      mvs*)\n        case $cc_basename in\n          cxx*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\t  *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\tesac\n\t;;\n\n      netbsd*)\n        if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n\t  wlarc=\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\tfi\n\t# Workaround some broken pre-1.5 toolchains\n\toutput_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n\t;;\n\n      *nto* | *qnx*)\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n\t;;\n\n      openbsd2*)\n        # C++ shared libraries are fairly broken\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      openbsd*)\n\tif test -f /usr/libexec/ld.so; then\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file,$export_symbols -o $lib'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n\t  fi\n\t  output_verbose_link_cmd=func_echo_all\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      osf3* | osf4* | osf5*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo \"$lib\" | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Archives containing C++ object files must be created using\n\t    # the KAI C++ compiler.\n\t    case $host in\n\t      osf3*) _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs' ;;\n\t      *) _LT_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs' ;;\n\t    esac\n\t    ;;\n          RCC*)\n\t    # Rational C++ 2.4.1\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          cxx*)\n\t    case $host in\n\t      osf3*)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t\t;;\n\t      *)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n\t          echo \"-hidden\">> $lib.exp~\n\t          $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname ${wl}-input ${wl}$lib.exp  `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib~\n\t          $RM $lib.exp'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t\t;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\" | $GREP -v \"ld:\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n\t  *)\n\t    if test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t      _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t      case $host in\n\t        osf3*)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t\t  ;;\n\t        *)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t\t  ;;\n\t      esac\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t      # Commands to make compiler produce verbose output that lists\n\t      # what \"hidden\" libraries, object files and flags are used when\n\t      # linking a shared library.\n\t      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      psos*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      sunos4*)\n        case $cc_basename in\n          CC*)\n\t    # Sun C++ 4.x\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          lcc*)\n\t    # Lucid\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      solaris*)\n        case $cc_basename in\n          CC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n            _LT_TAGVAR(archive_cmds_need_lc,$1)=yes\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag}  -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t      $CC -G${allow_undefined_flag} ${wl}-M ${wl}$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t    _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t    case $host_os in\n\t      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t      *)\n\t\t# The compiler driver will combine and reorder linker options,\n\t\t# but understands `-z linker_flag'.\n\t        # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t\t_LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\t        ;;\n\t    esac\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\n\t    output_verbose_link_cmd='func_echo_all'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t    ;;\n          gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\n\t    # The C++ compiler must be used to create the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    # GNU C++ compiler with Solaris linker\n\t    if test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-z ${wl}defs'\n\t      if $CC --version | $GREP -v '^2\\.7' > /dev/null; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t\t  $CC -shared -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      else\n\t        # g++ 2.7 appears to require `-G' NOT `-shared' on this\n\t        # platform.\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t\t  $CC -G -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      fi\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $wl$libdir'\n\t      case $host_os in\n\t\tsolaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t\t*)\n\t\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'\n\t\t  ;;\n\t      esac\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      case $cc_basename in\n        CC*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n      esac\n      ;;\n\n      sysv5* | sco3.2v5* | sco5v6*)\n\t# Note: We can NOT use -z defs as we might desire, because we do not\n\t# link with -lc, and that would cause any symbols used from libc to\n\t# always be unresolved, which means just about no library would\n\t# ever link correctly.  If we're not using GNU ld we use -z text\n\t# though, which does catch some bad symbols but isn't as heavy-handed\n\t# as -z defs.\n\t_LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n\t_LT_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'\n\t_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R,$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n\t_LT_TAGVAR(link_all_deplibs, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'\n\trunpath_var='LD_RUN_PATH'\n\n\tcase $cc_basename in\n          CC*)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Tprelink_objects $oldobjs~\n\t      '\"$_LT_TAGVAR(old_archive_cmds, $1)\"\n\t    _LT_TAGVAR(reload_cmds, $1)='$CC -Tprelink_objects $reload_objs~\n\t      '\"$_LT_TAGVAR(reload_cmds, $1)\"\n\t    ;;\n\t  *)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    ;;\n\tesac\n      ;;\n\n      tandem*)\n        case $cc_basename in\n          NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      vxworks*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      *)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n    esac\n\n    AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\n    test \"$_LT_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\n    _LT_TAGVAR(GCC, $1)=\"$GXX\"\n    _LT_TAGVAR(LD, $1)=\"$LD\"\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  CC=$lt_save_CC\n  LDCXX=$LD\n  LD=$lt_save_LD\n  GCC=$lt_save_GCC\n  with_gnu_ld=$lt_save_with_gnu_ld\n  lt_cv_path_LDCXX=$lt_cv_path_LD\n  lt_cv_path_LD=$lt_save_path_LD\n  lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\n  lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\nfi # test \"$_lt_caught_CXX_error\" != yes\n\nAC_LANG_POP\n])# _LT_LANG_CXX_CONFIG\n\n\n# _LT_SYS_HIDDEN_LIBDEPS([TAGNAME])\n# ---------------------------------\n# Figure out \"hidden\" library dependencies from verbose\n# compiler output when linking a shared library.\n# Parse the compiler output and extract the necessary\n# objects, libraries and library flags.\nm4_defun([_LT_SYS_HIDDEN_LIBDEPS],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\n# Dependencies to place before and after the object being linked:\n_LT_TAGVAR(predep_objects, $1)=\n_LT_TAGVAR(postdep_objects, $1)=\n_LT_TAGVAR(predeps, $1)=\n_LT_TAGVAR(postdeps, $1)=\n_LT_TAGVAR(compiler_lib_search_path, $1)=\n\ndnl we can't use the lt_simple_compile_test_code here,\ndnl because it contains code intended for an executable,\ndnl not a library.  It's possible we should let each\ndnl tag define a new lt_????_link_test_code variable,\ndnl but it's only used here...\nm4_if([$1], [], [cat > conftest.$ac_ext <<_LT_EOF\nint a;\nvoid foo (void) { a = 0; }\n_LT_EOF\n], [$1], [CXX], [cat > conftest.$ac_ext <<_LT_EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\n_LT_EOF\n], [$1], [F77], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer*4 a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [FC], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [GCJ], [cat > conftest.$ac_ext <<_LT_EOF\npublic class foo {\n  private int a;\n  public void bar (void) {\n    a = 0;\n  }\n};\n_LT_EOF\n])\ndnl Parse the compiler output and extract the necessary\ndnl objects, libraries and library flags.\nif AC_TRY_EVAL(ac_compile); then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  for p in `eval \"$output_verbose_link_cmd\"`; do\n    case $p in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test $p = \"-L\" ||\n          test $p = \"-R\"; then\n\t prev=$p\n\t continue\n       else\n\t prev=\n       fi\n\n       if test \"$pre_test_object_deps_done\" = no; then\n\t case $p in\n\t -L* | -R*)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$_LT_TAGVAR(compiler_lib_search_path, $1)\"; then\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${prev}${p}\"\n\t   else\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${_LT_TAGVAR(compiler_lib_search_path, $1)} ${prev}${p}\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$_LT_TAGVAR(postdeps, $1)\"; then\n\t   _LT_TAGVAR(postdeps, $1)=\"${prev}${p}\"\n\t else\n\t   _LT_TAGVAR(postdeps, $1)=\"${_LT_TAGVAR(postdeps, $1)} ${prev}${p}\"\n\t fi\n       fi\n       ;;\n\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test \"$pre_test_object_deps_done\" = no; then\n\t if test -z \"$_LT_TAGVAR(predep_objects, $1)\"; then\n\t   _LT_TAGVAR(predep_objects, $1)=\"$p\"\n\t else\n\t   _LT_TAGVAR(predep_objects, $1)=\"$_LT_TAGVAR(predep_objects, $1) $p\"\n\t fi\n       else\n\t if test -z \"$_LT_TAGVAR(postdep_objects, $1)\"; then\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$p\"\n\t else\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$_LT_TAGVAR(postdep_objects, $1) $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling $1 test program\"\nfi\n\n$RM -f confest.$objext\n\n# PORTME: override above test on systems where it is broken\nm4_if([$1], [CXX],\n[case $host_os in\ninterix[[3-9]]*)\n  # Interix 3.5 installs completely hosed .la files for C++, so rather than\n  # hack all around it, let's just trust \"g++\" to DTRT.\n  _LT_TAGVAR(predep_objects,$1)=\n  _LT_TAGVAR(postdep_objects,$1)=\n  _LT_TAGVAR(postdeps,$1)=\n  ;;\n\nlinux*)\n  case `$CC -V 2>&1 | sed 5q` in\n  *Sun\\ C*)\n    # Sun C++ 5.9\n\n    # The more standards-conforming stlport4 library is\n    # incompatible with the Cstd library. Avoid specifying\n    # it if it's in CXXFLAGS. Ignore libCrun as\n    # -library=stlport4 depends on it.\n    case \" $CXX $CXXFLAGS \" in\n    *\" -library=stlport4 \"*)\n      solaris_use_stlport4=yes\n      ;;\n    esac\n\n    if test \"$solaris_use_stlport4\" != yes; then\n      _LT_TAGVAR(postdeps,$1)='-library=Cstd -library=Crun'\n    fi\n    ;;\n  esac\n  ;;\n\nsolaris*)\n  case $cc_basename in\n  CC*)\n    # The more standards-conforming stlport4 library is\n    # incompatible with the Cstd library. Avoid specifying\n    # it if it's in CXXFLAGS. Ignore libCrun as\n    # -library=stlport4 depends on it.\n    case \" $CXX $CXXFLAGS \" in\n    *\" -library=stlport4 \"*)\n      solaris_use_stlport4=yes\n      ;;\n    esac\n\n    # Adding this requires a known-good setup of shared libraries for\n    # Sun compiler versions before 5.6, else PIC objects from an old\n    # archive will be linked into the output, leading to subtle bugs.\n    if test \"$solaris_use_stlport4\" != yes; then\n      _LT_TAGVAR(postdeps,$1)='-library=Cstd -library=Crun'\n    fi\n    ;;\n  esac\n  ;;\nesac\n])\n\ncase \" $_LT_TAGVAR(postdeps, $1) \" in\n*\" -lc \"*) _LT_TAGVAR(archive_cmds_need_lc, $1)=no ;;\nesac\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=\nif test -n \"${_LT_TAGVAR(compiler_lib_search_path, $1)}\"; then\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=`echo \" ${_LT_TAGVAR(compiler_lib_search_path, $1)}\" | ${SED} -e 's! -L! !g' -e 's!^ !!'`\nfi\n_LT_TAGDECL([], [compiler_lib_search_dirs], [1],\n    [The directories searched by this compiler when creating a shared library])\n_LT_TAGDECL([], [predep_objects], [1],\n    [Dependencies to place before and after the objects being linked to\n    create a shared library])\n_LT_TAGDECL([], [postdep_objects], [1])\n_LT_TAGDECL([], [predeps], [1])\n_LT_TAGDECL([], [postdeps], [1])\n_LT_TAGDECL([], [compiler_lib_search_path], [1],\n    [The library search path used internally by the compiler when linking\n    a shared library])\n])# _LT_SYS_HIDDEN_LIBDEPS\n\n\n# _LT_LANG_F77_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a Fortran 77 compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_F77_CONFIG],\n[AC_LANG_PUSH(Fortran 77)\nif test -z \"$F77\" || test \"X$F77\" = \"Xno\"; then\n  _lt_disable_F77=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for f77 test sources.\nac_ext=f\n\n# Object file extension for compiled f77 test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the F77 compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test \"$_lt_disable_F77\" != yes; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=\"$CC\"\n  lt_save_GCC=$GCC\n  CC=${F77-\"f77\"}\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n  GCC=$G77\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test \"$can_build_shared\" = \"no\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test \"$enable_shared\" = yes && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n\t  test \"$enable_shared\" = yes && enable_static=no\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test \"$enable_shared\" = yes || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=\"$G77\"\n    _LT_TAGVAR(LD, $1)=\"$LD\"\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=\"$lt_save_CC\"\nfi # test \"$_lt_disable_F77\" != yes\n\nAC_LANG_POP\n])# _LT_LANG_F77_CONFIG\n\n\n# _LT_LANG_FC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for a Fortran compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_FC_CONFIG],\n[AC_LANG_PUSH(Fortran)\n\nif test -z \"$FC\" || test \"X$FC\" = \"Xno\"; then\n  _lt_disable_FC=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for fc test sources.\nac_ext=${ac_fc_srcext-f}\n\n# Object file extension for compiled fc test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the FC compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test \"$_lt_disable_FC\" != yes; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=\"$CC\"\n  lt_save_GCC=$GCC\n  CC=${FC-\"f95\"}\n  compiler=$CC\n  GCC=$ac_cv_fc_compiler_gnu\n\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test \"$can_build_shared\" = \"no\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test \"$enable_shared\" = yes && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n\t  test \"$enable_shared\" = yes && enable_static=no\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test \"$enable_shared\" = yes || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=\"$ac_cv_fc_compiler_gnu\"\n    _LT_TAGVAR(LD, $1)=\"$LD\"\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=\"$lt_save_CC\"\nfi # test \"$_lt_disable_FC\" != yes\n\nAC_LANG_POP\n])# _LT_LANG_FC_CONFIG\n\n\n# _LT_LANG_GCJ_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Java Compiler compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_GCJ_CONFIG],\n[AC_REQUIRE([LT_PROG_GCJ])dnl\nAC_LANG_SAVE\n\n# Source file extension for Java test sources.\nac_ext=java\n\n# Object file extension for compiled Java test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"class foo {}\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GCJ-\"gcj\"}\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=\"$LD\"\n_LT_CC_BASENAME([$compiler])\n\n# GCJ did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=\"$lt_save_CC\"\n])# _LT_LANG_GCJ_CONFIG\n\n\n# _LT_LANG_RC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for the Windows resource compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_RC_CONFIG],\n[AC_REQUIRE([LT_PROG_RC])dnl\nAC_LANG_SAVE\n\n# Source file extension for RC test sources.\nac_ext=rc\n\n# Object file extension for compiled RC test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code='sample MENU { MENUITEM \"&Soup\", 100, CHECKED }'\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=\"$lt_simple_compile_test_code\"\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nlt_save_GCC=$GCC\nGCC=\nCC=${RC-\"windres\"}\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n\nif test -n \"$compiler\"; then\n  :\n  _LT_CONFIG($1)\nfi\n\nGCC=$lt_save_GCC\nAC_LANG_RESTORE\nCC=\"$lt_save_CC\"\n])# _LT_LANG_RC_CONFIG\n\n\n# LT_PROG_GCJ\n# -----------\nAC_DEFUN([LT_PROG_GCJ],\n[m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],\n  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],\n    [AC_CHECK_TOOL(GCJ, gcj,)\n      test \"x${GCJFLAGS+set}\" = xset || GCJFLAGS=\"-g -O2\"\n      AC_SUBST(GCJFLAGS)])])[]dnl\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_GCJ], [LT_PROG_GCJ])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_GCJ], [])\n\n\n# LT_PROG_RC\n# ----------\nAC_DEFUN([LT_PROG_RC],\n[AC_CHECK_TOOL(RC, windres,)\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_RC], [LT_PROG_RC])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_RC], [])\n\n\n# _LT_DECL_EGREP\n# --------------\n# If we don't have a new enough Autoconf to choose the best grep\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_EGREP],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_REQUIRE([AC_PROG_FGREP])dnl\ntest -z \"$GREP\" && GREP=grep\n_LT_DECL([], [GREP], [1], [A grep program that handles long lines])\n_LT_DECL([], [EGREP], [1], [An ERE matcher])\n_LT_DECL([], [FGREP], [1], [A literal string matcher])\ndnl Non-bleeding-edge autoconf doesn't subst GREP, so do it here too\nAC_SUBST([GREP])\n])\n\n\n# _LT_DECL_OBJDUMP\n# --------------\n# If we don't have a new enough Autoconf to choose the best objdump\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_OBJDUMP],\n[AC_CHECK_TOOL(OBJDUMP, objdump, false)\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [An object symbol dumper])\nAC_SUBST([OBJDUMP])\n])\n\n\n# _LT_DECL_SED\n# ------------\n# Check for a fully-functional sed program, that truncates\n# as few characters as possible.  Prefer GNU sed if found.\nm4_defun([_LT_DECL_SED],\n[AC_PROG_SED\ntest -z \"$SED\" && SED=sed\nXsed=\"$SED -e 1s/^X//\"\n_LT_DECL([], [SED], [1], [A sed program that does not truncate output])\n_LT_DECL([], [Xsed], [\"\\$SED -e 1s/^X//\"],\n    [Sed that helps us avoid accidentally triggering echo(1) options like -n])\n])# _LT_DECL_SED\n\nm4_ifndef([AC_PROG_SED], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_SED.  When it is available in   #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\n\nm4_defun([AC_PROG_SED],\n[AC_MSG_CHECKING([for a sed that does not truncate output])\nAC_CACHE_VAL(lt_cv_path_SED,\n[# Loop through the user's path and test for sed and gsed.\n# Then use that list of sed's as ones to test for truncation.\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  for lt_ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      if $as_executable_p \"$as_dir/$lt_ac_prog$ac_exec_ext\"; then\n        lt_ac_sed_list=\"$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext\"\n      fi\n    done\n  done\ndone\nIFS=$as_save_IFS\nlt_ac_max=0\nlt_ac_count=0\n# Add /usr/xpg4/bin/sed as it is typically found on Solaris\n# along with /bin/sed that truncates output.\nfor lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do\n  test ! -f $lt_ac_sed && continue\n  cat /dev/null > conftest.in\n  lt_ac_count=0\n  echo $ECHO_N \"0123456789$ECHO_C\" >conftest.in\n  # Check for GNU sed and select it if it is found.\n  if \"$lt_ac_sed\" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then\n    lt_cv_path_SED=$lt_ac_sed\n    break\n  fi\n  while true; do\n    cat conftest.in conftest.in >conftest.tmp\n    mv conftest.tmp conftest.in\n    cp conftest.in conftest.nl\n    echo >>conftest.nl\n    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break\n    cmp -s conftest.out conftest.nl || break\n    # 10000 chars as input seems more than enough\n    test $lt_ac_count -gt 10 && break\n    lt_ac_count=`expr $lt_ac_count + 1`\n    if test $lt_ac_count -gt $lt_ac_max; then\n      lt_ac_max=$lt_ac_count\n      lt_cv_path_SED=$lt_ac_sed\n    fi\n  done\ndone\n])\nSED=$lt_cv_path_SED\nAC_SUBST([SED])\nAC_MSG_RESULT([$SED])\n])#AC_PROG_SED\n])#m4_ifndef\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_SED], [AC_PROG_SED])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_SED], [])\n\n\n# _LT_CHECK_SHELL_FEATURES\n# ------------------------\n# Find out whether the shell is Bourne or XSI compatible,\n# or has some other useful features.\nm4_defun([_LT_CHECK_SHELL_FEATURES],\n[AC_MSG_CHECKING([whether the shell understands some XSI constructs])\n# Try some XSI features\nxsi_shell=no\n( _lt_dummy=\"a/b/c\"\n  test \"${_lt_dummy##*/},${_lt_dummy%/*},\"${_lt_dummy%\"$_lt_dummy\"}, \\\n      = c,a/b,, \\\n    && eval 'test $(( 1 + 1 )) -eq 2 \\\n    && test \"${#_lt_dummy}\" -eq 5' ) >/dev/null 2>&1 \\\n  && xsi_shell=yes\nAC_MSG_RESULT([$xsi_shell])\n_LT_CONFIG_LIBTOOL_INIT([xsi_shell='$xsi_shell'])\n\nAC_MSG_CHECKING([whether the shell understands \"+=\"])\nlt_shell_append=no\n( foo=bar; set foo baz; eval \"$[1]+=\\$[2]\" && test \"$foo\" = barbaz ) \\\n    >/dev/null 2>&1 \\\n  && lt_shell_append=yes\nAC_MSG_RESULT([$lt_shell_append])\n_LT_CONFIG_LIBTOOL_INIT([lt_shell_append='$lt_shell_append'])\n\nif ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then\n  lt_unset=unset\nelse\n  lt_unset=false\nfi\n_LT_DECL([], [lt_unset], [0], [whether the shell understands \"unset\"])dnl\n\n# test EBCDIC or ASCII\ncase `echo X|tr X '\\101'` in\n A) # ASCII based system\n    # \\n is not interpreted correctly by Solaris 8 /usr/ucb/tr\n  lt_SP2NL='tr \\040 \\012'\n  lt_NL2SP='tr \\015\\012 \\040\\040'\n  ;;\n *) # EBCDIC based system\n  lt_SP2NL='tr \\100 \\n'\n  lt_NL2SP='tr \\r\\n \\100\\100'\n  ;;\nesac\n_LT_DECL([SP2NL], [lt_SP2NL], [1], [turn spaces into newlines])dnl\n_LT_DECL([NL2SP], [lt_NL2SP], [1], [turn newlines into spaces])dnl\n])# _LT_CHECK_SHELL_FEATURES\n\n\n# _LT_PROG_XSI_SHELLFNS\n# ---------------------\n# Bourne and XSI compatible variants of some useful shell functions.\nm4_defun([_LT_PROG_XSI_SHELLFNS],\n[case $xsi_shell in\n  yes)\n    cat << \\_LT_EOF >> \"$cfgfile\"\n\n# func_dirname file append nondir_replacement\n# Compute the dirname of FILE.  If nonempty, add APPEND to the result,\n# otherwise set result to NONDIR_REPLACEMENT.\nfunc_dirname ()\n{\n  case ${1} in\n    */*) func_dirname_result=\"${1%/*}${2}\" ;;\n    *  ) func_dirname_result=\"${3}\" ;;\n  esac\n}\n\n# func_basename file\nfunc_basename ()\n{\n  func_basename_result=\"${1##*/}\"\n}\n\n# func_dirname_and_basename file append nondir_replacement\n# perform func_basename and func_dirname in a single function\n# call:\n#   dirname:  Compute the dirname of FILE.  If nonempty,\n#             add APPEND to the result, otherwise set result\n#             to NONDIR_REPLACEMENT.\n#             value returned in \"$func_dirname_result\"\n#   basename: Compute filename of FILE.\n#             value retuned in \"$func_basename_result\"\n# Implementation must be kept synchronized with func_dirname\n# and func_basename. For efficiency, we do not delegate to\n# those functions but instead duplicate the functionality here.\nfunc_dirname_and_basename ()\n{\n  case ${1} in\n    */*) func_dirname_result=\"${1%/*}${2}\" ;;\n    *  ) func_dirname_result=\"${3}\" ;;\n  esac\n  func_basename_result=\"${1##*/}\"\n}\n\n# func_stripname prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\nfunc_stripname ()\n{\n  # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are\n  # positional parameters, so assign one to ordinary parameter first.\n  func_stripname_result=${3}\n  func_stripname_result=${func_stripname_result#\"${1}\"}\n  func_stripname_result=${func_stripname_result%\"${2}\"}\n}\n\n# func_opt_split\nfunc_opt_split ()\n{\n  func_opt_split_opt=${1%%=*}\n  func_opt_split_arg=${1#*=}\n}\n\n# func_lo2o object\nfunc_lo2o ()\n{\n  case ${1} in\n    *.lo) func_lo2o_result=${1%.lo}.${objext} ;;\n    *)    func_lo2o_result=${1} ;;\n  esac\n}\n\n# func_xform libobj-or-source\nfunc_xform ()\n{\n  func_xform_result=${1%.*}.lo\n}\n\n# func_arith arithmetic-term...\nfunc_arith ()\n{\n  func_arith_result=$(( $[*] ))\n}\n\n# func_len string\n# STRING may not start with a hyphen.\nfunc_len ()\n{\n  func_len_result=${#1}\n}\n\n_LT_EOF\n    ;;\n  *) # Bourne compatible functions.\n    cat << \\_LT_EOF >> \"$cfgfile\"\n\n# func_dirname file append nondir_replacement\n# Compute the dirname of FILE.  If nonempty, add APPEND to the result,\n# otherwise set result to NONDIR_REPLACEMENT.\nfunc_dirname ()\n{\n  # Extract subdirectory from the argument.\n  func_dirname_result=`$ECHO \"${1}\" | $SED \"$dirname\"`\n  if test \"X$func_dirname_result\" = \"X${1}\"; then\n    func_dirname_result=\"${3}\"\n  else\n    func_dirname_result=\"$func_dirname_result${2}\"\n  fi\n}\n\n# func_basename file\nfunc_basename ()\n{\n  func_basename_result=`$ECHO \"${1}\" | $SED \"$basename\"`\n}\n\ndnl func_dirname_and_basename\ndnl A portable version of this function is already defined in general.m4sh\ndnl so there is no need for it here.\n\n# func_stripname prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\n# func_strip_suffix prefix name\nfunc_stripname ()\n{\n  case ${2} in\n    .*) func_stripname_result=`$ECHO \"${3}\" | $SED \"s%^${1}%%; s%\\\\\\\\${2}\\$%%\"`;;\n    *)  func_stripname_result=`$ECHO \"${3}\" | $SED \"s%^${1}%%; s%${2}\\$%%\"`;;\n  esac\n}\n\n# sed scripts:\nmy_sed_long_opt='1s/^\\(-[[^=]]*\\)=.*/\\1/;q'\nmy_sed_long_arg='1s/^-[[^=]]*=//'\n\n# func_opt_split\nfunc_opt_split ()\n{\n  func_opt_split_opt=`$ECHO \"${1}\" | $SED \"$my_sed_long_opt\"`\n  func_opt_split_arg=`$ECHO \"${1}\" | $SED \"$my_sed_long_arg\"`\n}\n\n# func_lo2o object\nfunc_lo2o ()\n{\n  func_lo2o_result=`$ECHO \"${1}\" | $SED \"$lo2o\"`\n}\n\n# func_xform libobj-or-source\nfunc_xform ()\n{\n  func_xform_result=`$ECHO \"${1}\" | $SED 's/\\.[[^.]]*$/.lo/'`\n}\n\n# func_arith arithmetic-term...\nfunc_arith ()\n{\n  func_arith_result=`expr \"$[@]\"`\n}\n\n# func_len string\n# STRING may not start with a hyphen.\nfunc_len ()\n{\n  func_len_result=`expr \"$[1]\" : \".*\" 2>/dev/null || echo $max_cmd_len`\n}\n\n_LT_EOF\nesac\n\ncase $lt_shell_append in\n  yes)\n    cat << \\_LT_EOF >> \"$cfgfile\"\n\n# func_append var value\n# Append VALUE to the end of shell variable VAR.\nfunc_append ()\n{\n  eval \"$[1]+=\\$[2]\"\n}\n_LT_EOF\n    ;;\n  *)\n    cat << \\_LT_EOF >> \"$cfgfile\"\n\n# func_append var value\n# Append VALUE to the end of shell variable VAR.\nfunc_append ()\n{\n  eval \"$[1]=\\$$[1]\\$[2]\"\n}\n\n_LT_EOF\n    ;;\n  esac\n])\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/ltmain.sh": "# Generated from ltmain.m4sh.\n\n# libtool (GNU libtool 1.3134 2009-11-29) 2.2.7a\n# Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n\n# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006,\n# 2007, 2008, 2009 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n# Usage: $progname [OPTION]... [MODE-ARG]...\n#\n# Provide generalized library-building support services.\n#\n#       --config             show all configuration variables\n#       --debug              enable verbose shell tracing\n#   -n, --dry-run            display commands without modifying any files\n#       --features           display basic configuration information and exit\n#       --mode=MODE          use operation mode MODE\n#       --no-finish          let install mode avoid finish commands\n#       --preserve-dup-deps  don't remove duplicate dependency libraries\n#       --quiet, --silent    don't print informational messages\n#       --no-quiet, --no-silent\n#                            print informational messages (default)\n#       --tag=TAG            use configuration variables from tag TAG\n#   -v, --verbose            print more informational messages than default\n#       --no-verbose         don't print the extra informational messages\n#       --version            print version information\n#   -h, --help, --help-all   print short, long, or detailed help message\n#\n# MODE must be one of the following:\n#\n#         clean              remove files from the build directory\n#         compile            compile a source file into a libtool object\n#         execute            automatically set library path, then run a program\n#         finish             complete the installation of libtool libraries\n#         install            install libraries or executables\n#         link               create a library or an executable\n#         uninstall          remove libraries from an installed directory\n#\n# MODE-ARGS vary depending on the MODE.  When passed as first option,\n# `--mode=MODE' may be abbreviated as `MODE' or a unique abbreviation of that.\n# Try `$progname --help --mode=MODE' for a more detailed description of MODE.\n#\n# When reporting a bug, please describe a test case to reproduce it and\n# include the following information:\n#\n#         host-triplet:\t$host\n#         shell:\t\t$SHELL\n#         compiler:\t\t$LTCC\n#         compiler flags:\t\t$LTCFLAGS\n#         linker:\t\t$LD (gnu? $with_gnu_ld)\n#         $progname:\t(GNU libtool 1.3134 2009-11-29) 2.2.7a\n#         automake:\t$automake_version\n#         autoconf:\t$autoconf_version\n#\n# Report bugs to <bug-libtool@gnu.org>.\n\nPROGRAM=libtool\nPACKAGE=libtool\nVERSION=2.2.7a\nTIMESTAMP=\" 1.3134 2009-11-29\"\npackage_revision=1.3134\n\n# Be Bourne compatible\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n$1\n_LTECHO_EOF'\n}\n\n# NLS nuisances: We save the old values to restore during execute mode.\n# Only set LANG and LC_ALL to C if already set.\n# These must not be set unconditionally because not all systems understand\n# e.g. LANG=C (notably SCO).\nlt_user_locale=\nlt_safe_locale=\nfor lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\ndo\n  eval \"if test \\\"\\${$lt_var+set}\\\" = set; then\n          save_$lt_var=\\$$lt_var\n          $lt_var=C\n\t  export $lt_var\n\t  lt_user_locale=\\\"$lt_var=\\\\\\$save_\\$lt_var; \\$lt_user_locale\\\"\n\t  lt_safe_locale=\\\"$lt_var=C; \\$lt_safe_locale\\\"\n\tfi\"\ndone\n\n$lt_unset CDPATH\n\n\n\n\n\n\n\n# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh\n# is ksh but when the shell is invoked as \"sh\" and the current value of\n# the _XPG environment variable is not equal to 1 (one), the special\n# positional parameter $0, within a function call, is the name of the\n# function.\nprogpath=\"$0\"\n\n\n\n: ${CP=\"cp -f\"}\n: ${ECHO=$as_echo}\n: ${EGREP=\"/bin/grep -E\"}\n: ${FGREP=\"/bin/grep -F\"}\n: ${GREP=\"/bin/grep\"}\n: ${LN_S=\"ln -s\"}\n: ${MAKE=\"make\"}\n: ${MKDIR=\"mkdir\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n: ${SED=\"/mount/endor/wildenhu/local-x86_64/bin/sed\"}\n: ${SHELL=\"${CONFIG_SHELL-/bin/sh}\"}\n: ${Xsed=\"$SED -e 1s/^X//\"}\n\n# Global variables:\nEXIT_SUCCESS=0\nEXIT_FAILURE=1\nEXIT_MISMATCH=63  # $? = 63 is used to indicate version mismatch to missing.\nEXIT_SKIP=77\t  # $? = 77 is used to indicate a skipped test to automake.\n\nexit_status=$EXIT_SUCCESS\n\n# Make sure IFS has a sensible default\nlt_nl='\n'\nIFS=\" \t$lt_nl\"\n\ndirname=\"s,/[^/]*$,,\"\nbasename=\"s,^.*/,,\"\n\n# func_dirname_and_basename file append nondir_replacement\n# perform func_basename and func_dirname in a single function\n# call:\n#   dirname:  Compute the dirname of FILE.  If nonempty,\n#             add APPEND to the result, otherwise set result\n#             to NONDIR_REPLACEMENT.\n#             value returned in \"$func_dirname_result\"\n#   basename: Compute filename of FILE.\n#             value retuned in \"$func_basename_result\"\n# Implementation must be kept synchronized with func_dirname\n# and func_basename. For efficiency, we do not delegate to\n# those functions but instead duplicate the functionality here.\nfunc_dirname_and_basename ()\n{\n  # Extract subdirectory from the argument.\n  func_dirname_result=`$ECHO \"${1}\" | $SED -e \"$dirname\"`\n  if test \"X$func_dirname_result\" = \"X${1}\"; then\n    func_dirname_result=\"${3}\"\n  else\n    func_dirname_result=\"$func_dirname_result${2}\"\n  fi\n  func_basename_result=`$ECHO \"${1}\" | $SED -e \"$basename\"`\n}\n\n# Generated shell functions inserted here.\n\n# These SED scripts presuppose an absolute path with a trailing slash.\npathcar='s,^/\\([^/]*\\).*$,\\1,'\npathcdr='s,^/[^/]*,,'\nremovedotparts=':dotsl\n\t\ts@/\\./@/@g\n\t\tt dotsl\n\t\ts,/\\.$,/,'\ncollapseslashes='s@/\\{1,\\}@/@g'\nfinalslash='s,/*$,/,'\n\n# func_normal_abspath PATH\n# Remove doubled-up and trailing slashes, \".\" path components,\n# and cancel out any \"..\" path components in PATH after making\n# it an absolute path.\n#             value returned in \"$func_normal_abspath_result\"\nfunc_normal_abspath ()\n{\n  # Start from root dir and reassemble the path.\n  func_normal_abspath_result=\n  func_normal_abspath_tpath=$1\n  func_normal_abspath_altnamespace=\n  case $func_normal_abspath_tpath in\n    \"\")\n      # Empty path, that just means $cwd.\n      func_stripname '' '/' \"`pwd`\"\n      func_normal_abspath_result=$func_stripname_result\n      return\n    ;;\n    # The next three entries are used to spot a run of precisely\n    # two leading slashes without using negated character classes;\n    # we take advantage of case's first-match behaviour.\n    ///*)\n      # Unusual form of absolute path, do nothing.\n    ;;\n    //*)\n      # Not necessarily an ordinary path; POSIX reserves leading '//'\n      # and for example Cygwin uses it to access remote file shares\n      # over CIFS/SMB, so we conserve a leading double slash if found.\n      func_normal_abspath_altnamespace=/\n    ;;\n    /*)\n      # Absolute path, do nothing.\n    ;;\n    *)\n      # Relative path, prepend $cwd.\n      func_normal_abspath_tpath=`pwd`/$func_normal_abspath_tpath\n    ;;\n  esac\n  # Cancel out all the simple stuff to save iterations.  We also want\n  # the path to end with a slash for ease of parsing, so make sure\n  # there is one (and only one) here.\n  func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$removedotparts\" -e \"$collapseslashes\" -e \"$finalslash\"`\n  while :; do\n    # Processed it all yet?\n    if test \"$func_normal_abspath_tpath\" = / ; then\n      # If we ascended to the root using \"..\" the result may be empty now.\n      if test -z \"$func_normal_abspath_result\" ; then\n        func_normal_abspath_result=/\n      fi\n      break\n    fi\n    func_normal_abspath_tcomponent=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$pathcar\"`\n    func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$pathcdr\"`\n    # Figure out what to do with it\n    case $func_normal_abspath_tcomponent in\n      \"\")\n        # Trailing empty path component, ignore it.\n      ;;\n      ..)\n        # Parent dir; strip last assembled component from result.\n        func_dirname \"$func_normal_abspath_result\"\n        func_normal_abspath_result=$func_dirname_result\n      ;;\n      *)\n        # Actual path component, append it.\n        func_normal_abspath_result=$func_normal_abspath_result/$func_normal_abspath_tcomponent\n      ;;\n    esac\n  done\n  # Restore leading double-slash if one was found on entry.\n  func_normal_abspath_result=$func_normal_abspath_altnamespace$func_normal_abspath_result\n}\n\n# func_relative_path SRCDIR DSTDIR\n# generates a relative path from SRCDIR to DSTDIR, with a trailing\n# slash if non-empty, suitable for immediately appending a filename\n# without needing to append a separator.\n#             value returned in \"$func_relative_path_result\"\nfunc_relative_path ()\n{\n  func_relative_path_result=\n  func_normal_abspath \"$1\"\n  func_relative_path_tlibdir=$func_normal_abspath_result\n  func_normal_abspath \"$2\"\n  func_relative_path_tbindir=$func_normal_abspath_result\n\n  # Ascend the tree starting from libdir\n  while :; do\n    # check if we have found a prefix of bindir\n    case $func_relative_path_tbindir in\n      $func_relative_path_tlibdir)\n        # found an exact match\n        func_relative_path_tcancelled=\n        break\n        ;;\n      $func_relative_path_tlibdir*)\n        # found a matching prefix\n        func_stripname \"$func_relative_path_tlibdir\" '' \"$func_relative_path_tbindir\"\n        func_relative_path_tcancelled=$func_stripname_result\n        if test -z \"$func_relative_path_result\"; then\n          func_relative_path_result=.\n        fi\n        break\n        ;;\n      *)\n        func_dirname $func_relative_path_tlibdir\n        func_relative_path_tlibdir=${func_dirname_result}\n        if test \"x$func_relative_path_tlibdir\" = x ; then\n          # Have to descend all the way to the root!\n          func_relative_path_result=../$func_relative_path_result\n          func_relative_path_tcancelled=$func_relative_path_tbindir\n          break\n        fi\n        func_relative_path_result=../$func_relative_path_result\n        ;;\n    esac\n  done\n\n  # Now calculate path; take care to avoid doubling-up slashes.\n  func_stripname '' '/' \"$func_relative_path_result\"\n  func_relative_path_result=$func_stripname_result\n  func_stripname '/' '/' \"$func_relative_path_tcancelled\"\n  if test \"x$func_stripname_result\" != x ; then\n    func_relative_path_result=${func_relative_path_result}/${func_stripname_result}\n  fi\n\n  # Normalisation. If bindir is libdir, return empty string,\n  # else relative path ending with a slash; either way, target\n  # file name can be directly appended.\n  if test ! -z \"$func_relative_path_result\"; then\n    func_stripname './' '' \"$func_relative_path_result/\"\n    func_relative_path_result=$func_stripname_result\n  fi\n}\n\n# The name of this program:\nfunc_dirname_and_basename \"$progpath\"\nprogname=$func_basename_result\n\n# Make sure we have an absolute path for reexecution:\ncase $progpath in\n  [\\\\/]*|[A-Za-z]:\\\\*) ;;\n  *[\\\\/]*)\n     progdir=$func_dirname_result\n     progdir=`cd \"$progdir\" && pwd`\n     progpath=\"$progdir/$progname\"\n     ;;\n  *)\n     save_IFS=\"$IFS\"\n     IFS=:\n     for progdir in $PATH; do\n       IFS=\"$save_IFS\"\n       test -x \"$progdir/$progname\" && break\n     done\n     IFS=\"$save_IFS\"\n     test -n \"$progdir\" || progdir=`pwd`\n     progpath=\"$progdir/$progname\"\n     ;;\nesac\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed=\"${SED}\"' -e 1s/^X//'\nsed_quote_subst='s/\\([`\"$\\\\]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([\"`\\\\]\\)/\\\\\\1/g'\n\n# Re-`\\' parameter expansions in output of double_quote_subst that were\n# `\\'-ed in input to the same.  If an odd number of `\\' preceded a '$'\n# in input to double_quote_subst, that '$' was protected from expansion.\n# Since each input `\\' is now two `\\'s, look for any number of runs of\n# four `\\'s followed by two `\\'s and then a '$'.  `\\' that '$'.\nbs='\\\\'\nbs2='\\\\\\\\'\nbs4='\\\\\\\\\\\\\\\\'\ndollar='\\$'\nsed_double_backslash=\"\\\n  s/$bs4/&\\\\\n/g\n  s/^$bs2$dollar/$bs&/\n  s/\\\\([^$bs]\\\\)$bs2$dollar/\\\\1$bs2$bs$dollar/g\n  s/\\n//g\"\n\n# Standard options:\nopt_dry_run=false\nopt_help=false\nopt_quiet=false\nopt_verbose=false\nopt_warning=:\n\n# func_echo arg...\n# Echo program name prefixed message, along with the current mode\n# name if it has been set yet.\nfunc_echo ()\n{\n    $ECHO \"$progname${mode+: }$mode: $*\"\n}\n\n# func_verbose arg...\n# Echo program name prefixed message in verbose mode only.\nfunc_verbose ()\n{\n    $opt_verbose && func_echo ${1+\"$@\"}\n\n    # A bug in bash halts the script if the last line of a function\n    # fails when set -e is in force, so we need another command to\n    # work around that:\n    :\n}\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\n# func_error arg...\n# Echo program name prefixed message to standard error.\nfunc_error ()\n{\n    $ECHO \"$progname${mode+: }$mode: \"${1+\"$@\"} 1>&2\n}\n\n# func_warning arg...\n# Echo program name prefixed warning message to standard error.\nfunc_warning ()\n{\n    $opt_warning && $ECHO \"$progname${mode+: }$mode: warning: \"${1+\"$@\"} 1>&2\n\n    # bash bug again:\n    :\n}\n\n# func_fatal_error arg...\n# Echo program name prefixed message to standard error, and exit.\nfunc_fatal_error ()\n{\n    func_error ${1+\"$@\"}\n    exit $EXIT_FAILURE\n}\n\n# func_fatal_help arg...\n# Echo program name prefixed message to standard error, followed by\n# a help hint, and exit.\nfunc_fatal_help ()\n{\n    func_error ${1+\"$@\"}\n    func_fatal_error \"$help\"\n}\nhelp=\"Try \\`$progname --help' for more information.\"  ## default\n\n\n# func_grep expression filename\n# Check whether EXPRESSION matches any line of FILENAME, without output.\nfunc_grep ()\n{\n    $GREP \"$1\" \"$2\" >/dev/null 2>&1\n}\n\n\n# func_mkdir_p directory-path\n# Make sure the entire path to DIRECTORY-PATH is available.\nfunc_mkdir_p ()\n{\n    my_directory_path=\"$1\"\n    my_dir_list=\n\n    if test -n \"$my_directory_path\" && test \"$opt_dry_run\" != \":\"; then\n\n      # Protect directory names starting with `-'\n      case $my_directory_path in\n        -*) my_directory_path=\"./$my_directory_path\" ;;\n      esac\n\n      # While some portion of DIR does not yet exist...\n      while test ! -d \"$my_directory_path\"; do\n        # ...make a list in topmost first order.  Use a colon delimited\n\t# list incase some portion of path contains whitespace.\n        my_dir_list=\"$my_directory_path:$my_dir_list\"\n\n        # If the last portion added has no slash in it, the list is done\n        case $my_directory_path in */*) ;; *) break ;; esac\n\n        # ...otherwise throw away the child directory and loop\n        my_directory_path=`$ECHO \"$my_directory_path\" | $SED -e \"$dirname\"`\n      done\n      my_dir_list=`$ECHO \"$my_dir_list\" | $SED 's,:*$,,'`\n\n      save_mkdir_p_IFS=\"$IFS\"; IFS=':'\n      for my_dir in $my_dir_list; do\n\tIFS=\"$save_mkdir_p_IFS\"\n        # mkdir can fail with a `File exist' error if two processes\n        # try to create one of the directories concurrently.  Don't\n        # stop in that case!\n        $MKDIR \"$my_dir\" 2>/dev/null || :\n      done\n      IFS=\"$save_mkdir_p_IFS\"\n\n      # Bail out if we (or some other process) failed to create a directory.\n      test -d \"$my_directory_path\" || \\\n        func_fatal_error \"Failed to create \\`$1'\"\n    fi\n}\n\n\n# func_mktempdir [string]\n# Make a temporary directory that won't clash with other running\n# libtool processes, and avoids race conditions if possible.  If\n# given, STRING is the basename for that directory.\nfunc_mktempdir ()\n{\n    my_template=\"${TMPDIR-/tmp}/${1-$progname}\"\n\n    if test \"$opt_dry_run\" = \":\"; then\n      # Return a directory name, but don't create it in dry-run mode\n      my_tmpdir=\"${my_template}-$$\"\n    else\n\n      # If mktemp works, use that first and foremost\n      my_tmpdir=`mktemp -d \"${my_template}-XXXXXXXX\" 2>/dev/null`\n\n      if test ! -d \"$my_tmpdir\"; then\n        # Failing that, at least try and use $RANDOM to avoid a race\n        my_tmpdir=\"${my_template}-${RANDOM-0}$$\"\n\n        save_mktempdir_umask=`umask`\n        umask 0077\n        $MKDIR \"$my_tmpdir\"\n        umask $save_mktempdir_umask\n      fi\n\n      # If we're not in dry-run mode, bomb out on failure\n      test -d \"$my_tmpdir\" || \\\n        func_fatal_error \"cannot create temporary directory \\`$my_tmpdir'\"\n    fi\n\n    $ECHO \"$my_tmpdir\"\n}\n\n\n# func_quote_for_eval arg\n# Aesthetically quote ARG to be evaled later.\n# This function returns two values: FUNC_QUOTE_FOR_EVAL_RESULT\n# is double-quoted, suitable for a subsequent eval, whereas\n# FUNC_QUOTE_FOR_EVAL_UNQUOTED_RESULT has merely all characters\n# which are still active within double quotes backslashified.\nfunc_quote_for_eval ()\n{\n    case $1 in\n      *[\\\\\\`\\\"\\$]*)\n\tfunc_quote_for_eval_unquoted_result=`$ECHO \"$1\" | $SED \"$sed_quote_subst\"` ;;\n      *)\n        func_quote_for_eval_unquoted_result=\"$1\" ;;\n    esac\n\n    case $func_quote_for_eval_unquoted_result in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting, command substitution and and variable\n      # expansion for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        func_quote_for_eval_result=\"\\\"$func_quote_for_eval_unquoted_result\\\"\"\n        ;;\n      *)\n        func_quote_for_eval_result=\"$func_quote_for_eval_unquoted_result\"\n    esac\n}\n\n\n# func_quote_for_expand arg\n# Aesthetically quote ARG to be evaled later; same as above,\n# but do not quote variable references.\nfunc_quote_for_expand ()\n{\n    case $1 in\n      *[\\\\\\`\\\"]*)\n\tmy_arg=`$ECHO \"$1\" | $SED \\\n\t    -e \"$double_quote_subst\" -e \"$sed_double_backslash\"` ;;\n      *)\n        my_arg=\"$1\" ;;\n    esac\n\n    case $my_arg in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting and command substitution for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        my_arg=\"\\\"$my_arg\\\"\"\n        ;;\n    esac\n\n    func_quote_for_expand_result=\"$my_arg\"\n}\n\n\n# func_show_eval cmd [fail_exp]\n# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.\nfunc_show_eval ()\n{\n    my_cmd=\"$1\"\n    my_fail_exp=\"${2-:}\"\n\n    ${opt_silent-false} || {\n      func_quote_for_expand \"$my_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    if ${opt_dry_run-false}; then :; else\n      eval \"$my_cmd\"\n      my_status=$?\n      if test \"$my_status\" -eq 0; then :; else\n\teval \"(exit $my_status); $my_fail_exp\"\n      fi\n    fi\n}\n\n\n# func_show_eval_locale cmd [fail_exp]\n# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.  Use the saved locale for evaluation.\nfunc_show_eval_locale ()\n{\n    my_cmd=\"$1\"\n    my_fail_exp=\"${2-:}\"\n\n    ${opt_silent-false} || {\n      func_quote_for_expand \"$my_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    if ${opt_dry_run-false}; then :; else\n      eval \"$lt_user_locale\n\t    $my_cmd\"\n      my_status=$?\n      eval \"$lt_safe_locale\"\n      if test \"$my_status\" -eq 0; then :; else\n\teval \"(exit $my_status); $my_fail_exp\"\n      fi\n    fi\n}\n\n\n\n\n\n# func_version\n# Echo version message to standard output and exit.\nfunc_version ()\n{\n    $SED -n '/(C)/!b go\n\t:more\n\t/\\./!{\n\t  N\n\t  s/\\n# //\n\t  b more\n\t}\n\t:go\n\t/^# '$PROGRAM' (GNU /,/# warranty; / {\n        s/^# //\n\ts/^# *$//\n        s/\\((C)\\)[ 0-9,-]*\\( [1-9][0-9]*\\)/\\1\\2/\n        p\n     }' < \"$progpath\"\n     exit $?\n}\n\n# func_usage\n# Echo short help message to standard output and exit.\nfunc_usage ()\n{\n    $SED -n '/^# Usage:/,/^#  *-h/ {\n        s/^# //\n\ts/^# *$//\n\ts/\\$progname/'$progname'/\n\tp\n    }' < \"$progpath\"\n    echo\n    $ECHO \"run \\`$progname --help | more' for full usage\"\n    exit $?\n}\n\n# func_help [NOEXIT]\n# Echo long help message to standard output and exit,\n# unless 'noexit' is passed as argument.\nfunc_help ()\n{\n    $SED -n '/^# Usage:/,/# Report bugs to/ {\n        s/^# //\n\ts/^# *$//\n\ts*\\$progname*'$progname'*\n\ts*\\$host*'\"$host\"'*\n\ts*\\$SHELL*'\"$SHELL\"'*\n\ts*\\$LTCC*'\"$LTCC\"'*\n\ts*\\$LTCFLAGS*'\"$LTCFLAGS\"'*\n\ts*\\$LD*'\"$LD\"'*\n\ts/\\$with_gnu_ld/'\"$with_gnu_ld\"'/\n\ts/\\$automake_version/'\"`(automake --version) 2>/dev/null |$SED 1q`\"'/\n\ts/\\$autoconf_version/'\"`(autoconf --version) 2>/dev/null |$SED 1q`\"'/\n\tp\n     }' < \"$progpath\"\n    ret=$?\n    if test -z \"$1\"; then\n      exit $ret\n    fi\n}\n\n# func_missing_arg argname\n# Echo program name prefixed message to standard error and set global\n# exit_cmd.\nfunc_missing_arg ()\n{\n    func_error \"missing argument for $1\"\n    exit_cmd=exit\n}\n\nexit_cmd=:\n\n\n\n\n\n\nmagic=\"%%%MAGIC variable%%%\"\nmagic_exe=\"%%%MAGIC EXE variable%%%\"\n\n# Global variables.\n# $mode is unset\nnonopt=\nexecute_dlfiles=\npreserve_args=\nlo2o=\"s/\\\\.lo\\$/.${objext}/\"\no2lo=\"s/\\\\.${objext}\\$/.lo/\"\nextracted_archives=\nextracted_serial=0\n\nopt_dry_run=false\nopt_finish=:\nopt_duplicate_deps=false\nopt_silent=false\nopt_debug=:\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\n# func_fatal_configuration arg...\n# Echo program name prefixed message to standard error, followed by\n# a configuration failure hint, and exit.\nfunc_fatal_configuration ()\n{\n    func_error ${1+\"$@\"}\n    func_error \"See the $PACKAGE documentation for more information.\"\n    func_fatal_error \"Fatal configuration error.\"\n}\n\n\n# func_config\n# Display the configuration for all the tags in this script.\nfunc_config ()\n{\n    re_begincf='^# ### BEGIN LIBTOOL'\n    re_endcf='^# ### END LIBTOOL'\n\n    # Default configuration.\n    $SED \"1,/$re_begincf CONFIG/d;/$re_endcf CONFIG/,\\$d\" < \"$progpath\"\n\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      $SED -n \"/$re_begincf TAG CONFIG: $tagname\\$/,/$re_endcf TAG CONFIG: $tagname\\$/p\" < \"$progpath\"\n    done\n\n    exit $?\n}\n\n# func_features\n# Display the features supported by this script.\nfunc_features ()\n{\n    echo \"host: $host\"\n    if test \"$build_libtool_libs\" = yes; then\n      echo \"enable shared libraries\"\n    else\n      echo \"disable shared libraries\"\n    fi\n    if test \"$build_old_libs\" = yes; then\n      echo \"enable static libraries\"\n    else\n      echo \"disable static libraries\"\n    fi\n\n    exit $?\n}\n\n# func_enable_tag tagname\n# Verify that TAGNAME is valid, and either flag an error and exit, or\n# enable the TAGNAME tag.  We also add TAGNAME to the global $taglist\n# variable here.\nfunc_enable_tag ()\n{\n  # Global variable:\n  tagname=\"$1\"\n\n  re_begincf=\"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\\$\"\n  re_endcf=\"^# ### END LIBTOOL TAG CONFIG: $tagname\\$\"\n  sed_extractcf=\"/$re_begincf/,/$re_endcf/p\"\n\n  # Validate tagname.\n  case $tagname in\n    *[!-_A-Za-z0-9,/]*)\n      func_fatal_error \"invalid tag name: $tagname\"\n      ;;\n  esac\n\n  # Don't test for the \"default\" C tag, as we know it's\n  # there but not specially marked.\n  case $tagname in\n    CC) ;;\n    *)\n      if $GREP \"$re_begincf\" \"$progpath\" >/dev/null 2>&1; then\n\ttaglist=\"$taglist $tagname\"\n\n\t# Evaluate the configuration.  Be careful to quote the path\n\t# and the sed script, to avoid splitting on whitespace, but\n\t# also don't use non-portable quotes within backquotes within\n\t# quotes we have to do it in 2 steps:\n\textractedcf=`$SED -n -e \"$sed_extractcf\" < \"$progpath\"`\n\teval \"$extractedcf\"\n      else\n\tfunc_error \"ignoring unknown tag $tagname\"\n      fi\n      ;;\n  esac\n}\n\n# Parse options once, thoroughly.  This comes as soon as possible in\n# the script to make things like `libtool --version' happen quickly.\n{\n\n  # Shorthand for --mode=foo, only valid as the first argument\n  case $1 in\n  clean|clea|cle|cl)\n    shift; set dummy --mode clean ${1+\"$@\"}; shift\n    ;;\n  compile|compil|compi|comp|com|co|c)\n    shift; set dummy --mode compile ${1+\"$@\"}; shift\n    ;;\n  execute|execut|execu|exec|exe|ex|e)\n    shift; set dummy --mode execute ${1+\"$@\"}; shift\n    ;;\n  finish|finis|fini|fin|fi|f)\n    shift; set dummy --mode finish ${1+\"$@\"}; shift\n    ;;\n  install|instal|insta|inst|ins|in|i)\n    shift; set dummy --mode install ${1+\"$@\"}; shift\n    ;;\n  link|lin|li|l)\n    shift; set dummy --mode link ${1+\"$@\"}; shift\n    ;;\n  uninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)\n    shift; set dummy --mode uninstall ${1+\"$@\"}; shift\n    ;;\n  esac\n\n  # Parse non-mode specific arguments:\n  while test \"$#\" -gt 0; do\n    opt=\"$1\"\n    shift\n\n    case $opt in\n      --config)\t\tfunc_config\t\t\t\t\t;;\n\n      --debug)\t\tpreserve_args=\"$preserve_args $opt\"\n\t\t\tfunc_echo \"enabling shell trace mode\"\n\t\t\topt_debug='set -x'\n\t\t\t$opt_debug\n\t\t\t;;\n\n      -dlopen)\t\ttest \"$#\" -eq 0 && func_missing_arg \"$opt\" && break\n\t\t\texecute_dlfiles=\"$execute_dlfiles $1\"\n\t\t\tshift\n\t\t\t;;\n\n      --dry-run | -n)\topt_dry_run=:\t\t\t\t\t;;\n      --features)       func_features\t\t\t\t\t;;\n      --finish)\t\tmode=\"finish\"\t\t\t\t\t;;\n      --no-finish)\topt_finish=false\t\t\t\t;;\n\n      --mode)\t\ttest \"$#\" -eq 0 && func_missing_arg \"$opt\" && break\n\t\t\tcase $1 in\n\t\t\t  # Valid mode arguments:\n\t\t\t  clean)\t;;\n\t\t\t  compile)\t;;\n\t\t\t  execute)\t;;\n\t\t\t  finish)\t;;\n\t\t\t  install)\t;;\n\t\t\t  link)\t\t;;\n\t\t\t  relink)\t;;\n\t\t\t  uninstall)\t;;\n\n\t\t\t  # Catch anything else as an error\n\t\t\t  *) func_error \"invalid argument for $opt\"\n\t\t\t     exit_cmd=exit\n\t\t\t     break\n\t\t\t     ;;\n\t\t        esac\n\n\t\t\tmode=\"$1\"\n\t\t\tshift\n\t\t\t;;\n\n      --preserve-dup-deps)\n\t\t\topt_duplicate_deps=:\t\t\t\t;;\n\n      --quiet|--silent)\tpreserve_args=\"$preserve_args $opt\"\n\t\t\topt_silent=:\n\t\t\topt_verbose=false\n\t\t\t;;\n\n      --no-quiet|--no-silent)\n\t\t\tpreserve_args=\"$preserve_args $opt\"\n\t\t\topt_silent=false\n\t\t\t;;\n\n      --verbose| -v)\tpreserve_args=\"$preserve_args $opt\"\n\t\t\topt_silent=false\n\t\t\topt_verbose=:\n\t\t\t;;\n\n      --no-verbose)\tpreserve_args=\"$preserve_args $opt\"\n\t\t\topt_verbose=false\n\t\t\t;;\n\n      --tag)\t\ttest \"$#\" -eq 0 && func_missing_arg \"$opt\" && break\n\t\t\tpreserve_args=\"$preserve_args $opt $1\"\n\t\t\tfunc_enable_tag \"$1\"\t# tagname is set here\n\t\t\tshift\n\t\t\t;;\n\n      # Separate optargs to long options:\n      -dlopen=*|--mode=*|--tag=*)\n\t\t\tfunc_opt_split \"$opt\"\n\t\t\tset dummy \"$func_opt_split_opt\" \"$func_opt_split_arg\" ${1+\"$@\"}\n\t\t\tshift\n\t\t\t;;\n\n      -\\?|-h)\t\tfunc_usage\t\t\t\t\t;;\n      --help)\t\topt_help=:\t\t\t\t\t;;\n      --help-all)\topt_help=': help-all'\t\t\t\t;;\n      --version)\tfunc_version\t\t\t\t\t;;\n\n      -*)\t\tfunc_fatal_help \"unrecognized option \\`$opt'\"\t;;\n\n      *)\t\tnonopt=\"$opt\"\n\t\t\tbreak\n\t\t\t;;\n    esac\n  done\n\n\n  case $host in\n    *cygwin* | *mingw* | *pw32* | *cegcc*)\n      # don't eliminate duplications in $postdeps and $predeps\n      opt_duplicate_compiler_generated_deps=:\n      ;;\n    *)\n      opt_duplicate_compiler_generated_deps=$opt_duplicate_deps\n      ;;\n  esac\n\n  # Having warned about all mis-specified options, bail out if\n  # anything was wrong.\n  $exit_cmd $EXIT_FAILURE\n}\n\n# func_check_version_match\n# Ensure that we are using m4 macros, and libtool script from the same\n# release of libtool.\nfunc_check_version_match ()\n{\n  if test \"$package_revision\" != \"$macro_revision\"; then\n    if test \"$VERSION\" != \"$macro_version\"; then\n      if test -z \"$macro_version\"; then\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from an older release.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n      else\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from $PACKAGE $macro_version.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n      fi\n    else\n      cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,\n$progname: but the definition of this LT_INIT comes from revision $macro_revision.\n$progname: You should recreate aclocal.m4 with macros from revision $package_revision\n$progname: of $PACKAGE $VERSION and run autoconf again.\n_LT_EOF\n    fi\n\n    exit $EXIT_MISMATCH\n  fi\n}\n\n\n## ----------- ##\n##    Main.    ##\n## ----------- ##\n\n$opt_help || {\n  # Sanity checks first:\n  func_check_version_match\n\n  if test \"$build_libtool_libs\" != yes && test \"$build_old_libs\" != yes; then\n    func_fatal_configuration \"not configured to build any kind of library\"\n  fi\n\n  test -z \"$mode\" && func_fatal_error \"error: you must specify a MODE.\"\n\n\n  # Darwin sucks\n  eval \"std_shrext=\\\"$shrext_cmds\\\"\"\n\n\n  # Only execute mode is allowed to have -dlopen flags.\n  if test -n \"$execute_dlfiles\" && test \"$mode\" != execute; then\n    func_error \"unrecognized option \\`-dlopen'\"\n    $ECHO \"$help\" 1>&2\n    exit $EXIT_FAILURE\n  fi\n\n  # Change the help message to a mode-specific one.\n  generic_help=\"$help\"\n  help=\"Try \\`$progname --help --mode=$mode' for more information.\"\n}\n\n\n# func_lalib_p file\n# True iff FILE is a libtool `.la' library or `.lo' object file.\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_lalib_p ()\n{\n    test -f \"$1\" &&\n      $SED -e 4q \"$1\" 2>/dev/null \\\n        | $GREP \"^# Generated by .*$PACKAGE\" > /dev/null 2>&1\n}\n\n# func_lalib_unsafe_p file\n# True iff FILE is a libtool `.la' library or `.lo' object file.\n# This function implements the same check as func_lalib_p without\n# resorting to external programs.  To this end, it redirects stdin and\n# closes it afterwards, without saving the original file descriptor.\n# As a safety measure, use it only where a negative result would be\n# fatal anyway.  Works if `file' does not exist.\nfunc_lalib_unsafe_p ()\n{\n    lalib_p=no\n    if test -f \"$1\" && test -r \"$1\" && exec 5<&0 <\"$1\"; then\n\tfor lalib_p_l in 1 2 3 4\n\tdo\n\t    read lalib_p_line\n\t    case \"$lalib_p_line\" in\n\t\t\\#\\ Generated\\ by\\ *$PACKAGE* ) lalib_p=yes; break;;\n\t    esac\n\tdone\n\texec 0<&5 5<&-\n    fi\n    test \"$lalib_p\" = yes\n}\n\n# func_ltwrapper_script_p file\n# True iff FILE is a libtool wrapper script\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_script_p ()\n{\n    func_lalib_p \"$1\"\n}\n\n# func_ltwrapper_executable_p file\n# True iff FILE is a libtool wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_executable_p ()\n{\n    func_ltwrapper_exec_suffix=\n    case $1 in\n    *.exe) ;;\n    *) func_ltwrapper_exec_suffix=.exe ;;\n    esac\n    $GREP \"$magic_exe\" \"$1$func_ltwrapper_exec_suffix\" >/dev/null 2>&1\n}\n\n# func_ltwrapper_scriptname file\n# Assumes file is an ltwrapper_executable\n# uses $file to determine the appropriate filename for a\n# temporary ltwrapper_script.\nfunc_ltwrapper_scriptname ()\n{\n    func_ltwrapper_scriptname_result=\"\"\n    if func_ltwrapper_executable_p \"$1\"; then\n\tfunc_dirname_and_basename \"$1\" \"\" \".\"\n\tfunc_stripname '' '.exe' \"$func_basename_result\"\n\tfunc_ltwrapper_scriptname_result=\"$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper\"\n    fi\n}\n\n# func_ltwrapper_p file\n# True iff FILE is a libtool wrapper script or wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_p ()\n{\n    func_ltwrapper_script_p \"$1\" || func_ltwrapper_executable_p \"$1\"\n}\n\n\n# func_execute_cmds commands fail_cmd\n# Execute tilde-delimited COMMANDS.\n# If FAIL_CMD is given, eval that upon failure.\n# FAIL_CMD may read-access the current command in variable CMD!\nfunc_execute_cmds ()\n{\n    $opt_debug\n    save_ifs=$IFS; IFS='~'\n    for cmd in $1; do\n      IFS=$save_ifs\n      eval \"cmd=\\\"$cmd\\\"\"\n      func_show_eval \"$cmd\" \"${2-:}\"\n    done\n    IFS=$save_ifs\n}\n\n\n# func_source file\n# Source FILE, adding directory component if necessary.\n# Note that it is not necessary on cygwin/mingw to append a dot to\n# FILE even if both FILE and FILE.exe exist: automatic-append-.exe\n# behavior happens only for exec(3), not for open(2)!  Also, sourcing\n# `FILE.' does not work on cygwin managed mounts.\nfunc_source ()\n{\n    $opt_debug\n    case $1 in\n    */* | *\\\\*)\t. \"$1\" ;;\n    *)\t\t. \"./$1\" ;;\n    esac\n}\n\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    $opt_debug\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n        func_quote_for_eval \"$arg\"\n\tCC_quoted=\"$CC_quoted $func_quote_for_eval_result\"\n      done\n      CC_expanded=`func_echo_all $CC`\n      CC_quoted_expanded=`func_echo_all $CC_quoted`\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n      \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if $GREP \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t      # Double-quote args containing other shell metacharacters.\n\t      func_quote_for_eval \"$arg\"\n\t      CC_quoted=\"$CC_quoted $func_quote_for_eval_result\"\n\t    done\n\t    CC_expanded=`func_echo_all $CC`\n\t    CC_quoted_expanded=`func_echo_all $CC_quoted`\n\t    case \"$@ \" in\n\t    \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n\t    \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  func_echo \"unable to infer tagged configuration\"\n\t  func_fatal_error \"specify a tag with \\`--tag'\"\n#\telse\n#\t  func_verbose \"using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n\n# func_write_libtool_object output_name pic_name nonpic_name\n# Create a libtool object file (analogous to a \".la\" file),\n# but don't create it if we're doing a dry run.\nfunc_write_libtool_object ()\n{\n    write_libobj=${1}\n    if test \"$build_libtool_libs\" = yes; then\n      write_lobj=\\'${2}\\'\n    else\n      write_lobj=none\n    fi\n\n    if test \"$build_old_libs\" = yes; then\n      write_oldobj=\\'${3}\\'\n    else\n      write_oldobj=none\n    fi\n\n    $opt_dry_run || {\n      cat >${write_libobj}T <<EOF\n# $write_libobj - a libtool object file\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object=$write_lobj\n\n# Name of the non-PIC object\nnon_pic_object=$write_oldobj\n\nEOF\n      $MV \"${write_libobj}T\" \"${write_libobj}\"\n    }\n}\n\n# func_mode_compile arg...\nfunc_mode_compile ()\n{\n    $opt_debug\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=\"$nonopt\"  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n    pie_flag=\n\n    for arg\n    do\n      case $arg_mode in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=\"$arg\"\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=\"$arg\"\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  test -n \"$libobj\" && \\\n\t    func_fatal_error \"you cannot specify \\`-o' more than once\"\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-pie | -fpie | -fPIE)\n          pie_flag=\"$pie_flag $arg\"\n\t  continue\n\t  ;;\n\n\t-shared | -static | -prefer-pic | -prefer-non-pic)\n\t  later=\"$later $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  func_stripname '-Wc,' '' \"$arg\"\n\t  args=$func_stripname_result\n\t  lastarg=\n\t  save_ifs=\"$IFS\"; IFS=','\n\t  for arg in $args; do\n\t    IFS=\"$save_ifs\"\n\t    func_quote_for_eval \"$arg\"\n\t    lastarg=\"$lastarg $func_quote_for_eval_result\"\n\t  done\n\t  IFS=\"$save_ifs\"\n\t  func_stripname ' ' '' \"$lastarg\"\n\t  lastarg=$func_stripname_result\n\n\t  # Add the arguments to base_compile.\n\t  base_compile=\"$base_compile $lastarg\"\n\t  continue\n\t  ;;\n\n\t*)\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=\"$srcfile\"\n\t  srcfile=\"$arg\"\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      func_quote_for_eval \"$lastarg\"\n      base_compile=\"$base_compile $func_quote_for_eval_result\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      func_fatal_error \"you must specify an argument for -Xcompile\"\n      ;;\n    target)\n      func_fatal_error \"you must specify a target with \\`-o'\"\n      ;;\n    *)\n      # Get the name of the library object.\n      test -z \"$libobj\" && {\n\tfunc_basename \"$srcfile\"\n\tlibobj=\"$func_basename_result\"\n      }\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    case $libobj in\n    *.[cCFSifmso] | \\\n    *.ada | *.adb | *.ads | *.asm | \\\n    *.c++ | *.cc | *.ii | *.class | *.cpp | *.cxx | \\\n    *.[fF][09]? | *.for | *.java | *.obj | *.sx | *.cu | *.cup)\n      func_xform \"$libobj\"\n      libobj=$func_xform_result\n      ;;\n    esac\n\n    case $libobj in\n    *.lo) func_lo2o \"$libobj\"; obj=$func_lo2o_result ;;\n    *)\n      func_fatal_error \"cannot determine name of library object from \\`$libobj'\"\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -shared)\n\ttest \"$build_libtool_libs\" != yes && \\\n\t  func_fatal_configuration \"can not build a shared library\"\n\tbuild_old_libs=no\n\tcontinue\n\t;;\n\n      -static)\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    func_quote_for_eval \"$libobj\"\n    test \"X$libobj\" != \"X$func_quote_for_eval_result\" \\\n      && $ECHO \"X$libobj\" | $GREP '[]~#^*{};<>?\"'\"'\"'\t &()|`$[]' \\\n      && func_warning \"libobj name \\`$libobj' may not contain shell special characters.\"\n    func_dirname_and_basename \"$obj\" \"/\" \"\"\n    objname=\"$func_basename_result\"\n    xdir=\"$func_dirname_result\"\n    lobj=${xdir}$objdir/$objname\n\n    test -z \"$base_compile\" && \\\n      func_fatal_help \"you must specify a compilation command\"\n\n    # Delete any leftover library objects.\n    if test \"$build_old_libs\" = yes; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2* | cegcc*)\n      pic_mode=default\n      ;;\n    esac\n    if test \"$pic_mode\" = no && test \"$deplibs_check_method\" != pass_all; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test \"$compiler_c_o\" = no; then\n      output_obj=`$ECHO \"$srcfile\" | $SED 's%^.*/%%; s%\\.[^.]*$%%'`.${objext}\n      lockfile=\"$output_obj.lock\"\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test \"$need_locks\" = yes; then\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test \"$need_locks\" = warn; then\n      if test -f \"$lockfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n      removelist=\"$removelist $output_obj\"\n      $ECHO \"$srcfile\" > \"$lockfile\"\n    fi\n\n    $opt_dry_run || $RM $removelist\n    removelist=\"$removelist $lockfile\"\n    trap '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE' 1 2 15\n\n    if test -n \"$fix_srcfile_path\"; then\n      eval \"srcfile=\\\"$fix_srcfile_path\\\"\"\n    fi\n    func_quote_for_eval \"$srcfile\"\n    qsrcfile=$func_quote_for_eval_result\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test \"$build_libtool_libs\" = yes; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test \"$pic_mode\" != no; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      func_mkdir_p \"$xdir$objdir\"\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tcommand=\"$command -o $lobj\"\n      fi\n\n      func_show_eval_locale \"$command\"\t\\\n          'test -n \"$output_obj\" && $RM $removelist; exit $EXIT_FAILURE'\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$lobj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n\n      # Allow error messages only from the first compilation.\n      if test \"$suppress_opt\" = yes; then\n\tsuppress_output=' >/dev/null 2>&1'\n      fi\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test \"$build_old_libs\" = yes; then\n      if test \"$pic_mode\" != yes; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile$pie_flag\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test \"$compiler_c_o\" = yes; then\n\tcommand=\"$command -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      command=\"$command$suppress_output\"\n      func_show_eval_locale \"$command\" \\\n        '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$obj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n    fi\n\n    $opt_dry_run || {\n      func_write_libtool_object \"$libobj\" \"$objdir/$objname\" \"$objname\"\n\n      # Unlock the critical section if it was locked\n      if test \"$need_locks\" != no; then\n\tremovelist=$lockfile\n        $RM \"$lockfile\"\n      fi\n    }\n\n    exit $EXIT_SUCCESS\n}\n\n$opt_help || {\n  test \"$mode\" = compile && func_mode_compile ${1+\"$@\"}\n}\n\nfunc_mode_help ()\n{\n    # We need to display help for each of the modes.\n    case $mode in\n      \"\")\n        # Generic help is extracted from the usage comments\n        # at the start of this file.\n        func_help\n        ;;\n\n      clean)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      compile)\n      $ECHO \\\n\"Usage: $progname [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -no-suppress      do not suppress compiler output for multiple passes\n  -prefer-pic       try to building PIC objects only\n  -prefer-non-pic   try to building non-PIC objects only\n  -shared           do not build a \\`.o' file suitable for static linking\n  -static           only build a \\`.o' file suitable for static linking\n  -Wc,FLAG          pass FLAG directly to the compiler\n\nCOMPILE-COMMAND is a command to be used in creating a \\`standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix \\`.c' with the\nlibrary object suffix, \\`.lo'.\"\n        ;;\n\n      execute)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to \\`-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n        ;;\n\n      finish)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe \\`--dry-run' option if you just want to see what would be executed.\"\n        ;;\n\n      install)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the \\`install' or \\`cp' program.\n\nThe following components of INSTALL-COMMAND are treated specially:\n\n  -inst-prefix-dir PREFIX-DIR  Use PREFIX-DIR as a staging area for installation\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n        ;;\n\n      link)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -bindir BINDIR    specify path to binaries directory (for systems where\n                    libraries must be found in the PATH setting at runtime)\n  -dlopen FILE      \\`-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n                    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n                    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  Use a list of object files found in FILE to specify objects\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -shared           only do dynamic linking of libtool libraries\n  -shrext SUFFIX    override the standard shared library file extension\n  -static           do not do any dynamic linking of uninstalled libtool libraries\n  -static-libtool-libs\n                    do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n                    specify library version info [each variable defaults to 0]\n  -weak LIBNAME     declare that the target provides the LIBNAME interface\n  -Wc,FLAG\n  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler\n  -Wl,FLAG\n  -Xlinker FLAG     pass linker-specific FLAG directly to the linker\n  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)\n\nAll other options (arguments beginning with \\`-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in \\`.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in \\`.la', then a libtool library is created,\nonly library objects (\\`.lo' files) may be specified, and \\`-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in \\`.a' or \\`.lib', then a standard library is created\nusing \\`ar' and \\`ranlib', or on Windows using \\`lib'.\n\nIf OUTPUT-FILE ends in \\`.lo' or \\`.${objext}', then a reloadable object file\nis created, otherwise an executable program is created.\"\n        ;;\n\n      uninstall)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      *)\n        func_fatal_help \"invalid operation mode \\`$mode'\"\n        ;;\n    esac\n\n    echo\n    $ECHO \"Try \\`$progname --help' for more information about other modes.\"\n}\n\n# Now that we've collected a possible --mode arg, show help if necessary\nif $opt_help; then\n  if test \"$opt_help\" = :; then\n    func_mode_help\n  else\n    {\n      func_help noexit\n      for mode in compile link execute install finish uninstall clean; do\n\tfunc_mode_help\n      done\n    } | sed -n '1p; 2,$s/^Usage:/  or: /p'\n    {\n      func_help noexit\n      for mode in compile link execute install finish uninstall clean; do\n\techo\n\tfunc_mode_help\n      done\n    } |\n    sed '1d\n      /^When reporting/,/^Report/{\n\tH\n\td\n      }\n      $x\n      /information about other modes/d\n      /more detailed .*MODE/d\n      s/^Usage:.*--mode=\\([^ ]*\\) .*/Description of \\1 mode:/'\n  fi\n  exit $?\nfi\n\n\n# func_mode_execute arg...\nfunc_mode_execute ()\n{\n    $opt_debug\n    # The first argument is the command name.\n    cmd=\"$nonopt\"\n    test -z \"$cmd\" && \\\n      func_fatal_help \"you must specify a COMMAND\"\n\n    # Handle -dlopen flags immediately.\n    for file in $execute_dlfiles; do\n      test -f \"$file\" \\\n\t|| func_fatal_help \"\\`$file' is not a file\"\n\n      dir=\n      case $file in\n      *.la)\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"\\`$lib' is not a valid libtool archive\"\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\tfunc_source \"$file\"\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && \\\n\t    func_warning \"\\`$file' was not linked with \\`-export-dynamic'\"\n\t  continue\n\tfi\n\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=\"$func_dirname_result\"\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  dir=\"$dir/$objdir\"\n\telse\n\t  if test ! -f \"$dir/$dlname\"; then\n\t    func_fatal_error \"cannot find \\`$dlname' in \\`$dir' or \\`$dir/$objdir'\"\n\t  fi\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=\"$func_dirname_result\"\n\t;;\n\n      *)\n\tfunc_warning \"\\`-dlopen' is ignored for non-libtool libraries and objects\"\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=\"$absdir\"\n\n      # Now add the directory to shlibpath_var.\n      if eval test -z \\\"\\$$shlibpath_var\\\"; then\n\teval $shlibpath_var=\\$dir\n      else\n\teval $shlibpath_var=\\$dir:\\$$shlibpath_var\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=\"$magic\"\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -* | *.la | *.lo ) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif func_ltwrapper_script_p \"$file\"; then\n\t  func_source \"$file\"\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\telif func_ltwrapper_executable_p \"$file\"; then\n\t  func_ltwrapper_scriptname \"$file\"\n\t  func_source \"$func_ltwrapper_scriptname_result\"\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      func_quote_for_eval \"$file\"\n      args=\"$args $func_quote_for_eval_result\"\n    done\n\n    if test \"X$opt_dry_run\" = Xfalse; then\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\n      do\n\teval \"if test \\\"\\${save_$lt_var+set}\\\" = set; then\n                $lt_var=\\$save_$lt_var; export $lt_var\n\t      else\n\t\t$lt_unset $lt_var\n\t      fi\"\n      done\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\"\\$cmd$args\"\n    else\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$ECHO \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\techo \"export $shlibpath_var\"\n      fi\n      $ECHO \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest \"$mode\" = execute && func_mode_execute ${1+\"$@\"}\n\n\n# func_mode_finish arg...\nfunc_mode_finish ()\n{\n    $opt_debug\n    libdirs=\"$nonopt\"\n    admincmds=\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for dir\n      do\n\tlibdirs=\"$libdirs $dir\"\n      done\n\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  func_execute_cmds \"$finish_cmds\" 'admincmds=\"$admincmds\n'\"$cmd\"'\"'\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $opt_dry_run || eval \"$cmds\" || admincmds=\"$admincmds\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    $opt_silent && exit $EXIT_SUCCESS\n\n    echo \"----------------------------------------------------------------------\"\n    echo \"Libraries have been installed in:\"\n    for libdir in $libdirs; do\n      $ECHO \"   $libdir\"\n    done\n    echo\n    echo \"If you ever happen to want to link against installed libraries\"\n    echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n    echo \"specify the full pathname of the library, or use the \\`-LLIBDIR'\"\n    echo \"flag during linking and do at least one of the following:\"\n    if test -n \"$shlibpath_var\"; then\n      echo \"   - add LIBDIR to the \\`$shlibpath_var' environment variable\"\n      echo \"     during execution\"\n    fi\n    if test -n \"$runpath_var\"; then\n      echo \"   - add LIBDIR to the \\`$runpath_var' environment variable\"\n      echo \"     during linking\"\n    fi\n    if test -n \"$hardcode_libdir_flag_spec\"; then\n      libdir=LIBDIR\n      eval \"flag=\\\"$hardcode_libdir_flag_spec\\\"\"\n\n      $ECHO \"   - use the \\`$flag' linker flag\"\n    fi\n    if test -n \"$admincmds\"; then\n      $ECHO \"   - have your system administrator run these commands:$admincmds\"\n    fi\n    if test -f /etc/ld.so.conf; then\n      echo \"   - have your system administrator add LIBDIR to \\`/etc/ld.so.conf'\"\n    fi\n    echo\n\n    echo \"See any operating system documentation about shared libraries for\"\n    case $host in\n      solaris2.[6789]|solaris2.1[0-9])\n        echo \"more information, such as the ld(1), crle(1) and ld.so(8) manual\"\n\techo \"pages.\"\n\t;;\n      *)\n        echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n        ;;\n    esac\n    echo \"----------------------------------------------------------------------\"\n    exit $EXIT_SUCCESS\n}\n\ntest \"$mode\" = finish && func_mode_finish ${1+\"$@\"}\n\n\n# func_mode_install arg...\nfunc_mode_install ()\n{\n    $opt_debug\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$nonopt\" = \"$SHELL\" || test \"$nonopt\" = /bin/sh ||\n       # Allow the use of GNU shtool's install command.\n       case $nonopt in *shtool*) :;; *) false;; esac; then\n      # Aesthetically quote it.\n      func_quote_for_eval \"$nonopt\"\n      install_prog=\"$func_quote_for_eval_result \"\n      arg=$1\n      shift\n    else\n      install_prog=\n      arg=$nonopt\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    func_quote_for_eval \"$arg\"\n    install_prog=\"$install_prog$func_quote_for_eval_result\"\n    install_shared_prog=$install_prog\n    case \" $install_prog \" in\n      *[\\\\\\ /]cp\\ *) install_cp=: ;;\n      *) install_cp=false ;;\n    esac\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=no\n    stripme=\n    no_mode=:\n    for arg\n    do\n      arg2=\n      if test -n \"$dest\"; then\n\tfiles=\"$files $dest\"\n\tdest=$arg\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=yes ;;\n      -f)\n\tif $install_cp; then :; else\n\t  prev=$arg\n\tfi\n\t;;\n      -g | -m | -o)\n\tprev=$arg\n\t;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*)\n\t;;\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  if test \"x$prev\" = x-m && test -n \"$install_override_mode\"; then\n\t    arg2=$install_override_mode\n\t    no_mode=false\n\t  fi\n\t  prev=\n\telse\n\t  dest=$arg\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      func_quote_for_eval \"$arg\"\n      install_prog=\"$install_prog $func_quote_for_eval_result\"\n      if test -n \"$arg2\"; then\n\tfunc_quote_for_eval \"$arg2\"\n      fi\n      install_shared_prog=\"$install_shared_prog $func_quote_for_eval_result\"\n    done\n\n    test -z \"$install_prog\" && \\\n      func_fatal_help \"you must specify an install program\"\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the \\`$prev' option requires an argument\"\n\n    if test -n \"$install_override_mode\" && $no_mode; then\n      if $install_cp; then :; else\n\tfunc_quote_for_eval \"$install_override_mode\"\n\tinstall_shared_prog=\"$install_shared_prog -m $func_quote_for_eval_result\"\n      fi\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\tfunc_fatal_help \"no file or destination specified\"\n      else\n\tfunc_fatal_help \"you must specify a destination\"\n      fi\n    fi\n\n    # Strip any trailing slash from the destination.\n    func_stripname '' '/' \"$dest\"\n    dest=$func_stripname_result\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=yes\n    if test \"$isdir\" = yes; then\n      destdir=\"$dest\"\n      destname=\n    else\n      func_dirname_and_basename \"$dest\" \"\" \".\"\n      destdir=\"$func_dirname_result\"\n      destname=\"$func_basename_result\"\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files; shift\n      test \"$#\" -gt 1 && \\\n\tfunc_fatal_help \"\\`$dest' is not a directory\"\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  func_fatal_help \"\\`$destdir' must be an absolute directory name\"\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tstaticlibs=\"$staticlibs $file\"\n\t;;\n\n      *.la)\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"\\`$file' is not a valid libtool archive\"\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\tfunc_source \"$file\"\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) current_libdirs=\"$current_libdirs $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) future_libdirs=\"$future_libdirs $libdir\" ;;\n\t  esac\n\tfi\n\n\tfunc_dirname \"$file\" \"/\" \"\"\n\tdir=\"$func_dirname_result\"\n\tdir=\"$dir$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$ECHO \"$destdir\" | $SED -e \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  test \"$inst_prefix_dir\" = \"$destdir\" && \\\n\t    func_fatal_error \"error: cannot install \\`$file' to a directory not ending in $libdir\"\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  func_warning \"relinking \\`$file'\"\n\t  func_show_eval \"$relink_command\" \\\n\t    'func_fatal_error \"error: relink \\`$file'\\'' with the above command before installing it\"'\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names; shift\n\tif test -n \"$1\"; then\n\t  realname=\"$1\"\n\t  shift\n\n\t  srcname=\"$realname\"\n\t  test -n \"$relink_command\" && srcname=\"$realname\"T\n\n\t  # Install the shared library and build the symlinks.\n\t  func_show_eval \"$install_shared_prog $dir/$srcname $destdir/$realname\" \\\n\t      'exit $?'\n\t  tstripme=\"$stripme\"\n\t  case $host_os in\n\t  cygwin* | mingw* | pw32* | cegcc*)\n\t    case $realname in\n\t    *.dll.a)\n\t      tstripme=\"\"\n\t      ;;\n\t    esac\n\t    ;;\n\t  esac\n\t  if test -n \"$tstripme\" && test -n \"$striplib\"; then\n\t    func_show_eval \"$striplib $destdir/$realname\" 'exit $?'\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    # Try `ln -sf' first, because the `ln' binary might depend on\n\t    # the symlink we replace!  Solaris /bin/ln does not understand -f,\n\t    # so we also need to try rm && ln -s.\n\t    for linkname\n\t    do\n\t      test \"$linkname\" != \"$realname\" \\\n\t\t&& func_show_eval \"(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })\"\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=\"$destdir/$realname\"\n\t  func_execute_cmds \"$postinstall_cmds\" 'exit $?'\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tfunc_basename \"$file\"\n\tname=\"$func_basename_result\"\n\tinstname=\"$dir/$name\"i\n\tfunc_show_eval \"$install_prog $instname $destdir/$name\" 'exit $?'\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && staticlibs=\"$staticlibs $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  func_basename \"$file\"\n\t  destfile=\"$func_basename_result\"\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  func_lo2o \"$destfile\"\n\t  staticdest=$func_lo2o_result\n\t  ;;\n\t*.$objext)\n\t  staticdest=\"$destfile\"\n\t  destfile=\n\t  ;;\n\t*)\n\t  func_fatal_help \"cannot copy a libtool object to \\`$destfile'\"\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\ttest -n \"$destfile\" && \\\n\t  func_show_eval \"$install_prog $file $destfile\" 'exit $?'\n\n\t# Install the old object if enabled.\n\tif test \"$build_old_libs\" = yes; then\n\t  # Deduce the name of the old-style object file.\n\t  func_lo2o \"$file\"\n\t  staticobj=$func_lo2o_result\n\t  func_show_eval \"$install_prog \\$staticobj \\$staticdest\" 'exit $?'\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  func_basename \"$file\"\n\t  destfile=\"$func_basename_result\"\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\"\"\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      func_stripname '' '.exe' \"$file\"\n\t      file=$func_stripname_result\n\t      stripped_ext=\".exe\"\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin* | *mingw*)\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      wrapper=$func_ltwrapper_scriptname_result\n\t    else\n\t      func_stripname '' '.exe' \"$file\"\n\t      wrapper=$func_stripname_result\n\t    fi\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif func_ltwrapper_script_p \"$wrapper\"; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  func_source \"$wrapper\"\n\n\t  # Check the variables that should have been set.\n\t  test -z \"$generated_by_libtool_version\" && \\\n\t    func_fatal_error \"invalid libtool wrapper script \\`$wrapper'\"\n\n\t  finalize=yes\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      func_source \"$lib\"\n\t    fi\n\t    libfile=\"$libdir/\"`$ECHO \"$lib\" | $SED 's%^.*/%%g'` ### testsuite: skip nested quoting test\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      func_warning \"\\`$lib' has not been installed in \\`$libdir'\"\n\t      finalize=no\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  func_source \"$wrapper\"\n\n\t  outputname=\n\t  if test \"$fast_install\" = no && test -n \"$relink_command\"; then\n\t    $opt_dry_run || {\n\t      if test \"$finalize\" = yes; then\n\t        tmpdir=`func_mktempdir`\n\t\tfunc_basename \"$file$stripped_ext\"\n\t\tfile=\"$func_basename_result\"\n\t        outputname=\"$tmpdir/$file\"\n\t        # Replace the output file specification.\n\t        relink_command=`$ECHO \"$relink_command\" | $SED 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t        $opt_silent || {\n\t          func_quote_for_expand \"$relink_command\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t        }\n\t        if eval \"$relink_command\"; then :\n\t          else\n\t\t  func_error \"error: relink \\`$file' with the above command before installing it\"\n\t\t  $opt_dry_run || ${RM}r \"$tmpdir\"\n\t\t  continue\n\t        fi\n\t        file=\"$outputname\"\n\t      else\n\t        func_warning \"cannot relink \\`$file'\"\n\t      fi\n\t    }\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$ECHO \"$file$stripped_ext\" | $SED \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyway\n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    func_stripname '' '.exe' \"$destfile\"\n\t    destfile=$func_stripname_result\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tfunc_show_eval \"$install_prog\\$stripme \\$file \\$destfile\" 'exit $?'\n\t$opt_dry_run || if test -n \"$outputname\"; then\n\t  ${RM}r \"$tmpdir\"\n\tfi\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      func_basename \"$file\"\n      name=\"$func_basename_result\"\n\n      # Set up the ranlib parameters.\n      oldlib=\"$destdir/$name\"\n\n      func_show_eval \"$install_prog \\$file \\$oldlib\" 'exit $?'\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\tfunc_show_eval \"$old_striplib $oldlib\" 'exit $?'\n      fi\n\n      # Do each command in the postinstall commands.\n      func_execute_cmds \"$old_postinstall_cmds\" 'exit $?'\n    done\n\n    test -n \"$future_libdirs\" && \\\n      func_warning \"remember to run \\`$progname --finish$future_libdirs'\"\n\n    if test -n \"$current_libdirs\" && $opt_finish; then\n      # Maybe just do a dry run.\n      $opt_dry_run && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL $progpath $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest \"$mode\" = install && func_mode_install ${1+\"$@\"}\n\n\n# func_generate_dlsyms outputname originator pic_p\n# Extract symbols from dlprefiles and create ${outputname}S.o with\n# a dlpreopen symbol table.\nfunc_generate_dlsyms ()\n{\n    $opt_debug\n    my_outputname=\"$1\"\n    my_originator=\"$2\"\n    my_pic_p=\"${3-no}\"\n    my_prefix=`$ECHO \"$my_originator\" | sed 's%[^a-zA-Z0-9]%_%g'`\n    my_dlsyms=\n\n    if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n      if test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\tmy_dlsyms=\"${my_outputname}S.c\"\n      else\n\tfunc_error \"not configured to extract global symbols from dlpreopened files\"\n      fi\n    fi\n\n    if test -n \"$my_dlsyms\"; then\n      case $my_dlsyms in\n      \"\") ;;\n      *.c)\n\t# Discover the nlist of each of the dlfiles.\n\tnlist=\"$output_objdir/${my_outputname}.nm\"\n\n\tfunc_show_eval \"$RM $nlist ${nlist}S ${nlist}T\"\n\n\t# Parse the name list into a source file.\n\tfunc_verbose \"creating $output_objdir/$my_dlsyms\"\n\n\t$opt_dry_run || $ECHO > \"$output_objdir/$my_dlsyms\" \"\\\n/* $my_dlsyms - symbol resolution table for \\`$my_outputname' dlsym emulation. */\n/* Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n#if defined(__GNUC__) && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))\n#pragma GCC diagnostic ignored \\\"-Wstrict-prototypes\\\"\n#endif\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\tif test \"$dlself\" = yes; then\n\t  func_verbose \"generating symbol list for \\`$output'\"\n\n\t  $opt_dry_run || echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t  # Add our own program objects to the symbol list.\n\t  progfiles=`$ECHO \"$objs$old_deplibs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\t  for progfile in $progfiles; do\n\t    func_verbose \"extracting global C symbols from \\`$progfile'\"\n\t    $opt_dry_run || eval \"$NM $progfile | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $opt_dry_run || {\n\t      $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t      $MV \"$nlist\"T \"$nlist\"\n\t    }\n\t  fi\n\n\t  if test -n \"$export_symbols_regex\"; then\n\t    $opt_dry_run || {\n\t      $EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T\n\t      $MV \"$nlist\"T \"$nlist\"\n\t    }\n\t  fi\n\n\t  # Prepare the list of exported symbols\n\t  if test -z \"$export_symbols\"; then\n\t    export_symbols=\"$output_objdir/$outputname.exp\"\n\t    $opt_dry_run || {\n\t      $RM $export_symbols\n\t      ${SED} -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \\(.*\\)$/\\1/p' < \"$nlist\" > \"$export_symbols\"\n\t      case $host in\n\t      *cygwin* | *mingw* | *cegcc* )\n                echo EXPORTS > \"$output_objdir/$outputname.def\"\n                cat \"$export_symbols\" >> \"$output_objdir/$outputname.def\"\n\t        ;;\n\t      esac\n\t    }\n\t  else\n\t    $opt_dry_run || {\n\t      ${SED} -e 's/\\([].[*^$]\\)/\\\\\\1/g' -e 's/^/ /' -e 's/$/$/' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"\n\t      $GREP -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T\n\t      $MV \"$nlist\"T \"$nlist\"\n\t      case $host in\n\t        *cygwin* | *mingw* | *cegcc* )\n\t          echo EXPORTS > \"$output_objdir/$outputname.def\"\n\t          cat \"$nlist\" >> \"$output_objdir/$outputname.def\"\n\t          ;;\n\t      esac\n\t    }\n\t  fi\n\tfi\n\n\tfor dlprefile in $dlprefiles; do\n\t  func_verbose \"extracting global C symbols from \\`$dlprefile'\"\n\t  func_basename \"$dlprefile\"\n\t  name=\"$func_basename_result\"\n\t  $opt_dry_run || {\n\t    $ECHO \": $name \" >> \"$nlist\"\n\t    eval \"$NM $dlprefile 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t  }\n\tdone\n\n\t$opt_dry_run || {\n\t  # Make sure we have at least an empty file.\n\t  test -f \"$nlist\" || : > \"$nlist\"\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t    $MV \"$nlist\"T \"$nlist\"\n\t  fi\n\n\t  # Try sorting and uniquifying the output.\n\t  if $GREP -v \"^: \" < \"$nlist\" |\n\t      if sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\tsort -k 3\n\t      else\n\t\tsort +2\n\t      fi |\n\t      uniq > \"$nlist\"S; then\n\t    :\n\t  else\n\t    $GREP -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t  fi\n\n\t  if test -f \"$nlist\"S; then\n\t    eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$my_dlsyms\"'\n\t  else\n\t    echo '/* NONE */' >> \"$output_objdir/$my_dlsyms\"\n\t  fi\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n\n/* The mapping between symbol names and symbols.  */\ntypedef struct {\n  const char *name;\n  void *address;\n} lt_dlsymlist;\n\"\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc* )\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n/* DATA imports from DLLs on WIN32 con't be const, because\n   runtime relocations are performed -- see ld's documentation\n   on pseudo-relocs.  */\"\n\t    lt_dlsym_const= ;;\n\t  *osf5*)\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n/* This system does not cope well with relocations in const data */\"\n\t    lt_dlsym_const= ;;\n\t  *)\n\t    lt_dlsym_const=const ;;\n\t  esac\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\nextern $lt_dlsym_const lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[];\n$lt_dlsym_const lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[] =\n{\\\n  { \\\"$my_originator\\\", (void *) 0 },\"\n\n\t  case $need_lib_prefix in\n\t  no)\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  *)\n\t    eval \"$global_symbol_to_c_name_address_lib_prefix\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  esac\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_${my_prefix}_LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t} # !$opt_dry_run\n\n\tpic_flag_for_symtable=\n\tcase \"$compile_command \" in\n\t*\" -static \"*) ;;\n\t*)\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\" ;;\n\t  *-*-hpux*)\n\t    pic_flag_for_symtable=\" $pic_flag\"  ;;\n\t  *)\n\t    if test \"X$my_pic_p\" != Xno; then\n\t      pic_flag_for_symtable=\" $pic_flag\"\n\t    fi\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tsymtab_cflags=\n\tfor arg in $LTCFLAGS; do\n\t  case $arg in\n\t  -pie | -fpie | -fPIE) ;;\n\t  *) symtab_cflags=\"$symtab_cflags $arg\" ;;\n\t  esac\n\tdone\n\n\t# Now compile the dynamic symbol file.\n\tfunc_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable \"$my_dlsyms\")' 'exit $?'\n\n\t# Clean up the generated files.\n\tfunc_show_eval '$RM \"$output_objdir/$my_dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\"'\n\n\t# Transform the symbol file into the correct name.\n\tsymfileobj=\"$output_objdir/${my_outputname}S.$objext\"\n\tcase $host in\n\t*cygwin* | *mingw* | *cegcc* )\n\t  if test -f \"$output_objdir/$my_outputname.def\"; then\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t  else\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  fi\n\t  ;;\n\t*)\n\t  compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  ;;\n\tesac\n\t;;\n      *)\n\tfunc_fatal_error \"unknown suffix for \\`$my_dlsyms'\"\n\t;;\n      esac\n    else\n      # We keep going just in case the user didn't refer to\n      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n      # really was required.\n\n      # Nullify the symbol file.\n      compile_command=`$ECHO \"$compile_command\" | $SED \"s% @SYMFILE@%%\"`\n      finalize_command=`$ECHO \"$finalize_command\" | $SED \"s% @SYMFILE@%%\"`\n    fi\n}\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\n# Despite the name, also deal with 64 bit binaries.\nfunc_win32_libid ()\n{\n  $opt_debug\n  win32_libid_type=\"unknown\"\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    if $OBJDUMP -f \"$1\" | $SED -e '10q' 2>/dev/null |\n       $EGREP 'file format (pe-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)' >/dev/null; then\n      win32_nmres=`$NM -f posix -A \"$1\" |\n\t$SED -n -e '\n\t    1,100{\n\t\t/ I /{\n\t\t    s,.*,import,\n\t\t    p\n\t\t    q\n\t\t}\n\t    }'`\n      case $win32_nmres in\n      import*)  win32_libid_type=\"x86 archive import\";;\n      *)        win32_libid_type=\"x86 archive static\";;\n      esac\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $ECHO \"$win32_libid_type\"\n}\n\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    $opt_debug\n    f_ex_an_ar_dir=\"$1\"; shift\n    f_ex_an_ar_oldlib=\"$1\"\n    if test \"$lock_old_archive_extraction\" = yes; then\n      lockfile=$f_ex_an_ar_oldlib.lock\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    fi\n    func_show_eval \"(cd \\$f_ex_an_ar_dir && $AR x \\\"\\$f_ex_an_ar_oldlib\\\")\" \\\n\t\t   'stat=$?; rm -f \"$lockfile\"; exit $stat'\n    if test \"$lock_old_archive_extraction\" = yes; then\n      $opt_dry_run || rm -f \"$lockfile\"\n    fi\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      func_fatal_error \"object name conflicts in archive: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\"\n    fi\n}\n\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    $opt_debug\n    my_gentop=\"$1\"; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\"\"\n    my_xlib=\"\"\n    my_xabs=\"\"\n    my_xdir=\"\"\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=\"$my_xlib\" ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      func_basename \"$my_xlib\"\n      my_xlib=\"$func_basename_result\"\n      my_xlib_u=$my_xlib\n      while :; do\n        case \" $extracted_archives \" in\n\t*\" $my_xlib_u \"*)\n\t  func_arith $extracted_serial + 1\n\t  extracted_serial=$func_arith_result\n\t  my_xlib_u=lt$extracted_serial-$my_xlib ;;\n\t*) break ;;\n\tesac\n      done\n      extracted_archives=\"$extracted_archives $my_xlib_u\"\n      my_xdir=\"$my_gentop/$my_xlib_u\"\n\n      func_mkdir_p \"$my_xdir\"\n\n      case $host in\n      *-darwin*)\n\tfunc_verbose \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\t$opt_dry_run || {\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  darwin_base_archive=`basename \"$darwin_archive\"`\n\t  darwin_arches=`$LIPO -info \"$darwin_archive\" 2>/dev/null | $GREP Architectures 2>/dev/null || true`\n\t  if test -n \"$darwin_arches\"; then\n\t    darwin_arches=`$ECHO \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    func_verbose \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches ; do\n\t      func_mkdir_p \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      $LIPO -thin $darwin_arch -output \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\" \"${darwin_archive}\"\n\t      cd \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      func_extract_an_archive \"`pwd`\" \"${darwin_base_archive}\"\n\t      cd \"$darwin_curdir\"\n\t      $RM \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\"\n\t    done # $darwin_arches\n            ## Okay now we've a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print | $SED -e \"$basename\" | sort -u`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | $NL2SP`\n\t      $LIPO -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    $RM -rf unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd $darwin_orig_dir\n\t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\t} # !$opt_dry_run\n\t;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | $NL2SP`\n    done\n\n    func_extract_archives_result=\"$my_oldobjs\"\n}\n\n\n# func_emit_wrapper [arg=no]\n#\n# Emit a libtool wrapper script on stdout.\n# Don't directly open a file because we may want to\n# incorporate the script contents within a cygwin/mingw\n# wrapper executable.  Must ONLY be called from within\n# func_mode_link because it depends on a number of variables\n# set therein.\n#\n# ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\n# variable will take.  If 'yes', then the emitted script\n# will assume that the directory in which it is stored is\n# the $objdir directory.  This is a cygwin/mingw-specific\n# behavior.\nfunc_emit_wrapper ()\n{\n\tfunc_emit_wrapper_arg1=${1-no}\n\n\t$ECHO \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='$sed_quote_subst'\n\n# Be Bourne compatible\nif test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variables:\n  generated_by_libtool_version='$macro_version'\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$ECHO are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    file=\\\"\\$0\\\"\"\n\n    qECHO=`$ECHO \"$ECHO\" | $SED \"$sed_quote_subst\"`\n    $ECHO \"\\\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$1\n_LTECHO_EOF'\n}\n    ECHO=\\\"$qECHO\\\"\n  fi\\\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  done\n\n  # Usually 'no', except on cygwin/mingw when embedded into\n  # the cwrapper.\n  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=$func_emit_wrapper_arg1\n  if test \\\"\\$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\\\" = \\\"yes\\\"; then\n    # special case for '.'\n    if test \\\"\\$thisdir\\\" = \\\".\\\"; then\n      thisdir=\\`pwd\\`\n    fi\n    # remove .libs from thisdir\n    case \\\"\\$thisdir\\\" in\n    *[\\\\\\\\/]$objdir ) thisdir=\\`\\$ECHO \\\"\\$thisdir\\\" | $SED 's%[\\\\\\\\/][^\\\\\\\\/]*$%%'\\` ;;\n    $objdir )   thisdir=. ;;\n    esac\n  fi\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test \"$fast_install\" = yes; then\n\t  $ECHO \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" ||\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | ${SED} 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $MKDIR \\\"\\$progdir\\\"\n    else\n      $RM \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $ECHO \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\\"\\$relink_command\\\" 2>&1\\`; then :\n      else\n\t$ECHO \\\"\\$relink_command_output\\\" >&2\n\t$RM \\\"\\$progdir/\\$file\\\"\n\texit 1\n      fi\n    fi\n\n    $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $RM \\\"\\$progdir/\\$program\\\";\n      $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $RM \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $ECHO \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$ECHO \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# Export our shlibpath_var if we have one.\n\tif test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $ECHO \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" | $SED 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t# fixup the dll searchpath if we need to.\n\tif test -n \"$dllsearchpath\"; then\n\t  $ECHO \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t$ECHO \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n\"\n\tcase $host in\n\t# Backslashes separate directories on plain windows\n\t*-*-mingw | *-*-os2* | *-cegcc*)\n\t  $ECHO \"\\\n      exec \\\"\\$progdir\\\\\\\\\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\n\t*)\n\t  $ECHO \"\\\n      exec \\\"\\$progdir/\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\tesac\n\t$ECHO \"\\\n      \\$ECHO \\\"\\$0: cannot exec \\$program \\$*\\\" 1>&2\n      exit 1\n    fi\n  else\n    # The program doesn't exist.\n    \\$ECHO \\\"\\$0: error: \\\\\\`\\$progdir/\\$program' does not exist\\\" 1>&2\n    \\$ECHO \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    \\$ECHO \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit 1\n  fi\nfi\\\n\"\n}\n\n\n# func_to_host_path arg\n#\n# Convert paths to host format when used with build tools.\n# Intended for use with \"native\" mingw (where libtool itself\n# is running under the msys shell), or in the following cross-\n# build environments:\n#    $build          $host\n#    mingw (msys)    mingw  [e.g. native]\n#    cygwin          mingw\n#    *nix + wine     mingw\n# where wine is equipped with the `winepath' executable.\n# In the native mingw case, the (msys) shell automatically\n# converts paths for any non-msys applications it launches,\n# but that facility isn't available from inside the cwrapper.\n# Similar accommodations are necessary for $host mingw and\n# $build cygwin.  Calling this function does no harm for other\n# $host/$build combinations not listed above.\n#\n# ARG is the path (on $build) that should be converted to\n# the proper representation for $host. The result is stored\n# in $func_to_host_path_result.\nfunc_to_host_path ()\n{\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    case $host in\n      *mingw* )\n        lt_sed_naive_backslashify='s|\\\\\\\\*|\\\\|g;s|/|\\\\|g;s|\\\\|\\\\\\\\|g'\n        case $build in\n          *mingw* ) # actually, msys\n            # awkward: cmd appends spaces to result\n            func_to_host_path_result=`( cmd //c echo \"$1\" ) 2>/dev/null |\n              $SED -e 's/[ ]*$//' -e \"$lt_sed_naive_backslashify\"`\n            ;;\n          *cygwin* )\n            func_to_host_path_result=`cygpath -w \"$1\" |\n\t      $SED -e \"$lt_sed_naive_backslashify\"`\n            ;;\n          * )\n            # Unfortunately, winepath does not exit with a non-zero\n            # error code, so we are forced to check the contents of\n            # stdout. On the other hand, if the command is not\n            # found, the shell will set an exit code of 127 and print\n            # *an error message* to stdout. So we must check for both\n            # error code of zero AND non-empty stdout, which explains\n            # the odd construction:\n            func_to_host_path_tmp1=`winepath -w \"$1\" 2>/dev/null`\n            if test \"$?\" -eq 0 && test -n \"${func_to_host_path_tmp1}\"; then\n              func_to_host_path_result=`$ECHO \"$func_to_host_path_tmp1\" |\n                $SED -e \"$lt_sed_naive_backslashify\"`\n            else\n              # Allow warning below.\n              func_to_host_path_result=\n            fi\n            ;;\n        esac\n        if test -z \"$func_to_host_path_result\" ; then\n          func_error \"Could not determine host path corresponding to\"\n          func_error \"  \\`$1'\"\n          func_error \"Continuing, but uninstalled executables may not work.\"\n          # Fallback:\n          func_to_host_path_result=\"$1\"\n        fi\n        ;;\n    esac\n  fi\n}\n# end: func_to_host_path\n\n# func_to_host_pathlist arg\n#\n# Convert pathlists to host format when used with build tools.\n# See func_to_host_path(), above. This function supports the\n# following $build/$host combinations (but does no harm for\n# combinations not listed here):\n#    $build          $host\n#    mingw (msys)    mingw  [e.g. native]\n#    cygwin          mingw\n#    *nix + wine     mingw\n#\n# Path separators are also converted from $build format to\n# $host format. If ARG begins or ends with a path separator\n# character, it is preserved (but converted to $host format)\n# on output.\n#\n# ARG is a pathlist (on $build) that should be converted to\n# the proper representation on $host. The result is stored\n# in $func_to_host_pathlist_result.\nfunc_to_host_pathlist ()\n{\n  func_to_host_pathlist_result=\"$1\"\n  if test -n \"$1\"; then\n    case $host in\n      *mingw* )\n        lt_sed_naive_backslashify='s|\\\\\\\\*|\\\\|g;s|/|\\\\|g;s|\\\\|\\\\\\\\|g'\n        # Remove leading and trailing path separator characters from\n        # ARG. msys behavior is inconsistent here, cygpath turns them\n        # into '.;' and ';.', and winepath ignores them completely.\n\tfunc_stripname : : \"$1\"\n        func_to_host_pathlist_tmp1=$func_stripname_result\n        case $build in\n          *mingw* ) # Actually, msys.\n            # Awkward: cmd appends spaces to result.\n            func_to_host_pathlist_result=`\n\t      ( cmd //c echo \"$func_to_host_pathlist_tmp1\" ) 2>/dev/null |\n\t      $SED -e 's/[ ]*$//' -e \"$lt_sed_naive_backslashify\"`\n            ;;\n          *cygwin* )\n            func_to_host_pathlist_result=`cygpath -w -p \"$func_to_host_pathlist_tmp1\" |\n              $SED -e \"$lt_sed_naive_backslashify\"`\n            ;;\n          * )\n            # unfortunately, winepath doesn't convert pathlists\n            func_to_host_pathlist_result=\"\"\n            func_to_host_pathlist_oldIFS=$IFS\n            IFS=:\n            for func_to_host_pathlist_f in $func_to_host_pathlist_tmp1 ; do\n              IFS=$func_to_host_pathlist_oldIFS\n              if test -n \"$func_to_host_pathlist_f\" ; then\n                func_to_host_path \"$func_to_host_pathlist_f\"\n                if test -n \"$func_to_host_path_result\" ; then\n                  if test -z \"$func_to_host_pathlist_result\" ; then\n                    func_to_host_pathlist_result=\"$func_to_host_path_result\"\n                  else\n                    func_append func_to_host_pathlist_result \";$func_to_host_path_result\"\n                  fi\n                fi\n              fi\n            done\n            IFS=$func_to_host_pathlist_oldIFS\n            ;;\n        esac\n        if test -z \"$func_to_host_pathlist_result\"; then\n          func_error \"Could not determine the host path(s) corresponding to\"\n          func_error \"  \\`$1'\"\n          func_error \"Continuing, but uninstalled executables may not work.\"\n          # Fallback. This may break if $1 contains DOS-style drive\n          # specifications. The fix is not to complicate the expression\n          # below, but for the user to provide a working wine installation\n          # with winepath so that path translation in the cross-to-mingw\n          # case works properly.\n          lt_replace_pathsep_nix_to_dos=\"s|:|;|g\"\n          func_to_host_pathlist_result=`echo \"$func_to_host_pathlist_tmp1\" |\\\n            $SED -e \"$lt_replace_pathsep_nix_to_dos\"`\n        fi\n        # Now, add the leading and trailing path separators back\n        case \"$1\" in\n          :* ) func_to_host_pathlist_result=\";$func_to_host_pathlist_result\"\n            ;;\n        esac\n        case \"$1\" in\n          *: ) func_append func_to_host_pathlist_result \";\"\n            ;;\n        esac\n        ;;\n    esac\n  fi\n}\n# end: func_to_host_pathlist\n\n# func_emit_cwrapperexe_src\n# emit the source code for a wrapper executable on stdout\n# Must ONLY be called from within func_mode_link because\n# it depends on a number of variable set therein.\nfunc_emit_cwrapperexe_src ()\n{\n\tcat <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n\n   Currently, it simply execs the wrapper *script* \"$SHELL $output\",\n   but could eventually absorb all of the scripts functionality and\n   exec $objdir/$outputname directly.\n*/\nEOF\n\t    cat <<\"EOF\"\n#ifdef _MSC_VER\n# define _CRT_SECURE_NO_DEPRECATE 1\n#endif\n#include <stdio.h>\n#include <stdlib.h>\n#ifdef _MSC_VER\n# include <direct.h>\n# include <process.h>\n# include <io.h>\n#else\n# include <unistd.h>\n# include <stdint.h>\n# ifdef __CYGWIN__\n#  include <io.h>\n# endif\n#endif\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n#include <string.h>\n#include <ctype.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <sys/stat.h>\n\n/* declarations of non-ANSI functions */\n#if defined(__MINGW32__)\n# ifdef __STRICT_ANSI__\nint _putenv (const char *);\n# endif\n#elif defined(__CYGWIN__)\n# ifdef __STRICT_ANSI__\nchar *realpath (const char *, char *);\nint putenv (char *);\nint setenv (const char *, const char *, int);\n# endif\n/* #elif defined (other platforms) ... */\n#endif\n\n/* portability defines, excluding path handling macros */\n#if defined(_MSC_VER)\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n# define S_IXUSR _S_IEXEC\n# ifndef _INTPTR_T_DEFINED\n#  define _INTPTR_T_DEFINED\n#  define intptr_t int\n# endif\n#elif defined(__MINGW32__)\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n#elif defined(__CYGWIN__)\n# define HAVE_SETENV\n# define FOPEN_WB \"wb\"\n/* #elif defined (other platforms) ... */\n#endif\n\n#if defined(PATH_MAX)\n# define LT_PATHMAX PATH_MAX\n#elif defined(MAXPATHLEN)\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef S_IXOTH\n# define S_IXOTH 0\n#endif\n#ifndef S_IXGRP\n# define S_IXGRP 0\n#endif\n\n/* path handling portability macros */\n#ifndef DIR_SEPARATOR\n# define DIR_SEPARATOR '/'\n# define PATH_SEPARATOR ':'\n#endif\n\n#if defined (_WIN32) || defined (__MSDOS__) || defined (__DJGPP__) || \\\n  defined (__OS2__)\n# define HAVE_DOS_BASED_FILE_SYSTEM\n# define FOPEN_WB \"wb\"\n# ifndef DIR_SEPARATOR_2\n#  define DIR_SEPARATOR_2 '\\\\'\n# endif\n# ifndef PATH_SEPARATOR_2\n#  define PATH_SEPARATOR_2 ';'\n# endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n\t(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#ifndef PATH_SEPARATOR_2\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)\n#else /* PATH_SEPARATOR_2 */\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)\n#endif /* PATH_SEPARATOR_2 */\n\n#ifndef FOPEN_WB\n# define FOPEN_WB \"w\"\n#endif\n#ifndef _O_BINARY\n# define _O_BINARY 0\n#endif\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free ((void *) stale); stale = 0; } \\\n} while (0)\n\n#undef LTWRAPPER_DEBUGPRINTF\n#if defined LT_DEBUGWRAPPER\n# define LTWRAPPER_DEBUGPRINTF(args) ltwrapper_debugprintf args\nstatic void\nltwrapper_debugprintf (const char *fmt, ...)\n{\n    va_list args;\n    va_start (args, fmt);\n    (void) vfprintf (stderr, fmt, args);\n    va_end (args);\n}\n#else\n# define LTWRAPPER_DEBUGPRINTF(args)\n#endif\n\nconst char *program_name = NULL;\n\nvoid *xmalloc (size_t num);\nchar *xstrdup (const char *string);\nconst char *base_name (const char *name);\nchar *find_executable (const char *wrapper);\nchar *chase_symlinks (const char *pathspec);\nint make_executable (const char *path);\nint check_executable (const char *path);\nchar *strendzap (char *str, const char *pat);\nvoid lt_fatal (const char *message, ...);\nvoid lt_setenv (const char *name, const char *value);\nchar *lt_extend_str (const char *orig_value, const char *add, int to_end);\nvoid lt_update_exe_path (const char *name, const char *value);\nvoid lt_update_lib_path (const char *name, const char *value);\nchar **prepare_spawn (char **argv);\nvoid lt_dump_script (FILE *f);\nEOF\n\n\t    cat <<EOF\nconst char * MAGIC_EXE = \"$magic_exe\";\nconst char * LIB_PATH_VARNAME = \"$shlibpath_var\";\nEOF\n\n\t    if test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n              func_to_host_pathlist \"$temp_rpath\"\n\t      cat <<EOF\nconst char * LIB_PATH_VALUE   = \"$func_to_host_pathlist_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * LIB_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test -n \"$dllsearchpath\"; then\n              func_to_host_pathlist \"$dllsearchpath:\"\n\t      cat <<EOF\nconst char * EXE_PATH_VARNAME = \"PATH\";\nconst char * EXE_PATH_VALUE   = \"$func_to_host_pathlist_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * EXE_PATH_VARNAME = \"\";\nconst char * EXE_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test \"$fast_install\" = yes; then\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"lt-$outputname\"; /* hopefully, no .exe */\nEOF\n\t    else\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"$outputname\"; /* hopefully, no .exe */\nEOF\n\t    fi\n\n\n\t    cat <<\"EOF\"\n\n#define LTWRAPPER_OPTION_PREFIX         \"--lt-\"\n#define LTWRAPPER_OPTION_PREFIX_LENGTH  5\n\nstatic const size_t opt_prefix_len         = LTWRAPPER_OPTION_PREFIX_LENGTH;\nstatic const char *ltwrapper_option_prefix = LTWRAPPER_OPTION_PREFIX;\n\nstatic const char *dumpscript_opt       = LTWRAPPER_OPTION_PREFIX \"dump-script\";\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int  newargc;\n  char *tmp_pathspec;\n  char *actual_cwrapper_path;\n  char *actual_cwrapper_name;\n  char *target_name;\n  char *lt_argv_zero;\n  intptr_t rval = 127;\n\n  int i;\n\n  program_name = (char *) xstrdup (base_name (argv[0]));\n  LTWRAPPER_DEBUGPRINTF ((\"(main) argv[0]      : %s\\n\", argv[0]));\n  LTWRAPPER_DEBUGPRINTF ((\"(main) program_name : %s\\n\", program_name));\n\n  /* very simple arg parsing; don't want to rely on getopt */\n  for (i = 1; i < argc; i++)\n    {\n      if (strcmp (argv[i], dumpscript_opt) == 0)\n\t{\nEOF\n\t    case \"$host\" in\n\t      *mingw* | *cygwin* )\n\t\t# make stdout use \"unix\" line endings\n\t\techo \"          setmode(1,_O_BINARY);\"\n\t\t;;\n\t      esac\n\n\t    cat <<\"EOF\"\n\t  lt_dump_script (stdout);\n\t  return 0;\n\t}\n    }\n\n  newargz = XMALLOC (char *, argc + 1);\n  tmp_pathspec = find_executable (argv[0]);\n  if (tmp_pathspec == NULL)\n    lt_fatal (\"Couldn't find %s\", argv[0]);\n  LTWRAPPER_DEBUGPRINTF ((\"(main) found exe (before symlink chase) at : %s\\n\",\n\t\t\t  tmp_pathspec));\n\n  actual_cwrapper_path = chase_symlinks (tmp_pathspec);\n  LTWRAPPER_DEBUGPRINTF ((\"(main) found exe (after symlink chase) at : %s\\n\",\n\t\t\t  actual_cwrapper_path));\n  XFREE (tmp_pathspec);\n\n  actual_cwrapper_name = xstrdup( base_name (actual_cwrapper_path));\n  strendzap (actual_cwrapper_path, actual_cwrapper_name);\n\n  /* wrapper name transforms */\n  strendzap (actual_cwrapper_name, \".exe\");\n  tmp_pathspec = lt_extend_str (actual_cwrapper_name, \".exe\", 1);\n  XFREE (actual_cwrapper_name);\n  actual_cwrapper_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  /* target_name transforms -- use actual target program name; might have lt- prefix */\n  target_name = xstrdup (base_name (TARGET_PROGRAM_NAME));\n  strendzap (target_name, \".exe\");\n  tmp_pathspec = lt_extend_str (target_name, \".exe\", 1);\n  XFREE (target_name);\n  target_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  LTWRAPPER_DEBUGPRINTF ((\"(main) libtool target name: %s\\n\",\n\t\t\t  target_name));\nEOF\n\n\t    cat <<EOF\n  newargz[0] =\n    XMALLOC (char, (strlen (actual_cwrapper_path) +\n\t\t    strlen (\"$objdir\") + 1 + strlen (actual_cwrapper_name) + 1));\n  strcpy (newargz[0], actual_cwrapper_path);\n  strcat (newargz[0], \"$objdir\");\n  strcat (newargz[0], \"/\");\nEOF\n\n\t    cat <<\"EOF\"\n  /* stop here, and copy so we don't have to do this twice */\n  tmp_pathspec = xstrdup (newargz[0]);\n\n  /* do NOT want the lt- prefix here, so use actual_cwrapper_name */\n  strcat (newargz[0], actual_cwrapper_name);\n\n  /* DO want the lt- prefix here if it exists, so use target_name */\n  lt_argv_zero = lt_extend_str (tmp_pathspec, target_name, 1);\n  XFREE (tmp_pathspec);\n  tmp_pathspec = NULL;\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t    cat <<\"EOF\"\n  {\n    char* p;\n    while ((p = strchr (newargz[0], '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n    while ((p = strchr (lt_argv_zero, '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n  }\nEOF\n\t    ;;\n\t    esac\n\n\t    cat <<\"EOF\"\n  XFREE (target_name);\n  XFREE (actual_cwrapper_path);\n  XFREE (actual_cwrapper_name);\n\n  lt_setenv (\"BIN_SH\", \"xpg4\"); /* for Tru64 */\n  lt_setenv (\"DUALCASE\", \"1\");  /* for MSK sh */\n  lt_update_lib_path (LIB_PATH_VARNAME, LIB_PATH_VALUE);\n  lt_update_exe_path (EXE_PATH_VARNAME, EXE_PATH_VALUE);\n\n  newargc=0;\n  for (i = 1; i < argc; i++)\n    {\n      if (strncmp (argv[i], ltwrapper_option_prefix, opt_prefix_len) == 0)\n        {\n          /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX\n             namespace, but it is not one of the ones we know about and\n             have already dealt with, above (inluding dump-script), then\n             report an error. Otherwise, targets might begin to believe\n             they are allowed to use options in the LTWRAPPER_OPTION_PREFIX\n             namespace. The first time any user complains about this, we'll\n             need to make LTWRAPPER_OPTION_PREFIX a configure-time option\n             or a configure.ac-settable value.\n           */\n          lt_fatal (\"Unrecognized option in %s namespace: '%s'\",\n                    ltwrapper_option_prefix, argv[i]);\n        }\n      /* otherwise ... */\n      newargz[++newargc] = xstrdup (argv[i]);\n    }\n  newargz[++newargc] = NULL;\n\n  LTWRAPPER_DEBUGPRINTF     ((\"(main) lt_argv_zero : %s\\n\", (lt_argv_zero ? lt_argv_zero : \"<NULL>\")));\n  for (i = 0; i < newargc; i++)\n    {\n      LTWRAPPER_DEBUGPRINTF ((\"(main) newargz[%d]   : %s\\n\", i, (newargz[i] ? newargz[i] : \"<NULL>\")));\n    }\n\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n  /* execv doesn't actually work on mingw as expected on unix */\n  newargz = prepare_spawn (newargz);\n  rval = _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);\n  if (rval == -1)\n    {\n      /* failed to start process */\n      LTWRAPPER_DEBUGPRINTF ((\"(main) failed to launch target \\\"%s\\\": errno = %d\\n\", lt_argv_zero, errno));\n      return 127;\n    }\n  return rval;\nEOF\n\t\t;;\n\t      *)\n\t\tcat <<\"EOF\"\n  execv (lt_argv_zero, newargz);\n  return rval; /* =127, but avoids unused variable warning */\nEOF\n\t\t;;\n\t    esac\n\n\t    cat <<\"EOF\"\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void *p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (\"Memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1),\n\t\t\t  string) : NULL;\n}\n\nconst char *\nbase_name (const char *name)\n{\n  const char *base;\n\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha ((unsigned char) name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return base;\n}\n\nint\ncheck_executable (const char *path)\n{\n  struct stat st;\n\n  LTWRAPPER_DEBUGPRINTF ((\"(check_executable)  : %s\\n\",\n\t\t\t  path ? (*path ? path : \"EMPTY!\") : \"NULL!\"));\n  if ((!path) || (!*path))\n    return 0;\n\n  if ((stat (path, &st) >= 0)\n      && (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)))\n    return 1;\n  else\n    return 0;\n}\n\nint\nmake_executable (const char *path)\n{\n  int rval = 0;\n  struct stat st;\n\n  LTWRAPPER_DEBUGPRINTF ((\"(make_executable)   : %s\\n\",\n\t\t\t  path ? (*path ? path : \"EMPTY!\") : \"NULL!\"));\n  if ((!path) || (!*path))\n    return 0;\n\n  if (stat (path, &st) >= 0)\n    {\n      rval = chmod (path, st.st_mode | S_IXOTH | S_IXGRP | S_IXUSR);\n    }\n  return rval;\n}\n\n/* Searches for the full path of the wrapper.  Returns\n   newly allocated full path name if found, NULL otherwise\n   Does not chase symlinks, even on platforms that support them.\n*/\nchar *\nfind_executable (const char *wrapper)\n{\n  int has_slash = 0;\n  const char *p;\n  const char *p_next;\n  /* static buffer for getcwd */\n  char tmp[LT_PATHMAX + 1];\n  int tmp_len;\n  char *concat_name;\n\n  LTWRAPPER_DEBUGPRINTF ((\"(find_executable)   : %s\\n\",\n\t\t\t  wrapper ? (*wrapper ? wrapper : \"EMPTY!\") : \"NULL!\"));\n\n  if ((wrapper == NULL) || (*wrapper == '\\0'))\n    return NULL;\n\n  /* Absolute path? */\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')\n    {\n      concat_name = xstrdup (wrapper);\n      if (check_executable (concat_name))\n\treturn concat_name;\n      XFREE (concat_name);\n    }\n  else\n    {\n#endif\n      if (IS_DIR_SEPARATOR (wrapper[0]))\n\t{\n\t  concat_name = xstrdup (wrapper);\n\t  if (check_executable (concat_name))\n\t    return concat_name;\n\t  XFREE (concat_name);\n\t}\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n    }\n#endif\n\n  for (p = wrapper; *p; p++)\n    if (*p == '/')\n      {\n\thas_slash = 1;\n\tbreak;\n      }\n  if (!has_slash)\n    {\n      /* no slashes; search PATH */\n      const char *path = getenv (\"PATH\");\n      if (path != NULL)\n\t{\n\t  for (p = path; *p; p = p_next)\n\t    {\n\t      const char *q;\n\t      size_t p_len;\n\t      for (q = p; *q; q++)\n\t\tif (IS_PATH_SEPARATOR (*q))\n\t\t  break;\n\t      p_len = q - p;\n\t      p_next = (*q == '\\0' ? q : q + 1);\n\t      if (p_len == 0)\n\t\t{\n\t\t  /* empty path: current directory */\n\t\t  if (getcwd (tmp, LT_PATHMAX) == NULL)\n\t\t    lt_fatal (\"getcwd failed\");\n\t\t  tmp_len = strlen (tmp);\n\t\t  concat_name =\n\t\t    XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, tmp, tmp_len);\n\t\t  concat_name[tmp_len] = '/';\n\t\t  strcpy (concat_name + tmp_len + 1, wrapper);\n\t\t}\n\t      else\n\t\t{\n\t\t  concat_name =\n\t\t    XMALLOC (char, p_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, p, p_len);\n\t\t  concat_name[p_len] = '/';\n\t\t  strcpy (concat_name + p_len + 1, wrapper);\n\t\t}\n\t      if (check_executable (concat_name))\n\t\treturn concat_name;\n\t      XFREE (concat_name);\n\t    }\n\t}\n      /* not found in PATH; assume curdir */\n    }\n  /* Relative path | not found in path: prepend cwd */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (\"getcwd failed\");\n  tmp_len = strlen (tmp);\n  concat_name = XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n  memcpy (concat_name, tmp, tmp_len);\n  concat_name[tmp_len] = '/';\n  strcpy (concat_name + tmp_len + 1, wrapper);\n\n  if (check_executable (concat_name))\n    return concat_name;\n  XFREE (concat_name);\n  return NULL;\n}\n\nchar *\nchase_symlinks (const char *pathspec)\n{\n#ifndef S_ISLNK\n  return xstrdup (pathspec);\n#else\n  char buf[LT_PATHMAX];\n  struct stat s;\n  char *tmp_pathspec = xstrdup (pathspec);\n  char *p;\n  int has_symlinks = 0;\n  while (strlen (tmp_pathspec) && !has_symlinks)\n    {\n      LTWRAPPER_DEBUGPRINTF ((\"checking path component for symlinks: %s\\n\",\n\t\t\t      tmp_pathspec));\n      if (lstat (tmp_pathspec, &s) == 0)\n\t{\n\t  if (S_ISLNK (s.st_mode) != 0)\n\t    {\n\t      has_symlinks = 1;\n\t      break;\n\t    }\n\n\t  /* search backwards for last DIR_SEPARATOR */\n\t  p = tmp_pathspec + strlen (tmp_pathspec) - 1;\n\t  while ((p > tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    p--;\n\t  if ((p == tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    {\n\t      /* no more DIR_SEPARATORS left */\n\t      break;\n\t    }\n\t  *p = '\\0';\n\t}\n      else\n\t{\n\t  char *errstr = strerror (errno);\n\t  lt_fatal (\"Error accessing file %s (%s)\", tmp_pathspec, errstr);\n\t}\n    }\n  XFREE (tmp_pathspec);\n\n  if (!has_symlinks)\n    {\n      return xstrdup (pathspec);\n    }\n\n  tmp_pathspec = realpath (pathspec, buf);\n  if (tmp_pathspec == 0)\n    {\n      lt_fatal (\"Could not follow symlinks for %s\", pathspec);\n    }\n  return xstrdup (tmp_pathspec);\n#endif\n}\n\nchar *\nstrendzap (char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert (str != NULL);\n  assert (pat != NULL);\n\n  len = strlen (str);\n  patlen = strlen (pat);\n\n  if (patlen <= len)\n    {\n      str += len - patlen;\n      if (strcmp (str, pat) == 0)\n\t*str = '\\0';\n    }\n  return str;\n}\n\nstatic void\nlt_error_core (int exit_status, const char *mode,\n\t       const char *message, va_list ap)\n{\n  fprintf (stderr, \"%s: %s: \", program_name, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, \"FATAL\", message, ap);\n  va_end (ap);\n}\n\nvoid\nlt_setenv (const char *name, const char *value)\n{\n  LTWRAPPER_DEBUGPRINTF ((\"(lt_setenv) setting '%s' to '%s'\\n\",\n                          (name ? name : \"<NULL>\"),\n                          (value ? value : \"<NULL>\")));\n  {\n#ifdef HAVE_SETENV\n    /* always make a copy, for consistency with !HAVE_SETENV */\n    char *str = xstrdup (value);\n    setenv (name, str, 1);\n#else\n    int len = strlen (name) + 1 + strlen (value) + 1;\n    char *str = XMALLOC (char, len);\n    sprintf (str, \"%s=%s\", name, value);\n    if (putenv (str) != EXIT_SUCCESS)\n      {\n        XFREE (str);\n      }\n#endif\n  }\n}\n\nchar *\nlt_extend_str (const char *orig_value, const char *add, int to_end)\n{\n  char *new_value;\n  if (orig_value && *orig_value)\n    {\n      int orig_value_len = strlen (orig_value);\n      int add_len = strlen (add);\n      new_value = XMALLOC (char, add_len + orig_value_len + 1);\n      if (to_end)\n        {\n          strcpy (new_value, orig_value);\n          strcpy (new_value + orig_value_len, add);\n        }\n      else\n        {\n          strcpy (new_value, add);\n          strcpy (new_value + add_len, orig_value);\n        }\n    }\n  else\n    {\n      new_value = xstrdup (add);\n    }\n  return new_value;\n}\n\nvoid\nlt_update_exe_path (const char *name, const char *value)\n{\n  LTWRAPPER_DEBUGPRINTF ((\"(lt_update_exe_path) modifying '%s' by prepending '%s'\\n\",\n                          (name ? name : \"<NULL>\"),\n                          (value ? value : \"<NULL>\")));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      /* some systems can't cope with a ':'-terminated path #' */\n      int len = strlen (new_value);\n      while (((len = strlen (new_value)) > 0) && IS_PATH_SEPARATOR (new_value[len-1]))\n        {\n          new_value[len-1] = '\\0';\n        }\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nvoid\nlt_update_lib_path (const char *name, const char *value)\n{\n  LTWRAPPER_DEBUGPRINTF ((\"(lt_update_lib_path) modifying '%s' by prepending '%s'\\n\",\n                          (name ? name : \"<NULL>\"),\n                          (value ? value : \"<NULL>\")));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nEOF\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n\n/* Prepares an argument vector before calling spawn().\n   Note that spawn() does not by itself call the command interpreter\n     (getenv (\"COMSPEC\") != NULL ? getenv (\"COMSPEC\") :\n      ({ OSVERSIONINFO v; v.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n         GetVersionEx(&v);\n         v.dwPlatformId == VER_PLATFORM_WIN32_NT;\n      }) ? \"cmd.exe\" : \"command.com\").\n   Instead it simply concatenates the arguments, separated by ' ', and calls\n   CreateProcess().  We must quote the arguments since Win32 CreateProcess()\n   interprets characters like ' ', '\\t', '\\\\', '\"' (but not '<' and '>') in a\n   special way:\n   - Space and tab are interpreted as delimiters. They are not treated as\n     delimiters if they are surrounded by double quotes: \"...\".\n   - Unescaped double quotes are removed from the input. Their only effect is\n     that within double quotes, space and tab are treated like normal\n     characters.\n   - Backslashes not followed by double quotes are not special.\n   - But 2*n+1 backslashes followed by a double quote become\n     n backslashes followed by a double quote (n >= 0):\n       \\\" -> \"\n       \\\\\\\" -> \\\"\n       \\\\\\\\\\\" -> \\\\\"\n */\n#define SHELL_SPECIAL_CHARS \"\\\"\\\\ \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\n#define SHELL_SPACE_CHARS \" \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\nchar **\nprepare_spawn (char **argv)\n{\n  size_t argc;\n  char **new_argv;\n  size_t i;\n\n  /* Count number of arguments.  */\n  for (argc = 0; argv[argc] != NULL; argc++)\n    ;\n\n  /* Allocate new argument vector.  */\n  new_argv = XMALLOC (char *, argc + 1);\n\n  /* Put quoted arguments into the new argument vector.  */\n  for (i = 0; i < argc; i++)\n    {\n      const char *string = argv[i];\n\n      if (string[0] == '\\0')\n\tnew_argv[i] = xstrdup (\"\\\"\\\"\");\n      else if (strpbrk (string, SHELL_SPECIAL_CHARS) != NULL)\n\t{\n\t  int quote_around = (strpbrk (string, SHELL_SPACE_CHARS) != NULL);\n\t  size_t length;\n\t  unsigned int backslashes;\n\t  const char *s;\n\t  char *quoted_string;\n\t  char *p;\n\n\t  length = 0;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    length++;\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\tlength += backslashes + 1;\n\t      length++;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    length += backslashes + 1;\n\n\t  quoted_string = XMALLOC (char, length + 1);\n\n\t  p = quoted_string;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    *p++ = '\"';\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\t{\n\t\t  unsigned int j;\n\t\t  for (j = backslashes + 1; j > 0; j--)\n\t\t    *p++ = '\\\\';\n\t\t}\n\t      *p++ = c;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    {\n\t      unsigned int j;\n\t      for (j = backslashes; j > 0; j--)\n\t\t*p++ = '\\\\';\n\t      *p++ = '\"';\n\t    }\n\t  *p = '\\0';\n\n\t  new_argv[i] = quoted_string;\n\t}\n      else\n\tnew_argv[i] = (char *) string;\n    }\n  new_argv[argc] = NULL;\n\n  return new_argv;\n}\nEOF\n\t\t;;\n\t    esac\n\n            cat <<\"EOF\"\nvoid lt_dump_script (FILE* f)\n{\nEOF\n\t    func_emit_wrapper yes |\n              $SED -e 's/\\([\\\\\"]\\)/\\\\\\1/g' \\\n\t           -e 's/^/  fputs (\"/' -e 's/$/\\\\n\", f);/'\n\n            cat <<\"EOF\"\n}\nEOF\n}\n# end: func_emit_cwrapperexe_src\n\n# func_win32_import_lib_p ARG\n# True if ARG is an import lib, as indicated by $file_magic_cmd\nfunc_win32_import_lib_p ()\n{\n    $opt_debug\n    case `eval \"$file_magic_cmd \\\"\\$1\\\" 2>/dev/null\" | $SED -e 10q` in\n    *import*) : ;;\n    *) false ;;\n    esac\n}\n\n# func_mode_link arg...\nfunc_mode_link ()\n{\n    $opt_debug\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # which system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll which has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=$nonopt\n    base_compile=\"$nonopt $@\"\n    compile_command=$nonopt\n    finalize_command=$nonopt\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n    new_inherited_linker_flags=\n\n    avoid_version=no\n    bindir=\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    non_pic_objects=\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=no\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n    weak_libs=\n    single_module=\"${wl}-single_module\"\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -shared)\n\ttest \"$build_libtool_libs\" != yes && \\\n\t  func_fatal_configuration \"can not build a shared library\"\n\tbuild_old_libs=no\n\tbreak\n\t;;\n      -all-static | -static | -static-libtool-libs)\n\tcase $arg in\n\t-all-static)\n\t  if test \"$build_libtool_libs\" = yes && test -z \"$link_static_flag\"; then\n\t    func_warning \"complete static linking is impossible in this configuration\"\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\t-static)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=built\n\t  ;;\n\t-static-libtool-libs)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\tesac\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=\"$1\"\n      shift\n      func_quote_for_eval \"$arg\"\n      qarg=$func_quote_for_eval_unquoted_result\n      func_append libtool_args \" $func_quote_for_eval_result\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  func_append compile_command \" @OUTPUT@\"\n\t  func_append finalize_command \" @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tbindir)\n\t  bindir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tdlfiles|dlprefiles)\n\t  if test \"$preload\" = no; then\n\t    # Add the symbol object into the linking commands.\n\t    func_append compile_command \" @SYMFILE@\"\n\t    func_append finalize_command \" @SYMFILE@\"\n\t    preload=yes\n\t  fi\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test \"$dlself\" = no; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test \"$prev\" = dlprefiles; then\n\t      dlself=yes\n\t    elif test \"$prev\" = dlfiles && test \"$dlopen_self\" != yes; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test \"$prev\" = dlfiles; then\n\t      dlfiles=\"$dlfiles $arg\"\n\t    else\n\t      dlprefiles=\"$dlprefiles $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=\"$arg\"\n\t  test -f \"$arg\" \\\n\t    || func_fatal_error \"symbol file \\`$arg' does not exist\"\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tframework)\n\t  case $host in\n\t    *-*-darwin*)\n\t      case \"$deplibs \" in\n\t\t*\" $qarg.ltframework \"*) ;;\n\t\t*) deplibs=\"$deplibs $qarg.ltframework\" # this is fixed later\n\t\t   ;;\n\t      esac\n\t      ;;\n\t  esac\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat \"$save_arg\"`\n\t    do\n#\t      moreargs=\"$moreargs $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if func_lalib_unsafe_p \"$arg\"; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\tfunc_source \"$arg\"\n\n\t\tif test -z \"$pic_object\" ||\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test \"$pic_object\" = none &&\n\t\t   test \"$non_pic_object\" = none; then\n\t\t  func_fatal_error \"cannot find name of object for \\`$arg'\"\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\tfunc_dirname \"$arg\" \"/\" \"\"\n\t\txdir=\"$func_dirname_result\"\n\n\t\tif test \"$pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=\"$xdir$pic_object\"\n\n\t\t  if test \"$prev\" = dlfiles; then\n\t\t    if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\t      dlfiles=\"$dlfiles $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test \"$prev\" = dlprefiles; then\n\t\t    # Preload the old-style object.\n\t\t    dlprefiles=\"$dlprefiles $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  arg=\"$pic_object\"\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test \"$non_pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=\"$xdir$non_pic_object\"\n\n\t\t  # A standard non-PIC object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t\t    arg=\"$non_pic_object\"\n\t\t  fi\n\t\telse\n\t\t  # If the PIC object exists, use it instead.\n\t\t  # $xdir was prepended to $pic_object above.\n\t\t  non_pic_object=\"$pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif $opt_dry_run; then\n\t\t  # Extract subdirectory from the argument.\n\t\t  func_dirname \"$arg\" \"/\" \"\"\n\t\t  xdir=\"$func_dirname_result\"\n\n\t\t  func_lo2o \"$arg\"\n\t\t  pic_object=$xdir$objdir/$func_lo2o_result\n\t\t  non_pic_object=$xdir$func_lo2o_result\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t        else\n\t\t  func_fatal_error \"\\`$arg' is not a valid libtool object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    func_fatal_error \"link input file \\`$arg' does not exist\"\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=\"-$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    func_fatal_error \"only absolute run-paths are allowed\"\n\t    ;;\n\t  esac\n\t  if test \"$prev\" = rpath; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) rpath=\"$rpath $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) xrpath=\"$xrpath $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\tshrext)\n\t  shrext_cmds=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tweak)\n\t  weak_libs=\"$weak_libs $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\txcclinker)\n\t  linker_flags=\"$linker_flags $qarg\"\n\t  compiler_flags=\"$compiler_flags $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txcompiler)\n\t  compiler_flags=\"$compiler_flags $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  linker_flags=\"$linker_flags $qarg\"\n\t  compiler_flags=\"$compiler_flags $wl$qarg\"\n\t  prev=\n\t  func_append compile_command \" $wl$qarg\"\n\t  func_append finalize_command \" $wl$qarg\"\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=\"$arg\"\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  # See comment for -static flag below, for more details.\n\t  func_append compile_command \" $link_static_flag\"\n\t  func_append finalize_command \" $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\tfunc_fatal_error \"\\`-allow-undefined' must not be used because it is the default\"\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -bindir)\n\tprev=bindir\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  func_fatal_error \"more than one -exported-symbols argument is not allowed\"\n\tfi\n\tif test \"X$arg\" = \"X-export-symbols\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework)\n\tprev=framework\n\tcontinue\n\t;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tfunc_stripname '-L' '' \"$arg\"\n\tdir=$func_stripname_result\n\tif test -z \"$dir\"; then\n\t  if test \"$#\" -gt 0; then\n\t    func_fatal_error \"require no space between \\`-L' and \\`$1'\"\n\t  else\n\t    func_fatal_error \"need path for \\`-L' option\"\n\t  fi\n\tfi\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  test -z \"$absdir\" && \\\n\t    func_fatal_error \"cannot determine absolute directory name of \\`$dir'\"\n\t  dir=\"$absdir\"\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"*) ;;\n\t*)\n\t  deplibs=\"$deplibs -L$dir\"\n\t  lib_search_path=\"$lib_search_path $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$dir\" | $SED 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  ::) dllsearchpath=$dir;;\n\t  *) dllsearchpath=\"$dllsearchpath:$dir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) dllsearchpath=\"$dllsearchpath:$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test \"X$arg\" = \"X-lc\" || test \"X$arg\" = \"X-lm\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    deplibs=\"$deplibs System.ltframework\"\n\t    continue\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-linux*)\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  esac\n\telif test \"X$arg\" = \"X-lc_r\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tdeplibs=\"$deplibs $arg\"\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      # Darwin uses the -arch flag to determine output architecture.\n      -model|-arch|-isysroot)\n\tcompiler_flags=\"$compiler_flags $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe|-threads)\n\tcompiler_flags=\"$compiler_flags $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tcase \"$new_inherited_linker_flags \" in\n\t    *\" $arg \"*) ;;\n\t    * ) new_inherited_linker_flags=\"$new_inherited_linker_flags $arg\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -multi_module)\n\tsingle_module=\"${wl}-multi_module\"\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # and Darwin in order for the loader to find any dlls it needs.\n\t  func_warning \"\\`-no-install' is ignored for $host\"\n\t  func_warning \"assuming \\`-no-fast-install' instead\"\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tfunc_stripname '-R' '' \"$arg\"\n\tdir=$func_stripname_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  func_fatal_error \"only absolute run-paths are allowed\"\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) xrpath=\"$xrpath $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -shared)\n\t# The effects of -shared are defined in a previous loop.\n\tcontinue\n\t;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -static | -static-libtool-libs)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -weak)\n        prev=weak\n\tcontinue\n\t;;\n\n      -Wc,*)\n\tfunc_stripname '-Wc,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n          func_quote_for_eval \"$flag\"\n\t  arg=\"$arg $func_quote_for_eval_result\"\n\t  compiler_flags=\"$compiler_flags $func_quote_for_eval_result\"\n\tdone\n\tIFS=\"$save_ifs\"\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Wl,*)\n\tfunc_stripname '-Wl,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n          func_quote_for_eval \"$flag\"\n\t  arg=\"$arg $wl$func_quote_for_eval_result\"\n\t  compiler_flags=\"$compiler_flags $wl$func_quote_for_eval_result\"\n\t  linker_flags=\"$linker_flags $func_quote_for_eval_result\"\n\tdone\n\tIFS=\"$save_ifs\"\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # -msg_* for osf cc\n      -msg_*)\n\tfunc_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n\n      # -64, -mips[0-9] enable 64-bit mode on the SGI compiler\n      # -r[0-9][0-9]* specifies the processor on the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode on the Sun compiler\n      # +DA*, +DD* enable 64-bit mode on the HP compiler\n      # -q* pass through compiler args for the IBM compiler\n      # -m*, -t[45]*, -txscale* pass through architecture-specific\n      # compiler args for GCC\n      # -F/path gives path to uninstalled frameworks, gcc on darwin\n      # -p, -pg, --coverage, -fprofile-* pass through profiling flag for GCC\n      # @file GCC response files\n      # -tp=* Portland pgcc target processor selection\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \\\n      -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*)\n        func_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n        func_append compile_command \" $arg\"\n        func_append finalize_command \" $arg\"\n        compiler_flags=\"$compiler_flags $arg\"\n        continue\n        ;;\n\n      # Some other compiler flag.\n      -* | +*)\n        func_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tobjs=\"$objs $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif func_lalib_unsafe_p \"$arg\"; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  func_source \"$arg\"\n\n\t  if test -z \"$pic_object\" ||\n\t     test -z \"$non_pic_object\" ||\n\t     test \"$pic_object\" = none &&\n\t     test \"$non_pic_object\" = none; then\n\t    func_fatal_error \"cannot find name of object for \\`$arg'\"\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  func_dirname \"$arg\" \"/\" \"\"\n\t  xdir=\"$func_dirname_result\"\n\n\t  if test \"$pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=\"$xdir$pic_object\"\n\n\t    if test \"$prev\" = dlfiles; then\n\t      if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\tdlfiles=\"$dlfiles $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test \"$prev\" = dlprefiles; then\n\t      # Preload the old-style object.\n\t      dlprefiles=\"$dlprefiles $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    func_append libobjs \" $pic_object\"\n\t    arg=\"$pic_object\"\n\t  fi\n\n\t  # Non-PIC object.\n\t  if test \"$non_pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=\"$xdir$non_pic_object\"\n\n\t    # A standard non-PIC object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t    if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t      arg=\"$non_pic_object\"\n\t    fi\n\t  else\n\t    # If the PIC object exists, use it instead.\n\t    # $xdir was prepended to $pic_object above.\n\t    non_pic_object=\"$pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if $opt_dry_run; then\n\t    # Extract subdirectory from the argument.\n\t    func_dirname \"$arg\" \"/\" \"\"\n\t    xdir=\"$func_dirname_result\"\n\n\t    func_lo2o \"$arg\"\n\t    pic_object=$xdir$objdir/$func_lo2o_result\n\t    non_pic_object=$xdir$func_lo2o_result\n\t    func_append libobjs \" $pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  else\n\t    func_fatal_error \"\\`$arg' is not a valid libtool object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tdeplibs=\"$deplibs $arg\"\n\told_deplibs=\"$old_deplibs $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tif test \"$prev\" = dlfiles; then\n\t  # This library was specified with -dlopen.\n\t  dlfiles=\"$dlfiles $arg\"\n\t  prev=\n\telif test \"$prev\" = dlprefiles; then\n\t  # The library was specified with -dlpreopen.\n\t  dlprefiles=\"$dlprefiles $arg\"\n\t  prev=\n\telse\n\t  deplibs=\"$deplibs $arg\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\tfunc_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n      fi\n    done # argument parsing loop\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the \\`$prevarg' option requires an argument\"\n\n    if test \"$export_dynamic\" = yes && test -n \"$export_dynamic_flag_spec\"; then\n      eval \"arg=\\\"$export_dynamic_flag_spec\\\"\"\n      func_append compile_command \" $arg\"\n      func_append finalize_command \" $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    func_basename \"$output\"\n    outputname=\"$func_basename_result\"\n    libobjs_save=\"$libobjs\"\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$ECHO \\\"\\${$shlibpath_var}\\\" \\| \\$SED \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval \"sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\"\n    eval \"sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\"\n\n    func_dirname \"$output\" \"/\" \"\"\n    output_objdir=\"$func_dirname_result$objdir\"\n    # Create the object directory.\n    func_mkdir_p \"$output_objdir\"\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      func_fatal_help \"you must specify an output file\"\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if $opt_duplicate_deps ; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\tesac\n      fi\n      libs=\"$libs $deplib\"\n    done\n\n    if test \"$linkmode\" = lib; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if $opt_duplicate_compiler_generated_deps; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) specialdeplibs=\"$specialdeplibs $pre_post_deps\" ;;\n\t  esac\n\t  pre_post_deps=\"$pre_post_deps $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    notinst_path= # paths that contain not-installed libtool libraries\n\n    case $linkmode in\n    lib)\n\tpasses=\"conv dlpreopen link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    func_fatal_help \"libraries can \\`-dlopen' only libtool libraries: $file\"\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=no\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n\n    for pass in $passes; do\n      # The preopen pass in lib mode reverses $deplibs; put it back here\n      # so that -L comes before libs that need it for instance...\n      if test \"$linkmode,$pass\" = \"lib,link\"; then\n\t## FIXME: Find the place where the list is rebuilt in the wrong\n\t##        order, and fix it there properly\n        tmp_deplibs=\n\tfor deplib in $deplibs; do\n\t  tmp_deplibs=\"$deplib $tmp_deplibs\"\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n      fi\n\n      if test \"$linkmode,$pass\" = \"lib,link\" ||\n\t test \"$linkmode,$pass\" = \"prog,scan\"; then\n\tlibs=\"$deplibs\"\n\tdeplibs=\n      fi\n      if test \"$linkmode\" = prog; then\n\tcase $pass in\n\tdlopen) libs=\"$dlfiles\" ;;\n\tdlpreopen) libs=\"$dlprefiles\" ;;\n\tlink) libs=\"$deplibs %DEPLIBS% $dependency_libs\" ;;\n\tesac\n      fi\n      if test \"$linkmode,$pass\" = \"lib,dlpreopen\"; then\n\t# Collect and forward deplibs of preopened libtool libs\n\tfor lib in $dlprefiles; do\n\t  # Ignore non-libtool-libs\n\t  dependency_libs=\n\t  case $lib in\n\t  *.la)\tfunc_source \"$lib\" ;;\n\t  esac\n\n\t  # Collect preopened libtool deplibs, except any this library\n\t  # has declared as weak libs\n\t  for deplib in $dependency_libs; do\n\t    func_basename \"$deplib\"\n            deplib_base=$func_basename_result\n\t    case \" $weak_libs \" in\n\t    *\" $deplib_base \"*) ;;\n\t    *) deplibs=\"$deplibs $deplib\" ;;\n\t    esac\n\t  done\n\tdone\n\tlibs=\"$dlprefiles\"\n      fi\n      if test \"$pass\" = dlopen; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=\"$deplibs\"\n\tdeplibs=\n      fi\n\n      for deplib in $libs; do\n\tlib=\n\tfound=no\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe|-threads)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    compiler_flags=\"$compiler_flags $deplib\"\n\t    if test \"$linkmode\" = lib ; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) new_inherited_linker_flags=\"$new_inherited_linker_flags $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test \"$linkmode\" != lib && test \"$linkmode\" != prog; then\n\t    func_warning \"\\`-l' is ignored for archives/objects\"\n\t    continue\n\t  fi\n\t  func_stripname '-l' '' \"$deplib\"\n\t  name=$func_stripname_result\n\t  if test \"$linkmode\" = lib; then\n\t    searchdirs=\"$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path\"\n\t  else\n\t    searchdirs=\"$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path\"\n\t  fi\n\t  for searchdir in $searchdirs; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=\"$searchdir/lib${name}${search_ext}\"\n\t      if test -f \"$lib\"; then\n\t\tif test \"$search_ext\" = \".la\"; then\n\t\t  found=yes\n\t\telse\n\t\t  found=no\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if test \"$found\" != yes; then\n\t    # deplib doesn't seem to be a libtool library\n\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  else # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif func_lalib_p \"$lib\"; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  func_source \"$lib\"\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=\"$l\"\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\" ; then # only static version available\n\t\t    found=no\n\t\t    func_dirname \"$lib\" \"\" \".\"\n\t\t    ladir=\"$func_dirname_result\"\n\t\t    lib=$ladir/$old_library\n\t\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  fi\n\t  ;; # -l\n\t*.ltframework)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$deplib $deplibs\"\n\t    if test \"$linkmode\" = lib ; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) new_inherited_linker_flags=\"$new_inherited_linker_flags $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test \"$pass\" = conv && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    func_stripname '-L' '' \"$deplib\"\n\t    newlib_search_path=\"$newlib_search_path $func_stripname_result\"\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" = conv; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test \"$pass\" = scan; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    func_stripname '-L' '' \"$deplib\"\n\t    newlib_search_path=\"$newlib_search_path $func_stripname_result\"\n\t    ;;\n\t  *)\n\t    func_warning \"\\`-L' is ignored for archives/objects\"\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test \"$pass\" = link; then\n\t    func_stripname '-R' '' \"$deplib\"\n\t    dir=$func_stripname_result\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) xrpath=\"$xrpath $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la) lib=\"$deplib\" ;;\n\t*.$libext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    # Linking convenience modules into shared libraries is allowed,\n\t    # but linking other static libraries is non-portable.\n\t    case \" $dlpreconveniencelibs \" in\n\t    *\" $deplib \"*) ;;\n\t    *)\n\t      valid_a_lib=no\n\t      case $deplibs_check_method in\n\t\tmatch_pattern*)\n\t\t  set dummy $deplibs_check_method; shift\n\t\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t\t  if eval \"\\$ECHO \\\"$deplib\\\"\" 2>/dev/null | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t    valid_a_lib=yes\n\t\t  fi\n\t\t;;\n\t\tpass_all)\n\t\t  valid_a_lib=yes\n\t\t;;\n\t      esac\n\t      if test \"$valid_a_lib\" != yes; then\n\t\techo\n\t\t$ECHO \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t\techo \"*** that it is just a static archive that I should not use here.\"\n\t      else\n\t\techo\n\t\t$ECHO \"*** Warning: Linking the shared library $output against the\"\n\t\t$ECHO \"*** static library $deplib is not portable!\"\n\t\tdeplibs=\"$deplib $deplibs\"\n\t      fi\n\t      ;;\n\t    esac\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" != link; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test \"$linkmode\" = prog; then\n\t    if test \"$pass\" = dlpreopen || test \"$dlopen_support\" != yes || test \"$build_libtool_libs\" = no; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      newdlprefiles=\"$newdlprefiles $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      newdlfiles=\"$newdlfiles $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=yes\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\n\tif test \"$found\" = yes || test -f \"$lib\"; then :\n\telse\n\t  func_fatal_error \"cannot find the library \\`$lib' or unhandled argument \\`$deplib'\"\n\tfi\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$lib\" \\\n\t  || func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\n\tfunc_dirname \"$lib\" \"\" \".\"\n\tladir=\"$func_dirname_result\"\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\tinherited_linker_flags=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tfunc_source \"$lib\"\n\n\t# Convert \"-framework foo\" to \"foo.ltframework\"\n\tif test -n \"$inherited_linker_flags\"; then\n\t  tmp_inherited_linker_flags=`$ECHO \"$inherited_linker_flags\" | $SED 's/-framework \\([^ $]*\\)/\\1.ltframework/g'`\n\t  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do\n\t    case \" $new_inherited_linker_flags \" in\n\t      *\" $tmp_inherited_linker_flag \"*) ;;\n\t      *) new_inherited_linker_flags=\"$new_inherited_linker_flags $tmp_inherited_linker_flag\";;\n\t    esac\n\t  done\n\tfi\n\tdependency_libs=`$ECHO \" $dependency_libs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tif test \"$linkmode,$pass\" = \"lib,link\" ||\n\t   test \"$linkmode,$pass\" = \"prog,scan\" ||\n\t   { test \"$linkmode\" != prog && test \"$linkmode\" != lib; }; then\n\t  test -n \"$dlopen\" && dlfiles=\"$dlfiles $dlopen\"\n\t  test -n \"$dlpreopen\" && dlprefiles=\"$dlprefiles $dlpreopen\"\n\tfi\n\n\tif test \"$pass\" = conv; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      func_fatal_error \"cannot find name of link library for \\`$lib'\"\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    convenience=\"$convenience $ladir/$objdir/$old_library\"\n\t    old_convenience=\"$old_convenience $ladir/$objdir/$old_library\"\n\t  elif test \"$linkmode\" != prog && test \"$linkmode\" != lib; then\n\t    func_fatal_error \"\\`$lib' is not a convenience library\"\n\t  fi\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    deplibs=\"$deplib $deplibs\"\n\t    if $opt_duplicate_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t      esac\n\t    fi\n\t    tmp_libs=\"$tmp_libs $deplib\"\n\t  done\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tfor l in $old_library $library_names; do\n\t  linklib=\"$l\"\n\tdone\n\tif test -z \"$linklib\"; then\n\t  func_fatal_error \"cannot find name of link library for \\`$lib'\"\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test \"$pass\" = dlopen; then\n\t  if test -z \"$libdir\"; then\n\t    func_fatal_error \"cannot -dlopen a convenience library: \\`$lib'\"\n\t  fi\n\t  if test -z \"$dlname\" ||\n\t     test \"$dlopen_support\" != yes ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    dlprefiles=\"$dlprefiles $lib $dependency_libs\"\n\t  else\n\t    newdlfiles=\"$newdlfiles $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=\"$ladir\" ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    func_warning \"cannot determine absolute directory name of \\`$ladir'\"\n\t    func_warning \"passing it literally to the linker, although it might fail\"\n\t    abs_ladir=\"$ladir\"\n\t  fi\n\t  ;;\n\tesac\n\tfunc_basename \"$lib\"\n\tlaname=\"$func_basename_result\"\n\n\t# Find the relevant object directory and library name.\n\tif test \"X$installed\" = Xyes; then\n\t  if test ! -f \"$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    func_warning \"library \\`$lib' was moved.\"\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    libdir=\"$abs_ladir\"\n\t  else\n\t    dir=\"$libdir\"\n\t    absdir=\"$libdir\"\n\t  fi\n\t  test \"X$hardcode_automatic\" = Xyes && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    # Remove this search path later\n\t    notinst_path=\"$notinst_path $abs_ladir\"\n\t  else\n\t    dir=\"$ladir/$objdir\"\n\t    absdir=\"$abs_ladir/$objdir\"\n\t    # Remove this search path later\n\t    notinst_path=\"$notinst_path $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tfunc_stripname 'lib' '.la' \"$laname\"\n\tname=$func_stripname_result\n\n\t# This library was specified with -dlpreopen.\n\tif test \"$pass\" = dlpreopen; then\n\t  if test -z \"$libdir\" && test \"$linkmode\" = prog; then\n\t    func_fatal_error \"only libraries may -dlpreopen a convenience library: \\`$lib'\"\n\t  fi\n\t  # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t  # are required to link).\n\t  if test -n \"$old_library\"; then\n\t    newdlprefiles=\"$newdlprefiles $dir/$old_library\"\n\t    # Keep a list of preopened convenience libraries to check\n\t    # that they are being used correctly in the link pass.\n\t    test -z \"$libdir\" && \\\n\t\tdlpreconveniencelibs=\"$dlpreconveniencelibs $dir/$old_library\"\n\t  # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t  elif test -n \"$dlname\"; then\n\t    newdlprefiles=\"$newdlprefiles $dir/$dlname\"\n\t  else\n\t    newdlprefiles=\"$newdlprefiles $dir/$linklib\"\n\t  fi\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test \"$linkmode\" = lib; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test \"$linkmode\" = prog && test \"$pass\" != link; then\n\t  newlib_search_path=\"$newlib_search_path $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=no\n\t  if test \"$link_all_deplibs\" != no || test -z \"$library_names\" ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    linkalldeplibs=yes\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) func_stripname '-L' '' \"$deplib\"\n\t         newlib_search_path=\"$newlib_search_path $func_stripname_result\"\n\t\t ;;\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if test \"$linkalldeplibs\" = yes; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if $opt_duplicate_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t      esac\n\t    fi\n\t    tmp_libs=\"$tmp_libs $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t  if test -n \"$library_names\" &&\n\t     { { test \"$prefer_static_libs\" = no ||\n\t         test \"$prefer_static_libs,$installed\" = \"built,yes\"; } ||\n\t       test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\" ; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case \"$temp_rpath:\" in\n\t      *\"$absdir:\"*) ;;\n\t      *) temp_rpath=\"$temp_rpath$absdir:\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) compile_rpath=\"$compile_rpath $absdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) finalize_rpath=\"$finalize_rpath $libdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if test \"$alldeplibs\" = yes &&\n\t     { test \"$deplibs_check_method\" = pass_all ||\n\t       { test \"$build_libtool_libs\" = yes &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tuse_static_libs=$prefer_static_libs\n\tif test \"$use_static_libs\" = built && test \"$installed\" = yes; then\n\t  use_static_libs=no\n\tfi\n\tif test -n \"$library_names\" &&\n\t   { test \"$use_static_libs\" = no || test -z \"$old_library\"; }; then\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc*)\n\t      # No point in relinking DLLs because paths are not encoded\n\t      notinst_deplibs=\"$notinst_deplibs $lib\"\n\t      need_relink=no\n\t    ;;\n\t  *)\n\t    if test \"$installed\" = no; then\n\t      notinst_deplibs=\"$notinst_deplibs $lib\"\n\t      need_relink=yes\n\t    fi\n\t    ;;\n\t  esac\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on some\n\t  # systems (darwin).  Don't bleat about dlopened modules though!\n\t  dlopenmodule=\"\"\n\t  for dlpremoduletest in $dlprefiles; do\n\t    if test \"X$dlpremoduletest\" = \"X$lib\"; then\n\t      dlopenmodule=\"$dlpremoduletest\"\n\t      break\n\t    fi\n\t  done\n\t  if test -z \"$dlopenmodule\" && test \"$shouldnotlink\" = yes && test \"$pass\" = link; then\n\t    echo\n\t    if test \"$linkmode\" = prog; then\n\t      $ECHO \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $ECHO \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $ECHO \"*** $linklib is not portable!\"\n\t  fi\n\t  if test \"$linkmode\" = lib &&\n\t     test \"$hardcode_into_libs\" = yes; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) compile_rpath=\"$compile_rpath $absdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) finalize_rpath=\"$finalize_rpath $libdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    shift\n\t    realname=\"$1\"\n\t    shift\n\t    eval \"libname=\\\"$libname_spec\\\"\"\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=\"$dlname\"\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw* | *cegcc*)\n\t        func_arith $current - $age\n\t\tmajor=$func_arith_result\n\t\tversuffix=\"-$major\"\n\t\t;;\n\t      esac\n\t      eval \"soname=\\\"$soname_spec\\\"\"\n\t    else\n\t      soname=\"$realname\"\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=\"$soname\"\n\t    func_basename \"$soroot\"\n\t    soname=\"$func_basename_result\"\n\t    func_stripname 'lib' '.dll' \"$soname\"\n\t    newlib=libimp-$func_stripname_result.a\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      func_verbose \"extracting exported symbol list from \\`$soname'\"\n\t      func_execute_cmds \"$extract_expsyms_cmds\" 'exit $?'\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      func_verbose \"generating import library for \\`$soname'\"\n\t      func_execute_cmds \"$old_archive_from_expsyms_cmds\" 'exit $?'\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test \"$linkmode\" = prog || test \"$mode\" != relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test \"$hardcode_direct\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t\tcase $host in\n\t\t  *-*-sco3.2v5.0.[024]*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv4*uw2*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \\\n\t\t    *-*-unixware7*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a (non-dlopened) module then we can not\n\t\t    # link against it, someone is ignoring the earlier warnings\n\t\t    if /usr/bin/file -L $add 2> /dev/null |\n\t\t\t $GREP \": [^:]* bundle\" >/dev/null ; then\n\t\t      if test \"X$dlopenmodule\" != \"X$lib\"; then\n\t\t\t$ECHO \"*** Warning: lib $linklib is a module, not a shared library\"\n\t\t\tif test -z \"$old_library\" ; then\n\t\t\t  echo\n\t\t\t  echo \"*** And there doesn't seem to be a static archive available\"\n\t\t\t  echo \"*** The link will probably fail, sorry\"\n\t\t\telse\n\t\t\t  add=\"$dir/$old_library\"\n\t\t\tfi\n\t\t      elif test -n \"$old_library\"; then\n\t\t\tadd=\"$dir/$old_library\"\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test \"$hardcode_minus_L\" = no; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=\"$dir\" ;;\n\t\tesac\n\t\tadd_dir=\"-L$dir\"\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = no; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test \"$hardcode_direct\" = yes &&\n\t         test \"$hardcode_direct_absolute\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t      elif test \"$hardcode_minus_L\" = yes; then\n\t\tadd_dir=\"-L$absdir\"\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case $libdir in\n\t\t    [\\\\/]*)\n\t\t      add_dir=\"$add_dir -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = yes; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test \"$lib_linked\" != yes; then\n\t      func_fatal_configuration \"unsupported hardcode properties\"\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) compile_shlibpath=\"$compile_shlibpath$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test \"$hardcode_direct\" != yes &&\n\t\t test \"$hardcode_minus_L\" != yes &&\n\t\t test \"$hardcode_shlibpath_var\" = yes; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) finalize_shlibpath=\"$finalize_shlibpath$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test \"$linkmode\" = prog || test \"$mode\" = relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test \"$hardcode_direct\" = yes &&\n\t       test \"$hardcode_direct_absolute\" = no; then\n\t      add=\"$libdir/$linklib\"\n\t    elif test \"$hardcode_minus_L\" = yes; then\n\t      add_dir=\"-L$libdir\"\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_shlibpath_var\" = yes; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) finalize_shlibpath=\"$finalize_shlibpath$libdir:\" ;;\n\t      esac\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_automatic\" = yes; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\" ; then\n\t\tadd=\"$inst_prefix_dir$libdir/$linklib\"\n\t      else\n\t\tadd=\"$libdir/$linklib\"\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=\"-L$libdir\"\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase $libdir in\n\t\t  [\\\\/]*)\n\t\t    add_dir=\"$add_dir -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=\"-l$name\"\n\t    fi\n\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test \"$linkmode\" = prog; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test \"$hardcode_direct\" != unsupported; then\n\t    test -n \"$old_library\" && linklib=\"$old_library\"\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test \"$build_libtool_libs\" = yes; then\n\t  # Not a shared library\n\t  if test \"$deplibs_check_method\" != pass_all; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    echo\n\t    $ECHO \"*** Warning: This system can not link to static lib archive $lib.\"\n\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test \"$module\" = yes; then\n\t      echo \"*** But as you try to build a module library, libtool will still create \"\n\t      echo \"*** a static module, that should work as long as the dlopening application\"\n\t      echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\techo\n\t\techo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\techo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t\techo \"*** not find such a program.  So, this module is probably useless.\"\n\t\techo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test \"$build_old_libs\" = no; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test \"$linkmode\" = lib; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test \"$hardcode_into_libs\" != yes ||\n\t       test \"$build_old_libs\" = yes ||\n\t       test \"$link_static\" = yes; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) func_stripname '-R' '' \"$libdir\"\n\t           temp_xrpath=$func_stripname_result\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) xrpath=\"$xrpath $temp_xrpath\";;\n\t\t   esac;;\n\t      *) temp_deplibs=\"$temp_deplibs $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=\"$temp_deplibs\"\n\t  fi\n\n\t  newlib_search_path=\"$newlib_search_path $absdir\"\n\t  # Link against this library\n\t  test \"$link_static\" = no && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    if $opt_duplicate_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t      esac\n\t    fi\n\t    tmp_libs=\"$tmp_libs $deplib\"\n\t  done\n\n\t  if test \"$link_all_deplibs\" != no; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      path=\n\t      case $deplib in\n\t      -L*) path=\"$deplib\" ;;\n\t      *.la)\n\t        func_dirname \"$deplib\" \"\" \".\"\n\t\tdir=\"$func_dirname_result\"\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=\"$dir\" ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    func_warning \"cannot determine absolute directory name of \\`$dir'\"\n\t\t    absdir=\"$dir\"\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif $GREP \"^installed=no\" $deplib > /dev/null; then\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  depdepl=\n\t\t  deplibrary_names=`${SED} -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\" ; then\n\t\t    for tmp in $deplibrary_names ; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$absdir/$objdir/$depdepl\" ; then\n\t\t      depdepl=\"$absdir/$objdir/$depdepl\"\n\t\t      darwin_install_name=`${OTOOL} -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`\n                      if test -z \"$darwin_install_name\"; then\n                          darwin_install_name=`${OTOOL64} -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`\n                      fi\n\t\t      compiler_flags=\"$compiler_flags ${wl}-dylib_file ${wl}${darwin_install_name}:${depdepl}\"\n\t\t      linker_flags=\"$linker_flags -dylib_file ${darwin_install_name}:${depdepl}\"\n\t\t      path=\n\t\t    fi\n\t\t  fi\n\t\t  ;;\n\t\t*)\n\t\t  path=\"-L$absdir/$objdir\"\n\t\t  ;;\n\t\tesac\n\t\telse\n\t\t  libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  test -z \"$libdir\" && \\\n\t\t    func_fatal_error \"\\`$deplib' is not a valid libtool archive\"\n\t\t  test \"$absdir\" != \"$libdir\" && \\\n\t\t    func_warning \"\\`$deplib' seems to be moved\"\n\n\t\t  path=\"-L$absdir\"\n\t\tfi\n\t\t;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      if test \"$pass\" = link; then\n\tif test \"$linkmode\" = \"prog\"; then\n\t  compile_deplibs=\"$new_inherited_linker_flags $compile_deplibs\"\n\t  finalize_deplibs=\"$new_inherited_linker_flags $finalize_deplibs\"\n\telse\n\t  compiler_flags=\"$compiler_flags \"`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfi\n      fi\n      dependency_libs=\"$newdependency_libs\"\n      if test \"$pass\" = dlpreopen; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test \"$pass\" != dlopen; then\n\tif test \"$pass\" != conv; then\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) lib_search_path=\"$lib_search_path $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\tfi\n\n\tif test \"$linkmode,$pass\" != \"prog,link\"; then\n\t  vars=\"deplibs\"\n\telse\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\$$var\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) tmp_libs=\"$tmp_libs $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) tmp_libs=\"$tmp_libs $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\$tmp_libs\n\tdone # for var\n      fi\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs ; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\"\"\n\t  ;;\n\tesac\n\tif test -n \"$i\" ; then\n\t  tmp_libs=\"$tmp_libs $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test \"$linkmode\" = prog; then\n      dlfiles=\"$newdlfiles\"\n    fi\n    if test \"$linkmode\" = prog || test \"$linkmode\" = lib; then\n      dlprefiles=\"$newdlprefiles\"\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tfunc_warning \"\\`-dlopen' is ignored for archives\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"\\`-l' and \\`-L' are ignored for archives\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"\\`-rpath' is ignored for archives\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"\\`-R' is ignored for archives\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info/-version-number' is ignored for archives\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for archives\"\n\n      test -n \"$export_symbols$export_symbols_regex\" && \\\n\tfunc_warning \"\\`-export-symbols' is ignored for archives\"\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=\"$output\"\n      objs=\"$objs$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form `libNAME.la'.\n      case $outputname in\n      lib*)\n\tfunc_stripname 'lib' '.la' \"$outputname\"\n\tname=$func_stripname_result\n\teval \"shared_ext=\\\"$shrext_cmds\\\"\"\n\teval \"libname=\\\"$libname_spec\\\"\"\n\t;;\n      *)\n\ttest \"$module\" = no && \\\n\t  func_fatal_help \"libtool library \\`$output' must begin with \\`lib'\"\n\n\tif test \"$need_lib_prefix\" != no; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  func_stripname '' '.la' \"$outputname\"\n\t  name=$func_stripname_result\n\t  eval \"shared_ext=\\\"$shrext_cmds\\\"\"\n\t  eval \"libname=\\\"$libname_spec\\\"\"\n\telse\n\t  func_stripname '' '.la' \"$outputname\"\n\t  libname=$func_stripname_result\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test \"$deplibs_check_method\" != pass_all; then\n\t  func_fatal_error \"cannot build libtool library \\`$output' from non-libtool objects on this host:$objs\"\n\telse\n\t  echo\n\t  $ECHO \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $ECHO \"*** objects $objs is not portable!\"\n\t  libobjs=\"$libobjs $objs\"\n\tfi\n      fi\n\n      test \"$dlself\" != no && \\\n\tfunc_warning \"\\`-dlopen self' is ignored for libtool libraries\"\n\n      set dummy $rpath\n      shift\n      test \"$#\" -gt 1 && \\\n\tfunc_warning \"ignoring multiple \\`-rpath's for a libtool library\"\n\n      install_libdir=\"$1\"\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test \"$build_libtool_libs\" = yes; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a `.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\ttest -n \"$vinfo\" && \\\n\t  func_warning \"\\`-version-info/-version-number' is ignored for convenience libraries\"\n\n\ttest -n \"$release\" && \\\n\t  func_warning \"\\`-release' is ignored for convenience libraries\"\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=\"$IFS\"; IFS=':'\n\tset dummy $vinfo 0 0 0\n\tshift\n\tIFS=\"$save_ifs\"\n\n\ttest -n \"$7\" && \\\n\t  func_fatal_help \"too many parameters to \\`-version-info'\"\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=\"$1\"\n\t  number_minor=\"$2\"\n\t  number_revision=\"$3\"\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # which has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  darwin|linux|osf|windows|none)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=\"$number_minor\"\n\t    revision=\"$number_revision\"\n\t    ;;\n\t  freebsd-aout|freebsd-elf|qnx|sunos)\n\t    current=\"$number_major\"\n\t    revision=\"$number_minor\"\n\t    age=\"0\"\n\t    ;;\n\t  irix|nonstopux)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=\"$number_minor\"\n\t    revision=\"$number_minor\"\n\t    lt_irix_increment=no\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=\"$1\"\n\t  revision=\"$2\"\n\t  age=\"$3\"\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"CURRENT \\`$current' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"REVISION \\`$revision' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"AGE \\`$age' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  func_error \"AGE \\`$age' is greater than the current interface number \\`$current'\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\"$major.$age.$revision\"\n\t  # Darwin ld doesn't like 0 for these options...\n\t  func_arith $current + 1\n\t  minor_current=$func_arith_result\n\t  xlcverstring=\"${wl}-compatibility_version ${wl}$minor_current ${wl}-current_version ${wl}$minor_current.$revision\"\n\t  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\";\n\t  ;;\n\n\tfreebsd-elf)\n\t  major=\".$current\"\n\t  versuffix=\".$current\"\n\t  ;;\n\n\tirix | nonstopux)\n\t  if test \"X$lt_irix_increment\" = \"Xno\"; then\n\t    func_arith $current - $age\n\t  else\n\t    func_arith $current - $age + 1\n\t  fi\n\t  major=$func_arith_result\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=\"$verstring_prefix$major.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test \"$loop\" -ne 0; do\n\t    func_arith $revision - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=\"$verstring_prefix$major.$iface:$verstring\"\n\t  done\n\n\t  # Before this point, $major must not contain `.'.\n\t  major=.$major\n\t  versuffix=\"$major.$revision\"\n\t  ;;\n\n\tlinux)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\"$major.$age.$revision\"\n\t  ;;\n\n\tosf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\".$current.$age.$revision\"\n\t  verstring=\"$current.$age.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test \"$loop\" -ne 0; do\n\t    func_arith $current - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=\"$verstring:${iface}.0\"\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  verstring=\"$verstring:${current}.0\"\n\t  ;;\n\n\tqnx)\n\t  major=\".$current\"\n\t  versuffix=\".$current\"\n\t  ;;\n\n\tsunos)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\"\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 filesystems.\n\t  func_arith $current - $age\n\t  major=$func_arith_result\n\t  versuffix=\"-$major\"\n\t  ;;\n\n\t*)\n\t  func_fatal_configuration \"unknown library version type \\`$version_type'\"\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=\"0.0\"\n\t    ;;\n\t  esac\n\t  if test \"$need_version\" = no; then\n\t    versuffix=\n\t  else\n\t    versuffix=\".0.0\"\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test \"$avoid_version\" = yes && test \"$need_version\" = no; then\n\t  major=\n\t  versuffix=\n\t  verstring=\"\"\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test \"$allow_undefined\" = yes; then\n\t  if test \"$allow_undefined_flag\" = unsupported; then\n\t    func_warning \"undefined symbols not allowed in $host shared libraries\"\n\t    build_libtool_libs=no\n\t    build_old_libs=yes\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=\"$no_undefined_flag\"\n\tfi\n\n      fi\n\n      func_generate_dlsyms \"$libname\" \"$libname\" \"yes\"\n      libobjs=\"$libobjs $symfileobj\"\n      test \"X$libobjs\" = \"X \" && libobjs=\n\n      if test \"$mode\" != relink; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$ECHO \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext | *.gcno)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/${libname}${release}.*)\n\t       if test \"X$precious_files_regex\" != \"X\"; then\n\t\t if $ECHO \"$p\" | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t\t then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       removelist=\"$removelist $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\ttest -n \"$removelist\" && \\\n\t  func_show_eval \"${RM}r \\$removelist\"\n      fi\n\n      # Now set the variables for building old libraries.\n      if test \"$build_old_libs\" = yes && test \"$build_libtool_libs\" != convenience ; then\n\toldlibs=\"$oldlibs $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.${libext}$/d; $lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      #for path in $notinst_path; do\n      #\tlib_search_path=`$ECHO \"$lib_search_path \" | $SED \"s% $path % %g\"`\n      #\tdeplibs=`$ECHO \"$deplibs \" | $SED \"s% -L$path % %g\"`\n      #\tdependency_libs=`$ECHO \"$dependency_libs \" | $SED \"s% -L$path % %g\"`\n      #done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  temp_xrpath=\"$temp_xrpath -R$libdir\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_rpath=\"$finalize_rpath $libdir\" ;;\n\t  esac\n\tdone\n\tif test \"$hardcode_into_libs\" != yes || test \"$build_old_libs\" = yes; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=\"$dlfiles\"\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) dlfiles=\"$dlfiles $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=\"$dlprefiles\"\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) dlprefiles=\"$dlprefiles $lib\" ;;\n\tesac\n      done\n\n      if test \"$build_libtool_libs\" = yes; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    deplibs=\"$deplibs System.ltframework\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    ;;\n\t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test \"$build_libtool_need_lc\" = \"yes\"; then\n\t      deplibs=\"$deplibs -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\"\"\n\tversuffix=\"\"\n\tmajor=\"\"\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $opt_dry_run || $RM conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $opt_dry_run || $RM conftest\n\t  if $LTCC $LTCFLAGS -o conftest conftest.c $deplibs; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\tif test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    newdeplibs=\"$newdeplibs $i\"\n\t\t    i=\"\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t\tif test -n \"$i\" ; then\n\t\t  eval \"libname=\\\"$libname_spec\\\"\"\n\t\t  eval \"deplib_matches=\\\"$library_names_spec\\\"\"\n\t\t  set dummy $deplib_matches; shift\n\t\t  deplib_match=$1\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t    newdeplibs=\"$newdeplibs $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    echo\n\t\t    $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *)\n\t\tnewdeplibs=\"$newdeplibs $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\t$opt_dry_run || $RM conftest\n\t\tif $LTCC $LTCFLAGS -o conftest conftest.c $i; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      newdeplibs=\"$newdeplibs $i\"\n\t\t      i=\"\"\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\" ; then\n\t\t    eval \"libname=\\\"$libname_spec\\\"\"\n\t\t    eval \"deplib_matches=\\\"$library_names_spec\\\"\"\n\t\t    set dummy $deplib_matches; shift\n\t\t    deplib_match=$1\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t      newdeplibs=\"$newdeplibs $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      echo\n\t\t      $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  $ECHO \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  echo \"*** make it link in!  You will probably need to install it or some\"\n\t\t  echo \"*** library that it depends on before this library will be fully\"\n\t\t  echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t\t;;\n\t      *)\n\t\tnewdeplibs=\"$newdeplibs $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method; shift\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\teval \"libname=\\\"$libname_spec\\\"\"\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null |\n\t\t\t $GREP \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=\"$potent_lib\"\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=\"$potliblink\";;\n\t\t\t*) potlib=`$ECHO \"$potlib\" | $SED 's,[^/]*$,,'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval \"$file_magic_cmd \\\"\\$potlib\\\"\" 2>/dev/null |\n\t\t\t $SED -e 10q |\n\t\t\t $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tnewdeplibs=\"$newdeplibs $a_deplib\"\n\t\t\ta_deplib=\"\"\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method; shift\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\teval \"libname=\\\"$libname_spec\\\"\"\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=\"$potent_lib\" # see symlink-check above in file_magic test\n\t\t    if eval \"\\$ECHO \\\"$potent_lib\\\"\" 2>/dev/null | $SED 10q | \\\n\t\t       $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t      a_deplib=\"\"\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\"\"\n\t  tmp_deplibs=`$ECHO \" $deplibs\" | $SED 's/ -lc$//; s/ -[LR][^ ]*//g'`\n\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t    for i in $predeps $postdeps ; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$ECHO \" $tmp_deplibs\" | $SED \"s,$i,,\"`\n\t    done\n\t  fi\n\t  case $tmp_deplibs in\n\t  *[!\\\t\\ ]*)\n\t    echo\n\t    if test \"X$deplibs_check_method\" = \"Xnone\"; then\n\t      echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library with the System framework\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t  ;;\n\tesac\n\n\tif test \"$droppeddeps\" = yes; then\n\t  if test \"$module\" = yes; then\n\t    echo\n\t    echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $ECHO \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    echo \"*** a static module, that should work as long as the dlopening\"\n\t    echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      echo\n\t      echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      echo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t      echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      echo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test \"$build_old_libs\" = no; then\n\t      oldlibs=\"$output_objdir/$libname.$libext\"\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    echo \"*** automatically added whenever a program is linked with this library\"\n\t    echo \"*** or is declared to -dlopen it.\"\n\n\t    if test \"$allow_undefined\" = no; then\n\t      echo\n\t      echo \"*** Since this library must not contain undefined symbols,\"\n\t      echo \"*** because either the platform does not support them or\"\n\t      echo \"*** it was explicitly requested with -no-undefined,\"\n\t      echo \"*** libtool will only create a static version of it.\"\n\t      if test \"$build_old_libs\" = no; then\n\t\toldlibs=\"$output_objdir/$libname.$libext\"\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n      # Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n      case $host in\n\t*-*-darwin*)\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  new_inherited_linker_flags=`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  deplibs=`$ECHO \" $deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  ;;\n      esac\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    new_libs=\"$new_libs -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) new_libs=\"$new_libs $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) new_libs=\"$new_libs $deplib\" ;;\n\tesac\n      done\n      deplibs=\"$new_libs\"\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test \"$build_libtool_libs\" = yes; then\n\tif test \"$hardcode_into_libs\" = yes; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=\"$finalize_rpath\"\n\t  test \"$mode\" != relink && rpath=\"$compile_rpath$rpath\"\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=\"$libdir\"\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    hardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval \"flag=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t\tdep_rpath=\"$dep_rpath $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) perm_rpath=\"$perm_rpath $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=\"$hardcode_libdirs\"\n\t    if test -n \"$hardcode_libdir_flag_spec_ld\"; then\n\t      eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec_ld\\\"\"\n\t    else\n\t      eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t    fi\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      rpath=\"$rpath$dir:\"\n\t    done\n\t    eval $runpath_var=\\$rpath\\$$runpath_var\n\t    export $runpath_var\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=\"$finalize_shlibpath\"\n\ttest \"$mode\" != relink && shlibpath=\"$compile_shlibpath$shlibpath\"\n\tif test -n \"$shlibpath\"; then\n\t  eval $shlibpath_var=\\$shlibpath\\$$shlibpath_var\n\t  export $shlibpath_var\n\tfi\n\n\t# Get the real and link names of the library.\n\teval \"shared_ext=\\\"$shrext_cmds\\\"\"\n\teval \"library_names=\\\"$library_names_spec\\\"\"\n\tset dummy $library_names\n\tshift\n\trealname=\"$1\"\n\tshift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval \"soname=\\\"$soname_spec\\\"\"\n\telse\n\t  soname=\"$realname\"\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=\"$output_objdir/$realname\"\n\tlinknames=\n\tfor link\n\tdo\n\t  linknames=\"$linknames $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$ECHO \"$libobjs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\ttest \"X$libobjs\" = \"X \" && libobjs=\n\n\tdelfiles=\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $opt_dry_run || cp \"$export_symbols\" \"$output_objdir/$libname.uexp\"\n\t  export_symbols=\"$output_objdir/$libname.uexp\"\n\t  delfiles=\"$delfiles $export_symbols\"\n\tfi\n\n\torig_export_symbols=\n\tcase $host_os in\n\tcygwin* | mingw* | cegcc*)\n\t  if test -n \"$export_symbols\" && test -z \"$export_symbols_regex\"; then\n\t    # exporting using user supplied symfile\n\t    if test \"x`$SED 1q $export_symbols`\" != xEXPORTS; then\n\t      # and it's NOT already a .def file. Must figure out\n\t      # which of the given symbols are data symbols and tag\n\t      # them as such. So, trigger use of export_symbols_cmds.\n\t      # export_symbols gets reassigned inside the \"prepare\n\t      # the list of exported symbols\" if statement, so the\n\t      # include_expsyms logic still works.\n\t      orig_export_symbols=\"$export_symbols\"\n\t      export_symbols=\n\t      always_export_symbols=yes\n\t    fi\n\t  fi\n\t  ;;\n\tesac\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test \"$always_export_symbols\" = yes || test -n \"$export_symbols_regex\"; then\n\t    func_verbose \"generating symbol list for \\`$libname.la'\"\n\t    export_symbols=\"$output_objdir/$libname.exp\"\n\t    $opt_dry_run || $RM $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $cmds; do\n\t      IFS=\"$save_ifs\"\n\t      eval \"cmd=\\\"$cmd\\\"\"\n\t      func_len \" $cmd\"\n\t      len=$func_len_result\n\t      if test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\tskipped_export=false\n\t      else\n\t\t# The command line is too long to execute in one step.\n\t\tfunc_verbose \"using reloadable object file for export list...\"\n\t\tskipped_export=:\n\t\t# Break out early, otherwise skipped_export may be\n\t\t# set to false by a later but shorter cmd.\n\t\tbreak\n\t      fi\n\t    done\n\t    IFS=\"$save_ifs\"\n\t    if test -n \"$export_symbols_regex\" && test \"X$skipped_export\" != \"X:\"; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  tmp_export_symbols=\"$export_symbols\"\n\t  test -n \"$orig_export_symbols\" && tmp_export_symbols=\"$orig_export_symbols\"\n\t  $opt_dry_run || $ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" && test -n \"$orig_export_symbols\"; then\n\t  # The given exports_symbols file has to be filtered, so filter it.\n\t  func_verbose \"filter symbol list for \\`$libname.la' to tag DATA exports\"\n\t  # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t  # 's' commands which not all seds can handle. GNU sed should be fine\n\t  # though. Also, the filter scales superlinearly with the number of\n\t  # global variables. join(1) would be nice here, but unfortunately\n\t  # isn't a blessed tool.\n\t  $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t  delfiles=\"$delfiles $export_symbols $output_objdir/$libname.filter\"\n\t  export_symbols=$output_objdir/$libname.def\n\t  $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t  case \" $convenience \" in\n\t  *\" $test_deplib \"*) ;;\n\t  *)\n\t    tmp_deplibs=\"$tmp_deplibs $test_deplib\"\n\t    ;;\n\t  esac\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\" &&\n\t    test \"$compiler_needs_object\" = yes &&\n\t    test -z \"$libobjs\"; then\n\t    # extract the archives, so we have objects to list.\n\t    # TODO: could optimize this to just extract one archive.\n\t    whole_archive_flag_spec=\n\t  fi\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval \"libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  else\n\t    gentop=\"$output_objdir/${outputname}x\"\n\t    generated=\"$generated $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    libobjs=\"$libobjs $func_extract_archives_result\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\tfi\n\n\tif test \"$thread_safe\" = yes && test -n \"$thread_safe_flag_spec\"; then\n\t  eval \"flag=\\\"$thread_safe_flag_spec\\\"\"\n\t  linker_flags=\"$linker_flags $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test \"$mode\" = relink; then\n\t  $opt_dry_run || (cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U) || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval \"test_cmds=\\\"$module_expsym_cmds\\\"\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval \"test_cmds=\\\"$module_cmds\\\"\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    eval \"test_cmds=\\\"$archive_expsym_cmds\\\"\"\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    eval \"test_cmds=\\\"$archive_cmds\\\"\"\n\t    cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" &&\n\t   func_len \" $test_cmds\" &&\n\t   len=$func_len_result &&\n\t   test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise\n\t  # or, if using GNU ld and skipped_export is not :, use a linker\n\t  # script.\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  func_basename \"$output\"\n\t  output_la=$func_basename_result\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  last_robj=\n\t  k=1\n\n\t  if test -n \"$save_libobjs\" && test \"X$skipped_export\" != \"X:\" && test \"$with_gnu_ld\" = yes; then\n\t    output=${output_objdir}/${output_la}.lnkscript\n\t    func_verbose \"creating GNU ld script: $output\"\n\t    echo 'INPUT (' > $output\n\t    for obj in $save_libobjs\n\t    do\n\t      $ECHO \"$obj\" >> $output\n\t    done\n\t    echo ')' >> $output\n\t    delfiles=\"$delfiles $output\"\n\t  elif test -n \"$save_libobjs\" && test \"X$skipped_export\" != \"X:\" && test \"X$file_list_spec\" != X; then\n\t    output=${output_objdir}/${output_la}.lnk\n\t    func_verbose \"creating linker input file list: $output\"\n\t    : > $output\n\t    set x $save_libobjs\n\t    shift\n\t    firstobj=\n\t    if test \"$compiler_needs_object\" = yes; then\n\t      firstobj=\"$1 \"\n\t      shift\n\t    fi\n\t    for obj\n\t    do\n\t      $ECHO \"$obj\" >> $output\n\t    done\n\t    delfiles=\"$delfiles $output\"\n\t    output=$firstobj\\\"$file_list_spec$output\\\"\n\t  else\n\t    if test -n \"$save_libobjs\"; then\n\t      func_verbose \"creating reloadable object files...\"\n\t      output=$output_objdir/$output_la-${k}.$objext\n\t      eval \"test_cmds=\\\"$reload_cmds\\\"\"\n\t      func_len \" $test_cmds\"\n\t      len0=$func_len_result\n\t      len=$len0\n\n\t      # Loop over the list of objects to be linked.\n\t      for obj in $save_libobjs\n\t      do\n\t\tfunc_len \" $obj\"\n\t\tfunc_arith $len + $func_len_result\n\t\tlen=$func_arith_result\n\t\tif test \"X$objlist\" = X ||\n\t\t   test \"$len\" -lt \"$max_cmd_len\"; then\n\t\t  func_append objlist \" $obj\"\n\t\telse\n\t\t  # The command $test_cmds is almost too long, add a\n\t\t  # command to the queue.\n\t\t  if test \"$k\" -eq 1 ; then\n\t\t    # The first file doesn't have a previous command to add.\n\t\t    reload_objs=$objlist\n\t\t    eval \"concat_cmds=\\\"$reload_cmds\\\"\"\n\t\t  else\n\t\t    # All subsequent reloadable object files will link in\n\t\t    # the last one created.\n\t\t    reload_objs=\"$objlist $last_robj\"\n\t\t    eval \"concat_cmds=\\\"\\$concat_cmds~$reload_cmds~\\$RM $last_robj\\\"\"\n\t\t  fi\n\t\t  last_robj=$output_objdir/$output_la-${k}.$objext\n\t\t  func_arith $k + 1\n\t\t  k=$func_arith_result\n\t\t  output=$output_objdir/$output_la-${k}.$objext\n\t\t  objlist=\" $obj\"\n\t\t  func_len \" $last_robj\"\n\t\t  func_arith $len0 + $func_len_result\n\t\t  len=$func_arith_result\n\t\tfi\n\t      done\n\t      # Handle the remaining objects by creating one last\n\t      # reloadable object file.  All subsequent reloadable object\n\t      # files will link in the last one created.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      reload_objs=\"$objlist $last_robj\"\n\t      eval \"concat_cmds=\\\"\\${concat_cmds}$reload_cmds\\\"\"\n\t      if test -n \"$last_robj\"; then\n\t        eval \"concat_cmds=\\\"\\${concat_cmds}~\\$RM $last_robj\\\"\"\n\t      fi\n\t      delfiles=\"$delfiles $output\"\n\n\t    else\n\t      output=\n\t    fi\n\n\t    if ${skipped_export-false}; then\n\t      func_verbose \"generating symbol list for \\`$libname.la'\"\n\t      export_symbols=\"$output_objdir/$libname.exp\"\n\t      $opt_dry_run || $RM $export_symbols\n\t      libobjs=$output\n\t      # Append the command to create the export file.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval \"concat_cmds=\\\"\\$concat_cmds$export_symbols_cmds\\\"\"\n\t      if test -n \"$last_robj\"; then\n\t\teval \"concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\"\n\t      fi\n\t    fi\n\n\t    test -n \"$save_libobjs\" &&\n\t      func_verbose \"creating a temporary reloadable object file: $output\"\n\n\t    # Loop through the commands generated above and execute them.\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $concat_cmds; do\n\t      IFS=\"$save_ifs\"\n\t      $opt_silent || {\n\t\t  func_quote_for_expand \"$cmd\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t      }\n\t      $opt_dry_run || eval \"$cmd\" || {\n\t\tlt_exit=$?\n\n\t\t# Restore the uninstalled library and exit\n\t\tif test \"$mode\" = relink; then\n\t\t  ( cd \"$output_objdir\" && \\\n\t\t    $RM \"${realname}T\" && \\\n\t\t    $MV \"${realname}U\" \"$realname\" )\n\t\tfi\n\n\t\texit $lt_exit\n\t      }\n\t    done\n\t    IFS=\"$save_ifs\"\n\n\t    if test -n \"$export_symbols_regex\" && ${skipped_export-false}; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\n          if ${skipped_export-false}; then\n\t    if test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t      tmp_export_symbols=\"$export_symbols\"\n\t      test -n \"$orig_export_symbols\" && tmp_export_symbols=\"$orig_export_symbols\"\n\t      $opt_dry_run || $ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"\n\t    fi\n\n\t    if test -n \"$orig_export_symbols\"; then\n\t      # The given exports_symbols file has to be filtered, so filter it.\n\t      func_verbose \"filter symbol list for \\`$libname.la' to tag DATA exports\"\n\t      # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t      # 's' commands which not all seds can handle. GNU sed should be fine\n\t      # though. Also, the filter scales superlinearly with the number of\n\t      # global variables. join(1) would be nice here, but unfortunately\n\t      # isn't a blessed tool.\n\t      $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t      delfiles=\"$delfiles $export_symbols $output_objdir/$libname.filter\"\n\t      export_symbols=$output_objdir/$libname.def\n\t      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\t    fi\n\t  fi\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval \"libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t    if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t      cmds=$archive_expsym_cmds\n\t    else\n\t      cmds=$archive_cmds\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$delfiles\"; then\n\t  # Append the command to remove temporary files to $cmds.\n\t  eval \"cmds=\\\"\\$cmds~\\$RM $delfiles\\\"\"\n\tfi\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  generated=\"$generated $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  libobjs=\"$libobjs $func_extract_archives_result\"\n\t  test \"X$libobjs\" = \"X \" && libobjs=\n\tfi\n\n\tsave_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  eval \"cmd=\\\"$cmd\\\"\"\n\t  $opt_silent || {\n\t    func_quote_for_expand \"$cmd\"\n\t    eval \"func_echo $func_quote_for_expand_result\"\n\t  }\n\t  $opt_dry_run || eval \"$cmd\" || {\n\t    lt_exit=$?\n\n\t    # Restore the uninstalled library and exit\n\t    if test \"$mode\" = relink; then\n\t      ( cd \"$output_objdir\" && \\\n\t        $RM \"${realname}T\" && \\\n\t\t$MV \"${realname}U\" \"$realname\" )\n\t    fi\n\n\t    exit $lt_exit\n\t  }\n\tdone\n\tIFS=\"$save_ifs\"\n\n\t# Restore the uninstalled library and exit\n\tif test \"$mode\" = relink; then\n\t  $opt_dry_run || (cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname) || exit $?\n\n\t  if test -n \"$convenience\"; then\n\t    if test -z \"$whole_archive_flag_spec\"; then\n\t      func_show_eval '${RM}r \"$gentop\"'\n\t    fi\n\t  fi\n\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    func_show_eval '(cd \"$output_objdir\" && $RM \"$linkname\" && $LN_S \"$realname\" \"$linkname\")' 'exit $?'\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test \"$module\" = yes || test \"$export_dynamic\" = yes; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=\"$soname\"\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tfunc_warning \"\\`-dlopen' is ignored for objects\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"\\`-l' and \\`-L' are ignored for objects\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"\\`-rpath' is ignored for objects\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"\\`-R' is ignored for objects\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info' is ignored for objects\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for objects\"\n\n      case $output in\n      *.lo)\n\ttest -n \"$objs$old_deplibs\" && \\\n\t  func_fatal_error \"cannot build library object \\`$output' from non-libtool objects\"\n\n\tlibobj=$output\n\tfunc_lo2o \"$libobj\"\n\tobj=$func_lo2o_result\n\t;;\n      *)\n\tlibobj=\n\tobj=\"$output\"\n\t;;\n      esac\n\n      # Delete the old objects.\n      $opt_dry_run || $RM $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # reload_cmds runs $LD directly, so let us get rid of\n      # -Wl from whole_archive_flag_spec and hope we can get by with\n      # turning comma into space..\n      wl=\n\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval \"tmp_whole_archive_flags=\\\"$whole_archive_flag_spec\\\"\"\n\t  reload_conv_objs=$reload_objs\\ `$ECHO \"$tmp_whole_archive_flags\" | $SED 's|,| |g'`\n\telse\n\t  gentop=\"$output_objdir/${obj}x\"\n\t  generated=\"$generated $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # Create the old-style object.\n      reload_objs=\"$objs$old_deplibs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.${libext}$/d; /\\.lib$/d; $lo2o\" | $NL2SP`\" $reload_conv_objs\" ### testsuite: skip nested quoting test\n\n      output=\"$obj\"\n      func_execute_cmds \"$reload_cmds\" 'exit $?'\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$build_libtool_libs\" != yes; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $opt_dry_run || echo timestamp > $libobj || exit $?\n\texit $EXIT_SUCCESS\n      fi\n\n      if test -n \"$pic_flag\" || test \"$pic_mode\" != default; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=\"$libobj\"\n\tfunc_execute_cmds \"$reload_cmds\" 'exit $?'\n      fi\n\n      if test -n \"$gentop\"; then\n\tfunc_show_eval '${RM}r \"$gentop\"'\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) func_stripname '' '.exe' \"$output\"\n\t          output=$func_stripname_result.exe;;\n      esac\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info' is ignored for programs\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for programs\"\n\n      test \"$preload\" = yes \\\n        && test \"$dlopen_support\" = unknown \\\n\t&& test \"$dlopen_self\" = unknown \\\n\t&& test \"$dlopen_self_static\" = unknown && \\\n\t  func_warning \"\\`LT_INIT([dlopen])' not used. Assuming no dlopen support.\"\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t;;\n      esac\n\n      case $host in\n      *-*-darwin*)\n\t# Don't allow lazy linking, it breaks C++ global constructors\n\t# But is supposedly fixed on 10.4 or later (yay!).\n\tif test \"$tagname\" = CXX ; then\n\t  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in\n\t    10.[0123])\n\t      compile_command=\"$compile_command ${wl}-bind_at_load\"\n\t      finalize_command=\"$finalize_command ${wl}-bind_at_load\"\n\t    ;;\n\t  esac\n\tfi\n\t# Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t;;\n      esac\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $compile_deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    new_libs=\"$new_libs -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $compile_deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) new_libs=\"$new_libs $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) new_libs=\"$new_libs $deplib\" ;;\n\tesac\n      done\n      compile_deplibs=\"$new_libs\"\n\n\n      compile_command=\"$compile_command $compile_deplibs\"\n      finalize_command=\"$finalize_command $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_rpath=\"$finalize_rpath $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\thardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval \"flag=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t    rpath=\"$rpath $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) perm_rpath=\"$perm_rpath $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`${ECHO} \"$libdir\" | ${SED} -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  ::) dllsearchpath=$libdir;;\n\t  *) dllsearchpath=\"$dllsearchpath:$libdir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) dllsearchpath=\"$dllsearchpath:$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval \"rpath=\\\" $hardcode_libdir_flag_spec\\\"\"\n      fi\n      compile_rpath=\"$rpath\"\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\thardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval \"flag=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t    rpath=\"$rpath $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_perm_rpath=\"$finalize_perm_rpath $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval \"rpath=\\\" $hardcode_libdir_flag_spec\\\"\"\n      fi\n      finalize_rpath=\"$rpath\"\n\n      if test -n \"$libobjs\" && test \"$build_old_libs\" = yes; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$ECHO \"$compile_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$ECHO \"$finalize_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n      fi\n\n      func_generate_dlsyms \"$outputname\" \"@PROGRAM@\" \"no\"\n\n      # template prelinking step\n      if test -n \"$prelink_cmds\"; then\n\tfunc_execute_cmds \"$prelink_cmds\" 'exit $?'\n      fi\n\n      wrappers_required=yes\n      case $host in\n      *cegcc* | *mingw32ce*)\n        # Disable wrappers for cegcc and mingw32ce hosts, we are cross compiling anyway.\n        wrappers_required=no\n        ;;\n      *cygwin* | *mingw* )\n        if test \"$build_libtool_libs\" != yes; then\n          wrappers_required=no\n        fi\n        ;;\n      *)\n        if test \"$need_relink\" = no || test \"$build_libtool_libs\" != yes; then\n          wrappers_required=no\n        fi\n        ;;\n      esac\n      if test \"$wrappers_required\" = no; then\n\t# Replace the output file specification.\n\tcompile_command=`$ECHO \"$compile_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=\"$compile_command$compile_rpath\"\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\texit_status=0\n\tfunc_show_eval \"$link_command\" 'exit_status=$?'\n\n\t# Delete the generated files.\n\tif test -f \"$output_objdir/${outputname}S.${objext}\"; then\n\t  func_show_eval '$RM \"$output_objdir/${outputname}S.${objext}\"'\n\tfi\n\n\texit $exit_status\n      fi\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    rpath=\"$rpath$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    rpath=\"$rpath$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test \"$no_install\" = yes; then\n\t# We don't need to create a wrapper script.\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\t# Replace the output file specification.\n\tlink_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$opt_dry_run || $RM $output\n\t# Link the executable and exit\n\tfunc_show_eval \"$link_command\" 'exit $?'\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$hardcode_action\" = relink; then\n\t# Fast installation is not supported\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\trelink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\n\tfunc_warning \"this platform does not like uninstalled shared libraries\"\n\tfunc_warning \"\\`$output' will be relinked during installation\"\n      else\n\tif test \"$fast_install\" != no; then\n\t  link_command=\"$finalize_var$compile_command$finalize_rpath\"\n\t  if test \"$fast_install\" = yes; then\n\t    relink_command=`$ECHO \"$compile_var$compile_command$compile_rpath\" | $SED 's%@OUTPUT@%\\$progdir/\\$file%g'`\n\t  else\n\t    # fast_install is set to needless\n\t    relink_command=\n\t  fi\n\telse\n\t  link_command=\"$compile_var$compile_command$compile_rpath\"\n\t  relink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\tfi\n      fi\n\n      # Replace the output file specification.\n      link_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $opt_dry_run || $RM $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      func_show_eval \"$link_command\" 'exit $?'\n\n      # Now create the wrapper script.\n      func_verbose \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    func_quote_for_eval \"$var_value\"\n\t    relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\t  fi\n\tdone\n\trelink_command=\"(cd `pwd`; $relink_command)\"\n\trelink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if not in dry run mode.\n      $opt_dry_run || {\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) func_stripname '' '.exe' \"$output\"\n\t         output=$func_stripname_result ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    func_stripname '' '.exe' \"$outputname\"\n\t    outputname=$func_stripname_result ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n\t    func_dirname_and_basename \"$output\" \"\" \".\"\n\t    output_name=$func_basename_result\n\t    output_path=$func_dirname_result\n\t    cwrappersource=\"$output_path/$objdir/lt-$output_name.c\"\n\t    cwrapper=\"$output_path/$output_name.exe\"\n\t    $RM $cwrappersource $cwrapper\n\t    trap \"$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_cwrapperexe_src > $cwrappersource\n\n\t    # The wrapper executable is built using the $host compiler,\n\t    # because it contains $host paths and files. If cross-\n\t    # compiling, it, like the target executable, must be\n\t    # executed on the $host or under an emulation environment.\n\t    $opt_dry_run || {\n\t      $LTCC $LTCFLAGS -o $cwrapper $cwrappersource\n\t      $STRIP $cwrapper\n\t    }\n\n\t    # Now, create the wrapper script for func_source use:\n\t    func_ltwrapper_scriptname $cwrapper\n\t    $RM $func_ltwrapper_scriptname_result\n\t    trap \"$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE\" 1 2 15\n\t    $opt_dry_run || {\n\t      # note: this script will not be executed, so do not chmod.\n\t      if test \"x$build\" = \"x$host\" ; then\n\t\t$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result\n\t      else\n\t\tfunc_emit_wrapper no > $func_ltwrapper_scriptname_result\n\t      fi\n\t    }\n\t  ;;\n\t  * )\n\t    $RM $output\n\t    trap \"$RM $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_wrapper no > $output\n\t    chmod +x $output\n\t  ;;\n\tesac\n      }\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      if test \"$build_libtool_libs\" = convenience; then\n\toldobjs=\"$libobjs_save $symfileobj\"\n\taddlibs=\"$convenience\"\n\tbuild_libtool_libs=no\n      else\n\tif test \"$build_libtool_libs\" = module; then\n\t  oldobjs=\"$libobjs_save\"\n\t  build_libtool_libs=no\n\telse\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\t  if test \"$preload\" = yes && test -f \"$symfileobj\"; then\n\t    oldobjs=\"$oldobjs $symfileobj\"\n\t  fi\n\tfi\n\taddlibs=\"$old_convenience\"\n      fi\n\n      if test -n \"$addlibs\"; then\n\tgentop=\"$output_objdir/${outputname}x\"\n\tgenerated=\"$generated $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\toldobjs=\"$oldobjs $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test \"$build_libtool_libs\" = yes; then\n\tcmds=$old_archive_from_new_cmds\n      else\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  generated=\"$generated $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  oldobjs=\"$oldobjs $func_extract_archives_result\"\n\tfi\n\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      func_basename \"$obj\"\n\t      $ECHO \"$func_basename_result\"\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  echo \"copying selected object files to avoid basename conflicts...\"\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  generated=\"$generated $gentop\"\n\t  func_mkdir_p \"$gentop\"\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_basename \"$obj\"\n\t    objbase=\"$func_basename_result\"\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tfunc_arith $counter + 1\n\t\tcounter=$func_arith_result\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      func_show_eval \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      oldobjs=\"$oldobjs $gentop/$newobj\"\n\t      ;;\n\t    *) oldobjs=\"$oldobjs $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\teval \"cmds=\\\"$old_archive_cmds\\\"\"\n\n\tfunc_len \" $cmds\"\n\tlen=$func_len_result\n\tif test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  func_verbose \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  eval \"test_cmds=\\\"$old_archive_cmds\\\"\"\n\t  func_len \" $test_cmds\"\n\t  len0=$func_len_result\n\t  len=$len0\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_len \" $obj\"\n\t    func_arith $len + $func_len_result\n\t    len=$func_arith_result\n\t    func_append objlist \" $obj\"\n\t    if test \"$len\" -lt \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\" ; then\n\t\tRANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval \"concat_cmds=\\\"\\${concat_cmds}$old_archive_cmds\\\"\"\n\t      objlist=\n\t      len=$len0\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test \"X$oldobjs\" = \"X\" ; then\n\t    eval \"cmds=\\\"\\$concat_cmds\\\"\"\n\t  else\n\t    eval \"cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\"\n\t  fi\n\tfi\n      fi\n      func_execute_cmds \"$cmds\" 'exit $?'\n    done\n\n    test -n \"$generated\" && \\\n      func_show_eval \"${RM}r$generated\"\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test \"$build_old_libs\" = yes && old_library=\"$libname.$libext\"\n      func_verbose \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  func_quote_for_eval \"$var_value\"\n\t  relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      relink_command=\"(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      relink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      if test \"$hardcode_automatic\" = yes ; then\n\trelink_command=\n      fi\n\n      # Only create the output if not a dry run.\n      $opt_dry_run || {\n\tfor installed in no yes; do\n\t  if test \"$installed\" = yes; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=\"$output_objdir/$outputname\"i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tfunc_basename \"$deplib\"\n\t\tname=\"$func_basename_result\"\n\t\tlibdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$deplib' is not a valid libtool archive\"\n\t\tnewdependency_libs=\"$newdependency_libs $libdir/$name\"\n\t\t;;\n\t      *) newdependency_libs=\"$newdependency_libs $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=\"$newdependency_libs\"\n\t    newdlfiles=\n\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t      *.la)\n\t        func_basename \"$lib\"\n\t\tname=\"$func_basename_result\"\n\t\tlibdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\t\tnewdlfiles=\"$newdlfiles $libdir/$name\"\n\t\t;;\n\t      *) newdlfiles=\"$newdlfiles $lib\" ;;\n\t      esac\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t      *.la)\n\t\t# Only pass preopened files to the pseudo-archive (for\n\t\t# eventual linking with the app. that links it) if we\n\t\t# didn't already link the preopened objects directly into\n\t\t# the library:\n\t\tfunc_basename \"$lib\"\n\t\tname=\"$func_basename_result\"\n\t\tlibdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\t\tnewdlprefiles=\"$newdlprefiles $libdir/$name\"\n\t\t;;\n\t      esac\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      newdlfiles=\"$newdlfiles $abs\"\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      newdlprefiles=\"$newdlprefiles $abs\"\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  fi\n\t  $RM $output\n\t  # place dlname in correct position for cygwin\n\t  # In fact, it would be nice if we could use this code for all target\n\t  # systems that can't hard-code library paths into their executables\n\t  # and that have no shared library path variable independent of PATH,\n\t  # but it turns out we can't easily determine that from inspecting\n\t  # libtool variables, so we have to hard-code the OSs to which it\n\t  # applies here; at the moment, that means platforms that use the PE\n\t  # object format with DLL files.  See the long comment at the top of\n\t  # tests/bindir.at for full details.\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll)\n\t      # If a -bindir argument was supplied, place the dll there.\n\t      if test \"x$bindir\" != x ;\n\t      then\n\t\tfunc_relative_path \"$install_libdir\" \"$bindir\"\n\t\ttdlname=$func_relative_path_result$dlname\n\t      else\n\t\t# Otherwise fall back on heuristic.\n\t\ttdlname=../bin/$dlname\n\t      fi\n\t      ;;\n\t  esac\n\t  $ECHO > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Linker flags that can not go in dependency_libs.\ninherited_linker_flags='$new_inherited_linker_flags'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Names of additional weak libraries provided by this library\nweak_library_names='$weak_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test \"$installed\" = no && test \"$need_relink\" = yes; then\n\t    $ECHO >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      }\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      func_show_eval '( cd \"$output_objdir\" && $RM \"$outputname\" && $LN_S \"../$outputname\" \"$outputname\" )' 'exit $?'\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n}\n\n{ test \"$mode\" = link || test \"$mode\" = relink; } &&\n    func_mode_link ${1+\"$@\"}\n\n\n# func_mode_uninstall arg...\nfunc_mode_uninstall ()\n{\n    $opt_debug\n    RM=\"$nonopt\"\n    files=\n    rmforce=\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    for arg\n    do\n      case $arg in\n      -f) RM=\"$RM $arg\"; rmforce=yes ;;\n      -*) RM=\"$RM $arg\" ;;\n      *) files=\"$files $arg\" ;;\n      esac\n    done\n\n    test -z \"$RM\" && \\\n      func_fatal_help \"you must specify an RM program\"\n\n    rmdirs=\n\n    origobjdir=\"$objdir\"\n    for file in $files; do\n      func_dirname \"$file\" \"\" \".\"\n      dir=\"$func_dirname_result\"\n      if test \"X$dir\" = X.; then\n\tobjdir=\"$origobjdir\"\n      else\n\tobjdir=\"$dir/$origobjdir\"\n      fi\n      func_basename \"$file\"\n      name=\"$func_basename_result\"\n      test \"$mode\" = uninstall && objdir=\"$dir\"\n\n      # Remember objdir for removal later, being careful to avoid duplicates\n      if test \"$mode\" = clean; then\n\tcase \" $rmdirs \" in\n\t  *\" $objdir \"*) ;;\n\t  *) rmdirs=\"$rmdirs $objdir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if { test -L \"$file\"; } >/dev/null 2>&1 ||\n\t { test -h \"$file\"; } >/dev/null 2>&1 ||\n\t test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif test \"$rmforce\" = yes; then\n\tcontinue\n      fi\n\n      rmfiles=\"$file\"\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif func_lalib_p \"$file\"; then\n\t  func_source $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    rmfiles=\"$rmfiles $objdir/$n\"\n\t  done\n\t  test -n \"$old_library\" && rmfiles=\"$rmfiles $objdir/$old_library\"\n\n\t  case \"$mode\" in\n\t  clean)\n\t    case \"  $library_names \" in\n\t    # \"  \" in the beginning catches empty $dlname\n\t    *\" $dlname \"*) ;;\n\t    *) rmfiles=\"$rmfiles $objdir/$dlname\" ;;\n\t    esac\n\t    test -n \"$libdir\" && rmfiles=\"$rmfiles $objdir/$name $objdir/${name}i\"\n\t    ;;\n\t  uninstall)\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      func_execute_cmds \"$postuninstall_cmds\" 'test \"$rmforce\" = yes || exit_status=1'\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      func_execute_cmds \"$old_postuninstall_cmds\" 'test \"$rmforce\" = yes || exit_status=1'\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t    ;;\n\t  esac\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif func_lalib_p \"$file\"; then\n\n\t  # Read the .lo file\n\t  func_source $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" &&\n\t     test \"$pic_object\" != none; then\n\t    rmfiles=\"$rmfiles $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" &&\n\t     test \"$non_pic_object\" != none; then\n\t    rmfiles=\"$rmfiles $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test \"$mode\" = clean ; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    func_stripname '' '.exe' \"$file\"\n\t    file=$func_stripname_result\n\t    func_stripname '' '.exe' \"$name\"\n\t    noexename=$func_stripname_result\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    rmfiles=\"$rmfiles $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if func_ltwrapper_p \"$file\"; then\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      relink_command=\n\t      func_source $func_ltwrapper_scriptname_result\n\t      rmfiles=\"$rmfiles $func_ltwrapper_scriptname_result\"\n\t    else\n\t      relink_command=\n\t      func_source $dir/$noexename\n\t    fi\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    rmfiles=\"$rmfiles $objdir/$name $objdir/${name}S.${objext}\"\n\t    if test \"$fast_install\" = yes && test -n \"$relink_command\"; then\n\t      rmfiles=\"$rmfiles $objdir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\" ; then\n\t      rmfiles=\"$rmfiles $objdir/lt-${noexename}.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      func_show_eval \"$RM $rmfiles\" 'exit_status=1'\n    done\n    objdir=\"$origobjdir\"\n\n    # Try to remove the ${objdir}s in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\tfunc_show_eval \"rmdir $dir >/dev/null 2>&1\"\n      fi\n    done\n\n    exit $exit_status\n}\n\n{ test \"$mode\" = uninstall || test \"$mode\" = clean; } &&\n    func_mode_uninstall ${1+\"$@\"}\n\ntest -z \"$mode\" && {\n  help=\"$generic_help\"\n  func_fatal_help \"you must specify a MODE\"\n}\n\ntest -z \"$exec_cmd\" && \\\n  func_fatal_help \"invalid operation mode \\`$mode'\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec \"$exec_cmd\"\n  exit $EXIT_FAILURE\nfi\n\nexit $exit_status\n\n\n# The TAGs below are defined such that we never get into a situation\n# in which we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\nbuild_libtool_libs=no\nbuild_old_libs=yes\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\nbuild_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n# vi:sw=2\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/plugin.c": "/* Support for GCC plugin mechanism.\n   Copyright (C) 2009-2013 Free Software Foundation, Inc.\n\nThis file is part of GCC.\n\nGCC is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 3, or (at your option)\nany later version.\n\nGCC is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with GCC; see the file COPYING3.  If not see\n<http://www.gnu.org/licenses/>.  */\n\n/* This file contains the support for GCC plugin mechanism based on the\n   APIs described in doc/plugin.texi.  */\n\n#include \"config.h\"\n#include \"system.h\"\n#include \"coretypes.h\"\n#include \"diagnostic-core.h\"\n#include \"tree.h\"\n#include \"tree-pass.h\"\n#include \"intl.h\"\n#include \"plugin.h\"\n#include \"ggc.h\"\n\n#ifdef ENABLE_PLUGIN\n#include \"plugin-version.h\"\n#endif\n\n#define GCC_PLUGIN_STRINGIFY0(X) #X\n#define GCC_PLUGIN_STRINGIFY1(X) GCC_PLUGIN_STRINGIFY0 (X)\n\n/* Event names as strings.  Keep in sync with enum plugin_event.  */\nstatic const char *plugin_event_name_init[] =\n{\n# define DEFEVENT(NAME) GCC_PLUGIN_STRINGIFY1 (NAME),\n# include \"plugin.def\"\n# undef DEFEVENT\n};\n\n/* A printf format large enough for the largest event above.  */\n#define FMT_FOR_PLUGIN_EVENT \"%-32s\"\n\nconst char **plugin_event_name = plugin_event_name_init;\n\n/* A hash table to map event names to the position of the names in the\n   plugin_event_name table.  */\nstatic htab_t event_tab;\n\n/* Keep track of the limit of allocated events and space ready for\n   allocating events.  */\nstatic int event_last = PLUGIN_EVENT_FIRST_DYNAMIC;\nstatic int event_horizon = PLUGIN_EVENT_FIRST_DYNAMIC;\n\n/* Hash table for the plugin_name_args objects created during command-line\n   parsing.  */\nstatic htab_t plugin_name_args_tab = NULL;\n\n/* List node for keeping track of plugin-registered callback.  */\nstruct callback_info\n{\n  const char *plugin_name;   /* Name of plugin that registers the callback.  */\n  plugin_callback_func func; /* Callback to be called.  */\n  void *user_data;           /* plugin-specified data.  */\n  struct callback_info *next;\n};\n\n/* An array of lists of 'callback_info' objects indexed by the event id.  */\nstatic struct callback_info *plugin_callbacks_init[PLUGIN_EVENT_FIRST_DYNAMIC];\nstatic struct callback_info **plugin_callbacks = plugin_callbacks_init;\n\n/* For invoke_plugin_callbacks(), see plugin.h.  */\nbool flag_plugin_added = false;\n\n#ifdef ENABLE_PLUGIN\n/* Each plugin should define an initialization function with exactly\n   this name.  */\nstatic const char *str_plugin_init_func_name = \"plugin_init\";\n\n/* Each plugin should define this symbol to assert that it is\n   distributed under a GPL-compatible license.  */\nstatic const char *str_license = \"plugin_is_GPL_compatible\";\n#endif\n\n/* Helper function for the hash table that compares the base_name of the\n   existing entry (S1) with the given string (S2).  */\n\nstatic int\nhtab_str_eq (const void *s1, const void *s2)\n{\n  const struct plugin_name_args *plugin = (const struct plugin_name_args *) s1;\n  return !strcmp (plugin->base_name, (const char *) s2);\n}\n\n\n/* Given a plugin's full-path name FULL_NAME, e.g. /pass/to/NAME.so,\n   return NAME.  */\n\nstatic char *\nget_plugin_base_name (const char *full_name)\n{\n  /* First get the base name part of the full-path name, i.e. NAME.so.  */\n  char *base_name = xstrdup (lbasename (full_name));\n\n  /* Then get rid of '.so' part of the name.  */\n  strip_off_ending (base_name, strlen (base_name));\n\n  return base_name;\n}\n\n\n/* Create a plugin_name_args object for the given plugin and insert it\n   to the hash table. This function is called when\n   -fplugin=/path/to/NAME.so or -fplugin=NAME option is processed.  */\n\nvoid\nadd_new_plugin (const char* plugin_name)\n{\n  struct plugin_name_args *plugin;\n  void **slot;\n  char *base_name;\n  bool name_is_short;\n  const char *pc;\n\n  flag_plugin_added = true;\n\n  /* Replace short names by their full path when relevant.  */\n  name_is_short  = !IS_ABSOLUTE_PATH (plugin_name);\n  for (pc = plugin_name; name_is_short && *pc; pc++)\n    if (*pc == '.' || IS_DIR_SEPARATOR (*pc))\n      name_is_short = false;\n\n  if (name_is_short)\n    {\n      base_name = CONST_CAST (char*, plugin_name);\n      /* FIXME: the \".so\" suffix is currently builtin, since plugins\n\t only work on ELF host systems like e.g. Linux or Solaris.\n\t When plugins shall be available on non ELF systems such as\n\t Windows or MacOS, this code has to be greatly improved.  */\n      plugin_name = concat (default_plugin_dir_name (), \"/\",\n\t\t\t    plugin_name, \".so\", NULL);\n      if (access (plugin_name, R_OK))\n\tfatal_error\n\t  (\"inaccessible plugin file %s expanded from short plugin name %s: %m\",\n\t   plugin_name, base_name);\n    }\n  else\n    base_name = get_plugin_base_name (plugin_name);\n\n  /* If this is the first -fplugin= option we encounter, create\n     'plugin_name_args_tab' hash table.  */\n  if (!plugin_name_args_tab)\n    plugin_name_args_tab = htab_create (10, htab_hash_string, htab_str_eq,\n                                        NULL);\n\n  slot = htab_find_slot (plugin_name_args_tab, base_name, INSERT);\n\n  /* If the same plugin (name) has been specified earlier, either emit an\n     error or a warning message depending on if they have identical full\n     (path) names.  */\n  if (*slot)\n    {\n      plugin = (struct plugin_name_args *) *slot;\n      if (strcmp (plugin->full_name, plugin_name))\n        error (\"plugin %s was specified with different paths:\\n%s\\n%s\",\n               plugin->base_name, plugin->full_name, plugin_name);\n      return;\n    }\n\n  plugin = XCNEW (struct plugin_name_args);\n  plugin->base_name = base_name;\n  plugin->full_name = plugin_name;\n\n  *slot = plugin;\n}\n\n\n/* Parse the -fplugin-arg-<name>-<key>[=<value>] option and create a\n   'plugin_argument' object for the parsed key-value pair. ARG is\n   the <name>-<key>[=<value>] part of the option.  */\n\nvoid\nparse_plugin_arg_opt (const char *arg)\n{\n  size_t len = 0, name_len = 0, key_len = 0, value_len = 0;\n  const char *ptr, *name_start = arg, *key_start = NULL, *value_start = NULL;\n  char *name, *key, *value;\n  void **slot;\n  bool name_parsed = false, key_parsed = false;\n\n  /* Iterate over the ARG string and identify the starting character position\n     of 'name', 'key', and 'value' and their lengths.  */\n  for (ptr = arg; *ptr; ++ptr)\n    {\n      /* Only the first '-' encountered is considered a separator between\n         'name' and 'key'. All the subsequent '-'s are considered part of\n         'key'. For example, given -fplugin-arg-foo-bar-primary-key=value,\n         the plugin name is 'foo' and the key is 'bar-primary-key'.  */\n      if (*ptr == '-' && !name_parsed)\n        {\n          name_len = len;\n          len = 0;\n          key_start = ptr + 1;\n          name_parsed = true;\n          continue;\n        }\n      else if (*ptr == '=')\n        {\n          if (key_parsed)\n            {\n              error (\"malformed option -fplugin-arg-%s (multiple '=' signs)\",\n\t\t     arg);\n              return;\n            }\n          key_len = len;\n          len = 0;\n          value_start = ptr + 1;\n          key_parsed = true;\n          continue;\n        }\n      else\n        ++len;\n    }\n\n  if (!key_start)\n    {\n      error (\"malformed option -fplugin-arg-%s (missing -<key>[=<value>])\",\n             arg);\n      return;\n    }\n\n  /* If the option doesn't contain the 'value' part, LEN is the KEY_LEN.\n     Otherwise, it is the VALUE_LEN.  */\n  if (!value_start)\n    key_len = len;\n  else\n    value_len = len;\n\n  name = XNEWVEC (char, name_len + 1);\n  strncpy (name, name_start, name_len);\n  name[name_len] = '\\0';\n\n  /* Check if the named plugin has already been specified earlier in the\n     command-line.  */\n  if (plugin_name_args_tab\n      && ((slot = htab_find_slot (plugin_name_args_tab, name, NO_INSERT))\n          != NULL))\n    {\n      struct plugin_name_args *plugin = (struct plugin_name_args *) *slot;\n\n      key = XNEWVEC (char, key_len + 1);\n      strncpy (key, key_start, key_len);\n      key[key_len] = '\\0';\n      if (value_start)\n        {\n          value = XNEWVEC (char, value_len + 1);\n          strncpy (value, value_start, value_len);\n          value[value_len] = '\\0';\n        }\n      else\n        value = NULL;\n\n      /* Create a plugin_argument object for the parsed key-value pair.\n         If there are already arguments for this plugin, we will need to\n         adjust the argument array size by creating a new array and deleting\n         the old one. If the performance ever becomes an issue, we can\n         change the code by pre-allocating a larger array first.  */\n      if (plugin->argc > 0)\n        {\n          struct plugin_argument *args = XNEWVEC (struct plugin_argument,\n                                                  plugin->argc + 1);\n          memcpy (args, plugin->argv,\n                  sizeof (struct plugin_argument) * plugin->argc);\n          XDELETEVEC (plugin->argv);\n          plugin->argv = args;\n          ++plugin->argc;\n        }\n      else\n        {\n          gcc_assert (plugin->argv == NULL);\n          plugin->argv = XNEWVEC (struct plugin_argument, 1);\n          plugin->argc = 1;\n        }\n\n      plugin->argv[plugin->argc - 1].key = key;\n      plugin->argv[plugin->argc - 1].value = value;\n    }\n  else\n    error (\"plugin %s should be specified before -fplugin-arg-%s \"\n           \"in the command line\", name, arg);\n\n  /* We don't need the plugin's name anymore. Just release it.  */\n  XDELETEVEC (name);\n}\n\n/* Register additional plugin information. NAME is the name passed to\n   plugin_init. INFO is the information that should be registered. */\n\nstatic void\nregister_plugin_info (const char* name, struct plugin_info *info)\n{\n  void **slot = htab_find_slot (plugin_name_args_tab, name, NO_INSERT);\n  struct plugin_name_args *plugin = (struct plugin_name_args *) *slot;\n  plugin->version = info->version;\n  plugin->help = info->help;\n}\n\n/* Helper function for the event hash table that compares the name of an\n   existing entry (E1) with the given string (S2).  */\n\nstatic int\nhtab_event_eq (const void *e1, const void *s2)\n{\n  const char *s1= *(const char * const *) e1;\n  return !strcmp (s1, (const char *) s2);\n}\n\n/* Look up the event id for NAME.  If the name is not found, return -1\n   if INSERT is NO_INSERT.  */\n\nint\nget_named_event_id (const char *name, enum insert_option insert)\n{\n  void **slot;\n\n  if (!event_tab)\n    {\n      int i;\n\n      event_tab = htab_create (150, htab_hash_string, htab_event_eq, NULL);\n      for (i = 0; i < event_last; i++)\n\t{\n\t  slot = htab_find_slot (event_tab, plugin_event_name[i], INSERT);\n\t  gcc_assert (*slot == HTAB_EMPTY_ENTRY);\n\t  *slot = &plugin_event_name[i];\n\t}\n    }\n  slot = htab_find_slot (event_tab, name, insert);\n  if (slot == NULL)\n    return -1;\n  if (*slot != HTAB_EMPTY_ENTRY)\n    return (const char **) *slot - &plugin_event_name[0];\n\n  if (event_last >= event_horizon)\n    {\n      event_horizon = event_last * 2;\n      if (plugin_event_name == plugin_event_name_init)\n\t{\n\t  plugin_event_name = XNEWVEC (const char *, event_horizon);\n\t  memcpy (plugin_event_name, plugin_event_name_init,\n\t\t  sizeof plugin_event_name_init);\n\t  plugin_callbacks = XNEWVEC (struct callback_info *, event_horizon);\n\t  memcpy (plugin_callbacks, plugin_callbacks_init,\n\t\t  sizeof plugin_callbacks_init);\n\t}\n      else\n\t{\n\t  plugin_event_name\n\t    = XRESIZEVEC (const char *, plugin_event_name, event_horizon);\n\t  plugin_callbacks = XRESIZEVEC (struct callback_info *,\n\t\t\t\t\t plugin_callbacks, event_horizon);\n\t}\n      /* All the pointers in the hash table will need to be updated.  */\n      htab_delete (event_tab);\n      event_tab = NULL;\n    }\n  else\n    *slot = &plugin_event_name[event_last];\n  plugin_event_name[event_last] = name;\n  return event_last++;\n}\n\n/* Called from the plugin's initialization code. Register a single callback.\n   This function can be called multiple times.\n\n   PLUGIN_NAME - display name for this plugin\n   EVENT       - which event the callback is for\n   CALLBACK    - the callback to be called at the event\n   USER_DATA   - plugin-provided data   */\n\nvoid\nregister_callback (const char *plugin_name,\n\t\t   int event,\n                   plugin_callback_func callback,\n                   void *user_data)\n{\n  switch (event)\n    {\n      case PLUGIN_PASS_MANAGER_SETUP:\n\tgcc_assert (!callback);\n        register_pass ((struct register_pass_info *) user_data);\n        break;\n      case PLUGIN_INFO:\n\tgcc_assert (!callback);\n\tregister_plugin_info (plugin_name, (struct plugin_info *) user_data);\n\tbreak;\n      case PLUGIN_REGISTER_GGC_ROOTS:\n\tgcc_assert (!callback);\n        ggc_register_root_tab ((const struct ggc_root_tab*) user_data);\n\tbreak;\n      case PLUGIN_REGISTER_GGC_CACHES:\n\tgcc_assert (!callback);\n        ggc_register_cache_tab ((const struct ggc_cache_tab*) user_data);\n\tbreak;\n      case PLUGIN_EVENT_FIRST_DYNAMIC:\n      default:\n\tif (event < PLUGIN_EVENT_FIRST_DYNAMIC || event >= event_last)\n\t  {\n\t    error (\"unknown callback event registered by plugin %s\",\n\t\t   plugin_name);\n\t    return;\n\t  }\n      /* Fall through.  */\n      case PLUGIN_FINISH_TYPE:\n      case PLUGIN_FINISH_DECL:\n      case PLUGIN_START_UNIT:\n      case PLUGIN_FINISH_UNIT:\n      case PLUGIN_PRE_GENERICIZE:\n      case PLUGIN_GGC_START:\n      case PLUGIN_GGC_MARKING:\n      case PLUGIN_GGC_END:\n      case PLUGIN_ATTRIBUTES:\n      case PLUGIN_PRAGMAS:\n      case PLUGIN_FINISH:\n      case PLUGIN_ALL_PASSES_START:\n      case PLUGIN_ALL_PASSES_END:\n      case PLUGIN_ALL_IPA_PASSES_START:\n      case PLUGIN_ALL_IPA_PASSES_END:\n      case PLUGIN_OVERRIDE_GATE:\n      case PLUGIN_PASS_EXECUTION:\n      case PLUGIN_EARLY_GIMPLE_PASSES_START:\n      case PLUGIN_EARLY_GIMPLE_PASSES_END:\n      case PLUGIN_NEW_PASS:\n        {\n          struct callback_info *new_callback;\n          if (!callback)\n            {\n              error (\"plugin %s registered a null callback function \"\n\t\t     \"for event %s\", plugin_name, plugin_event_name[event]);\n              return;\n            }\n          new_callback = XNEW (struct callback_info);\n          new_callback->plugin_name = plugin_name;\n          new_callback->func = callback;\n          new_callback->user_data = user_data;\n          new_callback->next = plugin_callbacks[event];\n          plugin_callbacks[event] = new_callback;\n        }\n        break;\n    }\n}\n\n/* Remove a callback for EVENT which has been registered with for a plugin\n   PLUGIN_NAME.  Return PLUGEVT_SUCCESS if a matching callback was\n   found & removed, PLUGEVT_NO_CALLBACK if the event does not have a matching\n   callback, and PLUGEVT_NO_SUCH_EVENT if EVENT is invalid.  */\nint\nunregister_callback (const char *plugin_name, int event)\n{\n  struct callback_info *callback, **cbp;\n\n  if (event >= event_last)\n    return PLUGEVT_NO_SUCH_EVENT;\n\n  for (cbp = &plugin_callbacks[event]; (callback = *cbp); cbp = &callback->next)\n    if (strcmp (callback->plugin_name, plugin_name) == 0)\n      {\n\t*cbp = callback->next;\n\treturn PLUGEVT_SUCCESS;\n      }\n  return PLUGEVT_NO_CALLBACK;\n}\n\n/* Invoke all plugin callbacks registered with the specified event,\n   called from invoke_plugin_callbacks().  */\n\nint\ninvoke_plugin_callbacks_full (int event, void *gcc_data)\n{\n  int retval = PLUGEVT_SUCCESS;\n\n  timevar_push (TV_PLUGIN_RUN);\n\n  switch (event)\n    {\n      case PLUGIN_EVENT_FIRST_DYNAMIC:\n      default:\n\tgcc_assert (event >= PLUGIN_EVENT_FIRST_DYNAMIC);\n\tgcc_assert (event < event_last);\n      /* Fall through.  */\n      case PLUGIN_FINISH_TYPE:\n      case PLUGIN_FINISH_DECL:\n      case PLUGIN_START_UNIT:\n      case PLUGIN_FINISH_UNIT:\n      case PLUGIN_PRE_GENERICIZE:\n      case PLUGIN_ATTRIBUTES:\n      case PLUGIN_PRAGMAS:\n      case PLUGIN_FINISH:\n      case PLUGIN_GGC_START:\n      case PLUGIN_GGC_MARKING:\n      case PLUGIN_GGC_END:\n      case PLUGIN_ALL_PASSES_START:\n      case PLUGIN_ALL_PASSES_END:\n      case PLUGIN_ALL_IPA_PASSES_START:\n      case PLUGIN_ALL_IPA_PASSES_END:\n      case PLUGIN_OVERRIDE_GATE:\n      case PLUGIN_PASS_EXECUTION:\n      case PLUGIN_EARLY_GIMPLE_PASSES_START:\n      case PLUGIN_EARLY_GIMPLE_PASSES_END:\n      case PLUGIN_NEW_PASS:\n        {\n          /* Iterate over every callback registered with this event and\n             call it.  */\n          struct callback_info *callback = plugin_callbacks[event];\n\n\t  if (!callback)\n\t    retval = PLUGEVT_NO_CALLBACK;\n          for ( ; callback; callback = callback->next)\n            (*callback->func) (gcc_data, callback->user_data);\n        }\n        break;\n\n      case PLUGIN_PASS_MANAGER_SETUP:\n      case PLUGIN_REGISTER_GGC_ROOTS:\n      case PLUGIN_REGISTER_GGC_CACHES:\n        gcc_assert (false);\n    }\n\n  timevar_pop (TV_PLUGIN_RUN);\n  return retval;\n}\n\n#ifdef ENABLE_PLUGIN\n/* We need a union to cast dlsym return value to a function pointer\n   as ISO C forbids assignment between function pointer and 'void *'.\n   Use explicit union instead of __extension__(<union_cast>) for\n   portability.  */\n#define PTR_UNION_TYPE(TOTYPE) union { void *_q; TOTYPE _nq; }\n#define PTR_UNION_AS_VOID_PTR(NAME) (NAME._q)\n#define PTR_UNION_AS_CAST_PTR(NAME) (NAME._nq)\n\n/* Try to initialize PLUGIN. Return true if successful. */\n\nstatic bool\ntry_init_one_plugin (struct plugin_name_args *plugin)\n{\n  void *dl_handle;\n  plugin_init_func plugin_init;\n  const char *err;\n  PTR_UNION_TYPE (plugin_init_func) plugin_init_union;\n\n  /* We use RTLD_NOW to accelerate binding and detect any mismatch\n     between the API expected by the plugin and the GCC API; we use\n     RTLD_GLOBAL which is useful to plugins which themselves call\n     dlopen.  */\n  dl_handle = dlopen (plugin->full_name, RTLD_NOW | RTLD_GLOBAL);\n  if (!dl_handle)\n    {\n      error (\"cannot load plugin %s\\n%s\", plugin->full_name, dlerror ());\n      return false;\n    }\n\n  /* Clear any existing error.  */\n  dlerror ();\n\n  /* Check the plugin license.  */\n  if (dlsym (dl_handle, str_license) == NULL)\n    fatal_error (\"plugin %s is not licensed under a GPL-compatible license\\n\"\n\t\t \"%s\", plugin->full_name, dlerror ());\n\n  PTR_UNION_AS_VOID_PTR (plugin_init_union) =\n      dlsym (dl_handle, str_plugin_init_func_name);\n  plugin_init = PTR_UNION_AS_CAST_PTR (plugin_init_union);\n\n  if ((err = dlerror ()) != NULL)\n    {\n      error (\"cannot find %s in plugin %s\\n%s\", str_plugin_init_func_name,\n             plugin->full_name, err);\n      return false;\n    }\n\n  /* Call the plugin-provided initialization routine with the arguments.  */\n  if ((*plugin_init) (plugin, &gcc_version))\n    {\n      error (\"fail to initialize plugin %s\", plugin->full_name);\n      return false;\n    }\n\n  return true;\n}\n\n\n/* Routine to dlopen and initialize one plugin. This function is passed to\n   (and called by) the hash table traverse routine. Return 1 for the\n   htab_traverse to continue scan, 0 to stop.\n\n   SLOT - slot of the hash table element\n   INFO - auxiliary pointer handed to hash table traverse routine\n          (unused in this function)  */\n\nstatic int\ninit_one_plugin (void **slot, void * ARG_UNUSED (info))\n{\n  struct plugin_name_args *plugin = (struct plugin_name_args *) *slot;\n  bool ok = try_init_one_plugin (plugin);\n  if (!ok)\n    {\n      htab_remove_elt (plugin_name_args_tab, plugin->base_name);\n      XDELETE (plugin);\n    }\n  return 1;\n}\n\n#endif\t/* ENABLE_PLUGIN  */\n\n/* Main plugin initialization function.  Called from compile_file() in\n   toplev.c.  */\n\nvoid\ninitialize_plugins (void)\n{\n  /* If no plugin was specified in the command-line, simply return.  */\n  if (!plugin_name_args_tab)\n    return;\n\n  timevar_push (TV_PLUGIN_INIT);\n\n#ifdef ENABLE_PLUGIN\n  /* Traverse and initialize each plugin specified in the command-line.  */\n  htab_traverse_noresize (plugin_name_args_tab, init_one_plugin, NULL);\n#endif\n\n  timevar_pop (TV_PLUGIN_INIT);\n}\n\n/* Release memory used by one plugin. */\n\nstatic int\nfinalize_one_plugin (void **slot, void * ARG_UNUSED (info))\n{\n  struct plugin_name_args *plugin = (struct plugin_name_args *) *slot;\n  XDELETE (plugin);\n  return 1;\n}\n\n/* Free memory allocated by the plugin system. */\n\nvoid\nfinalize_plugins (void)\n{\n  if (!plugin_name_args_tab)\n    return;\n\n  /* We can now delete the plugin_name_args object as it will no longer\n     be used. Note that base_name and argv fields (both of which were also\n     dynamically allocated) are not freed as they could still be used by\n     the plugin code.  */\n\n  htab_traverse_noresize (plugin_name_args_tab, finalize_one_plugin, NULL);\n\n  /* PLUGIN_NAME_ARGS_TAB is no longer needed, just delete it.  */\n  htab_delete (plugin_name_args_tab);\n  plugin_name_args_tab = NULL;\n}\n\n/* Used to pass options to htab_traverse callbacks. */\n\nstruct print_options\n{\n  FILE *file;\n  const char *indent;\n};\n\n/* Print the version of one plugin. */\n\nstatic int\nprint_version_one_plugin (void **slot, void *data)\n{\n  struct print_options *opt = (struct print_options *) data;\n  struct plugin_name_args *plugin = (struct plugin_name_args *) *slot;\n  const char *version = plugin->version ? plugin->version : \"Unknown version.\";\n\n  fprintf (opt->file, \" %s%s: %s\\n\", opt->indent, plugin->base_name, version);\n  return 1;\n}\n\n/* Print the version of each plugin. */\n\nvoid\nprint_plugins_versions (FILE *file, const char *indent)\n{\n  struct print_options opt;\n  opt.file = file;\n  opt.indent = indent;\n  if (!plugin_name_args_tab || htab_elements (plugin_name_args_tab) == 0)\n    return;\n\n  fprintf (file, \"%sVersions of loaded plugins:\\n\", indent);\n  htab_traverse_noresize (plugin_name_args_tab, print_version_one_plugin, &opt);\n}\n\n/* Print help for one plugin. SLOT is the hash table slot. DATA is the\n   argument to htab_traverse_noresize. */\n\nstatic int\nprint_help_one_plugin (void **slot, void *data)\n{\n  struct print_options *opt = (struct print_options *) data;\n  struct plugin_name_args *plugin = (struct plugin_name_args *) *slot;\n  const char *help = plugin->help ? plugin->help : \"No help available .\";\n\n  char *dup = xstrdup (help);\n  char *p, *nl;\n  fprintf (opt->file, \" %s%s:\\n\", opt->indent, plugin->base_name);\n\n  for (p = nl = dup; nl; p = nl)\n    {\n      nl = strchr (nl, '\\n');\n      if (nl)\n\t{\n\t  *nl = '\\0';\n\t  nl++;\n\t}\n      fprintf (opt->file, \"   %s %s\\n\", opt->indent, p);\n    }\n\n  free (dup);\n  return 1;\n}\n\n/* Print help for each plugin. The output goes to FILE and every line starts\n   with INDENT. */\n\nvoid\nprint_plugins_help (FILE *file, const char *indent)\n{\n  struct print_options opt;\n  opt.file = file;\n  opt.indent = indent;\n  if (!plugin_name_args_tab || htab_elements (plugin_name_args_tab) == 0)\n    return;\n\n  fprintf (file, \"%sHelp for the loaded plugins:\\n\", indent);\n  htab_traverse_noresize (plugin_name_args_tab, print_help_one_plugin, &opt);\n}\n\n\n/* Return true if plugins have been loaded.  */\n\nbool\nplugins_active_p (void)\n{\n  int event;\n\n  for (event = PLUGIN_PASS_MANAGER_SETUP; event < event_last; event++)\n    if (plugin_callbacks[event])\n      return true;\n\n  return false;\n}\n\n\n/* Dump to FILE the names and associated events for all the active\n   plugins.  */\n\nDEBUG_FUNCTION void\ndump_active_plugins (FILE *file)\n{\n  int event;\n\n  if (!plugins_active_p ())\n    return;\n\n  fprintf (file, FMT_FOR_PLUGIN_EVENT \" | %s\\n\", _(\"Event\"), _(\"Plugins\"));\n  for (event = PLUGIN_PASS_MANAGER_SETUP; event < event_last; event++)\n    if (plugin_callbacks[event])\n      {\n\tstruct callback_info *ci;\n\n\tfprintf (file, FMT_FOR_PLUGIN_EVENT \" |\", plugin_event_name[event]);\n\n\tfor (ci = plugin_callbacks[event]; ci; ci = ci->next)\n\t  fprintf (file, \" %s\", ci->plugin_name);\n\n\tputc('\\n', file);\n      }\n}\n\n\n/* Dump active plugins to stderr.  */\n\nDEBUG_FUNCTION void\ndebug_active_plugins (void)\n{\n  dump_active_plugins (stderr);\n}\n\n/* Give a warning if plugins are present, before an ICE message asking\n   to submit a bug report.  */\n\nvoid\nwarn_if_plugins (void)\n{\n  if (plugins_active_p ())\n    {\n      fnotice (stderr, \"*** WARNING *** there are active plugins, do not report\"\n\t       \" this as a bug unless you can reproduce it without enabling\"\n\t       \" any plugins.\\n\");\n      dump_active_plugins (stderr);\n    }\n\n}\n\n/* Likewise, as a callback from the diagnostics code.  */\n\nvoid\nplugins_internal_error_function (diagnostic_context *context ATTRIBUTE_UNUSED,\n\t\t\t\t const char *msgid ATTRIBUTE_UNUSED,\n\t\t\t\t va_list *ap ATTRIBUTE_UNUSED)\n{\n  warn_if_plugins ();\n}\n\n/* The default version check. Compares every field in VERSION. */\n\nbool\nplugin_default_version_check (struct plugin_gcc_version *gcc_version,\n\t\t\t      struct plugin_gcc_version *plugin_version)\n{\n  if (!gcc_version || !plugin_version)\n    return false;\n\n  if (strcmp (gcc_version->basever, plugin_version->basever))\n    return false;\n  if (strcmp (gcc_version->datestamp, plugin_version->datestamp))\n    return false;\n  if (strcmp (gcc_version->devphase, plugin_version->devphase))\n    return false;\n  if (strcmp (gcc_version->revision, plugin_version->revision))\n    return false;\n  if (strcmp (gcc_version->configuration_arguments,\n\t      plugin_version->configuration_arguments))\n    return false;\n  return true;\n}\n\n\n/* Return the current value of event_last, so that plugins which provide\n   additional functionality for events for the benefit of high-level plugins\n   know how many valid entries plugin_event_name holds.  */\n\nint\nget_event_last (void)\n{\n  return event_last;\n}\n\n\n/* Retrieve the default plugin directory.  The gcc driver should have passed\n   it as -iplugindir <dir> to the cc1 program, and it is queriable through the\n   -print-file-name=plugin option to gcc.  */\nconst char*\ndefault_plugin_dir_name (void)\n{\n  if (!plugindir_string)\n    fatal_error (\"-iplugindir <dir> option not passed from the gcc driver\");\n  return plugindir_string;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/config/vms/vms-crtlmap.map": "# Standard C names to DEC-C names map table.\n# All names in the DEC-C shared image (shared library) are prefixed\n# with decc$ (this is the standard vms convention for names in public\n# shared libraries).  This conversion is done by the compiler for all\n# languages.\n#\n# Currently contains only a partial list, e.g. those functions use\n# in GNAT and GCC.\n#\n# File format:\n# - Empty lines are ignored.\n# - Comment lines start with '#' in the first column.\n# - map lines consist in an identifier optionnaly followed by at most 2\n#   space-separated flags.\n# Flags are described in vms.c (prefixed by VMS_CRTL_).\n#\n# Keep entries alpha-sorted - this is enforced by the awk script.\n#\n__32_getpwent\n__32_getpwnam\n__32_getpwuid\n__32_sigaction\n__32_signal\n__32_ssignal\n__64_getpwent\n__64_getpwnam\n__64_getpwuid\n__64_sigaction\n__64_signal\n__64_ssignal\n__assert\n__dl__xpv\n__freeaddrinfo32\n__freeaddrinfo64\n__getaddrinfo32\n__getaddrinfo64\n__getaddrinfo_compat4332\n__getaddrinfo_compat4364\n__getgrent64\n__getgrgid64\n__getgrgid_r64\n__getgrnam64\n__getgrnam_r64\n__lgamma\t FLOAT64 FLOATV2\n__lgammaf\t FLOAT32 FLOATV2\n__lgammal\t FLOAT64 FLOAT128 FLOATV2\n__long_gid___32_getpwnam\n__long_gid___32_getpwuid\n__long_gid___64_getpwnam\n__long_gid___64_getpwuid\n__long_gid_access\n__long_gid_chmod\n__long_gid_chown\n__long_gid_fchmod\n__long_gid_fchown\n__long_gid_fstat\n__long_gid_ftw\n__long_gid_getegid\n__long_gid_geteuid\n__long_gid_getgid\n__long_gid_getgroups\n__long_gid_getpwnam\n__long_gid_getpwnam_r\t 64\n__long_gid_getpwuid\n__long_gid_getpwuid_r\t 64\n__long_gid_getuid\n__long_gid_lchown\n__long_gid_lstat\n__long_gid_setgid\n__long_gid_setuid\n__long_gid_stat\n__non_utc_ftw\n__nw__xui\n__off64_fcntl\n__off64_fseeko\n__off64_fstat\n__off64_ftello\n__off64_ftruncate\n__off64_ftw\n__off64_long_gid_fstat\n__off64_long_gid_ftw\n__off64_long_gid_lstat\n__off64_long_gid_stat\n__off64_lseek\n__off64_lstat\n__off64_mmap\t 64\n__off64_non_utc_ftw\n__off64_pread\n__off64_pwrite\n__off64_stat\n__off64_truncate\n__off64_utc_fstat\n__off64_utc_lstat\n__off64_utc_stat\n__pdam_wcsftime\n__pdam_wcstok\t 64\n__posix__exit\n__posix_exit\n__posix_kill\n__posix_long_gid_kill\n__posix_system\n__posix_wait\n__read_rnd\n__recvmsg32\t BSD44\n__recvmsg64\t BSD44\n__sendmsg32\t BSD44\n__sendmsg64\t BSD44\n__short_gid___32_getpwent\n__short_gid___64_getpwent\n__short_gid_getpwent\n__std_fstat\n__std_ftw\n__std_lstat\n__std_stat\n__unix_geteuid\n__unix_getuid\n__utc_ctime\n__utc_ctime_r\n__utc_fstat\n__utc_ftime\n__utc_gmtime\n__utc_gmtime_r\n__utc_localtime\n__utc_localtime_r\n__utc_lstat\n__utc_mktime\n__utc_pdam_wcsftime\n__utc_stat\n__utc_strftime\n__utc_time\n__utc_utime\n__utc_utimes\n__utc_wcsftime\n__utctz_gmtime\n__utctz_gmtime_r\n__utctz_localtime\n__utctz_localtime_r\n__vms_pclose\n__vms_wait3\n__vms_wait4\n__vms_waitpid\n__writev32\n__writev64\n_exit\n_fstat\na64l\nabort\nabs\naccept\t BSD44\naccess\nacos\t FLOAT64 DPML\nacosd\tFLOAT64_VAXD DPML\nacosdl\tFLOAT64_VAXD\nacosh\tFLOAT64_VAXD DPML\nacoshl\tFLOAT64_VAXD\nacosl\tFLOAT64_VAXD\nalarm\nasctime\nasctime_r\nasin\t FLOAT64 DPML\nasind\tFLOAT64_VAXD DPML\nasindl\tFLOAT64_VAXD\nasinh\tFLOAT64_VAXD DPML\nasinhl\tFLOAT64_VAXD\nasinl\tFLOAT64_VAXD\natan\t FLOAT64 DPML\natan2\t FLOAT64 DPML\natan2l\tFLOAT64_VAXD\natand\tFLOAT64_VAXD DPML\natand2\tFLOAT64_VAXD DPML\natand2l\tFLOAT64_VAXD\natandl\tFLOAT64_VAXD\natanh\tFLOAT64_VAXD DPML\natanhl\tFLOAT64_VAXD\natanl\tFLOAT64_VAXD\natexit\natof\t FLOAT64\natoi\natol\natoll\natoq\nbasename\t 64\nbcmp\nbcopy\nbind\t BSD44\nbox\n# brk\nbsd_mh\t GA\nbsd_waddbytes\nbsd_waddstr\nbsearch\t 64\nbtowc\nbzero\ncabs\t FLOAT64 FLOATV2\ncabsf\t FLOAT32 FLOATV2\ncabsl\t FLOAT64 FLOAT128 FLOATV2\ncacos\t DPML\ncacosh\t DPML\ncalloc\t 64 MALLOC\ncalloc_opt\ncarg\tDPML\ncasin\tDPML\ncasinh\tDPML\ncatan\tDPML\ncatanh\tDPML\ncatclose\ncatgets\t 64\ncatopen\ncbrt\tFLOAT64_VAXD\ncbrtl\tFLOAT64_VAXD\nccos\tDPML\nccosh\tDPML\ncdiv\tDPML\nceil\t FLOAT64 DPML\nceill\tFLOAT64_VAXD\ncexp\tDPML\ncfree\ncfree_opt\nchdir\nchmod\nchown\nclearerr\nclearerr_unlocked\nclock\nclock_getres\nclock_gettime\nclock_settime\nclog\tDPML\nclose\nclosedir\ncmul\tDPML\ncols\t GA\nconfstr\nconnect\t BSD44\ncopysign\tFLOAT64_VAXD DPML\ncopysignl\tFLOAT64_VAXD\ncos\t FLOAT64 DPML\ncosd\tFLOAT64_VAXD DPML\ncosdl\tFLOAT64_VAXD\ncosh\t FLOAT64 DPML\ncoshl\tFLOAT64_VAXD\ncosl\tFLOAT64_VAXD\ncot\tFLOAT64_VAXD DPML\ncotd\tFLOAT64_VAXD DPML\ncotdl\tFLOAT64_VAXD\ncotl\tFLOAT64_VAXD\ncpow\tDPML\ncreat\ncrtl_init\ncrypt\t 64\ncsin\tDPML\ncsinh\tDPML\ncsqrt   DPML\nctan\tDPML\nctanh\tDPML\nctermid\t 64\nctime\nctime_r\ncuserid\t 64\ndaylight\t GL\ndelete\ndelwin\ndifftime\t FLOAT64\ndirname\t 64\ndiv\ndlclose\ndlerror\ndlopen\ndlsym\ndrand48\t FLOAT64\ndrem\tDPML\ndup\ndup2\necvt\t FLOAT64\nencrypt\nendgrent\nendhostent\nendnetent\nendprotoent\nendpwent\nendservent\nendwin\nenviron  GA\nerand48\t FLOAT64\nerf\tFLOAT64_VAXD DPML\nerfc\tFLOAT64_VAXD DPML\nerfcl\tFLOAT64_VAXD\nerfl\tFLOAT64_VAXD\nerrno\t GA\nexecl\nexecle\nexeclp\nexecv\nexecve\nexecvp\nexit\nexp\t FLOAT64 DPML\nexpl\tFLOAT64_VAXD\nexpm1\tFLOAT64_VAXD DPML\nexpm1l\tFLOAT64_VAXD\nfabs\t FLOAT64 DPML\nfabsl\tFLOAT64_VAXD\nfchmod\nfchown\nfclose\nfcntl\nfcvt\t FLOAT64\nfdopen\nfeof\nfeof_unlocked\nferror\nferror_unlocked\nfflush\nffs\nfgetc\nfgetc_unlocked\nfgetname\t 64\nfgetpos\nfgets\t 64\nfgetwc\nfgetws\t 64\nfileno\nfinite\tFLOAT64_VAXD DPML\nfinitel\tFLOAT64_VAXD\nflockfile\nfloor\t FLOAT64 DPML\nfloorl\tFLOAT64_VAXD\nfmod\t FLOAT64 DPML NODPML FLOATV2\nfmodf\t FLOAT32 NODPML FLOATV2\nfmodl\t FLOAT64 FLOAT128 NODPML FLOATV2\n# fnmatch # Overridden by libiberty.\nfopen\nfp_class\tFLOAT64_VAXD DPML\nfp_classl\tFLOAT64_VAXD\nfpathconf\nfprintf\t FLOAT64 FLOAT128\nfprintf__cf\t FLOAT64 FLOAT128\nfputc\nfputc_unlocked\nfputs\nfputwc\nfputws\nfread\nfree\nfree_opt\nfreeaddrinfo\nfreehostent\nfreopen\nfrexp\t FLOAT64 DPML\nfrexpl\tFLOAT64_VAXD\nfscanf\t FLOAT64 FLOAT128\nfseek\nfseeko\nfsetpos\nfstat\nfstatvfs\nfsync\nftell\nftello\nftime\nftruncate\nftrylockfile\nftw\nfunlockfile\nfwait\nfwide\nfwprintf\t FLOAT64 FLOAT128\nfwrite\nfwscanf\t FLOAT64 FLOAT128\ngai_strerror\ngamma\t FLOAT64 FLOATV2\ngammaf\t FLOAT32 FLOATV2\ngammal\t FLOAT64 FLOAT128 FLOATV2\ngbsd_mvprintw\ngbsd_mvscanw\ngbsd_mvwprintw\ngbsd_mvwscanw\ngbsd_printw\ngbsd_scanw\ngbsd_wprintw\ngbsd_wscanw\ngcvt\t FLOAT64 64\nget_errno_addr\nget_vms_errno_addr\ngetaddrinfo\ngetaddrinfo_compat43\ngetc\ngetc_unlocked\ngetchar\ngetchar_unlocked\ngetclock\ngetcwd\t 64\ngetdtablesize\ngetegid\ngetenv\ngeteuid\ngetgid\ngetgrent\ngetgrgid\ngetgrgid_r\ngetgrnam\ngetgrnam_r\ngetgroups\ngethostaddr\ngethostbyaddr\t BSD44\ngethostbyname\t BSD44\ngethostent\ngethostname\ngetipnodebyaddr\ngetipnodebyname\ngetitimer\ngetlogin\ngetlogin_r\ngetname\t 64\ngetnameinfo\ngetnetbyaddr\ngetnetbyname\ngetnetent\ngetopt\t32ONLY\ngetpagesize\ngetpeername\t BSD44\ngetpgid\ngetpgrp\ngetpid\ngetppid\ngetprotobyname\ngetprotobynumber\ngetprotoent\ngetpwent\ngetpwnam\ngetpwnam_r\t 64\ngetpwuid\ngetpwuid_r\t 64\ngets\t 64\ngetservbyname\ngetservbyport\ngetservent\ngetsid\ngetsockname\t BSD44\ngetsockopt\ngettimeofday\ngetuid\ngetw\ngetwc\ngetwchar\nglob\t 64\nglobfree\t 64\ngmtime\ngmtime_r\ngsignal\nherror\nhostalias\nhstrerror\nhtonl\nhtons\nhypot\t FLOAT64 DPML NODPML FLOATV2\nhypotf\t FLOAT32 NODPML FLOATV2\nhypotl\t FLOAT64 FLOAT128 NODPML FLOATV2\niconv\niconv_close\niconv_open\nif_freenameindex\nif_indextoname\nif_nameindex\nif_nametoindex\nilogb\tDPML\nindex\t 64\ninet6_opt_append\ninet6_opt_find\ninet6_opt_finish\ninet6_opt_get_val\ninet6_opt_init\ninet6_opt_next\ninet6_opt_set_val\ninet6_rth_add\ninet6_rth_getaddr\ninet6_rth_init\ninet6_rth_reverse\ninet6_rth_segments\ninet6_rth_space\ninet_addr\ninet_aton\ninet_lnaof\ninet_makeaddr\ninet_netof\ninet_network\ninet_ntoa\ninet_ntop\ninet_pton\ninitscr\ninitstate\nioctl\nisalnum\nisalpha\nisapipe\nisascii\nisatty\niscntrl\nisdigit\nisgraph\nislower\nisnan\tFLOAT64_VAXD DPML\nisnanl\tFLOAT64_VAXD\nisprint\nispunct\nisspace\nisupper\niswalnum\niswalpha\niswcntrl\niswctype\niswdigit\niswgraph\niswlower\niswprint\niswpunct\niswspace\niswupper\niswxdigit\nisxdigit\nj0\tFLOAT64_VAXD DPML\nj0l\tFLOAT64_VAXD\nj1\tFLOAT64_VAXD DPML\nj1l\tFLOAT64_VAXD\njn\tFLOAT64_VAXD DPML\njnl\tFLOAT64_VAXD\njrand48\nkill\nl64a\nl64a_r\nlabs\nlchown\nlcong48\nldexp\t FLOAT64 DPML\nldexpl\tFLOAT64_VAXD\nldiv\nlgamma\t FLOAT64 DPML NODPML FLOATV2\nlgammaf\t FLOAT32 NODPML FLOATV2\nlgammal\t FLOAT64 FLOAT128 NODPML FLOATV2\nlines\t GA\nlink\nlisten\nllabs\nlldiv\nlocale\nlocaleconv\nlocaltime\nlocaltime_r\n# ln -> log DPML\nlog\t FLOAT64 FLOATV2\nlog10\t FLOAT64 DPML\nlog10l\tFLOAT64_VAXD\nlog1p\tFLOAT64_VAXD DPML\nlog1pl\tFLOAT64_VAXD\nlog2\tFLOAT64_VAXD DPML\nlog2l\tFLOAT64_VAXD\nlogb\tFLOAT64_VAXD DPML\nlogbl\tFLOAT64_VAXD\nlogf\t FLOAT32 FLOATV2\nlogl\t FLOAT64 FLOAT128 FLOATV2\nlongjmp\nlongname 64\nlrand48\nlround\t DPML\nlseek\nlstat\nlwait\nmalloc\t 64 MALLOC\nmalloc_opt\nmblen\nmbrlen\nmbrtowc\nmbsinit\nmbsrtowcs\t 64\nmbstowcs\nmbtowc\nmemccpy\t 64\nmemchr\t 64\nmemcmp\nmemcpy\t 64\nmemmove\t 64\nmemset\t 64\nmkdir\nmkstemp\nmktemp\t 64\nmktime\nmmap\t 64\nmodf\t FLOAT64 DPML\nmodfl\tFLOAT64_VAXD\nmprotect\nmrand48\nmsync\nmunmap\nmvwaddstr\nmvwin\nnanosleep\nnewwin\nnextafter\tFLOAT64_VAXD DPML\nnextafterl\tFLOAT64_VAXD\nnice\nnint\tFLOAT64_VAXD DPML\nnintl\tFLOAT64_VAXD\nnl_langinfo\nnrand48\nntohl\nntohs\nopen\nopendir\noptarg\t GA\t32ONLY\nopterr\t GL\t32ONLY\noptind\t GL\t32ONLY\noptopt\t GL\t32ONLY\noverlay\noverwrite\npathconf\npause\npclose\nperror\npipe\npoll\npopen\n# pow DPML version ???\npow\t FLOAT64 FLOATV2\npowf\t FLOAT32 FLOATV2\npowl\t FLOAT64 FLOAT128 FLOATV2\npread\nprintf\t FLOAT64 FLOAT128\nprintf__cf\t FLOAT64 FLOAT128\nprintw\t FLOAT64 FLOAT128\nputc\nputc_unlocked\nputchar\nputchar_unlocked\nputenv\nputs\nputw\nputwc\nputwchar\npwrite\nqabs\nqdiv\nqsort\t 64\nraise\nrand\nrand_r\nrandom\nread\nreaddir\nreaddir_r\t 64\nreadlink\nreadv\t 64\nrealloc\t 64 MALLOC\nrealloc_opt\nrealpath\t 64\nrecord_read\nrecv\nrecvfrom\t BSD44\nrecvmsg\t BSD44\nremainder DPML\nremove\nrename\nrewind\nrewinddir\nrindex\t 64\nrint\tFLOAT64_VAXD DPML\nrintl\tFLOAT64_VAXD\nrmdir\nrtl_private\n# sbrk # Makes libiberty/xmalloc.c fails to build.\nscalb\tFLOAT64_VAXD DPML\nscalbl\tFLOAT64_VAXD\nscanf\t FLOAT64 FLOAT128\nscanw\t FLOAT64 FLOAT128\nscroll\nseed48\nseekdir\nselect\nsend\nsendmsg\t BSD44\nsendto\t BSD44\nset_new_handler__xpxv_v\nsetbuf\nsetenv\nseteuid\nsetgid\nsetgrent\nsethostent\nsetitimer\nsetkey\nsetlocale\nsetnetent\nsetpgid\nsetpgrp\nsetprotoent\nsetpwent\nsetregid\nsetreuid\nsetservent\nsetsid\nsetsockopt\nsetstate\nsetuid\nsetvbuf\nshm_open\nshm_unlink\nshutdown\nsigaction\nsigaddset\nsigblock\nsigdelset\nsigemptyset\nsigfillset\nsighold\nsigignore\nsigismember\nsiglongjmp\nsigmask\nsignal\nsigngam\t GL\nsigpause\nsigpending\nsigprocmask\nsigrelse\nsigsetjmp\nsigsetmask\nsigstack\nsigsuspend\nsigtimedwait\nsigvec\nsigwait\nsigwaitinfo\nsin\t FLOAT64 DPML\nsincos  DPML\nsincosd DPML\nsind\tFLOAT64_VAXD DPML\nsindl\tFLOAT64_VAXD\nsinh\t FLOAT64 DPML\nsinhcosh DPML\nsinhl\tFLOAT64_VAXD\nsinl\tFLOAT64_VAXD\nsleep\nsnprintf\t FLOAT64 FLOAT128\nsocket\nsocketpair\nsprintf\t FLOAT64 FLOAT128\nsprintf__cf\t FLOAT64 FLOAT128\nsqrt\t FLOAT64 DPML\nsqrtl\tFLOAT64_VAXD\nsrand\nsrand48\nsrandom\nsscanf\t FLOAT64 FLOAT128\nssignal\nstat\nstatvfs\nstrcasecmp\nstrcat\t 64\nstrchr\t 64\nstrcmp\nstrcoll\nstrcpy\t 64\nstrcspn\nstrdup\t 64 MALLOC\nstrerror\nstrfmon\t FLOAT64\nstrftime\nstrlen\nstrncasecmp\nstrncat\t 64\nstrncmp\nstrncpy\t 64\nstrnlen\nstrpbrk\t 64\nstrptime\t 64\nstrptime_xpg4\nstrrchr\t 64\nstrsep\t 64\nstrspn\nstrstr\t 64\nstrtod\t FLOAT64 64\nstrtok\t 64\nstrtok_r\t 64\nstrtol\t 64\nstrtoll\t 64\nstrtoq\t 64\nstrtoul\t 64\nstrtoull\t 64\nstrtouq\t 64\nstrxfrm\nsubwin\nswab\nswprintf\t FLOAT64 FLOAT128\nswscanf\t FLOAT64 FLOAT128\nsymlink\nsys_errlist\t GA\nsys_nerr\t GL\nsysconf\nsystem\ntan\t FLOAT64 DPML\ntand\tFLOAT64_VAXD DPML\ntandl\tFLOAT64_VAXD\ntanh\t FLOAT64 DPML\ntanhl\tFLOAT64_VAXD\ntanl\tFLOAT64_VAXD\ntelldir\ntempnam\ntgamma  DPML\ntime\ntimes\ntimezone\t GL\ntmpfile\ntmpnam\t 64\ntoascii\ntolower\ntouchwin\ntoupper\ntowctrans\ntowlower\ntowupper\ntrunc\tFLOAT64_VAXD DPML\ntruncate\ntruncl\tFLOAT64_VAXD\nttyname\nttyname_r\ntzname\t GA\ntzset\nualarm\numask\nuname\nungetc\nungetwc\nunlink\nunordered\tFLOAT64_VAXD DPML\nunorderedl\tFLOAT64_VAXD\nunsetenv\nusleep\nutime\nutimes\nvaxc$calloc_opt\nvaxc$cfree_opt\nvaxc$crtl_init\nvaxc$errno\t GA\nvaxc$free_opt\nvaxc$get_sdc\nvaxc$malloc_opt\nvaxc$realloc_opt\nvfprintf\t FLOAT64 FLOAT128\nvfscanf\t FLOAT64 FLOAT128\nvfwprintf\t FLOAT64 FLOAT128\nvfwscanf\t FLOAT64 FLOAT128\nvprintf\t FLOAT64 FLOAT128\nvscanf\t FLOAT64 FLOAT128\nvsnprintf\t FLOAT64 FLOAT128\nvsprintf\t FLOAT64 FLOAT128\nvsscanf\t FLOAT64 FLOAT128\nvswprintf\t FLOAT64 FLOAT128\nvswscanf\t FLOAT64 FLOAT128\nvwprintf\t FLOAT64 FLOAT128\nvwscanf\t FLOAT64 FLOAT128\nwaddch\nwaddstr\nwait\nwait3\nwait4\nwaitpid\nwclear\nwclrattr\nwclrtobot\nwclrtoeol\nwcrtomb\nwcscat\t 64\nwcschr\t 64\nwcscmp\nwcscoll\nwcscpy\t 64\nwcscspn\nwcsftime\nwcslen\nwcsncat\t 64\nwcsncmp\nwcsncpy\t 64\nwcspbrk\t 64\nwcsrchr\t 64\nwcsrtombs\t 64\nwcsspn\nwcsstr\t 64\nwcstod\t FLOAT64 64\nwcstok\t 64\nwcstol\t 64\nwcstombs\nwcstoul\t 64\nwcswcs\t 64\nwcswidth\nwcsxfrm\nwctob\nwctomb\nwctrans\nwctype\nwcwidth\nwdelch\nwdeleteln\nwerase\nwgetch\nwgetstr\nwinch\nwinsch\nwinsertln\nwinsstr\nwmemchr\t 64\nwmemcmp\nwmemcpy\t 64\nwmemmove\t 64\nwmemset\t 64\nwmove\nwprintf\t FLOAT64 FLOAT128\nwprintw\t FLOAT64 FLOAT128\nwrefresh\nwrite\nwritev\nwscanf\t FLOAT64 FLOAT128\nwscanw\t FLOAT64 FLOAT128\nwsetattr\nwstandend\nwstandout\ny0\tFLOAT64_VAXD DPML\ny0l\tFLOAT64_VAXD\ny1\tFLOAT64_VAXD DPML\ny1l\tFLOAT64_VAXD\nyn\tFLOAT64_VAXD DPML\nynl\tFLOAT64_VAXD\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/prims.cc": "// prims.cc - Code for core of runtime environment.\n\n/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007  Free Software Foundation\n\n   This file is part of libgcj.\n\nThis software is copyrighted work licensed under the terms of the\nLibgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\ndetails.  */\n\n#include <config.h>\n#include <platform.h>\n\n#include <stdlib.h>\n#include <stdarg.h>\n#include <stdio.h>\n#include <string.h>\n#include <signal.h>\n\n#ifdef HAVE_UNISTD_H\n#include <unistd.h>\n#endif\n\n#include <gcj/cni.h>\n#include <jvm.h>\n#include <java-signal.h>\n#include <java-threads.h>\n#include <java-interp.h>\n\n#ifdef ENABLE_JVMPI\n#include <jvmpi.h>\n#include <java/lang/ThreadGroup.h>\n#endif\n\n#ifdef INTERPRETER\n#include <jvmti.h>\n#include \"jvmti-int.h\"\n#endif\n\n#ifndef DISABLE_GETENV_PROPERTIES\n#include <java-props.h>\n#define PROCESS_GCJ_PROPERTIES process_gcj_properties()\n#else\n#define PROCESS_GCJ_PROPERTIES\n#endif // DISABLE_GETENV_PROPERTIES\n\n#include <java/lang/Class.h>\n#include <java/lang/ClassLoader.h>\n#include <java/lang/Runtime.h>\n#include <java/lang/String.h>\n#include <java/lang/Thread.h>\n#include <java/lang/ThreadGroup.h>\n#include <java/lang/ArrayIndexOutOfBoundsException.h>\n#include <java/lang/ArithmeticException.h>\n#include <java/lang/ClassFormatError.h>\n#include <java/lang/ClassNotFoundException.h>\n#include <java/lang/InternalError.h>\n#include <java/lang/NegativeArraySizeException.h>\n#include <java/lang/NoClassDefFoundError.h>\n#include <java/lang/NullPointerException.h>\n#include <java/lang/OutOfMemoryError.h>\n#include <java/lang/System.h>\n#include <java/lang/VMClassLoader.h>\n#include <java/lang/reflect/Modifier.h>\n#include <java/io/PrintStream.h>\n#include <java/lang/UnsatisfiedLinkError.h>\n#include <java/lang/VirtualMachineError.h>\n#include <gnu/gcj/runtime/ExtensionClassLoader.h>\n#include <gnu/gcj/runtime/FinalizerThread.h>\n#include <execution.h>\n\n#ifdef INTERPRETER\n#include <gnu/classpath/jdwp/Jdwp.h>\n#include <gnu/classpath/jdwp/VMVirtualMachine.h>\n#endif // INTERPRETER\n\n#include <gnu/java/lang/MainThread.h>\n\n#ifdef USE_LTDL\n#include <ltdl.h>\n#endif\n\n// Execution engine for compiled code.\n_Jv_CompiledEngine _Jv_soleCompiledEngine;\n\n// Execution engine for code compiled with -findirect-classes\n_Jv_IndirectCompiledEngine _Jv_soleIndirectCompiledEngine;\n\n// We allocate a single OutOfMemoryError exception which we keep\n// around for use if we run out of memory.\nstatic java::lang::OutOfMemoryError *no_memory;\n\n// Number of bytes in largest array object we create.  This could be\n// increased to the largest size_t value, so long as the appropriate\n// functions are changed to take a size_t argument instead of jint.\n#define MAX_OBJECT_SIZE (((size_t)1<<31) - 1)\n\n// Properties set at compile time.\nconst char **_Jv_Compiler_Properties = NULL;\nint _Jv_Properties_Count = 0;\n\n#ifndef DISABLE_GETENV_PROPERTIES\n// Property key/value pairs.\nproperty_pair *_Jv_Environment_Properties;\n#endif\n\n// Stash the argv pointer to benefit native libraries that need it.\nconst char **_Jv_argv;\nint _Jv_argc;\n\n// Debugging options\nstatic bool remoteDebug = false;\n#ifdef INTERPRETER\nstatic char defaultJdwpOptions[] = \"\";\nstatic char *jdwpOptions = defaultJdwpOptions;\n\n// Typedefs for JVMTI agent functions.\ntypedef jint jvmti_agent_onload_func (JavaVM *vm, char *options,\n                                      void *reserved);\ntypedef jint jvmti_agent_onunload_func (JavaVM *vm);\n\n// JVMTI agent function pointers.\nstatic jvmti_agent_onload_func *jvmti_agentonload = NULL;\nstatic jvmti_agent_onunload_func *jvmti_agentonunload = NULL;\nstatic char *jvmti_agent_opts;\n#endif // INTERPRETER\n\n// Argument support.\nint\n_Jv_GetNbArgs (void)\n{\n  // _Jv_argc is 0 if not explicitly initialized.\n  return _Jv_argc;\n}\n\nconst char *\n_Jv_GetSafeArg (int index)\n{\n  if (index >=0 && index < _Jv_GetNbArgs ())\n    return _Jv_argv[index];\n  else\n    return \"\";\n}\n\nvoid\n_Jv_SetArgs (int argc, const char **argv)\n{\n  _Jv_argc = argc;\n  _Jv_argv = argv;\n}\n\n#ifdef ENABLE_JVMPI\n// Pointer to JVMPI notification functions.\nvoid (*_Jv_JVMPI_Notify_OBJECT_ALLOC) (JVMPI_Event *event);\nvoid (*_Jv_JVMPI_Notify_THREAD_START) (JVMPI_Event *event);\nvoid (*_Jv_JVMPI_Notify_THREAD_END) (JVMPI_Event *event);\n#endif\n\f\n\n#if defined (HANDLE_SEGV) || defined(HANDLE_FPE)\n/* Unblock a signal.  Unless we do this, the signal may only be sent\n   once.  */\nstatic void \nunblock_signal (int signum __attribute__ ((__unused__)))\n{\n#ifdef _POSIX_VERSION\n  sigset_t sigs;\n\n  sigemptyset (&sigs);\n  sigaddset (&sigs, signum);\n  sigprocmask (SIG_UNBLOCK, &sigs, NULL);\n#endif\n}\n#endif\n\n#ifdef HANDLE_SEGV\nSIGNAL_HANDLER (catch_segv)\n{\n  unblock_signal (SIGSEGV);\n  MAKE_THROW_FRAME (nullp);\n  java::lang::NullPointerException *nullp \n    = new java::lang::NullPointerException;\n  throw nullp;\n}\n#endif\n\n#ifdef HANDLE_FPE\nSIGNAL_HANDLER (catch_fpe)\n{\n  unblock_signal (SIGFPE);\n#ifdef HANDLE_DIVIDE_OVERFLOW\n  HANDLE_DIVIDE_OVERFLOW;\n#else\n  MAKE_THROW_FRAME (arithexception);\n#endif\n  java::lang::ArithmeticException *arithexception \n    = new java::lang::ArithmeticException (JvNewStringLatin1 (\"/ by zero\"));\n  throw arithexception;\n}\n#endif\n\n\njboolean\n_Jv_equalUtf8Consts (const Utf8Const* a, const Utf8Const *b)\n{\n  int len;\n  const _Jv_ushort *aptr, *bptr;\n  if (a == b)\n    return true;\n  if (a->hash != b->hash)\n    return false;\n  len = a->length;\n  if (b->length != len)\n    return false;\n  aptr = (const _Jv_ushort *)a->data;\n  bptr = (const _Jv_ushort *)b->data;\n  len = (len + 1) >> 1;\n  while (--len >= 0)\n    if (*aptr++ != *bptr++)\n      return false;\n  return true;\n}\n\n/* True iff A is equal to STR.\n   HASH is STR->hashCode().  \n*/\n\njboolean\n_Jv_equal (Utf8Const* a, jstring str, jint hash)\n{\n  if (a->hash != (_Jv_ushort) hash)\n    return false;\n  jint len = str->length();\n  jint i = 0;\n  jchar *sptr = _Jv_GetStringChars (str);\n  unsigned char* ptr = (unsigned char*) a->data;\n  unsigned char* limit = ptr + a->length;\n  for (;; i++, sptr++)\n    {\n      int ch = UTF8_GET (ptr, limit);\n      if (i == len)\n\treturn ch < 0;\n      if (ch != *sptr)\n\treturn false;\n    }\n  return true;\n}\n\n/* Like _Jv_equal, but stop after N characters.  */\njboolean\n_Jv_equaln (Utf8Const *a, jstring str, jint n)\n{\n  jint len = str->length();\n  jint i = 0;\n  jchar *sptr = _Jv_GetStringChars (str);\n  unsigned char* ptr = (unsigned char*) a->data;\n  unsigned char* limit = ptr + a->length;\n  for (; n-- > 0; i++, sptr++)\n    {\n      int ch = UTF8_GET (ptr, limit);\n      if (i == len)\n\treturn ch < 0;\n      if (ch != *sptr)\n\treturn false;\n    }\n  return true;\n}\n\n// Determines whether the given Utf8Const object contains\n// a type which is primitive or some derived form of it, eg.\n// an array or multi-dimensional array variant.\njboolean\n_Jv_isPrimitiveOrDerived(const Utf8Const *a)\n{\n  unsigned char *aptr = (unsigned char *) a->data;\n  unsigned char *alimit = aptr + a->length;\n  int ac = UTF8_GET(aptr, alimit);\n\n  // Skips any leading array marks.\n  while (ac == '[')\n    ac = UTF8_GET(aptr, alimit);\n\n  // There should not be another character. This implies that\n  // the type name is only one character long.\n  if (UTF8_GET(aptr, alimit) == -1)\n    switch ( ac )\n      {\n        case 'Z':\n        case 'B':\n        case 'C':\n        case 'S':\n        case 'I':\n        case 'J':\n        case 'F':\n        case 'D':\n          return true;\n        default:\n          break;\n       }\n\n   return false;\n}\n\n// Find out whether two _Jv_Utf8Const candidates contain the same\n// classname.\n// The method is written to handle the different formats of classnames.\n// Eg. \"Ljava/lang/Class;\", \"Ljava.lang.Class;\", \"java/lang/Class\" and\n// \"java.lang.Class\" will be seen as equal.\n// Warning: This function is not smart enough to declare \"Z\" and \"boolean\"\n// and similar cases as equal (and is not meant to be used this way)!\njboolean\n_Jv_equalUtf8Classnames (const Utf8Const *a, const Utf8Const *b)\n{\n  // If the class name's length differs by two characters\n  // it is possible that we have candidates which are given\n  // in the two different formats (\"Lp1/p2/cn;\" vs. \"p1/p2/cn\")\n  switch (a->length - b->length)\n    {\n      case -2:\n      case 0:\n      case 2:\n        break;\n      default:\n        return false;\n    }\n\n  unsigned char *aptr = (unsigned char *) a->data;\n  unsigned char *alimit = aptr + a->length;\n  unsigned char *bptr = (unsigned char *) b->data;\n  unsigned char *blimit = bptr + b->length;\n\n  if (alimit[-1] == ';')\n    alimit--;\n\n  if (blimit[-1] == ';')\n    blimit--;\n\n  int ac = UTF8_GET(aptr, alimit);\n  int bc = UTF8_GET(bptr, blimit);\n\n  // Checks whether both strings have the same amount of leading [ characters.\n  while (ac == '[')\n    {\n      if (bc == '[')\n        {\n          ac = UTF8_GET(aptr, alimit);\n          bc = UTF8_GET(bptr, blimit);\n          continue;\n        }\n\n      return false;\n    }\n\n  // Skips leading L character.\n  if (ac == 'L')\n    ac = UTF8_GET(aptr, alimit);\n        \n  if (bc == 'L')\n    bc = UTF8_GET(bptr, blimit);\n\n  // Compares the remaining characters.\n  while (ac != -1 && bc != -1)\n    {\n      // Replaces package separating dots with slashes.\n      if (ac == '.')\n        ac = '/';\n\n      if (bc == '.')\n        bc = '/';\n      \n      // Now classnames differ if there is at least one non-matching\n      // character.\n      if (ac != bc)\n        return false;\n\n      ac = UTF8_GET(aptr, alimit);\n      bc = UTF8_GET(bptr, blimit);\n    }\n\n  return (ac == bc);\n}\n\n/* Count the number of Unicode chars encoded in a given Ut8 string. */\nint\n_Jv_strLengthUtf8(const char* str, int len)\n{\n  unsigned char* ptr;\n  unsigned char* limit;\n  int str_length;\n\n  ptr = (unsigned char*) str;\n  limit = ptr + len;\n  str_length = 0;\n  for (; ptr < limit; str_length++)\n    {\n      if (UTF8_GET (ptr, limit) < 0)\n\treturn (-1);\n    }\n  return (str_length);\n}\n\n/* Calculate a hash value for a string encoded in Utf8 format.\n * This returns the same hash value as specified or java.lang.String.hashCode.\n */\njint\n_Jv_hashUtf8String (const char* str, int len)\n{\n  unsigned char* ptr = (unsigned char*) str;\n  unsigned char* limit = ptr + len;\n  jint hash = 0;\n\n  for (; ptr < limit;)\n    {\n      int ch = UTF8_GET (ptr, limit);\n      /* Updated specification from\n\t http://www.javasoft.com/docs/books/jls/clarify.html. */\n      hash = (31 * hash) + ch;\n    }\n  return hash;\n}\n\nvoid\n_Jv_Utf8Const::init(const char *s, int len)\n{\n  ::memcpy (data, s, len);\n  data[len] = 0;\n  length = len;\n  hash = _Jv_hashUtf8String (s, len) & 0xFFFF;\n}\n\n_Jv_Utf8Const *\n_Jv_makeUtf8Const (const char* s, int len)\n{\n  if (len < 0)\n    len = strlen (s);\n  Utf8Const* m\n    = (Utf8Const*) _Jv_AllocBytes (_Jv_Utf8Const::space_needed(s, len));\n  m->init(s, len);\n  return m;\n}\n\n_Jv_Utf8Const *\n_Jv_makeUtf8Const (jstring string)\n{\n  jint hash = string->hashCode ();\n  jint len = _Jv_GetStringUTFLength (string);\n\n  Utf8Const* m = (Utf8Const*)\n    _Jv_AllocBytes (sizeof(Utf8Const) + len + 1);\n\n  m->hash = hash;\n  m->length = len;\n\n  _Jv_GetStringUTFRegion (string, 0, string->length (), m->data);\n  m->data[len] = 0;\n  \n  return m;\n}\n\n\f\n\n#ifdef __GCJ_DEBUG\nvoid\n_Jv_Abort (const char *function, const char *file, int line,\n\t   const char *message)\n#else\nvoid\n_Jv_Abort (const char *, const char *, int, const char *message)\n#endif\n{\n#ifdef __GCJ_DEBUG\n  fprintf (stderr,\n\t   \"libgcj failure: %s\\n   in function %s, file %s, line %d\\n\",\n\t   message, function, file, line);\n#else\n  fprintf (stderr, \"libgcj failure: %s\\n\", message);\n#endif\n  fflush (stderr);\n  abort ();\n}\n\nstatic void\nfail_on_finalization (jobject)\n{\n  JvFail (\"object was finalized\");\n}\n\nvoid\n_Jv_GCWatch (jobject obj)\n{\n  _Jv_RegisterFinalizer (obj, fail_on_finalization);\n}\n\nvoid\n_Jv_ThrowBadArrayIndex(jint bad_index)\n{\n  throw new java::lang::ArrayIndexOutOfBoundsException\n    (java::lang::String::valueOf (bad_index));\n}\n\nvoid\n_Jv_ThrowNullPointerException ()\n{\n  throw new java::lang::NullPointerException;\n}\n\n// Resolve an entry in the constant pool and return the target\n// address.\nvoid *\n_Jv_ResolvePoolEntry (jclass this_class, jint index)\n{\n  _Jv_Constants *pool = &this_class->constants;\n\n  if ((pool->tags[index] & JV_CONSTANT_ResolvedFlag) != 0)\n    return pool->data[index].field->u.addr;\n\n  JvSynchronize sync (this_class);\n  return (_Jv_Linker::resolve_pool_entry (this_class, index))\n    .field->u.addr;\n}\n\n\n// Explicitly throw a no memory exception.\n// The collector calls this when it encounters an out-of-memory condition.\nvoid _Jv_ThrowNoMemory()\n{\n  throw no_memory;\n}\n\n#ifdef ENABLE_JVMPI\n# define JVMPI_NOTIFY_ALLOC(klass,size,obj) \\\n    if (__builtin_expect (_Jv_JVMPI_Notify_OBJECT_ALLOC != 0, false)) \\\n      jvmpi_notify_alloc(klass,size,obj);\nstatic void\njvmpi_notify_alloc(jclass klass, jint size, jobject obj)\n{\n  // Service JVMPI allocation request.\n  JVMPI_Event event;\n\n  event.event_type = JVMPI_EVENT_OBJECT_ALLOC;\n  event.env_id = NULL;\n  event.u.obj_alloc.arena_id = 0;\n  event.u.obj_alloc.class_id = (jobjectID) klass;\n  event.u.obj_alloc.is_array = 0;\n  event.u.obj_alloc.size = size;\n  event.u.obj_alloc.obj_id = (jobjectID) obj;\n\n  // FIXME:  This doesn't look right for the Boehm GC.  A GC may\n  // already be in progress.  _Jv_DisableGC () doesn't wait for it.\n  // More importantly, I don't see the need for disabling GC, since we\n  // blatantly have a pointer to obj on our stack, ensuring that the\n  // object can't be collected.  Even for a nonconservative collector,\n  // it appears to me that this must be true, since we are about to\n  // return obj. Isn't this whole approach way too intrusive for\n  // a useful profiling interface?\t\t\t- HB\n  _Jv_DisableGC ();\n  (*_Jv_JVMPI_Notify_OBJECT_ALLOC) (&event);\n  _Jv_EnableGC ();\n}\n#else /* !ENABLE_JVMPI */\n# define JVMPI_NOTIFY_ALLOC(klass,size,obj) /* do nothing */\n#endif\n\n// Allocate a new object of class KLASS.\n// First a version that assumes that we have no finalizer, and that\n// the class is already initialized.\n// If we know that JVMPI is disabled, this can be replaced by a direct call\n// to the allocator for the appropriate GC.\njobject\n_Jv_AllocObjectNoInitNoFinalizer (jclass klass)\n{\n  jint size = klass->size ();\n  jobject obj = (jobject) _Jv_AllocObj (size, klass);\n  JVMPI_NOTIFY_ALLOC (klass, size, obj);\n  return obj;\n}\n\n// And now a version that initializes if necessary.\njobject\n_Jv_AllocObjectNoFinalizer (jclass klass)\n{\n  if (_Jv_IsPhantomClass(klass) )\n    throw new java::lang::NoClassDefFoundError(klass->getName());\n\n  _Jv_InitClass (klass);\n  jint size = klass->size ();\n  jobject obj = (jobject) _Jv_AllocObj (size, klass);\n  JVMPI_NOTIFY_ALLOC (klass, size, obj);\n  return obj;\n}\n\n// And now the general version that registers a finalizer if necessary.\njobject\n_Jv_AllocObject (jclass klass)\n{\n  jobject obj = _Jv_AllocObjectNoFinalizer (klass);\n  \n  // We assume that the compiler only generates calls to this routine\n  // if there really is an interesting finalizer.\n  // Unfortunately, we still have to the dynamic test, since there may\n  // be cni calls to this routine.\n  // Note that on IA64 get_finalizer() returns the starting address of the\n  // function, not a function pointer.  Thus this still works.\n  if (klass->vtable->get_finalizer ()\n      != java::lang::Object::class$.vtable->get_finalizer ())\n    _Jv_RegisterFinalizer (obj, _Jv_FinalizeObject);\n  return obj;\n}\n\n// Allocate a String, including variable length storage.\njstring\n_Jv_AllocString(jsize len)\n{\n  using namespace java::lang;\n\n  jsize sz = sizeof(java::lang::String) + len * sizeof(jchar);\n\n  // We assert that for strings allocated this way, the data field\n  // will always point to the object itself.  Thus there is no reason\n  // for the garbage collector to scan any of it.\n  // Furthermore, we're about to overwrite the string data, so\n  // initialization of the object is not an issue.\n\n  // String needs no initialization, and there is no finalizer, so\n  // we can go directly to the collector's allocator interface.\n  jstring obj = (jstring) _Jv_AllocPtrFreeObj(sz, &String::class$);\n\n  obj->data = obj;\n  obj->boffset = sizeof(java::lang::String);\n  obj->count = len;\n  obj->cachedHashCode = 0;\n\n  JVMPI_NOTIFY_ALLOC (&String::class$, sz, obj);\n  \n  return obj;\n}\n\n// A version of the above that assumes the object contains no pointers,\n// and requires no finalization.  This can't happen if we need pointers\n// to locks.\n#ifdef JV_HASH_SYNCHRONIZATION\njobject\n_Jv_AllocPtrFreeObject (jclass klass)\n{\n  _Jv_InitClass (klass);\n  jint size = klass->size ();\n\n  jobject obj = (jobject) _Jv_AllocPtrFreeObj (size, klass);\n\n  JVMPI_NOTIFY_ALLOC (klass, size, obj);\n\n  return obj;\n}\n#endif /* JV_HASH_SYNCHRONIZATION */\n\n\n// Allocate a new array of Java objects.  Each object is of type\n// `elementClass'.  `init' is used to initialize each slot in the\n// array.\njobjectArray\n_Jv_NewObjectArray (jsize count, jclass elementClass, jobject init)\n{\n  // Creating an array of an unresolved type is impossible. So we throw\n  // the NoClassDefFoundError.\n  if ( _Jv_IsPhantomClass(elementClass) )\n    throw new java::lang::NoClassDefFoundError(elementClass->getName());\n\n  if (__builtin_expect (count < 0, false))\n    throw new java::lang::NegativeArraySizeException;\n\n  JvAssert (! elementClass->isPrimitive ());\n\n  // Ensure that elements pointer is properly aligned.\n  jobjectArray obj = NULL;\n  size_t size = (size_t) elements (obj);\n  // Check for overflow.\n  if (__builtin_expect ((size_t) count > \n\t\t\t(MAX_OBJECT_SIZE - 1 - size) / sizeof (jobject), false))\n    throw no_memory;\n\n  size += count * sizeof (jobject);\n\n  jclass klass = _Jv_GetArrayClass (elementClass,\n\t\t\t\t    elementClass->getClassLoaderInternal());\n\n  obj = (jobjectArray) _Jv_AllocArray (size, klass);\n  // Cast away const.\n  jsize *lp = const_cast<jsize *> (&obj->length);\n  *lp = count;\n  // We know the allocator returns zeroed memory.  So don't bother\n  // zeroing it again.\n  if (init)\n    {\n      jobject *ptr = elements(obj);\n      while (--count >= 0)\n\t*ptr++ = init;\n    }\n  return obj;\n}\n\n// Allocate a new array of primitives.  ELTYPE is the type of the\n// element, COUNT is the size of the array.\njobject\n_Jv_NewPrimArray (jclass eltype, jint count)\n{\n  int elsize = eltype->size();\n  if (__builtin_expect (count < 0, false))\n    throw new java::lang::NegativeArraySizeException;\n\n  JvAssert (eltype->isPrimitive ());\n  jobject dummy = NULL;\n  size_t size = (size_t) _Jv_GetArrayElementFromElementType (dummy, eltype);\n\n  // Check for overflow.\n  if (__builtin_expect ((size_t) count > \n\t\t\t(MAX_OBJECT_SIZE - size) / elsize, false))\n    throw no_memory;\n\n  jclass klass = _Jv_GetArrayClass (eltype, 0);\n\n# ifdef JV_HASH_SYNCHRONIZATION\n  // Since the vtable is always statically allocated,\n  // these are completely pointerfree!  Make sure the GC doesn't touch them.\n  __JArray *arr =\n    (__JArray*) _Jv_AllocPtrFreeObj (size + elsize * count, klass);\n  memset((char *)arr + size, 0, elsize * count);\n# else\n  __JArray *arr = (__JArray*) _Jv_AllocObj (size + elsize * count, klass);\n  // Note that we assume we are given zeroed memory by the allocator.\n# endif\n  // Cast away const.\n  jsize *lp = const_cast<jsize *> (&arr->length);\n  *lp = count;\n\n  return arr;\n}\n\njobject\n_Jv_NewArray (jint type, jint size)\n{\n  switch (type)\n    {\n      case  4:  return JvNewBooleanArray (size);\n      case  5:  return JvNewCharArray (size);\n      case  6:  return JvNewFloatArray (size);\n      case  7:  return JvNewDoubleArray (size);\n      case  8:  return JvNewByteArray (size);\n      case  9:  return JvNewShortArray (size);\n      case 10:  return JvNewIntArray (size);\n      case 11:  return JvNewLongArray (size);\n    }\n  throw new java::lang::InternalError\n    (JvNewStringLatin1 (\"invalid type code in _Jv_NewArray\"));\n}\n\n// Allocate a possibly multi-dimensional array but don't check that\n// any array length is <0.\nstatic jobject\n_Jv_NewMultiArrayUnchecked (jclass type, jint dimensions, jint *sizes)\n{\n  JvAssert (type->isArray());\n  jclass element_type = type->getComponentType();\n  jobject result;\n  if (element_type->isPrimitive())\n    result = _Jv_NewPrimArray (element_type, sizes[0]);\n  else\n    result = _Jv_NewObjectArray (sizes[0], element_type, NULL);\n\n  if (dimensions > 1)\n    {\n      JvAssert (! element_type->isPrimitive());\n      JvAssert (element_type->isArray());\n      jobject *contents = elements ((jobjectArray) result);\n      for (int i = 0; i < sizes[0]; ++i)\n\tcontents[i] = _Jv_NewMultiArrayUnchecked (element_type, dimensions - 1,\n\t\t\t\t\t\t  sizes + 1);\n    }\n\n  return result;\n}\n\njobject\n_Jv_NewMultiArray (jclass type, jint dimensions, jint *sizes)\n{\n  for (int i = 0; i < dimensions; ++i)\n    if (sizes[i] < 0)\n      throw new java::lang::NegativeArraySizeException;\n\n  return _Jv_NewMultiArrayUnchecked (type, dimensions, sizes);\n}\n\njobject\n_Jv_NewMultiArray (jclass array_type, jint dimensions, ...)\n{\n  // Creating an array of an unresolved type is impossible. So we throw\n  // the NoClassDefFoundError.\n  if (_Jv_IsPhantomClass(array_type))\n    throw new java::lang::NoClassDefFoundError(array_type->getName());\n\n  va_list args;\n  jint sizes[dimensions];\n  va_start (args, dimensions);\n  for (int i = 0; i < dimensions; ++i)\n    {\n      jint size = va_arg (args, jint);\n      if (size < 0)\n\tthrow new java::lang::NegativeArraySizeException;\n      sizes[i] = size;\n    }\n  va_end (args);\n\n  return _Jv_NewMultiArrayUnchecked (array_type, dimensions, sizes);\n}\n\n\f\n\n// Ensure 8-byte alignment, for hash synchronization.\n#define DECLARE_PRIM_TYPE(NAME)\t\t\t\\\n  java::lang::Class _Jv_##NAME##Class __attribute__ ((aligned (8)));\n\nDECLARE_PRIM_TYPE(byte)\nDECLARE_PRIM_TYPE(short)\nDECLARE_PRIM_TYPE(int)\nDECLARE_PRIM_TYPE(long)\nDECLARE_PRIM_TYPE(boolean)\nDECLARE_PRIM_TYPE(char)\nDECLARE_PRIM_TYPE(float)\nDECLARE_PRIM_TYPE(double)\nDECLARE_PRIM_TYPE(void)\n\nvoid\n_Jv_InitPrimClass (jclass cl, const char *cname, char sig, int len)\n{    \n  using namespace java::lang::reflect;\n\n  // We must set the vtable for the class; the Java constructor\n  // doesn't do this.\n  (*(_Jv_VTable **) cl) = java::lang::Class::class$.vtable;\n\n  // Initialize the fields we care about.  We do this in the same\n  // order they are declared in Class.h.\n  cl->name = _Jv_makeUtf8Const ((char *) cname, -1);\n  cl->accflags = Modifier::PUBLIC | Modifier::FINAL | Modifier::ABSTRACT;\n  cl->method_count = sig;\n  cl->size_in_bytes = len;\n  cl->vtable = JV_PRIMITIVE_VTABLE;\n  cl->state = JV_STATE_DONE;\n  cl->depth = -1;\n}\n\njclass\n_Jv_FindClassFromSignature (char *sig, java::lang::ClassLoader *loader,\n\t\t\t    char **endp)\n{\n  // First count arrays.\n  int array_count = 0;\n  while (*sig == '[')\n    {\n      ++sig;\n      ++array_count;\n    }\n\n  jclass result = NULL;\n  switch (*sig)\n    {\n    case 'B':\n      result = JvPrimClass (byte);\n      break;\n    case 'S':\n      result = JvPrimClass (short);\n      break;\n    case 'I':\n      result = JvPrimClass (int);\n      break;\n    case 'J':\n      result = JvPrimClass (long);\n      break;\n    case 'Z':\n      result = JvPrimClass (boolean);\n      break;\n    case 'C':\n      result = JvPrimClass (char);\n      break;\n    case 'F':\n      result = JvPrimClass (float);\n      break;\n    case 'D':\n      result = JvPrimClass (double);\n      break;\n    case 'V':\n      result = JvPrimClass (void);\n      break;\n    case 'L':\n      {\n\tchar *save = ++sig;\n\twhile (*sig && *sig != ';')\n\t  ++sig;\n\t// Do nothing if signature appears to be malformed.\n\tif (*sig == ';')\n\t  {\n\t    _Jv_Utf8Const *name = _Jv_makeUtf8Const (save, sig - save);\n\t    result = _Jv_FindClass (name, loader);\n\t  }\n\tbreak;\n      }\n    default:\n      // Do nothing -- bad signature.\n      break;\n    }\n\n  if (endp)\n    {\n      // Not really the \"end\", but the last valid character that we\n      // looked at.\n      *endp = sig;\n    }\n\n  if (! result)\n    return NULL;\n\n  // Find arrays.\n  while (array_count-- > 0)\n    result = _Jv_GetArrayClass (result, loader);\n  return result;\n}\n\n\njclass\n_Jv_FindClassFromSignatureNoException (char *sig, java::lang::ClassLoader *loader,\n                                       char **endp)\n{\n  jclass klass;\n\n  try\n    {\n      klass = _Jv_FindClassFromSignature(sig, loader, endp);\n    }\n  catch (java::lang::NoClassDefFoundError *ncdfe)\n    {\n      return NULL;\n    }\n  catch (java::lang::ClassNotFoundException *cnfe)\n    {\n      return NULL;\n    }\n\n  return klass;\n}\n\nJArray<jstring> *\nJvConvertArgv (int argc, const char **argv)\n{\n  if (argc < 0)\n    argc = 0;\n  jobjectArray ar = JvNewObjectArray(argc, &java::lang::String::class$, NULL);\n  jobject *ptr = elements(ar);\n  jbyteArray bytes = NULL;\n  for (int i = 0;  i < argc;  i++)\n    {\n      const char *arg = argv[i];\n      int len = strlen (arg);\n      if (bytes == NULL || bytes->length < len)\n\tbytes = JvNewByteArray (len);\n      jbyte *bytePtr = elements (bytes);\n      // We assume jbyte == char.\n      memcpy (bytePtr, arg, len);\n\n      // Now convert using the default encoding.\n      *ptr++ = new java::lang::String (bytes, 0, len);\n    }\n  return (JArray<jstring>*) ar;\n}\n\n// FIXME: These variables are static so that they will be\n// automatically scanned by the Boehm collector.  This is needed\n// because with qthreads the collector won't scan the initial stack --\n// it will only scan the qthreads stacks.\n\n// Command line arguments.\nstatic JArray<jstring> *arg_vec;\n\n// The primary thread.\nstatic java::lang::Thread *main_thread;\n\n#ifndef DISABLE_GETENV_PROPERTIES\n\n#define c_isspace(c) (memchr (\" \\t\\n\\r\\v\\f\", c, 6) != NULL)\n\nstatic char *\nnext_property_key (char *s, size_t *length)\n{\n  size_t l = 0;\n\n  JvAssert (s);\n\n  // Skip over whitespace\n  while (c_isspace (*s))\n    s++;\n\n  // If we've reached the end, return NULL.  Also return NULL if for\n  // some reason we've come across a malformed property string.\n  if (*s == 0\n      || *s == ':'\n      || *s == '=')\n    return NULL;\n\n  // Determine the length of the property key.\n  while (s[l] != 0\n\t && ! c_isspace (s[l])\n\t && s[l] != ':'\n\t && s[l] != '=')\n    {\n      if (s[l] == '\\\\'\n\t  && s[l+1] != 0)\n\tl++;\n      l++;\n    }\n\n  *length = l;\n\n  return s;\n}\n\nstatic char *\nnext_property_value (char *s, size_t *length)\n{\n  size_t l = 0;\n\n  JvAssert (s);\n\n  while (c_isspace (*s))\n    s++;\n\n  if (*s == ':'\n      || *s == '=')\n    s++;\n\n  while (c_isspace (*s))\n    s++;\n\n  // Determine the length of the property value.\n  while (s[l] != 0\n\t && ! c_isspace (s[l])\n\t && s[l] != ':'\n\t && s[l] != '=')\n    {\n      if (s[l] == '\\\\'\n\t  && s[l+1] != 0)\n\tl += 2;\n      else\n\tl++;\n    }\n\n  *length = l;\n\n  return s;\n}\n\nstatic void\nprocess_gcj_properties ()\n{\n  char *props = getenv(\"GCJ_PROPERTIES\");\n\n  if (NULL == props)\n    return;\n\n  // Later on we will write \\0s into this string.  It is simplest to\n  // just duplicate it here.\n  props = strdup (props);\n\n  char *p = props;\n  size_t length;\n  size_t property_count = 0;\n\n  // Whip through props quickly in order to count the number of\n  // property values.\n  while (p && (p = next_property_key (p, &length)))\n    {\n      // Skip to the end of the key\n      p += length;\n\n      p = next_property_value (p, &length);\n      if (p)\n\tp += length;\n      \n      property_count++;\n    }\n\n  // Allocate an array of property value/key pairs.\n  _Jv_Environment_Properties = \n    (property_pair *) malloc (sizeof(property_pair) \n\t\t\t      * (property_count + 1));\n\n  // Go through the properties again, initializing _Jv_Properties\n  // along the way.\n  p = props;\n  property_count = 0;\n  while (p && (p = next_property_key (p, &length)))\n    {\n      _Jv_Environment_Properties[property_count].key = p;\n      _Jv_Environment_Properties[property_count].key_length = length;\n\n      // Skip to the end of the key\n      p += length;\n\n      p = next_property_value (p, &length);\n      \n      _Jv_Environment_Properties[property_count].value = p;\n      _Jv_Environment_Properties[property_count].value_length = length;\n\n      if (p)\n\tp += length;\n\n      property_count++;\n    }\n  memset ((void *) &_Jv_Environment_Properties[property_count], \n\t  0, sizeof (property_pair));\n\n  // Null terminate the strings.\n  for (property_pair *prop = &_Jv_Environment_Properties[0];\n       prop->key != NULL;\n       prop++)\n    {\n      prop->key[prop->key_length] = 0;\n      prop->value[prop->value_length] = 0;\n    }\n}\n#endif // DISABLE_GETENV_PROPERTIES\n\nnamespace gcj\n{\n  _Jv_Utf8Const *void_signature;\n  _Jv_Utf8Const *clinit_name;\n  _Jv_Utf8Const *init_name;\n  _Jv_Utf8Const *finit_name;\n  \n  bool runtimeInitialized = false;\n  \n  // When true, print debugging information about class loading.\n  bool verbose_class_flag;\n  \n  // When true, enable the bytecode verifier and BC-ABI type verification. \n  bool verifyClasses = true;\n\n  // Thread stack size specified by the -Xss runtime argument.\n  size_t stack_size = 0;\n\n  // Start time of the VM\n  jlong startTime = 0;\n\n  // Arguments passed to the VM\n  JArray<jstring>* vmArgs;\n\n  // Currently loaded classes\n  jint loadedClasses = 0;\n\n  // Unloaded classes\n  jlong unloadedClasses = 0;\n}\n\n// We accept all non-standard options accepted by Sun's java command,\n// for compatibility with existing application launch scripts.\nstatic jint\nparse_x_arg (char* option_string)\n{\n  if (strlen (option_string) <= 0)\n    return -1;\n\n  if (! strcmp (option_string, \"int\"))\n    {\n      // FIXME: this should cause the vm to never load shared objects\n    }\n  else if (! strcmp (option_string, \"mixed\"))\n    {\n      // FIXME: allow interpreted and native code\n    }\n  else if (! strcmp (option_string, \"batch\"))\n    {\n      // FIXME: disable background JIT'ing\n    }\n  else if (! strcmp (option_string, \"debug\"))\n    {\n      remoteDebug = true;\n    }\n#ifdef INTERPRETER\n  else if (! strncmp (option_string, \"runjdwp:\", 8))\n    {\n      if (strlen (option_string) > 8)\n\t  jdwpOptions = &option_string[8];\n      else\n\t{\n\t  fprintf (stderr,\n\t\t   \"libgcj: argument required for JDWP options\");\n\t  return -1;\n\t}\n    }\n#endif // INTERPRETER\n  else if (! strncmp (option_string, \"bootclasspath:\", 14))\n    {\n      // FIXME: add a parse_bootclasspath_arg function\n    }\n  else if (! strncmp (option_string, \"bootclasspath/a:\", 16))\n    {\n    }\n  else if (! strncmp (option_string, \"bootclasspath/p:\", 16))\n    {\n    }\n  else if (! strcmp (option_string, \"check:jni\"))\n    {\n      // FIXME: enable strict JNI checking\n    }\n  else if (! strcmp (option_string, \"future\"))\n    {\n      // FIXME: enable strict class file format checks\n    }\n  else if (! strcmp (option_string, \"noclassgc\"))\n    {\n      // FIXME: disable garbage collection for classes\n    }\n  else if (! strcmp (option_string, \"incgc\"))\n    {\n      // FIXME: incremental garbage collection\n    }\n  else if (! strncmp (option_string, \"loggc:\", 6))\n    {\n      if (option_string[6] == '\\0')\n        {\n          fprintf (stderr,\n                   \"libgcj: filename argument expected for loggc option\\n\");\n          return -1;\n        }\n      // FIXME: set gc logging filename\n    }\n  else if (! strncmp (option_string, \"ms\", 2))\n    {\n      // FIXME: ignore this option until PR 20699 is fixed.\n      // _Jv_SetInitialHeapSize (option_string + 2);\n    }\n  else if (! strncmp (option_string, \"mx\", 2))\n    _Jv_SetMaximumHeapSize (option_string + 2);\n  else if (! strcmp (option_string, \"prof\"))\n    {\n      // FIXME: enable profiling of program running in vm\n    }\n  else if (! strncmp (option_string, \"runhprof:\", 9))\n    {\n      // FIXME: enable specific type of vm profiling.  add a\n      // parse_runhprof_arg function\n    }\n  else if (! strcmp (option_string, \"rs\"))\n    {\n      // FIXME: reduced system signal usage.  disable thread dumps,\n      // only terminate in response to user-initiated calls,\n      // e.g. System.exit()\n    }\n  else if (! strncmp (option_string, \"ss\", 2))\n    {\n      _Jv_SetStackSize (option_string + 2);\n    }\n  else if (! strcmp (option_string, \"X:+UseAltSigs\"))\n    {\n      // FIXME: use signals other than SIGUSR1 and SIGUSR2\n    }\n  else if (! strcmp (option_string, \"share:off\"))\n    {\n      // FIXME: don't share class data\n    }\n  else if (! strcmp (option_string, \"share:auto\"))\n    {\n      // FIXME: share class data where possible\n    }\n  else if (! strcmp (option_string, \"share:on\"))\n    {\n      // FIXME: fail if impossible to share class data\n    }\n  else\n    {\n      // Unrecognized.\n      return -1;\n    }\n  return 0;\n}\n\nstatic jint\nparse_verbose_args (char* option_string,\n                    bool ignore_unrecognized)\n{\n  size_t len = sizeof (\"-verbose\") - 1;\n\n  if (strlen (option_string) < len)\n    return -1;\n\n  if (option_string[len] == ':'\n      && option_string[len + 1] != '\\0')\n    {\n      char* verbose_args = option_string + len + 1;\n\n      do\n\t{\n\t  if (! strncmp (verbose_args,\n\t\t\t \"gc\", sizeof (\"gc\") - 1))\n            {\n              if (verbose_args[sizeof (\"gc\") - 1] == '\\0'\n                  || verbose_args[sizeof (\"gc\") - 1] == ',')\n                {\n                  // FIXME: we should add functions to boehm-gc that\n                  // toggle GC_print_stats, GC_PRINT_ADDRESS_MAP and\n                  // GC_print_back_height.\n                  verbose_args += sizeof (\"gc\") - 1;\n                }\n              else\n                {\n                verbose_arg_err:\n                  fprintf (stderr, \"libgcj: unknown verbose option: %s\\n\",\n                           option_string);\n                  return -1;\n                }\n            }\n\t  else if (! strncmp (verbose_args,\n\t\t\t      \"class\",\n\t\t\t      sizeof (\"class\") - 1))\n            {\n              if (verbose_args[sizeof (\"class\") - 1] == '\\0'\n                  || verbose_args[sizeof (\"class\") - 1] == ',')\n                {\n                  gcj::verbose_class_flag = true;\n                  verbose_args += sizeof (\"class\") - 1;\n                }\n              else\n                goto verbose_arg_err;\n            }\n\t  else if (! strncmp (verbose_args, \"jni\",\n\t\t\t      sizeof (\"jni\") - 1))\n            {\n              if (verbose_args[sizeof (\"jni\") - 1] == '\\0'\n                  || verbose_args[sizeof (\"jni\") - 1] == ',')\n                {\n                  // FIXME: enable JNI messages.\n                  verbose_args += sizeof (\"jni\") - 1;\n                }\n              else\n                goto verbose_arg_err;\n            }\n\t  else if (ignore_unrecognized\n\t\t   && verbose_args[0] == 'X')\n\t    {\n\t      // ignore unrecognized non-standard verbose option\n\t      while (verbose_args[0] != '\\0'\n\t\t     && verbose_args[0] != ',')\n                verbose_args++;\n\t    }\n          else if (verbose_args[0] == ',')\n            {\n              verbose_args++;\n            }\n          else\n            goto verbose_arg_err;\n\n          if (verbose_args[0] == ',')\n            verbose_args++;\n\t}\n      while (verbose_args[0] != '\\0');\n    }\n  else if (option_string[len] == 'g'\n\t   && option_string[len + 1] == 'c'\n\t   && option_string[len + 2] == '\\0')\n    {\n      // FIXME: we should add functions to boehm-gc that\n      // toggle GC_print_stats, GC_PRINT_ADDRESS_MAP and\n      // GC_print_back_height.\n      return 0;\n    }\n  else if (option_string[len] == '\\0')\n    {\n      gcj::verbose_class_flag = true;\n      return 0;\n    }\n  else\n    {\n      // unrecognized option beginning with -verbose\n      return -1;\n    }\n  return 0;\n}\n\n#ifdef INTERPRETER\n// This function loads the agent functions for JVMTI from the library indicated\n// by name.  It returns a negative value on failure, the value of which\n// indicates where ltdl failed, it also prints an error message.\nstatic jint\nload_jvmti_agent (const char *name)\n{\n#ifdef USE_LTDL\n  if (lt_dlinit ())\n    {\n      fprintf (stderr, \n              \"libgcj: Error in ltdl init while loading agent library.\\n\");\n      return -1;\n    }\n \n  lt_dlhandle lib = lt_dlopenext (name);\n  if (!lib)\n    {\n      fprintf (stderr, \n               \"libgcj: Error opening agent library.\\n\");\n      return -2;\n    }\n\n  if (lib)\n    {\n      jvmti_agentonload \n        = (jvmti_agent_onload_func *) lt_dlsym (lib, \"Agent_OnLoad\");\n \n      if (!jvmti_agentonload)\n        {\n          fprintf (stderr, \n                   \"libgcj: Error finding agent function in library %s.\\n\",\n                   name);\n          lt_dlclose (lib);\n          lib = NULL;\n          return -4;\n        }\n      else\n        {\n          jvmti_agentonunload\n            = (jvmti_agent_onunload_func *) lt_dlsym (lib, \"Agent_OnUnload\");\n\t   \n          return 0;\n        }\n    }\n  else\n    {\n      fprintf (stderr, \"libgcj: Library %s not found in library path.\\n\", name);\n      return -3;\n    }\n\n#endif /* USE_LTDL */\n\n  // If LTDL cannot be used, return an error code indicating this.\n  return -99;\n}\n#endif // INTERPRETER\n\nstatic jint\nparse_init_args (JvVMInitArgs* vm_args)\n{\n  // if _Jv_Compiler_Properties is non-NULL then it needs to be\n  // re-allocated dynamically.\n  if (_Jv_Compiler_Properties)\n    {\n      const char** props = _Jv_Compiler_Properties;\n      _Jv_Compiler_Properties = NULL;\n\n      for (int i = 0; props[i]; i++)\n\t{\n\t  _Jv_Compiler_Properties = (const char**) _Jv_Realloc\n\t    (_Jv_Compiler_Properties,\n\t     (_Jv_Properties_Count + 1) * sizeof (const char*));\n\t  _Jv_Compiler_Properties[_Jv_Properties_Count++] = props[i];\n\t}\n    }\n\n  if (vm_args == NULL)\n    return 0;\n\n  for (int i = 0; i < vm_args->nOptions; ++i)\n    {\n      char* option_string = vm_args->options[i].optionString;\n      \n      if (! strcmp (option_string, \"vfprintf\")\n\t  || ! strcmp (option_string, \"exit\")\n\t  || ! strcmp (option_string, \"abort\"))\n\t{\n\t  // FIXME: we are required to recognize these, but for\n\t  // now we don't handle them in any way.\n\t  continue;\n\t}\n      else if (! strncmp (option_string,\n\t\t\t  \"-verbose\", sizeof (\"-verbose\") - 1))\n\t{\n\t  jint result = parse_verbose_args (option_string,\n                                            vm_args->ignoreUnrecognized);\n\t  if (result < 0)\n\t    return result;\n\t}\n      else if (! strncmp (option_string, \"-D\", 2))\n\t{\n\t  _Jv_Compiler_Properties = (const char**) _Jv_Realloc\n\t    (_Jv_Compiler_Properties,\n\t     (_Jv_Properties_Count + 1) * sizeof (char*));\n\n\t  _Jv_Compiler_Properties[_Jv_Properties_Count++] =\n\t    strdup (option_string + 2);\n\n\t  continue;\n\t}\n#ifdef INTERPRETER\n      else if (! strncmp (option_string, \"-agentlib\", sizeof (\"-agentlib\") - 1))\n\t{\n          char *strPtr;\n\t                                              \n          if (strlen(option_string) > (sizeof (\"-agentlib:\") - 1))\n            strPtr = &option_string[sizeof (\"-agentlib:\") - 1];\n          else\n            {\n              fprintf (stderr,\n                \"libgcj: Malformed agentlib argument %s: expected lib name\\n\",\n                option_string);\n              return -1;\n            }\n\n          // These are optional arguments to pass to the agent library.\n          jvmti_agent_opts = strchr (strPtr, '=');\n   \n          if (! strncmp (strPtr, \"jdwp\", 4))\n            {    \t\n              // We want to run JDWP here so set the correct variables.\n              remoteDebug = true;\n              jdwpOptions = ++jvmti_agent_opts;\n            }\n          else\n            {\n              jint nameLength;\n   \n              if (jvmti_agent_opts == NULL)\n                nameLength = strlen (strPtr);\n              else\n                {\n                  nameLength = jvmti_agent_opts - strPtr;\n                  jvmti_agent_opts++;\n                }\n               \n              char lib_name[nameLength + 3 + 1];\n              strcpy (lib_name, \"lib\");\n              strncat (lib_name, strPtr, nameLength);\n      \n              jint result = load_jvmti_agent (lib_name);\n      \n              if (result < 0)\n\t        {\n\t          return -1;\n\t        }\n\n\t      // Mark JVMTI active\n\t      JVMTI::enabled = true;\n            }\n    \n          continue;\n\t}\n      else if (! strncmp (option_string, \"-agentpath:\", \n                          sizeof (\"-agentpath:\") - 1))\n\t{\n          char *strPtr;\n\t                                              \n          if (strlen(option_string) > 10)\n            strPtr = &option_string[10];\n          else\n            {\n              fprintf (stderr,\n                \"libgcj: Malformed agentlib argument %s: expected lib path\\n\",\n                option_string);\n              return -1;\n            }\n\t\t\n          // These are optional arguments to pass to the agent library.\n          jvmti_agent_opts = strchr (strPtr, '=');\n    \n          jint nameLength;\n   \n          if (jvmti_agent_opts == NULL)\n            nameLength = strlen (strPtr);\n          else\n            {\n              nameLength = jvmti_agent_opts - strPtr;\n              jvmti_agent_opts++;\n            }\n    \n          char lib_name[nameLength + 3 + 1];\n          strcpy (lib_name, \"lib\");\n          strncat (lib_name, strPtr, nameLength);\n          jint result = load_jvmti_agent (strPtr);\n\n          if (result < 0)\n            {\n              return -1;\n            }\n\t\n\t  // Mark JVMTI active\n\t  JVMTI::enabled = true;\n          continue;\n\t}\n#endif // INTERPRETER\n      else\n        {\n\t  int r = -1;\n          if (option_string[0] == '_')\n\t    r = parse_x_arg (option_string + 1);\n\t  else if (! strncmp (option_string, \"-X\", 2))\n\t    r = parse_x_arg (option_string + 2);\n\n\t  if (r == -1 && ! vm_args->ignoreUnrecognized)\n            {\n              fprintf (stderr, \"libgcj: unknown option: %s\\n\", option_string);\n              return -1;\n            }\n\t}\n    }\n  return 0;\n}\n\njint\n_Jv_CreateJavaVM (JvVMInitArgs* vm_args)\n{\n  using namespace gcj;\n\n  if (runtimeInitialized)\n    return -1;\n\n  runtimeInitialized = true;\n  startTime = _Jv_platform_gettimeofday();\n\n  jint result = parse_init_args (vm_args);\n  if (result < 0)\n    return -1;\n\n  PROCESS_GCJ_PROPERTIES;\n\n  /* Threads must be initialized before the GC, so that it inherits the\n     signal mask.  */\n  _Jv_InitThreads ();\n  _Jv_InitGC ();\n  _Jv_InitializeSyncMutex ();\n  \n#ifdef INTERPRETER\n  _Jv_InitInterpreter ();\n#endif  \n\n#ifdef HANDLE_SEGV\n  INIT_SEGV;\n#endif\n\n#ifdef HANDLE_FPE\n  INIT_FPE;\n#endif\n\n  /* Initialize Utf8 constants declared in jvm.h. */\n  void_signature = _Jv_makeUtf8Const (\"()V\", 3);\n  clinit_name = _Jv_makeUtf8Const (\"<clinit>\", 8);\n  init_name = _Jv_makeUtf8Const (\"<init>\", 6);\n  finit_name = _Jv_makeUtf8Const (\"finit$\", 6);\n\n  /* Initialize built-in classes to represent primitive TYPEs. */\n  _Jv_InitPrimClass (&_Jv_byteClass,    \"byte\",    'B', 1);\n  _Jv_InitPrimClass (&_Jv_shortClass,   \"short\",   'S', 2);\n  _Jv_InitPrimClass (&_Jv_intClass,     \"int\",     'I', 4);\n  _Jv_InitPrimClass (&_Jv_longClass,    \"long\",    'J', 8);\n  _Jv_InitPrimClass (&_Jv_booleanClass, \"boolean\", 'Z', 1);\n  _Jv_InitPrimClass (&_Jv_charClass,    \"char\",    'C', 2);\n  _Jv_InitPrimClass (&_Jv_floatClass,   \"float\",   'F', 4);\n  _Jv_InitPrimClass (&_Jv_doubleClass,  \"double\",  'D', 8);\n  _Jv_InitPrimClass (&_Jv_voidClass,    \"void\",    'V', 0);\n\n  // We have to initialize this fairly early, to avoid circular class\n  // initialization.  In particular we want to start the\n  // initialization of ClassLoader before we start the initialization\n  // of VMClassLoader.\n  _Jv_InitClass (&java::lang::ClassLoader::class$);\n\n  // Set up the system class loader and the bootstrap class loader.\n  gnu::gcj::runtime::ExtensionClassLoader::initialize();\n  java::lang::VMClassLoader::initialize(JvNewStringLatin1(TOOLEXECLIBDIR));\n\n  _Jv_RegisterBootstrapPackages();\n\n  no_memory = new java::lang::OutOfMemoryError;\n\n#ifdef USE_LTDL\n  LTDL_SET_PRELOADED_SYMBOLS ();\n#endif\n\n  _Jv_platform_initialize ();\n\n  _Jv_JNI_Init ();\n\n#ifdef INTERPRETER\n  _Jv_JVMTI_Init ();\n#endif\n\n  _Jv_GCInitializeFinalizers (&::gnu::gcj::runtime::FinalizerThread::finalizerReady);\n\n  // Start the GC finalizer thread.  A VirtualMachineError can be\n  // thrown by the runtime if, say, threads aren't available.\n  try\n    {\n      using namespace gnu::gcj::runtime;\n      FinalizerThread *ft = new FinalizerThread ();\n      ft->start ();\n    }\n  catch (java::lang::VirtualMachineError *ignore)\n    {\n    }\n\n  runtimeInitialized = true;\n\n  return 0;\n}\n\nvoid\n_Jv_RunMain (JvVMInitArgs *vm_args, jclass klass, const char *name, int argc,\n             const char **argv, bool is_jar)\n{\n#ifndef DISABLE_MAIN_ARGS\n  _Jv_SetArgs (argc, argv);\n#endif\n\n  java::lang::Runtime *runtime = NULL;\n\n  try\n    {\n      if (_Jv_CreateJavaVM (vm_args) < 0)\n\t{\n\t  fprintf (stderr, \"libgcj: couldn't create virtual machine\\n\");\n\t  exit (1);\n\t}\n      \n      if (vm_args == NULL)\n\tgcj::vmArgs = JvConvertArgv(0, NULL);\n      else\n\t{\n\t  const char* vmArgs[vm_args->nOptions];\n\t  const char** vmPtr = vmArgs;\n\t  struct _Jv_VMOption* optionPtr = vm_args->options;\n\t  for (int i = 0; i < vm_args->nOptions; ++i)\n\t    *vmPtr++ = (*optionPtr++).optionString;\n\t  gcj::vmArgs = JvConvertArgv(vm_args->nOptions, vmArgs);\n\t}\n\n      // Get the Runtime here.  We want to initialize it before searching\n      // for `main'; that way it will be set up if `main' is a JNI method.\n      runtime = java::lang::Runtime::getRuntime ();\n\n#ifdef DISABLE_MAIN_ARGS\n      arg_vec = JvConvertArgv (0, 0);\n#else      \n      arg_vec = JvConvertArgv (argc - 1, argv + 1);\n#endif\n\n      using namespace gnu::java::lang;\n      if (klass)\n\tmain_thread = new MainThread (klass, arg_vec);\n      else\n\tmain_thread = new MainThread (JvNewStringUTF (name),\n\t\t\t\t      arg_vec, is_jar);\n      _Jv_AttachCurrentThread (main_thread);\n\n#ifdef INTERPRETER\n      // Start JVMTI if an agent function has been found.\n      if (jvmti_agentonload)\n        (*jvmti_agentonload) (_Jv_GetJavaVM (), jvmti_agent_opts, NULL);\n\n      // Start JDWP\n      if (remoteDebug)\n\t{\n\t  using namespace gnu::classpath::jdwp;\n\t  VMVirtualMachine::initialize ();\n\t  Jdwp *jdwp = new Jdwp ();\n\t  jdwp->setDaemon (true);\t  \n\t  jdwp->configure (JvNewStringLatin1 (jdwpOptions));\n\t  jdwp->start ();\n\n\t  // Wait for JDWP to initialize and start\n\t  jdwp->join ();\n\t}\n      // Send VMInit\n      if (JVMTI_REQUESTED_EVENT (VMInit))\n\t_Jv_JVMTI_PostEvent (JVMTI_EVENT_VM_INIT, main_thread);\n#endif // INTERPRETER\n    }\n  catch (java::lang::Throwable *t)\n    {\n      java::lang::System::err->println (JvNewStringLatin1 \n        (\"Exception during runtime initialization\"));\n      t->printStackTrace();\n      if (runtime)\n\tjava::lang::Runtime::exitNoChecksAccessor (1);\n      // In case the runtime creation failed.\n      ::exit (1);\n    }\n\n  _Jv_ThreadRun (main_thread);\n\n#ifdef INTERPRETER\n  // Send VMDeath\n  if (JVMTI_REQUESTED_EVENT (VMDeath))\n    {\n      java::lang::Thread *thread = java::lang::Thread::currentThread ();\n      JNIEnv *jni_env = _Jv_GetCurrentJNIEnv ();\n      _Jv_JVMTI_PostEvent (JVMTI_EVENT_VM_DEATH, thread, jni_env);\n    }\n\n  // Run JVMTI AgentOnUnload if it exists and an agent is loaded.\n  if (jvmti_agentonunload)\n    (*jvmti_agentonunload) (_Jv_GetJavaVM ());\n#endif // INTERPRETER\n\n  // If we got here then something went wrong, as MainThread is not\n  // supposed to terminate.\n  ::exit (1);\n}\n\nvoid\n_Jv_RunMain (jclass klass, const char *name, int argc, const char **argv, \n\t     bool is_jar)\n{\n  _Jv_RunMain (NULL, klass, name, argc, argv, is_jar);\n}\n\nvoid\nJvRunMain (jclass klass, int argc, const char **argv)\n{\n  _Jv_RunMain (klass, NULL, argc, argv, false);\n}\n\nvoid\nJvRunMainName (const char *name, int argc, const char **argv)\n{\n  _Jv_RunMain (NULL, name, argc, argv, false);\n}\n\n\f\n\n// Parse a string and return a heap size.\nstatic size_t\nparse_memory_size (const char *spec)\n{\n  char *end;\n  unsigned long val = strtoul (spec, &end, 10);\n  if (*end == 'k' || *end == 'K')\n    val *= 1024;\n  else if (*end == 'm' || *end == 'M')\n    val *= 1048576;\n  return (size_t) val;\n}\n\n// Set the initial heap size.  This might be ignored by the GC layer.\n// This must be called before _Jv_RunMain.\nvoid\n_Jv_SetInitialHeapSize (const char *arg)\n{\n  size_t size = parse_memory_size (arg);\n  _Jv_GCSetInitialHeapSize (size);\n}\n\n// Set the maximum heap size.  This might be ignored by the GC layer.\n// This must be called before _Jv_RunMain.\nvoid\n_Jv_SetMaximumHeapSize (const char *arg)\n{\n  size_t size = parse_memory_size (arg);\n  _Jv_GCSetMaximumHeapSize (size);\n}\n\nvoid\n_Jv_SetStackSize (const char *arg)\n{\n  size_t size = parse_memory_size (arg);\n  gcj::stack_size = size;\n}\n\nvoid *\n_Jv_Malloc (jsize size)\n{\n  if (__builtin_expect (size == 0, false))\n    size = 1;\n  void *ptr = malloc ((size_t) size);\n  if (__builtin_expect (ptr == NULL, false))\n    throw no_memory;\n  return ptr;\n}\n\nvoid *\n_Jv_Realloc (void *ptr, jsize size)\n{\n  if (__builtin_expect (size == 0, false))\n    size = 1;\n  ptr = realloc (ptr, (size_t) size);\n  if (__builtin_expect (ptr == NULL, false))\n    throw no_memory;\n  return ptr;\n}\n\nvoid *\n_Jv_MallocUnchecked (jsize size)\n{\n  if (__builtin_expect (size == 0, false))\n    size = 1;\n  return malloc ((size_t) size);\n}\n\nvoid\n_Jv_Free (void* ptr)\n{\n  return free (ptr);\n}\n\n\f\n\n// In theory, these routines can be #ifdef'd away on machines which\n// support divide overflow signals.  However, we never know if some\n// code might have been compiled with \"-fuse-divide-subroutine\", so we\n// always include them in libgcj.\n\njint\n_Jv_divI (jint dividend, jint divisor)\n{\n  if (__builtin_expect (divisor == 0, false))\n    {\n      java::lang::ArithmeticException *arithexception \n\t= new java::lang::ArithmeticException (JvNewStringLatin1 (\"/ by zero\"));      \n      throw arithexception;\n    }\n  \n  if (dividend == (jint) 0x80000000L && divisor == -1)\n    return dividend;\n\n  return dividend / divisor;\n}\n\njint\n_Jv_remI (jint dividend, jint divisor)\n{\n  if (__builtin_expect (divisor == 0, false))\n    {\n      java::lang::ArithmeticException *arithexception \n\t= new java::lang::ArithmeticException (JvNewStringLatin1 (\"/ by zero\"));      \n      throw arithexception;\n    }\n  \n  if (dividend == (jint) 0x80000000L && divisor == -1)\n    return 0;\n  \n  return dividend % divisor;\n}\n\njlong\n_Jv_divJ (jlong dividend, jlong divisor)\n{\n  if (__builtin_expect (divisor == 0, false))\n    {\n      java::lang::ArithmeticException *arithexception \n\t= new java::lang::ArithmeticException (JvNewStringLatin1 (\"/ by zero\"));      \n      throw arithexception;\n    }\n\n  if (dividend == (jlong) 0x8000000000000000LL && divisor == -1)\n    return dividend;\n\n  return dividend / divisor;\n}\n\njlong\n_Jv_remJ (jlong dividend, jlong divisor)\n{\n  if (__builtin_expect (divisor == 0, false))\n    {\n      java::lang::ArithmeticException *arithexception \n\t= new java::lang::ArithmeticException (JvNewStringLatin1 (\"/ by zero\"));      \n      throw arithexception;\n    }\n\n  if (dividend == (jlong) 0x8000000000000000LL && divisor == -1)\n    return 0;\n\n  return dividend % divisor;\n}\n\n\f\n\n// Return true if SELF_KLASS can access a field or method in\n// OTHER_KLASS.  The field or method's access flags are specified in\n// FLAGS.\njboolean\n_Jv_CheckAccess (jclass self_klass, jclass other_klass, jint flags)\n{\n  using namespace java::lang::reflect;\n  return ((self_klass == other_klass)\n\t  || ((flags & Modifier::PUBLIC) != 0)\n\t  || (((flags & Modifier::PROTECTED) != 0)\n\t      && _Jv_IsAssignableFromSlow (self_klass, other_klass))\n\t  || (((flags & Modifier::PRIVATE) == 0)\n\t      && _Jv_ClassNameSamePackage (self_klass->name,\n\t\t\t\t\t   other_klass->name)));\n}\n\n// Prepend GCJ_VERSIONED_LIBDIR to a module search path stored in a C\n// char array, if the path is not already prefixed by\n// GCJ_VERSIONED_LIBDIR.  Return a newly JvMalloc'd char buffer.  The\n// result should be freed using JvFree.\nchar*\n_Jv_PrependVersionedLibdir (char* libpath)\n{\n  char* retval = 0;\n\n  if (libpath && libpath[0] != '\\0')\n    {\n      if (! strncmp (libpath,\n                     GCJ_VERSIONED_LIBDIR,\n                     sizeof (GCJ_VERSIONED_LIBDIR) - 1))\n        {\n          // LD_LIBRARY_PATH is already prefixed with\n          // GCJ_VERSIONED_LIBDIR.\n          retval = (char*) _Jv_Malloc (strlen (libpath) + 1);\n          strcpy (retval, libpath);\n        }\n      else\n        {\n          // LD_LIBRARY_PATH is not prefixed with\n          // GCJ_VERSIONED_LIBDIR.\n\t  char path_sep[2];\n\t  path_sep[0] = (char) _Jv_platform_path_separator;\n\t  path_sep[1] = '\\0';\n          jsize total = ((sizeof (GCJ_VERSIONED_LIBDIR) - 1)\n\t\t\t + 1 /* path separator */ + strlen (libpath) + 1);\n          retval = (char*) _Jv_Malloc (total);\n          strcpy (retval, GCJ_VERSIONED_LIBDIR);\n          strcat (retval, path_sep);\n          strcat (retval, libpath);\n        }\n    }\n  else\n    {\n      // LD_LIBRARY_PATH was not specified or is empty.\n      retval = (char*) _Jv_Malloc (sizeof (GCJ_VERSIONED_LIBDIR));\n      strcpy (retval, GCJ_VERSIONED_LIBDIR);\n    }\n\n  return retval;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/ltmain.sh": "# Generated from ltmain.m4sh.\n\n# libtool (GNU libtool 1.3134 2009-11-29) 2.2.7a\n# Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n\n# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006,\n# 2007, 2008, 2009 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n# Usage: $progname [OPTION]... [MODE-ARG]...\n#\n# Provide generalized library-building support services.\n#\n#       --config             show all configuration variables\n#       --debug              enable verbose shell tracing\n#   -n, --dry-run            display commands without modifying any files\n#       --features           display basic configuration information and exit\n#       --mode=MODE          use operation mode MODE\n#       --no-finish          let install mode avoid finish commands\n#       --preserve-dup-deps  don't remove duplicate dependency libraries\n#       --quiet, --silent    don't print informational messages\n#       --no-quiet, --no-silent\n#                            print informational messages (default)\n#       --tag=TAG            use configuration variables from tag TAG\n#   -v, --verbose            print more informational messages than default\n#       --no-verbose         don't print the extra informational messages\n#       --version            print version information\n#   -h, --help, --help-all   print short, long, or detailed help message\n#\n# MODE must be one of the following:\n#\n#         clean              remove files from the build directory\n#         compile            compile a source file into a libtool object\n#         execute            automatically set library path, then run a program\n#         finish             complete the installation of libtool libraries\n#         install            install libraries or executables\n#         link               create a library or an executable\n#         uninstall          remove libraries from an installed directory\n#\n# MODE-ARGS vary depending on the MODE.  When passed as first option,\n# `--mode=MODE' may be abbreviated as `MODE' or a unique abbreviation of that.\n# Try `$progname --help --mode=MODE' for a more detailed description of MODE.\n#\n# When reporting a bug, please describe a test case to reproduce it and\n# include the following information:\n#\n#         host-triplet:\t$host\n#         shell:\t\t$SHELL\n#         compiler:\t\t$LTCC\n#         compiler flags:\t\t$LTCFLAGS\n#         linker:\t\t$LD (gnu? $with_gnu_ld)\n#         $progname:\t(GNU libtool 1.3134 2009-11-29) 2.2.7a\n#         automake:\t$automake_version\n#         autoconf:\t$autoconf_version\n#\n# Report bugs to <bug-libtool@gnu.org>.\n\nPROGRAM=libtool\nPACKAGE=libtool\nVERSION=2.2.7a\nTIMESTAMP=\" 1.3134 2009-11-29\"\npackage_revision=1.3134\n\n# Be Bourne compatible\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n$1\n_LTECHO_EOF'\n}\n\n# NLS nuisances: We save the old values to restore during execute mode.\n# Only set LANG and LC_ALL to C if already set.\n# These must not be set unconditionally because not all systems understand\n# e.g. LANG=C (notably SCO).\nlt_user_locale=\nlt_safe_locale=\nfor lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\ndo\n  eval \"if test \\\"\\${$lt_var+set}\\\" = set; then\n          save_$lt_var=\\$$lt_var\n          $lt_var=C\n\t  export $lt_var\n\t  lt_user_locale=\\\"$lt_var=\\\\\\$save_\\$lt_var; \\$lt_user_locale\\\"\n\t  lt_safe_locale=\\\"$lt_var=C; \\$lt_safe_locale\\\"\n\tfi\"\ndone\n\n$lt_unset CDPATH\n\n\n\n\n\n\n\n# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh\n# is ksh but when the shell is invoked as \"sh\" and the current value of\n# the _XPG environment variable is not equal to 1 (one), the special\n# positional parameter $0, within a function call, is the name of the\n# function.\nprogpath=\"$0\"\n\n\n\n: ${CP=\"cp -f\"}\n: ${ECHO=$as_echo}\n: ${EGREP=\"/bin/grep -E\"}\n: ${FGREP=\"/bin/grep -F\"}\n: ${GREP=\"/bin/grep\"}\n: ${LN_S=\"ln -s\"}\n: ${MAKE=\"make\"}\n: ${MKDIR=\"mkdir\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n: ${SED=\"/mount/endor/wildenhu/local-x86_64/bin/sed\"}\n: ${SHELL=\"${CONFIG_SHELL-/bin/sh}\"}\n: ${Xsed=\"$SED -e 1s/^X//\"}\n\n# Global variables:\nEXIT_SUCCESS=0\nEXIT_FAILURE=1\nEXIT_MISMATCH=63  # $? = 63 is used to indicate version mismatch to missing.\nEXIT_SKIP=77\t  # $? = 77 is used to indicate a skipped test to automake.\n\nexit_status=$EXIT_SUCCESS\n\n# Make sure IFS has a sensible default\nlt_nl='\n'\nIFS=\" \t$lt_nl\"\n\ndirname=\"s,/[^/]*$,,\"\nbasename=\"s,^.*/,,\"\n\n# func_dirname_and_basename file append nondir_replacement\n# perform func_basename and func_dirname in a single function\n# call:\n#   dirname:  Compute the dirname of FILE.  If nonempty,\n#             add APPEND to the result, otherwise set result\n#             to NONDIR_REPLACEMENT.\n#             value returned in \"$func_dirname_result\"\n#   basename: Compute filename of FILE.\n#             value retuned in \"$func_basename_result\"\n# Implementation must be kept synchronized with func_dirname\n# and func_basename. For efficiency, we do not delegate to\n# those functions but instead duplicate the functionality here.\nfunc_dirname_and_basename ()\n{\n  # Extract subdirectory from the argument.\n  func_dirname_result=`$ECHO \"${1}\" | $SED -e \"$dirname\"`\n  if test \"X$func_dirname_result\" = \"X${1}\"; then\n    func_dirname_result=\"${3}\"\n  else\n    func_dirname_result=\"$func_dirname_result${2}\"\n  fi\n  func_basename_result=`$ECHO \"${1}\" | $SED -e \"$basename\"`\n}\n\n# Generated shell functions inserted here.\n\n# These SED scripts presuppose an absolute path with a trailing slash.\npathcar='s,^/\\([^/]*\\).*$,\\1,'\npathcdr='s,^/[^/]*,,'\nremovedotparts=':dotsl\n\t\ts@/\\./@/@g\n\t\tt dotsl\n\t\ts,/\\.$,/,'\ncollapseslashes='s@/\\{1,\\}@/@g'\nfinalslash='s,/*$,/,'\n\n# func_normal_abspath PATH\n# Remove doubled-up and trailing slashes, \".\" path components,\n# and cancel out any \"..\" path components in PATH after making\n# it an absolute path.\n#             value returned in \"$func_normal_abspath_result\"\nfunc_normal_abspath ()\n{\n  # Start from root dir and reassemble the path.\n  func_normal_abspath_result=\n  func_normal_abspath_tpath=$1\n  func_normal_abspath_altnamespace=\n  case $func_normal_abspath_tpath in\n    \"\")\n      # Empty path, that just means $cwd.\n      func_stripname '' '/' \"`pwd`\"\n      func_normal_abspath_result=$func_stripname_result\n      return\n    ;;\n    # The next three entries are used to spot a run of precisely\n    # two leading slashes without using negated character classes;\n    # we take advantage of case's first-match behaviour.\n    ///*)\n      # Unusual form of absolute path, do nothing.\n    ;;\n    //*)\n      # Not necessarily an ordinary path; POSIX reserves leading '//'\n      # and for example Cygwin uses it to access remote file shares\n      # over CIFS/SMB, so we conserve a leading double slash if found.\n      func_normal_abspath_altnamespace=/\n    ;;\n    /*)\n      # Absolute path, do nothing.\n    ;;\n    *)\n      # Relative path, prepend $cwd.\n      func_normal_abspath_tpath=`pwd`/$func_normal_abspath_tpath\n    ;;\n  esac\n  # Cancel out all the simple stuff to save iterations.  We also want\n  # the path to end with a slash for ease of parsing, so make sure\n  # there is one (and only one) here.\n  func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$removedotparts\" -e \"$collapseslashes\" -e \"$finalslash\"`\n  while :; do\n    # Processed it all yet?\n    if test \"$func_normal_abspath_tpath\" = / ; then\n      # If we ascended to the root using \"..\" the result may be empty now.\n      if test -z \"$func_normal_abspath_result\" ; then\n        func_normal_abspath_result=/\n      fi\n      break\n    fi\n    func_normal_abspath_tcomponent=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$pathcar\"`\n    func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$pathcdr\"`\n    # Figure out what to do with it\n    case $func_normal_abspath_tcomponent in\n      \"\")\n        # Trailing empty path component, ignore it.\n      ;;\n      ..)\n        # Parent dir; strip last assembled component from result.\n        func_dirname \"$func_normal_abspath_result\"\n        func_normal_abspath_result=$func_dirname_result\n      ;;\n      *)\n        # Actual path component, append it.\n        func_normal_abspath_result=$func_normal_abspath_result/$func_normal_abspath_tcomponent\n      ;;\n    esac\n  done\n  # Restore leading double-slash if one was found on entry.\n  func_normal_abspath_result=$func_normal_abspath_altnamespace$func_normal_abspath_result\n}\n\n# func_relative_path SRCDIR DSTDIR\n# generates a relative path from SRCDIR to DSTDIR, with a trailing\n# slash if non-empty, suitable for immediately appending a filename\n# without needing to append a separator.\n#             value returned in \"$func_relative_path_result\"\nfunc_relative_path ()\n{\n  func_relative_path_result=\n  func_normal_abspath \"$1\"\n  func_relative_path_tlibdir=$func_normal_abspath_result\n  func_normal_abspath \"$2\"\n  func_relative_path_tbindir=$func_normal_abspath_result\n\n  # Ascend the tree starting from libdir\n  while :; do\n    # check if we have found a prefix of bindir\n    case $func_relative_path_tbindir in\n      $func_relative_path_tlibdir)\n        # found an exact match\n        func_relative_path_tcancelled=\n        break\n        ;;\n      $func_relative_path_tlibdir*)\n        # found a matching prefix\n        func_stripname \"$func_relative_path_tlibdir\" '' \"$func_relative_path_tbindir\"\n        func_relative_path_tcancelled=$func_stripname_result\n        if test -z \"$func_relative_path_result\"; then\n          func_relative_path_result=.\n        fi\n        break\n        ;;\n      *)\n        func_dirname $func_relative_path_tlibdir\n        func_relative_path_tlibdir=${func_dirname_result}\n        if test \"x$func_relative_path_tlibdir\" = x ; then\n          # Have to descend all the way to the root!\n          func_relative_path_result=../$func_relative_path_result\n          func_relative_path_tcancelled=$func_relative_path_tbindir\n          break\n        fi\n        func_relative_path_result=../$func_relative_path_result\n        ;;\n    esac\n  done\n\n  # Now calculate path; take care to avoid doubling-up slashes.\n  func_stripname '' '/' \"$func_relative_path_result\"\n  func_relative_path_result=$func_stripname_result\n  func_stripname '/' '/' \"$func_relative_path_tcancelled\"\n  if test \"x$func_stripname_result\" != x ; then\n    func_relative_path_result=${func_relative_path_result}/${func_stripname_result}\n  fi\n\n  # Normalisation. If bindir is libdir, return empty string,\n  # else relative path ending with a slash; either way, target\n  # file name can be directly appended.\n  if test ! -z \"$func_relative_path_result\"; then\n    func_stripname './' '' \"$func_relative_path_result/\"\n    func_relative_path_result=$func_stripname_result\n  fi\n}\n\n# The name of this program:\nfunc_dirname_and_basename \"$progpath\"\nprogname=$func_basename_result\n\n# Make sure we have an absolute path for reexecution:\ncase $progpath in\n  [\\\\/]*|[A-Za-z]:\\\\*) ;;\n  *[\\\\/]*)\n     progdir=$func_dirname_result\n     progdir=`cd \"$progdir\" && pwd`\n     progpath=\"$progdir/$progname\"\n     ;;\n  *)\n     save_IFS=\"$IFS\"\n     IFS=:\n     for progdir in $PATH; do\n       IFS=\"$save_IFS\"\n       test -x \"$progdir/$progname\" && break\n     done\n     IFS=\"$save_IFS\"\n     test -n \"$progdir\" || progdir=`pwd`\n     progpath=\"$progdir/$progname\"\n     ;;\nesac\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed=\"${SED}\"' -e 1s/^X//'\nsed_quote_subst='s/\\([`\"$\\\\]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([\"`\\\\]\\)/\\\\\\1/g'\n\n# Re-`\\' parameter expansions in output of double_quote_subst that were\n# `\\'-ed in input to the same.  If an odd number of `\\' preceded a '$'\n# in input to double_quote_subst, that '$' was protected from expansion.\n# Since each input `\\' is now two `\\'s, look for any number of runs of\n# four `\\'s followed by two `\\'s and then a '$'.  `\\' that '$'.\nbs='\\\\'\nbs2='\\\\\\\\'\nbs4='\\\\\\\\\\\\\\\\'\ndollar='\\$'\nsed_double_backslash=\"\\\n  s/$bs4/&\\\\\n/g\n  s/^$bs2$dollar/$bs&/\n  s/\\\\([^$bs]\\\\)$bs2$dollar/\\\\1$bs2$bs$dollar/g\n  s/\\n//g\"\n\n# Standard options:\nopt_dry_run=false\nopt_help=false\nopt_quiet=false\nopt_verbose=false\nopt_warning=:\n\n# func_echo arg...\n# Echo program name prefixed message, along with the current mode\n# name if it has been set yet.\nfunc_echo ()\n{\n    $ECHO \"$progname${mode+: }$mode: $*\"\n}\n\n# func_verbose arg...\n# Echo program name prefixed message in verbose mode only.\nfunc_verbose ()\n{\n    $opt_verbose && func_echo ${1+\"$@\"}\n\n    # A bug in bash halts the script if the last line of a function\n    # fails when set -e is in force, so we need another command to\n    # work around that:\n    :\n}\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\n# func_error arg...\n# Echo program name prefixed message to standard error.\nfunc_error ()\n{\n    $ECHO \"$progname${mode+: }$mode: \"${1+\"$@\"} 1>&2\n}\n\n# func_warning arg...\n# Echo program name prefixed warning message to standard error.\nfunc_warning ()\n{\n    $opt_warning && $ECHO \"$progname${mode+: }$mode: warning: \"${1+\"$@\"} 1>&2\n\n    # bash bug again:\n    :\n}\n\n# func_fatal_error arg...\n# Echo program name prefixed message to standard error, and exit.\nfunc_fatal_error ()\n{\n    func_error ${1+\"$@\"}\n    exit $EXIT_FAILURE\n}\n\n# func_fatal_help arg...\n# Echo program name prefixed message to standard error, followed by\n# a help hint, and exit.\nfunc_fatal_help ()\n{\n    func_error ${1+\"$@\"}\n    func_fatal_error \"$help\"\n}\nhelp=\"Try \\`$progname --help' for more information.\"  ## default\n\n\n# func_grep expression filename\n# Check whether EXPRESSION matches any line of FILENAME, without output.\nfunc_grep ()\n{\n    $GREP \"$1\" \"$2\" >/dev/null 2>&1\n}\n\n\n# func_mkdir_p directory-path\n# Make sure the entire path to DIRECTORY-PATH is available.\nfunc_mkdir_p ()\n{\n    my_directory_path=\"$1\"\n    my_dir_list=\n\n    if test -n \"$my_directory_path\" && test \"$opt_dry_run\" != \":\"; then\n\n      # Protect directory names starting with `-'\n      case $my_directory_path in\n        -*) my_directory_path=\"./$my_directory_path\" ;;\n      esac\n\n      # While some portion of DIR does not yet exist...\n      while test ! -d \"$my_directory_path\"; do\n        # ...make a list in topmost first order.  Use a colon delimited\n\t# list incase some portion of path contains whitespace.\n        my_dir_list=\"$my_directory_path:$my_dir_list\"\n\n        # If the last portion added has no slash in it, the list is done\n        case $my_directory_path in */*) ;; *) break ;; esac\n\n        # ...otherwise throw away the child directory and loop\n        my_directory_path=`$ECHO \"$my_directory_path\" | $SED -e \"$dirname\"`\n      done\n      my_dir_list=`$ECHO \"$my_dir_list\" | $SED 's,:*$,,'`\n\n      save_mkdir_p_IFS=\"$IFS\"; IFS=':'\n      for my_dir in $my_dir_list; do\n\tIFS=\"$save_mkdir_p_IFS\"\n        # mkdir can fail with a `File exist' error if two processes\n        # try to create one of the directories concurrently.  Don't\n        # stop in that case!\n        $MKDIR \"$my_dir\" 2>/dev/null || :\n      done\n      IFS=\"$save_mkdir_p_IFS\"\n\n      # Bail out if we (or some other process) failed to create a directory.\n      test -d \"$my_directory_path\" || \\\n        func_fatal_error \"Failed to create \\`$1'\"\n    fi\n}\n\n\n# func_mktempdir [string]\n# Make a temporary directory that won't clash with other running\n# libtool processes, and avoids race conditions if possible.  If\n# given, STRING is the basename for that directory.\nfunc_mktempdir ()\n{\n    my_template=\"${TMPDIR-/tmp}/${1-$progname}\"\n\n    if test \"$opt_dry_run\" = \":\"; then\n      # Return a directory name, but don't create it in dry-run mode\n      my_tmpdir=\"${my_template}-$$\"\n    else\n\n      # If mktemp works, use that first and foremost\n      my_tmpdir=`mktemp -d \"${my_template}-XXXXXXXX\" 2>/dev/null`\n\n      if test ! -d \"$my_tmpdir\"; then\n        # Failing that, at least try and use $RANDOM to avoid a race\n        my_tmpdir=\"${my_template}-${RANDOM-0}$$\"\n\n        save_mktempdir_umask=`umask`\n        umask 0077\n        $MKDIR \"$my_tmpdir\"\n        umask $save_mktempdir_umask\n      fi\n\n      # If we're not in dry-run mode, bomb out on failure\n      test -d \"$my_tmpdir\" || \\\n        func_fatal_error \"cannot create temporary directory \\`$my_tmpdir'\"\n    fi\n\n    $ECHO \"$my_tmpdir\"\n}\n\n\n# func_quote_for_eval arg\n# Aesthetically quote ARG to be evaled later.\n# This function returns two values: FUNC_QUOTE_FOR_EVAL_RESULT\n# is double-quoted, suitable for a subsequent eval, whereas\n# FUNC_QUOTE_FOR_EVAL_UNQUOTED_RESULT has merely all characters\n# which are still active within double quotes backslashified.\nfunc_quote_for_eval ()\n{\n    case $1 in\n      *[\\\\\\`\\\"\\$]*)\n\tfunc_quote_for_eval_unquoted_result=`$ECHO \"$1\" | $SED \"$sed_quote_subst\"` ;;\n      *)\n        func_quote_for_eval_unquoted_result=\"$1\" ;;\n    esac\n\n    case $func_quote_for_eval_unquoted_result in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting, command substitution and and variable\n      # expansion for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        func_quote_for_eval_result=\"\\\"$func_quote_for_eval_unquoted_result\\\"\"\n        ;;\n      *)\n        func_quote_for_eval_result=\"$func_quote_for_eval_unquoted_result\"\n    esac\n}\n\n\n# func_quote_for_expand arg\n# Aesthetically quote ARG to be evaled later; same as above,\n# but do not quote variable references.\nfunc_quote_for_expand ()\n{\n    case $1 in\n      *[\\\\\\`\\\"]*)\n\tmy_arg=`$ECHO \"$1\" | $SED \\\n\t    -e \"$double_quote_subst\" -e \"$sed_double_backslash\"` ;;\n      *)\n        my_arg=\"$1\" ;;\n    esac\n\n    case $my_arg in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting and command substitution for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        my_arg=\"\\\"$my_arg\\\"\"\n        ;;\n    esac\n\n    func_quote_for_expand_result=\"$my_arg\"\n}\n\n\n# func_show_eval cmd [fail_exp]\n# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.\nfunc_show_eval ()\n{\n    my_cmd=\"$1\"\n    my_fail_exp=\"${2-:}\"\n\n    ${opt_silent-false} || {\n      func_quote_for_expand \"$my_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    if ${opt_dry_run-false}; then :; else\n      eval \"$my_cmd\"\n      my_status=$?\n      if test \"$my_status\" -eq 0; then :; else\n\teval \"(exit $my_status); $my_fail_exp\"\n      fi\n    fi\n}\n\n\n# func_show_eval_locale cmd [fail_exp]\n# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.  Use the saved locale for evaluation.\nfunc_show_eval_locale ()\n{\n    my_cmd=\"$1\"\n    my_fail_exp=\"${2-:}\"\n\n    ${opt_silent-false} || {\n      func_quote_for_expand \"$my_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    if ${opt_dry_run-false}; then :; else\n      eval \"$lt_user_locale\n\t    $my_cmd\"\n      my_status=$?\n      eval \"$lt_safe_locale\"\n      if test \"$my_status\" -eq 0; then :; else\n\teval \"(exit $my_status); $my_fail_exp\"\n      fi\n    fi\n}\n\n\n\n\n\n# func_version\n# Echo version message to standard output and exit.\nfunc_version ()\n{\n    $SED -n '/(C)/!b go\n\t:more\n\t/\\./!{\n\t  N\n\t  s/\\n# //\n\t  b more\n\t}\n\t:go\n\t/^# '$PROGRAM' (GNU /,/# warranty; / {\n        s/^# //\n\ts/^# *$//\n        s/\\((C)\\)[ 0-9,-]*\\( [1-9][0-9]*\\)/\\1\\2/\n        p\n     }' < \"$progpath\"\n     exit $?\n}\n\n# func_usage\n# Echo short help message to standard output and exit.\nfunc_usage ()\n{\n    $SED -n '/^# Usage:/,/^#  *-h/ {\n        s/^# //\n\ts/^# *$//\n\ts/\\$progname/'$progname'/\n\tp\n    }' < \"$progpath\"\n    echo\n    $ECHO \"run \\`$progname --help | more' for full usage\"\n    exit $?\n}\n\n# func_help [NOEXIT]\n# Echo long help message to standard output and exit,\n# unless 'noexit' is passed as argument.\nfunc_help ()\n{\n    $SED -n '/^# Usage:/,/# Report bugs to/ {\n        s/^# //\n\ts/^# *$//\n\ts*\\$progname*'$progname'*\n\ts*\\$host*'\"$host\"'*\n\ts*\\$SHELL*'\"$SHELL\"'*\n\ts*\\$LTCC*'\"$LTCC\"'*\n\ts*\\$LTCFLAGS*'\"$LTCFLAGS\"'*\n\ts*\\$LD*'\"$LD\"'*\n\ts/\\$with_gnu_ld/'\"$with_gnu_ld\"'/\n\ts/\\$automake_version/'\"`(automake --version) 2>/dev/null |$SED 1q`\"'/\n\ts/\\$autoconf_version/'\"`(autoconf --version) 2>/dev/null |$SED 1q`\"'/\n\tp\n     }' < \"$progpath\"\n    ret=$?\n    if test -z \"$1\"; then\n      exit $ret\n    fi\n}\n\n# func_missing_arg argname\n# Echo program name prefixed message to standard error and set global\n# exit_cmd.\nfunc_missing_arg ()\n{\n    func_error \"missing argument for $1\"\n    exit_cmd=exit\n}\n\nexit_cmd=:\n\n\n\n\n\n\nmagic=\"%%%MAGIC variable%%%\"\nmagic_exe=\"%%%MAGIC EXE variable%%%\"\n\n# Global variables.\n# $mode is unset\nnonopt=\nexecute_dlfiles=\npreserve_args=\nlo2o=\"s/\\\\.lo\\$/.${objext}/\"\no2lo=\"s/\\\\.${objext}\\$/.lo/\"\nextracted_archives=\nextracted_serial=0\n\nopt_dry_run=false\nopt_finish=:\nopt_duplicate_deps=false\nopt_silent=false\nopt_debug=:\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\n# func_fatal_configuration arg...\n# Echo program name prefixed message to standard error, followed by\n# a configuration failure hint, and exit.\nfunc_fatal_configuration ()\n{\n    func_error ${1+\"$@\"}\n    func_error \"See the $PACKAGE documentation for more information.\"\n    func_fatal_error \"Fatal configuration error.\"\n}\n\n\n# func_config\n# Display the configuration for all the tags in this script.\nfunc_config ()\n{\n    re_begincf='^# ### BEGIN LIBTOOL'\n    re_endcf='^# ### END LIBTOOL'\n\n    # Default configuration.\n    $SED \"1,/$re_begincf CONFIG/d;/$re_endcf CONFIG/,\\$d\" < \"$progpath\"\n\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      $SED -n \"/$re_begincf TAG CONFIG: $tagname\\$/,/$re_endcf TAG CONFIG: $tagname\\$/p\" < \"$progpath\"\n    done\n\n    exit $?\n}\n\n# func_features\n# Display the features supported by this script.\nfunc_features ()\n{\n    echo \"host: $host\"\n    if test \"$build_libtool_libs\" = yes; then\n      echo \"enable shared libraries\"\n    else\n      echo \"disable shared libraries\"\n    fi\n    if test \"$build_old_libs\" = yes; then\n      echo \"enable static libraries\"\n    else\n      echo \"disable static libraries\"\n    fi\n\n    exit $?\n}\n\n# func_enable_tag tagname\n# Verify that TAGNAME is valid, and either flag an error and exit, or\n# enable the TAGNAME tag.  We also add TAGNAME to the global $taglist\n# variable here.\nfunc_enable_tag ()\n{\n  # Global variable:\n  tagname=\"$1\"\n\n  re_begincf=\"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\\$\"\n  re_endcf=\"^# ### END LIBTOOL TAG CONFIG: $tagname\\$\"\n  sed_extractcf=\"/$re_begincf/,/$re_endcf/p\"\n\n  # Validate tagname.\n  case $tagname in\n    *[!-_A-Za-z0-9,/]*)\n      func_fatal_error \"invalid tag name: $tagname\"\n      ;;\n  esac\n\n  # Don't test for the \"default\" C tag, as we know it's\n  # there but not specially marked.\n  case $tagname in\n    CC) ;;\n    *)\n      if $GREP \"$re_begincf\" \"$progpath\" >/dev/null 2>&1; then\n\ttaglist=\"$taglist $tagname\"\n\n\t# Evaluate the configuration.  Be careful to quote the path\n\t# and the sed script, to avoid splitting on whitespace, but\n\t# also don't use non-portable quotes within backquotes within\n\t# quotes we have to do it in 2 steps:\n\textractedcf=`$SED -n -e \"$sed_extractcf\" < \"$progpath\"`\n\teval \"$extractedcf\"\n      else\n\tfunc_error \"ignoring unknown tag $tagname\"\n      fi\n      ;;\n  esac\n}\n\n# Parse options once, thoroughly.  This comes as soon as possible in\n# the script to make things like `libtool --version' happen quickly.\n{\n\n  # Shorthand for --mode=foo, only valid as the first argument\n  case $1 in\n  clean|clea|cle|cl)\n    shift; set dummy --mode clean ${1+\"$@\"}; shift\n    ;;\n  compile|compil|compi|comp|com|co|c)\n    shift; set dummy --mode compile ${1+\"$@\"}; shift\n    ;;\n  execute|execut|execu|exec|exe|ex|e)\n    shift; set dummy --mode execute ${1+\"$@\"}; shift\n    ;;\n  finish|finis|fini|fin|fi|f)\n    shift; set dummy --mode finish ${1+\"$@\"}; shift\n    ;;\n  install|instal|insta|inst|ins|in|i)\n    shift; set dummy --mode install ${1+\"$@\"}; shift\n    ;;\n  link|lin|li|l)\n    shift; set dummy --mode link ${1+\"$@\"}; shift\n    ;;\n  uninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)\n    shift; set dummy --mode uninstall ${1+\"$@\"}; shift\n    ;;\n  esac\n\n  # Parse non-mode specific arguments:\n  while test \"$#\" -gt 0; do\n    opt=\"$1\"\n    shift\n\n    case $opt in\n      --config)\t\tfunc_config\t\t\t\t\t;;\n\n      --debug)\t\tpreserve_args=\"$preserve_args $opt\"\n\t\t\tfunc_echo \"enabling shell trace mode\"\n\t\t\topt_debug='set -x'\n\t\t\t$opt_debug\n\t\t\t;;\n\n      -dlopen)\t\ttest \"$#\" -eq 0 && func_missing_arg \"$opt\" && break\n\t\t\texecute_dlfiles=\"$execute_dlfiles $1\"\n\t\t\tshift\n\t\t\t;;\n\n      --dry-run | -n)\topt_dry_run=:\t\t\t\t\t;;\n      --features)       func_features\t\t\t\t\t;;\n      --finish)\t\tmode=\"finish\"\t\t\t\t\t;;\n      --no-finish)\topt_finish=false\t\t\t\t;;\n\n      --mode)\t\ttest \"$#\" -eq 0 && func_missing_arg \"$opt\" && break\n\t\t\tcase $1 in\n\t\t\t  # Valid mode arguments:\n\t\t\t  clean)\t;;\n\t\t\t  compile)\t;;\n\t\t\t  execute)\t;;\n\t\t\t  finish)\t;;\n\t\t\t  install)\t;;\n\t\t\t  link)\t\t;;\n\t\t\t  relink)\t;;\n\t\t\t  uninstall)\t;;\n\n\t\t\t  # Catch anything else as an error\n\t\t\t  *) func_error \"invalid argument for $opt\"\n\t\t\t     exit_cmd=exit\n\t\t\t     break\n\t\t\t     ;;\n\t\t        esac\n\n\t\t\tmode=\"$1\"\n\t\t\tshift\n\t\t\t;;\n\n      --preserve-dup-deps)\n\t\t\topt_duplicate_deps=:\t\t\t\t;;\n\n      --quiet|--silent)\tpreserve_args=\"$preserve_args $opt\"\n\t\t\topt_silent=:\n\t\t\topt_verbose=false\n\t\t\t;;\n\n      --no-quiet|--no-silent)\n\t\t\tpreserve_args=\"$preserve_args $opt\"\n\t\t\topt_silent=false\n\t\t\t;;\n\n      --verbose| -v)\tpreserve_args=\"$preserve_args $opt\"\n\t\t\topt_silent=false\n\t\t\topt_verbose=:\n\t\t\t;;\n\n      --no-verbose)\tpreserve_args=\"$preserve_args $opt\"\n\t\t\topt_verbose=false\n\t\t\t;;\n\n      --tag)\t\ttest \"$#\" -eq 0 && func_missing_arg \"$opt\" && break\n\t\t\tpreserve_args=\"$preserve_args $opt $1\"\n\t\t\tfunc_enable_tag \"$1\"\t# tagname is set here\n\t\t\tshift\n\t\t\t;;\n\n      # Separate optargs to long options:\n      -dlopen=*|--mode=*|--tag=*)\n\t\t\tfunc_opt_split \"$opt\"\n\t\t\tset dummy \"$func_opt_split_opt\" \"$func_opt_split_arg\" ${1+\"$@\"}\n\t\t\tshift\n\t\t\t;;\n\n      -\\?|-h)\t\tfunc_usage\t\t\t\t\t;;\n      --help)\t\topt_help=:\t\t\t\t\t;;\n      --help-all)\topt_help=': help-all'\t\t\t\t;;\n      --version)\tfunc_version\t\t\t\t\t;;\n\n      -*)\t\tfunc_fatal_help \"unrecognized option \\`$opt'\"\t;;\n\n      *)\t\tnonopt=\"$opt\"\n\t\t\tbreak\n\t\t\t;;\n    esac\n  done\n\n\n  case $host in\n    *cygwin* | *mingw* | *pw32* | *cegcc*)\n      # don't eliminate duplications in $postdeps and $predeps\n      opt_duplicate_compiler_generated_deps=:\n      ;;\n    *)\n      opt_duplicate_compiler_generated_deps=$opt_duplicate_deps\n      ;;\n  esac\n\n  # Having warned about all mis-specified options, bail out if\n  # anything was wrong.\n  $exit_cmd $EXIT_FAILURE\n}\n\n# func_check_version_match\n# Ensure that we are using m4 macros, and libtool script from the same\n# release of libtool.\nfunc_check_version_match ()\n{\n  if test \"$package_revision\" != \"$macro_revision\"; then\n    if test \"$VERSION\" != \"$macro_version\"; then\n      if test -z \"$macro_version\"; then\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from an older release.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n      else\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from $PACKAGE $macro_version.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n      fi\n    else\n      cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,\n$progname: but the definition of this LT_INIT comes from revision $macro_revision.\n$progname: You should recreate aclocal.m4 with macros from revision $package_revision\n$progname: of $PACKAGE $VERSION and run autoconf again.\n_LT_EOF\n    fi\n\n    exit $EXIT_MISMATCH\n  fi\n}\n\n\n## ----------- ##\n##    Main.    ##\n## ----------- ##\n\n$opt_help || {\n  # Sanity checks first:\n  func_check_version_match\n\n  if test \"$build_libtool_libs\" != yes && test \"$build_old_libs\" != yes; then\n    func_fatal_configuration \"not configured to build any kind of library\"\n  fi\n\n  test -z \"$mode\" && func_fatal_error \"error: you must specify a MODE.\"\n\n\n  # Darwin sucks\n  eval \"std_shrext=\\\"$shrext_cmds\\\"\"\n\n\n  # Only execute mode is allowed to have -dlopen flags.\n  if test -n \"$execute_dlfiles\" && test \"$mode\" != execute; then\n    func_error \"unrecognized option \\`-dlopen'\"\n    $ECHO \"$help\" 1>&2\n    exit $EXIT_FAILURE\n  fi\n\n  # Change the help message to a mode-specific one.\n  generic_help=\"$help\"\n  help=\"Try \\`$progname --help --mode=$mode' for more information.\"\n}\n\n\n# func_lalib_p file\n# True iff FILE is a libtool `.la' library or `.lo' object file.\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_lalib_p ()\n{\n    test -f \"$1\" &&\n      $SED -e 4q \"$1\" 2>/dev/null \\\n        | $GREP \"^# Generated by .*$PACKAGE\" > /dev/null 2>&1\n}\n\n# func_lalib_unsafe_p file\n# True iff FILE is a libtool `.la' library or `.lo' object file.\n# This function implements the same check as func_lalib_p without\n# resorting to external programs.  To this end, it redirects stdin and\n# closes it afterwards, without saving the original file descriptor.\n# As a safety measure, use it only where a negative result would be\n# fatal anyway.  Works if `file' does not exist.\nfunc_lalib_unsafe_p ()\n{\n    lalib_p=no\n    if test -f \"$1\" && test -r \"$1\" && exec 5<&0 <\"$1\"; then\n\tfor lalib_p_l in 1 2 3 4\n\tdo\n\t    read lalib_p_line\n\t    case \"$lalib_p_line\" in\n\t\t\\#\\ Generated\\ by\\ *$PACKAGE* ) lalib_p=yes; break;;\n\t    esac\n\tdone\n\texec 0<&5 5<&-\n    fi\n    test \"$lalib_p\" = yes\n}\n\n# func_ltwrapper_script_p file\n# True iff FILE is a libtool wrapper script\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_script_p ()\n{\n    func_lalib_p \"$1\"\n}\n\n# func_ltwrapper_executable_p file\n# True iff FILE is a libtool wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_executable_p ()\n{\n    func_ltwrapper_exec_suffix=\n    case $1 in\n    *.exe) ;;\n    *) func_ltwrapper_exec_suffix=.exe ;;\n    esac\n    $GREP \"$magic_exe\" \"$1$func_ltwrapper_exec_suffix\" >/dev/null 2>&1\n}\n\n# func_ltwrapper_scriptname file\n# Assumes file is an ltwrapper_executable\n# uses $file to determine the appropriate filename for a\n# temporary ltwrapper_script.\nfunc_ltwrapper_scriptname ()\n{\n    func_ltwrapper_scriptname_result=\"\"\n    if func_ltwrapper_executable_p \"$1\"; then\n\tfunc_dirname_and_basename \"$1\" \"\" \".\"\n\tfunc_stripname '' '.exe' \"$func_basename_result\"\n\tfunc_ltwrapper_scriptname_result=\"$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper\"\n    fi\n}\n\n# func_ltwrapper_p file\n# True iff FILE is a libtool wrapper script or wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_p ()\n{\n    func_ltwrapper_script_p \"$1\" || func_ltwrapper_executable_p \"$1\"\n}\n\n\n# func_execute_cmds commands fail_cmd\n# Execute tilde-delimited COMMANDS.\n# If FAIL_CMD is given, eval that upon failure.\n# FAIL_CMD may read-access the current command in variable CMD!\nfunc_execute_cmds ()\n{\n    $opt_debug\n    save_ifs=$IFS; IFS='~'\n    for cmd in $1; do\n      IFS=$save_ifs\n      eval \"cmd=\\\"$cmd\\\"\"\n      func_show_eval \"$cmd\" \"${2-:}\"\n    done\n    IFS=$save_ifs\n}\n\n\n# func_source file\n# Source FILE, adding directory component if necessary.\n# Note that it is not necessary on cygwin/mingw to append a dot to\n# FILE even if both FILE and FILE.exe exist: automatic-append-.exe\n# behavior happens only for exec(3), not for open(2)!  Also, sourcing\n# `FILE.' does not work on cygwin managed mounts.\nfunc_source ()\n{\n    $opt_debug\n    case $1 in\n    */* | *\\\\*)\t. \"$1\" ;;\n    *)\t\t. \"./$1\" ;;\n    esac\n}\n\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    $opt_debug\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n        func_quote_for_eval \"$arg\"\n\tCC_quoted=\"$CC_quoted $func_quote_for_eval_result\"\n      done\n      CC_expanded=`func_echo_all $CC`\n      CC_quoted_expanded=`func_echo_all $CC_quoted`\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n      \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if $GREP \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t      # Double-quote args containing other shell metacharacters.\n\t      func_quote_for_eval \"$arg\"\n\t      CC_quoted=\"$CC_quoted $func_quote_for_eval_result\"\n\t    done\n\t    CC_expanded=`func_echo_all $CC`\n\t    CC_quoted_expanded=`func_echo_all $CC_quoted`\n\t    case \"$@ \" in\n\t    \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n\t    \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  func_echo \"unable to infer tagged configuration\"\n\t  func_fatal_error \"specify a tag with \\`--tag'\"\n#\telse\n#\t  func_verbose \"using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n\n# func_write_libtool_object output_name pic_name nonpic_name\n# Create a libtool object file (analogous to a \".la\" file),\n# but don't create it if we're doing a dry run.\nfunc_write_libtool_object ()\n{\n    write_libobj=${1}\n    if test \"$build_libtool_libs\" = yes; then\n      write_lobj=\\'${2}\\'\n    else\n      write_lobj=none\n    fi\n\n    if test \"$build_old_libs\" = yes; then\n      write_oldobj=\\'${3}\\'\n    else\n      write_oldobj=none\n    fi\n\n    $opt_dry_run || {\n      cat >${write_libobj}T <<EOF\n# $write_libobj - a libtool object file\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object=$write_lobj\n\n# Name of the non-PIC object\nnon_pic_object=$write_oldobj\n\nEOF\n      $MV \"${write_libobj}T\" \"${write_libobj}\"\n    }\n}\n\n# func_mode_compile arg...\nfunc_mode_compile ()\n{\n    $opt_debug\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=\"$nonopt\"  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n    pie_flag=\n\n    for arg\n    do\n      case $arg_mode in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=\"$arg\"\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=\"$arg\"\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  test -n \"$libobj\" && \\\n\t    func_fatal_error \"you cannot specify \\`-o' more than once\"\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-pie | -fpie | -fPIE)\n          pie_flag=\"$pie_flag $arg\"\n\t  continue\n\t  ;;\n\n\t-shared | -static | -prefer-pic | -prefer-non-pic)\n\t  later=\"$later $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  func_stripname '-Wc,' '' \"$arg\"\n\t  args=$func_stripname_result\n\t  lastarg=\n\t  save_ifs=\"$IFS\"; IFS=','\n\t  for arg in $args; do\n\t    IFS=\"$save_ifs\"\n\t    func_quote_for_eval \"$arg\"\n\t    lastarg=\"$lastarg $func_quote_for_eval_result\"\n\t  done\n\t  IFS=\"$save_ifs\"\n\t  func_stripname ' ' '' \"$lastarg\"\n\t  lastarg=$func_stripname_result\n\n\t  # Add the arguments to base_compile.\n\t  base_compile=\"$base_compile $lastarg\"\n\t  continue\n\t  ;;\n\n\t*)\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=\"$srcfile\"\n\t  srcfile=\"$arg\"\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      func_quote_for_eval \"$lastarg\"\n      base_compile=\"$base_compile $func_quote_for_eval_result\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      func_fatal_error \"you must specify an argument for -Xcompile\"\n      ;;\n    target)\n      func_fatal_error \"you must specify a target with \\`-o'\"\n      ;;\n    *)\n      # Get the name of the library object.\n      test -z \"$libobj\" && {\n\tfunc_basename \"$srcfile\"\n\tlibobj=\"$func_basename_result\"\n      }\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    case $libobj in\n    *.[cCFSifmso] | \\\n    *.ada | *.adb | *.ads | *.asm | \\\n    *.c++ | *.cc | *.ii | *.class | *.cpp | *.cxx | \\\n    *.[fF][09]? | *.for | *.java | *.obj | *.sx | *.cu | *.cup)\n      func_xform \"$libobj\"\n      libobj=$func_xform_result\n      ;;\n    esac\n\n    case $libobj in\n    *.lo) func_lo2o \"$libobj\"; obj=$func_lo2o_result ;;\n    *)\n      func_fatal_error \"cannot determine name of library object from \\`$libobj'\"\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -shared)\n\ttest \"$build_libtool_libs\" != yes && \\\n\t  func_fatal_configuration \"can not build a shared library\"\n\tbuild_old_libs=no\n\tcontinue\n\t;;\n\n      -static)\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    func_quote_for_eval \"$libobj\"\n    test \"X$libobj\" != \"X$func_quote_for_eval_result\" \\\n      && $ECHO \"X$libobj\" | $GREP '[]~#^*{};<>?\"'\"'\"'\t &()|`$[]' \\\n      && func_warning \"libobj name \\`$libobj' may not contain shell special characters.\"\n    func_dirname_and_basename \"$obj\" \"/\" \"\"\n    objname=\"$func_basename_result\"\n    xdir=\"$func_dirname_result\"\n    lobj=${xdir}$objdir/$objname\n\n    test -z \"$base_compile\" && \\\n      func_fatal_help \"you must specify a compilation command\"\n\n    # Delete any leftover library objects.\n    if test \"$build_old_libs\" = yes; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2* | cegcc*)\n      pic_mode=default\n      ;;\n    esac\n    if test \"$pic_mode\" = no && test \"$deplibs_check_method\" != pass_all; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test \"$compiler_c_o\" = no; then\n      output_obj=`$ECHO \"$srcfile\" | $SED 's%^.*/%%; s%\\.[^.]*$%%'`.${objext}\n      lockfile=\"$output_obj.lock\"\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test \"$need_locks\" = yes; then\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test \"$need_locks\" = warn; then\n      if test -f \"$lockfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n      removelist=\"$removelist $output_obj\"\n      $ECHO \"$srcfile\" > \"$lockfile\"\n    fi\n\n    $opt_dry_run || $RM $removelist\n    removelist=\"$removelist $lockfile\"\n    trap '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE' 1 2 15\n\n    if test -n \"$fix_srcfile_path\"; then\n      eval \"srcfile=\\\"$fix_srcfile_path\\\"\"\n    fi\n    func_quote_for_eval \"$srcfile\"\n    qsrcfile=$func_quote_for_eval_result\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test \"$build_libtool_libs\" = yes; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test \"$pic_mode\" != no; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      func_mkdir_p \"$xdir$objdir\"\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tcommand=\"$command -o $lobj\"\n      fi\n\n      func_show_eval_locale \"$command\"\t\\\n          'test -n \"$output_obj\" && $RM $removelist; exit $EXIT_FAILURE'\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$lobj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n\n      # Allow error messages only from the first compilation.\n      if test \"$suppress_opt\" = yes; then\n\tsuppress_output=' >/dev/null 2>&1'\n      fi\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test \"$build_old_libs\" = yes; then\n      if test \"$pic_mode\" != yes; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile$pie_flag\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test \"$compiler_c_o\" = yes; then\n\tcommand=\"$command -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      command=\"$command$suppress_output\"\n      func_show_eval_locale \"$command\" \\\n        '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$obj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n    fi\n\n    $opt_dry_run || {\n      func_write_libtool_object \"$libobj\" \"$objdir/$objname\" \"$objname\"\n\n      # Unlock the critical section if it was locked\n      if test \"$need_locks\" != no; then\n\tremovelist=$lockfile\n        $RM \"$lockfile\"\n      fi\n    }\n\n    exit $EXIT_SUCCESS\n}\n\n$opt_help || {\n  test \"$mode\" = compile && func_mode_compile ${1+\"$@\"}\n}\n\nfunc_mode_help ()\n{\n    # We need to display help for each of the modes.\n    case $mode in\n      \"\")\n        # Generic help is extracted from the usage comments\n        # at the start of this file.\n        func_help\n        ;;\n\n      clean)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      compile)\n      $ECHO \\\n\"Usage: $progname [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -no-suppress      do not suppress compiler output for multiple passes\n  -prefer-pic       try to building PIC objects only\n  -prefer-non-pic   try to building non-PIC objects only\n  -shared           do not build a \\`.o' file suitable for static linking\n  -static           only build a \\`.o' file suitable for static linking\n  -Wc,FLAG          pass FLAG directly to the compiler\n\nCOMPILE-COMMAND is a command to be used in creating a \\`standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix \\`.c' with the\nlibrary object suffix, \\`.lo'.\"\n        ;;\n\n      execute)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to \\`-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n        ;;\n\n      finish)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe \\`--dry-run' option if you just want to see what would be executed.\"\n        ;;\n\n      install)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the \\`install' or \\`cp' program.\n\nThe following components of INSTALL-COMMAND are treated specially:\n\n  -inst-prefix-dir PREFIX-DIR  Use PREFIX-DIR as a staging area for installation\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n        ;;\n\n      link)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -bindir BINDIR    specify path to binaries directory (for systems where\n                    libraries must be found in the PATH setting at runtime)\n  -dlopen FILE      \\`-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n                    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n                    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  Use a list of object files found in FILE to specify objects\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -shared           only do dynamic linking of libtool libraries\n  -shrext SUFFIX    override the standard shared library file extension\n  -static           do not do any dynamic linking of uninstalled libtool libraries\n  -static-libtool-libs\n                    do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n                    specify library version info [each variable defaults to 0]\n  -weak LIBNAME     declare that the target provides the LIBNAME interface\n  -Wc,FLAG\n  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler\n  -Wl,FLAG\n  -Xlinker FLAG     pass linker-specific FLAG directly to the linker\n  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)\n\nAll other options (arguments beginning with \\`-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in \\`.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in \\`.la', then a libtool library is created,\nonly library objects (\\`.lo' files) may be specified, and \\`-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in \\`.a' or \\`.lib', then a standard library is created\nusing \\`ar' and \\`ranlib', or on Windows using \\`lib'.\n\nIf OUTPUT-FILE ends in \\`.lo' or \\`.${objext}', then a reloadable object file\nis created, otherwise an executable program is created.\"\n        ;;\n\n      uninstall)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      *)\n        func_fatal_help \"invalid operation mode \\`$mode'\"\n        ;;\n    esac\n\n    echo\n    $ECHO \"Try \\`$progname --help' for more information about other modes.\"\n}\n\n# Now that we've collected a possible --mode arg, show help if necessary\nif $opt_help; then\n  if test \"$opt_help\" = :; then\n    func_mode_help\n  else\n    {\n      func_help noexit\n      for mode in compile link execute install finish uninstall clean; do\n\tfunc_mode_help\n      done\n    } | sed -n '1p; 2,$s/^Usage:/  or: /p'\n    {\n      func_help noexit\n      for mode in compile link execute install finish uninstall clean; do\n\techo\n\tfunc_mode_help\n      done\n    } |\n    sed '1d\n      /^When reporting/,/^Report/{\n\tH\n\td\n      }\n      $x\n      /information about other modes/d\n      /more detailed .*MODE/d\n      s/^Usage:.*--mode=\\([^ ]*\\) .*/Description of \\1 mode:/'\n  fi\n  exit $?\nfi\n\n\n# func_mode_execute arg...\nfunc_mode_execute ()\n{\n    $opt_debug\n    # The first argument is the command name.\n    cmd=\"$nonopt\"\n    test -z \"$cmd\" && \\\n      func_fatal_help \"you must specify a COMMAND\"\n\n    # Handle -dlopen flags immediately.\n    for file in $execute_dlfiles; do\n      test -f \"$file\" \\\n\t|| func_fatal_help \"\\`$file' is not a file\"\n\n      dir=\n      case $file in\n      *.la)\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"\\`$lib' is not a valid libtool archive\"\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\tfunc_source \"$file\"\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && \\\n\t    func_warning \"\\`$file' was not linked with \\`-export-dynamic'\"\n\t  continue\n\tfi\n\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=\"$func_dirname_result\"\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  dir=\"$dir/$objdir\"\n\telse\n\t  if test ! -f \"$dir/$dlname\"; then\n\t    func_fatal_error \"cannot find \\`$dlname' in \\`$dir' or \\`$dir/$objdir'\"\n\t  fi\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=\"$func_dirname_result\"\n\t;;\n\n      *)\n\tfunc_warning \"\\`-dlopen' is ignored for non-libtool libraries and objects\"\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=\"$absdir\"\n\n      # Now add the directory to shlibpath_var.\n      if eval test -z \\\"\\$$shlibpath_var\\\"; then\n\teval $shlibpath_var=\\$dir\n      else\n\teval $shlibpath_var=\\$dir:\\$$shlibpath_var\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=\"$magic\"\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -* | *.la | *.lo ) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif func_ltwrapper_script_p \"$file\"; then\n\t  func_source \"$file\"\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\telif func_ltwrapper_executable_p \"$file\"; then\n\t  func_ltwrapper_scriptname \"$file\"\n\t  func_source \"$func_ltwrapper_scriptname_result\"\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      func_quote_for_eval \"$file\"\n      args=\"$args $func_quote_for_eval_result\"\n    done\n\n    if test \"X$opt_dry_run\" = Xfalse; then\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\n      do\n\teval \"if test \\\"\\${save_$lt_var+set}\\\" = set; then\n                $lt_var=\\$save_$lt_var; export $lt_var\n\t      else\n\t\t$lt_unset $lt_var\n\t      fi\"\n      done\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\"\\$cmd$args\"\n    else\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$ECHO \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\techo \"export $shlibpath_var\"\n      fi\n      $ECHO \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest \"$mode\" = execute && func_mode_execute ${1+\"$@\"}\n\n\n# func_mode_finish arg...\nfunc_mode_finish ()\n{\n    $opt_debug\n    libdirs=\"$nonopt\"\n    admincmds=\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for dir\n      do\n\tlibdirs=\"$libdirs $dir\"\n      done\n\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  func_execute_cmds \"$finish_cmds\" 'admincmds=\"$admincmds\n'\"$cmd\"'\"'\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $opt_dry_run || eval \"$cmds\" || admincmds=\"$admincmds\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    $opt_silent && exit $EXIT_SUCCESS\n\n    echo \"----------------------------------------------------------------------\"\n    echo \"Libraries have been installed in:\"\n    for libdir in $libdirs; do\n      $ECHO \"   $libdir\"\n    done\n    echo\n    echo \"If you ever happen to want to link against installed libraries\"\n    echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n    echo \"specify the full pathname of the library, or use the \\`-LLIBDIR'\"\n    echo \"flag during linking and do at least one of the following:\"\n    if test -n \"$shlibpath_var\"; then\n      echo \"   - add LIBDIR to the \\`$shlibpath_var' environment variable\"\n      echo \"     during execution\"\n    fi\n    if test -n \"$runpath_var\"; then\n      echo \"   - add LIBDIR to the \\`$runpath_var' environment variable\"\n      echo \"     during linking\"\n    fi\n    if test -n \"$hardcode_libdir_flag_spec\"; then\n      libdir=LIBDIR\n      eval \"flag=\\\"$hardcode_libdir_flag_spec\\\"\"\n\n      $ECHO \"   - use the \\`$flag' linker flag\"\n    fi\n    if test -n \"$admincmds\"; then\n      $ECHO \"   - have your system administrator run these commands:$admincmds\"\n    fi\n    if test -f /etc/ld.so.conf; then\n      echo \"   - have your system administrator add LIBDIR to \\`/etc/ld.so.conf'\"\n    fi\n    echo\n\n    echo \"See any operating system documentation about shared libraries for\"\n    case $host in\n      solaris2.[6789]|solaris2.1[0-9])\n        echo \"more information, such as the ld(1), crle(1) and ld.so(8) manual\"\n\techo \"pages.\"\n\t;;\n      *)\n        echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n        ;;\n    esac\n    echo \"----------------------------------------------------------------------\"\n    exit $EXIT_SUCCESS\n}\n\ntest \"$mode\" = finish && func_mode_finish ${1+\"$@\"}\n\n\n# func_mode_install arg...\nfunc_mode_install ()\n{\n    $opt_debug\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$nonopt\" = \"$SHELL\" || test \"$nonopt\" = /bin/sh ||\n       # Allow the use of GNU shtool's install command.\n       case $nonopt in *shtool*) :;; *) false;; esac; then\n      # Aesthetically quote it.\n      func_quote_for_eval \"$nonopt\"\n      install_prog=\"$func_quote_for_eval_result \"\n      arg=$1\n      shift\n    else\n      install_prog=\n      arg=$nonopt\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    func_quote_for_eval \"$arg\"\n    install_prog=\"$install_prog$func_quote_for_eval_result\"\n    install_shared_prog=$install_prog\n    case \" $install_prog \" in\n      *[\\\\\\ /]cp\\ *) install_cp=: ;;\n      *) install_cp=false ;;\n    esac\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=no\n    stripme=\n    no_mode=:\n    for arg\n    do\n      arg2=\n      if test -n \"$dest\"; then\n\tfiles=\"$files $dest\"\n\tdest=$arg\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=yes ;;\n      -f)\n\tif $install_cp; then :; else\n\t  prev=$arg\n\tfi\n\t;;\n      -g | -m | -o)\n\tprev=$arg\n\t;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*)\n\t;;\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  if test \"x$prev\" = x-m && test -n \"$install_override_mode\"; then\n\t    arg2=$install_override_mode\n\t    no_mode=false\n\t  fi\n\t  prev=\n\telse\n\t  dest=$arg\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      func_quote_for_eval \"$arg\"\n      install_prog=\"$install_prog $func_quote_for_eval_result\"\n      if test -n \"$arg2\"; then\n\tfunc_quote_for_eval \"$arg2\"\n      fi\n      install_shared_prog=\"$install_shared_prog $func_quote_for_eval_result\"\n    done\n\n    test -z \"$install_prog\" && \\\n      func_fatal_help \"you must specify an install program\"\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the \\`$prev' option requires an argument\"\n\n    if test -n \"$install_override_mode\" && $no_mode; then\n      if $install_cp; then :; else\n\tfunc_quote_for_eval \"$install_override_mode\"\n\tinstall_shared_prog=\"$install_shared_prog -m $func_quote_for_eval_result\"\n      fi\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\tfunc_fatal_help \"no file or destination specified\"\n      else\n\tfunc_fatal_help \"you must specify a destination\"\n      fi\n    fi\n\n    # Strip any trailing slash from the destination.\n    func_stripname '' '/' \"$dest\"\n    dest=$func_stripname_result\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=yes\n    if test \"$isdir\" = yes; then\n      destdir=\"$dest\"\n      destname=\n    else\n      func_dirname_and_basename \"$dest\" \"\" \".\"\n      destdir=\"$func_dirname_result\"\n      destname=\"$func_basename_result\"\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files; shift\n      test \"$#\" -gt 1 && \\\n\tfunc_fatal_help \"\\`$dest' is not a directory\"\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  func_fatal_help \"\\`$destdir' must be an absolute directory name\"\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tstaticlibs=\"$staticlibs $file\"\n\t;;\n\n      *.la)\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"\\`$file' is not a valid libtool archive\"\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\tfunc_source \"$file\"\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) current_libdirs=\"$current_libdirs $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) future_libdirs=\"$future_libdirs $libdir\" ;;\n\t  esac\n\tfi\n\n\tfunc_dirname \"$file\" \"/\" \"\"\n\tdir=\"$func_dirname_result\"\n\tdir=\"$dir$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$ECHO \"$destdir\" | $SED -e \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  test \"$inst_prefix_dir\" = \"$destdir\" && \\\n\t    func_fatal_error \"error: cannot install \\`$file' to a directory not ending in $libdir\"\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  func_warning \"relinking \\`$file'\"\n\t  func_show_eval \"$relink_command\" \\\n\t    'func_fatal_error \"error: relink \\`$file'\\'' with the above command before installing it\"'\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names; shift\n\tif test -n \"$1\"; then\n\t  realname=\"$1\"\n\t  shift\n\n\t  srcname=\"$realname\"\n\t  test -n \"$relink_command\" && srcname=\"$realname\"T\n\n\t  # Install the shared library and build the symlinks.\n\t  func_show_eval \"$install_shared_prog $dir/$srcname $destdir/$realname\" \\\n\t      'exit $?'\n\t  tstripme=\"$stripme\"\n\t  case $host_os in\n\t  cygwin* | mingw* | pw32* | cegcc*)\n\t    case $realname in\n\t    *.dll.a)\n\t      tstripme=\"\"\n\t      ;;\n\t    esac\n\t    ;;\n\t  esac\n\t  if test -n \"$tstripme\" && test -n \"$striplib\"; then\n\t    func_show_eval \"$striplib $destdir/$realname\" 'exit $?'\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    # Try `ln -sf' first, because the `ln' binary might depend on\n\t    # the symlink we replace!  Solaris /bin/ln does not understand -f,\n\t    # so we also need to try rm && ln -s.\n\t    for linkname\n\t    do\n\t      test \"$linkname\" != \"$realname\" \\\n\t\t&& func_show_eval \"(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })\"\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=\"$destdir/$realname\"\n\t  func_execute_cmds \"$postinstall_cmds\" 'exit $?'\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tfunc_basename \"$file\"\n\tname=\"$func_basename_result\"\n\tinstname=\"$dir/$name\"i\n\tfunc_show_eval \"$install_prog $instname $destdir/$name\" 'exit $?'\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && staticlibs=\"$staticlibs $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  func_basename \"$file\"\n\t  destfile=\"$func_basename_result\"\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  func_lo2o \"$destfile\"\n\t  staticdest=$func_lo2o_result\n\t  ;;\n\t*.$objext)\n\t  staticdest=\"$destfile\"\n\t  destfile=\n\t  ;;\n\t*)\n\t  func_fatal_help \"cannot copy a libtool object to \\`$destfile'\"\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\ttest -n \"$destfile\" && \\\n\t  func_show_eval \"$install_prog $file $destfile\" 'exit $?'\n\n\t# Install the old object if enabled.\n\tif test \"$build_old_libs\" = yes; then\n\t  # Deduce the name of the old-style object file.\n\t  func_lo2o \"$file\"\n\t  staticobj=$func_lo2o_result\n\t  func_show_eval \"$install_prog \\$staticobj \\$staticdest\" 'exit $?'\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  func_basename \"$file\"\n\t  destfile=\"$func_basename_result\"\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\"\"\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      func_stripname '' '.exe' \"$file\"\n\t      file=$func_stripname_result\n\t      stripped_ext=\".exe\"\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin* | *mingw*)\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      wrapper=$func_ltwrapper_scriptname_result\n\t    else\n\t      func_stripname '' '.exe' \"$file\"\n\t      wrapper=$func_stripname_result\n\t    fi\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif func_ltwrapper_script_p \"$wrapper\"; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  func_source \"$wrapper\"\n\n\t  # Check the variables that should have been set.\n\t  test -z \"$generated_by_libtool_version\" && \\\n\t    func_fatal_error \"invalid libtool wrapper script \\`$wrapper'\"\n\n\t  finalize=yes\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      func_source \"$lib\"\n\t    fi\n\t    libfile=\"$libdir/\"`$ECHO \"$lib\" | $SED 's%^.*/%%g'` ### testsuite: skip nested quoting test\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      func_warning \"\\`$lib' has not been installed in \\`$libdir'\"\n\t      finalize=no\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  func_source \"$wrapper\"\n\n\t  outputname=\n\t  if test \"$fast_install\" = no && test -n \"$relink_command\"; then\n\t    $opt_dry_run || {\n\t      if test \"$finalize\" = yes; then\n\t        tmpdir=`func_mktempdir`\n\t\tfunc_basename \"$file$stripped_ext\"\n\t\tfile=\"$func_basename_result\"\n\t        outputname=\"$tmpdir/$file\"\n\t        # Replace the output file specification.\n\t        relink_command=`$ECHO \"$relink_command\" | $SED 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t        $opt_silent || {\n\t          func_quote_for_expand \"$relink_command\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t        }\n\t        if eval \"$relink_command\"; then :\n\t          else\n\t\t  func_error \"error: relink \\`$file' with the above command before installing it\"\n\t\t  $opt_dry_run || ${RM}r \"$tmpdir\"\n\t\t  continue\n\t        fi\n\t        file=\"$outputname\"\n\t      else\n\t        func_warning \"cannot relink \\`$file'\"\n\t      fi\n\t    }\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$ECHO \"$file$stripped_ext\" | $SED \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyway\n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    func_stripname '' '.exe' \"$destfile\"\n\t    destfile=$func_stripname_result\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tfunc_show_eval \"$install_prog\\$stripme \\$file \\$destfile\" 'exit $?'\n\t$opt_dry_run || if test -n \"$outputname\"; then\n\t  ${RM}r \"$tmpdir\"\n\tfi\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      func_basename \"$file\"\n      name=\"$func_basename_result\"\n\n      # Set up the ranlib parameters.\n      oldlib=\"$destdir/$name\"\n\n      func_show_eval \"$install_prog \\$file \\$oldlib\" 'exit $?'\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\tfunc_show_eval \"$old_striplib $oldlib\" 'exit $?'\n      fi\n\n      # Do each command in the postinstall commands.\n      func_execute_cmds \"$old_postinstall_cmds\" 'exit $?'\n    done\n\n    test -n \"$future_libdirs\" && \\\n      func_warning \"remember to run \\`$progname --finish$future_libdirs'\"\n\n    if test -n \"$current_libdirs\" && $opt_finish; then\n      # Maybe just do a dry run.\n      $opt_dry_run && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL $progpath $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest \"$mode\" = install && func_mode_install ${1+\"$@\"}\n\n\n# func_generate_dlsyms outputname originator pic_p\n# Extract symbols from dlprefiles and create ${outputname}S.o with\n# a dlpreopen symbol table.\nfunc_generate_dlsyms ()\n{\n    $opt_debug\n    my_outputname=\"$1\"\n    my_originator=\"$2\"\n    my_pic_p=\"${3-no}\"\n    my_prefix=`$ECHO \"$my_originator\" | sed 's%[^a-zA-Z0-9]%_%g'`\n    my_dlsyms=\n\n    if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n      if test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\tmy_dlsyms=\"${my_outputname}S.c\"\n      else\n\tfunc_error \"not configured to extract global symbols from dlpreopened files\"\n      fi\n    fi\n\n    if test -n \"$my_dlsyms\"; then\n      case $my_dlsyms in\n      \"\") ;;\n      *.c)\n\t# Discover the nlist of each of the dlfiles.\n\tnlist=\"$output_objdir/${my_outputname}.nm\"\n\n\tfunc_show_eval \"$RM $nlist ${nlist}S ${nlist}T\"\n\n\t# Parse the name list into a source file.\n\tfunc_verbose \"creating $output_objdir/$my_dlsyms\"\n\n\t$opt_dry_run || $ECHO > \"$output_objdir/$my_dlsyms\" \"\\\n/* $my_dlsyms - symbol resolution table for \\`$my_outputname' dlsym emulation. */\n/* Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n#if defined(__GNUC__) && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))\n#pragma GCC diagnostic ignored \\\"-Wstrict-prototypes\\\"\n#endif\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\tif test \"$dlself\" = yes; then\n\t  func_verbose \"generating symbol list for \\`$output'\"\n\n\t  $opt_dry_run || echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t  # Add our own program objects to the symbol list.\n\t  progfiles=`$ECHO \"$objs$old_deplibs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\t  for progfile in $progfiles; do\n\t    func_verbose \"extracting global C symbols from \\`$progfile'\"\n\t    $opt_dry_run || eval \"$NM $progfile | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $opt_dry_run || {\n\t      $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t      $MV \"$nlist\"T \"$nlist\"\n\t    }\n\t  fi\n\n\t  if test -n \"$export_symbols_regex\"; then\n\t    $opt_dry_run || {\n\t      $EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T\n\t      $MV \"$nlist\"T \"$nlist\"\n\t    }\n\t  fi\n\n\t  # Prepare the list of exported symbols\n\t  if test -z \"$export_symbols\"; then\n\t    export_symbols=\"$output_objdir/$outputname.exp\"\n\t    $opt_dry_run || {\n\t      $RM $export_symbols\n\t      ${SED} -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \\(.*\\)$/\\1/p' < \"$nlist\" > \"$export_symbols\"\n\t      case $host in\n\t      *cygwin* | *mingw* | *cegcc* )\n                echo EXPORTS > \"$output_objdir/$outputname.def\"\n                cat \"$export_symbols\" >> \"$output_objdir/$outputname.def\"\n\t        ;;\n\t      esac\n\t    }\n\t  else\n\t    $opt_dry_run || {\n\t      ${SED} -e 's/\\([].[*^$]\\)/\\\\\\1/g' -e 's/^/ /' -e 's/$/$/' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"\n\t      $GREP -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T\n\t      $MV \"$nlist\"T \"$nlist\"\n\t      case $host in\n\t        *cygwin* | *mingw* | *cegcc* )\n\t          echo EXPORTS > \"$output_objdir/$outputname.def\"\n\t          cat \"$nlist\" >> \"$output_objdir/$outputname.def\"\n\t          ;;\n\t      esac\n\t    }\n\t  fi\n\tfi\n\n\tfor dlprefile in $dlprefiles; do\n\t  func_verbose \"extracting global C symbols from \\`$dlprefile'\"\n\t  func_basename \"$dlprefile\"\n\t  name=\"$func_basename_result\"\n\t  $opt_dry_run || {\n\t    $ECHO \": $name \" >> \"$nlist\"\n\t    eval \"$NM $dlprefile 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t  }\n\tdone\n\n\t$opt_dry_run || {\n\t  # Make sure we have at least an empty file.\n\t  test -f \"$nlist\" || : > \"$nlist\"\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t    $MV \"$nlist\"T \"$nlist\"\n\t  fi\n\n\t  # Try sorting and uniquifying the output.\n\t  if $GREP -v \"^: \" < \"$nlist\" |\n\t      if sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\tsort -k 3\n\t      else\n\t\tsort +2\n\t      fi |\n\t      uniq > \"$nlist\"S; then\n\t    :\n\t  else\n\t    $GREP -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t  fi\n\n\t  if test -f \"$nlist\"S; then\n\t    eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$my_dlsyms\"'\n\t  else\n\t    echo '/* NONE */' >> \"$output_objdir/$my_dlsyms\"\n\t  fi\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n\n/* The mapping between symbol names and symbols.  */\ntypedef struct {\n  const char *name;\n  void *address;\n} lt_dlsymlist;\n\"\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc* )\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n/* DATA imports from DLLs on WIN32 con't be const, because\n   runtime relocations are performed -- see ld's documentation\n   on pseudo-relocs.  */\"\n\t    lt_dlsym_const= ;;\n\t  *osf5*)\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n/* This system does not cope well with relocations in const data */\"\n\t    lt_dlsym_const= ;;\n\t  *)\n\t    lt_dlsym_const=const ;;\n\t  esac\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\nextern $lt_dlsym_const lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[];\n$lt_dlsym_const lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[] =\n{\\\n  { \\\"$my_originator\\\", (void *) 0 },\"\n\n\t  case $need_lib_prefix in\n\t  no)\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  *)\n\t    eval \"$global_symbol_to_c_name_address_lib_prefix\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  esac\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_${my_prefix}_LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t} # !$opt_dry_run\n\n\tpic_flag_for_symtable=\n\tcase \"$compile_command \" in\n\t*\" -static \"*) ;;\n\t*)\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\" ;;\n\t  *-*-hpux*)\n\t    pic_flag_for_symtable=\" $pic_flag\"  ;;\n\t  *)\n\t    if test \"X$my_pic_p\" != Xno; then\n\t      pic_flag_for_symtable=\" $pic_flag\"\n\t    fi\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tsymtab_cflags=\n\tfor arg in $LTCFLAGS; do\n\t  case $arg in\n\t  -pie | -fpie | -fPIE) ;;\n\t  *) symtab_cflags=\"$symtab_cflags $arg\" ;;\n\t  esac\n\tdone\n\n\t# Now compile the dynamic symbol file.\n\tfunc_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable \"$my_dlsyms\")' 'exit $?'\n\n\t# Clean up the generated files.\n\tfunc_show_eval '$RM \"$output_objdir/$my_dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\"'\n\n\t# Transform the symbol file into the correct name.\n\tsymfileobj=\"$output_objdir/${my_outputname}S.$objext\"\n\tcase $host in\n\t*cygwin* | *mingw* | *cegcc* )\n\t  if test -f \"$output_objdir/$my_outputname.def\"; then\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t  else\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  fi\n\t  ;;\n\t*)\n\t  compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  ;;\n\tesac\n\t;;\n      *)\n\tfunc_fatal_error \"unknown suffix for \\`$my_dlsyms'\"\n\t;;\n      esac\n    else\n      # We keep going just in case the user didn't refer to\n      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n      # really was required.\n\n      # Nullify the symbol file.\n      compile_command=`$ECHO \"$compile_command\" | $SED \"s% @SYMFILE@%%\"`\n      finalize_command=`$ECHO \"$finalize_command\" | $SED \"s% @SYMFILE@%%\"`\n    fi\n}\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\n# Despite the name, also deal with 64 bit binaries.\nfunc_win32_libid ()\n{\n  $opt_debug\n  win32_libid_type=\"unknown\"\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    if $OBJDUMP -f \"$1\" | $SED -e '10q' 2>/dev/null |\n       $EGREP 'file format (pe-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)' >/dev/null; then\n      win32_nmres=`$NM -f posix -A \"$1\" |\n\t$SED -n -e '\n\t    1,100{\n\t\t/ I /{\n\t\t    s,.*,import,\n\t\t    p\n\t\t    q\n\t\t}\n\t    }'`\n      case $win32_nmres in\n      import*)  win32_libid_type=\"x86 archive import\";;\n      *)        win32_libid_type=\"x86 archive static\";;\n      esac\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $ECHO \"$win32_libid_type\"\n}\n\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    $opt_debug\n    f_ex_an_ar_dir=\"$1\"; shift\n    f_ex_an_ar_oldlib=\"$1\"\n    if test \"$lock_old_archive_extraction\" = yes; then\n      lockfile=$f_ex_an_ar_oldlib.lock\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    fi\n    func_show_eval \"(cd \\$f_ex_an_ar_dir && $AR x \\\"\\$f_ex_an_ar_oldlib\\\")\" \\\n\t\t   'stat=$?; rm -f \"$lockfile\"; exit $stat'\n    if test \"$lock_old_archive_extraction\" = yes; then\n      $opt_dry_run || rm -f \"$lockfile\"\n    fi\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      func_fatal_error \"object name conflicts in archive: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\"\n    fi\n}\n\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    $opt_debug\n    my_gentop=\"$1\"; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\"\"\n    my_xlib=\"\"\n    my_xabs=\"\"\n    my_xdir=\"\"\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=\"$my_xlib\" ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      func_basename \"$my_xlib\"\n      my_xlib=\"$func_basename_result\"\n      my_xlib_u=$my_xlib\n      while :; do\n        case \" $extracted_archives \" in\n\t*\" $my_xlib_u \"*)\n\t  func_arith $extracted_serial + 1\n\t  extracted_serial=$func_arith_result\n\t  my_xlib_u=lt$extracted_serial-$my_xlib ;;\n\t*) break ;;\n\tesac\n      done\n      extracted_archives=\"$extracted_archives $my_xlib_u\"\n      my_xdir=\"$my_gentop/$my_xlib_u\"\n\n      func_mkdir_p \"$my_xdir\"\n\n      case $host in\n      *-darwin*)\n\tfunc_verbose \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\t$opt_dry_run || {\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  darwin_base_archive=`basename \"$darwin_archive\"`\n\t  darwin_arches=`$LIPO -info \"$darwin_archive\" 2>/dev/null | $GREP Architectures 2>/dev/null || true`\n\t  if test -n \"$darwin_arches\"; then\n\t    darwin_arches=`$ECHO \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    func_verbose \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches ; do\n\t      func_mkdir_p \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      $LIPO -thin $darwin_arch -output \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\" \"${darwin_archive}\"\n\t      cd \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      func_extract_an_archive \"`pwd`\" \"${darwin_base_archive}\"\n\t      cd \"$darwin_curdir\"\n\t      $RM \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\"\n\t    done # $darwin_arches\n            ## Okay now we've a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print | $SED -e \"$basename\" | sort -u`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | $NL2SP`\n\t      $LIPO -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    $RM -rf unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd $darwin_orig_dir\n\t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\t} # !$opt_dry_run\n\t;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | $NL2SP`\n    done\n\n    func_extract_archives_result=\"$my_oldobjs\"\n}\n\n\n# func_emit_wrapper [arg=no]\n#\n# Emit a libtool wrapper script on stdout.\n# Don't directly open a file because we may want to\n# incorporate the script contents within a cygwin/mingw\n# wrapper executable.  Must ONLY be called from within\n# func_mode_link because it depends on a number of variables\n# set therein.\n#\n# ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\n# variable will take.  If 'yes', then the emitted script\n# will assume that the directory in which it is stored is\n# the $objdir directory.  This is a cygwin/mingw-specific\n# behavior.\nfunc_emit_wrapper ()\n{\n\tfunc_emit_wrapper_arg1=${1-no}\n\n\t$ECHO \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='$sed_quote_subst'\n\n# Be Bourne compatible\nif test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variables:\n  generated_by_libtool_version='$macro_version'\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$ECHO are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    file=\\\"\\$0\\\"\"\n\n    qECHO=`$ECHO \"$ECHO\" | $SED \"$sed_quote_subst\"`\n    $ECHO \"\\\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$1\n_LTECHO_EOF'\n}\n    ECHO=\\\"$qECHO\\\"\n  fi\\\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  done\n\n  # Usually 'no', except on cygwin/mingw when embedded into\n  # the cwrapper.\n  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=$func_emit_wrapper_arg1\n  if test \\\"\\$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\\\" = \\\"yes\\\"; then\n    # special case for '.'\n    if test \\\"\\$thisdir\\\" = \\\".\\\"; then\n      thisdir=\\`pwd\\`\n    fi\n    # remove .libs from thisdir\n    case \\\"\\$thisdir\\\" in\n    *[\\\\\\\\/]$objdir ) thisdir=\\`\\$ECHO \\\"\\$thisdir\\\" | $SED 's%[\\\\\\\\/][^\\\\\\\\/]*$%%'\\` ;;\n    $objdir )   thisdir=. ;;\n    esac\n  fi\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test \"$fast_install\" = yes; then\n\t  $ECHO \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" ||\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | ${SED} 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $MKDIR \\\"\\$progdir\\\"\n    else\n      $RM \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $ECHO \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\\"\\$relink_command\\\" 2>&1\\`; then :\n      else\n\t$ECHO \\\"\\$relink_command_output\\\" >&2\n\t$RM \\\"\\$progdir/\\$file\\\"\n\texit 1\n      fi\n    fi\n\n    $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $RM \\\"\\$progdir/\\$program\\\";\n      $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $RM \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $ECHO \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$ECHO \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# Export our shlibpath_var if we have one.\n\tif test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $ECHO \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" | $SED 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t# fixup the dll searchpath if we need to.\n\tif test -n \"$dllsearchpath\"; then\n\t  $ECHO \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t$ECHO \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n\"\n\tcase $host in\n\t# Backslashes separate directories on plain windows\n\t*-*-mingw | *-*-os2* | *-cegcc*)\n\t  $ECHO \"\\\n      exec \\\"\\$progdir\\\\\\\\\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\n\t*)\n\t  $ECHO \"\\\n      exec \\\"\\$progdir/\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\tesac\n\t$ECHO \"\\\n      \\$ECHO \\\"\\$0: cannot exec \\$program \\$*\\\" 1>&2\n      exit 1\n    fi\n  else\n    # The program doesn't exist.\n    \\$ECHO \\\"\\$0: error: \\\\\\`\\$progdir/\\$program' does not exist\\\" 1>&2\n    \\$ECHO \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    \\$ECHO \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit 1\n  fi\nfi\\\n\"\n}\n\n\n# func_to_host_path arg\n#\n# Convert paths to host format when used with build tools.\n# Intended for use with \"native\" mingw (where libtool itself\n# is running under the msys shell), or in the following cross-\n# build environments:\n#    $build          $host\n#    mingw (msys)    mingw  [e.g. native]\n#    cygwin          mingw\n#    *nix + wine     mingw\n# where wine is equipped with the `winepath' executable.\n# In the native mingw case, the (msys) shell automatically\n# converts paths for any non-msys applications it launches,\n# but that facility isn't available from inside the cwrapper.\n# Similar accommodations are necessary for $host mingw and\n# $build cygwin.  Calling this function does no harm for other\n# $host/$build combinations not listed above.\n#\n# ARG is the path (on $build) that should be converted to\n# the proper representation for $host. The result is stored\n# in $func_to_host_path_result.\nfunc_to_host_path ()\n{\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    case $host in\n      *mingw* )\n        lt_sed_naive_backslashify='s|\\\\\\\\*|\\\\|g;s|/|\\\\|g;s|\\\\|\\\\\\\\|g'\n        case $build in\n          *mingw* ) # actually, msys\n            # awkward: cmd appends spaces to result\n            func_to_host_path_result=`( cmd //c echo \"$1\" ) 2>/dev/null |\n              $SED -e 's/[ ]*$//' -e \"$lt_sed_naive_backslashify\"`\n            ;;\n          *cygwin* )\n            func_to_host_path_result=`cygpath -w \"$1\" |\n\t      $SED -e \"$lt_sed_naive_backslashify\"`\n            ;;\n          * )\n            # Unfortunately, winepath does not exit with a non-zero\n            # error code, so we are forced to check the contents of\n            # stdout. On the other hand, if the command is not\n            # found, the shell will set an exit code of 127 and print\n            # *an error message* to stdout. So we must check for both\n            # error code of zero AND non-empty stdout, which explains\n            # the odd construction:\n            func_to_host_path_tmp1=`winepath -w \"$1\" 2>/dev/null`\n            if test \"$?\" -eq 0 && test -n \"${func_to_host_path_tmp1}\"; then\n              func_to_host_path_result=`$ECHO \"$func_to_host_path_tmp1\" |\n                $SED -e \"$lt_sed_naive_backslashify\"`\n            else\n              # Allow warning below.\n              func_to_host_path_result=\n            fi\n            ;;\n        esac\n        if test -z \"$func_to_host_path_result\" ; then\n          func_error \"Could not determine host path corresponding to\"\n          func_error \"  \\`$1'\"\n          func_error \"Continuing, but uninstalled executables may not work.\"\n          # Fallback:\n          func_to_host_path_result=\"$1\"\n        fi\n        ;;\n    esac\n  fi\n}\n# end: func_to_host_path\n\n# func_to_host_pathlist arg\n#\n# Convert pathlists to host format when used with build tools.\n# See func_to_host_path(), above. This function supports the\n# following $build/$host combinations (but does no harm for\n# combinations not listed here):\n#    $build          $host\n#    mingw (msys)    mingw  [e.g. native]\n#    cygwin          mingw\n#    *nix + wine     mingw\n#\n# Path separators are also converted from $build format to\n# $host format. If ARG begins or ends with a path separator\n# character, it is preserved (but converted to $host format)\n# on output.\n#\n# ARG is a pathlist (on $build) that should be converted to\n# the proper representation on $host. The result is stored\n# in $func_to_host_pathlist_result.\nfunc_to_host_pathlist ()\n{\n  func_to_host_pathlist_result=\"$1\"\n  if test -n \"$1\"; then\n    case $host in\n      *mingw* )\n        lt_sed_naive_backslashify='s|\\\\\\\\*|\\\\|g;s|/|\\\\|g;s|\\\\|\\\\\\\\|g'\n        # Remove leading and trailing path separator characters from\n        # ARG. msys behavior is inconsistent here, cygpath turns them\n        # into '.;' and ';.', and winepath ignores them completely.\n\tfunc_stripname : : \"$1\"\n        func_to_host_pathlist_tmp1=$func_stripname_result\n        case $build in\n          *mingw* ) # Actually, msys.\n            # Awkward: cmd appends spaces to result.\n            func_to_host_pathlist_result=`\n\t      ( cmd //c echo \"$func_to_host_pathlist_tmp1\" ) 2>/dev/null |\n\t      $SED -e 's/[ ]*$//' -e \"$lt_sed_naive_backslashify\"`\n            ;;\n          *cygwin* )\n            func_to_host_pathlist_result=`cygpath -w -p \"$func_to_host_pathlist_tmp1\" |\n              $SED -e \"$lt_sed_naive_backslashify\"`\n            ;;\n          * )\n            # unfortunately, winepath doesn't convert pathlists\n            func_to_host_pathlist_result=\"\"\n            func_to_host_pathlist_oldIFS=$IFS\n            IFS=:\n            for func_to_host_pathlist_f in $func_to_host_pathlist_tmp1 ; do\n              IFS=$func_to_host_pathlist_oldIFS\n              if test -n \"$func_to_host_pathlist_f\" ; then\n                func_to_host_path \"$func_to_host_pathlist_f\"\n                if test -n \"$func_to_host_path_result\" ; then\n                  if test -z \"$func_to_host_pathlist_result\" ; then\n                    func_to_host_pathlist_result=\"$func_to_host_path_result\"\n                  else\n                    func_append func_to_host_pathlist_result \";$func_to_host_path_result\"\n                  fi\n                fi\n              fi\n            done\n            IFS=$func_to_host_pathlist_oldIFS\n            ;;\n        esac\n        if test -z \"$func_to_host_pathlist_result\"; then\n          func_error \"Could not determine the host path(s) corresponding to\"\n          func_error \"  \\`$1'\"\n          func_error \"Continuing, but uninstalled executables may not work.\"\n          # Fallback. This may break if $1 contains DOS-style drive\n          # specifications. The fix is not to complicate the expression\n          # below, but for the user to provide a working wine installation\n          # with winepath so that path translation in the cross-to-mingw\n          # case works properly.\n          lt_replace_pathsep_nix_to_dos=\"s|:|;|g\"\n          func_to_host_pathlist_result=`echo \"$func_to_host_pathlist_tmp1\" |\\\n            $SED -e \"$lt_replace_pathsep_nix_to_dos\"`\n        fi\n        # Now, add the leading and trailing path separators back\n        case \"$1\" in\n          :* ) func_to_host_pathlist_result=\";$func_to_host_pathlist_result\"\n            ;;\n        esac\n        case \"$1\" in\n          *: ) func_append func_to_host_pathlist_result \";\"\n            ;;\n        esac\n        ;;\n    esac\n  fi\n}\n# end: func_to_host_pathlist\n\n# func_emit_cwrapperexe_src\n# emit the source code for a wrapper executable on stdout\n# Must ONLY be called from within func_mode_link because\n# it depends on a number of variable set therein.\nfunc_emit_cwrapperexe_src ()\n{\n\tcat <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n\n   Currently, it simply execs the wrapper *script* \"$SHELL $output\",\n   but could eventually absorb all of the scripts functionality and\n   exec $objdir/$outputname directly.\n*/\nEOF\n\t    cat <<\"EOF\"\n#ifdef _MSC_VER\n# define _CRT_SECURE_NO_DEPRECATE 1\n#endif\n#include <stdio.h>\n#include <stdlib.h>\n#ifdef _MSC_VER\n# include <direct.h>\n# include <process.h>\n# include <io.h>\n#else\n# include <unistd.h>\n# include <stdint.h>\n# ifdef __CYGWIN__\n#  include <io.h>\n# endif\n#endif\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n#include <string.h>\n#include <ctype.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <sys/stat.h>\n\n/* declarations of non-ANSI functions */\n#if defined(__MINGW32__)\n# ifdef __STRICT_ANSI__\nint _putenv (const char *);\n# endif\n#elif defined(__CYGWIN__)\n# ifdef __STRICT_ANSI__\nchar *realpath (const char *, char *);\nint putenv (char *);\nint setenv (const char *, const char *, int);\n# endif\n/* #elif defined (other platforms) ... */\n#endif\n\n/* portability defines, excluding path handling macros */\n#if defined(_MSC_VER)\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n# define S_IXUSR _S_IEXEC\n# ifndef _INTPTR_T_DEFINED\n#  define _INTPTR_T_DEFINED\n#  define intptr_t int\n# endif\n#elif defined(__MINGW32__)\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n#elif defined(__CYGWIN__)\n# define HAVE_SETENV\n# define FOPEN_WB \"wb\"\n/* #elif defined (other platforms) ... */\n#endif\n\n#if defined(PATH_MAX)\n# define LT_PATHMAX PATH_MAX\n#elif defined(MAXPATHLEN)\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef S_IXOTH\n# define S_IXOTH 0\n#endif\n#ifndef S_IXGRP\n# define S_IXGRP 0\n#endif\n\n/* path handling portability macros */\n#ifndef DIR_SEPARATOR\n# define DIR_SEPARATOR '/'\n# define PATH_SEPARATOR ':'\n#endif\n\n#if defined (_WIN32) || defined (__MSDOS__) || defined (__DJGPP__) || \\\n  defined (__OS2__)\n# define HAVE_DOS_BASED_FILE_SYSTEM\n# define FOPEN_WB \"wb\"\n# ifndef DIR_SEPARATOR_2\n#  define DIR_SEPARATOR_2 '\\\\'\n# endif\n# ifndef PATH_SEPARATOR_2\n#  define PATH_SEPARATOR_2 ';'\n# endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n\t(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#ifndef PATH_SEPARATOR_2\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)\n#else /* PATH_SEPARATOR_2 */\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)\n#endif /* PATH_SEPARATOR_2 */\n\n#ifndef FOPEN_WB\n# define FOPEN_WB \"w\"\n#endif\n#ifndef _O_BINARY\n# define _O_BINARY 0\n#endif\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free ((void *) stale); stale = 0; } \\\n} while (0)\n\n#undef LTWRAPPER_DEBUGPRINTF\n#if defined LT_DEBUGWRAPPER\n# define LTWRAPPER_DEBUGPRINTF(args) ltwrapper_debugprintf args\nstatic void\nltwrapper_debugprintf (const char *fmt, ...)\n{\n    va_list args;\n    va_start (args, fmt);\n    (void) vfprintf (stderr, fmt, args);\n    va_end (args);\n}\n#else\n# define LTWRAPPER_DEBUGPRINTF(args)\n#endif\n\nconst char *program_name = NULL;\n\nvoid *xmalloc (size_t num);\nchar *xstrdup (const char *string);\nconst char *base_name (const char *name);\nchar *find_executable (const char *wrapper);\nchar *chase_symlinks (const char *pathspec);\nint make_executable (const char *path);\nint check_executable (const char *path);\nchar *strendzap (char *str, const char *pat);\nvoid lt_fatal (const char *message, ...);\nvoid lt_setenv (const char *name, const char *value);\nchar *lt_extend_str (const char *orig_value, const char *add, int to_end);\nvoid lt_update_exe_path (const char *name, const char *value);\nvoid lt_update_lib_path (const char *name, const char *value);\nchar **prepare_spawn (char **argv);\nvoid lt_dump_script (FILE *f);\nEOF\n\n\t    cat <<EOF\nconst char * MAGIC_EXE = \"$magic_exe\";\nconst char * LIB_PATH_VARNAME = \"$shlibpath_var\";\nEOF\n\n\t    if test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n              func_to_host_pathlist \"$temp_rpath\"\n\t      cat <<EOF\nconst char * LIB_PATH_VALUE   = \"$func_to_host_pathlist_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * LIB_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test -n \"$dllsearchpath\"; then\n              func_to_host_pathlist \"$dllsearchpath:\"\n\t      cat <<EOF\nconst char * EXE_PATH_VARNAME = \"PATH\";\nconst char * EXE_PATH_VALUE   = \"$func_to_host_pathlist_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * EXE_PATH_VARNAME = \"\";\nconst char * EXE_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test \"$fast_install\" = yes; then\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"lt-$outputname\"; /* hopefully, no .exe */\nEOF\n\t    else\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"$outputname\"; /* hopefully, no .exe */\nEOF\n\t    fi\n\n\n\t    cat <<\"EOF\"\n\n#define LTWRAPPER_OPTION_PREFIX         \"--lt-\"\n#define LTWRAPPER_OPTION_PREFIX_LENGTH  5\n\nstatic const size_t opt_prefix_len         = LTWRAPPER_OPTION_PREFIX_LENGTH;\nstatic const char *ltwrapper_option_prefix = LTWRAPPER_OPTION_PREFIX;\n\nstatic const char *dumpscript_opt       = LTWRAPPER_OPTION_PREFIX \"dump-script\";\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int  newargc;\n  char *tmp_pathspec;\n  char *actual_cwrapper_path;\n  char *actual_cwrapper_name;\n  char *target_name;\n  char *lt_argv_zero;\n  intptr_t rval = 127;\n\n  int i;\n\n  program_name = (char *) xstrdup (base_name (argv[0]));\n  LTWRAPPER_DEBUGPRINTF ((\"(main) argv[0]      : %s\\n\", argv[0]));\n  LTWRAPPER_DEBUGPRINTF ((\"(main) program_name : %s\\n\", program_name));\n\n  /* very simple arg parsing; don't want to rely on getopt */\n  for (i = 1; i < argc; i++)\n    {\n      if (strcmp (argv[i], dumpscript_opt) == 0)\n\t{\nEOF\n\t    case \"$host\" in\n\t      *mingw* | *cygwin* )\n\t\t# make stdout use \"unix\" line endings\n\t\techo \"          setmode(1,_O_BINARY);\"\n\t\t;;\n\t      esac\n\n\t    cat <<\"EOF\"\n\t  lt_dump_script (stdout);\n\t  return 0;\n\t}\n    }\n\n  newargz = XMALLOC (char *, argc + 1);\n  tmp_pathspec = find_executable (argv[0]);\n  if (tmp_pathspec == NULL)\n    lt_fatal (\"Couldn't find %s\", argv[0]);\n  LTWRAPPER_DEBUGPRINTF ((\"(main) found exe (before symlink chase) at : %s\\n\",\n\t\t\t  tmp_pathspec));\n\n  actual_cwrapper_path = chase_symlinks (tmp_pathspec);\n  LTWRAPPER_DEBUGPRINTF ((\"(main) found exe (after symlink chase) at : %s\\n\",\n\t\t\t  actual_cwrapper_path));\n  XFREE (tmp_pathspec);\n\n  actual_cwrapper_name = xstrdup( base_name (actual_cwrapper_path));\n  strendzap (actual_cwrapper_path, actual_cwrapper_name);\n\n  /* wrapper name transforms */\n  strendzap (actual_cwrapper_name, \".exe\");\n  tmp_pathspec = lt_extend_str (actual_cwrapper_name, \".exe\", 1);\n  XFREE (actual_cwrapper_name);\n  actual_cwrapper_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  /* target_name transforms -- use actual target program name; might have lt- prefix */\n  target_name = xstrdup (base_name (TARGET_PROGRAM_NAME));\n  strendzap (target_name, \".exe\");\n  tmp_pathspec = lt_extend_str (target_name, \".exe\", 1);\n  XFREE (target_name);\n  target_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  LTWRAPPER_DEBUGPRINTF ((\"(main) libtool target name: %s\\n\",\n\t\t\t  target_name));\nEOF\n\n\t    cat <<EOF\n  newargz[0] =\n    XMALLOC (char, (strlen (actual_cwrapper_path) +\n\t\t    strlen (\"$objdir\") + 1 + strlen (actual_cwrapper_name) + 1));\n  strcpy (newargz[0], actual_cwrapper_path);\n  strcat (newargz[0], \"$objdir\");\n  strcat (newargz[0], \"/\");\nEOF\n\n\t    cat <<\"EOF\"\n  /* stop here, and copy so we don't have to do this twice */\n  tmp_pathspec = xstrdup (newargz[0]);\n\n  /* do NOT want the lt- prefix here, so use actual_cwrapper_name */\n  strcat (newargz[0], actual_cwrapper_name);\n\n  /* DO want the lt- prefix here if it exists, so use target_name */\n  lt_argv_zero = lt_extend_str (tmp_pathspec, target_name, 1);\n  XFREE (tmp_pathspec);\n  tmp_pathspec = NULL;\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t    cat <<\"EOF\"\n  {\n    char* p;\n    while ((p = strchr (newargz[0], '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n    while ((p = strchr (lt_argv_zero, '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n  }\nEOF\n\t    ;;\n\t    esac\n\n\t    cat <<\"EOF\"\n  XFREE (target_name);\n  XFREE (actual_cwrapper_path);\n  XFREE (actual_cwrapper_name);\n\n  lt_setenv (\"BIN_SH\", \"xpg4\"); /* for Tru64 */\n  lt_setenv (\"DUALCASE\", \"1\");  /* for MSK sh */\n  lt_update_lib_path (LIB_PATH_VARNAME, LIB_PATH_VALUE);\n  lt_update_exe_path (EXE_PATH_VARNAME, EXE_PATH_VALUE);\n\n  newargc=0;\n  for (i = 1; i < argc; i++)\n    {\n      if (strncmp (argv[i], ltwrapper_option_prefix, opt_prefix_len) == 0)\n        {\n          /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX\n             namespace, but it is not one of the ones we know about and\n             have already dealt with, above (inluding dump-script), then\n             report an error. Otherwise, targets might begin to believe\n             they are allowed to use options in the LTWRAPPER_OPTION_PREFIX\n             namespace. The first time any user complains about this, we'll\n             need to make LTWRAPPER_OPTION_PREFIX a configure-time option\n             or a configure.ac-settable value.\n           */\n          lt_fatal (\"Unrecognized option in %s namespace: '%s'\",\n                    ltwrapper_option_prefix, argv[i]);\n        }\n      /* otherwise ... */\n      newargz[++newargc] = xstrdup (argv[i]);\n    }\n  newargz[++newargc] = NULL;\n\n  LTWRAPPER_DEBUGPRINTF     ((\"(main) lt_argv_zero : %s\\n\", (lt_argv_zero ? lt_argv_zero : \"<NULL>\")));\n  for (i = 0; i < newargc; i++)\n    {\n      LTWRAPPER_DEBUGPRINTF ((\"(main) newargz[%d]   : %s\\n\", i, (newargz[i] ? newargz[i] : \"<NULL>\")));\n    }\n\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n  /* execv doesn't actually work on mingw as expected on unix */\n  newargz = prepare_spawn (newargz);\n  rval = _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);\n  if (rval == -1)\n    {\n      /* failed to start process */\n      LTWRAPPER_DEBUGPRINTF ((\"(main) failed to launch target \\\"%s\\\": errno = %d\\n\", lt_argv_zero, errno));\n      return 127;\n    }\n  return rval;\nEOF\n\t\t;;\n\t      *)\n\t\tcat <<\"EOF\"\n  execv (lt_argv_zero, newargz);\n  return rval; /* =127, but avoids unused variable warning */\nEOF\n\t\t;;\n\t    esac\n\n\t    cat <<\"EOF\"\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void *p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (\"Memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1),\n\t\t\t  string) : NULL;\n}\n\nconst char *\nbase_name (const char *name)\n{\n  const char *base;\n\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha ((unsigned char) name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return base;\n}\n\nint\ncheck_executable (const char *path)\n{\n  struct stat st;\n\n  LTWRAPPER_DEBUGPRINTF ((\"(check_executable)  : %s\\n\",\n\t\t\t  path ? (*path ? path : \"EMPTY!\") : \"NULL!\"));\n  if ((!path) || (!*path))\n    return 0;\n\n  if ((stat (path, &st) >= 0)\n      && (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)))\n    return 1;\n  else\n    return 0;\n}\n\nint\nmake_executable (const char *path)\n{\n  int rval = 0;\n  struct stat st;\n\n  LTWRAPPER_DEBUGPRINTF ((\"(make_executable)   : %s\\n\",\n\t\t\t  path ? (*path ? path : \"EMPTY!\") : \"NULL!\"));\n  if ((!path) || (!*path))\n    return 0;\n\n  if (stat (path, &st) >= 0)\n    {\n      rval = chmod (path, st.st_mode | S_IXOTH | S_IXGRP | S_IXUSR);\n    }\n  return rval;\n}\n\n/* Searches for the full path of the wrapper.  Returns\n   newly allocated full path name if found, NULL otherwise\n   Does not chase symlinks, even on platforms that support them.\n*/\nchar *\nfind_executable (const char *wrapper)\n{\n  int has_slash = 0;\n  const char *p;\n  const char *p_next;\n  /* static buffer for getcwd */\n  char tmp[LT_PATHMAX + 1];\n  int tmp_len;\n  char *concat_name;\n\n  LTWRAPPER_DEBUGPRINTF ((\"(find_executable)   : %s\\n\",\n\t\t\t  wrapper ? (*wrapper ? wrapper : \"EMPTY!\") : \"NULL!\"));\n\n  if ((wrapper == NULL) || (*wrapper == '\\0'))\n    return NULL;\n\n  /* Absolute path? */\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')\n    {\n      concat_name = xstrdup (wrapper);\n      if (check_executable (concat_name))\n\treturn concat_name;\n      XFREE (concat_name);\n    }\n  else\n    {\n#endif\n      if (IS_DIR_SEPARATOR (wrapper[0]))\n\t{\n\t  concat_name = xstrdup (wrapper);\n\t  if (check_executable (concat_name))\n\t    return concat_name;\n\t  XFREE (concat_name);\n\t}\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n    }\n#endif\n\n  for (p = wrapper; *p; p++)\n    if (*p == '/')\n      {\n\thas_slash = 1;\n\tbreak;\n      }\n  if (!has_slash)\n    {\n      /* no slashes; search PATH */\n      const char *path = getenv (\"PATH\");\n      if (path != NULL)\n\t{\n\t  for (p = path; *p; p = p_next)\n\t    {\n\t      const char *q;\n\t      size_t p_len;\n\t      for (q = p; *q; q++)\n\t\tif (IS_PATH_SEPARATOR (*q))\n\t\t  break;\n\t      p_len = q - p;\n\t      p_next = (*q == '\\0' ? q : q + 1);\n\t      if (p_len == 0)\n\t\t{\n\t\t  /* empty path: current directory */\n\t\t  if (getcwd (tmp, LT_PATHMAX) == NULL)\n\t\t    lt_fatal (\"getcwd failed\");\n\t\t  tmp_len = strlen (tmp);\n\t\t  concat_name =\n\t\t    XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, tmp, tmp_len);\n\t\t  concat_name[tmp_len] = '/';\n\t\t  strcpy (concat_name + tmp_len + 1, wrapper);\n\t\t}\n\t      else\n\t\t{\n\t\t  concat_name =\n\t\t    XMALLOC (char, p_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, p, p_len);\n\t\t  concat_name[p_len] = '/';\n\t\t  strcpy (concat_name + p_len + 1, wrapper);\n\t\t}\n\t      if (check_executable (concat_name))\n\t\treturn concat_name;\n\t      XFREE (concat_name);\n\t    }\n\t}\n      /* not found in PATH; assume curdir */\n    }\n  /* Relative path | not found in path: prepend cwd */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (\"getcwd failed\");\n  tmp_len = strlen (tmp);\n  concat_name = XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n  memcpy (concat_name, tmp, tmp_len);\n  concat_name[tmp_len] = '/';\n  strcpy (concat_name + tmp_len + 1, wrapper);\n\n  if (check_executable (concat_name))\n    return concat_name;\n  XFREE (concat_name);\n  return NULL;\n}\n\nchar *\nchase_symlinks (const char *pathspec)\n{\n#ifndef S_ISLNK\n  return xstrdup (pathspec);\n#else\n  char buf[LT_PATHMAX];\n  struct stat s;\n  char *tmp_pathspec = xstrdup (pathspec);\n  char *p;\n  int has_symlinks = 0;\n  while (strlen (tmp_pathspec) && !has_symlinks)\n    {\n      LTWRAPPER_DEBUGPRINTF ((\"checking path component for symlinks: %s\\n\",\n\t\t\t      tmp_pathspec));\n      if (lstat (tmp_pathspec, &s) == 0)\n\t{\n\t  if (S_ISLNK (s.st_mode) != 0)\n\t    {\n\t      has_symlinks = 1;\n\t      break;\n\t    }\n\n\t  /* search backwards for last DIR_SEPARATOR */\n\t  p = tmp_pathspec + strlen (tmp_pathspec) - 1;\n\t  while ((p > tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    p--;\n\t  if ((p == tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    {\n\t      /* no more DIR_SEPARATORS left */\n\t      break;\n\t    }\n\t  *p = '\\0';\n\t}\n      else\n\t{\n\t  char *errstr = strerror (errno);\n\t  lt_fatal (\"Error accessing file %s (%s)\", tmp_pathspec, errstr);\n\t}\n    }\n  XFREE (tmp_pathspec);\n\n  if (!has_symlinks)\n    {\n      return xstrdup (pathspec);\n    }\n\n  tmp_pathspec = realpath (pathspec, buf);\n  if (tmp_pathspec == 0)\n    {\n      lt_fatal (\"Could not follow symlinks for %s\", pathspec);\n    }\n  return xstrdup (tmp_pathspec);\n#endif\n}\n\nchar *\nstrendzap (char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert (str != NULL);\n  assert (pat != NULL);\n\n  len = strlen (str);\n  patlen = strlen (pat);\n\n  if (patlen <= len)\n    {\n      str += len - patlen;\n      if (strcmp (str, pat) == 0)\n\t*str = '\\0';\n    }\n  return str;\n}\n\nstatic void\nlt_error_core (int exit_status, const char *mode,\n\t       const char *message, va_list ap)\n{\n  fprintf (stderr, \"%s: %s: \", program_name, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, \"FATAL\", message, ap);\n  va_end (ap);\n}\n\nvoid\nlt_setenv (const char *name, const char *value)\n{\n  LTWRAPPER_DEBUGPRINTF ((\"(lt_setenv) setting '%s' to '%s'\\n\",\n                          (name ? name : \"<NULL>\"),\n                          (value ? value : \"<NULL>\")));\n  {\n#ifdef HAVE_SETENV\n    /* always make a copy, for consistency with !HAVE_SETENV */\n    char *str = xstrdup (value);\n    setenv (name, str, 1);\n#else\n    int len = strlen (name) + 1 + strlen (value) + 1;\n    char *str = XMALLOC (char, len);\n    sprintf (str, \"%s=%s\", name, value);\n    if (putenv (str) != EXIT_SUCCESS)\n      {\n        XFREE (str);\n      }\n#endif\n  }\n}\n\nchar *\nlt_extend_str (const char *orig_value, const char *add, int to_end)\n{\n  char *new_value;\n  if (orig_value && *orig_value)\n    {\n      int orig_value_len = strlen (orig_value);\n      int add_len = strlen (add);\n      new_value = XMALLOC (char, add_len + orig_value_len + 1);\n      if (to_end)\n        {\n          strcpy (new_value, orig_value);\n          strcpy (new_value + orig_value_len, add);\n        }\n      else\n        {\n          strcpy (new_value, add);\n          strcpy (new_value + add_len, orig_value);\n        }\n    }\n  else\n    {\n      new_value = xstrdup (add);\n    }\n  return new_value;\n}\n\nvoid\nlt_update_exe_path (const char *name, const char *value)\n{\n  LTWRAPPER_DEBUGPRINTF ((\"(lt_update_exe_path) modifying '%s' by prepending '%s'\\n\",\n                          (name ? name : \"<NULL>\"),\n                          (value ? value : \"<NULL>\")));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      /* some systems can't cope with a ':'-terminated path #' */\n      int len = strlen (new_value);\n      while (((len = strlen (new_value)) > 0) && IS_PATH_SEPARATOR (new_value[len-1]))\n        {\n          new_value[len-1] = '\\0';\n        }\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nvoid\nlt_update_lib_path (const char *name, const char *value)\n{\n  LTWRAPPER_DEBUGPRINTF ((\"(lt_update_lib_path) modifying '%s' by prepending '%s'\\n\",\n                          (name ? name : \"<NULL>\"),\n                          (value ? value : \"<NULL>\")));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nEOF\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n\n/* Prepares an argument vector before calling spawn().\n   Note that spawn() does not by itself call the command interpreter\n     (getenv (\"COMSPEC\") != NULL ? getenv (\"COMSPEC\") :\n      ({ OSVERSIONINFO v; v.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n         GetVersionEx(&v);\n         v.dwPlatformId == VER_PLATFORM_WIN32_NT;\n      }) ? \"cmd.exe\" : \"command.com\").\n   Instead it simply concatenates the arguments, separated by ' ', and calls\n   CreateProcess().  We must quote the arguments since Win32 CreateProcess()\n   interprets characters like ' ', '\\t', '\\\\', '\"' (but not '<' and '>') in a\n   special way:\n   - Space and tab are interpreted as delimiters. They are not treated as\n     delimiters if they are surrounded by double quotes: \"...\".\n   - Unescaped double quotes are removed from the input. Their only effect is\n     that within double quotes, space and tab are treated like normal\n     characters.\n   - Backslashes not followed by double quotes are not special.\n   - But 2*n+1 backslashes followed by a double quote become\n     n backslashes followed by a double quote (n >= 0):\n       \\\" -> \"\n       \\\\\\\" -> \\\"\n       \\\\\\\\\\\" -> \\\\\"\n */\n#define SHELL_SPECIAL_CHARS \"\\\"\\\\ \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\n#define SHELL_SPACE_CHARS \" \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\nchar **\nprepare_spawn (char **argv)\n{\n  size_t argc;\n  char **new_argv;\n  size_t i;\n\n  /* Count number of arguments.  */\n  for (argc = 0; argv[argc] != NULL; argc++)\n    ;\n\n  /* Allocate new argument vector.  */\n  new_argv = XMALLOC (char *, argc + 1);\n\n  /* Put quoted arguments into the new argument vector.  */\n  for (i = 0; i < argc; i++)\n    {\n      const char *string = argv[i];\n\n      if (string[0] == '\\0')\n\tnew_argv[i] = xstrdup (\"\\\"\\\"\");\n      else if (strpbrk (string, SHELL_SPECIAL_CHARS) != NULL)\n\t{\n\t  int quote_around = (strpbrk (string, SHELL_SPACE_CHARS) != NULL);\n\t  size_t length;\n\t  unsigned int backslashes;\n\t  const char *s;\n\t  char *quoted_string;\n\t  char *p;\n\n\t  length = 0;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    length++;\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\tlength += backslashes + 1;\n\t      length++;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    length += backslashes + 1;\n\n\t  quoted_string = XMALLOC (char, length + 1);\n\n\t  p = quoted_string;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    *p++ = '\"';\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\t{\n\t\t  unsigned int j;\n\t\t  for (j = backslashes + 1; j > 0; j--)\n\t\t    *p++ = '\\\\';\n\t\t}\n\t      *p++ = c;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    {\n\t      unsigned int j;\n\t      for (j = backslashes; j > 0; j--)\n\t\t*p++ = '\\\\';\n\t      *p++ = '\"';\n\t    }\n\t  *p = '\\0';\n\n\t  new_argv[i] = quoted_string;\n\t}\n      else\n\tnew_argv[i] = (char *) string;\n    }\n  new_argv[argc] = NULL;\n\n  return new_argv;\n}\nEOF\n\t\t;;\n\t    esac\n\n            cat <<\"EOF\"\nvoid lt_dump_script (FILE* f)\n{\nEOF\n\t    func_emit_wrapper yes |\n              $SED -e 's/\\([\\\\\"]\\)/\\\\\\1/g' \\\n\t           -e 's/^/  fputs (\"/' -e 's/$/\\\\n\", f);/'\n\n            cat <<\"EOF\"\n}\nEOF\n}\n# end: func_emit_cwrapperexe_src\n\n# func_win32_import_lib_p ARG\n# True if ARG is an import lib, as indicated by $file_magic_cmd\nfunc_win32_import_lib_p ()\n{\n    $opt_debug\n    case `eval \"$file_magic_cmd \\\"\\$1\\\" 2>/dev/null\" | $SED -e 10q` in\n    *import*) : ;;\n    *) false ;;\n    esac\n}\n\n# func_mode_link arg...\nfunc_mode_link ()\n{\n    $opt_debug\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # which system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll which has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=$nonopt\n    base_compile=\"$nonopt $@\"\n    compile_command=$nonopt\n    finalize_command=$nonopt\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n    new_inherited_linker_flags=\n\n    avoid_version=no\n    bindir=\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    non_pic_objects=\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=no\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n    weak_libs=\n    single_module=\"${wl}-single_module\"\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -shared)\n\ttest \"$build_libtool_libs\" != yes && \\\n\t  func_fatal_configuration \"can not build a shared library\"\n\tbuild_old_libs=no\n\tbreak\n\t;;\n      -all-static | -static | -static-libtool-libs)\n\tcase $arg in\n\t-all-static)\n\t  if test \"$build_libtool_libs\" = yes && test -z \"$link_static_flag\"; then\n\t    func_warning \"complete static linking is impossible in this configuration\"\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\t-static)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=built\n\t  ;;\n\t-static-libtool-libs)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\tesac\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=\"$1\"\n      shift\n      func_quote_for_eval \"$arg\"\n      qarg=$func_quote_for_eval_unquoted_result\n      func_append libtool_args \" $func_quote_for_eval_result\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  func_append compile_command \" @OUTPUT@\"\n\t  func_append finalize_command \" @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tbindir)\n\t  bindir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tdlfiles|dlprefiles)\n\t  if test \"$preload\" = no; then\n\t    # Add the symbol object into the linking commands.\n\t    func_append compile_command \" @SYMFILE@\"\n\t    func_append finalize_command \" @SYMFILE@\"\n\t    preload=yes\n\t  fi\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test \"$dlself\" = no; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test \"$prev\" = dlprefiles; then\n\t      dlself=yes\n\t    elif test \"$prev\" = dlfiles && test \"$dlopen_self\" != yes; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test \"$prev\" = dlfiles; then\n\t      dlfiles=\"$dlfiles $arg\"\n\t    else\n\t      dlprefiles=\"$dlprefiles $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=\"$arg\"\n\t  test -f \"$arg\" \\\n\t    || func_fatal_error \"symbol file \\`$arg' does not exist\"\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tframework)\n\t  case $host in\n\t    *-*-darwin*)\n\t      case \"$deplibs \" in\n\t\t*\" $qarg.ltframework \"*) ;;\n\t\t*) deplibs=\"$deplibs $qarg.ltframework\" # this is fixed later\n\t\t   ;;\n\t      esac\n\t      ;;\n\t  esac\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat \"$save_arg\"`\n\t    do\n#\t      moreargs=\"$moreargs $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if func_lalib_unsafe_p \"$arg\"; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\tfunc_source \"$arg\"\n\n\t\tif test -z \"$pic_object\" ||\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test \"$pic_object\" = none &&\n\t\t   test \"$non_pic_object\" = none; then\n\t\t  func_fatal_error \"cannot find name of object for \\`$arg'\"\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\tfunc_dirname \"$arg\" \"/\" \"\"\n\t\txdir=\"$func_dirname_result\"\n\n\t\tif test \"$pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=\"$xdir$pic_object\"\n\n\t\t  if test \"$prev\" = dlfiles; then\n\t\t    if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\t      dlfiles=\"$dlfiles $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test \"$prev\" = dlprefiles; then\n\t\t    # Preload the old-style object.\n\t\t    dlprefiles=\"$dlprefiles $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  arg=\"$pic_object\"\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test \"$non_pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=\"$xdir$non_pic_object\"\n\n\t\t  # A standard non-PIC object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t\t    arg=\"$non_pic_object\"\n\t\t  fi\n\t\telse\n\t\t  # If the PIC object exists, use it instead.\n\t\t  # $xdir was prepended to $pic_object above.\n\t\t  non_pic_object=\"$pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif $opt_dry_run; then\n\t\t  # Extract subdirectory from the argument.\n\t\t  func_dirname \"$arg\" \"/\" \"\"\n\t\t  xdir=\"$func_dirname_result\"\n\n\t\t  func_lo2o \"$arg\"\n\t\t  pic_object=$xdir$objdir/$func_lo2o_result\n\t\t  non_pic_object=$xdir$func_lo2o_result\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t        else\n\t\t  func_fatal_error \"\\`$arg' is not a valid libtool object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    func_fatal_error \"link input file \\`$arg' does not exist\"\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=\"-$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    func_fatal_error \"only absolute run-paths are allowed\"\n\t    ;;\n\t  esac\n\t  if test \"$prev\" = rpath; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) rpath=\"$rpath $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) xrpath=\"$xrpath $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\tshrext)\n\t  shrext_cmds=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tweak)\n\t  weak_libs=\"$weak_libs $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\txcclinker)\n\t  linker_flags=\"$linker_flags $qarg\"\n\t  compiler_flags=\"$compiler_flags $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txcompiler)\n\t  compiler_flags=\"$compiler_flags $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  linker_flags=\"$linker_flags $qarg\"\n\t  compiler_flags=\"$compiler_flags $wl$qarg\"\n\t  prev=\n\t  func_append compile_command \" $wl$qarg\"\n\t  func_append finalize_command \" $wl$qarg\"\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=\"$arg\"\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  # See comment for -static flag below, for more details.\n\t  func_append compile_command \" $link_static_flag\"\n\t  func_append finalize_command \" $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\tfunc_fatal_error \"\\`-allow-undefined' must not be used because it is the default\"\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -bindir)\n\tprev=bindir\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  func_fatal_error \"more than one -exported-symbols argument is not allowed\"\n\tfi\n\tif test \"X$arg\" = \"X-export-symbols\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework)\n\tprev=framework\n\tcontinue\n\t;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tfunc_stripname '-L' '' \"$arg\"\n\tdir=$func_stripname_result\n\tif test -z \"$dir\"; then\n\t  if test \"$#\" -gt 0; then\n\t    func_fatal_error \"require no space between \\`-L' and \\`$1'\"\n\t  else\n\t    func_fatal_error \"need path for \\`-L' option\"\n\t  fi\n\tfi\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  test -z \"$absdir\" && \\\n\t    func_fatal_error \"cannot determine absolute directory name of \\`$dir'\"\n\t  dir=\"$absdir\"\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"*) ;;\n\t*)\n\t  deplibs=\"$deplibs -L$dir\"\n\t  lib_search_path=\"$lib_search_path $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$dir\" | $SED 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  ::) dllsearchpath=$dir;;\n\t  *) dllsearchpath=\"$dllsearchpath:$dir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) dllsearchpath=\"$dllsearchpath:$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test \"X$arg\" = \"X-lc\" || test \"X$arg\" = \"X-lm\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    deplibs=\"$deplibs System.ltframework\"\n\t    continue\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-linux*)\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  esac\n\telif test \"X$arg\" = \"X-lc_r\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tdeplibs=\"$deplibs $arg\"\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      # Darwin uses the -arch flag to determine output architecture.\n      -model|-arch|-isysroot)\n\tcompiler_flags=\"$compiler_flags $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe|-threads)\n\tcompiler_flags=\"$compiler_flags $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tcase \"$new_inherited_linker_flags \" in\n\t    *\" $arg \"*) ;;\n\t    * ) new_inherited_linker_flags=\"$new_inherited_linker_flags $arg\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -multi_module)\n\tsingle_module=\"${wl}-multi_module\"\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # and Darwin in order for the loader to find any dlls it needs.\n\t  func_warning \"\\`-no-install' is ignored for $host\"\n\t  func_warning \"assuming \\`-no-fast-install' instead\"\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tfunc_stripname '-R' '' \"$arg\"\n\tdir=$func_stripname_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  func_fatal_error \"only absolute run-paths are allowed\"\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) xrpath=\"$xrpath $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -shared)\n\t# The effects of -shared are defined in a previous loop.\n\tcontinue\n\t;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -static | -static-libtool-libs)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -weak)\n        prev=weak\n\tcontinue\n\t;;\n\n      -Wc,*)\n\tfunc_stripname '-Wc,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n          func_quote_for_eval \"$flag\"\n\t  arg=\"$arg $func_quote_for_eval_result\"\n\t  compiler_flags=\"$compiler_flags $func_quote_for_eval_result\"\n\tdone\n\tIFS=\"$save_ifs\"\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Wl,*)\n\tfunc_stripname '-Wl,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n          func_quote_for_eval \"$flag\"\n\t  arg=\"$arg $wl$func_quote_for_eval_result\"\n\t  compiler_flags=\"$compiler_flags $wl$func_quote_for_eval_result\"\n\t  linker_flags=\"$linker_flags $func_quote_for_eval_result\"\n\tdone\n\tIFS=\"$save_ifs\"\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # -msg_* for osf cc\n      -msg_*)\n\tfunc_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n\n      # -64, -mips[0-9] enable 64-bit mode on the SGI compiler\n      # -r[0-9][0-9]* specifies the processor on the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode on the Sun compiler\n      # +DA*, +DD* enable 64-bit mode on the HP compiler\n      # -q* pass through compiler args for the IBM compiler\n      # -m*, -t[45]*, -txscale* pass through architecture-specific\n      # compiler args for GCC\n      # -F/path gives path to uninstalled frameworks, gcc on darwin\n      # -p, -pg, --coverage, -fprofile-* pass through profiling flag for GCC\n      # @file GCC response files\n      # -tp=* Portland pgcc target processor selection\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \\\n      -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*)\n        func_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n        func_append compile_command \" $arg\"\n        func_append finalize_command \" $arg\"\n        compiler_flags=\"$compiler_flags $arg\"\n        continue\n        ;;\n\n      # Some other compiler flag.\n      -* | +*)\n        func_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tobjs=\"$objs $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif func_lalib_unsafe_p \"$arg\"; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  func_source \"$arg\"\n\n\t  if test -z \"$pic_object\" ||\n\t     test -z \"$non_pic_object\" ||\n\t     test \"$pic_object\" = none &&\n\t     test \"$non_pic_object\" = none; then\n\t    func_fatal_error \"cannot find name of object for \\`$arg'\"\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  func_dirname \"$arg\" \"/\" \"\"\n\t  xdir=\"$func_dirname_result\"\n\n\t  if test \"$pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=\"$xdir$pic_object\"\n\n\t    if test \"$prev\" = dlfiles; then\n\t      if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\tdlfiles=\"$dlfiles $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test \"$prev\" = dlprefiles; then\n\t      # Preload the old-style object.\n\t      dlprefiles=\"$dlprefiles $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    func_append libobjs \" $pic_object\"\n\t    arg=\"$pic_object\"\n\t  fi\n\n\t  # Non-PIC object.\n\t  if test \"$non_pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=\"$xdir$non_pic_object\"\n\n\t    # A standard non-PIC object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t    if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t      arg=\"$non_pic_object\"\n\t    fi\n\t  else\n\t    # If the PIC object exists, use it instead.\n\t    # $xdir was prepended to $pic_object above.\n\t    non_pic_object=\"$pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if $opt_dry_run; then\n\t    # Extract subdirectory from the argument.\n\t    func_dirname \"$arg\" \"/\" \"\"\n\t    xdir=\"$func_dirname_result\"\n\n\t    func_lo2o \"$arg\"\n\t    pic_object=$xdir$objdir/$func_lo2o_result\n\t    non_pic_object=$xdir$func_lo2o_result\n\t    func_append libobjs \" $pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  else\n\t    func_fatal_error \"\\`$arg' is not a valid libtool object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tdeplibs=\"$deplibs $arg\"\n\told_deplibs=\"$old_deplibs $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tif test \"$prev\" = dlfiles; then\n\t  # This library was specified with -dlopen.\n\t  dlfiles=\"$dlfiles $arg\"\n\t  prev=\n\telif test \"$prev\" = dlprefiles; then\n\t  # The library was specified with -dlpreopen.\n\t  dlprefiles=\"$dlprefiles $arg\"\n\t  prev=\n\telse\n\t  deplibs=\"$deplibs $arg\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\tfunc_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n      fi\n    done # argument parsing loop\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the \\`$prevarg' option requires an argument\"\n\n    if test \"$export_dynamic\" = yes && test -n \"$export_dynamic_flag_spec\"; then\n      eval \"arg=\\\"$export_dynamic_flag_spec\\\"\"\n      func_append compile_command \" $arg\"\n      func_append finalize_command \" $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    func_basename \"$output\"\n    outputname=\"$func_basename_result\"\n    libobjs_save=\"$libobjs\"\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$ECHO \\\"\\${$shlibpath_var}\\\" \\| \\$SED \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval \"sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\"\n    eval \"sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\"\n\n    func_dirname \"$output\" \"/\" \"\"\n    output_objdir=\"$func_dirname_result$objdir\"\n    # Create the object directory.\n    func_mkdir_p \"$output_objdir\"\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      func_fatal_help \"you must specify an output file\"\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if $opt_duplicate_deps ; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\tesac\n      fi\n      libs=\"$libs $deplib\"\n    done\n\n    if test \"$linkmode\" = lib; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if $opt_duplicate_compiler_generated_deps; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) specialdeplibs=\"$specialdeplibs $pre_post_deps\" ;;\n\t  esac\n\t  pre_post_deps=\"$pre_post_deps $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    notinst_path= # paths that contain not-installed libtool libraries\n\n    case $linkmode in\n    lib)\n\tpasses=\"conv dlpreopen link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    func_fatal_help \"libraries can \\`-dlopen' only libtool libraries: $file\"\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=no\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n\n    for pass in $passes; do\n      # The preopen pass in lib mode reverses $deplibs; put it back here\n      # so that -L comes before libs that need it for instance...\n      if test \"$linkmode,$pass\" = \"lib,link\"; then\n\t## FIXME: Find the place where the list is rebuilt in the wrong\n\t##        order, and fix it there properly\n        tmp_deplibs=\n\tfor deplib in $deplibs; do\n\t  tmp_deplibs=\"$deplib $tmp_deplibs\"\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n      fi\n\n      if test \"$linkmode,$pass\" = \"lib,link\" ||\n\t test \"$linkmode,$pass\" = \"prog,scan\"; then\n\tlibs=\"$deplibs\"\n\tdeplibs=\n      fi\n      if test \"$linkmode\" = prog; then\n\tcase $pass in\n\tdlopen) libs=\"$dlfiles\" ;;\n\tdlpreopen) libs=\"$dlprefiles\" ;;\n\tlink) libs=\"$deplibs %DEPLIBS% $dependency_libs\" ;;\n\tesac\n      fi\n      if test \"$linkmode,$pass\" = \"lib,dlpreopen\"; then\n\t# Collect and forward deplibs of preopened libtool libs\n\tfor lib in $dlprefiles; do\n\t  # Ignore non-libtool-libs\n\t  dependency_libs=\n\t  case $lib in\n\t  *.la)\tfunc_source \"$lib\" ;;\n\t  esac\n\n\t  # Collect preopened libtool deplibs, except any this library\n\t  # has declared as weak libs\n\t  for deplib in $dependency_libs; do\n\t    func_basename \"$deplib\"\n            deplib_base=$func_basename_result\n\t    case \" $weak_libs \" in\n\t    *\" $deplib_base \"*) ;;\n\t    *) deplibs=\"$deplibs $deplib\" ;;\n\t    esac\n\t  done\n\tdone\n\tlibs=\"$dlprefiles\"\n      fi\n      if test \"$pass\" = dlopen; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=\"$deplibs\"\n\tdeplibs=\n      fi\n\n      for deplib in $libs; do\n\tlib=\n\tfound=no\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe|-threads)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    compiler_flags=\"$compiler_flags $deplib\"\n\t    if test \"$linkmode\" = lib ; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) new_inherited_linker_flags=\"$new_inherited_linker_flags $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test \"$linkmode\" != lib && test \"$linkmode\" != prog; then\n\t    func_warning \"\\`-l' is ignored for archives/objects\"\n\t    continue\n\t  fi\n\t  func_stripname '-l' '' \"$deplib\"\n\t  name=$func_stripname_result\n\t  if test \"$linkmode\" = lib; then\n\t    searchdirs=\"$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path\"\n\t  else\n\t    searchdirs=\"$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path\"\n\t  fi\n\t  for searchdir in $searchdirs; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=\"$searchdir/lib${name}${search_ext}\"\n\t      if test -f \"$lib\"; then\n\t\tif test \"$search_ext\" = \".la\"; then\n\t\t  found=yes\n\t\telse\n\t\t  found=no\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if test \"$found\" != yes; then\n\t    # deplib doesn't seem to be a libtool library\n\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  else # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif func_lalib_p \"$lib\"; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  func_source \"$lib\"\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=\"$l\"\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\" ; then # only static version available\n\t\t    found=no\n\t\t    func_dirname \"$lib\" \"\" \".\"\n\t\t    ladir=\"$func_dirname_result\"\n\t\t    lib=$ladir/$old_library\n\t\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  fi\n\t  ;; # -l\n\t*.ltframework)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$deplib $deplibs\"\n\t    if test \"$linkmode\" = lib ; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) new_inherited_linker_flags=\"$new_inherited_linker_flags $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test \"$pass\" = conv && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    func_stripname '-L' '' \"$deplib\"\n\t    newlib_search_path=\"$newlib_search_path $func_stripname_result\"\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" = conv; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test \"$pass\" = scan; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    func_stripname '-L' '' \"$deplib\"\n\t    newlib_search_path=\"$newlib_search_path $func_stripname_result\"\n\t    ;;\n\t  *)\n\t    func_warning \"\\`-L' is ignored for archives/objects\"\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test \"$pass\" = link; then\n\t    func_stripname '-R' '' \"$deplib\"\n\t    dir=$func_stripname_result\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) xrpath=\"$xrpath $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la) lib=\"$deplib\" ;;\n\t*.$libext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    # Linking convenience modules into shared libraries is allowed,\n\t    # but linking other static libraries is non-portable.\n\t    case \" $dlpreconveniencelibs \" in\n\t    *\" $deplib \"*) ;;\n\t    *)\n\t      valid_a_lib=no\n\t      case $deplibs_check_method in\n\t\tmatch_pattern*)\n\t\t  set dummy $deplibs_check_method; shift\n\t\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t\t  if eval \"\\$ECHO \\\"$deplib\\\"\" 2>/dev/null | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t    valid_a_lib=yes\n\t\t  fi\n\t\t;;\n\t\tpass_all)\n\t\t  valid_a_lib=yes\n\t\t;;\n\t      esac\n\t      if test \"$valid_a_lib\" != yes; then\n\t\techo\n\t\t$ECHO \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t\techo \"*** that it is just a static archive that I should not use here.\"\n\t      else\n\t\techo\n\t\t$ECHO \"*** Warning: Linking the shared library $output against the\"\n\t\t$ECHO \"*** static library $deplib is not portable!\"\n\t\tdeplibs=\"$deplib $deplibs\"\n\t      fi\n\t      ;;\n\t    esac\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" != link; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test \"$linkmode\" = prog; then\n\t    if test \"$pass\" = dlpreopen || test \"$dlopen_support\" != yes || test \"$build_libtool_libs\" = no; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      newdlprefiles=\"$newdlprefiles $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      newdlfiles=\"$newdlfiles $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=yes\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\n\tif test \"$found\" = yes || test -f \"$lib\"; then :\n\telse\n\t  func_fatal_error \"cannot find the library \\`$lib' or unhandled argument \\`$deplib'\"\n\tfi\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$lib\" \\\n\t  || func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\n\tfunc_dirname \"$lib\" \"\" \".\"\n\tladir=\"$func_dirname_result\"\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\tinherited_linker_flags=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tfunc_source \"$lib\"\n\n\t# Convert \"-framework foo\" to \"foo.ltframework\"\n\tif test -n \"$inherited_linker_flags\"; then\n\t  tmp_inherited_linker_flags=`$ECHO \"$inherited_linker_flags\" | $SED 's/-framework \\([^ $]*\\)/\\1.ltframework/g'`\n\t  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do\n\t    case \" $new_inherited_linker_flags \" in\n\t      *\" $tmp_inherited_linker_flag \"*) ;;\n\t      *) new_inherited_linker_flags=\"$new_inherited_linker_flags $tmp_inherited_linker_flag\";;\n\t    esac\n\t  done\n\tfi\n\tdependency_libs=`$ECHO \" $dependency_libs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tif test \"$linkmode,$pass\" = \"lib,link\" ||\n\t   test \"$linkmode,$pass\" = \"prog,scan\" ||\n\t   { test \"$linkmode\" != prog && test \"$linkmode\" != lib; }; then\n\t  test -n \"$dlopen\" && dlfiles=\"$dlfiles $dlopen\"\n\t  test -n \"$dlpreopen\" && dlprefiles=\"$dlprefiles $dlpreopen\"\n\tfi\n\n\tif test \"$pass\" = conv; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      func_fatal_error \"cannot find name of link library for \\`$lib'\"\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    convenience=\"$convenience $ladir/$objdir/$old_library\"\n\t    old_convenience=\"$old_convenience $ladir/$objdir/$old_library\"\n\t  elif test \"$linkmode\" != prog && test \"$linkmode\" != lib; then\n\t    func_fatal_error \"\\`$lib' is not a convenience library\"\n\t  fi\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    deplibs=\"$deplib $deplibs\"\n\t    if $opt_duplicate_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t      esac\n\t    fi\n\t    tmp_libs=\"$tmp_libs $deplib\"\n\t  done\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tfor l in $old_library $library_names; do\n\t  linklib=\"$l\"\n\tdone\n\tif test -z \"$linklib\"; then\n\t  func_fatal_error \"cannot find name of link library for \\`$lib'\"\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test \"$pass\" = dlopen; then\n\t  if test -z \"$libdir\"; then\n\t    func_fatal_error \"cannot -dlopen a convenience library: \\`$lib'\"\n\t  fi\n\t  if test -z \"$dlname\" ||\n\t     test \"$dlopen_support\" != yes ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    dlprefiles=\"$dlprefiles $lib $dependency_libs\"\n\t  else\n\t    newdlfiles=\"$newdlfiles $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=\"$ladir\" ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    func_warning \"cannot determine absolute directory name of \\`$ladir'\"\n\t    func_warning \"passing it literally to the linker, although it might fail\"\n\t    abs_ladir=\"$ladir\"\n\t  fi\n\t  ;;\n\tesac\n\tfunc_basename \"$lib\"\n\tlaname=\"$func_basename_result\"\n\n\t# Find the relevant object directory and library name.\n\tif test \"X$installed\" = Xyes; then\n\t  if test ! -f \"$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    func_warning \"library \\`$lib' was moved.\"\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    libdir=\"$abs_ladir\"\n\t  else\n\t    dir=\"$libdir\"\n\t    absdir=\"$libdir\"\n\t  fi\n\t  test \"X$hardcode_automatic\" = Xyes && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    # Remove this search path later\n\t    notinst_path=\"$notinst_path $abs_ladir\"\n\t  else\n\t    dir=\"$ladir/$objdir\"\n\t    absdir=\"$abs_ladir/$objdir\"\n\t    # Remove this search path later\n\t    notinst_path=\"$notinst_path $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tfunc_stripname 'lib' '.la' \"$laname\"\n\tname=$func_stripname_result\n\n\t# This library was specified with -dlpreopen.\n\tif test \"$pass\" = dlpreopen; then\n\t  if test -z \"$libdir\" && test \"$linkmode\" = prog; then\n\t    func_fatal_error \"only libraries may -dlpreopen a convenience library: \\`$lib'\"\n\t  fi\n\t  # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t  # are required to link).\n\t  if test -n \"$old_library\"; then\n\t    newdlprefiles=\"$newdlprefiles $dir/$old_library\"\n\t    # Keep a list of preopened convenience libraries to check\n\t    # that they are being used correctly in the link pass.\n\t    test -z \"$libdir\" && \\\n\t\tdlpreconveniencelibs=\"$dlpreconveniencelibs $dir/$old_library\"\n\t  # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t  elif test -n \"$dlname\"; then\n\t    newdlprefiles=\"$newdlprefiles $dir/$dlname\"\n\t  else\n\t    newdlprefiles=\"$newdlprefiles $dir/$linklib\"\n\t  fi\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test \"$linkmode\" = lib; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test \"$linkmode\" = prog && test \"$pass\" != link; then\n\t  newlib_search_path=\"$newlib_search_path $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=no\n\t  if test \"$link_all_deplibs\" != no || test -z \"$library_names\" ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    linkalldeplibs=yes\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) func_stripname '-L' '' \"$deplib\"\n\t         newlib_search_path=\"$newlib_search_path $func_stripname_result\"\n\t\t ;;\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if test \"$linkalldeplibs\" = yes; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if $opt_duplicate_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t      esac\n\t    fi\n\t    tmp_libs=\"$tmp_libs $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t  if test -n \"$library_names\" &&\n\t     { { test \"$prefer_static_libs\" = no ||\n\t         test \"$prefer_static_libs,$installed\" = \"built,yes\"; } ||\n\t       test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\" ; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case \"$temp_rpath:\" in\n\t      *\"$absdir:\"*) ;;\n\t      *) temp_rpath=\"$temp_rpath$absdir:\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) compile_rpath=\"$compile_rpath $absdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) finalize_rpath=\"$finalize_rpath $libdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if test \"$alldeplibs\" = yes &&\n\t     { test \"$deplibs_check_method\" = pass_all ||\n\t       { test \"$build_libtool_libs\" = yes &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tuse_static_libs=$prefer_static_libs\n\tif test \"$use_static_libs\" = built && test \"$installed\" = yes; then\n\t  use_static_libs=no\n\tfi\n\tif test -n \"$library_names\" &&\n\t   { test \"$use_static_libs\" = no || test -z \"$old_library\"; }; then\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc*)\n\t      # No point in relinking DLLs because paths are not encoded\n\t      notinst_deplibs=\"$notinst_deplibs $lib\"\n\t      need_relink=no\n\t    ;;\n\t  *)\n\t    if test \"$installed\" = no; then\n\t      notinst_deplibs=\"$notinst_deplibs $lib\"\n\t      need_relink=yes\n\t    fi\n\t    ;;\n\t  esac\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on some\n\t  # systems (darwin).  Don't bleat about dlopened modules though!\n\t  dlopenmodule=\"\"\n\t  for dlpremoduletest in $dlprefiles; do\n\t    if test \"X$dlpremoduletest\" = \"X$lib\"; then\n\t      dlopenmodule=\"$dlpremoduletest\"\n\t      break\n\t    fi\n\t  done\n\t  if test -z \"$dlopenmodule\" && test \"$shouldnotlink\" = yes && test \"$pass\" = link; then\n\t    echo\n\t    if test \"$linkmode\" = prog; then\n\t      $ECHO \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $ECHO \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $ECHO \"*** $linklib is not portable!\"\n\t  fi\n\t  if test \"$linkmode\" = lib &&\n\t     test \"$hardcode_into_libs\" = yes; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) compile_rpath=\"$compile_rpath $absdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) finalize_rpath=\"$finalize_rpath $libdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    shift\n\t    realname=\"$1\"\n\t    shift\n\t    eval \"libname=\\\"$libname_spec\\\"\"\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=\"$dlname\"\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw* | *cegcc*)\n\t        func_arith $current - $age\n\t\tmajor=$func_arith_result\n\t\tversuffix=\"-$major\"\n\t\t;;\n\t      esac\n\t      eval \"soname=\\\"$soname_spec\\\"\"\n\t    else\n\t      soname=\"$realname\"\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=\"$soname\"\n\t    func_basename \"$soroot\"\n\t    soname=\"$func_basename_result\"\n\t    func_stripname 'lib' '.dll' \"$soname\"\n\t    newlib=libimp-$func_stripname_result.a\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      func_verbose \"extracting exported symbol list from \\`$soname'\"\n\t      func_execute_cmds \"$extract_expsyms_cmds\" 'exit $?'\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      func_verbose \"generating import library for \\`$soname'\"\n\t      func_execute_cmds \"$old_archive_from_expsyms_cmds\" 'exit $?'\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test \"$linkmode\" = prog || test \"$mode\" != relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test \"$hardcode_direct\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t\tcase $host in\n\t\t  *-*-sco3.2v5.0.[024]*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv4*uw2*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \\\n\t\t    *-*-unixware7*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a (non-dlopened) module then we can not\n\t\t    # link against it, someone is ignoring the earlier warnings\n\t\t    if /usr/bin/file -L $add 2> /dev/null |\n\t\t\t $GREP \": [^:]* bundle\" >/dev/null ; then\n\t\t      if test \"X$dlopenmodule\" != \"X$lib\"; then\n\t\t\t$ECHO \"*** Warning: lib $linklib is a module, not a shared library\"\n\t\t\tif test -z \"$old_library\" ; then\n\t\t\t  echo\n\t\t\t  echo \"*** And there doesn't seem to be a static archive available\"\n\t\t\t  echo \"*** The link will probably fail, sorry\"\n\t\t\telse\n\t\t\t  add=\"$dir/$old_library\"\n\t\t\tfi\n\t\t      elif test -n \"$old_library\"; then\n\t\t\tadd=\"$dir/$old_library\"\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test \"$hardcode_minus_L\" = no; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=\"$dir\" ;;\n\t\tesac\n\t\tadd_dir=\"-L$dir\"\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = no; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test \"$hardcode_direct\" = yes &&\n\t         test \"$hardcode_direct_absolute\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t      elif test \"$hardcode_minus_L\" = yes; then\n\t\tadd_dir=\"-L$absdir\"\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case $libdir in\n\t\t    [\\\\/]*)\n\t\t      add_dir=\"$add_dir -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = yes; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test \"$lib_linked\" != yes; then\n\t      func_fatal_configuration \"unsupported hardcode properties\"\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) compile_shlibpath=\"$compile_shlibpath$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test \"$hardcode_direct\" != yes &&\n\t\t test \"$hardcode_minus_L\" != yes &&\n\t\t test \"$hardcode_shlibpath_var\" = yes; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) finalize_shlibpath=\"$finalize_shlibpath$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test \"$linkmode\" = prog || test \"$mode\" = relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test \"$hardcode_direct\" = yes &&\n\t       test \"$hardcode_direct_absolute\" = no; then\n\t      add=\"$libdir/$linklib\"\n\t    elif test \"$hardcode_minus_L\" = yes; then\n\t      add_dir=\"-L$libdir\"\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_shlibpath_var\" = yes; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) finalize_shlibpath=\"$finalize_shlibpath$libdir:\" ;;\n\t      esac\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_automatic\" = yes; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\" ; then\n\t\tadd=\"$inst_prefix_dir$libdir/$linklib\"\n\t      else\n\t\tadd=\"$libdir/$linklib\"\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=\"-L$libdir\"\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase $libdir in\n\t\t  [\\\\/]*)\n\t\t    add_dir=\"$add_dir -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=\"-l$name\"\n\t    fi\n\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test \"$linkmode\" = prog; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test \"$hardcode_direct\" != unsupported; then\n\t    test -n \"$old_library\" && linklib=\"$old_library\"\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test \"$build_libtool_libs\" = yes; then\n\t  # Not a shared library\n\t  if test \"$deplibs_check_method\" != pass_all; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    echo\n\t    $ECHO \"*** Warning: This system can not link to static lib archive $lib.\"\n\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test \"$module\" = yes; then\n\t      echo \"*** But as you try to build a module library, libtool will still create \"\n\t      echo \"*** a static module, that should work as long as the dlopening application\"\n\t      echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\techo\n\t\techo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\techo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t\techo \"*** not find such a program.  So, this module is probably useless.\"\n\t\techo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test \"$build_old_libs\" = no; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test \"$linkmode\" = lib; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test \"$hardcode_into_libs\" != yes ||\n\t       test \"$build_old_libs\" = yes ||\n\t       test \"$link_static\" = yes; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) func_stripname '-R' '' \"$libdir\"\n\t           temp_xrpath=$func_stripname_result\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) xrpath=\"$xrpath $temp_xrpath\";;\n\t\t   esac;;\n\t      *) temp_deplibs=\"$temp_deplibs $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=\"$temp_deplibs\"\n\t  fi\n\n\t  newlib_search_path=\"$newlib_search_path $absdir\"\n\t  # Link against this library\n\t  test \"$link_static\" = no && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    if $opt_duplicate_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t      esac\n\t    fi\n\t    tmp_libs=\"$tmp_libs $deplib\"\n\t  done\n\n\t  if test \"$link_all_deplibs\" != no; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      path=\n\t      case $deplib in\n\t      -L*) path=\"$deplib\" ;;\n\t      *.la)\n\t        func_dirname \"$deplib\" \"\" \".\"\n\t\tdir=\"$func_dirname_result\"\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=\"$dir\" ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    func_warning \"cannot determine absolute directory name of \\`$dir'\"\n\t\t    absdir=\"$dir\"\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif $GREP \"^installed=no\" $deplib > /dev/null; then\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  depdepl=\n\t\t  deplibrary_names=`${SED} -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\" ; then\n\t\t    for tmp in $deplibrary_names ; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$absdir/$objdir/$depdepl\" ; then\n\t\t      depdepl=\"$absdir/$objdir/$depdepl\"\n\t\t      darwin_install_name=`${OTOOL} -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`\n                      if test -z \"$darwin_install_name\"; then\n                          darwin_install_name=`${OTOOL64} -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`\n                      fi\n\t\t      compiler_flags=\"$compiler_flags ${wl}-dylib_file ${wl}${darwin_install_name}:${depdepl}\"\n\t\t      linker_flags=\"$linker_flags -dylib_file ${darwin_install_name}:${depdepl}\"\n\t\t      path=\n\t\t    fi\n\t\t  fi\n\t\t  ;;\n\t\t*)\n\t\t  path=\"-L$absdir/$objdir\"\n\t\t  ;;\n\t\tesac\n\t\telse\n\t\t  libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  test -z \"$libdir\" && \\\n\t\t    func_fatal_error \"\\`$deplib' is not a valid libtool archive\"\n\t\t  test \"$absdir\" != \"$libdir\" && \\\n\t\t    func_warning \"\\`$deplib' seems to be moved\"\n\n\t\t  path=\"-L$absdir\"\n\t\tfi\n\t\t;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      if test \"$pass\" = link; then\n\tif test \"$linkmode\" = \"prog\"; then\n\t  compile_deplibs=\"$new_inherited_linker_flags $compile_deplibs\"\n\t  finalize_deplibs=\"$new_inherited_linker_flags $finalize_deplibs\"\n\telse\n\t  compiler_flags=\"$compiler_flags \"`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfi\n      fi\n      dependency_libs=\"$newdependency_libs\"\n      if test \"$pass\" = dlpreopen; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test \"$pass\" != dlopen; then\n\tif test \"$pass\" != conv; then\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) lib_search_path=\"$lib_search_path $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\tfi\n\n\tif test \"$linkmode,$pass\" != \"prog,link\"; then\n\t  vars=\"deplibs\"\n\telse\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\$$var\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) tmp_libs=\"$tmp_libs $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) tmp_libs=\"$tmp_libs $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\$tmp_libs\n\tdone # for var\n      fi\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs ; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\"\"\n\t  ;;\n\tesac\n\tif test -n \"$i\" ; then\n\t  tmp_libs=\"$tmp_libs $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test \"$linkmode\" = prog; then\n      dlfiles=\"$newdlfiles\"\n    fi\n    if test \"$linkmode\" = prog || test \"$linkmode\" = lib; then\n      dlprefiles=\"$newdlprefiles\"\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tfunc_warning \"\\`-dlopen' is ignored for archives\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"\\`-l' and \\`-L' are ignored for archives\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"\\`-rpath' is ignored for archives\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"\\`-R' is ignored for archives\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info/-version-number' is ignored for archives\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for archives\"\n\n      test -n \"$export_symbols$export_symbols_regex\" && \\\n\tfunc_warning \"\\`-export-symbols' is ignored for archives\"\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=\"$output\"\n      objs=\"$objs$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form `libNAME.la'.\n      case $outputname in\n      lib*)\n\tfunc_stripname 'lib' '.la' \"$outputname\"\n\tname=$func_stripname_result\n\teval \"shared_ext=\\\"$shrext_cmds\\\"\"\n\teval \"libname=\\\"$libname_spec\\\"\"\n\t;;\n      *)\n\ttest \"$module\" = no && \\\n\t  func_fatal_help \"libtool library \\`$output' must begin with \\`lib'\"\n\n\tif test \"$need_lib_prefix\" != no; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  func_stripname '' '.la' \"$outputname\"\n\t  name=$func_stripname_result\n\t  eval \"shared_ext=\\\"$shrext_cmds\\\"\"\n\t  eval \"libname=\\\"$libname_spec\\\"\"\n\telse\n\t  func_stripname '' '.la' \"$outputname\"\n\t  libname=$func_stripname_result\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test \"$deplibs_check_method\" != pass_all; then\n\t  func_fatal_error \"cannot build libtool library \\`$output' from non-libtool objects on this host:$objs\"\n\telse\n\t  echo\n\t  $ECHO \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $ECHO \"*** objects $objs is not portable!\"\n\t  libobjs=\"$libobjs $objs\"\n\tfi\n      fi\n\n      test \"$dlself\" != no && \\\n\tfunc_warning \"\\`-dlopen self' is ignored for libtool libraries\"\n\n      set dummy $rpath\n      shift\n      test \"$#\" -gt 1 && \\\n\tfunc_warning \"ignoring multiple \\`-rpath's for a libtool library\"\n\n      install_libdir=\"$1\"\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test \"$build_libtool_libs\" = yes; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a `.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\ttest -n \"$vinfo\" && \\\n\t  func_warning \"\\`-version-info/-version-number' is ignored for convenience libraries\"\n\n\ttest -n \"$release\" && \\\n\t  func_warning \"\\`-release' is ignored for convenience libraries\"\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=\"$IFS\"; IFS=':'\n\tset dummy $vinfo 0 0 0\n\tshift\n\tIFS=\"$save_ifs\"\n\n\ttest -n \"$7\" && \\\n\t  func_fatal_help \"too many parameters to \\`-version-info'\"\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=\"$1\"\n\t  number_minor=\"$2\"\n\t  number_revision=\"$3\"\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # which has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  darwin|linux|osf|windows|none)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=\"$number_minor\"\n\t    revision=\"$number_revision\"\n\t    ;;\n\t  freebsd-aout|freebsd-elf|qnx|sunos)\n\t    current=\"$number_major\"\n\t    revision=\"$number_minor\"\n\t    age=\"0\"\n\t    ;;\n\t  irix|nonstopux)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=\"$number_minor\"\n\t    revision=\"$number_minor\"\n\t    lt_irix_increment=no\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=\"$1\"\n\t  revision=\"$2\"\n\t  age=\"$3\"\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"CURRENT \\`$current' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"REVISION \\`$revision' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"AGE \\`$age' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  func_error \"AGE \\`$age' is greater than the current interface number \\`$current'\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\"$major.$age.$revision\"\n\t  # Darwin ld doesn't like 0 for these options...\n\t  func_arith $current + 1\n\t  minor_current=$func_arith_result\n\t  xlcverstring=\"${wl}-compatibility_version ${wl}$minor_current ${wl}-current_version ${wl}$minor_current.$revision\"\n\t  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\";\n\t  ;;\n\n\tfreebsd-elf)\n\t  major=\".$current\"\n\t  versuffix=\".$current\"\n\t  ;;\n\n\tirix | nonstopux)\n\t  if test \"X$lt_irix_increment\" = \"Xno\"; then\n\t    func_arith $current - $age\n\t  else\n\t    func_arith $current - $age + 1\n\t  fi\n\t  major=$func_arith_result\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=\"$verstring_prefix$major.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test \"$loop\" -ne 0; do\n\t    func_arith $revision - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=\"$verstring_prefix$major.$iface:$verstring\"\n\t  done\n\n\t  # Before this point, $major must not contain `.'.\n\t  major=.$major\n\t  versuffix=\"$major.$revision\"\n\t  ;;\n\n\tlinux)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\"$major.$age.$revision\"\n\t  ;;\n\n\tosf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\".$current.$age.$revision\"\n\t  verstring=\"$current.$age.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test \"$loop\" -ne 0; do\n\t    func_arith $current - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=\"$verstring:${iface}.0\"\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  verstring=\"$verstring:${current}.0\"\n\t  ;;\n\n\tqnx)\n\t  major=\".$current\"\n\t  versuffix=\".$current\"\n\t  ;;\n\n\tsunos)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\"\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 filesystems.\n\t  func_arith $current - $age\n\t  major=$func_arith_result\n\t  versuffix=\"-$major\"\n\t  ;;\n\n\t*)\n\t  func_fatal_configuration \"unknown library version type \\`$version_type'\"\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=\"0.0\"\n\t    ;;\n\t  esac\n\t  if test \"$need_version\" = no; then\n\t    versuffix=\n\t  else\n\t    versuffix=\".0.0\"\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test \"$avoid_version\" = yes && test \"$need_version\" = no; then\n\t  major=\n\t  versuffix=\n\t  verstring=\"\"\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test \"$allow_undefined\" = yes; then\n\t  if test \"$allow_undefined_flag\" = unsupported; then\n\t    func_warning \"undefined symbols not allowed in $host shared libraries\"\n\t    build_libtool_libs=no\n\t    build_old_libs=yes\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=\"$no_undefined_flag\"\n\tfi\n\n      fi\n\n      func_generate_dlsyms \"$libname\" \"$libname\" \"yes\"\n      libobjs=\"$libobjs $symfileobj\"\n      test \"X$libobjs\" = \"X \" && libobjs=\n\n      if test \"$mode\" != relink; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$ECHO \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext | *.gcno)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/${libname}${release}.*)\n\t       if test \"X$precious_files_regex\" != \"X\"; then\n\t\t if $ECHO \"$p\" | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t\t then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       removelist=\"$removelist $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\ttest -n \"$removelist\" && \\\n\t  func_show_eval \"${RM}r \\$removelist\"\n      fi\n\n      # Now set the variables for building old libraries.\n      if test \"$build_old_libs\" = yes && test \"$build_libtool_libs\" != convenience ; then\n\toldlibs=\"$oldlibs $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.${libext}$/d; $lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      #for path in $notinst_path; do\n      #\tlib_search_path=`$ECHO \"$lib_search_path \" | $SED \"s% $path % %g\"`\n      #\tdeplibs=`$ECHO \"$deplibs \" | $SED \"s% -L$path % %g\"`\n      #\tdependency_libs=`$ECHO \"$dependency_libs \" | $SED \"s% -L$path % %g\"`\n      #done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  temp_xrpath=\"$temp_xrpath -R$libdir\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_rpath=\"$finalize_rpath $libdir\" ;;\n\t  esac\n\tdone\n\tif test \"$hardcode_into_libs\" != yes || test \"$build_old_libs\" = yes; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=\"$dlfiles\"\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) dlfiles=\"$dlfiles $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=\"$dlprefiles\"\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) dlprefiles=\"$dlprefiles $lib\" ;;\n\tesac\n      done\n\n      if test \"$build_libtool_libs\" = yes; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    deplibs=\"$deplibs System.ltframework\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    ;;\n\t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test \"$build_libtool_need_lc\" = \"yes\"; then\n\t      deplibs=\"$deplibs -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\"\"\n\tversuffix=\"\"\n\tmajor=\"\"\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $opt_dry_run || $RM conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $opt_dry_run || $RM conftest\n\t  if $LTCC $LTCFLAGS -o conftest conftest.c $deplibs; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\tif test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    newdeplibs=\"$newdeplibs $i\"\n\t\t    i=\"\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t\tif test -n \"$i\" ; then\n\t\t  eval \"libname=\\\"$libname_spec\\\"\"\n\t\t  eval \"deplib_matches=\\\"$library_names_spec\\\"\"\n\t\t  set dummy $deplib_matches; shift\n\t\t  deplib_match=$1\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t    newdeplibs=\"$newdeplibs $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    echo\n\t\t    $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *)\n\t\tnewdeplibs=\"$newdeplibs $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\t$opt_dry_run || $RM conftest\n\t\tif $LTCC $LTCFLAGS -o conftest conftest.c $i; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      newdeplibs=\"$newdeplibs $i\"\n\t\t      i=\"\"\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\" ; then\n\t\t    eval \"libname=\\\"$libname_spec\\\"\"\n\t\t    eval \"deplib_matches=\\\"$library_names_spec\\\"\"\n\t\t    set dummy $deplib_matches; shift\n\t\t    deplib_match=$1\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t      newdeplibs=\"$newdeplibs $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      echo\n\t\t      $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  $ECHO \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  echo \"*** make it link in!  You will probably need to install it or some\"\n\t\t  echo \"*** library that it depends on before this library will be fully\"\n\t\t  echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t\t;;\n\t      *)\n\t\tnewdeplibs=\"$newdeplibs $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method; shift\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\teval \"libname=\\\"$libname_spec\\\"\"\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null |\n\t\t\t $GREP \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=\"$potent_lib\"\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=\"$potliblink\";;\n\t\t\t*) potlib=`$ECHO \"$potlib\" | $SED 's,[^/]*$,,'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval \"$file_magic_cmd \\\"\\$potlib\\\"\" 2>/dev/null |\n\t\t\t $SED -e 10q |\n\t\t\t $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tnewdeplibs=\"$newdeplibs $a_deplib\"\n\t\t\ta_deplib=\"\"\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method; shift\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\teval \"libname=\\\"$libname_spec\\\"\"\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=\"$potent_lib\" # see symlink-check above in file_magic test\n\t\t    if eval \"\\$ECHO \\\"$potent_lib\\\"\" 2>/dev/null | $SED 10q | \\\n\t\t       $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t      a_deplib=\"\"\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\"\"\n\t  tmp_deplibs=`$ECHO \" $deplibs\" | $SED 's/ -lc$//; s/ -[LR][^ ]*//g'`\n\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t    for i in $predeps $postdeps ; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$ECHO \" $tmp_deplibs\" | $SED \"s,$i,,\"`\n\t    done\n\t  fi\n\t  case $tmp_deplibs in\n\t  *[!\\\t\\ ]*)\n\t    echo\n\t    if test \"X$deplibs_check_method\" = \"Xnone\"; then\n\t      echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library with the System framework\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t  ;;\n\tesac\n\n\tif test \"$droppeddeps\" = yes; then\n\t  if test \"$module\" = yes; then\n\t    echo\n\t    echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $ECHO \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    echo \"*** a static module, that should work as long as the dlopening\"\n\t    echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      echo\n\t      echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      echo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t      echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      echo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test \"$build_old_libs\" = no; then\n\t      oldlibs=\"$output_objdir/$libname.$libext\"\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    echo \"*** automatically added whenever a program is linked with this library\"\n\t    echo \"*** or is declared to -dlopen it.\"\n\n\t    if test \"$allow_undefined\" = no; then\n\t      echo\n\t      echo \"*** Since this library must not contain undefined symbols,\"\n\t      echo \"*** because either the platform does not support them or\"\n\t      echo \"*** it was explicitly requested with -no-undefined,\"\n\t      echo \"*** libtool will only create a static version of it.\"\n\t      if test \"$build_old_libs\" = no; then\n\t\toldlibs=\"$output_objdir/$libname.$libext\"\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n      # Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n      case $host in\n\t*-*-darwin*)\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  new_inherited_linker_flags=`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  deplibs=`$ECHO \" $deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  ;;\n      esac\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    new_libs=\"$new_libs -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) new_libs=\"$new_libs $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) new_libs=\"$new_libs $deplib\" ;;\n\tesac\n      done\n      deplibs=\"$new_libs\"\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test \"$build_libtool_libs\" = yes; then\n\tif test \"$hardcode_into_libs\" = yes; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=\"$finalize_rpath\"\n\t  test \"$mode\" != relink && rpath=\"$compile_rpath$rpath\"\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=\"$libdir\"\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    hardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval \"flag=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t\tdep_rpath=\"$dep_rpath $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) perm_rpath=\"$perm_rpath $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=\"$hardcode_libdirs\"\n\t    if test -n \"$hardcode_libdir_flag_spec_ld\"; then\n\t      eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec_ld\\\"\"\n\t    else\n\t      eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t    fi\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      rpath=\"$rpath$dir:\"\n\t    done\n\t    eval $runpath_var=\\$rpath\\$$runpath_var\n\t    export $runpath_var\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=\"$finalize_shlibpath\"\n\ttest \"$mode\" != relink && shlibpath=\"$compile_shlibpath$shlibpath\"\n\tif test -n \"$shlibpath\"; then\n\t  eval $shlibpath_var=\\$shlibpath\\$$shlibpath_var\n\t  export $shlibpath_var\n\tfi\n\n\t# Get the real and link names of the library.\n\teval \"shared_ext=\\\"$shrext_cmds\\\"\"\n\teval \"library_names=\\\"$library_names_spec\\\"\"\n\tset dummy $library_names\n\tshift\n\trealname=\"$1\"\n\tshift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval \"soname=\\\"$soname_spec\\\"\"\n\telse\n\t  soname=\"$realname\"\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=\"$output_objdir/$realname\"\n\tlinknames=\n\tfor link\n\tdo\n\t  linknames=\"$linknames $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$ECHO \"$libobjs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\ttest \"X$libobjs\" = \"X \" && libobjs=\n\n\tdelfiles=\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $opt_dry_run || cp \"$export_symbols\" \"$output_objdir/$libname.uexp\"\n\t  export_symbols=\"$output_objdir/$libname.uexp\"\n\t  delfiles=\"$delfiles $export_symbols\"\n\tfi\n\n\torig_export_symbols=\n\tcase $host_os in\n\tcygwin* | mingw* | cegcc*)\n\t  if test -n \"$export_symbols\" && test -z \"$export_symbols_regex\"; then\n\t    # exporting using user supplied symfile\n\t    if test \"x`$SED 1q $export_symbols`\" != xEXPORTS; then\n\t      # and it's NOT already a .def file. Must figure out\n\t      # which of the given symbols are data symbols and tag\n\t      # them as such. So, trigger use of export_symbols_cmds.\n\t      # export_symbols gets reassigned inside the \"prepare\n\t      # the list of exported symbols\" if statement, so the\n\t      # include_expsyms logic still works.\n\t      orig_export_symbols=\"$export_symbols\"\n\t      export_symbols=\n\t      always_export_symbols=yes\n\t    fi\n\t  fi\n\t  ;;\n\tesac\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test \"$always_export_symbols\" = yes || test -n \"$export_symbols_regex\"; then\n\t    func_verbose \"generating symbol list for \\`$libname.la'\"\n\t    export_symbols=\"$output_objdir/$libname.exp\"\n\t    $opt_dry_run || $RM $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $cmds; do\n\t      IFS=\"$save_ifs\"\n\t      eval \"cmd=\\\"$cmd\\\"\"\n\t      func_len \" $cmd\"\n\t      len=$func_len_result\n\t      if test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\tskipped_export=false\n\t      else\n\t\t# The command line is too long to execute in one step.\n\t\tfunc_verbose \"using reloadable object file for export list...\"\n\t\tskipped_export=:\n\t\t# Break out early, otherwise skipped_export may be\n\t\t# set to false by a later but shorter cmd.\n\t\tbreak\n\t      fi\n\t    done\n\t    IFS=\"$save_ifs\"\n\t    if test -n \"$export_symbols_regex\" && test \"X$skipped_export\" != \"X:\"; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  tmp_export_symbols=\"$export_symbols\"\n\t  test -n \"$orig_export_symbols\" && tmp_export_symbols=\"$orig_export_symbols\"\n\t  $opt_dry_run || $ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" && test -n \"$orig_export_symbols\"; then\n\t  # The given exports_symbols file has to be filtered, so filter it.\n\t  func_verbose \"filter symbol list for \\`$libname.la' to tag DATA exports\"\n\t  # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t  # 's' commands which not all seds can handle. GNU sed should be fine\n\t  # though. Also, the filter scales superlinearly with the number of\n\t  # global variables. join(1) would be nice here, but unfortunately\n\t  # isn't a blessed tool.\n\t  $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t  delfiles=\"$delfiles $export_symbols $output_objdir/$libname.filter\"\n\t  export_symbols=$output_objdir/$libname.def\n\t  $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t  case \" $convenience \" in\n\t  *\" $test_deplib \"*) ;;\n\t  *)\n\t    tmp_deplibs=\"$tmp_deplibs $test_deplib\"\n\t    ;;\n\t  esac\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\" &&\n\t    test \"$compiler_needs_object\" = yes &&\n\t    test -z \"$libobjs\"; then\n\t    # extract the archives, so we have objects to list.\n\t    # TODO: could optimize this to just extract one archive.\n\t    whole_archive_flag_spec=\n\t  fi\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval \"libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  else\n\t    gentop=\"$output_objdir/${outputname}x\"\n\t    generated=\"$generated $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    libobjs=\"$libobjs $func_extract_archives_result\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\tfi\n\n\tif test \"$thread_safe\" = yes && test -n \"$thread_safe_flag_spec\"; then\n\t  eval \"flag=\\\"$thread_safe_flag_spec\\\"\"\n\t  linker_flags=\"$linker_flags $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test \"$mode\" = relink; then\n\t  $opt_dry_run || (cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U) || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval \"test_cmds=\\\"$module_expsym_cmds\\\"\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval \"test_cmds=\\\"$module_cmds\\\"\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    eval \"test_cmds=\\\"$archive_expsym_cmds\\\"\"\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    eval \"test_cmds=\\\"$archive_cmds\\\"\"\n\t    cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" &&\n\t   func_len \" $test_cmds\" &&\n\t   len=$func_len_result &&\n\t   test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise\n\t  # or, if using GNU ld and skipped_export is not :, use a linker\n\t  # script.\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  func_basename \"$output\"\n\t  output_la=$func_basename_result\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  last_robj=\n\t  k=1\n\n\t  if test -n \"$save_libobjs\" && test \"X$skipped_export\" != \"X:\" && test \"$with_gnu_ld\" = yes; then\n\t    output=${output_objdir}/${output_la}.lnkscript\n\t    func_verbose \"creating GNU ld script: $output\"\n\t    echo 'INPUT (' > $output\n\t    for obj in $save_libobjs\n\t    do\n\t      $ECHO \"$obj\" >> $output\n\t    done\n\t    echo ')' >> $output\n\t    delfiles=\"$delfiles $output\"\n\t  elif test -n \"$save_libobjs\" && test \"X$skipped_export\" != \"X:\" && test \"X$file_list_spec\" != X; then\n\t    output=${output_objdir}/${output_la}.lnk\n\t    func_verbose \"creating linker input file list: $output\"\n\t    : > $output\n\t    set x $save_libobjs\n\t    shift\n\t    firstobj=\n\t    if test \"$compiler_needs_object\" = yes; then\n\t      firstobj=\"$1 \"\n\t      shift\n\t    fi\n\t    for obj\n\t    do\n\t      $ECHO \"$obj\" >> $output\n\t    done\n\t    delfiles=\"$delfiles $output\"\n\t    output=$firstobj\\\"$file_list_spec$output\\\"\n\t  else\n\t    if test -n \"$save_libobjs\"; then\n\t      func_verbose \"creating reloadable object files...\"\n\t      output=$output_objdir/$output_la-${k}.$objext\n\t      eval \"test_cmds=\\\"$reload_cmds\\\"\"\n\t      func_len \" $test_cmds\"\n\t      len0=$func_len_result\n\t      len=$len0\n\n\t      # Loop over the list of objects to be linked.\n\t      for obj in $save_libobjs\n\t      do\n\t\tfunc_len \" $obj\"\n\t\tfunc_arith $len + $func_len_result\n\t\tlen=$func_arith_result\n\t\tif test \"X$objlist\" = X ||\n\t\t   test \"$len\" -lt \"$max_cmd_len\"; then\n\t\t  func_append objlist \" $obj\"\n\t\telse\n\t\t  # The command $test_cmds is almost too long, add a\n\t\t  # command to the queue.\n\t\t  if test \"$k\" -eq 1 ; then\n\t\t    # The first file doesn't have a previous command to add.\n\t\t    reload_objs=$objlist\n\t\t    eval \"concat_cmds=\\\"$reload_cmds\\\"\"\n\t\t  else\n\t\t    # All subsequent reloadable object files will link in\n\t\t    # the last one created.\n\t\t    reload_objs=\"$objlist $last_robj\"\n\t\t    eval \"concat_cmds=\\\"\\$concat_cmds~$reload_cmds~\\$RM $last_robj\\\"\"\n\t\t  fi\n\t\t  last_robj=$output_objdir/$output_la-${k}.$objext\n\t\t  func_arith $k + 1\n\t\t  k=$func_arith_result\n\t\t  output=$output_objdir/$output_la-${k}.$objext\n\t\t  objlist=\" $obj\"\n\t\t  func_len \" $last_robj\"\n\t\t  func_arith $len0 + $func_len_result\n\t\t  len=$func_arith_result\n\t\tfi\n\t      done\n\t      # Handle the remaining objects by creating one last\n\t      # reloadable object file.  All subsequent reloadable object\n\t      # files will link in the last one created.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      reload_objs=\"$objlist $last_robj\"\n\t      eval \"concat_cmds=\\\"\\${concat_cmds}$reload_cmds\\\"\"\n\t      if test -n \"$last_robj\"; then\n\t        eval \"concat_cmds=\\\"\\${concat_cmds}~\\$RM $last_robj\\\"\"\n\t      fi\n\t      delfiles=\"$delfiles $output\"\n\n\t    else\n\t      output=\n\t    fi\n\n\t    if ${skipped_export-false}; then\n\t      func_verbose \"generating symbol list for \\`$libname.la'\"\n\t      export_symbols=\"$output_objdir/$libname.exp\"\n\t      $opt_dry_run || $RM $export_symbols\n\t      libobjs=$output\n\t      # Append the command to create the export file.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval \"concat_cmds=\\\"\\$concat_cmds$export_symbols_cmds\\\"\"\n\t      if test -n \"$last_robj\"; then\n\t\teval \"concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\"\n\t      fi\n\t    fi\n\n\t    test -n \"$save_libobjs\" &&\n\t      func_verbose \"creating a temporary reloadable object file: $output\"\n\n\t    # Loop through the commands generated above and execute them.\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $concat_cmds; do\n\t      IFS=\"$save_ifs\"\n\t      $opt_silent || {\n\t\t  func_quote_for_expand \"$cmd\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t      }\n\t      $opt_dry_run || eval \"$cmd\" || {\n\t\tlt_exit=$?\n\n\t\t# Restore the uninstalled library and exit\n\t\tif test \"$mode\" = relink; then\n\t\t  ( cd \"$output_objdir\" && \\\n\t\t    $RM \"${realname}T\" && \\\n\t\t    $MV \"${realname}U\" \"$realname\" )\n\t\tfi\n\n\t\texit $lt_exit\n\t      }\n\t    done\n\t    IFS=\"$save_ifs\"\n\n\t    if test -n \"$export_symbols_regex\" && ${skipped_export-false}; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\n          if ${skipped_export-false}; then\n\t    if test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t      tmp_export_symbols=\"$export_symbols\"\n\t      test -n \"$orig_export_symbols\" && tmp_export_symbols=\"$orig_export_symbols\"\n\t      $opt_dry_run || $ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"\n\t    fi\n\n\t    if test -n \"$orig_export_symbols\"; then\n\t      # The given exports_symbols file has to be filtered, so filter it.\n\t      func_verbose \"filter symbol list for \\`$libname.la' to tag DATA exports\"\n\t      # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t      # 's' commands which not all seds can handle. GNU sed should be fine\n\t      # though. Also, the filter scales superlinearly with the number of\n\t      # global variables. join(1) would be nice here, but unfortunately\n\t      # isn't a blessed tool.\n\t      $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t      delfiles=\"$delfiles $export_symbols $output_objdir/$libname.filter\"\n\t      export_symbols=$output_objdir/$libname.def\n\t      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\t    fi\n\t  fi\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval \"libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t    if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t      cmds=$archive_expsym_cmds\n\t    else\n\t      cmds=$archive_cmds\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$delfiles\"; then\n\t  # Append the command to remove temporary files to $cmds.\n\t  eval \"cmds=\\\"\\$cmds~\\$RM $delfiles\\\"\"\n\tfi\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  generated=\"$generated $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  libobjs=\"$libobjs $func_extract_archives_result\"\n\t  test \"X$libobjs\" = \"X \" && libobjs=\n\tfi\n\n\tsave_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  eval \"cmd=\\\"$cmd\\\"\"\n\t  $opt_silent || {\n\t    func_quote_for_expand \"$cmd\"\n\t    eval \"func_echo $func_quote_for_expand_result\"\n\t  }\n\t  $opt_dry_run || eval \"$cmd\" || {\n\t    lt_exit=$?\n\n\t    # Restore the uninstalled library and exit\n\t    if test \"$mode\" = relink; then\n\t      ( cd \"$output_objdir\" && \\\n\t        $RM \"${realname}T\" && \\\n\t\t$MV \"${realname}U\" \"$realname\" )\n\t    fi\n\n\t    exit $lt_exit\n\t  }\n\tdone\n\tIFS=\"$save_ifs\"\n\n\t# Restore the uninstalled library and exit\n\tif test \"$mode\" = relink; then\n\t  $opt_dry_run || (cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname) || exit $?\n\n\t  if test -n \"$convenience\"; then\n\t    if test -z \"$whole_archive_flag_spec\"; then\n\t      func_show_eval '${RM}r \"$gentop\"'\n\t    fi\n\t  fi\n\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    func_show_eval '(cd \"$output_objdir\" && $RM \"$linkname\" && $LN_S \"$realname\" \"$linkname\")' 'exit $?'\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test \"$module\" = yes || test \"$export_dynamic\" = yes; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=\"$soname\"\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tfunc_warning \"\\`-dlopen' is ignored for objects\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"\\`-l' and \\`-L' are ignored for objects\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"\\`-rpath' is ignored for objects\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"\\`-R' is ignored for objects\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info' is ignored for objects\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for objects\"\n\n      case $output in\n      *.lo)\n\ttest -n \"$objs$old_deplibs\" && \\\n\t  func_fatal_error \"cannot build library object \\`$output' from non-libtool objects\"\n\n\tlibobj=$output\n\tfunc_lo2o \"$libobj\"\n\tobj=$func_lo2o_result\n\t;;\n      *)\n\tlibobj=\n\tobj=\"$output\"\n\t;;\n      esac\n\n      # Delete the old objects.\n      $opt_dry_run || $RM $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # reload_cmds runs $LD directly, so let us get rid of\n      # -Wl from whole_archive_flag_spec and hope we can get by with\n      # turning comma into space..\n      wl=\n\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval \"tmp_whole_archive_flags=\\\"$whole_archive_flag_spec\\\"\"\n\t  reload_conv_objs=$reload_objs\\ `$ECHO \"$tmp_whole_archive_flags\" | $SED 's|,| |g'`\n\telse\n\t  gentop=\"$output_objdir/${obj}x\"\n\t  generated=\"$generated $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # Create the old-style object.\n      reload_objs=\"$objs$old_deplibs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.${libext}$/d; /\\.lib$/d; $lo2o\" | $NL2SP`\" $reload_conv_objs\" ### testsuite: skip nested quoting test\n\n      output=\"$obj\"\n      func_execute_cmds \"$reload_cmds\" 'exit $?'\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$build_libtool_libs\" != yes; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $opt_dry_run || echo timestamp > $libobj || exit $?\n\texit $EXIT_SUCCESS\n      fi\n\n      if test -n \"$pic_flag\" || test \"$pic_mode\" != default; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=\"$libobj\"\n\tfunc_execute_cmds \"$reload_cmds\" 'exit $?'\n      fi\n\n      if test -n \"$gentop\"; then\n\tfunc_show_eval '${RM}r \"$gentop\"'\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) func_stripname '' '.exe' \"$output\"\n\t          output=$func_stripname_result.exe;;\n      esac\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info' is ignored for programs\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for programs\"\n\n      test \"$preload\" = yes \\\n        && test \"$dlopen_support\" = unknown \\\n\t&& test \"$dlopen_self\" = unknown \\\n\t&& test \"$dlopen_self_static\" = unknown && \\\n\t  func_warning \"\\`LT_INIT([dlopen])' not used. Assuming no dlopen support.\"\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t;;\n      esac\n\n      case $host in\n      *-*-darwin*)\n\t# Don't allow lazy linking, it breaks C++ global constructors\n\t# But is supposedly fixed on 10.4 or later (yay!).\n\tif test \"$tagname\" = CXX ; then\n\t  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in\n\t    10.[0123])\n\t      compile_command=\"$compile_command ${wl}-bind_at_load\"\n\t      finalize_command=\"$finalize_command ${wl}-bind_at_load\"\n\t    ;;\n\t  esac\n\tfi\n\t# Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t;;\n      esac\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $compile_deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    new_libs=\"$new_libs -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $compile_deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) new_libs=\"$new_libs $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) new_libs=\"$new_libs $deplib\" ;;\n\tesac\n      done\n      compile_deplibs=\"$new_libs\"\n\n\n      compile_command=\"$compile_command $compile_deplibs\"\n      finalize_command=\"$finalize_command $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_rpath=\"$finalize_rpath $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\thardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval \"flag=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t    rpath=\"$rpath $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) perm_rpath=\"$perm_rpath $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`${ECHO} \"$libdir\" | ${SED} -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  ::) dllsearchpath=$libdir;;\n\t  *) dllsearchpath=\"$dllsearchpath:$libdir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) dllsearchpath=\"$dllsearchpath:$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval \"rpath=\\\" $hardcode_libdir_flag_spec\\\"\"\n      fi\n      compile_rpath=\"$rpath\"\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\thardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval \"flag=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t    rpath=\"$rpath $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_perm_rpath=\"$finalize_perm_rpath $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval \"rpath=\\\" $hardcode_libdir_flag_spec\\\"\"\n      fi\n      finalize_rpath=\"$rpath\"\n\n      if test -n \"$libobjs\" && test \"$build_old_libs\" = yes; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$ECHO \"$compile_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$ECHO \"$finalize_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n      fi\n\n      func_generate_dlsyms \"$outputname\" \"@PROGRAM@\" \"no\"\n\n      # template prelinking step\n      if test -n \"$prelink_cmds\"; then\n\tfunc_execute_cmds \"$prelink_cmds\" 'exit $?'\n      fi\n\n      wrappers_required=yes\n      case $host in\n      *cegcc* | *mingw32ce*)\n        # Disable wrappers for cegcc and mingw32ce hosts, we are cross compiling anyway.\n        wrappers_required=no\n        ;;\n      *cygwin* | *mingw* )\n        if test \"$build_libtool_libs\" != yes; then\n          wrappers_required=no\n        fi\n        ;;\n      *)\n        if test \"$need_relink\" = no || test \"$build_libtool_libs\" != yes; then\n          wrappers_required=no\n        fi\n        ;;\n      esac\n      if test \"$wrappers_required\" = no; then\n\t# Replace the output file specification.\n\tcompile_command=`$ECHO \"$compile_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=\"$compile_command$compile_rpath\"\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\texit_status=0\n\tfunc_show_eval \"$link_command\" 'exit_status=$?'\n\n\t# Delete the generated files.\n\tif test -f \"$output_objdir/${outputname}S.${objext}\"; then\n\t  func_show_eval '$RM \"$output_objdir/${outputname}S.${objext}\"'\n\tfi\n\n\texit $exit_status\n      fi\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    rpath=\"$rpath$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    rpath=\"$rpath$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test \"$no_install\" = yes; then\n\t# We don't need to create a wrapper script.\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\t# Replace the output file specification.\n\tlink_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$opt_dry_run || $RM $output\n\t# Link the executable and exit\n\tfunc_show_eval \"$link_command\" 'exit $?'\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$hardcode_action\" = relink; then\n\t# Fast installation is not supported\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\trelink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\n\tfunc_warning \"this platform does not like uninstalled shared libraries\"\n\tfunc_warning \"\\`$output' will be relinked during installation\"\n      else\n\tif test \"$fast_install\" != no; then\n\t  link_command=\"$finalize_var$compile_command$finalize_rpath\"\n\t  if test \"$fast_install\" = yes; then\n\t    relink_command=`$ECHO \"$compile_var$compile_command$compile_rpath\" | $SED 's%@OUTPUT@%\\$progdir/\\$file%g'`\n\t  else\n\t    # fast_install is set to needless\n\t    relink_command=\n\t  fi\n\telse\n\t  link_command=\"$compile_var$compile_command$compile_rpath\"\n\t  relink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\tfi\n      fi\n\n      # Replace the output file specification.\n      link_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $opt_dry_run || $RM $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      func_show_eval \"$link_command\" 'exit $?'\n\n      # Now create the wrapper script.\n      func_verbose \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    func_quote_for_eval \"$var_value\"\n\t    relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\t  fi\n\tdone\n\trelink_command=\"(cd `pwd`; $relink_command)\"\n\trelink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if not in dry run mode.\n      $opt_dry_run || {\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) func_stripname '' '.exe' \"$output\"\n\t         output=$func_stripname_result ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    func_stripname '' '.exe' \"$outputname\"\n\t    outputname=$func_stripname_result ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n\t    func_dirname_and_basename \"$output\" \"\" \".\"\n\t    output_name=$func_basename_result\n\t    output_path=$func_dirname_result\n\t    cwrappersource=\"$output_path/$objdir/lt-$output_name.c\"\n\t    cwrapper=\"$output_path/$output_name.exe\"\n\t    $RM $cwrappersource $cwrapper\n\t    trap \"$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_cwrapperexe_src > $cwrappersource\n\n\t    # The wrapper executable is built using the $host compiler,\n\t    # because it contains $host paths and files. If cross-\n\t    # compiling, it, like the target executable, must be\n\t    # executed on the $host or under an emulation environment.\n\t    $opt_dry_run || {\n\t      $LTCC $LTCFLAGS -o $cwrapper $cwrappersource\n\t      $STRIP $cwrapper\n\t    }\n\n\t    # Now, create the wrapper script for func_source use:\n\t    func_ltwrapper_scriptname $cwrapper\n\t    $RM $func_ltwrapper_scriptname_result\n\t    trap \"$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE\" 1 2 15\n\t    $opt_dry_run || {\n\t      # note: this script will not be executed, so do not chmod.\n\t      if test \"x$build\" = \"x$host\" ; then\n\t\t$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result\n\t      else\n\t\tfunc_emit_wrapper no > $func_ltwrapper_scriptname_result\n\t      fi\n\t    }\n\t  ;;\n\t  * )\n\t    $RM $output\n\t    trap \"$RM $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_wrapper no > $output\n\t    chmod +x $output\n\t  ;;\n\tesac\n      }\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      if test \"$build_libtool_libs\" = convenience; then\n\toldobjs=\"$libobjs_save $symfileobj\"\n\taddlibs=\"$convenience\"\n\tbuild_libtool_libs=no\n      else\n\tif test \"$build_libtool_libs\" = module; then\n\t  oldobjs=\"$libobjs_save\"\n\t  build_libtool_libs=no\n\telse\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\t  if test \"$preload\" = yes && test -f \"$symfileobj\"; then\n\t    oldobjs=\"$oldobjs $symfileobj\"\n\t  fi\n\tfi\n\taddlibs=\"$old_convenience\"\n      fi\n\n      if test -n \"$addlibs\"; then\n\tgentop=\"$output_objdir/${outputname}x\"\n\tgenerated=\"$generated $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\toldobjs=\"$oldobjs $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test \"$build_libtool_libs\" = yes; then\n\tcmds=$old_archive_from_new_cmds\n      else\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  generated=\"$generated $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  oldobjs=\"$oldobjs $func_extract_archives_result\"\n\tfi\n\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      func_basename \"$obj\"\n\t      $ECHO \"$func_basename_result\"\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  echo \"copying selected object files to avoid basename conflicts...\"\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  generated=\"$generated $gentop\"\n\t  func_mkdir_p \"$gentop\"\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_basename \"$obj\"\n\t    objbase=\"$func_basename_result\"\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tfunc_arith $counter + 1\n\t\tcounter=$func_arith_result\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      func_show_eval \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      oldobjs=\"$oldobjs $gentop/$newobj\"\n\t      ;;\n\t    *) oldobjs=\"$oldobjs $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\teval \"cmds=\\\"$old_archive_cmds\\\"\"\n\n\tfunc_len \" $cmds\"\n\tlen=$func_len_result\n\tif test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  func_verbose \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  eval \"test_cmds=\\\"$old_archive_cmds\\\"\"\n\t  func_len \" $test_cmds\"\n\t  len0=$func_len_result\n\t  len=$len0\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_len \" $obj\"\n\t    func_arith $len + $func_len_result\n\t    len=$func_arith_result\n\t    func_append objlist \" $obj\"\n\t    if test \"$len\" -lt \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\" ; then\n\t\tRANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval \"concat_cmds=\\\"\\${concat_cmds}$old_archive_cmds\\\"\"\n\t      objlist=\n\t      len=$len0\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test \"X$oldobjs\" = \"X\" ; then\n\t    eval \"cmds=\\\"\\$concat_cmds\\\"\"\n\t  else\n\t    eval \"cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\"\n\t  fi\n\tfi\n      fi\n      func_execute_cmds \"$cmds\" 'exit $?'\n    done\n\n    test -n \"$generated\" && \\\n      func_show_eval \"${RM}r$generated\"\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test \"$build_old_libs\" = yes && old_library=\"$libname.$libext\"\n      func_verbose \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  func_quote_for_eval \"$var_value\"\n\t  relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      relink_command=\"(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      relink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      if test \"$hardcode_automatic\" = yes ; then\n\trelink_command=\n      fi\n\n      # Only create the output if not a dry run.\n      $opt_dry_run || {\n\tfor installed in no yes; do\n\t  if test \"$installed\" = yes; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=\"$output_objdir/$outputname\"i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tfunc_basename \"$deplib\"\n\t\tname=\"$func_basename_result\"\n\t\tlibdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$deplib' is not a valid libtool archive\"\n\t\tnewdependency_libs=\"$newdependency_libs $libdir/$name\"\n\t\t;;\n\t      *) newdependency_libs=\"$newdependency_libs $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=\"$newdependency_libs\"\n\t    newdlfiles=\n\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t      *.la)\n\t        func_basename \"$lib\"\n\t\tname=\"$func_basename_result\"\n\t\tlibdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\t\tnewdlfiles=\"$newdlfiles $libdir/$name\"\n\t\t;;\n\t      *) newdlfiles=\"$newdlfiles $lib\" ;;\n\t      esac\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t      *.la)\n\t\t# Only pass preopened files to the pseudo-archive (for\n\t\t# eventual linking with the app. that links it) if we\n\t\t# didn't already link the preopened objects directly into\n\t\t# the library:\n\t\tfunc_basename \"$lib\"\n\t\tname=\"$func_basename_result\"\n\t\tlibdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\t\tnewdlprefiles=\"$newdlprefiles $libdir/$name\"\n\t\t;;\n\t      esac\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      newdlfiles=\"$newdlfiles $abs\"\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      newdlprefiles=\"$newdlprefiles $abs\"\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  fi\n\t  $RM $output\n\t  # place dlname in correct position for cygwin\n\t  # In fact, it would be nice if we could use this code for all target\n\t  # systems that can't hard-code library paths into their executables\n\t  # and that have no shared library path variable independent of PATH,\n\t  # but it turns out we can't easily determine that from inspecting\n\t  # libtool variables, so we have to hard-code the OSs to which it\n\t  # applies here; at the moment, that means platforms that use the PE\n\t  # object format with DLL files.  See the long comment at the top of\n\t  # tests/bindir.at for full details.\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll)\n\t      # If a -bindir argument was supplied, place the dll there.\n\t      if test \"x$bindir\" != x ;\n\t      then\n\t\tfunc_relative_path \"$install_libdir\" \"$bindir\"\n\t\ttdlname=$func_relative_path_result$dlname\n\t      else\n\t\t# Otherwise fall back on heuristic.\n\t\ttdlname=../bin/$dlname\n\t      fi\n\t      ;;\n\t  esac\n\t  $ECHO > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Linker flags that can not go in dependency_libs.\ninherited_linker_flags='$new_inherited_linker_flags'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Names of additional weak libraries provided by this library\nweak_library_names='$weak_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test \"$installed\" = no && test \"$need_relink\" = yes; then\n\t    $ECHO >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      }\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      func_show_eval '( cd \"$output_objdir\" && $RM \"$outputname\" && $LN_S \"../$outputname\" \"$outputname\" )' 'exit $?'\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n}\n\n{ test \"$mode\" = link || test \"$mode\" = relink; } &&\n    func_mode_link ${1+\"$@\"}\n\n\n# func_mode_uninstall arg...\nfunc_mode_uninstall ()\n{\n    $opt_debug\n    RM=\"$nonopt\"\n    files=\n    rmforce=\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    for arg\n    do\n      case $arg in\n      -f) RM=\"$RM $arg\"; rmforce=yes ;;\n      -*) RM=\"$RM $arg\" ;;\n      *) files=\"$files $arg\" ;;\n      esac\n    done\n\n    test -z \"$RM\" && \\\n      func_fatal_help \"you must specify an RM program\"\n\n    rmdirs=\n\n    origobjdir=\"$objdir\"\n    for file in $files; do\n      func_dirname \"$file\" \"\" \".\"\n      dir=\"$func_dirname_result\"\n      if test \"X$dir\" = X.; then\n\tobjdir=\"$origobjdir\"\n      else\n\tobjdir=\"$dir/$origobjdir\"\n      fi\n      func_basename \"$file\"\n      name=\"$func_basename_result\"\n      test \"$mode\" = uninstall && objdir=\"$dir\"\n\n      # Remember objdir for removal later, being careful to avoid duplicates\n      if test \"$mode\" = clean; then\n\tcase \" $rmdirs \" in\n\t  *\" $objdir \"*) ;;\n\t  *) rmdirs=\"$rmdirs $objdir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if { test -L \"$file\"; } >/dev/null 2>&1 ||\n\t { test -h \"$file\"; } >/dev/null 2>&1 ||\n\t test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif test \"$rmforce\" = yes; then\n\tcontinue\n      fi\n\n      rmfiles=\"$file\"\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif func_lalib_p \"$file\"; then\n\t  func_source $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    rmfiles=\"$rmfiles $objdir/$n\"\n\t  done\n\t  test -n \"$old_library\" && rmfiles=\"$rmfiles $objdir/$old_library\"\n\n\t  case \"$mode\" in\n\t  clean)\n\t    case \"  $library_names \" in\n\t    # \"  \" in the beginning catches empty $dlname\n\t    *\" $dlname \"*) ;;\n\t    *) rmfiles=\"$rmfiles $objdir/$dlname\" ;;\n\t    esac\n\t    test -n \"$libdir\" && rmfiles=\"$rmfiles $objdir/$name $objdir/${name}i\"\n\t    ;;\n\t  uninstall)\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      func_execute_cmds \"$postuninstall_cmds\" 'test \"$rmforce\" = yes || exit_status=1'\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      func_execute_cmds \"$old_postuninstall_cmds\" 'test \"$rmforce\" = yes || exit_status=1'\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t    ;;\n\t  esac\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif func_lalib_p \"$file\"; then\n\n\t  # Read the .lo file\n\t  func_source $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" &&\n\t     test \"$pic_object\" != none; then\n\t    rmfiles=\"$rmfiles $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" &&\n\t     test \"$non_pic_object\" != none; then\n\t    rmfiles=\"$rmfiles $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test \"$mode\" = clean ; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    func_stripname '' '.exe' \"$file\"\n\t    file=$func_stripname_result\n\t    func_stripname '' '.exe' \"$name\"\n\t    noexename=$func_stripname_result\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    rmfiles=\"$rmfiles $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if func_ltwrapper_p \"$file\"; then\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      relink_command=\n\t      func_source $func_ltwrapper_scriptname_result\n\t      rmfiles=\"$rmfiles $func_ltwrapper_scriptname_result\"\n\t    else\n\t      relink_command=\n\t      func_source $dir/$noexename\n\t    fi\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    rmfiles=\"$rmfiles $objdir/$name $objdir/${name}S.${objext}\"\n\t    if test \"$fast_install\" = yes && test -n \"$relink_command\"; then\n\t      rmfiles=\"$rmfiles $objdir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\" ; then\n\t      rmfiles=\"$rmfiles $objdir/lt-${noexename}.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      func_show_eval \"$RM $rmfiles\" 'exit_status=1'\n    done\n    objdir=\"$origobjdir\"\n\n    # Try to remove the ${objdir}s in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\tfunc_show_eval \"rmdir $dir >/dev/null 2>&1\"\n      fi\n    done\n\n    exit $exit_status\n}\n\n{ test \"$mode\" = uninstall || test \"$mode\" = clean; } &&\n    func_mode_uninstall ${1+\"$@\"}\n\ntest -z \"$mode\" && {\n  help=\"$generic_help\"\n  func_fatal_help \"you must specify a MODE\"\n}\n\ntest -z \"$exec_cmd\" && \\\n  func_fatal_help \"invalid operation mode \\`$mode'\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec \"$exec_cmd\"\n  exit $EXIT_FAILURE\nfi\n\nexit $exit_status\n\n\n# The TAGs below are defined such that we never get into a situation\n# in which we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\nbuild_libtool_libs=no\nbuild_old_libs=yes\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\nbuild_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n# vi:sw=2\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/native/jni/midi-dssi/gnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider.c": "/* gnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider.c - DSSI Provider\n   Copyright (C) 2005 Free Software Foundation, Inc.\n\nThis file is part of GNU Classpath.\n\nGNU Classpath is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2, or (at your option)\nany later version.\n \nGNU Classpath is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with GNU Classpath; see the file COPYING.  If not, write to the\nFree Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n02110-1301 USA.\n\nLinking this library statically or dynamically with other modules is\nmaking a combined work based on this library.  Thus, the terms and\nconditions of the GNU General Public License cover the whole\ncombination.\n\nAs a special exception, the copyright holders of this library give you\npermission to link this library with independent modules to produce an\nexecutable, regardless of the license terms of these independent\nmodules, and to copy and distribute the resulting executable under\nterms of your choice, provided that you also meet, for each linked\nindependent module, the terms and conditions of the license of that\nmodule.  An independent module is a module which is not derived from\nor based on this library.  If you modify this library, you may extend\nthis exception to your version of the library, but you are not\nobligated to do so.  If you do not wish to do so, delete this\nexception statement from your version. */\n\n#include <config.h>\n#include <gnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider.h> \n\n#include \"dssi_data.h\"\n\nvoid\nJava_gnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider_dlclose_1 \n  (JNIEnv *env, jclass clazz __attribute__((unused)), jlong sohandle)\n{\n  dssi_data *data = (dssi_data *) (long) sohandle;\n  dlclose (data->dlhandle);\n  JCL_free (env, data);  \n}\n\njlong\nJava_gnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider_dlopen_1 \n  (JNIEnv *env, jclass clazz __attribute__((unused)), jstring name)\n{\n  const char *filename;\n  void *handle;\n  DSSI_Descriptor_Function fn;\n  dssi_data *data = 0;\n  \n  filename = JCL_jstring_to_cstring (env, name);\n  if (filename == NULL)\n    return (0);\n  \n  handle = dlopen(filename, RTLD_NOW);\n  \n  if (handle == 0)\n    goto done;\n  \n  fn = (DSSI_Descriptor_Function) dlsym(handle, \"dssi_descriptor\");\n  \n  if (fn == 0)\n    {\n      dlclose(handle);\n      goto done;\n    }\n  \n  data = (dssi_data *) JCL_malloc(env, sizeof(dssi_data));\n  data->dlhandle = handle;\n  data->fn = fn;\n  data->midiEventReadIndex = 0;\n  data->midiEventWriteIndex = 0;\n  \n done:\n  JCL_free_cstring (env, name, filename);\n  return PTR_TO_JLONG(data);\n}\n\njlong\nJava_gnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider_getDSSIHandle_1 \n  (JNIEnv *env __attribute__((unused)), \n   jclass clazz __attribute__((unused)), jlong handle, jlong index)\n{ \n  dssi_data *data = JLONG_TO_PTR(dssi_data,handle);\n  data->desc = (data->fn)(index);\n  return PTR_TO_JLONG(data->desc);\n}\n\njstring\nJava_gnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider_getDSSIName_1 \n  (JNIEnv *env, jclass clazz __attribute__((unused)), jlong handle)\n{\n  DSSI_Descriptor *desc = JLONG_TO_PTR(DSSI_Descriptor,handle);\n  const char *str = desc->LADSPA_Plugin->Name;\n  \n  return (*env)->NewStringUTF (env, str);\n} \n\njstring\nJava_gnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider_getDSSICopyright_1 \n  (JNIEnv *env, jclass clazz __attribute__((unused)), jlong handle)\n{\n  DSSI_Descriptor *desc = JLONG_TO_PTR(DSSI_Descriptor,handle);\n  const char *str = desc->LADSPA_Plugin->Copyright;\n  \n  return (*env)->NewStringUTF (env, str);\n} \n\njstring\nJava_gnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider_getDSSIVendor_1 \n  (JNIEnv *env, jclass clazz __attribute__((unused)), jlong handle)\n{\n  DSSI_Descriptor *desc = JLONG_TO_PTR(DSSI_Descriptor,handle);\n  const char *str = desc->LADSPA_Plugin->Maker;\n  \n  return (*env)->NewStringUTF (env, str);\n}\n\njstring\nJava_gnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider_getDSSILabel_1 \n  (JNIEnv *env, jclass clazz __attribute__((unused)), jlong handle)\n{\n  DSSI_Descriptor *desc = JLONG_TO_PTR(DSSI_Descriptor,handle);\n  const char *str = desc->LADSPA_Plugin->Label;\n  \n  return (*env)->NewStringUTF (env, str);\n}\n\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/native/jni/midi-dssi/Makefile.am": "nativeexeclib_LTLIBRARIES = libgjsmdssi.la \n\nlibgjsmdssi_la_SOURCES = gnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider.c \\\n\t\t\t gnu_javax_sound_midi_dssi_DSSISynthesizer.c \\\n\t\t\t dssi_data.h\n\nlibgjsmdssi_la_LIBADD = $(top_builddir)/native/jni/classpath/jcl.lo -ljack\nlibgjsmdssi_la_LDFLAGS = $(AM_LDFLAGS) -avoid-version\n\nAM_LDFLAGS = @CLASSPATH_MODULE@\nAM_CPPFLAGS = @CLASSPATH_INCLUDES@ \n# No STRICT_WARNING_CFLAGS here as we use dlsym to load the address of \n# a function,and ISO C prohibits casting void pointers, like those returned\n# by dlsym, to function pointers.\nAM_CFLAGS = @WARNING_CFLAGS@ @ERROR_CFLAGS@ @EXTRA_CFLAGS@\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/native/jni/midi-dssi/Makefile.in": "# Makefile.in generated by automake 1.11.1 from Makefile.am.\n# @configure_input@\n\n# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n# Inc.\n# This Makefile.in is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n# PARTICULAR PURPOSE.\n\n@SET_MAKE@\n\nVPATH = @srcdir@\npkgdatadir = $(datadir)/@PACKAGE@\npkgincludedir = $(includedir)/@PACKAGE@\npkglibdir = $(libdir)/@PACKAGE@\npkglibexecdir = $(libexecdir)/@PACKAGE@\nam__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\ninstall_sh_DATA = $(install_sh) -c -m 644\ninstall_sh_PROGRAM = $(install_sh) -c\ninstall_sh_SCRIPT = $(install_sh) -c\nINSTALL_HEADER = $(INSTALL_DATA)\ntransform = $(program_transform_name)\nNORMAL_INSTALL = :\nPRE_INSTALL = :\nPOST_INSTALL = :\nNORMAL_UNINSTALL = :\nPRE_UNINSTALL = :\nPOST_UNINSTALL = :\nbuild_triplet = @build@\nhost_triplet = @host@\ntarget_triplet = @target@\nsubdir = native/jni/midi-dssi\nDIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am\nACLOCAL_M4 = $(top_srcdir)/aclocal.m4\nam__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n\t$(top_srcdir)/../../config/lead-dot.m4 \\\n\t$(top_srcdir)/../../config/multi.m4 \\\n\t$(top_srcdir)/../../config/no-executables.m4 \\\n\t$(top_srcdir)/../../config/override.m4 \\\n\t$(top_srcdir)/../../libtool.m4 \\\n\t$(top_srcdir)/../../ltoptions.m4 \\\n\t$(top_srcdir)/../../ltsugar.m4 \\\n\t$(top_srcdir)/../../ltversion.m4 \\\n\t$(top_srcdir)/../../lt~obsolete.m4 \\\n\t$(top_srcdir)/m4/ac_prog_antlr.m4 \\\n\t$(top_srcdir)/m4/ac_prog_java.m4 \\\n\t$(top_srcdir)/m4/ac_prog_java_works.m4 \\\n\t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n\t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n\t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n\t$(top_srcdir)/m4/acinclude.m4 \\\n\t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n\t$(top_srcdir)/m4/ax_func_which_gethostbyname_r.m4 \\\n\t$(top_srcdir)/m4/gcc_attribute.m4 $(top_srcdir)/m4/iconv.m4 \\\n\t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n\t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n\t$(top_srcdir)/configure.ac\nam__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n\t$(ACLOCAL_M4)\nmkinstalldirs = $(SHELL) $(top_srcdir)/../../mkinstalldirs\nCONFIG_HEADER = $(top_builddir)/include/config.h\nCONFIG_CLEAN_FILES =\nCONFIG_CLEAN_VPATH_FILES =\nam__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\nam__vpath_adj = case $$p in \\\n    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n    *) f=$$p;; \\\n  esac;\nam__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\nam__install_max = 40\nam__nobase_strip_setup = \\\n  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\nam__nobase_strip = \\\n  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\nam__nobase_list = $(am__nobase_strip_setup); \\\n  for p in $$list; do echo \"$$p $$p\"; done | \\\n  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n    if (++n[$$2] == $(am__install_max)) \\\n      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n    END { for (dir in files) print dir, files[dir] }'\nam__base_list = \\\n  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\nam__installdirs = \"$(DESTDIR)$(nativeexeclibdir)\"\nLTLIBRARIES = $(nativeexeclib_LTLIBRARIES)\nlibgjsmdssi_la_DEPENDENCIES =  \\\n\t$(top_builddir)/native/jni/classpath/jcl.lo\nam_libgjsmdssi_la_OBJECTS =  \\\n\tgnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider.lo \\\n\tgnu_javax_sound_midi_dssi_DSSISynthesizer.lo\nlibgjsmdssi_la_OBJECTS = $(am_libgjsmdssi_la_OBJECTS)\nlibgjsmdssi_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n\t$(libgjsmdssi_la_LDFLAGS) $(LDFLAGS) -o $@\nDEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include\ndepcomp = $(SHELL) $(top_srcdir)/../../depcomp\nam__depfiles_maybe = depfiles\nam__mv = mv -f\nCOMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n\t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\nLTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\nCCLD = $(CC)\nLINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \\\n\t$(LDFLAGS) -o $@\nSOURCES = $(libgjsmdssi_la_SOURCES)\nETAGS = etags\nCTAGS = ctags\nACLOCAL = @ACLOCAL@\nAMTAR = @AMTAR@\nANTLR = @ANTLR@\nANTLR_JAR = @ANTLR_JAR@\nAR = @AR@\nAUTOCONF = @AUTOCONF@\nAUTOHEADER = @AUTOHEADER@\nAUTOMAKE = @AUTOMAKE@\nAWK = @AWK@\nCAIRO_CFLAGS = @CAIRO_CFLAGS@\nCAIRO_LIBS = @CAIRO_LIBS@\nCC = @CC@\nCCDEPMODE = @CCDEPMODE@\nCFLAGS = @CFLAGS@\nCLASSPATH_CONVENIENCE = @CLASSPATH_CONVENIENCE@\nCLASSPATH_INCLUDES = @CLASSPATH_INCLUDES@\nCLASSPATH_MODULE = @CLASSPATH_MODULE@\nCOLLECTIONS_PREFIX = @COLLECTIONS_PREFIX@\nCP = @CP@\nCPP = @CPP@\nCPPFLAGS = @CPPFLAGS@\nCXX = @CXX@\nCXXCPP = @CXXCPP@\nCXXDEPMODE = @CXXDEPMODE@\nCXXFLAGS = @CXXFLAGS@\nCYGPATH_W = @CYGPATH_W@\nDATE = @DATE@\nDEFAULT_PREFS_PEER = @DEFAULT_PREFS_PEER@\nDEFS = @DEFS@\nDEPDIR = @DEPDIR@\nDSYMUTIL = @DSYMUTIL@\nDUMPBIN = @DUMPBIN@\nECHO_C = @ECHO_C@\nECHO_N = @ECHO_N@\nECHO_T = @ECHO_T@\nECJ_JAR = @ECJ_JAR@\nEGREP = @EGREP@\nERROR_CFLAGS = @ERROR_CFLAGS@\nEXAMPLESDIR = @EXAMPLESDIR@\nEXEEXT = @EXEEXT@\nEXTRA_CFLAGS = @EXTRA_CFLAGS@\nFGREP = @FGREP@\nFIND = @FIND@\nFREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\nFREETYPE2_LIBS = @FREETYPE2_LIBS@\nGCONF_CFLAGS = @GCONF_CFLAGS@\nGCONF_LIBS = @GCONF_LIBS@\nGDK_CFLAGS = @GDK_CFLAGS@\nGDK_LIBS = @GDK_LIBS@\nGJDOC = @GJDOC@\nGLIB_CFLAGS = @GLIB_CFLAGS@\nGLIB_LIBS = @GLIB_LIBS@\nGMP_CFLAGS = @GMP_CFLAGS@\nGMP_LIBS = @GMP_LIBS@\nGREP = @GREP@\nGSTREAMER_BASE_CFLAGS = @GSTREAMER_BASE_CFLAGS@\nGSTREAMER_BASE_LIBS = @GSTREAMER_BASE_LIBS@\nGSTREAMER_CFLAGS = @GSTREAMER_CFLAGS@\nGSTREAMER_FILE_READER = @GSTREAMER_FILE_READER@\nGSTREAMER_LIBS = @GSTREAMER_LIBS@\nGSTREAMER_MIXER_PROVIDER = @GSTREAMER_MIXER_PROVIDER@\nGSTREAMER_PLUGINS_BASE_CFLAGS = @GSTREAMER_PLUGINS_BASE_CFLAGS@\nGSTREAMER_PLUGINS_BASE_LIBS = @GSTREAMER_PLUGINS_BASE_LIBS@\nGST_PLUGIN_LDFLAGS = @GST_PLUGIN_LDFLAGS@\nGTK_CFLAGS = @GTK_CFLAGS@\nGTK_LIBS = @GTK_LIBS@\nINIT_LOAD_LIBRARY = @INIT_LOAD_LIBRARY@\nINSTALL = @INSTALL@\nINSTALL_DATA = @INSTALL_DATA@\nINSTALL_PROGRAM = @INSTALL_PROGRAM@\nINSTALL_SCRIPT = @INSTALL_SCRIPT@\nINSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\nJAR = @JAR@\nJAVA = @JAVA@\nJAVAC = @JAVAC@\nJAVAC_IS_GCJ = @JAVAC_IS_GCJ@\nJAVAC_MEM_OPT = @JAVAC_MEM_OPT@\nJAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\nJAY = @JAY@\nJAY_SKELETON = @JAY_SKELETON@\nLD = @LD@\nLDFLAGS = @LDFLAGS@\nLIBDEBUG = @LIBDEBUG@\nLIBICONV = @LIBICONV@\nLIBMAGIC = @LIBMAGIC@\nLIBOBJS = @LIBOBJS@\nLIBS = @LIBS@\nLIBTOOL = @LIBTOOL@\nLIBVERSION = @LIBVERSION@\nLIPO = @LIPO@\nLN_S = @LN_S@\nLTLIBICONV = @LTLIBICONV@\nLTLIBOBJS = @LTLIBOBJS@\nMAINT = @MAINT@\nMAKEINFO = @MAKEINFO@\nMKDIR = @MKDIR@\nMKDIR_P = @MKDIR_P@\nMOC = @MOC@\nMOC4 = @MOC4@\nMOZILLA_CFLAGS = @MOZILLA_CFLAGS@\nMOZILLA_LIBS = @MOZILLA_LIBS@\nNM = @NM@\nNMEDIT = @NMEDIT@\nOBJDUMP = @OBJDUMP@\nOBJEXT = @OBJEXT@\nOTOOL = @OTOOL@\nOTOOL64 = @OTOOL64@\nPACKAGE = @PACKAGE@\nPACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\nPACKAGE_NAME = @PACKAGE_NAME@\nPACKAGE_STRING = @PACKAGE_STRING@\nPACKAGE_TARNAME = @PACKAGE_TARNAME@\nPACKAGE_URL = @PACKAGE_URL@\nPACKAGE_VERSION = @PACKAGE_VERSION@\nPANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\nPANGOFT2_LIBS = @PANGOFT2_LIBS@\nPATH_SEPARATOR = @PATH_SEPARATOR@\nPATH_TO_ESCHER = @PATH_TO_ESCHER@\nPATH_TO_GLIBJ_ZIP = @PATH_TO_GLIBJ_ZIP@\nPERL = @PERL@\nPKG_CONFIG = @PKG_CONFIG@\nPLUGIN_DIR = @PLUGIN_DIR@\nQT_CFLAGS = @QT_CFLAGS@\nQT_LIBS = @QT_LIBS@\nRANLIB = @RANLIB@\nREMOVE = @REMOVE@\nSED = @SED@\nSET_MAKE = @SET_MAKE@\nSHELL = @SHELL@\nSTRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\nSTRIP = @STRIP@\nTOOLSDIR = @TOOLSDIR@\nUSER_JAVAH = @USER_JAVAH@\nVERSION = @VERSION@\nWANT_NATIVE_BIG_INTEGER = @WANT_NATIVE_BIG_INTEGER@\nWARNING_CFLAGS = @WARNING_CFLAGS@\nXMKMF = @XMKMF@\nXML_CFLAGS = @XML_CFLAGS@\nXML_LIBS = @XML_LIBS@\nXSLT_CFLAGS = @XSLT_CFLAGS@\nXSLT_LIBS = @XSLT_LIBS@\nXTEST_LIBS = @XTEST_LIBS@\nX_CFLAGS = @X_CFLAGS@\nX_EXTRA_LIBS = @X_EXTRA_LIBS@\nX_LIBS = @X_LIBS@\nX_PRE_LIBS = @X_PRE_LIBS@\nZIP = @ZIP@\nabs_builddir = @abs_builddir@\nabs_srcdir = @abs_srcdir@\nabs_top_builddir = @abs_top_builddir@\nabs_top_srcdir = @abs_top_srcdir@\nac_ct_ANTLR = @ac_ct_ANTLR@\nac_ct_CC = @ac_ct_CC@\nac_ct_CXX = @ac_ct_CXX@\nac_ct_DUMPBIN = @ac_ct_DUMPBIN@\nam__include = @am__include@\nam__leading_dot = @am__leading_dot@\nam__quote = @am__quote@\nam__tar = @am__tar@\nam__untar = @am__untar@\nbindir = @bindir@\nbuild = @build@\nbuild_alias = @build_alias@\nbuild_cpu = @build_cpu@\nbuild_os = @build_os@\nbuild_vendor = @build_vendor@\nbuilddir = @builddir@\ndatadir = @datadir@\ndatarootdir = @datarootdir@\ndefault_toolkit = @default_toolkit@\ndocdir = @docdir@\ndvidir = @dvidir@\nexec_prefix = @exec_prefix@\nglibjdir = @glibjdir@\nhost = @host@\nhost_alias = @host_alias@\nhost_cpu = @host_cpu@\nhost_os = @host_os@\nhost_vendor = @host_vendor@\nhtmldir = @htmldir@\nincludedir = @includedir@\ninfodir = @infodir@\ninstall_sh = @install_sh@\nlibdir = @libdir@\nlibexecdir = @libexecdir@\nlocaledir = @localedir@\nlocalstatedir = @localstatedir@\nmandir = @mandir@\nmkdir_p = @mkdir_p@\nmulti_basedir = @multi_basedir@\nnativeexeclibdir = @nativeexeclibdir@\noldincludedir = @oldincludedir@\npdfdir = @pdfdir@\nprefix = @prefix@\nprogram_transform_name = @program_transform_name@\npsdir = @psdir@\nsbindir = @sbindir@\nsharedstatedir = @sharedstatedir@\nsrcdir = @srcdir@\nsysconfdir = @sysconfdir@\ntarget = @target@\ntarget_alias = @target_alias@\ntarget_cpu = @target_cpu@\ntarget_os = @target_os@\ntarget_vendor = @target_vendor@\ntoolexeclibdir = @toolexeclibdir@\ntop_build_prefix = @top_build_prefix@\ntop_builddir = @top_builddir@\ntop_srcdir = @top_srcdir@\nuudecode = @uudecode@\nvm_classes = @vm_classes@\nnativeexeclib_LTLIBRARIES = libgjsmdssi.la \nlibgjsmdssi_la_SOURCES = gnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider.c \\\n\t\t\t gnu_javax_sound_midi_dssi_DSSISynthesizer.c \\\n\t\t\t dssi_data.h\n\nlibgjsmdssi_la_LIBADD = $(top_builddir)/native/jni/classpath/jcl.lo -ljack\nlibgjsmdssi_la_LDFLAGS = $(AM_LDFLAGS) -avoid-version\nAM_LDFLAGS = @CLASSPATH_MODULE@\nAM_CPPFLAGS = @CLASSPATH_INCLUDES@ \n# No STRICT_WARNING_CFLAGS here as we use dlsym to load the address of \n# a function,and ISO C prohibits casting void pointers, like those returned\n# by dlsym, to function pointers.\nAM_CFLAGS = @WARNING_CFLAGS@ @ERROR_CFLAGS@ @EXTRA_CFLAGS@\nall: all-am\n\n.SUFFIXES:\n.SUFFIXES: .c .lo .o .obj\n$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)\n\t@for dep in $?; do \\\n\t  case '$(am__configure_deps)' in \\\n\t    *$$dep*) \\\n\t      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \\\n\t        && { if test -f $@; then exit 0; else break; fi; }; \\\n\t      exit 1;; \\\n\t  esac; \\\n\tdone; \\\n\techo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu native/jni/midi-dssi/Makefile'; \\\n\t$(am__cd) $(top_srcdir) && \\\n\t  $(AUTOMAKE) --gnu native/jni/midi-dssi/Makefile\n.PRECIOUS: Makefile\nMakefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n\t@case '$?' in \\\n\t  *config.status*) \\\n\t    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \\\n\t  *) \\\n\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n\t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n\tesac;\n\n$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n\n$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n$(am__aclocal_m4_deps):\ninstall-nativeexeclibLTLIBRARIES: $(nativeexeclib_LTLIBRARIES)\n\t@$(NORMAL_INSTALL)\n\ttest -z \"$(nativeexeclibdir)\" || $(MKDIR_P) \"$(DESTDIR)$(nativeexeclibdir)\"\n\t@list='$(nativeexeclib_LTLIBRARIES)'; test -n \"$(nativeexeclibdir)\" || list=; \\\n\tlist2=; for p in $$list; do \\\n\t  if test -f $$p; then \\\n\t    list2=\"$$list2 $$p\"; \\\n\t  else :; fi; \\\n\tdone; \\\n\ttest -z \"$$list2\" || { \\\n\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(nativeexeclibdir)'\"; \\\n\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 \"$(DESTDIR)$(nativeexeclibdir)\"; \\\n\t}\n\nuninstall-nativeexeclibLTLIBRARIES:\n\t@$(NORMAL_UNINSTALL)\n\t@list='$(nativeexeclib_LTLIBRARIES)'; test -n \"$(nativeexeclibdir)\" || list=; \\\n\tfor p in $$list; do \\\n\t  $(am__strip_dir) \\\n\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(nativeexeclibdir)/$$f'\"; \\\n\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f \"$(DESTDIR)$(nativeexeclibdir)/$$f\"; \\\n\tdone\n\nclean-nativeexeclibLTLIBRARIES:\n\t-test -z \"$(nativeexeclib_LTLIBRARIES)\" || rm -f $(nativeexeclib_LTLIBRARIES)\n\t@list='$(nativeexeclib_LTLIBRARIES)'; for p in $$list; do \\\n\t  dir=\"`echo $$p | sed -e 's|/[^/]*$$||'`\"; \\\n\t  test \"$$dir\" != \"$$p\" || dir=.; \\\n\t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n\t  rm -f \"$${dir}/so_locations\"; \\\n\tdone\nlibgjsmdssi.la: $(libgjsmdssi_la_OBJECTS) $(libgjsmdssi_la_DEPENDENCIES) \n\t$(libgjsmdssi_la_LINK) -rpath $(nativeexeclibdir) $(libgjsmdssi_la_OBJECTS) $(libgjsmdssi_la_LIBADD) $(LIBS)\n\nmostlyclean-compile:\n\t-rm -f *.$(OBJEXT)\n\ndistclean-compile:\n\t-rm -f *.tab.c\n\n@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider.Plo@am__quote@\n@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnu_javax_sound_midi_dssi_DSSISynthesizer.Plo@am__quote@\n\n.c.o:\n@am__fastdepCC_TRUE@\t$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<\n@am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='$<' object='$@' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(COMPILE) -c $<\n\n.c.obj:\n@am__fastdepCC_TRUE@\t$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`\n@am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='$<' object='$@' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(COMPILE) -c `$(CYGPATH_W) '$<'`\n\n.c.lo:\n@am__fastdepCC_TRUE@\t$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<\n@am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='$<' object='$@' libtool=yes @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(LTCOMPILE) -c -o $@ $<\n\nmostlyclean-libtool:\n\t-rm -f *.lo\n\nclean-libtool:\n\t-rm -rf .libs _libs\n\nID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)\n\tlist='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\\n\tunique=`for i in $$list; do \\\n\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n\t  done | \\\n\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\\n\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\\n\tmkid -fID $$unique\ntags: TAGS\n\nTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\\n\t\t$(TAGS_FILES) $(LISP)\n\tset x; \\\n\there=`pwd`; \\\n\tlist='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\\n\tunique=`for i in $$list; do \\\n\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n\t  done | \\\n\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\\n\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\\n\tshift; \\\n\tif test -z \"$(ETAGS_ARGS)$$*$$unique\"; then :; else \\\n\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n\t  if test $$# -gt 0; then \\\n\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n\t      \"$$@\" $$unique; \\\n\t  else \\\n\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n\t      $$unique; \\\n\t  fi; \\\n\tfi\nctags: CTAGS\nCTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\\n\t\t$(TAGS_FILES) $(LISP)\n\tlist='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\\n\tunique=`for i in $$list; do \\\n\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n\t  done | \\\n\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\\n\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\\n\ttest -z \"$(CTAGS_ARGS)$$unique\" \\\n\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n\t     $$unique\n\nGTAGS:\n\there=`$(am__cd) $(top_builddir) && pwd` \\\n\t  && $(am__cd) $(top_srcdir) \\\n\t  && gtags -i $(GTAGS_ARGS) \"$$here\"\n\ndistclean-tags:\n\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\ncheck-am: all-am\ncheck: check-am\nall-am: Makefile $(LTLIBRARIES)\ninstalldirs:\n\tfor dir in \"$(DESTDIR)$(nativeexeclibdir)\"; do \\\n\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n\tdone\ninstall: install-am\ninstall-exec: install-exec-am\ninstall-data: install-data-am\nuninstall: uninstall-am\n\ninstall-am: all-am\n\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n\ninstallcheck: installcheck-am\ninstall-strip:\n\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n\t  `test -z '$(STRIP)' || \\\n\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\nmostlyclean-generic:\n\nclean-generic:\n\ndistclean-generic:\n\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n\t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n\nmaintainer-clean-generic:\n\t@echo \"This command is intended for maintainers to use\"\n\t@echo \"it deletes files that may require special tools to rebuild.\"\nclean: clean-am\n\nclean-am: clean-generic clean-libtool clean-nativeexeclibLTLIBRARIES \\\n\tmostlyclean-am\n\ndistclean: distclean-am\n\t-rm -rf ./$(DEPDIR)\n\t-rm -f Makefile\ndistclean-am: clean-am distclean-compile distclean-generic \\\n\tdistclean-tags\n\ndvi: dvi-am\n\ndvi-am:\n\nhtml: html-am\n\nhtml-am:\n\ninfo: info-am\n\ninfo-am:\n\ninstall-data-am:\n\ninstall-dvi: install-dvi-am\n\ninstall-dvi-am:\n\ninstall-exec-am: install-nativeexeclibLTLIBRARIES\n\ninstall-html: install-html-am\n\ninstall-html-am:\n\ninstall-info: install-info-am\n\ninstall-info-am:\n\ninstall-man:\n\ninstall-pdf: install-pdf-am\n\ninstall-pdf-am:\n\ninstall-ps: install-ps-am\n\ninstall-ps-am:\n\ninstallcheck-am:\n\nmaintainer-clean: maintainer-clean-am\n\t-rm -rf ./$(DEPDIR)\n\t-rm -f Makefile\nmaintainer-clean-am: distclean-am maintainer-clean-generic\n\nmostlyclean: mostlyclean-am\n\nmostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n\tmostlyclean-libtool\n\npdf: pdf-am\n\npdf-am:\n\nps: ps-am\n\nps-am:\n\nuninstall-am: uninstall-nativeexeclibLTLIBRARIES\n\n.MAKE: install-am install-strip\n\n.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \\\n\tclean-libtool clean-nativeexeclibLTLIBRARIES ctags distclean \\\n\tdistclean-compile distclean-generic distclean-libtool \\\n\tdistclean-tags dvi dvi-am html html-am info info-am install \\\n\tinstall-am install-data install-data-am install-dvi \\\n\tinstall-dvi-am install-exec install-exec-am install-html \\\n\tinstall-html-am install-info install-info-am install-man \\\n\tinstall-nativeexeclibLTLIBRARIES install-pdf install-pdf-am \\\n\tinstall-ps install-ps-am install-strip installcheck \\\n\tinstallcheck-am installdirs maintainer-clean \\\n\tmaintainer-clean-generic mostlyclean mostlyclean-compile \\\n\tmostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \\\n\ttags uninstall uninstall-am uninstall-nativeexeclibLTLIBRARIES\n\n\n# Tell versions [3.59,3.63) of GNU make to not export all variables.\n# Otherwise a system limit (for SysV at least) may be exceeded.\n.NOEXPORT:\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/toolwrapper.c": "/* toolwrapper.c -- a native tool wrapper for VMs that support the JNI\n   invocation interface\n   Copyright (C) 2006  Free Software Foundation, Inc.\n\nThis file is part of GNU Classpath.\n\nGNU Classpath is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2, or (at your option)\nany later version.\n\nGNU Classpath is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with GNU Classpath; see the file COPYING.  If not, write to the\nFree Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n02110-1301 USA.\n\nLinking this library statically or dynamically with other modules is\nmaking a combined work based on this library.  Thus, the terms and\nconditions of the GNU General Public License cover the whole\ncombination.\n\nAs a special exception, the copyright holders of this library give you\npermission to link this library with independent modules to produce an\nexecutable, regardless of the license terms of these independent\nmodules, and to copy and distribute the resulting executable under\nterms of your choice, provided that you also meet, for each linked\nindependent module, the terms and conditions of the license of that\nmodule.  An independent module is a module which is not derived from\nor based on this library.  If you modify this library, you may extend\nthis exception to your version of the library, but you are not\nobligated to do so.  If you do not wish to do so, delete this\nexception statement from your version. */\n\n#include <jni.h>\n#include <ltdl.h>\n#include <string.h>\n#include <stdlib.h>\n#include \"config.h\"\n\n#ifndef JNI_VERSION_1_2\n# error JNI version 1.2 or greater required\n#endif\n\n#ifndef MAINCLASS\n#define MAINCLASS \"Main\"\n#endif\n\nunion env_union\n{\n  void *void_env;\n  JNIEnv *jni_env;\n};\n\n/* Typedef for JNI_CreateJavaVM dlopen call. */\ntypedef jint createVM (JavaVM **, void **, void *);\n\nint\nmain (int argc, const char** argv)\n{\n  union env_union tmp;\n  JNIEnv* env;\n  JavaVM* jvm;\n  JavaVMInitArgs vm_args;\n  jint result;\n  jclass class_id;\n  jmethodID method_id;\n  jstring str;\n  jclass string_class_id;\n  jobjectArray args_array;\n  char** non_vm_argv;\n  int non_vm_argc;\n  int i;\n  int classpath_found = 0;\n  /* Variables for JNI_CreateJavaVM dlopen call. */\n  lt_dlhandle libjvm_handle = NULL;\n  createVM* libjvm_create = NULL;\n  int libjvm_error = 0;\n\n  env = NULL;\n  jvm = NULL;\n\n  vm_args.nOptions = 0;\n  vm_args.options = NULL;\n\n  non_vm_argc = 0;\n  non_vm_argv = NULL;\n\n  if (argc > 1)\n    {\n      for (i = 1; i < argc; i++)\n\t{\n\t  if (!strncmp (argv[i], \"-J\", 2))\n\t    {\n\t      if (!strncmp (argv[i], \"-J-Djava.class.path=\", 20))\n\t\tclasspath_found = 1;\n\n\t      /* A virtual machine option. */\n\t      vm_args.options = (JavaVMOption*) realloc (vm_args.options, (vm_args.nOptions + 1) * sizeof (JavaVMOption));\n\n\t      if (vm_args.options == NULL)\n\t\t{\n\t\t  fprintf (stderr, TOOLNAME \": realloc failed.\\n\");\n\t\t  goto destroy;\n\t\t}\n\n\t      if (strlen (argv[i]) == 2)\n\t\t{\n\t\t  fprintf (stderr, TOOLNAME \": the -J option must not be followed by a space.\\n\");\n\t\t  goto destroy;\n\t\t}\n\t      else\n\t\tvm_args.options[vm_args.nOptions++].optionString = strdup (argv[i] + 2);\n\t    }\n\t  else\n\t    {\n\t      non_vm_argv = (char**) realloc (non_vm_argv, (non_vm_argc + 1) * sizeof (char*));\n\t      if (non_vm_argv == NULL)\n\t\t{\n\t\t  fprintf (stderr, TOOLNAME \": realloc failed.\\n\");\n\t\t  goto destroy;\n\t\t}\n\t      non_vm_argv[non_vm_argc++] = strdup (argv[i]);\n\t    }\n\t}\n    }\n\n  if (!classpath_found)\n    {\n      /* Set the invocation classpath. */\n      vm_args.options = (JavaVMOption*) realloc (vm_args.options, (vm_args.nOptions + 1) * sizeof (JavaVMOption));\n\n      if (vm_args.options == NULL)\n\t{\n\t  fprintf (stderr, TOOLNAME \": realloc failed.\\n\");\n\t  goto destroy;\n\t}\n\n      vm_args.options[vm_args.nOptions++].optionString = \"-Xbootclasspath/p:\" TOOLS_ZIP;\n    }\n\n  /* Terminate vm_args.options with a NULL element. */\n  vm_args.options = (JavaVMOption*) realloc (vm_args.options, (vm_args.nOptions + 1) * sizeof (JavaVMOption));\n  if (vm_args.options == NULL)\n    {\n      fprintf (stderr, TOOLNAME \": realloc failed.\\n\");\n      goto destroy;\n    }\n  vm_args.options[vm_args.nOptions].optionString = NULL;\n\n  /* Terminate non_vm_argv with a NULL element. */\n  non_vm_argv = (char**) realloc (non_vm_argv, (non_vm_argc + 1) * sizeof (char*));\n  if (non_vm_argv == NULL)\n    {\n      fprintf (stderr, TOOLNAME \": realloc failed.\\n\");\n      goto destroy;\n    }\n  non_vm_argv[non_vm_argc] = NULL;\n\n  vm_args.version = JNI_VERSION_1_2;\n  vm_args.ignoreUnrecognized = JNI_TRUE;\n\n  /* dlopen libjvm.so */\n  libjvm_error = lt_dlinit ();\n  if (libjvm_error)\n    {\n      fprintf (stderr, TOOLNAME \": lt_dlinit failed.\\n\");\n      goto destroy;\n    }\n\n  libjvm_handle = lt_dlopenext (LIBJVM);\n  if (!libjvm_handle)\n    {\n      fprintf (stderr, TOOLNAME \": failed to open \" LIBJVM \"\\n\");\n      goto destroy;\n    }\n  libjvm_create = (createVM*) lt_dlsym (libjvm_handle, \"JNI_CreateJavaVM\");\n  if (!libjvm_create)\n    {\n      fprintf (stderr, TOOLNAME \": failed to load JNI_CreateJavaVM symbol from \" LIBJVM \"\\n\");\n      goto destroy;\n    }\n  result = (*libjvm_create) (&jvm, &tmp.void_env, &vm_args);\n\n  if (result < 0)\n    {\n      fprintf (stderr, TOOLNAME \": couldn't create virtual machine\\n\");\n      goto destroy;\n    }\n\n  env = tmp.jni_env;\n\n  string_class_id = (*env)->FindClass (env, \"java/lang/String\");\n  if (string_class_id == NULL)\n    {\n      fprintf (stderr, TOOLNAME \": FindClass failed.\\n\");\n      goto destroy;\n    }\n\n  args_array = (*env)->NewObjectArray (env, non_vm_argc, string_class_id, NULL);\n  if (args_array == NULL)\n    {\n      fprintf (stderr, TOOLNAME \": NewObjectArray failed.\\n\");\n      goto destroy;\n    }\n\n  for (i = 0; i < non_vm_argc; i++)\n    {\n      str = (*env)->NewStringUTF (env, non_vm_argv[i]);\n      if (str == NULL)\n\t{\n\t  fprintf (stderr, TOOLNAME \": NewStringUTF failed.\\n\");\n\t  goto destroy;\n\t}\n\n      (*env)->SetObjectArrayElement (env, args_array, i, str);\n    }\n\n  class_id\n    = (*env)->FindClass (env,\n\t\t\t \"gnu/classpath/tools/\" TOOLPACKAGE \"/\" MAINCLASS);\n  if (class_id == NULL)\n    {\n      fprintf (stderr, TOOLNAME \": FindClass failed.\\n\");\n      goto destroy;\n    }\n\n  method_id = (*env)->GetStaticMethodID (env, class_id, \"main\", \"([Ljava/lang/String;)V\");\n\n  if (method_id == NULL)\n    {\n      fprintf (stderr, TOOLNAME \": GetStaticMethodID failed.\\n\");\n      goto destroy;\n    }\n\n  (*env)->CallStaticVoidMethod (env, class_id, method_id, args_array);\n\n destroy:\n\n  if (env != NULL)\n    {\n      if ((*env)->ExceptionOccurred (env))\n\t(*env)->ExceptionDescribe (env);\n\n      if (jvm != NULL)\n\t(*jvm)->DestroyJavaVM (jvm);\n    }\n\n  /* libltdl cleanup */\n  if (libjvm_handle)\n    {\n      if (lt_dlclose (libjvm_handle) != 0)\n        fprintf (stderr, TOOLNAME \": failed to close \" LIBJVM \"\\n\");\n    }\n\n  if (lt_dlexit () != 0)\n    fprintf (stderr, TOOLNAME \": lt_dlexit failed.\\n\");\n\n  return 1;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/libltdl/ltdl.h": "/* ltdl.h -- generic dlopen functions\n   Copyright (C) 1998-2000 Free Software Foundation, Inc.\n   Originally by Thomas Tanner <tanner@ffii.org>\n   This file is part of GNU Libtool.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU libtool, you may include it under the same\ndistribution terms that you use for the rest of that program.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, write to the Free\nSoftware Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n02110-1301  USA\n*/\n\n/* Only include this header file once. */\n#ifndef LTDL_H\n#define LTDL_H 1\n\n#include <sys/types.h>\t\t/* for size_t declaration */\n\n\f\n/* --- MACROS FOR PORTABILITY --- */\n\n\n/* Saves on those hard to debug '\\0' typos....  */\n#define LT_EOS_CHAR\t'\\0'\n\n/* LTDL_BEGIN_C_DECLS should be used at the beginning of your declarations,\n   so that C++ compilers don't mangle their names.  Use LTDL_END_C_DECLS at\n   the end of C declarations. */\n#ifdef __cplusplus\n# define LT_BEGIN_C_DECLS\textern \"C\" {\n# define LT_END_C_DECLS\t\t}\n#else\n# define LT_BEGIN_C_DECLS\t/* empty */\n# define LT_END_C_DECLS\t\t/* empty */\n#endif\n\nLT_BEGIN_C_DECLS\n\n\n/* LT_PARAMS is a macro used to wrap function prototypes, so that compilers\n   that don't understand ANSI C prototypes still work, and ANSI C\n   compilers can issue warnings about type mismatches.  */\n#if defined (__STDC__) || defined (_AIX) || (defined (__mips) && defined (_SYSTYPE_SVR4)) || defined(WIN32) || defined(__cplusplus)\n# define LT_PARAMS(protos)\tprotos\n# define lt_ptr\t\tvoid*\n#else\n# define LT_PARAMS(protos)\t()\n# define lt_ptr\t\tchar*\n#endif\n\n/* LT_STMT_START/END are used to create macros which expand to a\n   a single compound statement in a portable way.  */\n#if defined (__GNUC__) && !defined (__STRICT_ANSI__) && !defined (__cplusplus)\n#  define LT_STMT_START        (void)(\n#  define LT_STMT_END          )\n#else\n#  if (defined (sun) || defined (__sun__))\n#    define LT_STMT_START      if (1)\n#    define LT_STMT_END        else (void)0\n#  else\n#    define LT_STMT_START      do\n#    define LT_STMT_END        while (0)\n#  endif\n#endif\n\n/* LT_CONC creates a new concatenated symbol for the compiler\n   in a portable way.  */\n#if defined(__STDC__) || defined(__cplusplus) || defined(_MSC_VER)\n#  define LT_CONC(s,t)\ts##t\n#else\n#  define LT_CONC(s,t)\ts/**/t\n#endif\n\n/* LT_STRLEN can be used safely on NULL pointers.  */\n#define LT_STRLEN(s)\t(((s) && (s)[0]) ? strlen (s) : 0)\n\n\n\f\n/* --- WINDOWS SUPPORT --- */\n\n\n/* Canonicalise Windows and Cygwin recognition macros.  */\n#ifdef __CYGWIN32__\n#  ifndef __CYGWIN__\n#    define __CYGWIN__ __CYGWIN32__\n#  endif\n#endif\n#if defined(_WIN32) || defined(WIN32)\n#  ifndef __WINDOWS__\n#    ifdef _WIN32\n#      define __WINDOWS__ _WIN32\n#    else\n#      ifdef WIN32\n#        define __WINDOWS__ WIN32\n#      endif\n#    endif\n#  endif\n#endif\n\n\n#ifdef __WINDOWS__\n#  ifndef __CYGWIN__\n/* LT_DIRSEP_CHAR is accepted *in addition* to '/' as a directory\n   separator when it is set. */\n#    define LT_DIRSEP_CHAR\t'\\\\'\n#    define LT_PATHSEP_CHAR\t';'\n#  endif\n#endif\n#ifndef LT_PATHSEP_CHAR\n#  define LT_PATHSEP_CHAR\t':'\n#endif\n\n/* DLL building support on win32 hosts;  mostly to workaround their\n   ridiculous implementation of data symbol exporting. */\n#ifndef LT_SCOPE\n#  ifdef __WINDOWS__\n#    ifdef LIBLTDL_DLL_EXPORT\t/* don't define or ld disables auto-export. */\n#      define LT_SCOPE\t__declspec(dllexport)\n#    endif\n#    ifdef LIBLTDL_DLL_IMPORT\t/* define if linking with this dll */\n#      define LT_SCOPE\textern __declspec(dllimport)\n#    endif\n#  endif\n#  ifndef LT_SCOPE\t\t/* static linking or !__WINDOWS__ */\n#    define LT_SCOPE\textern\n#  endif\n#endif\n\n\n#if defined(_MSC_VER) /* Visual Studio */\n#  define R_OK 4\n#endif\n\n\n\f\n/* --- DYNAMIC MODULE LOADING API --- */\n\n\ntypedef\tstruct lt_dlhandle_struct *lt_dlhandle;\t/* A loaded module.  */\n\n/* Initialisation and finalisation functions for libltdl. */\nLT_SCOPE\tint\t    lt_dlinit\t\tLT_PARAMS((void));\nLT_SCOPE\tint\t    lt_dlexit\t\tLT_PARAMS((void));\n\n/* Module search path manipulation.  */\nLT_SCOPE\tint\t    lt_dladdsearchdir\t LT_PARAMS((const char *search_dir));\nLT_SCOPE\tint\t    lt_dlinsertsearchdir LT_PARAMS((const char *before,\n\t\t\t\t\t\t    const char *search_dir));\nLT_SCOPE\tint \t    lt_dlsetsearchpath\t LT_PARAMS((const char *search_path));\nLT_SCOPE\tconst char *lt_dlgetsearchpath\t LT_PARAMS((void));\nLT_SCOPE\tint\t    lt_dlforeachfile\t LT_PARAMS((\n\t\t\tconst char *search_path,\n\t\t\tint (*func) (const char *filename, lt_ptr data),\n\t\t\tlt_ptr data));\n\n/* Portable libltdl versions of the system dlopen() API. */\nLT_SCOPE\tlt_dlhandle lt_dlopen\t\tLT_PARAMS((const char *filename));\nLT_SCOPE\tlt_dlhandle lt_dlopenext\tLT_PARAMS((const char *filename));\nLT_SCOPE\tlt_ptr\t    lt_dlsym\t\tLT_PARAMS((lt_dlhandle handle,\n\t\t\t\t\t\t     const char *name));\nLT_SCOPE\tconst char *lt_dlerror\t\tLT_PARAMS((void));\nLT_SCOPE\tint\t    lt_dlclose\t\tLT_PARAMS((lt_dlhandle handle));\n\n/* Module residency management. */\nLT_SCOPE\tint\t    lt_dlmakeresident\tLT_PARAMS((lt_dlhandle handle));\nLT_SCOPE\tint\t    lt_dlisresident\tLT_PARAMS((lt_dlhandle handle));\n\n\n\n\f\n/* --- MUTEX LOCKING --- */\n\n\ntypedef void\tlt_dlmutex_lock\t\tLT_PARAMS((void));\ntypedef void\tlt_dlmutex_unlock\tLT_PARAMS((void));\ntypedef void\tlt_dlmutex_seterror\tLT_PARAMS((const char *errmsg));\ntypedef const char *lt_dlmutex_geterror\tLT_PARAMS((void));\n\nLT_SCOPE\tint\tlt_dlmutex_register\tLT_PARAMS((lt_dlmutex_lock *lock,\n\t\t\t\t\t    lt_dlmutex_unlock *unlock,\n\t\t\t\t\t    lt_dlmutex_seterror *seterror,\n\t\t\t\t\t    lt_dlmutex_geterror *geterror));\n\n\n\n\f\n/* --- MEMORY HANDLING --- */\n\n\n/* By default, the realloc function pointer is set to our internal\n   realloc implementation which iself uses lt_dlmalloc and lt_dlfree.\n   libltdl relies on a featureful realloc, but if you are sure yours\n   has the right semantics then you can assign it directly.  Generally,\n   it is safe to assign just a malloc() and a free() function.  */\nLT_SCOPE  lt_ptr   (*lt_dlmalloc)\tLT_PARAMS((size_t size));\nLT_SCOPE  lt_ptr   (*lt_dlrealloc)\tLT_PARAMS((lt_ptr ptr, size_t size));\nLT_SCOPE  void\t   (*lt_dlfree)\t\tLT_PARAMS((lt_ptr ptr));\n\n\n\n\f\n/* --- PRELOADED MODULE SUPPORT --- */\n\n\n/* A preopened symbol. Arrays of this type comprise the exported\n   symbols for a dlpreopened module. */\ntypedef struct {\n  const char *name;\n  lt_ptr      address;\n} lt_dlsymlist;\n\nLT_SCOPE\tint\tlt_dlpreload\tLT_PARAMS((const lt_dlsymlist *preloaded));\nLT_SCOPE\tint\tlt_dlpreload_default\n\t\t\t\tLT_PARAMS((const lt_dlsymlist *preloaded));\n\n#define LTDL_SET_PRELOADED_SYMBOLS() \t\tLT_STMT_START{\t\\\n\textern const lt_dlsymlist lt_preloaded_symbols[];\t\t\\\n\tlt_dlpreload_default(lt_preloaded_symbols);\t\t\t\\\n\t\t\t\t\t\t}LT_STMT_END\n\n\n\n\f\n/* --- MODULE INFORMATION --- */\n\n\n/* Read only information pertaining to a loaded module. */\ntypedef\tstruct {\n  char\t*filename;\t\t/* file name */\n  char\t*name;\t\t\t/* module name */\n  int\tref_count;\t\t/* number of times lt_dlopened minus\n\t\t\t\t   number of times lt_dlclosed. */\n} lt_dlinfo;\n\nLT_SCOPE\tconst lt_dlinfo\t*lt_dlgetinfo\t    LT_PARAMS((lt_dlhandle handle));\nLT_SCOPE\tlt_dlhandle\tlt_dlhandle_next    LT_PARAMS((lt_dlhandle place));\nLT_SCOPE\tint\t\tlt_dlforeach\t    LT_PARAMS((\n\t\t\t\tint (*func) (lt_dlhandle handle, lt_ptr data),\n\t\t\t\tlt_ptr data));\n\n/* Associating user data with loaded modules. */\ntypedef unsigned lt_dlcaller_id;\n\nLT_SCOPE\tlt_dlcaller_id\tlt_dlcaller_register  LT_PARAMS((void));\nLT_SCOPE\tlt_ptr\t\tlt_dlcaller_set_data  LT_PARAMS((lt_dlcaller_id key,\n\t\t\t\t\t\tlt_dlhandle handle,\n\t\t\t\t\t\tlt_ptr data));\nLT_SCOPE\tlt_ptr\t\tlt_dlcaller_get_data  LT_PARAMS((lt_dlcaller_id key,\n\t\t\t\t\t\tlt_dlhandle handle));\n\n\n\f\n/* --- USER MODULE LOADER API --- */\n\n\ntypedef\tstruct lt_dlloader\tlt_dlloader;\ntypedef lt_ptr\t\t\tlt_user_data;\ntypedef lt_ptr\t\t\tlt_module;\n\n/* Function pointer types for creating user defined module loaders. */\ntypedef lt_module   lt_module_open\tLT_PARAMS((lt_user_data loader_data,\n\t\t\t\t\t    const char *filename));\ntypedef int\t    lt_module_close\tLT_PARAMS((lt_user_data loader_data,\n\t\t\t\t\t    lt_module handle));\ntypedef lt_ptr\t    lt_find_sym\t\tLT_PARAMS((lt_user_data loader_data,\n\t\t\t\t\t    lt_module handle,\n\t\t\t\t\t    const char *symbol));\ntypedef int\t    lt_dlloader_exit\tLT_PARAMS((lt_user_data loader_data));\n\nstruct lt_user_dlloader {\n  const char\t       *sym_prefix;\n  lt_module_open       *module_open;\n  lt_module_close      *module_close;\n  lt_find_sym\t       *find_sym;\n  lt_dlloader_exit     *dlloader_exit;\n  lt_user_data\t\tdlloader_data;\n};\n\nLT_SCOPE\tlt_dlloader    *lt_dlloader_next    LT_PARAMS((lt_dlloader *place));\nLT_SCOPE\tlt_dlloader    *lt_dlloader_find    LT_PARAMS((\n\t\t\t\t\t\tconst char *loader_name));\nLT_SCOPE\tconst char     *lt_dlloader_name    LT_PARAMS((lt_dlloader *place));\nLT_SCOPE\tlt_user_data   *lt_dlloader_data    LT_PARAMS((lt_dlloader *place));\nLT_SCOPE\tint\t\tlt_dlloader_add     LT_PARAMS((lt_dlloader *place,\n\t\t\t\tconst struct lt_user_dlloader *dlloader,\n\t\t\t\tconst char *loader_name));\nLT_SCOPE\tint\t\tlt_dlloader_remove  LT_PARAMS((\n\t\t\t\t\t\tconst char *loader_name));\n\n\n\f\n/* --- ERROR MESSAGE HANDLING --- */\n\n\n/* Defining error strings alongside their symbolic names in a macro in\n   this way allows us to expand the macro in different contexts with\n   confidence that the enumeration of symbolic names will map correctly\n   onto the table of error strings.  */\n#define lt_dlerror_table\t\t\t\t\t\t\\\n    LT_ERROR(UNKNOWN,\t\t    \"unknown error\")\t\t\t\\\n    LT_ERROR(DLOPEN_NOT_SUPPORTED,  \"dlopen support not available\")\t\\\n    LT_ERROR(INVALID_LOADER,\t    \"invalid loader\")\t\t\t\\\n    LT_ERROR(INIT_LOADER,\t    \"loader initialization failed\")\t\\\n    LT_ERROR(REMOVE_LOADER,\t    \"loader removal failed\")\t\t\\\n    LT_ERROR(FILE_NOT_FOUND,\t    \"file not found\")\t\t\t\\\n    LT_ERROR(DEPLIB_NOT_FOUND,      \"dependency library not found\")\t\\\n    LT_ERROR(NO_SYMBOLS,\t    \"no symbols defined\")\t\t\\\n    LT_ERROR(CANNOT_OPEN,\t    \"can't open the module\")\t\t\\\n    LT_ERROR(CANNOT_CLOSE,\t    \"can't close the module\")\t\t\\\n    LT_ERROR(SYMBOL_NOT_FOUND,      \"symbol not found\")\t\t\t\\\n    LT_ERROR(NO_MEMORY,\t\t    \"not enough memory\")\t\t\\\n    LT_ERROR(INVALID_HANDLE,\t    \"invalid module handle\")\t\t\\\n    LT_ERROR(BUFFER_OVERFLOW,\t    \"internal buffer overflow\")\t\t\\\n    LT_ERROR(INVALID_ERRORCODE,     \"invalid errorcode\")\t\t\\\n    LT_ERROR(SHUTDOWN,\t\t    \"library already shutdown\")\t\t\\\n    LT_ERROR(CLOSE_RESIDENT_MODULE, \"can't close resident module\")\t\\\n    LT_ERROR(INVALID_MUTEX_ARGS,    \"invalid mutex handler registration\") \\\n    LT_ERROR(INVALID_POSITION,\t    \"invalid search path insert position\")\n\n/* Enumerate the symbolic error names. */\nenum {\n#define LT_ERROR(name, diagnostic)\tLT_CONC(LT_ERROR_, name),\n\tlt_dlerror_table\n#undef LT_ERROR\n\n\tLT_ERROR_MAX\n};\n\n/* These functions are only useful from inside custom module loaders. */\nLT_SCOPE\tint\tlt_dladderror\tLT_PARAMS((const char *diagnostic));\nLT_SCOPE\tint\tlt_dlseterror\tLT_PARAMS((int errorcode));\n\n\n\n\f\n/* --- SOURCE COMPATIBILITY WITH OLD LIBLTDL --- */\n\n\n#ifdef LT_NON_POSIX_NAMESPACE\n#  define lt_ptr_t\t\tlt_ptr\n#  define lt_module_t\t\tlt_module\n#  define lt_module_open_t\tlt_module_open\n#  define lt_module_close_t\tlt_module_close\n#  define lt_find_sym_t\t\tlt_find_sym\n#  define lt_dlloader_exit_t\tlt_dlloader_exit\n#  define lt_dlloader_t\t\tlt_dlloader\n#  define lt_dlloader_data_t\tlt_user_data\n#endif\n\nLT_END_C_DECLS\n\n#endif /* !LTDL_H */\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/libltdl/acinclude.m4": "# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-\n## Copyright 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005\n## Free Software Foundation, Inc.\n## Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n##\n## This file is free software; the Free Software Foundation gives\n## unlimited permission to copy and/or distribute it, with or without\n## modifications, as long as this notice is preserved.\n\n# serial 47 AC_PROG_LIBTOOL\n\n\n# AC_PROVIDE_IFELSE(MACRO-NAME, IF-PROVIDED, IF-NOT-PROVIDED)\n# -----------------------------------------------------------\n# If this macro is not defined by Autoconf, define it here.\nm4_ifdef([AC_PROVIDE_IFELSE],\n         [],\n         [m4_define([AC_PROVIDE_IFELSE],\n\t         [m4_ifdef([AC_PROVIDE_$1],\n\t\t           [$2], [$3])])])\n\n\n# AC_PROG_LIBTOOL\n# ---------------\nAC_DEFUN([AC_PROG_LIBTOOL],\n[AC_REQUIRE([_AC_PROG_LIBTOOL])dnl\ndnl If AC_PROG_CXX has already been expanded, run AC_LIBTOOL_CXX\ndnl immediately, otherwise, hook it in at the end of AC_PROG_CXX.\n  AC_PROVIDE_IFELSE([AC_PROG_CXX],\n    [AC_LIBTOOL_CXX],\n    [define([AC_PROG_CXX], defn([AC_PROG_CXX])[AC_LIBTOOL_CXX\n  ])])\ndnl And a similar setup for Fortran 77 support\n  AC_PROVIDE_IFELSE([AC_PROG_F77],\n    [AC_LIBTOOL_F77],\n    [define([AC_PROG_F77], defn([AC_PROG_F77])[AC_LIBTOOL_F77\n])])\n\ndnl Quote A][M_PROG_GCJ so that aclocal doesn't bring it in needlessly.\ndnl If either AC_PROG_GCJ or A][M_PROG_GCJ have already been expanded, run\ndnl AC_LIBTOOL_GCJ immediately, otherwise, hook it in at the end of both.\n  AC_PROVIDE_IFELSE([AC_PROG_GCJ],\n    [AC_LIBTOOL_GCJ],\n    [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],\n      [AC_LIBTOOL_GCJ],\n      [AC_PROVIDE_IFELSE([LT_AC_PROG_GCJ],\n\t[AC_LIBTOOL_GCJ],\n      [ifdef([AC_PROG_GCJ],\n\t     [define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[AC_LIBTOOL_GCJ])])\n       ifdef([A][M_PROG_GCJ],\n\t     [define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[AC_LIBTOOL_GCJ])])\n       ifdef([LT_AC_PROG_GCJ],\n\t     [define([LT_AC_PROG_GCJ],\n\t\tdefn([LT_AC_PROG_GCJ])[AC_LIBTOOL_GCJ])])])])\n])])# AC_PROG_LIBTOOL\n\n\n# _AC_PROG_LIBTOOL\n# ----------------\nAC_DEFUN([_AC_PROG_LIBTOOL],\n[AC_REQUIRE([AC_LIBTOOL_SETUP])dnl\nAC_BEFORE([$0],[AC_LIBTOOL_CXX])dnl\nAC_BEFORE([$0],[AC_LIBTOOL_F77])dnl\nAC_BEFORE([$0],[AC_LIBTOOL_GCJ])dnl\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=\"$ac_aux_dir/ltmain.sh\"\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\nAC_SUBST(LIBTOOL)dnl\n\n# Prevent multiple expansion\ndefine([AC_PROG_LIBTOOL], [])\n])# _AC_PROG_LIBTOOL\n\n\n# AC_LIBTOOL_SETUP\n# ----------------\nAC_DEFUN([AC_LIBTOOL_SETUP],\n[AC_PREREQ(2.50)dnl\nAC_REQUIRE([AC_ENABLE_SHARED])dnl\nAC_REQUIRE([AC_ENABLE_STATIC])dnl\nAC_REQUIRE([AC_ENABLE_FAST_INSTALL])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_PROG_LD])dnl\nAC_REQUIRE([AC_PROG_LD_RELOAD_FLAG])dnl\nAC_REQUIRE([AC_PROG_NM])dnl\n\nAC_REQUIRE([AC_PROG_LN_S])dnl\nAC_REQUIRE([AC_DEPLIBS_CHECK_METHOD])dnl\n# Autoconf 2.13's AC_OBJEXT and AC_EXEEXT macros only works for C compilers!\nAC_REQUIRE([AC_OBJEXT])dnl\nAC_REQUIRE([AC_EXEEXT])dnl\ndnl\n\nAC_LIBTOOL_SYS_MAX_CMD_LEN\nAC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE\nAC_LIBTOOL_OBJDIR\n\nAC_REQUIRE([_LT_AC_SYS_COMPILER])dnl\n_LT_AC_PROG_ECHO_BACKSLASH\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test \"X${COLLECT_NAMES+set}\" != Xset; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed='sed -e 1s/^X//'\n[sed_quote_subst='s/\\([\\\\\"\\\\`$\\\\\\\\]\\)/\\\\\\1/g']\n\n# Same as above, but do not quote variable references.\n[double_quote_subst='s/\\([\\\\\"\\\\`\\\\\\\\]\\)/\\\\\\1/g']\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n\n# Constants:\nrm=\"rm -f\"\n\n# Global variables:\ndefault_ofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a `.a' archive for static linking (except M$VC,\n# which needs '.lib').\nlibext=a\nltmain=\"$ac_aux_dir/ltmain.sh\"\nofile=\"$default_ofile\"\nwith_gnu_ld=\"$lt_cv_prog_gnu_ld\"\n\nAC_CHECK_TOOL(AR, ar, false)\nAC_CHECK_TOOL(RANLIB, ranlib, :)\nAC_CHECK_TOOL(STRIP, strip, :)\n\nold_CC=\"$CC\"\nold_CFLAGS=\"$CFLAGS\"\n\n# Set sane defaults for various variables\ntest -z \"$AR\" && AR=ar\ntest -z \"$AR_FLAGS\" && AR_FLAGS=cru\ntest -z \"$AS\" && AS=as\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\ntest -z \"$LD\" && LD=ld\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ntest -z \"$NM\" && NM=nm\ntest -z \"$SED\" && SED=sed\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\ntest -z \"$RANLIB\" && RANLIB=:\ntest -z \"$STRIP\" && STRIP=:\ntest -z \"$ac_objext\" && ac_objext=o\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  openbsd*)\n    old_postinstall_cmds=\"\\$RANLIB -t \\$oldlib~$old_postinstall_cmds\"\n    ;;\n  *)\n    old_postinstall_cmds=\"\\$RANLIB \\$oldlib~$old_postinstall_cmds\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$oldlib\"\nfi\n\n_LT_CC_BASENAME([$compiler])\n\n# Only perform the check for file, if the check method requires it\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    AC_PATH_MAGIC\n  fi\n  ;;\nesac\n\nAC_PROVIDE_IFELSE([AC_LIBTOOL_DLOPEN], enable_dlopen=yes, enable_dlopen=no)\nAC_PROVIDE_IFELSE([AC_LIBTOOL_WIN32_DLL],\nenable_win32_dll=yes, enable_win32_dll=no)\n\nAC_ARG_ENABLE([libtool-lock],\n    [AC_HELP_STRING([--disable-libtool-lock],\n\t[avoid locking (might break parallel builds)])])\ntest \"x$enable_libtool_lock\" != xno && enable_libtool_lock=yes\n\nAC_ARG_WITH([pic],\n    [AC_HELP_STRING([--with-pic],\n\t[try to use only PIC/non-PIC objects @<:@default=use both@:>@])],\n    [pic_mode=\"$withval\"],\n    [pic_mode=default])\ntest -z \"$pic_mode\" && pic_mode=default\n\n# Use C for the default configuration in the libtool script\ntagname=\nAC_LIBTOOL_LANG_C_CONFIG\n_LT_AC_TAGCONFIG\n])# AC_LIBTOOL_SETUP\n\n\n# _LT_AC_SYS_COMPILER\n# -------------------\nAC_DEFUN([_LT_AC_SYS_COMPILER],\n[AC_REQUIRE([AC_PROG_CC])dnl\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n])# _LT_AC_SYS_COMPILER\n\n\n# _LT_CC_BASENAME(CC)\n# -------------------\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nAC_DEFUN([_LT_CC_BASENAME],\n[for cc_temp in $1\"\"; do\n  case $cc_temp in\n    compile | *[[\\\\/]]compile | ccache | *[[\\\\/]]ccache ) ;;\n    distcc | *[[\\\\/]]distcc | purify | *[[\\\\/]]purify ) ;;\n    \\-*) ;;\n    *) break;;\n  esac\ndone\ncc_basename=`$echo \"X$cc_temp\" | $Xsed -e 's%.*/%%' -e \"s%^$host_alias-%%\"`\n])\n\n\n# _LT_COMPILER_BOILERPLATE\n# ------------------------\n# Check for compiler boilerplate output or warnings with\n# the simple compiler test code.\nAC_DEFUN([_LT_COMPILER_BOILERPLATE],\n[ac_outfile=conftest.$ac_objext\nprintf \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$rm conftest*\n])# _LT_COMPILER_BOILERPLATE\n\n\n# _LT_LINKER_BOILERPLATE\n# ----------------------\n# Check for linker boilerplate output or warnings with\n# the simple link test code.\nAC_DEFUN([_LT_LINKER_BOILERPLATE],\n[ac_outfile=conftest.$ac_objext\nprintf \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$rm conftest*\n])# _LT_LINKER_BOILERPLATE\n\n\n# _LT_AC_SYS_LIBPATH_AIX\n# ----------------------\n# Links a minimal program and checks the executable\n# for the system default hardcoded library path. In most cases,\n# this is /usr/lib:/lib, but when the MPI compilers are used\n# the location of the communication and MPI libs are included too.\n# If we don't find anything, use the default library path according\n# to the aix ld manual.\nAC_DEFUN([_LT_AC_SYS_LIBPATH_AIX],\n[AC_LINK_IFELSE(AC_LANG_PROGRAM,[\naix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\\(.*\\)$/\\1/; p; }\n}'`\n# Check for a 64-bit object if we didn't find anything.\nif test -z \"$aix_libpath\"; then aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\\(.*\\)$/\\1/; p; }\n}'`; fi],[])\nif test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n])# _LT_AC_SYS_LIBPATH_AIX\n\n\n# _LT_AC_SHELL_INIT(ARG)\n# ----------------------\nAC_DEFUN([_LT_AC_SHELL_INIT],\n[ifdef([AC_DIVERSION_NOTICE],\n\t     [AC_DIVERT_PUSH(AC_DIVERSION_NOTICE)],\n\t [AC_DIVERT_PUSH(NOTICE)])\n$1\nAC_DIVERT_POP\n])# _LT_AC_SHELL_INIT\n\n\n# _LT_AC_PROG_ECHO_BACKSLASH\n# --------------------------\n# Add some code to the start of the generated configure script which\n# will find an echo command which doesn't interpret backslashes.\nAC_DEFUN([_LT_AC_PROG_ECHO_BACKSLASH],\n[_LT_AC_SHELL_INIT([\n# Check that we are running under the correct shell.\nSHELL=${CONFIG_SHELL-/bin/sh}\n\ncase X$ECHO in\nX*--fallback-echo)\n  # Remove one level of quotation (which was required for Make).\n  ECHO=`echo \"$ECHO\" | sed 's,\\\\\\\\\\[$]\\\\[$]0,'[$]0','`\n  ;;\nesac\n\necho=${ECHO-echo}\nif test \"X[$]1\" = X--no-reexec; then\n  # Discard the --no-reexec flag, and continue.\n  shift\nelif test \"X[$]1\" = X--fallback-echo; then\n  # Avoid inline document here, it may be left over\n  :\nelif test \"X`($echo '\\t') 2>/dev/null`\" = 'X\\t' ; then\n  # Yippee, $echo works!\n  :\nelse\n  # Restart under the correct shell.\n  exec $SHELL \"[$]0\" --no-reexec ${1+\"[$]@\"}\nfi\n\nif test \"X[$]1\" = X--fallback-echo; then\n  # used as fallback echo\n  shift\n  cat <<EOF\n[$]*\nEOF\n  exit 0\nfi\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nif test -z \"$ECHO\"; then\nif test \"X${echo_test_string+set}\" != Xset; then\n# find a string as large as possible, as long as the shell can cope with it\n  for cmd in 'sed 50q \"[$]0\"' 'sed 20q \"[$]0\"' 'sed 10q \"[$]0\"' 'sed 2q \"[$]0\"' 'echo test'; do\n    # expected sizes: less than 2Kb, 1Kb, 512 bytes, 16 bytes, ...\n    if (echo_test_string=\"`eval $cmd`\") 2>/dev/null &&\n       echo_test_string=\"`eval $cmd`\" &&\n       (test \"X$echo_test_string\" = \"X$echo_test_string\") 2>/dev/null\n    then\n      break\n    fi\n  done\nfi\n\nif test \"X`($echo '\\t') 2>/dev/null`\" = 'X\\t' &&\n   echo_testing_string=`($echo \"$echo_test_string\") 2>/dev/null` &&\n   test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n  :\nelse\n  # The Solaris, AIX, and Digital Unix default echo programs unquote\n  # backslashes.  This makes it impossible to quote backslashes using\n  #   echo \"$something\" | sed 's/\\\\/\\\\\\\\/g'\n  #\n  # So, first we look for a working echo in the user's PATH.\n\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n  for dir in $PATH /usr/ucb; do\n    IFS=\"$lt_save_ifs\"\n    if (test -f $dir/echo || test -f $dir/echo$ac_exeext) &&\n       test \"X`($dir/echo '\\t') 2>/dev/null`\" = 'X\\t' &&\n       echo_testing_string=`($dir/echo \"$echo_test_string\") 2>/dev/null` &&\n       test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n      echo=\"$dir/echo\"\n      break\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\n\n  if test \"X$echo\" = Xecho; then\n    # We didn't find a better echo, so look for alternatives.\n    if test \"X`(print -r '\\t') 2>/dev/null`\" = 'X\\t' &&\n       echo_testing_string=`(print -r \"$echo_test_string\") 2>/dev/null` &&\n       test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n      # This shell has a builtin print -r that does the trick.\n      echo='print -r'\n    elif (test -f /bin/ksh || test -f /bin/ksh$ac_exeext) &&\n\t test \"X$CONFIG_SHELL\" != X/bin/ksh; then\n      # If we have ksh, try running configure again with it.\n      ORIGINAL_CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}\n      export ORIGINAL_CONFIG_SHELL\n      CONFIG_SHELL=/bin/ksh\n      export CONFIG_SHELL\n      exec $CONFIG_SHELL \"[$]0\" --no-reexec ${1+\"[$]@\"}\n    else\n      # Try using printf.\n      echo='printf %s\\n'\n      if test \"X`($echo '\\t') 2>/dev/null`\" = 'X\\t' &&\n\t echo_testing_string=`($echo \"$echo_test_string\") 2>/dev/null` &&\n\t test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n\t# Cool, printf works\n\t:\n      elif echo_testing_string=`($ORIGINAL_CONFIG_SHELL \"[$]0\" --fallback-echo '\\t') 2>/dev/null` &&\n\t   test \"X$echo_testing_string\" = 'X\\t' &&\n\t   echo_testing_string=`($ORIGINAL_CONFIG_SHELL \"[$]0\" --fallback-echo \"$echo_test_string\") 2>/dev/null` &&\n\t   test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n\tCONFIG_SHELL=$ORIGINAL_CONFIG_SHELL\n\texport CONFIG_SHELL\n\tSHELL=\"$CONFIG_SHELL\"\n\texport SHELL\n\techo=\"$CONFIG_SHELL [$]0 --fallback-echo\"\n      elif echo_testing_string=`($CONFIG_SHELL \"[$]0\" --fallback-echo '\\t') 2>/dev/null` &&\n\t   test \"X$echo_testing_string\" = 'X\\t' &&\n\t   echo_testing_string=`($CONFIG_SHELL \"[$]0\" --fallback-echo \"$echo_test_string\") 2>/dev/null` &&\n\t   test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n\techo=\"$CONFIG_SHELL [$]0 --fallback-echo\"\n      else\n\t# maybe with a smaller string...\n\tprev=:\n\n\tfor cmd in 'echo test' 'sed 2q \"[$]0\"' 'sed 10q \"[$]0\"' 'sed 20q \"[$]0\"' 'sed 50q \"[$]0\"'; do\n\t  if (test \"X$echo_test_string\" = \"X`eval $cmd`\") 2>/dev/null\n\t  then\n\t    break\n\t  fi\n\t  prev=\"$cmd\"\n\tdone\n\n\tif test \"$prev\" != 'sed 50q \"[$]0\"'; then\n\t  echo_test_string=`eval $prev`\n\t  export echo_test_string\n\t  exec ${ORIGINAL_CONFIG_SHELL-${CONFIG_SHELL-/bin/sh}} \"[$]0\" ${1+\"[$]@\"}\n\telse\n\t  # Oops.  We lost completely, so just stick with echo.\n\t  echo=echo\n\tfi\n      fi\n    fi\n  fi\nfi\nfi\n\n# Copy echo and quote the copy suitably for passing to libtool from\n# the Makefile, instead of quoting the original, which is used later.\nECHO=$echo\nif test \"X$ECHO\" = \"X$CONFIG_SHELL [$]0 --fallback-echo\"; then\n   ECHO=\"$CONFIG_SHELL \\\\\\$\\[$]0 --fallback-echo\"\nfi\n\nAC_SUBST(ECHO)\n])])# _LT_AC_PROG_ECHO_BACKSLASH\n\n\n# _LT_AC_LOCK\n# -----------\nAC_DEFUN([_LT_AC_LOCK],\n[AC_ARG_ENABLE([libtool-lock],\n    [AC_HELP_STRING([--disable-libtool-lock],\n\t[avoid locking (might break parallel builds)])])\ntest \"x$enable_libtool_lock\" != xno && enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.$ac_objext` in\n    *ELF-32*)\n      HPUX_IA64_MODE=\"32\"\n      ;;\n    *ELF-64*)\n      HPUX_IA64_MODE=\"64\"\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out which ABI we are using.\n  echo '[#]line __oline__ \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n   if test \"$lt_cv_prog_gnu_ld\" = yes; then\n    case `/usr/bin/file conftest.$ac_objext` in\n    *32-bit*)\n      LD=\"${LD-ld} -melf32bsmip\"\n      ;;\n    *N32*)\n      LD=\"${LD-ld} -melf32bmipn32\"\n      ;;\n    *64-bit*)\n      LD=\"${LD-ld} -melf64bmip\"\n      ;;\n    esac\n   else\n    case `/usr/bin/file conftest.$ac_objext` in\n    *32-bit*)\n      LD=\"${LD-ld} -32\"\n      ;;\n    *N32*)\n      LD=\"${LD-ld} -n32\"\n      ;;\n    *64-bit*)\n      LD=\"${LD-ld} -64\"\n      ;;\n    esac\n   fi\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*linux*|powerpc*-*linux*|s390*-*linux*|sparc*-*linux*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case \"`/usr/bin/file conftest.o`\" in\n    *32-bit*)\n      case $host in\n        x86_64-*linux*)\n          LD=\"${LD-ld} -m elf_i386\"\n          ;;\n        powerpc64le-*linux*)\n          LD=\"${LD-ld} -m elf32lppclinux\"\n          ;;\n        powerpc64-*linux*)\n          LD=\"${LD-ld} -m elf32ppclinux\"\n          ;;\n        s390x-*linux*)\n          LD=\"${LD-ld} -m elf_s390\"\n          ;;\n        sparc64-*linux*)\n          LD=\"${LD-ld} -m elf32_sparc\"\n          ;;\n      esac\n      ;;\n    *64-bit*)\n      case $host in\n        x86_64-*linux*)\n          LD=\"${LD-ld} -m elf_x86_64\"\n          ;;\n        powerpcle-*linux*)\n          LD=\"${LD-ld} -m elf64lppc\"\n          ;;\n        powerpc-*linux*)\n          LD=\"${LD-ld} -m elf64ppc\"\n          ;;\n        s390*-*linux*)\n          LD=\"${LD-ld} -m elf64_s390\"\n          ;;\n        sparc*-*linux*)\n          LD=\"${LD-ld} -m elf64_sparc\"\n          ;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=\"$CFLAGS\"\n  CFLAGS=\"$CFLAGS -belf\"\n  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n    [AC_LANG_PUSH(C)\n     AC_TRY_LINK([],[],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])\n     AC_LANG_POP])\n  if test x\"$lt_cv_cc_needs_belf\" != x\"yes\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=\"$SAVE_CFLAGS\"\n  fi\n  ;;\nAC_PROVIDE_IFELSE([AC_LIBTOOL_WIN32_DLL],\n[*-*-cygwin* | *-*-mingw* | *-*-pw32*)\n  AC_CHECK_TOOL(DLLTOOL, dlltool, false)\n  AC_CHECK_TOOL(AS, as, false)\n  AC_CHECK_TOOL(OBJDUMP, objdump, false)\n  ;;\n  ])\nesac\n\nneed_locks=\"$enable_libtool_lock\"\n\n])# _LT_AC_LOCK\n\n\n# AC_LIBTOOL_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#\t\t[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([AC_LIBTOOL_COMPILER_OPTION],\n[AC_REQUIRE([LT_AC_PROG_SED])\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n  ifelse([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])\n   printf \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$3\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}? :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:__oline__: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:__oline__: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $echo \"X$_lt_compiler_boilerplate\" | $Xsed >conftest.exp\n     $SED '/^$/d' conftest.err >conftest.er2\n     if test ! -s conftest.err || diff conftest.exp conftest.er2 >/dev/null; then\n       $2=yes\n     fi\n   fi\n   $rm conftest*\n])\n\nif test x\"[$]$2\" = xyes; then\n    ifelse([$5], , :, [$5])\nelse\n    ifelse([$6], , :, [$6])\nfi\n])# AC_LIBTOOL_COMPILER_OPTION\n\n\n# AC_LIBTOOL_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#                          [ACTION-SUCCESS], [ACTION-FAILURE])\n# ------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([AC_LIBTOOL_LINKER_OPTION],\n[AC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   save_LDFLAGS=\"$LDFLAGS\"\n   LDFLAGS=\"$LDFLAGS $3\"\n   printf \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&AS_MESSAGE_LOG_FD\n       $echo \"X$_lt_linker_boilerplate\" | $Xsed > conftest.exp\n       $SED '/^$/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         $2=yes\n       fi\n     else\n       $2=yes\n     fi\n   fi\n   $rm conftest*\n   LDFLAGS=\"$save_LDFLAGS\"\n])\n\nif test x\"[$]$2\" = xyes; then\n    ifelse([$4], , :, [$4])\nelse\n    ifelse([$5], , :, [$5])\nfi\n])# AC_LIBTOOL_LINKER_OPTION\n\n\n# AC_LIBTOOL_SYS_MAX_CMD_LEN\n# --------------------------\nAC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN],\n[# find the maximum length of command line arguments\nAC_MSG_CHECKING([the maximum length of command line arguments])\nAC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl\n  i=0\n  teststring=\"ABCD\"\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536 # usable default for *BSD\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    # \n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  *)\n    # If test is not a shell built-in, we'll probably end up computing a\n    # maximum length that is only half of the actual maximum length, but\n    # we can't tell.\n    SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n    while (test \"X\"`$SHELL [$]0 --fallback-echo \"X$teststring\" 2>/dev/null` \\\n\t       = \"XX$teststring\") >/dev/null 2>&1 &&\n\t    new_result=`expr \"X$teststring\" : \".*\" 2>&1` &&\n\t    lt_cv_sys_max_cmd_len=$new_result &&\n\t    test $i != 17 # 1/2 MB should be enough\n    do\n      i=`expr $i + 1`\n      teststring=$teststring$teststring\n    done\n    teststring=\n    # Add a significant safety factor because C++ compilers can tack on massive\n    # amounts of additional arguments before passing them to the linker.\n    # It appears as though 1/2 is a usable value.\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    ;;\n  esac\n])\nif test -n $lt_cv_sys_max_cmd_len ; then\n  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)\nelse\n  AC_MSG_RESULT(none)\nfi\n])# AC_LIBTOOL_SYS_MAX_CMD_LEN\n\n\n# _LT_AC_CHECK_DLFCN\n# --------------------\nAC_DEFUN([_LT_AC_CHECK_DLFCN],\n[AC_CHECK_HEADERS(dlfcn.h)dnl\n])# _LT_AC_CHECK_DLFCN\n\n\n# _LT_AC_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,\n#                           ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)\n# ------------------------------------------------------------------\nAC_DEFUN([_LT_AC_TRY_DLOPEN_SELF],\n[AC_REQUIRE([_LT_AC_CHECK_DLFCN])dnl\nif test \"$cross_compiling\" = yes; then :\n  [$4]\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<EOF\n[#line __oline__ \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n#ifdef __cplusplus\nextern \"C\" void exit (int);\n#endif\n\nvoid fnord() { int i=42;}\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else if (dlsym( self,\"_fnord\")) status = $lt_dlneed_uscore;\n      /* dlclose (self); */\n    }\n\n    exit (status);\n}]\nEOF\n  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext} 2>/dev/null; then\n    (./conftest; exit; ) 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) $1 ;;\n      x$lt_dlneed_uscore) $2 ;;\n      x$lt_unknown|x*) $3 ;;\n    esac\n  else :\n    # compilation failed\n    $3\n  fi\nfi\nrm -fr conftest*\n])# _LT_AC_TRY_DLOPEN_SELF\n\n\n# AC_LIBTOOL_DLOPEN_SELF\n# -------------------\nAC_DEFUN([AC_LIBTOOL_DLOPEN_SELF],\n[AC_REQUIRE([_LT_AC_CHECK_DLFCN])dnl\nif test \"x$enable_dlopen\" != xyes; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=\"load_add_on\"\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32*)\n    lt_cv_dlopen=\"LoadLibrary\"\n    lt_cv_dlopen_libs=\n   ;;\n\n  cygwin*)\n    lt_cv_dlopen=\"dlopen\"\n    lt_cv_dlopen_libs=\n   ;;\n\n  darwin*)\n  # if libdl is installed we need to link against it\n    AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"],[\n    lt_cv_dlopen=\"dyld\"\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ])\n   ;;\n\n  *)\n    AC_CHECK_FUNC([shl_load],\n\t  [lt_cv_dlopen=\"shl_load\"],\n      [AC_CHECK_LIB([dld], [shl_load],\n\t    [lt_cv_dlopen=\"shl_load\" lt_cv_dlopen_libs=\"-dld\"],\n\t[AC_CHECK_FUNC([dlopen],\n\t      [lt_cv_dlopen=\"dlopen\"],\n\t  [AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"],\n\t    [AC_CHECK_LIB([svld], [dlopen],\n\t\t  [lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-lsvld\"],\n\t      [AC_CHECK_LIB([dld], [dld_link],\n\t\t    [lt_cv_dlopen=\"dld_link\" lt_cv_dlopen_libs=\"-dld\"])\n\t      ])\n\t    ])\n\t  ])\n\t])\n      ])\n    ;;\n  esac\n\n  if test \"x$lt_cv_dlopen\" != xno; then\n    enable_dlopen=yes\n  else\n    enable_dlopen=no\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=\"$CPPFLAGS\"\n    test \"x$ac_cv_header_dlfcn_h\" = xyes && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=\"$LDFLAGS\"\n    eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=\"$LIBS\"\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    AC_CACHE_CHECK([whether a program can dlopen itself],\n\t  lt_cv_dlopen_self, [dnl\n\t  _LT_AC_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,\n\t    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)\n    ])\n\n    if test \"x$lt_cv_dlopen_self\" = xyes; then\n      LDFLAGS=\"$LDFLAGS $link_static_flag\"\n      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],\n    \t  lt_cv_dlopen_self_static, [dnl\n\t  _LT_AC_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,\n\t    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)\n      ])\n    fi\n\n    CPPFLAGS=\"$save_CPPFLAGS\"\n    LDFLAGS=\"$save_LDFLAGS\"\n    LIBS=\"$save_LIBS\"\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n])# AC_LIBTOOL_DLOPEN_SELF\n\n\n# AC_LIBTOOL_PROG_CC_C_O([TAGNAME])\n# ---------------------------------\n# Check to see if options -c and -o are simultaneously supported by compiler\nAC_DEFUN([AC_LIBTOOL_PROG_CC_C_O],\n[AC_REQUIRE([_LT_AC_SYS_COMPILER])dnl\nAC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],\n  [_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)],\n  [_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no\n   $rm -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   printf \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}? :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:__oline__: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:__oline__: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $echo \"X$_lt_compiler_boilerplate\" | $Xsed > out/conftest.exp\n     $SED '/^$/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.err || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       _LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n     fi\n   fi\n   chmod u+w .\n   $rm conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $rm out/ii_files/* && rmdir out/ii_files\n   $rm out/* && rmdir out\n   cd ..\n   rmdir conftest\n   $rm conftest*\n])\n])# AC_LIBTOOL_PROG_CC_C_O\n\n\n# AC_LIBTOOL_SYS_HARD_LINK_LOCKS([TAGNAME])\n# -----------------------------------------\n# Check to see if we can do hard links to lock some files if needed\nAC_DEFUN([AC_LIBTOOL_SYS_HARD_LINK_LOCKS],\n[AC_REQUIRE([_LT_AC_LOCK])dnl\n\nhard_links=\"nottested\"\nif test \"$_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)\" = no && test \"$need_locks\" != no; then\n  # do not overwrite the value of need_locks provided by the user\n  AC_MSG_CHECKING([if we can lock with hard links])\n  hard_links=yes\n  $rm conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  AC_MSG_RESULT([$hard_links])\n  if test \"$hard_links\" = no; then\n    AC_MSG_WARN([`$CC' does not support `-c -o', so `make -j' may be unsafe])\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n])# AC_LIBTOOL_SYS_HARD_LINK_LOCKS\n\n\n# AC_LIBTOOL_OBJDIR\n# -----------------\nAC_DEFUN([AC_LIBTOOL_OBJDIR],\n[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],\n[rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null])\nobjdir=$lt_cv_objdir\n])# AC_LIBTOOL_OBJDIR\n\n\n# AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH([TAGNAME])\n# ----------------------------------------------\n# Check hardcoding attributes.\nAC_DEFUN([AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH],\n[AC_MSG_CHECKING([how to hardcode library paths into programs])\n_LT_AC_TAGVAR(hardcode_action, $1)=\nif test -n \"$_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)\" || \\\n   test -n \"$_LT_AC_TAGVAR(runpath_var, $1)\" || \\\n   test \"X$_LT_AC_TAGVAR(hardcode_automatic, $1)\" = \"Xyes\" ; then\n\n  # We can hardcode non-existant directories.\n  if test \"$_LT_AC_TAGVAR(hardcode_direct, $1)\" != no &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test \"$_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)\" != no &&\n     test \"$_LT_AC_TAGVAR(hardcode_minus_L, $1)\" != no; then\n    # Linking always hardcodes the temporary library directory.\n    _LT_AC_TAGVAR(hardcode_action, $1)=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    _LT_AC_TAGVAR(hardcode_action, $1)=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  _LT_AC_TAGVAR(hardcode_action, $1)=unsupported\nfi\nAC_MSG_RESULT([$_LT_AC_TAGVAR(hardcode_action, $1)])\n\nif test \"$_LT_AC_TAGVAR(hardcode_action, $1)\" = relink; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test \"$shlibpath_overrides_runpath\" = yes ||\n     test \"$enable_shared\" = no; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n])# AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH\n\n\n# AC_LIBTOOL_SYS_LIB_STRIP\n# ------------------------\nAC_DEFUN([AC_LIBTOOL_SYS_LIB_STRIP],\n[striplib=\nold_striplib=\nAC_MSG_CHECKING([whether stripping libraries is possible])\nif test -n \"$STRIP\" && $STRIP -V 2>&1 | grep \"GNU strip\" >/dev/null; then\n  test -z \"$old_striplib\" && old_striplib=\"$STRIP --strip-debug\"\n  test -z \"$striplib\" && striplib=\"$STRIP --strip-unneeded\"\n  AC_MSG_RESULT([yes])\nelse\n# FIXME - insert some real tests, host_os isn't really good enough\n  case $host_os in\n   darwin*)\n       if test -n \"$STRIP\" ; then\n         striplib=\"$STRIP -x\"\n         AC_MSG_RESULT([yes])\n       else\n  AC_MSG_RESULT([no])\nfi\n       ;;\n   *)\n  AC_MSG_RESULT([no])\n    ;;\n  esac\nfi\n])# AC_LIBTOOL_SYS_LIB_STRIP\n\n\n# AC_LIBTOOL_SYS_DYNAMIC_LINKER\n# -----------------------------\n# PORTME Fill in your ld.so characteristics\nAC_DEFUN([AC_LIBTOOL_SYS_DYNAMIC_LINKER],\n[AC_MSG_CHECKING([dynamic linker characteristics])\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=\".so\"\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nif test \"$GCC\" = yes; then\n  sys_lib_search_path_spec=`$CC -print-search-dirs | grep \"^libraries:\" | $SED -e \"s/^libraries://\" -e \"s,=/,/,g\"`\n  if echo \"$sys_lib_search_path_spec\" | grep ';' >/dev/null ; then\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    sys_lib_search_path_spec=`echo \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n  else\n    sys_lib_search_path_spec=`echo \"$sys_lib_search_path_spec\" | $SED  -e \"s/$PATH_SEPARATOR/ /g\"`\n  fi\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\ncase $host_os in\naix3*)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='${libname}${release}${shared_ext}$major'\n  ;;\n\naix4* | aix5*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test \"$host_cpu\" = ia64; then\n    # AIX 5 supports IA64\n    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line `#! .'.  This would cause the generated library to\n    # depend on `.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[[01]] | aix4.[[01]].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | ${CC} -E - | grep yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    if test \"$aix_use_runtimelinking\" = yes; then\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    else\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='${libname}${release}.a $libname.a'\n      soname_spec='${libname}${release}${shared_ext}$major'\n    fi\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  library_names_spec='$libname.ixlibrary $libname.a'\n  # Create ${libname}_ixlibrary.a entries in /sys/libs.\n  finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`$echo \"X$lib\" | $Xsed -e '\\''s%^.*/\\([[^/]]*\\)\\.ixlibrary$%\\1%'\\''`; test $rm /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n  ;;\n\nbeos*)\n  library_names_spec='${libname}${shared_ext}'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[[45]]*)\n  version_type=linux\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32*)\n  version_type=windows\n  shrext_cmds=\".dll\"\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$host_os in\n  yes,cygwin* | yes,mingw* | yes,pw32*)\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\${file}`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\${base_file}'\\''i;echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $rm \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      sys_lib_search_path_spec=\"/usr/lib /lib/w32api /lib /usr/local/lib\"\n      ;;\n    mingw*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      sys_lib_search_path_spec=`$CC -print-search-dirs | grep \"^libraries:\" | $SED -e \"s/^libraries://\" -e \"s,=/,/,g\"`\n      if echo \"$sys_lib_search_path_spec\" | [grep ';[c-zC-Z]:/' >/dev/null]; then\n        # It is most probably a Windows format PATH printed by\n        # mingw gcc, but we are running on Cygwin. Gcc prints its search\n        # path with ; separators, and with drive letters. We can handle the\n        # drive letters (cygwin fileutils understands them), so leave them,\n        # especially as we might pass files found there to a mingw objdump,\n        # which wouldn't understand a cygwinified path. Ahh.\n        sys_lib_search_path_spec=`echo \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`echo \"$sys_lib_search_path_spec\" | $SED  -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      ;;\n    esac\n    ;;\n\n  *)\n    library_names_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext} $libname.lib'\n    ;;\n  esac\n  dynamic_linker='Win32 ld.exe'\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${versuffix}$shared_ext ${libname}${release}${major}$shared_ext ${libname}$shared_ext'\n  soname_spec='${libname}${release}${major}$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='$(test .$module = .yes && echo .so || echo .dylib)'\n  # Apple's gcc prints 'gcc -print-search-dirs' doesn't operate the same.\n  if test \"$GCC\" = yes; then\n    sys_lib_search_path_spec=`$CC -print-search-dirs | tr \"\\n\" \"$PATH_SEPARATOR\" | sed -e 's/libraries:/@libraries:/' | tr \"@\" \"\\n\" | grep \"^libraries:\" | sed -e \"s/^libraries://\" -e \"s,=/,/,g\" -e \"s,$PATH_SEPARATOR, ,g\" -e \"s,.*,& /lib /usr/lib /usr/local/lib,g\"`\n  else\n    sys_lib_search_path_spec='/lib /usr/lib /usr/local/lib'\n  fi\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nkfreebsd*-gnu)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='GNU ld.so'\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  objformat=`test -x /usr/bin/objformat && /usr/bin/objformat || echo aout`\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2.*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[[01]]* | freebsdelf3.[[01]]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  *) # from 3.2 on\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\ngnu*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case \"$host_cpu\" in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    if test \"X$HPUX_IA64_MODE\" = X32; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n    fi\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n   hppa*64*)\n     shrext_cmds='.sl'\n     hardcode_into_libs=yes\n     dynamic_linker=\"$host_os dld.sl\"\n     shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n     shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n     library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n     soname_spec='${libname}${release}${shared_ext}$major'\n     sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n     sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n     ;;\n   *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555.\n  postinstall_cmds='chmod 555 $lib'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test \"$lt_cv_prog_gnu_ld\" = yes; then\n\t\tversion_type=linux\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib${libsuff} /lib${libsuff}\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\n# This must be Linux ELF.\nlinux*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # find out which ABI we are using\n  libsuff=\n  case \"$host_cpu\" in\n  x86_64*|s390x*|powerpc64*)\n    echo '[#]line __oline__ \"configure\"' > conftest.$ac_ext\n    if AC_TRY_EVAL(ac_compile); then\n      case `/usr/bin/file conftest.$ac_objext` in\n      *64-bit*)\n        libsuff=64\n        sys_lib_search_path_spec=\"/lib${libsuff} /usr/lib${libsuff} /usr/local/lib${libsuff}\"\n        ;;\n      esac\n    fi\n    rm -rf conftest*\n    ;;\n  esac\n\n  # Append ld.so.conf contents to the search path\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib${libsuff} /usr/lib${libsuff} $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nknetbsd*-gnu)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='GNU ld.so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nnto-qnx*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nopenbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n    case $host_os in\n      openbsd2.[[89]] | openbsd2.[[89]].*)\n\tshlibpath_overrides_runpath=no\n\t;;\n      *)\n\tshlibpath_overrides_runpath=yes\n\t;;\n      esac\n  else\n    shlibpath_overrides_runpath=yes\n  fi\n  ;;\n\nos2*)\n  libname_spec='$name'\n  shrext_cmds=\".dll\"\n  need_lib_prefix=no\n  library_names_spec='$libname${shared_ext} $libname.a'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=LIBPATH\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=\"$sys_lib_search_path_spec\"\n  ;;\n\nsco3.2v5*)\n  version_type=osf\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nsolaris*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test \"$with_gnu_ld\" = yes; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      export_dynamic_flag_spec='${wl}-Blargedynsym'\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec ;then\n    version_type=linux\n    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'\n    soname_spec='$libname${shared_ext}.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nuts4*)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\nAC_MSG_RESULT([$dynamic_linker])\ntest \"$dynamic_linker\" = no && can_build_shared=no\n])# AC_LIBTOOL_SYS_DYNAMIC_LINKER\n\n\n# _LT_AC_TAGCONFIG\n# ----------------\nAC_DEFUN([_LT_AC_TAGCONFIG],\n[AC_ARG_WITH([tags],\n    [AC_HELP_STRING([--with-tags@<:@=TAGS@:>@],\n        [include additional configurations @<:@automatic@:>@])],\n    [tagnames=\"$withval\"])\n\nif test -f \"$ltmain\" && test -n \"$tagnames\"; then\n  if test ! -f \"${ofile}\"; then\n    AC_MSG_WARN([output file `$ofile' does not exist])\n  fi\n\n  if test -z \"$LTCC\"; then\n    eval \"`$SHELL ${ofile} --config | grep '^LTCC='`\"\n    if test -z \"$LTCC\"; then\n      AC_MSG_WARN([output file `$ofile' does not look like a libtool script])\n    else\n      AC_MSG_WARN([using `LTCC=$LTCC', extracted from `$ofile'])\n    fi\n  fi\n\n  # Extract list of available tagged configurations in $ofile.\n  # Note that this assumes the entire list is on one line.\n  available_tags=`grep \"^available_tags=\" \"${ofile}\" | $SED -e 's/available_tags=\\(.*$\\)/\\1/' -e 's/\\\"//g'`\n\n  lt_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR,\"\n  for tagname in $tagnames; do\n    IFS=\"$lt_save_ifs\"\n    # Check whether tagname contains only valid characters\n    case `$echo \"X$tagname\" | $Xsed -e 's:[[-_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890,/]]::g'` in\n    \"\") ;;\n    *)  AC_MSG_ERROR([invalid tag name: $tagname])\n\t;;\n    esac\n\n    if grep \"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname$\" < \"${ofile}\" > /dev/null\n    then\n      AC_MSG_ERROR([tag name \\\"$tagname\\\" already exists])\n    fi\n\n    # Update the list of available tags.\n    if test -n \"$tagname\"; then\n      echo appending configuration tag \\\"$tagname\\\" to $ofile\n\n      case $tagname in\n      CXX)\n\tif test -n \"$CXX\" && ( test \"X$CXX\" != \"Xno\" &&\n\t    ( (test \"X$CXX\" = \"Xg++\" && `g++ -v >/dev/null 2>&1` ) ||\n\t    (test \"X$CXX\" != \"Xg++\"))) ; then\n\t  AC_LIBTOOL_LANG_CXX_CONFIG\n\telse\n\t  tagname=\"\"\n\tfi\n\t;;\n\n      F77)\n\tif test -n \"$F77\" && test \"X$F77\" != \"Xno\"; then\n\t  AC_LIBTOOL_LANG_F77_CONFIG\n\telse\n\t  tagname=\"\"\n\tfi\n\t;;\n\n      GCJ)\n\tif test -n \"$GCJ\" && test \"X$GCJ\" != \"Xno\"; then\n\t  AC_LIBTOOL_LANG_GCJ_CONFIG\n\telse\n\t  tagname=\"\"\n\tfi\n\t;;\n\n      RC)\n\tAC_LIBTOOL_LANG_RC_CONFIG\n\t;;\n\n      *)\n\tAC_MSG_ERROR([Unsupported tag name: $tagname])\n\t;;\n      esac\n\n      # Append the new tag name to the list of available tags.\n      if test -n \"$tagname\" ; then\n      available_tags=\"$available_tags $tagname\"\n    fi\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\n\n  # Now substitute the updated list of available tags.\n  if eval \"sed -e 's/^available_tags=.*\\$/available_tags=\\\"$available_tags\\\"/' \\\"$ofile\\\" > \\\"${ofile}T\\\"\"; then\n    mv \"${ofile}T\" \"$ofile\"\n    chmod +x \"$ofile\"\n  else\n    rm -f \"${ofile}T\"\n    AC_MSG_ERROR([unable to update list of available tagged configurations.])\n  fi\nfi\n])# _LT_AC_TAGCONFIG\n\n\n# AC_LIBTOOL_DLOPEN\n# -----------------\n# enable checks for dlopen support\nAC_DEFUN([AC_LIBTOOL_DLOPEN],\n [AC_BEFORE([$0],[AC_LIBTOOL_SETUP])\n])# AC_LIBTOOL_DLOPEN\n\n\n# AC_LIBTOOL_WIN32_DLL\n# --------------------\n# declare package support for building win32 dll's\nAC_DEFUN([AC_LIBTOOL_WIN32_DLL],\n[AC_BEFORE([$0], [AC_LIBTOOL_SETUP])\n])# AC_LIBTOOL_WIN32_DLL\n\n\n# AC_ENABLE_SHARED([DEFAULT])\n# ---------------------------\n# implement the --enable-shared flag\n# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.\nAC_DEFUN([AC_ENABLE_SHARED],\n[define([AC_ENABLE_SHARED_DEFAULT], ifelse($1, no, no, yes))dnl\nAC_ARG_ENABLE([shared],\n    [AC_HELP_STRING([--enable-shared@<:@=PKGS@:>@],\n\t[build shared libraries @<:@default=]AC_ENABLE_SHARED_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_shared=yes ;;\n    no) enable_shared=no ;;\n    *)\n      enable_shared=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR,\"\n      for pkg in $enableval; do\n\tIFS=\"$lt_save_ifs\"\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_shared=yes\n\tfi\n      done\n      IFS=\"$lt_save_ifs\"\n      ;;\n    esac],\n    [enable_shared=]AC_ENABLE_SHARED_DEFAULT)\n])# AC_ENABLE_SHARED\n\n\n# AC_DISABLE_SHARED\n# -----------------\n#- set the default shared flag to --disable-shared\nAC_DEFUN([AC_DISABLE_SHARED],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\nAC_ENABLE_SHARED(no)\n])# AC_DISABLE_SHARED\n\n\n# AC_ENABLE_STATIC([DEFAULT])\n# ---------------------------\n# implement the --enable-static flag\n# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.\nAC_DEFUN([AC_ENABLE_STATIC],\n[define([AC_ENABLE_STATIC_DEFAULT], ifelse($1, no, no, yes))dnl\nAC_ARG_ENABLE([static],\n    [AC_HELP_STRING([--enable-static@<:@=PKGS@:>@],\n\t[build static libraries @<:@default=]AC_ENABLE_STATIC_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_static=yes ;;\n    no) enable_static=no ;;\n    *)\n     enable_static=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR,\"\n      for pkg in $enableval; do\n\tIFS=\"$lt_save_ifs\"\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_static=yes\n\tfi\n      done\n      IFS=\"$lt_save_ifs\"\n      ;;\n    esac],\n    [enable_static=]AC_ENABLE_STATIC_DEFAULT)\n])# AC_ENABLE_STATIC\n\n\n# AC_DISABLE_STATIC\n# -----------------\n# set the default static flag to --disable-static\nAC_DEFUN([AC_DISABLE_STATIC],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\nAC_ENABLE_STATIC(no)\n])# AC_DISABLE_STATIC\n\n\n# AC_ENABLE_FAST_INSTALL([DEFAULT])\n# ---------------------------------\n# implement the --enable-fast-install flag\n# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.\nAC_DEFUN([AC_ENABLE_FAST_INSTALL],\n[define([AC_ENABLE_FAST_INSTALL_DEFAULT], ifelse($1, no, no, yes))dnl\nAC_ARG_ENABLE([fast-install],\n    [AC_HELP_STRING([--enable-fast-install@<:@=PKGS@:>@],\n    [optimize for fast installation @<:@default=]AC_ENABLE_FAST_INSTALL_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_fast_install=yes ;;\n    no) enable_fast_install=no ;;\n    *)\n      enable_fast_install=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR,\"\n      for pkg in $enableval; do\n\tIFS=\"$lt_save_ifs\"\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_fast_install=yes\n\tfi\n      done\n      IFS=\"$lt_save_ifs\"\n      ;;\n    esac],\n    [enable_fast_install=]AC_ENABLE_FAST_INSTALL_DEFAULT)\n])# AC_ENABLE_FAST_INSTALL\n\n\n# AC_DISABLE_FAST_INSTALL\n# -----------------------\n# set the default to --disable-fast-install\nAC_DEFUN([AC_DISABLE_FAST_INSTALL],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\nAC_ENABLE_FAST_INSTALL(no)\n])# AC_DISABLE_FAST_INSTALL\n\n\n# AC_LIBTOOL_PICMODE([MODE])\n# --------------------------\n# implement the --with-pic flag\n# MODE is either `yes' or `no'.  If omitted, it defaults to `both'.\nAC_DEFUN([AC_LIBTOOL_PICMODE],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\npic_mode=ifelse($#,1,$1,default)\n])# AC_LIBTOOL_PICMODE\n\n\n# AC_PROG_EGREP\n# -------------\n# This is predefined starting with Autoconf 2.54, so this conditional\n# definition can be removed once we require Autoconf 2.54 or later.\nm4_ifndef([AC_PROG_EGREP], [AC_DEFUN([AC_PROG_EGREP],\n[AC_CACHE_CHECK([for egrep], [ac_cv_prog_egrep],\n   [if echo a | (grep -E '(a|b)') >/dev/null 2>&1\n    then ac_cv_prog_egrep='grep -E'\n    else ac_cv_prog_egrep='egrep'\n    fi])\n EGREP=$ac_cv_prog_egrep\n AC_SUBST([EGREP])\n])])\n\n\n# AC_PATH_TOOL_PREFIX\n# -------------------\n# find a file program which can recognise shared library\nAC_DEFUN([AC_PATH_TOOL_PREFIX],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_MSG_CHECKING([for $1])\nAC_CACHE_VAL(lt_cv_path_MAGIC_CMD,\n[case $MAGIC_CMD in\n[[\\\\/*] |  ?:[\\\\/]*])\n  lt_cv_path_MAGIC_CMD=\"$MAGIC_CMD\" # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=\"$MAGIC_CMD\"\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\ndnl $ac_dummy forces splitting on constant user-supplied paths.\ndnl POSIX.2 word splitting is done only on the output of word expansions,\ndnl not every word.  This closes a longstanding sh security hole.\n  ac_dummy=\"ifelse([$2], , $PATH, [$2])\"\n  for ac_dir in $ac_dummy; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f $ac_dir/$1; then\n      lt_cv_path_MAGIC_CMD=\"$ac_dir/$1\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=\"`expr \\\"$deplibs_check_method\\\" : \\\"file_magic \\(.*\\)\\\"`\"\n\t  MAGIC_CMD=\"$lt_cv_path_MAGIC_CMD\"\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\nEOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\n  MAGIC_CMD=\"$lt_save_MAGIC_CMD\"\n  ;;\nesac])\nMAGIC_CMD=\"$lt_cv_path_MAGIC_CMD\"\nif test -n \"$MAGIC_CMD\"; then\n  AC_MSG_RESULT($MAGIC_CMD)\nelse\n  AC_MSG_RESULT(no)\nfi\n])# AC_PATH_TOOL_PREFIX\n\n\n# AC_PATH_MAGIC\n# -------------\n# find a file program which can recognise a shared library\nAC_DEFUN([AC_PATH_MAGIC],\n[AC_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    AC_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)\n  else\n    MAGIC_CMD=:\n  fi\nfi\n])# AC_PATH_MAGIC\n\n\n# AC_PROG_LD\n# ----------\n# find the pathname to the GNU or non-GNU linker\nAC_DEFUN([AC_PROG_LD],\n[AC_ARG_WITH([gnu-ld],\n    [AC_HELP_STRING([--with-gnu-ld],\n\t[assume the C compiler uses GNU ld @<:@default=no@:>@])],\n    [test \"$withval\" = no || with_gnu_ld=yes],\n    [with_gnu_ld=no])\nAC_REQUIRE([LT_AC_PROG_SED])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nac_prog=ld\nif test \"$GCC\" = yes; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  AC_MSG_CHECKING([for ld used by $CC])\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [[\\\\/]]* | ?:[[\\\\/]]*)\n      re_direlt='/[[^/]][[^/]]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`echo $ac_prog| $SED 's%\\\\\\\\%/%g'`\n      while echo $ac_prog | grep \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`echo $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=\"$ac_prog\"\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test \"$with_gnu_ld\" = yes; then\n  AC_MSG_CHECKING([for GNU ld])\nelse\n  AC_MSG_CHECKING([for non-GNU ld])\nfi\nAC_CACHE_VAL(lt_cv_path_LD,\n[if test -z \"$LD\"; then\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=\"$ac_dir/$ac_prog\"\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some GNU ld's only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest \"$with_gnu_ld\" != no && break\n\t;;\n      *)\n\ttest \"$with_gnu_ld\" != yes && break\n\t;;\n      esac\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\nelse\n  lt_cv_path_LD=\"$LD\" # Let the user override the test with a path.\nfi])\nLD=\"$lt_cv_path_LD\"\nif test -n \"$LD\"; then\n  AC_MSG_RESULT($LD)\nelse\n  AC_MSG_RESULT(no)\nfi\ntest -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\nAC_PROG_LD_GNU\n])# AC_PROG_LD\n\n\n# AC_PROG_LD_GNU\n# --------------\nAC_DEFUN([AC_PROG_LD_GNU],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,\n[# I'd rather use --version here, but apparently some GNU ld's only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac])\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n])# AC_PROG_LD_GNU\n\n\n# AC_PROG_LD_RELOAD_FLAG\n# ----------------------\n# find reload flag for linker\n#   -- PORTME Some linkers may need a different reload flag.\nAC_DEFUN([AC_PROG_LD_RELOAD_FLAG],\n[AC_CACHE_CHECK([for $LD option to reload object files],\n  lt_cv_ld_reload_flag,\n  [lt_cv_ld_reload_flag='-r'])\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  darwin*)\n    if test \"$GCC\" = yes; then\n      reload_cmds='$CC -nostdlib ${wl}-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n])# AC_PROG_LD_RELOAD_FLAG\n\n\n# AC_DEPLIBS_CHECK_METHOD\n# -----------------------\n# how to check for library dependencies\n#  -- PORTME fill in with the dynamic library characteristics\nAC_DEFUN([AC_DEPLIBS_CHECK_METHOD],\n[AC_CACHE_CHECK([how to recognise dependent libraries],\nlt_cv_deplibs_check_method,\n[lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# `unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# which responds to the $file_magic_cmd with a given extended regex.\n# If you have `file' or equivalent on your system and you're not sure\n# whether `pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix4* | aix5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[[45]]*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump'.\n  lt_cv_deplibs_check_method='file_magic file format pei*-i386(.*architecture: i386)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | kfreebsd*-gnu | dragonfly*)\n  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\ngnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case \"$host_cpu\" in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - PA-RISC [0-9].[0-9]']\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]].[[0-9]]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be Linux ELF.\nlinux*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd*)\n  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\nnto-qnx*)\n  lt_cv_deplibs_check_method=unknown\n  ;;\n\nopenbsd*)\n  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsco3.2v5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\nsysv5OpenUNIX8* | sysv5UnixWare7* | sysv5uw[[78]]* | unixware7* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n])\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n])# AC_DEPLIBS_CHECK_METHOD\n\n\n# AC_PROG_NM\n# ----------\n# find the pathname to a BSD-compatible name lister\nAC_DEFUN([AC_PROG_NM],\n[AC_CACHE_CHECK([for BSD-compatible nm], lt_cv_path_NM,\n[if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=\"$NM\"\nelse\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH /usr/ccs/bin /usr/ucb /bin; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    tmp_nm=\"$ac_dir/${ac_tool_prefix}nm\"\n    if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\" ; then\n      # Check to see if the nm accepts a BSD-compat flag.\n      # Adding the `sed 1q' prevents false positives on HP-UX, which says:\n      #   nm: unknown option \"B\" ignored\n      # Tru64's nm complains that /dev/null is an invalid object file\n      case `\"$tmp_nm\" -B /dev/null 2>&1 | sed '1q'` in\n      */dev/null* | *'Invalid file or object type'*)\n\tlt_cv_path_NM=\"$tmp_nm -B\"\n\tbreak\n        ;;\n      *)\n\tcase `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t*/dev/null*)\n\t  lt_cv_path_NM=\"$tmp_nm -p\"\n\t  break\n\t  ;;\n\t*)\n\t  lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t  continue # so that we can try to find one that supports BSD flags\n\t  ;;\n\tesac\n      esac\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\n  test -z \"$lt_cv_path_NM\" && lt_cv_path_NM=nm\nfi])\nNM=\"$lt_cv_path_NM\"\n])# AC_PROG_NM\n\n\n# AC_CHECK_LIBM\n# -------------\n# check for math library\nAC_DEFUN([AC_CHECK_LIBM],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nLIBM=\ncase $host in\n*-*-beos* | *-*-cygwin* | *-*-pw32* | *-*-darwin*)\n  # These system don't have libm, or don't need it\n  ;;\n*-ncr-sysv4.3*)\n  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=\"-lmw\")\n  AC_CHECK_LIB(m, cos, LIBM=\"$LIBM -lm\")\n  ;;\n*)\n  AC_CHECK_LIB(m, cos, LIBM=\"-lm\")\n  ;;\nesac\n])# AC_CHECK_LIBM\n\n\n# AC_LIBLTDL_CONVENIENCE([DIRECTORY])\n# -----------------------------------\n# sets LIBLTDL to the link flags for the libltdl convenience library and\n# LTDLINCL to the include flags for the libltdl header and adds\n# --enable-ltdl-convenience to the configure arguments.  Note that LIBLTDL\n# and LTDLINCL are not AC_SUBSTed, nor is AC_CONFIG_SUBDIRS called.  If\n# DIRECTORY is not provided, it is assumed to be `libltdl'.  LIBLTDL will\n# be prefixed with '${top_builddir}/' and LTDLINCL will be prefixed with\n# '${top_srcdir}/' (note the single quotes!).  If your package is not\n# flat and you're not using automake, define top_builddir and\n# top_srcdir appropriately in the Makefiles.\nAC_DEFUN([AC_LIBLTDL_CONVENIENCE],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\n  case $enable_ltdl_convenience in\n  no) AC_MSG_ERROR([this package needs a convenience libltdl]) ;;\n  \"\") enable_ltdl_convenience=yes\n      ac_configure_args=\"$ac_configure_args --enable-ltdl-convenience\" ;;\n  esac\n  LIBLTDL='${top_builddir}/'ifelse($#,1,[$1],['libltdl'])/libltdlc.la\n  LTDLINCL='-I${top_srcdir}/'ifelse($#,1,[$1],['libltdl'])\n  # For backwards non-gettext consistent compatibility...\n  INCLTDL=\"$LTDLINCL\"\n])# AC_LIBLTDL_CONVENIENCE\n\n\n# AC_LIBLTDL_INSTALLABLE([DIRECTORY])\n# -----------------------------------\n# sets LIBLTDL to the link flags for the libltdl installable library and\n# LTDLINCL to the include flags for the libltdl header and adds\n# --enable-ltdl-install to the configure arguments.  Note that LIBLTDL\n# and LTDLINCL are not AC_SUBSTed, nor is AC_CONFIG_SUBDIRS called.  If\n# DIRECTORY is not provided and an installed libltdl is not found, it is\n# assumed to be `libltdl'.  LIBLTDL will be prefixed with '${top_builddir}/'\n# and LTDLINCL will be prefixed with '${top_srcdir}/' (note the single\n# quotes!).  If your package is not flat and you're not using automake,\n# define top_builddir and top_srcdir appropriately in the Makefiles.\n# In the future, this macro may have to be called after AC_PROG_LIBTOOL.\nAC_DEFUN([AC_LIBLTDL_INSTALLABLE],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\n  AC_CHECK_LIB(ltdl, lt_dlinit,\n  [test x\"$enable_ltdl_install\" != xyes && enable_ltdl_install=no],\n  [if test x\"$enable_ltdl_install\" = xno; then\n     AC_MSG_WARN([libltdl not installed, but installation disabled])\n   else\n     enable_ltdl_install=yes\n   fi\n  ])\n  if test x\"$enable_ltdl_install\" = x\"yes\"; then\n    ac_configure_args=\"$ac_configure_args --enable-ltdl-install\"\n    LIBLTDL='${top_builddir}/'ifelse($#,1,[$1],['libltdl'])/libltdl.la\n    LTDLINCL='-I${top_srcdir}/'ifelse($#,1,[$1],['libltdl'])\n  else\n    ac_configure_args=\"$ac_configure_args --enable-ltdl-install=no\"\n    LIBLTDL=\"-lltdl\"\n    LTDLINCL=\n  fi\n  # For backwards non-gettext consistent compatibility...\n  INCLTDL=\"$LTDLINCL\"\n])# AC_LIBLTDL_INSTALLABLE\n\n\n# AC_LIBTOOL_CXX\n# --------------\n# enable support for C++ libraries\nAC_DEFUN([AC_LIBTOOL_CXX],\n[AC_REQUIRE([_LT_AC_LANG_CXX])\n])# AC_LIBTOOL_CXX\n\n\n# _LT_AC_LANG_CXX\n# ---------------\nAC_DEFUN([_LT_AC_LANG_CXX],\n[AC_REQUIRE([AC_PROG_CXX])\nAC_REQUIRE([_LT_AC_PROG_CXXCPP])\n_LT_AC_SHELL_INIT([tagnames=${tagnames+${tagnames},}CXX])\n])# _LT_AC_LANG_CXX\n\n# _LT_AC_PROG_CXXCPP\n# ---------------\nAC_DEFUN([_LT_AC_PROG_CXXCPP],\n[\nAC_REQUIRE([AC_PROG_CXX])\nif test -n \"$CXX\" && ( test \"X$CXX\" != \"Xno\" &&\n    ( (test \"X$CXX\" = \"Xg++\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test \"X$CXX\" != \"Xg++\"))) ; then\n  AC_PROG_CXXCPP\nfi\n])# _LT_AC_PROG_CXXCPP\n\n# AC_LIBTOOL_F77\n# --------------\n# enable support for Fortran 77 libraries\nAC_DEFUN([AC_LIBTOOL_F77],\n[AC_REQUIRE([_LT_AC_LANG_F77])\n])# AC_LIBTOOL_F77\n\n\n# _LT_AC_LANG_F77\n# ---------------\nAC_DEFUN([_LT_AC_LANG_F77],\n[AC_REQUIRE([AC_PROG_F77])\n_LT_AC_SHELL_INIT([tagnames=${tagnames+${tagnames},}F77])\n])# _LT_AC_LANG_F77\n\n\n# AC_LIBTOOL_GCJ\n# --------------\n# enable support for GCJ libraries\nAC_DEFUN([AC_LIBTOOL_GCJ],\n[AC_REQUIRE([_LT_AC_LANG_GCJ])\n])# AC_LIBTOOL_GCJ\n\n\n# _LT_AC_LANG_GCJ\n# ---------------\nAC_DEFUN([_LT_AC_LANG_GCJ],\n[AC_PROVIDE_IFELSE([AC_PROG_GCJ],[],\n  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],[],\n    [AC_PROVIDE_IFELSE([LT_AC_PROG_GCJ],[],\n      [ifdef([AC_PROG_GCJ],[AC_REQUIRE([AC_PROG_GCJ])],\n\t [ifdef([A][M_PROG_GCJ],[AC_REQUIRE([A][M_PROG_GCJ])],\n\t   [AC_REQUIRE([A][C_PROG_GCJ_OR_A][M_PROG_GCJ])])])])])])\n_LT_AC_SHELL_INIT([tagnames=${tagnames+${tagnames},}GCJ])\n])# _LT_AC_LANG_GCJ\n\n\n# AC_LIBTOOL_RC\n# --------------\n# enable support for Windows resource files\nAC_DEFUN([AC_LIBTOOL_RC],\n[AC_REQUIRE([LT_AC_PROG_RC])\n_LT_AC_SHELL_INIT([tagnames=${tagnames+${tagnames},}RC])\n])# AC_LIBTOOL_RC\n\n\n# AC_LIBTOOL_LANG_C_CONFIG\n# ------------------------\n# Ensure that the configuration vars for the C compiler are\n# suitably defined.  Those variables are subsequently used by\n# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.\nAC_DEFUN([AC_LIBTOOL_LANG_C_CONFIG], [_LT_AC_LANG_C_CONFIG])\nAC_DEFUN([_LT_AC_LANG_C_CONFIG],\n[lt_save_CC=\"$CC\"\nAC_LANG_PUSH(C)\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\n_LT_AC_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\\n\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}\\n'\n\n_LT_AC_SYS_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n#\n# Check for any special shared library compilation flags.\n#\n_LT_AC_TAGVAR(lt_prog_cc_shlib, $1)=\nif test \"$GCC\" = no; then\n  case $host_os in\n  sco3.2v5*)\n    _LT_AC_TAGVAR(lt_prog_cc_shlib, $1)='-belf'\n    ;;\n  esac\nfi\nif test -n \"$_LT_AC_TAGVAR(lt_prog_cc_shlib, $1)\"; then\n  AC_MSG_WARN([`$CC' requires `$_LT_AC_TAGVAR(lt_prog_cc_shlib, $1)' to build shared libraries])\n  if echo \"$old_CC $old_CFLAGS \" | grep \"[[ \t]]$_LT_AC_TAGVAR(lt_prog_cc_shlib, $1)[[ \t]]\" >/dev/null; then :\n  else\n    AC_MSG_WARN([add `$_LT_AC_TAGVAR(lt_prog_cc_shlib, $1)' to the CC or CFLAGS env variable and reconfigure])\n    _LT_AC_TAGVAR(lt_cv_prog_cc_can_build_shared, $1)=no\n  fi\nfi\n\n\n#\n# Check to make sure the static flag actually works.\n#\nAC_LIBTOOL_LINKER_OPTION([if $compiler static flag $_LT_AC_TAGVAR(lt_prog_compiler_static, $1) works],\n  _LT_AC_TAGVAR(lt_prog_compiler_static_works, $1),\n  $_LT_AC_TAGVAR(lt_prog_compiler_static, $1),\n  [],\n  [_LT_AC_TAGVAR(lt_prog_compiler_static, $1)=])\n\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nAC_LIBTOOL_PROG_COMPILER_NO_RTTI($1)\nAC_LIBTOOL_PROG_COMPILER_PIC($1)\nAC_LIBTOOL_PROG_CC_C_O($1)\nAC_LIBTOOL_SYS_HARD_LINK_LOCKS($1)\nAC_LIBTOOL_PROG_LD_SHLIBS($1)\nAC_LIBTOOL_SYS_DYNAMIC_LINKER($1)\nAC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH($1)\nAC_LIBTOOL_SYS_LIB_STRIP\nAC_LIBTOOL_DLOPEN_SELF($1)\n\n# Report which librarie types wil actually be built\nAC_MSG_CHECKING([if libtool supports shared libraries])\nAC_MSG_RESULT([$can_build_shared])\n\nAC_MSG_CHECKING([whether to build shared libraries])\ntest \"$can_build_shared\" = \"no\" && enable_shared=no\n\n# On AIX, shared libraries and static libraries use the same namespace, and\n# are all built from PIC.\ncase \"$host_os\" in\naix3*)\n  test \"$enable_shared\" = yes && enable_static=no\n  if test -n \"$RANLIB\"; then\n    archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n    postinstall_cmds='$RANLIB $lib'\n  fi\n  ;;\n\naix4* | aix5*)\n  if test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n    test \"$enable_shared\" = yes && enable_static=no\n  fi\n    ;;\nesac\nAC_MSG_RESULT([$enable_shared])\n\nAC_MSG_CHECKING([whether to build static libraries])\n# Make sure either enable_shared or enable_static is yes.\ntest \"$enable_shared\" = yes || enable_static=yes\nAC_MSG_RESULT([$enable_static])\n\nAC_LIBTOOL_CONFIG($1)\n\nAC_LANG_POP\nCC=\"$lt_save_CC\"\n])# AC_LIBTOOL_LANG_C_CONFIG\n\n\n# AC_LIBTOOL_LANG_CXX_CONFIG\n# --------------------------\n# Ensure that the configuration vars for the C compiler are\n# suitably defined.  Those variables are subsequently used by\n# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.\nAC_DEFUN([AC_LIBTOOL_LANG_CXX_CONFIG], [_LT_AC_LANG_CXX_CONFIG(CXX)])\nAC_DEFUN([_LT_AC_LANG_CXX_CONFIG],\n[AC_LANG_PUSH(C++)\nAC_REQUIRE([AC_PROG_CXX])\nAC_REQUIRE([_LT_AC_PROG_CXXCPP])\n\n_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_AC_TAGVAR(allow_undefined_flag, $1)=\n_LT_AC_TAGVAR(always_export_symbols, $1)=no\n_LT_AC_TAGVAR(archive_expsym_cmds, $1)=\n_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_AC_TAGVAR(hardcode_direct, $1)=no\n_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_AC_TAGVAR(hardcode_minus_L, $1)=no\n_LT_AC_TAGVAR(hardcode_automatic, $1)=no\n_LT_AC_TAGVAR(module_cmds, $1)=\n_LT_AC_TAGVAR(module_expsym_cmds, $1)=\n_LT_AC_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_AC_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_AC_TAGVAR(no_undefined_flag, $1)=\n_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Dependencies to place before and after the object being linked:\n_LT_AC_TAGVAR(predep_objects, $1)=\n_LT_AC_TAGVAR(postdep_objects, $1)=\n_LT_AC_TAGVAR(predeps, $1)=\n_LT_AC_TAGVAR(postdeps, $1)=\n_LT_AC_TAGVAR(compiler_lib_search_path, $1)=\n\n# Source file extension for C++ test sources.\nac_ext=cc\n\n# Object file extension for compiled C++ test sources.\nobjext=o\n_LT_AC_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\\n\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(int, char *[]) { return(0); }\\n'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_AC_SYS_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_LD=$LD\nlt_save_GCC=$GCC\nGCC=$GXX\nlt_save_with_gnu_ld=$with_gnu_ld\nlt_save_path_LD=$lt_cv_path_LD\nif test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n  lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\nelse\n  unset lt_cv_prog_gnu_ld\nfi\nif test -n \"${lt_cv_path_LDCXX+set}\"; then\n  lt_cv_path_LD=$lt_cv_path_LDCXX\nelse\n  unset lt_cv_path_LD\nfi\ntest -z \"${LDCXX+set}\" || LD=$LDCXX\nCC=${CXX-\"c++\"}\ncompiler=$CC\n_LT_AC_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n\n# We don't want -fno-exception wen compiling C++ code, so set the\n# no_builtin_flag separately\nif test \"$GXX\" = yes; then\n  _LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\nelse\n  _LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\nfi\n\nif test \"$GXX\" = yes; then\n  # Set up default GNU C++ configuration\n\n  AC_PROG_LD\n\n  # Check if GNU C++ uses GNU ld as the underlying linker, since the\n  # archiving commands below assume that GNU ld is being used.\n  if test \"$with_gnu_ld\" = yes; then\n    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'\n    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n    #     investigate it a little bit more. (MM)\n    wlarc='${wl}'\n\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if eval \"`$CC -print-prog-name=ld` --help 2>&1\" | \\\n\tgrep 'no-whole-archive' > /dev/null; then\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n    else\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    with_gnu_ld=no\n    wlarc=\n\n    # A generic and very simple default shared library creation\n    # command for GNU C++ for the case where it uses the native\n    # linker, instead of GNU ld.  If possible, this setting should\n    # overridden to take advantage of the native linker features on\n    # the platform it is being used on.\n    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n  fi\n\n  # Commands to make compiler produce verbose output that lists\n  # what \"hidden\" libraries, object files and flags are used when\n  # linking a shared library.\n  output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"\\-L\"'\n\nelse\n  GXX=no\n  with_gnu_ld=no\n  wlarc=\nfi\n\n# PORTME: fill in a description of your system's C++ link characteristics\nAC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\n_LT_AC_TAGVAR(ld_shlibs, $1)=yes\ncase $host_os in\n  aix3*)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  aix4* | aix5*)\n    if test \"$host_cpu\" = ia64; then\n      # On IA64, the linker does run time linking by default, so we don't\n      # have to do anything special.\n      aix_use_runtimelinking=no\n      exp_sym_flag='-Bexport'\n      no_entry_flag=\"\"\n    else\n      aix_use_runtimelinking=no\n\n      # Test if we are trying to use run time linking or normal\n      # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n      # need to do runtime linking.\n      case $host_os in aix4.[[23]]|aix4.[[23]].*|aix5*)\n\tfor ld_flag in $LDFLAGS; do\n\t  case $ld_flag in\n\t  *-brtl*)\n\t    aix_use_runtimelinking=yes\n\t    break\n\t    ;;\n\t  esac\n\tdone\n      esac\n\n      exp_sym_flag='-bexport'\n      no_entry_flag='-bnoentry'\n    fi\n\n    # When large executables or shared objects are built, AIX ld can\n    # have problems creating the table of contents.  If linking a library\n    # or program results in \"error TOC overflow\" add -mminimal-toc to\n    # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n    # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n    _LT_AC_TAGVAR(archive_cmds, $1)=''\n    _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n    _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=':'\n    _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n\n    if test \"$GXX\" = yes; then\n      case $host_os in aix4.[[012]]|aix4.[[012]].*)\n      # We only want to do this on AIX 4.2 and lower, the check\n      # below for broken collect2 doesn't work under 4.3+\n\tcollect2name=`${CC} -print-prog-name=collect2`\n\tif test -f \"$collect2name\" && \\\n\t   strings \"$collect2name\" | grep resolve_lib_name >/dev/null\n\tthen\n\t  # We have reworked collect2\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n\telse\n\t  # We have old collect2\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=\n\tfi\n      esac\n      shared_flag='-shared'\n      if test \"$aix_use_runtimelinking\" = yes; then\n\tshared_flag=\"$shared_flag \"'${wl}-G'\n      fi\n    else\n      # not using gcc\n      if test \"$host_cpu\" = ia64; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\tshared_flag='-G'\n      else\n\tif test \"$aix_use_runtimelinking\" = yes; then\n\t  shared_flag='${wl}-G'\n\telse\n\t  shared_flag='${wl}-bM:SRE'\n\tfi\n      fi\n    fi\n\n    # It seems that -bexpall does not export symbols beginning with\n    # underscore (_), so it is better to generate a list of symbols to export.\n    _LT_AC_TAGVAR(always_export_symbols, $1)=yes\n    if test \"$aix_use_runtimelinking\" = yes; then\n      # Warning - without using the other runtime loading flags (-brtl),\n      # -berok will link without error, but may produce a broken library.\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)='-berok'\n      # Determine the default libpath from the value encoded in an empty executable.\n      _LT_AC_SYS_LIBPATH_AIX\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC\"' -o $output_objdir/$soname $libobjs $deplibs $compiler_flags `if test \"x${allow_undefined_flag}\" != \"x\"; then echo \"${wl}${allow_undefined_flag}\"; else :; fi` '\"\\${wl}$no_entry_flag \\${wl}$exp_sym_flag:\\$export_symbols $shared_flag\"\n     else\n      if test \"$host_cpu\" = ia64; then\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$no_entry_flag \\${wl}$exp_sym_flag:\\$export_symbols\"\n      else\n\t# Determine the default libpath from the value encoded in an empty executable.\n\t_LT_AC_SYS_LIBPATH_AIX\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t# Warning - without using the other run time loading flags,\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_AC_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'\n\t# -bexpall does not export symbols beginning with underscore (_)\n\t_LT_AC_TAGVAR(always_export_symbols, $1)=yes\n\t# Exported symbols can be pulled into shared objects from archives\n\t_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=' '\n\t_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t# This is similar to how AIX traditionally builds it's shared libraries.\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs $compiler_flags ${wl}-bE:$export_symbols ${wl}-bnoentry${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n      fi\n    fi\n    ;;\n  chorus*)\n    case $cc_basename in\n      *)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n    esac\n    ;;\n\n\n  cygwin* | mingw* | pw32*)\n    # _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n    # as there is no search path for DLLs.\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n    _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n    _LT_AC_TAGVAR(always_export_symbols, $1)=no\n    _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\n    if $LD --help 2>&1 | grep 'auto-import' > /dev/null; then\n      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--image-base=0x10000000 ${wl}--out-implib,$lib'\n      # If the export-symbols file already is a .def file (1st line\n      # is EXPORTS), use it as is; otherwise, prepend...\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\tcp $export_symbols $output_objdir/$soname.def;\n      else\n\techo EXPORTS > $output_objdir/$soname.def;\n\tcat $export_symbols >> $output_objdir/$soname.def;\n      fi~\n      $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--image-base=0x10000000 ${wl}--out-implib,$lib'\n    else\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    fi\n  ;;\n      darwin* | rhapsody*)\n        case \"$host_os\" in\n        rhapsody* | darwin1.[[012]])\n         _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-undefined ${wl}suppress'\n         ;;\n       *) # Darwin 1.3 on\n         if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then\n           _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'\n         else\n           case ${MACOSX_DEPLOYMENT_TARGET} in\n             10.[[012]])\n               _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'\n               ;;\n             10.*)\n               _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-undefined ${wl}dynamic_lookup'\n               ;;\n           esac\n         fi\n         ;;\n        esac\n      _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_AC_TAGVAR(hardcode_direct, $1)=no\n      _LT_AC_TAGVAR(hardcode_automatic, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=''\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n\n    if test \"$GXX\" = yes ; then\n      lt_int_apple_cc_single_mod=no\n      output_verbose_link_cmd='echo'\n      if $CC -dumpspecs 2>&1 | $EGREP 'single_module' >/dev/null ; then\n       lt_int_apple_cc_single_mod=yes\n      fi\n      if test \"X$lt_int_apple_cc_single_mod\" = Xyes ; then\n       _LT_AC_TAGVAR(archive_cmds, $1)='$CC -dynamiclib -single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring'\n      else\n          _LT_AC_TAGVAR(archive_cmds, $1)='$CC -r -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs~$CC -dynamiclib $allow_undefined_flag -o $lib ${lib}-master.o $deplibs $compiler_flags -install_name $rpath/$soname $verstring'\n        fi\n        _LT_AC_TAGVAR(module_cmds, $1)='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'\n        # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin ld's\n          if test \"X$lt_int_apple_cc_single_mod\" = Xyes ; then\n            _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -dynamiclib -single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          else\n            _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -r -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs~$CC -dynamiclib $allow_undefined_flag -o $lib ${lib}-master.o $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          fi\n            _LT_AC_TAGVAR(module_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n      else\n      case $cc_basename in\n        xlc*)\n         output_verbose_link_cmd='echo'\n          _LT_AC_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj ${wl}-single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}`echo $rpath/$soname` $verstring'\n          _LT_AC_TAGVAR(module_cmds, $1)='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'\n          # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin ld's\n          _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -qmkshrobj ${wl}-single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}$rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          _LT_AC_TAGVAR(module_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          ;;\n       *)\n         _LT_AC_TAGVAR(ld_shlibs, $1)=no\n          ;;\n      esac\n      fi\n        ;;\n\n  dgux*)\n    case $cc_basename in\n      ec++*)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      ghcx*)\n\t# Green Hills C++ Compiler\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      *)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n    esac\n    ;;\n  freebsd2.*)\n    # C++ shared libraries reported to be fairly broken before switch to ELF\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  freebsd-elf*)\n    _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n    ;;\n  freebsd* | kfreebsd*-gnu | dragonfly*)\n    # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n    # conventions\n    _LT_AC_TAGVAR(ld_shlibs, $1)=yes\n    ;;\n  gnu*)\n    ;;\n  hpux9*)\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n    _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n    _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n    _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t# but as the default\n\t\t\t\t# location of the library.\n\n    case $cc_basename in\n    CC*)\n      # FIXME: insert proper C++ library support\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    aCC*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/$soname~$CC -b ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      #\n      # There doesn't appear to be a way to prevent this compiler from\n      # explicitly linking system object files so we need to strip them\n      # from the output so that they don't get included in the library\n      # dependencies.\n      output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | grep \"[[-]]L\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n      ;;\n    *)\n      if test \"$GXX\" = yes; then\n        _LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/$soname~$CC -shared -nostdlib -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      else\n        # FIXME: insert proper C++ library support\n        _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n    ;;\n  hpux10*|hpux11*)\n    if test $with_gnu_ld = no; then\n      case \"$host_cpu\" in\n      hppa*64*)\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='+b $libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n        ;;\n      ia64*)\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n        ;;\n      *)\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n        ;;\n      esac\n    fi\n    case \"$host_cpu\" in\n    hppa*64*)\n      _LT_AC_TAGVAR(hardcode_direct, $1)=no\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n    ia64*)\n      _LT_AC_TAGVAR(hardcode_direct, $1)=no\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t\t      # but as the default\n\t\t\t\t\t      # location of the library.\n      ;;\n    *)\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t\t      # but as the default\n\t\t\t\t\t      # location of the library.\n      ;;\n    esac\n\n    case $cc_basename in\n      CC*)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      aCC*)\n\tcase \"$host_cpu\" in\n\thppa*64*|ia64*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$LD -b +h $soname -o $lib $linker_flags $libobjs $deplibs'\n\t  ;;\n\t*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t  ;;\n\tesac\n\t# Commands to make compiler produce verbose output that lists\n\t# what \"hidden\" libraries, object files and flags are used when\n\t# linking a shared library.\n\t#\n\t# There doesn't appear to be a way to prevent this compiler from\n\t# explicitly linking system object files so we need to strip them\n\t# from the output so that they don't get included in the library\n\t# dependencies.\n\toutput_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | grep \"\\-L\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n\t;;\n      *)\n\tif test \"$GXX\" = yes; then\n\t  if test $with_gnu_ld = no; then\n\t    case \"$host_cpu\" in\n\t    ia64*|hppa*64*)\n\t      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -b +h $soname -o $lib $linker_flags $libobjs $deplibs'\n\t      ;;\n\t    *)\n\t      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      ;;\n\t    esac\n\t  fi\n\telse\n\t  # FIXME: insert proper C++ library support\n\t  _LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n    esac\n    ;;\n  irix5* | irix6*)\n    case $cc_basename in\n      CC*)\n\t# SGI C++\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n\n\t# Archives containing C++ object files must be created using\n\t# \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t# necessary to make sure instantiated templates are included\n\t# in the archive.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t;;\n      *)\n\tif test \"$GXX\" = yes; then\n\t  if test \"$with_gnu_ld\" = no; then\n\t    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t  else\n\t    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` -o $lib'\n\t  fi\n\tfi\n\t_LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n\t;;\n    esac\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n    _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n    ;;\n  linux*)\n    case $cc_basename in\n      KCC*)\n\t# Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t# KCC will only create a shared library if the output file\n\t# ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t# to its proper name (with version) after linking.\n\t_LT_AC_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib ${wl}-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t# Commands to make compiler produce verbose output that lists\n\t# what \"hidden\" libraries, object files and flags are used when\n\t# linking a shared library.\n\t#\n\t# There doesn't appear to be a way to prevent this compiler from\n\t# explicitly linking system object files so we need to strip them\n\t# from the output so that they don't get included in the library\n\t# dependencies.\n\toutput_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | grep \"ld\"`; rm -f libconftest$shared_ext; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath,$libdir'\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\n\t# Archives containing C++ object files must be created using\n\t# \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\t;;\n      icpc*)\n\t# Intel C++\n\twith_gnu_ld=yes\n\t# version 8.0 and above of icpc choke on multiply defined symbols\n\t# if we add $predep_objects and $postdep_objects, however 7.1 and\n\t# earlier do not add the objects themselves.\n\tcase `$CC -V 2>&1` in\n\t*\"Version 7.\"*)\n  \t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n  \t  _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t  ;;\n\t*)  # Version 8.0 or newer\n\t  tmp_idyn=\n\t  case $host_cpu in\n\t    ia64*) tmp_idyn=' -i_dynamic';;\n\t  esac\n  \t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t  _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t  ;;\n\tesac\n\t_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t_LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t;;\n      pgCC*)\n        # Portland Group C++ compiler\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n  \t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=''\n        ;;\n      cxx*)\n\t# Compaq C++\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname  -o $lib ${wl}-retain-symbols-file $wl$export_symbols'\n\n\trunpath_var=LD_RUN_PATH\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t# Commands to make compiler produce verbose output that lists\n\t# what \"hidden\" libraries, object files and flags are used when\n\t# linking a shared library.\n\t#\n\t# There doesn't appear to be a way to prevent this compiler from\n\t# explicitly linking system object files so we need to strip them\n\t# from the output so that they don't get included in the library\n\t# dependencies.\n\toutput_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"ld\"`; templist=`echo $templist | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n\t;;\n    esac\n    ;;\n  lynxos*)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  m88k*)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  mvs*)\n    case $cc_basename in\n      cxx*)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      *)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n    esac\n    ;;\n  netbsd*)\n    if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n      wlarc=\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n    fi\n    # Workaround some broken pre-1.5 toolchains\n    output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n    ;;\n  openbsd2*)\n    # C++ shared libraries are fairly broken\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  openbsd*)\n    _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n    _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n    if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file,$export_symbols -o $lib'\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n    fi\n    output_verbose_link_cmd='echo'\n    ;;\n  osf3*)\n    case $cc_basename in\n      KCC*)\n\t# Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t# KCC will only create a shared library if the output file\n\t# ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t# to its proper name (with version) after linking.\n\t_LT_AC_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t# Archives containing C++ object files must be created using\n\t# \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\n\t;;\n      RCC*)\n\t# Rational C++ 2.4.1\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      cxx*)\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $soname `test -n \"$verstring\" && echo ${wl}-set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t# Commands to make compiler produce verbose output that lists\n\t# what \"hidden\" libraries, object files and flags are used when\n\t# linking a shared library.\n\t#\n\t# There doesn't appear to be a way to prevent this compiler from\n\t# explicitly linking system object files so we need to strip them\n\t# from the output so that they don't get included in the library\n\t# dependencies.\n\toutput_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"ld\" | grep -v \"ld:\"`; templist=`echo $templist | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n\t;;\n      *)\n\tif test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t  _LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t  # Commands to make compiler produce verbose output that lists\n\t  # what \"hidden\" libraries, object files and flags are used when\n\t  # linking a shared library.\n\t  output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"\\-L\"'\n\n\telse\n\t  # FIXME: insert proper C++ library support\n\t  _LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n    esac\n    ;;\n  osf4* | osf5*)\n    case $cc_basename in\n      KCC*)\n\t# Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t# KCC will only create a shared library if the output file\n\t# ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t# to its proper name (with version) after linking.\n\t_LT_AC_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t# Archives containing C++ object files must be created using\n\t# the KAI C++ compiler.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs'\n\t;;\n      RCC*)\n\t# Rational C++ 2.4.1\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      cxx*)\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n\t  echo \"-hidden\">> $lib.exp~\n\t  $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname -Wl,-input -Wl,$lib.exp  `test -n \"$verstring\" && echo -set_version\t$verstring` -update_registry ${output_objdir}/so_locations -o $lib~\n\t  $rm $lib.exp'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t# Commands to make compiler produce verbose output that lists\n\t# what \"hidden\" libraries, object files and flags are used when\n\t# linking a shared library.\n\t#\n\t# There doesn't appear to be a way to prevent this compiler from\n\t# explicitly linking system object files so we need to strip them\n\t# from the output so that they don't get included in the library\n\t# dependencies.\n\toutput_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"ld\" | grep -v \"ld:\"`; templist=`echo $templist | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n\t;;\n      *)\n\tif test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t  _LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t  # Commands to make compiler produce verbose output that lists\n\t  # what \"hidden\" libraries, object files and flags are used when\n\t  # linking a shared library.\n\t  output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"\\-L\"'\n\n\telse\n\t  # FIXME: insert proper C++ library support\n\t  _LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n    esac\n    ;;\n  psos*)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  sco*)\n    _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n    case $cc_basename in\n      CC*)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      *)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n    esac\n    ;;\n  sunos4*)\n    case $cc_basename in\n      CC*)\n\t# Sun C++ 4.x\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      lcc*)\n\t# Lucid\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      *)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n    esac\n    ;;\n  solaris*)\n    case $cc_basename in\n      CC*)\n\t# Sun C++ 4.2, 5.x and Centerline C++\n\t_LT_AC_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag} -nolib -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n\t$CC -G${allow_undefined_flag} -nolib ${wl}-M ${wl}$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$rm $lib.exp'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n\tcase $host_os in\n\t  solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t  *)\n\t    # The C++ compiler is used as linker so we must use $wl\n\t    # flag to pass the commands to the underlying system\n\t    # linker. We must also pass each convience library through\n\t    # to the system linker between allextract/defaultextract.\n\t    # The C++ compiler will combine linker options so we\n\t    # cannot just pass the convience library names through\n\t    # without $wl.\n\t    # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t    _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract`for conv in $convenience\\\"\\\"; do test -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; $echo \\\"$new_convenience\\\"` ${wl}-z ${wl}defaultextract'\n\t    ;;\n\tesac\n\t_LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n\n\t# Commands to make compiler produce verbose output that lists\n\t# what \"hidden\" libraries, object files and flags are used when\n\t# linking a shared library.\n\t#\n\t# There doesn't appear to be a way to prevent this compiler from\n\t# explicitly linking system object files so we need to strip them\n\t# from the output so that they don't get included in the library\n\t# dependencies.\n\toutput_verbose_link_cmd='templist=`$CC -G $CFLAGS -v conftest.$objext 2>&1 | grep \"\\-[[LR]]\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n\n\t# Archives containing C++ object files must be created using\n\t# \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t# necessary to make sure instantiated templates are included\n\t# in the archive.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t;;\n      gcx*)\n\t# Green Hills C++ Compiler\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\n\t# The C++ compiler must be used to create the archive.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t;;\n      *)\n\t# GNU C++ compiler with Solaris linker\n\tif test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t  _LT_AC_TAGVAR(no_undefined_flag, $1)=' ${wl}-z ${wl}defs'\n\t  if $CC --version | grep -v '^2\\.7' > /dev/null; then\n\t    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\t    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n\t\t$CC -shared -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$rm $lib.exp'\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    output_verbose_link_cmd=\"$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \\\"\\-L\\\"\"\n\t  else\n\t    # g++ 2.7 appears to require `-G' NOT `-shared' on this\n\t    # platform.\n\t    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\t    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n\t\t$CC -G -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$rm $lib.exp'\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    output_verbose_link_cmd=\"$CC -G $CFLAGS -v conftest.$objext 2>&1 | grep \\\"\\-L\\\"\"\n\t  fi\n\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $wl$libdir'\n\tfi\n\t;;\n    esac\n    ;;\n  sysv5OpenUNIX8* | sysv5UnixWare7* | sysv5uw[[78]]* | unixware7*)\n    _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n    ;;\n  tandem*)\n    case $cc_basename in\n      NCC*)\n\t# NonStop-UX NCC 3.20\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      *)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n    esac\n    ;;\n  vxworks*)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  *)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\nesac\nAC_MSG_RESULT([$_LT_AC_TAGVAR(ld_shlibs, $1)])\ntest \"$_LT_AC_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\n_LT_AC_TAGVAR(GCC, $1)=\"$GXX\"\n_LT_AC_TAGVAR(LD, $1)=\"$LD\"\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nAC_LIBTOOL_POSTDEP_PREDEP($1)\nAC_LIBTOOL_PROG_COMPILER_PIC($1)\nAC_LIBTOOL_PROG_CC_C_O($1)\nAC_LIBTOOL_SYS_HARD_LINK_LOCKS($1)\nAC_LIBTOOL_PROG_LD_SHLIBS($1)\nAC_LIBTOOL_SYS_DYNAMIC_LINKER($1)\nAC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH($1)\nAC_LIBTOOL_SYS_LIB_STRIP\nAC_LIBTOOL_DLOPEN_SELF($1)\n\nAC_LIBTOOL_CONFIG($1)\n\nAC_LANG_POP\nCC=$lt_save_CC\nLDCXX=$LD\nLD=$lt_save_LD\nGCC=$lt_save_GCC\nwith_gnu_ldcxx=$with_gnu_ld\nwith_gnu_ld=$lt_save_with_gnu_ld\nlt_cv_path_LDCXX=$lt_cv_path_LD\nlt_cv_path_LD=$lt_save_path_LD\nlt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\nlt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\n])# AC_LIBTOOL_LANG_CXX_CONFIG\n\n# AC_LIBTOOL_POSTDEP_PREDEP([TAGNAME])\n# ------------------------\n# Figure out \"hidden\" library dependencies from verbose\n# compiler output when linking a shared library.\n# Parse the compiler output and extract the necessary\n# objects, libraries and library flags.\nAC_DEFUN([AC_LIBTOOL_POSTDEP_PREDEP],[\ndnl we can't use the lt_simple_compile_test_code here,\ndnl because it contains code intended for an executable,\ndnl not a library.  It's possible we should let each\ndnl tag define a new lt_????_link_test_code variable,\ndnl but it's only used here...\nifelse([$1],[],[cat > conftest.$ac_ext <<EOF\nint a;\nvoid foo (void) { a = 0; }\nEOF\n],[$1],[CXX],[cat > conftest.$ac_ext <<EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\nEOF\n],[$1],[F77],[cat > conftest.$ac_ext <<EOF\n      subroutine foo\n      implicit none\n      integer*4 a\n      a=0\n      return\n      end\nEOF\n],[$1],[GCJ],[cat > conftest.$ac_ext <<EOF\npublic class foo {\n  private int a;\n  public void bar (void) {\n    a = 0;\n  }\n};\nEOF\n])\ndnl Parse the compiler output and extract the necessary\ndnl objects, libraries and library flags.\nif AC_TRY_EVAL(ac_compile); then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  # The `*' in the case matches for architectures that use `case' in\n  # $output_verbose_cmd can trigger glob expansion during the loop\n  # eval without this substitution.\n  output_verbose_link_cmd=\"`$echo \\\"X$output_verbose_link_cmd\\\" | $Xsed -e \\\"$no_glob_subst\\\"`\"\n\n  for p in `eval $output_verbose_link_cmd`; do\n    case $p in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test $p = \"-L\" \\\n\t  || test $p = \"-R\"; then\n\t prev=$p\n\t continue\n       else\n\t prev=\n       fi\n\n       if test \"$pre_test_object_deps_done\" = no; then\n\t case $p in\n\t -L* | -R*)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$_LT_AC_TAGVAR(compiler_lib_search_path, $1)\"; then\n\t     _LT_AC_TAGVAR(compiler_lib_search_path, $1)=\"${prev}${p}\"\n\t   else\n\t     _LT_AC_TAGVAR(compiler_lib_search_path, $1)=\"${_LT_AC_TAGVAR(compiler_lib_search_path, $1)} ${prev}${p}\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$_LT_AC_TAGVAR(postdeps, $1)\"; then\n\t   _LT_AC_TAGVAR(postdeps, $1)=\"${prev}${p}\"\n\t else\n\t   _LT_AC_TAGVAR(postdeps, $1)=\"${_LT_AC_TAGVAR(postdeps, $1)} ${prev}${p}\"\n\t fi\n       fi\n       ;;\n\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test \"$pre_test_object_deps_done\" = no; then\n\t if test -z \"$_LT_AC_TAGVAR(predep_objects, $1)\"; then\n\t   _LT_AC_TAGVAR(predep_objects, $1)=\"$p\"\n\t else\n\t   _LT_AC_TAGVAR(predep_objects, $1)=\"$_LT_AC_TAGVAR(predep_objects, $1) $p\"\n\t fi\n       else\n\t if test -z \"$_LT_AC_TAGVAR(postdep_objects, $1)\"; then\n\t   _LT_AC_TAGVAR(postdep_objects, $1)=\"$p\"\n\t else\n\t   _LT_AC_TAGVAR(postdep_objects, $1)=\"$_LT_AC_TAGVAR(postdep_objects, $1) $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling $1 test program\"\nfi\n\n$rm -f confest.$objext\n\ncase \" $_LT_AC_TAGVAR(postdeps, $1) \" in\n*\" -lc \"*) _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no ;;\nesac\n])# AC_LIBTOOL_POSTDEP_PREDEP\n\n# AC_LIBTOOL_LANG_F77_CONFIG\n# ------------------------\n# Ensure that the configuration vars for the C compiler are\n# suitably defined.  Those variables are subsequently used by\n# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.\nAC_DEFUN([AC_LIBTOOL_LANG_F77_CONFIG], [_LT_AC_LANG_F77_CONFIG(F77)])\nAC_DEFUN([_LT_AC_LANG_F77_CONFIG],\n[AC_REQUIRE([AC_PROG_F77])\nAC_LANG_PUSH(Fortran 77)\n\n_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_AC_TAGVAR(allow_undefined_flag, $1)=\n_LT_AC_TAGVAR(always_export_symbols, $1)=no\n_LT_AC_TAGVAR(archive_expsym_cmds, $1)=\n_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_AC_TAGVAR(hardcode_direct, $1)=no\n_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_AC_TAGVAR(hardcode_minus_L, $1)=no\n_LT_AC_TAGVAR(hardcode_automatic, $1)=no\n_LT_AC_TAGVAR(module_cmds, $1)=\n_LT_AC_TAGVAR(module_expsym_cmds, $1)=\n_LT_AC_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_AC_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_AC_TAGVAR(no_undefined_flag, $1)=\n_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for f77 test sources.\nac_ext=f\n\n# Object file extension for compiled f77 test sources.\nobjext=o\n_LT_AC_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"      subroutine t\\n      return\\n      end\\n\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=\"      program t\\n      end\\n\"\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_AC_SYS_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nCC=${F77-\"f77\"}\ncompiler=$CC\n_LT_AC_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n\nAC_MSG_CHECKING([if libtool supports shared libraries])\nAC_MSG_RESULT([$can_build_shared])\n\nAC_MSG_CHECKING([whether to build shared libraries])\ntest \"$can_build_shared\" = \"no\" && enable_shared=no\n\n# On AIX, shared libraries and static libraries use the same namespace, and\n# are all built from PIC.\ncase \"$host_os\" in\naix3*)\n  test \"$enable_shared\" = yes && enable_static=no\n  if test -n \"$RANLIB\"; then\n    archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n    postinstall_cmds='$RANLIB $lib'\n  fi\n  ;;\naix4* | aix5*)\n  if test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n    test \"$enable_shared\" = yes && enable_static=no\n  fi\n  ;;\nesac\nAC_MSG_RESULT([$enable_shared])\n\nAC_MSG_CHECKING([whether to build static libraries])\n# Make sure either enable_shared or enable_static is yes.\ntest \"$enable_shared\" = yes || enable_static=yes\nAC_MSG_RESULT([$enable_static])\n\ntest \"$_LT_AC_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\n_LT_AC_TAGVAR(GCC, $1)=\"$G77\"\n_LT_AC_TAGVAR(LD, $1)=\"$LD\"\n\nAC_LIBTOOL_PROG_COMPILER_PIC($1)\nAC_LIBTOOL_PROG_CC_C_O($1)\nAC_LIBTOOL_SYS_HARD_LINK_LOCKS($1)\nAC_LIBTOOL_PROG_LD_SHLIBS($1)\nAC_LIBTOOL_SYS_DYNAMIC_LINKER($1)\nAC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH($1)\nAC_LIBTOOL_SYS_LIB_STRIP\n\n\nAC_LIBTOOL_CONFIG($1)\n\nAC_LANG_POP\nCC=\"$lt_save_CC\"\n])# AC_LIBTOOL_LANG_F77_CONFIG\n\n\n# AC_LIBTOOL_LANG_GCJ_CONFIG\n# --------------------------\n# Ensure that the configuration vars for the C compiler are\n# suitably defined.  Those variables are subsequently used by\n# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.\nAC_DEFUN([AC_LIBTOOL_LANG_GCJ_CONFIG], [_LT_AC_LANG_GCJ_CONFIG(GCJ)])\nAC_DEFUN([_LT_AC_LANG_GCJ_CONFIG],\n[AC_LANG_SAVE\n\n# Source file extension for Java test sources.\nac_ext=java\n\n# Object file extension for compiled Java test sources.\nobjext=o\n_LT_AC_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"class foo {}\\n\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }\\n'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_AC_SYS_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nCC=${GCJ-\"gcj\"}\ncompiler=$CC\n_LT_AC_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n\n# GCJ did not exist at the time GCC didn't implicitly link libc in.\n_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_AC_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nAC_LIBTOOL_PROG_COMPILER_NO_RTTI($1)\nAC_LIBTOOL_PROG_COMPILER_PIC($1)\nAC_LIBTOOL_PROG_CC_C_O($1)\nAC_LIBTOOL_SYS_HARD_LINK_LOCKS($1)\nAC_LIBTOOL_PROG_LD_SHLIBS($1)\nAC_LIBTOOL_SYS_DYNAMIC_LINKER($1)\nAC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH($1)\nAC_LIBTOOL_SYS_LIB_STRIP\nAC_LIBTOOL_DLOPEN_SELF($1)\n\nAC_LIBTOOL_CONFIG($1)\n\nAC_LANG_RESTORE\nCC=\"$lt_save_CC\"\n])# AC_LIBTOOL_LANG_GCJ_CONFIG\n\n\n# AC_LIBTOOL_LANG_RC_CONFIG\n# --------------------------\n# Ensure that the configuration vars for the Windows resource compiler are\n# suitably defined.  Those variables are subsequently used by\n# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.\nAC_DEFUN([AC_LIBTOOL_LANG_RC_CONFIG], [_LT_AC_LANG_RC_CONFIG(RC)])\nAC_DEFUN([_LT_AC_LANG_RC_CONFIG],\n[AC_LANG_SAVE\n\n# Source file extension for RC test sources.\nac_ext=rc\n\n# Object file extension for compiled RC test sources.\nobjext=o\n_LT_AC_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code='sample MENU { MENUITEM \"&Soup\", 100, CHECKED }\\n'\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=\"$lt_simple_compile_test_code\"\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_AC_SYS_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nCC=${RC-\"windres\"}\ncompiler=$CC\n_LT_AC_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n\nAC_LIBTOOL_CONFIG($1)\n\nAC_LANG_RESTORE\nCC=\"$lt_save_CC\"\n])# AC_LIBTOOL_LANG_RC_CONFIG\n\n\n# AC_LIBTOOL_CONFIG([TAGNAME])\n# ----------------------------\n# If TAGNAME is not passed, then create an initial libtool script\n# with a default configuration from the untagged config vars.  Otherwise\n# add code to config.status for appending the configuration named by\n# TAGNAME from the matching tagged config vars.\nAC_DEFUN([AC_LIBTOOL_CONFIG],\n[# The else clause should only fire when bootstrapping the\n# libtool distribution, otherwise you forgot to ship ltmain.sh\n# with your package, and you will get complaints that there are\n# no rules to generate ltmain.sh.\nif test -f \"$ltmain\"; then\n  # See if we are running on zsh, and set the options which allow our commands through\n  # without removal of \\ escapes.\n  if test -n \"${ZSH_VERSION+set}\" ; then\n    setopt NO_GLOB_SUBST\n  fi\n  # Now quote all the things that may contain metacharacters while being\n  # careful not to overquote the AC_SUBSTed values.  We take copies of the\n  # variables and quote the copies for generation of the libtool script.\n  for var in echo old_CC old_CFLAGS AR AR_FLAGS EGREP RANLIB LN_S LTCC NM \\\n    SED SHELL STRIP \\\n    libname_spec library_names_spec soname_spec extract_expsyms_cmds \\\n    old_striplib striplib file_magic_cmd finish_cmds finish_eval \\\n    deplibs_check_method reload_flag reload_cmds need_locks \\\n    lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl \\\n    lt_cv_sys_global_symbol_to_c_name_address \\\n    sys_lib_search_path_spec sys_lib_dlsearch_path_spec \\\n    old_postinstall_cmds old_postuninstall_cmds \\\n    _LT_AC_TAGVAR(compiler, $1) \\\n    _LT_AC_TAGVAR(CC, $1) \\\n    _LT_AC_TAGVAR(LD, $1) \\\n    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1) \\\n    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1) \\\n    _LT_AC_TAGVAR(lt_prog_compiler_static, $1) \\\n    _LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) \\\n    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1) \\\n    _LT_AC_TAGVAR(thread_safe_flag_spec, $1) \\\n    _LT_AC_TAGVAR(whole_archive_flag_spec, $1) \\\n    _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1) \\\n    _LT_AC_TAGVAR(old_archive_cmds, $1) \\\n    _LT_AC_TAGVAR(old_archive_from_new_cmds, $1) \\\n    _LT_AC_TAGVAR(predep_objects, $1) \\\n    _LT_AC_TAGVAR(postdep_objects, $1) \\\n    _LT_AC_TAGVAR(predeps, $1) \\\n    _LT_AC_TAGVAR(postdeps, $1) \\\n    _LT_AC_TAGVAR(compiler_lib_search_path, $1) \\\n    _LT_AC_TAGVAR(archive_cmds, $1) \\\n    _LT_AC_TAGVAR(archive_expsym_cmds, $1) \\\n    _LT_AC_TAGVAR(postinstall_cmds, $1) \\\n    _LT_AC_TAGVAR(postuninstall_cmds, $1) \\\n    _LT_AC_TAGVAR(old_archive_from_expsyms_cmds, $1) \\\n    _LT_AC_TAGVAR(allow_undefined_flag, $1) \\\n    _LT_AC_TAGVAR(no_undefined_flag, $1) \\\n    _LT_AC_TAGVAR(export_symbols_cmds, $1) \\\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1) \\\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1) \\\n    _LT_AC_TAGVAR(hardcode_libdir_separator, $1) \\\n    _LT_AC_TAGVAR(hardcode_automatic, $1) \\\n    _LT_AC_TAGVAR(module_cmds, $1) \\\n    _LT_AC_TAGVAR(module_expsym_cmds, $1) \\\n    _LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1) \\\n    _LT_AC_TAGVAR(exclude_expsyms, $1) \\\n    _LT_AC_TAGVAR(include_expsyms, $1); do\n\n    case $var in\n    _LT_AC_TAGVAR(old_archive_cmds, $1) | \\\n    _LT_AC_TAGVAR(old_archive_from_new_cmds, $1) | \\\n    _LT_AC_TAGVAR(archive_cmds, $1) | \\\n    _LT_AC_TAGVAR(archive_expsym_cmds, $1) | \\\n    _LT_AC_TAGVAR(module_cmds, $1) | \\\n    _LT_AC_TAGVAR(module_expsym_cmds, $1) | \\\n    _LT_AC_TAGVAR(old_archive_from_expsyms_cmds, $1) | \\\n    _LT_AC_TAGVAR(export_symbols_cmds, $1) | \\\n    extract_expsyms_cmds | reload_cmds | finish_cmds | \\\n    postinstall_cmds | postuninstall_cmds | \\\n    old_postinstall_cmds | old_postuninstall_cmds | \\\n    sys_lib_search_path_spec | sys_lib_dlsearch_path_spec)\n      # Double-quote double-evaled strings.\n      eval \"lt_$var=\\\\\\\"\\`\\$echo \\\"X\\$$var\\\" | \\$Xsed -e \\\"\\$double_quote_subst\\\" -e \\\"\\$sed_quote_subst\\\" -e \\\"\\$delay_variable_subst\\\"\\`\\\\\\\"\"\n      ;;\n    *)\n      eval \"lt_$var=\\\\\\\"\\`\\$echo \\\"X\\$$var\\\" | \\$Xsed -e \\\"\\$sed_quote_subst\\\"\\`\\\\\\\"\"\n      ;;\n    esac\n  done\n\n  case $lt_echo in\n  *'\\[$]0 --fallback-echo\"')\n    lt_echo=`$echo \"X$lt_echo\" | $Xsed -e 's/\\\\\\\\\\\\\\[$]0 --fallback-echo\"[$]/[$]0 --fallback-echo\"/'`\n    ;;\n  esac\n\nifelse([$1], [],\n  [cfgfile=\"${ofile}T\"\n  trap \"$rm \\\"$cfgfile\\\"; exit 1\" 1 2 15\n  $rm -f \"$cfgfile\"\n  AC_MSG_NOTICE([creating $ofile])],\n  [cfgfile=\"$ofile\"])\n\n  cat <<__EOF__ >> \"$cfgfile\"\nifelse([$1], [],\n[#! $SHELL\n\n# `$echo \"$cfgfile\" | sed 's%^.*/%%'` - Provide generalized library-building support services.\n# Generated automatically by $PROGRAM (GNU $PACKAGE $VERSION$TIMESTAMP)\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n#\n# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001\n# Free Software Foundation, Inc.\n#\n# This file is part of GNU Libtool:\n# Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# A sed program that does not truncate output.\nSED=$lt_SED\n\n# Sed that helps us avoid accidentally triggering echo(1) options like -n.\nXsed=\"$SED -e 1s/^X//\"\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n# The names of the tagged configurations supported by this script.\navailable_tags=\n\n# ### BEGIN LIBTOOL CONFIG],\n[# ### BEGIN LIBTOOL TAG CONFIG: $tagname])\n\n# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:\n\n# Shell to use when invoking shell scripts.\nSHELL=$lt_SHELL\n\n# Whether or not to build shared libraries.\nbuild_libtool_libs=$enable_shared\n\n# Whether or not to build static libraries.\nbuild_old_libs=$enable_static\n\n# Whether or not to add -lc for building shared libraries.\nbuild_libtool_need_lc=$_LT_AC_TAGVAR(archive_cmds_need_lc, $1)\n\n# Whether or not to disallow shared libs when runtime libs are static\nallow_libtool_libs_with_static_runtimes=$_LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)\n\n# Whether or not to optimize for fast installation.\nfast_install=$enable_fast_install\n\n# The host system.\nhost_alias=$host_alias\nhost=$host\nhost_os=$host_os\n\n# The build system.\nbuild_alias=$build_alias\nbuild=$build\nbuild_os=$build_os\n\n# An echo program that does not interpret backslashes.\necho=$lt_echo\n\n# The archiver.\nAR=$lt_AR\nAR_FLAGS=$lt_AR_FLAGS\n\n# A C compiler.\nLTCC=$lt_LTCC\n\n# A language-specific compiler.\nCC=$lt_[]_LT_AC_TAGVAR(compiler, $1)\n\n# Is the compiler the GNU C compiler?\nwith_gcc=$_LT_AC_TAGVAR(GCC, $1)\n\n# An ERE matcher.\nEGREP=$lt_EGREP\n\n# The linker used to build libraries.\nLD=$lt_[]_LT_AC_TAGVAR(LD, $1)\n\n# Whether we need hard or soft links.\nLN_S=$lt_LN_S\n\n# A BSD-compatible nm program.\nNM=$lt_NM\n\n# A symbol stripping program\nSTRIP=$lt_STRIP\n\n# Used to examine libraries when file_magic_cmd begins \"file\"\nMAGIC_CMD=$MAGIC_CMD\n\n# Used on cygwin: DLL creation program.\nDLLTOOL=\"$DLLTOOL\"\n\n# Used on cygwin: object dumper.\nOBJDUMP=\"$OBJDUMP\"\n\n# Used on cygwin: assembler.\nAS=\"$AS\"\n\n# The name of the directory that contains temporary libtool files.\nobjdir=$objdir\n\n# How to create reloadable object files.\nreload_flag=$lt_reload_flag\nreload_cmds=$lt_reload_cmds\n\n# How to pass a linker flag through the compiler.\nwl=$lt_[]_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)\n\n# Object file suffix (normally \"o\").\nobjext=\"$ac_objext\"\n\n# Old archive suffix (normally \"a\").\nlibext=\"$libext\"\n\n# Shared library suffix (normally \".so\").\nshrext_cmds='$shrext_cmds'\n\n# Executable file suffix (normally \"\").\nexeext=\"$exeext\"\n\n# Additional compiler flags for building library objects.\npic_flag=$lt_[]_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)\npic_mode=$pic_mode\n\n# What is the maximum length of a command?\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n\n# Does compiler simultaneously support -c and -o options?\ncompiler_c_o=$lt_[]_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)\n\n# Must we lock files when doing compilation?\nneed_locks=$lt_need_locks\n\n# Do we need the lib prefix for modules?\nneed_lib_prefix=$need_lib_prefix\n\n# Do we need a version for libraries?\nneed_version=$need_version\n\n# Whether dlopen is supported.\ndlopen_support=$enable_dlopen\n\n# Whether dlopen of programs is supported.\ndlopen_self=$enable_dlopen_self\n\n# Whether dlopen of statically linked programs is supported.\ndlopen_self_static=$enable_dlopen_self_static\n\n# Compiler flag to prevent dynamic linking.\nlink_static_flag=$lt_[]_LT_AC_TAGVAR(lt_prog_compiler_static, $1)\n\n# Compiler flag to turn off builtin functions.\nno_builtin_flag=$lt_[]_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\n\n# Compiler flag to allow reflexive dlopens.\nexport_dynamic_flag_spec=$lt_[]_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)\n\n# Compiler flag to generate shared objects directly from archives.\nwhole_archive_flag_spec=$lt_[]_LT_AC_TAGVAR(whole_archive_flag_spec, $1)\n\n# Compiler flag to generate thread-safe objects.\nthread_safe_flag_spec=$lt_[]_LT_AC_TAGVAR(thread_safe_flag_spec, $1)\n\n# Library versioning type.\nversion_type=$version_type\n\n# Format of library name prefix.\nlibname_spec=$lt_libname_spec\n\n# List of archive names.  First name is the real one, the rest are links.\n# The last name is the one that the linker finds with -lNAME.\nlibrary_names_spec=$lt_library_names_spec\n\n# The coded name of the library, if different from the real name.\nsoname_spec=$lt_soname_spec\n\n# Commands used to build and install an old-style archive.\nRANLIB=$lt_RANLIB\nold_archive_cmds=$lt_[]_LT_AC_TAGVAR(old_archive_cmds, $1)\nold_postinstall_cmds=$lt_old_postinstall_cmds\nold_postuninstall_cmds=$lt_old_postuninstall_cmds\n\n# Create an old-style archive from a shared archive.\nold_archive_from_new_cmds=$lt_[]_LT_AC_TAGVAR(old_archive_from_new_cmds, $1)\n\n# Create a temporary old-style archive to link instead of a shared archive.\nold_archive_from_expsyms_cmds=$lt_[]_LT_AC_TAGVAR(old_archive_from_expsyms_cmds, $1)\n\n# Commands used to build and install a shared archive.\narchive_cmds=$lt_[]_LT_AC_TAGVAR(archive_cmds, $1)\narchive_expsym_cmds=$lt_[]_LT_AC_TAGVAR(archive_expsym_cmds, $1)\npostinstall_cmds=$lt_postinstall_cmds\npostuninstall_cmds=$lt_postuninstall_cmds\n\n# Commands used to build a loadable module (assumed same as above if empty)\nmodule_cmds=$lt_[]_LT_AC_TAGVAR(module_cmds, $1)\nmodule_expsym_cmds=$lt_[]_LT_AC_TAGVAR(module_expsym_cmds, $1)\n\n# Commands to strip libraries.\nold_striplib=$lt_old_striplib\nstriplib=$lt_striplib\n\n# Dependencies to place before the objects being linked to create a\n# shared library.\npredep_objects=$lt_[]_LT_AC_TAGVAR(predep_objects, $1)\n\n# Dependencies to place after the objects being linked to create a\n# shared library.\npostdep_objects=$lt_[]_LT_AC_TAGVAR(postdep_objects, $1)\n\n# Dependencies to place before the objects being linked to create a\n# shared library.\npredeps=$lt_[]_LT_AC_TAGVAR(predeps, $1)\n\n# Dependencies to place after the objects being linked to create a\n# shared library.\npostdeps=$lt_[]_LT_AC_TAGVAR(postdeps, $1)\n\n# The library search path used internally by the compiler when linking\n# a shared library.\ncompiler_lib_search_path=$lt_[]_LT_AC_TAGVAR(compiler_lib_search_path, $1)\n\n# Method to check whether dependent libraries are shared objects.\ndeplibs_check_method=$lt_deplibs_check_method\n\n# Command to use when deplibs_check_method == file_magic.\nfile_magic_cmd=$lt_file_magic_cmd\n\n# Flag that allows shared libraries with undefined symbols to be built.\nallow_undefined_flag=$lt_[]_LT_AC_TAGVAR(allow_undefined_flag, $1)\n\n# Flag that forces no undefined symbols.\nno_undefined_flag=$lt_[]_LT_AC_TAGVAR(no_undefined_flag, $1)\n\n# Commands used to finish a libtool library installation in a directory.\nfinish_cmds=$lt_finish_cmds\n\n# Same as above, but a single script fragment to be evaled but not shown.\nfinish_eval=$lt_finish_eval\n\n# Take the output of nm and produce a listing of raw symbols and C names.\nglobal_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe\n\n# Transform the output of nm in a proper C declaration\nglobal_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl\n\n# Transform the output of nm in a C name address pair\nglobal_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address\n\n# This is the shared library runtime path variable.\nrunpath_var=$runpath_var\n\n# This is the shared library path variable.\nshlibpath_var=$shlibpath_var\n\n# Is shlibpath searched before the hard-coded library search path?\nshlibpath_overrides_runpath=$shlibpath_overrides_runpath\n\n# How to hardcode a shared library path into an executable.\nhardcode_action=$_LT_AC_TAGVAR(hardcode_action, $1)\n\n# Whether we should hardcode library paths into libraries.\nhardcode_into_libs=$hardcode_into_libs\n\n# Flag to hardcode \\$libdir into a binary during linking.\n# This must work even if \\$libdir does not exist.\nhardcode_libdir_flag_spec=$lt_[]_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)\n\n# If ld is used when linking, flag to hardcode \\$libdir into\n# a binary during linking. This must work even if \\$libdir does\n# not exist.\nhardcode_libdir_flag_spec_ld=$lt_[]_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)\n\n# Whether we need a single -rpath flag with a separated argument.\nhardcode_libdir_separator=$lt_[]_LT_AC_TAGVAR(hardcode_libdir_separator, $1)\n\n# Set to yes if using DIR/libNAME${shared_ext} during linking hardcodes DIR into the\n# resulting binary.\nhardcode_direct=$_LT_AC_TAGVAR(hardcode_direct, $1)\n\n# Set to yes if using the -LDIR flag during linking hardcodes DIR into the\n# resulting binary.\nhardcode_minus_L=$_LT_AC_TAGVAR(hardcode_minus_L, $1)\n\n# Set to yes if using SHLIBPATH_VAR=DIR during linking hardcodes DIR into\n# the resulting binary.\nhardcode_shlibpath_var=$_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)\n\n# Set to yes if building a shared library automatically hardcodes DIR into the library\n# and all subsequent libraries and executables linked against it.\nhardcode_automatic=$_LT_AC_TAGVAR(hardcode_automatic, $1)\n\n# Variables whose values should be saved in libtool wrapper scripts and\n# restored at relink time.\nvariables_saved_for_relink=\"$variables_saved_for_relink\"\n\n# Whether libtool must link a program against all its dependency libraries.\nlink_all_deplibs=$_LT_AC_TAGVAR(link_all_deplibs, $1)\n\n# Compile-time system search path for libraries\nsys_lib_search_path_spec=$lt_sys_lib_search_path_spec\n\n# Run-time system search path for libraries\nsys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec\n\n# Fix the shell variable \\$srcfile for the compiler.\nfix_srcfile_path=\"$_LT_AC_TAGVAR(fix_srcfile_path, $1)\"\n\n# Set to yes if exported symbols are required.\nalways_export_symbols=$_LT_AC_TAGVAR(always_export_symbols, $1)\n\n# The commands to list exported symbols.\nexport_symbols_cmds=$lt_[]_LT_AC_TAGVAR(export_symbols_cmds, $1)\n\n# The commands to extract the exported symbol list from a shared archive.\nextract_expsyms_cmds=$lt_extract_expsyms_cmds\n\n# Symbols that should not be listed in the preloaded symbols.\nexclude_expsyms=$lt_[]_LT_AC_TAGVAR(exclude_expsyms, $1)\n\n# Symbols that must always be exported.\ninclude_expsyms=$lt_[]_LT_AC_TAGVAR(include_expsyms, $1)\n\nifelse([$1],[],\n[# ### END LIBTOOL CONFIG],\n[# ### END LIBTOOL TAG CONFIG: $tagname])\n\n__EOF__\n\nifelse([$1],[], [\n  case $host_os in\n  aix3*)\n    cat <<\\EOF >> \"$cfgfile\"\n\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test \"X${COLLECT_NAMES+set}\" != Xset; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\nEOF\n    ;;\n  esac\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '$q' \"$ltmain\" >> \"$cfgfile\" || (rm -f \"$cfgfile\"; exit 1)\n\n  mv -f \"$cfgfile\" \"$ofile\" || \\\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n])\nelse\n  # If there is no Makefile yet, we rely on a make rule to execute\n  # `config.status --recheck' to rerun these tests and create the\n  # libtool script then.\n  ltmain_in=`echo $ltmain | sed -e 's/\\.sh$/.in/'`\n  if test -f \"$ltmain_in\"; then\n    test -f Makefile && make \"$ltmain\"\n  fi\nfi\n])# AC_LIBTOOL_CONFIG\n\n\n# AC_LIBTOOL_PROG_COMPILER_NO_RTTI([TAGNAME])\n# -------------------------------------------\nAC_DEFUN([AC_LIBTOOL_PROG_COMPILER_NO_RTTI],\n[AC_REQUIRE([_LT_AC_SYS_COMPILER])dnl\n\n_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n\nif test \"$GCC\" = yes; then\n  _LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\n\n  AC_LIBTOOL_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],\n    lt_cv_prog_compiler_rtti_exceptions,\n    [-fno-rtti -fno-exceptions], [],\n    [_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\"$_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions\"])\nfi\n])# AC_LIBTOOL_PROG_COMPILER_NO_RTTI\n\n\n# AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE\n# ---------------------------------\nAC_DEFUN([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE],\n[AC_REQUIRE([AC_CANONICAL_HOST])\nAC_REQUIRE([AC_PROG_NM])\nAC_REQUIRE([AC_OBJEXT])\n# Check for command to grab the raw symbol name followed by C symbol from nm.\nAC_MSG_CHECKING([command to parse $NM output from $compiler object])\nAC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],\n[\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[[BCDEGRST]]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([[_A-Za-z]][[_A-Za-z0-9]]*\\)'\n\n# Transform an extracted symbol line into a proper C declaration\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n -e 's/^. .* \\(.*\\)$/extern int \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n -e 's/^: \\([[^ ]]*\\) $/  {\\\\\\\"\\1\\\\\\\", (lt_ptr) 0},/p' -e 's/^$symcode \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"\\2\\\", (lt_ptr) \\&\\2},/p'\"\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[[BCDT]]'\n  ;;\ncygwin* | mingw* | pw32*)\n  symcode='[[ABCDGISTW]]'\n  ;;\nhpux*) # Its linker distinguishes data from code symbols\n  if test \"$host_cpu\" = ia64; then\n    symcode='[[ABCDEGRST]]'\n  fi\n  lt_cv_sys_global_symbol_to_cdecl=\"sed -n -e 's/^T .* \\(.*\\)$/extern int \\1();/p' -e 's/^$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n  lt_cv_sys_global_symbol_to_c_name_address=\"sed -n -e 's/^: \\([[^ ]]*\\) $/  {\\\\\\\"\\1\\\\\\\", (lt_ptr) 0},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"\\2\\\", (lt_ptr) \\&\\2},/p'\"\n  ;;\nlinux*)\n  if test \"$host_cpu\" = ia64; then\n    symcode='[[ABCDGIRSTW]]'\n    lt_cv_sys_global_symbol_to_cdecl=\"sed -n -e 's/^T .* \\(.*\\)$/extern int \\1();/p' -e 's/^$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n    lt_cv_sys_global_symbol_to_c_name_address=\"sed -n -e 's/^: \\([[^ ]]*\\) $/  {\\\\\\\"\\1\\\\\\\", (lt_ptr) 0},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"\\2\\\", (lt_ptr) \\&\\2},/p'\"\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[[BCDEGRST]]'\n  ;;\nosf*)\n  symcode='[[BCDEGQRST]]'\n  ;;\nsolaris* | sysv5*)\n  symcode='[[BDRT]]'\n  ;;\nsysv4)\n  symcode='[[DFNSTU]]'\n  ;;\nesac\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`echo 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[[ABCDGIRSTW]]' ;;\nesac\n\n# Try without a prefix undercore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[[ \t]]\\($symcode$symcode*\\)[[ \t]][[ \t]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\nEOF\n\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| $lt_cv_sys_global_symbol_pipe \\> $nlist) && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if grep ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif grep ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<EOF > conftest.$ac_ext\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\nEOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | grep -v main >> conftest.$ac_ext'\n\n\t  cat <<EOF >> conftest.$ac_ext\n#if defined (__STDC__) && __STDC__\n# define lt_ptr_t void *\n#else\n# define lt_ptr_t char *\n# define const\n#endif\n\n/* The mapping between symbol names and symbols. */\nconst struct {\n  const char *name;\n  lt_ptr_t address;\n}\nlt_preloaded_symbols[[]] =\n{\nEOF\n\t  $SED \"s/^$symcode$symcode* \\(.*\\) \\(.*\\)$/  {\\\"\\2\\\", (lt_ptr_t) \\&\\2},/\" < \"$nlist\" | grep -v main >> conftest.$ac_ext\n\t  cat <<\\EOF >> conftest.$ac_ext\n  {0, (lt_ptr_t) 0}\n};\n\n#ifdef __cplusplus\n}\n#endif\nEOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_save_LIBS=\"$LIBS\"\n\t  lt_save_CFLAGS=\"$CFLAGS\"\n\t  LIBS=\"conftstm.$ac_objext\"\n\t  CFLAGS=\"$CFLAGS$_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\"\n\t  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext}; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=\"$lt_save_LIBS\"\n\t  CFLAGS=\"$lt_save_CFLAGS\"\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&AS_MESSAGE_LOG_FD\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&AS_MESSAGE_LOG_FD\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"$progname: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.$ac_ext >&5\n  fi\n  rm -f conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test \"$pipe_works\" = yes; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n])\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  AC_MSG_RESULT(failed)\nelse\n  AC_MSG_RESULT(ok)\nfi\n]) # AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE\n\n\n# AC_LIBTOOL_PROG_COMPILER_PIC([TAGNAME])\n# ---------------------------------------\nAC_DEFUN([AC_LIBTOOL_PROG_COMPILER_PIC],\n[_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)=\n_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n_LT_AC_TAGVAR(lt_prog_compiler_static, $1)=\n\nAC_MSG_CHECKING([for $compiler option to produce PIC])\n ifelse([$1],[CXX],[\n  # C++ specific cases for pic, static, wl, etc.\n  if test \"$GXX\" = yes; then\n    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n    amigaos*)\n      # FIXME: we need at least 68020 code to build shared libraries, but\n      # adding the `-m68020' flag to GCC prevents building anything better,\n      # like `-m68040'.\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n      ;;\n    beos* | cygwin* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | os2* | pw32*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case \"$host_cpu\" in\n      hppa*64*|ia64*)\n\t;;\n      *)\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n    *)\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix4* | aix5*)\n\t# All AIX code is PIC.\n\tif test \"$host_cpu\" = ia64; then\n\t  # AIX 5 now supports IA64 processor\n\t  _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\telse\n\t  _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_AC_TAGVAR(lt_prog_compiler_static, $1)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n       darwin*)\n         # PIC is the default on this platform\n         # Common symbols not allowed in MH_DYLIB files\n         case $cc_basename in\n           xlc*)\n           _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-qnocommon'\n           _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n           ;;\n         esac\n       ;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | kfreebsd*-gnu | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)=\"${ac_cv_prog_cc_wl}-a ${ac_cv_prog_cc_wl}archive\"\n\t    if test \"$host_cpu\" != ia64; then\n\t      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)=\"${ac_cv_prog_cc_wl}-a ${ac_cv_prog_cc_wl}archive\"\n\t    case \"$host_cpu\" in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    ;;\n\t  icpc* | ecpc*)\n\t    # Intel C++\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  pgCC*)\n\t    # Portland Group C++ compiler.\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd*)\n\t;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      sco*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      unixware*)\n\t;;\n      vxworks*)\n\t;;\n      *)\n\t_LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n\t;;\n    esac\n  fi\n],\n[\n  if test \"$GCC\" = yes; then\n    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    amigaos*)\n      # FIXME: we need at least 68020 code to build shared libraries, but\n      # adding the `-m68020' flag to GCC prevents building anything better,\n      # like `-m68040'.\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n      ;;\n\n    beos* | cygwin* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | pw32* | os2*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      _LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      enable_shared=no\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n\n    hpux*)\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case \"$host_cpu\" in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n\n    *)\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      else\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n      darwin*)\n        # PIC is the default on this platform\n        # Common symbols not allowed in MH_DYLIB files\n       case $cc_basename in\n         xlc*)\n         _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-qnocommon'\n         _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n         ;;\n       esac\n       ;;\n\n    mingw* | pw32* | os2*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case \"$host_cpu\" in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC (with -KPIC) is the default.\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    newsos6)\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    linux*)\n      case $cc_basename in\n      icc* | ecc*)\n\t_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      pgcc* | pgf77* | pgf90*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\t_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      ccc*)\n        _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n        # All Alpha code is PIC.\n        _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n        ;;\n      esac\n      ;;\n\n    osf3* | osf4* | osf5*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # All OSF/1 code is PIC.\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    sco3.2v5*)\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-Kpic'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-dn'\n      ;;\n\n    solaris*)\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95*)\n\t_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;\n      *)\n\t_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec ;then\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    unicos*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n\n    uts4*)\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *)\n      _LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n    esac\n  fi\n])\nAC_MSG_RESULT([$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)])\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n  AC_LIBTOOL_COMPILER_OPTION([if $compiler PIC flag $_LT_AC_TAGVAR(lt_prog_compiler_pic, $1) works],\n    _LT_AC_TAGVAR(lt_prog_compiler_pic_works, $1),\n    [$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)ifelse([$1],[],[ -DPIC],[ifelse([$1],[CXX],[ -DPIC],[])])], [],\n    [case $_LT_AC_TAGVAR(lt_prog_compiler_pic, $1) in\n     \"\" | \" \"*) ;;\n     *) _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\" $_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)\" ;;\n     esac],\n    [_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n     _LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])\nfi\ncase \"$host_os\" in\n  # For platforms which do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n    ;;\n  *)\n    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\"$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)ifelse([$1],[],[ -DPIC],[ifelse([$1],[CXX],[ -DPIC],[])])\"\n    ;;\nesac\n])\n\n\n# AC_LIBTOOL_PROG_LD_SHLIBS([TAGNAME])\n# ------------------------------------\n# See if the linker supports building shared libraries.\nAC_DEFUN([AC_LIBTOOL_PROG_LD_SHLIBS],\n[AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\nifelse([$1],[CXX],[\n  _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  case $host_os in\n  aix4* | aix5*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to AIX nm, but means don't demangle with GNU nm\n    if $NM -V 2>&1 | grep 'GNU' > /dev/null; then\n      _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\[$]2 == \"T\") || (\\[$]2 == \"D\") || (\\[$]2 == \"B\")) && ([substr](\\[$]3,1,1) != \".\")) { print \\[$]3 } }'\\'' | sort -u > $export_symbols'\n    else\n      _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\[$]2 == \"T\") || (\\[$]2 == \"D\") || (\\[$]2 == \"B\")) && ([substr](\\[$]3,1,1) != \".\")) { print \\[$]3 } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    _LT_AC_TAGVAR(export_symbols_cmds, $1)=\"$ltdll_cmds\"\n  ;;\n  cygwin* | mingw*)\n    _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]] /s/.* \\([[^ ]]*\\)/\\1 DATA/;/^.* __nm__/s/^.* __nm__\\([[^ ]]*\\) [[^ ]]*/\\1 DATA/;/^I /d;/^[[AITW]] /s/.* //'\\'' | sort | uniq > $export_symbols'\n  ;;\n  *)\n    _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  ;;\n  esac\n],[\n  runpath_var=\n  _LT_AC_TAGVAR(allow_undefined_flag, $1)=\n  _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n  _LT_AC_TAGVAR(archive_cmds, $1)=\n  _LT_AC_TAGVAR(archive_expsym_cmds, $1)=\n  _LT_AC_TAGVAR(old_archive_From_new_cmds, $1)=\n  _LT_AC_TAGVAR(old_archive_from_expsyms_cmds, $1)=\n  _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=\n  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n  _LT_AC_TAGVAR(thread_safe_flag_spec, $1)=\n  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=\n  _LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=\n  _LT_AC_TAGVAR(hardcode_direct, $1)=no\n  _LT_AC_TAGVAR(hardcode_minus_L, $1)=no\n  _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  _LT_AC_TAGVAR(link_all_deplibs, $1)=unknown\n  _LT_AC_TAGVAR(hardcode_automatic, $1)=no\n  _LT_AC_TAGVAR(module_cmds, $1)=\n  _LT_AC_TAGVAR(module_expsym_cmds, $1)=\n  _LT_AC_TAGVAR(always_export_symbols, $1)=no\n  _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  _LT_AC_TAGVAR(include_expsyms, $1)=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ` (' and `)$', so one must not match beginning or\n  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',\n  # as well as any symbol that contains `d'.\n  _LT_AC_TAGVAR(exclude_expsyms, $1)=\"_GLOBAL_OFFSET_TABLE_\"\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  extract_expsyms_cmds=\n  # Just being paranoid about ensuring that cc_basename is set.\n  _LT_CC_BASENAME([$compiler])\n  case $host_os in\n  cygwin* | mingw* | pw32*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test \"$GCC\" != yes; then\n      with_gnu_ld=no\n    fi\n    ;;\n  openbsd*)\n    with_gnu_ld=no\n    ;;\n  esac\n\n  _LT_AC_TAGVAR(ld_shlibs, $1)=yes\n  if test \"$with_gnu_ld\" = yes; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='${wl}'\n    \n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'\n    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | grep 'no-whole-archive' > /dev/null; then\n\t_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n      else\n  \t_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v 2>/dev/null` in\n      *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n    \n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix3* | aix4* | aix5*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test \"$host_cpu\" != ia64; then\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tcat <<EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.9.1, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to modify your PATH\n*** so that a non-GNU linker is found, and then restart.\n\nEOF\n      fi\n      ;;\n\n    amigaos*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/a2ixlibrary.data~$echo \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$echo \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$echo \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$echo \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n\n      # Samuel A. Falvo II <kc5tja@dolphin.openprojects.net> reports\n      # that the semantics of dynamic libraries on AmigaOS, at least up\n      # to version 4, is to share data among multiple programs linked\n      # with the same dynamic library.  Since this doesn't match the\n      # behavior of shared libraries on other platforms, we can't use\n      # them.\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n      else\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32*)\n      # _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n      # as there is no search path for DLLs.\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_AC_TAGVAR(always_export_symbols, $1)=no\n      _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]] /s/.* \\([[^ ]]*\\)/\\1 DATA/'\\'' | $SED -e '\\''/^[[AITW]] /s/.* //'\\'' | sort | uniq > $export_symbols'\n\n      if $LD --help 2>&1 | grep 'auto-import' > /dev/null; then\n        _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--image-base=0x10000000 ${wl}--out-implib,$lib'\n\t# If the export-symbols file already is a .def file (1st line\n\t# is EXPORTS), use it as is; otherwise, prepend...\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t  cp $export_symbols $output_objdir/$soname.def;\n\telse\n\t  echo EXPORTS > $output_objdir/$soname.def;\n\t  cat $export_symbols >> $output_objdir/$soname.def;\n\tfi~\n\t$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--image-base=0x10000000  ${wl}--out-implib,$lib'\n      else\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    linux*)\n      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n\ttmp_addflag=\n\tcase $cc_basename,$host_cpu in\n\tpgcc*)\t\t\t\t# Portland Group C compiler\n\t  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n\t  ;;\n\tpgf77* | pgf90* )\t\t\t# Portland Group f77 and f90 compilers\n\t  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n\t  tmp_addflag=' -fpic -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tesac\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\n\tif test $supports_anon_versioning = yes; then\n\t  _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $output_objdir/$libname.ver~\n  cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n  $echo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t  $CC -shared'\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'\n\tfi\n      else\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris* | sysv5*)\n      if $LD -v 2>&1 | grep 'BFD 2\\.8' > /dev/null; then\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tcat <<EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\nEOF\n      elif $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    sunos4*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n\n    if test \"$_LT_AC_TAGVAR(ld_shlibs, $1)\" = no; then\n      runpath_var=\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_AC_TAGVAR(always_export_symbols, $1)=yes\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      if test \"$GCC\" = yes && test -z \"$link_static_flag\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\t_LT_AC_TAGVAR(hardcode_direct, $1)=unsupported\n      fi\n      ;;\n\n    aix4* | aix5*)\n      if test \"$host_cpu\" = ia64; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\"\"\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to AIX nm, but means don't demangle with GNU nm\n\tif $NM -V 2>&1 | grep 'GNU' > /dev/null; then\n\t  _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\[$]2 == \"T\") || (\\[$]2 == \"D\") || (\\[$]2 == \"B\")) && ([substr](\\[$]3,1,1) != \".\")) { print \\[$]3 } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\[$]2 == \"T\") || (\\[$]2 == \"D\") || (\\[$]2 == \"B\")) && ([substr](\\[$]3,1,1) != \".\")) { print \\[$]3 } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# need to do runtime linking.\n\tcase $host_os in aix4.[[23]]|aix4.[[23]].*|aix5*)\n\t  for ld_flag in $LDFLAGS; do\n  \t  if (test $ld_flag = \"-brtl\" || test $ld_flag = \"-Wl,-brtl\"); then\n  \t    aix_use_runtimelinking=yes\n  \t    break\n  \t  fi\n\t  done\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      _LT_AC_TAGVAR(archive_cmds, $1)=''\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n\n      if test \"$GCC\" = yes; then\n\tcase $host_os in aix4.[[012]]|aix4.[[012]].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`${CC} -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" && \\\n  \t   strings \"$collect2name\" | grep resolve_lib_name >/dev/null\n\t  then\n  \t  # We have reworked collect2\n  \t  _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n\t  else\n  \t  # We have old collect2\n  \t  _LT_AC_TAGVAR(hardcode_direct, $1)=unsupported\n  \t  # It fails to find uninstalled libraries when the uninstalled\n  \t  # path is not listed in the libpath.  Setting hardcode_minus_L\n  \t  # to unsupported forces relinking\n  \t  _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n  \t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n  \t  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n\tesac\n\tshared_flag='-shared'\n\tif test \"$aix_use_runtimelinking\" = yes; then\n\t  shared_flag=\"$shared_flag \"'${wl}-G'\n\tfi\n      else\n\t# not using gcc\n\tif test \"$host_cpu\" = ia64; then\n  \t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n  \t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n  \tif test \"$aix_use_runtimelinking\" = yes; then\n\t    shared_flag='${wl}-G'\n\t  else\n\t    shared_flag='${wl}-bM:SRE'\n  \tfi\n\tfi\n      fi\n\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      _LT_AC_TAGVAR(always_export_symbols, $1)=yes\n      if test \"$aix_use_runtimelinking\" = yes; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)='-berok'\n       # Determine the default libpath from the value encoded in an empty executable.\n       _LT_AC_SYS_LIBPATH_AIX\n       _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC\"' -o $output_objdir/$soname $libobjs $deplibs $compiler_flags `if test \"x${allow_undefined_flag}\" != \"x\"; then echo \"${wl}${allow_undefined_flag}\"; else :; fi` '\"\\${wl}$no_entry_flag \\${wl}$exp_sym_flag:\\$export_symbols $shared_flag\"\n       else\n\tif test \"$host_cpu\" = ia64; then\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'\n\t  _LT_AC_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t  _LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$no_entry_flag \\${wl}$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an empty executable.\n\t _LT_AC_SYS_LIBPATH_AIX\n\t _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  _LT_AC_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'\n\t  _LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'\n\t  # -bexpall does not export symbols beginning with underscore (_)\n\t  _LT_AC_TAGVAR(always_export_symbols, $1)=yes\n\t  # Exported symbols can be pulled into shared objects from archives\n\t  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=' '\n\t  _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  # This is similar to how AIX traditionally builds it's shared libraries.\n\t  _LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs $compiler_flags ${wl}-bE:$export_symbols ${wl}-bnoentry${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/a2ixlibrary.data~$echo \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$echo \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$echo \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$echo \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      # see comment about different semantics on the GNU ld section\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      ;;\n\n    bsdi[[45]]*)\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n      # Tell ltmain to make .lib files, not .a files.\n      libext=lib\n      # Tell ltmain to make .dll files, not .so files.\n      shrext_cmds=\".dll\"\n      # FIXME: Setting linknames here is a bad hack.\n      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `echo \"$deplibs\" | $SED -e '\\''s/ -lc$//'\\''` -link -dll~linknames='\n      # The linker will automatically build a .lib file if we build a DLL.\n      _LT_AC_TAGVAR(old_archive_From_new_cmds, $1)='true'\n      # FIXME: Should let the user specify the lib program.\n      _LT_AC_TAGVAR(old_archive_cmds, $1)='lib /OUT:$oldlib$oldobjs$old_deplibs'\n      _LT_AC_TAGVAR(fix_srcfile_path, $1)='`cygpath -w \"$srcfile\"`'\n      _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      ;;\n\n    darwin* | rhapsody*)\n      case \"$host_os\" in\n        rhapsody* | darwin1.[[012]])\n         _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-undefined ${wl}suppress'\n         ;;\n       *) # Darwin 1.3 on\n         if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then\n           _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'\n         else\n           case ${MACOSX_DEPLOYMENT_TARGET} in\n             10.[[012]])\n               _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'\n               ;;\n             10.*)\n               _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-undefined ${wl}dynamic_lookup'\n               ;;\n           esac\n         fi\n         ;;\n      esac\n      _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_AC_TAGVAR(hardcode_direct, $1)=no\n      _LT_AC_TAGVAR(hardcode_automatic, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=''\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n    if test \"$GCC\" = yes ; then\n    \toutput_verbose_link_cmd='echo'\n        _LT_AC_TAGVAR(archive_cmds, $1)='$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring'\n      _LT_AC_TAGVAR(module_cmds, $1)='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'\n      # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin ld's\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n      _LT_AC_TAGVAR(module_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n    else\n      case $cc_basename in\n        xlc*)\n         output_verbose_link_cmd='echo'\n         _LT_AC_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}`echo $rpath/$soname` $verstring'\n         _LT_AC_TAGVAR(module_cmds, $1)='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'\n          # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin ld's\n         _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -qmkshrobj $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}$rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          _LT_AC_TAGVAR(module_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          ;;\n       *)\n         _LT_AC_TAGVAR(ld_shlibs, $1)=no\n          ;;\n      esac\n    fi\n      ;;\n\n    dgux*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2.*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | kfreebsd*-gnu | dragonfly*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -o $lib $libobjs $deplibs $compiler_flags'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    hpux9*)\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/$soname~$CC -shared -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      ;;\n\n    hpux10* | hpux11*)\n      if test \"$GCC\" = yes -a \"$with_gnu_ld\" = no; then\n\tcase \"$host_cpu\" in\n\thppa*64*|ia64*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase \"$host_cpu\" in\n\thppa*64*|ia64*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$LD -b +h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  ;;\n\t*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n\t  ;;\n\tesac\n      fi\n      if test \"$with_gnu_ld\" = no; then\n\tcase \"$host_cpu\" in\n\thppa*64*)\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='+b $libdir'\n\t  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=no\n\t  _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  ;;\n\tia64*)\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=no\n\t  _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n\t  ;;\n\t*)\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='-rpath $libdir'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    newsos6)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    openbsd*)\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      else\n       case $host_os in\n\t openbsd[[01]].* | openbsd2.[[0-7]] | openbsd2.[[0-7]].*)\n\t   _LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n\t   _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t   ;;\n\t *)\n\t   _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t   _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t   ;;\n       esac\n      fi\n      ;;\n\n    os2*)\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_AC_TAGVAR(archive_cmds, $1)='$echo \"LIBRARY $libname INITINSTANCE\" > $output_objdir/$libname.def~$echo \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~$echo DATA >> $output_objdir/$libname.def~$echo \" SINGLE NONSHARED\" >> $output_objdir/$libname.def~$echo EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'\n      _LT_AC_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'\n      ;;\n\n    osf3*)\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n      else\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -shared${allow_undefined_flag} $libobjs $deplibs $linker_flags -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      else\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -shared${allow_undefined_flag} $libobjs $deplibs $linker_flags -msym -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; echo \"-hidden\">> $lib.exp~\n\t$LD -shared${allow_undefined_flag} -input $lib.exp $linker_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib~$rm $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    sco3.2v5*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'\n      runpath_var=LD_RUN_PATH\n      hardcode_runpath_var=yes\n      ;;\n\n    solaris*)\n      _LT_AC_TAGVAR(no_undefined_flag, $1)=' -z text'\n      if test \"$GCC\" = yes; then\n\twlarc='${wl}'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n\t  $CC -shared ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$rm $lib.exp'\n      else\n\twlarc=''\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n  \t$LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$rm $lib.exp'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      case $host_os in\n      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n      *)\n \t# The compiler driver will combine linker options so we\n \t# cannot just pass the convience library names through\n \t# without $wl, iff we do not link with $LD.\n \t# Luckily, gcc supports the same syntax we need for Sun Studio.\n \t# Supported since Solaris 2.6 (maybe 2.5.1?)\n \tcase $wlarc in\n \t'')\n \t  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract' ;;\n \t*)\n \t  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract`for conv in $convenience\\\"\\\"; do test -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; $echo \\\"$new_convenience\\\"` ${wl}-z ${wl}defaultextract' ;;\n \tesac ;;\n      esac\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    sunos4*)\n      if test \"x$host_vendor\" = xsequent; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_AC_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=no\n        ;;\n\tmotorola)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4.3*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=yes\n      fi\n      ;;\n\n    sysv4.2uw2*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=no\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      hardcode_runpath_var=yes\n      runpath_var=LD_RUN_PATH\n      ;;\n\n   sysv5OpenUNIX8* | sysv5UnixWare7* |  sysv5uw[[78]]* | unixware7*)\n      _LT_AC_TAGVAR(no_undefined_flag, $1)='${wl}-z ${wl}text'\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      runpath_var='LD_RUN_PATH'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv5*)\n      _LT_AC_TAGVAR(no_undefined_flag, $1)=' -z text'\n      # $CC -shared without GNU ld will not create a library from C++\n      # object files and a static libstdc++, better avoid it by now\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n  \t\t$LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$rm $lib.exp'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n      ;;\n\n    uts4*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    esac\n  fi\n])\nAC_MSG_RESULT([$_LT_AC_TAGVAR(ld_shlibs, $1)])\ntest \"$_LT_AC_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test \"$GCC\" = yes; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$_LT_AC_TAGVAR(archive_cmds_need_lc, $1)\" in\nx|xyes)\n  # Assume -lc should be added\n  _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=yes\n\n  if test \"$enable_shared\" = yes && test \"$GCC\" = yes; then\n    case $_LT_AC_TAGVAR(archive_cmds, $1) in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      AC_MSG_CHECKING([whether -lc should be explicitly linked in])\n      $rm conftest*\n      printf \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n      if AC_TRY_EVAL(ac_compile) 2>conftest.err; then\n        soname=conftest\n        lib=conftest\n        libobjs=conftest.$ac_objext\n        deplibs=\n        wl=$_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)\n        compiler_flags=-v\n        linker_flags=-v\n        verstring=\n        output_objdir=.\n        libname=conftest\n        lt_save_allow_undefined_flag=$_LT_AC_TAGVAR(allow_undefined_flag, $1)\n        _LT_AC_TAGVAR(allow_undefined_flag, $1)=\n        if AC_TRY_EVAL(_LT_AC_TAGVAR(archive_cmds, $1) 2\\>\\&1 \\| grep \\\" -lc \\\" \\>/dev/null 2\\>\\&1)\n        then\n\t  _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n        else\n\t  _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=yes\n        fi\n        _LT_AC_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag\n      else\n        cat conftest.err 1>&5\n      fi\n      $rm conftest*\n      AC_MSG_RESULT([$_LT_AC_TAGVAR(archive_cmds_need_lc, $1)])\n      ;;\n    esac\n  fi\n  ;;\nesac\n])# AC_LIBTOOL_PROG_LD_SHLIBS\n\n\n# _LT_AC_FILE_LTDLL_C\n# -------------------\n# Be careful that the start marker always follows a newline.\nAC_DEFUN([_LT_AC_FILE_LTDLL_C], [\n# /* ltdll.c starts here */\n# #define WIN32_LEAN_AND_MEAN\n# #include <windows.h>\n# #undef WIN32_LEAN_AND_MEAN\n# #include <stdio.h>\n#\n# #ifndef __CYGWIN__\n# #  ifdef __CYGWIN32__\n# #    define __CYGWIN__ __CYGWIN32__\n# #  endif\n# #endif\n#\n# #ifdef __cplusplus\n# extern \"C\" {\n# #endif\n# BOOL APIENTRY DllMain (HINSTANCE hInst, DWORD reason, LPVOID reserved);\n# #ifdef __cplusplus\n# }\n# #endif\n#\n# #ifdef __CYGWIN__\n# #include <cygwin/cygwin_dll.h>\n# DECLARE_CYGWIN_DLL( DllMain );\n# #endif\n# HINSTANCE __hDllInstance_base;\n#\n# BOOL APIENTRY\n# DllMain (HINSTANCE hInst, DWORD reason, LPVOID reserved)\n# {\n#   __hDllInstance_base = hInst;\n#   return TRUE;\n# }\n# /* ltdll.c ends here */\n])# _LT_AC_FILE_LTDLL_C\n\n\n# _LT_AC_TAGVAR(VARNAME, [TAGNAME])\n# ---------------------------------\nAC_DEFUN([_LT_AC_TAGVAR], [ifelse([$2], [], [$1], [$1_$2])])\n\n\n# old names\nAC_DEFUN([AM_PROG_LIBTOOL],   [AC_PROG_LIBTOOL])\nAC_DEFUN([AM_ENABLE_SHARED],  [AC_ENABLE_SHARED($@)])\nAC_DEFUN([AM_ENABLE_STATIC],  [AC_ENABLE_STATIC($@)])\nAC_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])\nAC_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])\nAC_DEFUN([AM_PROG_LD],        [AC_PROG_LD])\nAC_DEFUN([AM_PROG_NM],        [AC_PROG_NM])\n\n# This is just to silence aclocal about the macro not being used\nifelse([AC_DISABLE_FAST_INSTALL])\n\nAC_DEFUN([LT_AC_PROG_GCJ],\n[AC_CHECK_TOOL(GCJ, gcj, no)\n  test \"x${GCJFLAGS+set}\" = xset || GCJFLAGS=\"-g -O2\"\n  AC_SUBST(GCJFLAGS)\n])\n\nAC_DEFUN([LT_AC_PROG_RC],\n[AC_CHECK_TOOL(RC, windres, no)\n])\n\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_SED.  When it is available in   #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\n# LT_AC_PROG_SED\n# --------------\n# Check for a fully-functional sed program, that truncates\n# as few characters as possible.  Prefer GNU sed if found.\nAC_DEFUN([LT_AC_PROG_SED],\n[AC_MSG_CHECKING([for a sed that does not truncate output])\nAC_CACHE_VAL(lt_cv_path_SED,\n[# Loop through the user's path and test for sed and gsed.\n# Then use that list of sed's as ones to test for truncation.\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  for lt_ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      if $as_executable_p \"$as_dir/$lt_ac_prog$ac_exec_ext\"; then\n        lt_ac_sed_list=\"$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext\"\n      fi\n    done\n  done\ndone\nlt_ac_max=0\nlt_ac_count=0\n# Add /usr/xpg4/bin/sed as it is typically found on Solaris\n# along with /bin/sed that truncates output.\nfor lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do\n  test ! -f $lt_ac_sed && continue\n  cat /dev/null > conftest.in\n  lt_ac_count=0\n  echo $ECHO_N \"0123456789$ECHO_C\" >conftest.in\n  # Check for GNU sed and select it if it is found.\n  if \"$lt_ac_sed\" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then\n    lt_cv_path_SED=$lt_ac_sed\n    break\n  fi\n  while true; do\n    cat conftest.in conftest.in >conftest.tmp\n    mv conftest.tmp conftest.in\n    cp conftest.in conftest.nl\n    echo >>conftest.nl\n    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break\n    cmp -s conftest.out conftest.nl || break\n    # 10000 chars as input seems more than enough\n    test $lt_ac_count -gt 10 && break\n    lt_ac_count=`expr $lt_ac_count + 1`\n    if test $lt_ac_count -gt $lt_ac_max; then\n      lt_ac_max=$lt_ac_count\n      lt_cv_path_SED=$lt_ac_sed\n    fi\n  done\ndone\n])\nSED=$lt_cv_path_SED\nAC_MSG_RESULT([$SED])\n])\n## ltdl.m4 - Configure ltdl for the target system. -*-Autoconf-*-\n## Copyright (C) 1999-2000 Free Software Foundation, Inc.\n##\n## This file is free software; the Free Software Foundation gives\n## unlimited permission to copy and/or distribute it, with or without\n## modifications, as long as this notice is preserved.\n\n# serial 6 AC_LIB_LTDL\n\n# AC_WITH_LTDL\n# ------------\n# Clients of libltdl can use this macro to allow the installer to\n# choose between a shipped copy of the ltdl sources or a preinstalled\n# version of the library.\nAC_DEFUN([AC_WITH_LTDL],\n[AC_REQUIRE([AC_LIB_LTDL])\nAC_SUBST([LIBLTDL])\nAC_SUBST([INCLTDL])\n\n# Unless the user asks us to check, assume no installed ltdl exists.\nuse_installed_libltdl=no\n\nAC_ARG_WITH([included_ltdl],\n    [  --with-included-ltdl    use the GNU ltdl sources included here])\n\nif test \"x$with_included_ltdl\" != xyes; then\n  # We are not being forced to use the included libltdl sources, so\n  # decide whether there is a useful installed version we can use.\n  AC_CHECK_HEADER([ltdl.h],\n      [AC_CHECK_LIB([ltdl], [lt_dlcaller_register],\n          [with_included_ltdl=no],\n          [with_included_ltdl=yes])\n  ])\nfi\n\nif test \"x$enable_ltdl_install\" != xyes; then\n  # If the user did not specify an installable libltdl, then default\n  # to a convenience lib.\n  AC_LIBLTDL_CONVENIENCE\nfi\n\nif test \"x$with_included_ltdl\" = xno; then\n  # If the included ltdl is not to be used. then Use the\n  # preinstalled libltdl we found.\n  AC_DEFINE([HAVE_LTDL], 1,\n    [Define this if a modern libltdl is already installed])\n  LIBLTDL=-lltdl\nfi\n\n# Report our decision...\nAC_MSG_CHECKING([whether to use included libltdl])\nAC_MSG_RESULT([$with_included_ltdl])\n\nAC_CONFIG_SUBDIRS([libltdl])\n])# AC_WITH_LTDL\n\n\n# AC_LIB_LTDL\n# -----------\n# Perform all the checks necessary for compilation of the ltdl objects\n#  -- including compiler checks and header checks.\nAC_DEFUN([AC_LIB_LTDL],\n[AC_PREREQ(2.50)\nAC_REQUIRE([AC_PROG_CC])\nAC_REQUIRE([AC_C_CONST])\nAC_REQUIRE([AC_HEADER_STDC])\nAC_REQUIRE([AC_HEADER_DIRENT])\nAC_REQUIRE([_LT_AC_CHECK_DLFCN])\nAC_REQUIRE([AC_LTDL_ENABLE_INSTALL])\nAC_REQUIRE([AC_LTDL_SHLIBEXT])\nAC_REQUIRE([AC_LTDL_SHLIBPATH])\nAC_REQUIRE([AC_LTDL_SYSSEARCHPATH])\nAC_REQUIRE([AC_LTDL_OBJDIR])\nAC_REQUIRE([AC_LTDL_DLPREOPEN])\nAC_REQUIRE([AC_LTDL_DLLIB])\nAC_REQUIRE([AC_LTDL_SYMBOL_USCORE])\nAC_REQUIRE([AC_LTDL_DLSYM_USCORE])\nAC_REQUIRE([AC_LTDL_SYS_DLOPEN_DEPLIBS])\nAC_REQUIRE([AC_LTDL_FUNC_ARGZ])\n\nAC_CHECK_HEADERS([assert.h ctype.h errno.h malloc.h memory.h stdlib.h \\\n\t\t  stdio.h unistd.h])\nAC_CHECK_HEADERS([dl.h sys/dl.h dld.h mach-o/dyld.h])\nAC_CHECK_HEADERS([string.h strings.h], [break])\n\nAC_CHECK_FUNCS([strchr index], [break])\nAC_CHECK_FUNCS([strrchr rindex], [break])\nAC_CHECK_FUNCS([memcpy bcopy], [break])\nAC_CHECK_FUNCS([memmove strcmp])\nAC_CHECK_FUNCS([closedir opendir readdir])\n])# AC_LIB_LTDL\n\n\n# AC_LTDL_ENABLE_INSTALL\n# ----------------------\nAC_DEFUN([AC_LTDL_ENABLE_INSTALL],\n[AC_ARG_ENABLE([ltdl-install],\n    [AC_HELP_STRING([--enable-ltdl-install], [install libltdl])])\n\nAM_CONDITIONAL(INSTALL_LTDL, test x\"${enable_ltdl_install-no}\" != xno)\nAM_CONDITIONAL(CONVENIENCE_LTDL, test x\"${enable_ltdl_convenience-no}\" != xno)\n])])# AC_LTDL_ENABLE_INSTALL\n\n\n# AC_LTDL_SYS_DLOPEN_DEPLIBS\n# --------------------------\nAC_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS],\n[AC_REQUIRE([AC_CANONICAL_HOST])\nAC_CACHE_CHECK([whether deplibs are loaded by dlopen],\n  [libltdl_cv_sys_dlopen_deplibs],\n  [# PORTME does your system automatically load deplibs for dlopen?\n  # or its logical equivalent (e.g. shl_load for HP-UX < 11)\n  # For now, we just catch OSes we know something about -- in the\n  # future, we'll try test this programmatically.\n  libltdl_cv_sys_dlopen_deplibs=unknown\n  case \"$host_os\" in\n  aix3*|aix4.1.*|aix4.2.*)\n    # Unknown whether this is true for these versions of AIX, but\n    # we want this `case' here to explicitly catch those versions.\n    libltdl_cv_sys_dlopen_deplibs=unknown\n    ;;\n  aix[[45]]*)\n    libltdl_cv_sys_dlopen_deplibs=yes\n    ;;\n  darwin*)\n    # Assuming the user has installed a libdl from somewhere, this is true\n    # If you are looking for one http://www.opendarwin.org/projects/dlcompat\n    libltdl_cv_sys_dlopen_deplibs=yes\n    ;;\n  gnu* | linux* | kfreebsd*-gnu | knetbsd*-gnu)\n    # GNU and its variants, using gnu ld.so (Glibc)\n    libltdl_cv_sys_dlopen_deplibs=yes\n    ;;\n  hpux10*|hpux11*)\n    libltdl_cv_sys_dlopen_deplibs=yes\n    ;;\n  irix[[12345]]*|irix6.[[01]]*)\n    # Catch all versions of IRIX before 6.2, and indicate that we don't\n    # know how it worked for any of those versions.\n    libltdl_cv_sys_dlopen_deplibs=unknown\n    ;;\n  irix*)\n    # The case above catches anything before 6.2, and it's known that\n    # at 6.2 and later dlopen does load deplibs.\n    libltdl_cv_sys_dlopen_deplibs=yes\n    ;;\n  netbsd*)\n    libltdl_cv_sys_dlopen_deplibs=yes\n    ;;\n  openbsd*)\n    libltdl_cv_sys_dlopen_deplibs=yes\n    ;;\n  osf[[1234]]*)\n    # dlopen did load deplibs (at least at 4.x), but until the 5.x series,\n    # it did *not* use an RPATH in a shared library to find objects the\n    # library depends on, so we explictly say `no'.\n    libltdl_cv_sys_dlopen_deplibs=no\n    ;;\n  osf5.0|osf5.0a|osf5.1)\n    # dlopen *does* load deplibs and with the right loader patch applied\n    # it even uses RPATH in a shared library to search for shared objects\n    # that the library depends on, but there's no easy way to know if that\n    # patch is installed.  Since this is the case, all we can really\n    # say is unknown -- it depends on the patch being installed.  If\n    # it is, this changes to `yes'.  Without it, it would be `no'.\n    libltdl_cv_sys_dlopen_deplibs=unknown\n    ;;\n  osf*)\n    # the two cases above should catch all versions of osf <= 5.1.  Read\n    # the comments above for what we know about them.\n    # At > 5.1, deplibs are loaded *and* any RPATH in a shared library\n    # is used to find them so we can finally say `yes'.\n    libltdl_cv_sys_dlopen_deplibs=yes\n    ;;\n  solaris*)\n    libltdl_cv_sys_dlopen_deplibs=yes\n    ;;\n  esac\n  ])\nif test \"$libltdl_cv_sys_dlopen_deplibs\" != yes; then\n AC_DEFINE([LTDL_DLOPEN_DEPLIBS], [1],\n    [Define if the OS needs help to load dependent libraries for dlopen().])\nfi\n])# AC_LTDL_SYS_DLOPEN_DEPLIBS\n\n\n# AC_LTDL_SHLIBEXT\n# ----------------\nAC_DEFUN([AC_LTDL_SHLIBEXT],\n[AC_REQUIRE([AC_LIBTOOL_SYS_DYNAMIC_LINKER])\nAC_CACHE_CHECK([which extension is used for loadable modules],\n  [libltdl_cv_shlibext],\n[\n## GCJ LOCAL: gcj specific stuff. Please keep it.\n# Here in libltdl for libgcj we don't build modules for darwin.\n# So we say no. Then the extension gets .dylib which is the right\n# thing for shared libraries on darwin. Please keep me next time you\n# import libltdl.\ncase \"$host_os\" in\ndarwin*)\n\tmodule=no\n\t;;\n*)\n\tmodule=yes\n\t;;\nesac\neval libltdl_cv_shlibext=$shrext_cmds\n  ])\nif test -n \"$libltdl_cv_shlibext\"; then\n  AC_DEFINE_UNQUOTED(LTDL_SHLIB_EXT, \"$libltdl_cv_shlibext\",\n    [Define to the extension used for shared libraries, say, \".so\".])\nfi\n])# AC_LTDL_SHLIBEXT\n\n\n# AC_LTDL_SHLIBPATH\n# -----------------\nAC_DEFUN([AC_LTDL_SHLIBPATH],\n[AC_REQUIRE([AC_LIBTOOL_SYS_DYNAMIC_LINKER])\nAC_CACHE_CHECK([which variable specifies run-time library path],\n  [libltdl_cv_shlibpath_var], [libltdl_cv_shlibpath_var=\"$shlibpath_var\"])\nif test -n \"$libltdl_cv_shlibpath_var\"; then\n  AC_DEFINE_UNQUOTED(LTDL_SHLIBPATH_VAR, \"$libltdl_cv_shlibpath_var\",\n    [Define to the name of the environment variable that determines the dynamic library search path.])\nfi\n])# AC_LTDL_SHLIBPATH\n\n\n# AC_LTDL_SYSSEARCHPATH\n# ---------------------\nAC_DEFUN([AC_LTDL_SYSSEARCHPATH],\n[AC_REQUIRE([AC_LIBTOOL_SYS_DYNAMIC_LINKER])\nAC_CACHE_CHECK([for the default library search path],\n  [libltdl_cv_sys_search_path],\n  [libltdl_cv_sys_search_path=\"$sys_lib_dlsearch_path_spec\"])\nif test -n \"$libltdl_cv_sys_search_path\"; then\n  sys_search_path=\n  for dir in $libltdl_cv_sys_search_path; do\n    if test -z \"$sys_search_path\"; then\n      sys_search_path=\"$dir\"\n    else\n      sys_search_path=\"$sys_search_path$PATH_SEPARATOR$dir\"\n    fi\n  done\n  AC_DEFINE_UNQUOTED(LTDL_SYSSEARCHPATH, \"$sys_search_path\",\n    [Define to the system default library search path.])\nfi\n])# AC_LTDL_SYSSEARCHPATH\n\n\n# AC_LTDL_OBJDIR\n# --------------\nAC_DEFUN([AC_LTDL_OBJDIR],\n[AC_CACHE_CHECK([for objdir],\n  [libltdl_cv_objdir],\n  [libltdl_cv_objdir=\"$objdir\"\n  if test -n \"$objdir\"; then\n    :\n  else\n    rm -f .libs 2>/dev/null\n    mkdir .libs 2>/dev/null\n    if test -d .libs; then\n      libltdl_cv_objdir=.libs\n    else\n      # MS-DOS does not allow filenames that begin with a dot.\n      libltdl_cv_objdir=_libs\n    fi\n  rmdir .libs 2>/dev/null\n  fi\n  ])\nAC_DEFINE_UNQUOTED(LTDL_OBJDIR, \"$libltdl_cv_objdir/\",\n  [Define to the sub-directory in which libtool stores uninstalled libraries.])\n])# AC_LTDL_OBJDIR\n\n\n# AC_LTDL_DLPREOPEN\n# -----------------\nAC_DEFUN([AC_LTDL_DLPREOPEN],\n[AC_REQUIRE([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE])\nAC_CACHE_CHECK([whether libtool supports -dlopen/-dlpreopen],\n  [libltdl_cv_preloaded_symbols],\n  [if test -n \"$lt_cv_sys_global_symbol_pipe\"; then\n    libltdl_cv_preloaded_symbols=yes\n  else\n    libltdl_cv_preloaded_symbols=no\n  fi\n  ])\nif test x\"$libltdl_cv_preloaded_symbols\" = xyes; then\n  AC_DEFINE(HAVE_PRELOADED_SYMBOLS, 1,\n    [Define if libtool can extract symbol lists from object files.])\nfi\n])# AC_LTDL_DLPREOPEN\n\n\n# AC_LTDL_DLLIB\n# -------------\nAC_DEFUN([AC_LTDL_DLLIB],\n[LIBADD_DL=\nAC_SUBST(LIBADD_DL)\nAC_LANG_PUSH([C])\n\nAC_CHECK_FUNC([shl_load],\n      [AC_DEFINE([HAVE_SHL_LOAD], [1],\n\t\t [Define if you have the shl_load function.])],\n  [AC_CHECK_LIB([dld], [shl_load],\n\t[AC_DEFINE([HAVE_SHL_LOAD], [1],\n\t\t   [Define if you have the shl_load function.])\n\tLIBADD_DL=\"$LIBADD_DL -ldld\"],\n    [AC_CHECK_LIB([dl], [dlopen],\n\t  [AC_DEFINE([HAVE_LIBDL], [1],\n\t\t     [Define if you have the libdl library or equivalent.])\n\t        LIBADD_DL=\"-ldl\" libltdl_cv_lib_dl_dlopen=\"yes\"],\n      [AC_TRY_LINK([#if HAVE_DLFCN_H\n#  include <dlfcn.h>\n#endif\n      ],\n\t[dlopen(0, 0);],\n\t    [AC_DEFINE([HAVE_LIBDL], [1],\n\t\t             [Define if you have the libdl library or equivalent.]) libltdl_cv_func_dlopen=\"yes\"],\n\t[AC_CHECK_LIB([svld], [dlopen],\n\t      [AC_DEFINE([HAVE_LIBDL], [1],\n\t\t\t [Define if you have the libdl library or equivalent.])\n\t            LIBADD_DL=\"-lsvld\" libltdl_cv_func_dlopen=\"yes\"],\n\t  [AC_CHECK_LIB([dld], [dld_link],\n\t        [AC_DEFINE([HAVE_DLD], [1],\n\t\t\t   [Define if you have the GNU dld library.])\n\t \tLIBADD_DL=\"$LIBADD_DL -ldld\"],\n\t \t[AC_CHECK_FUNC([_dyld_func_lookup],\n\t \t       [AC_DEFINE([HAVE_DYLD], [1],\n\t \t          [Define if you have the _dyld_func_lookup function.])])\n          ])\n        ])\n      ])\n    ])\n  ])\n])\n\nif test x\"$libltdl_cv_func_dlopen\" = xyes || test x\"$libltdl_cv_lib_dl_dlopen\" = xyes\nthen\n  lt_save_LIBS=\"$LIBS\"\n  LIBS=\"$LIBS $LIBADD_DL\"\n  AC_CHECK_FUNCS([dlerror])\n  LIBS=\"$lt_save_LIBS\"\nfi\nAC_LANG_POP\n])# AC_LTDL_DLLIB\n\n\n# AC_LTDL_SYMBOL_USCORE\n# ---------------------\n# does the compiler prefix global symbols with an underscore?\nAC_DEFUN([AC_LTDL_SYMBOL_USCORE],\n[AC_REQUIRE([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE])\nAC_CACHE_CHECK([for _ prefix in compiled symbols],\n  [ac_cv_sys_symbol_underscore],\n  [ac_cv_sys_symbol_underscore=no\n  cat > conftest.$ac_ext <<EOF\nvoid nm_test_func(){}\nint main(){nm_test_func;return 0;}\nEOF\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    ac_nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| $lt_cv_sys_global_symbol_pipe \\> $ac_nlist) && test -s \"$ac_nlist\"; then\n      # See whether the symbols have a leading underscore.\n      if grep '^. _nm_test_func' \"$ac_nlist\" >/dev/null; then\n        ac_cv_sys_symbol_underscore=yes\n      else\n        if grep '^. nm_test_func ' \"$ac_nlist\" >/dev/null; then\n\t  :\n        else\n\t  echo \"configure: cannot find nm_test_func in $ac_nlist\" >&AC_FD_CC\n        fi\n      fi\n    else\n      echo \"configure: cannot run $lt_cv_sys_global_symbol_pipe\" >&AC_FD_CC\n    fi\n  else\n    echo \"configure: failed program was:\" >&AC_FD_CC\n    cat conftest.c >&AC_FD_CC\n  fi\n  rm -rf conftest*\n  ])\n])# AC_LTDL_SYMBOL_USCORE\n\n\n# AC_LTDL_DLSYM_USCORE\n# --------------------\nAC_DEFUN([AC_LTDL_DLSYM_USCORE],\n[AC_REQUIRE([AC_LTDL_SYMBOL_USCORE])\nif test x\"$ac_cv_sys_symbol_underscore\" = xyes; then\n  if test x\"$libltdl_cv_func_dlopen\" = xyes ||\n     test x\"$libltdl_cv_lib_dl_dlopen\" = xyes ; then\n\tAC_CACHE_CHECK([whether we have to add an underscore for dlsym],\n\t  [libltdl_cv_need_uscore],\n\t  [libltdl_cv_need_uscore=unknown\n          save_LIBS=\"$LIBS\"\n          LIBS=\"$LIBS $LIBADD_DL\"\n\t  _LT_AC_TRY_DLOPEN_SELF(\n\t    [libltdl_cv_need_uscore=no], [libltdl_cv_need_uscore=yes],\n\t    [],\t\t\t\t [libltdl_cv_need_uscore=cross])\n\t  LIBS=\"$save_LIBS\"\n\t])\n  fi\nfi\n\nif test x\"$libltdl_cv_need_uscore\" = xyes; then\n  AC_DEFINE(NEED_USCORE, 1,\n    [Define if dlsym() requires a leading underscore in symbol names.])\nfi\n])# AC_LTDL_DLSYM_USCORE\n\n# AC_LTDL_FUNC_ARGZ\n# -----------------\nAC_DEFUN([AC_LTDL_FUNC_ARGZ],\n[AC_CHECK_HEADERS([argz.h])\n\nAC_CHECK_TYPES([error_t],\n  [],\n  [AC_DEFINE([error_t], [int],\n    [Define to a type to use for `error_t' if it is not otherwise available.])],\n  [#if HAVE_ARGZ_H\n#  include <argz.h>\n#endif])\n\nAC_CHECK_FUNCS([argz_append argz_create_sep argz_insert argz_next argz_stringify])\n])# AC_LTDL_FUNC_ARGZ\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/libltdl/ltdl.c": "/* ltdl.c -- system independent dlopen wrapper\n   Copyright (C) 1998, 1999, 2000, 2004, 2006  Free Software Foundation, Inc.\n   Originally by Thomas Tanner <tanner@ffii.org>\n   This file is part of GNU Libtool.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU libtool, you may include it under the same\ndistribution terms that you use for the rest of that program.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n02110-1301  USA\n\n*/\n\n#if HAVE_CONFIG_H\n#  include <config.h>\n#endif\n\n#if HAVE_BOEHM_GC\n#  include <gc.h>\n#endif\n\n#if HAVE_UNISTD_H\n#  include <unistd.h>\n#endif\n\n#if HAVE_STDIO_H\n#  include <stdio.h>\n#endif\n\n/* Include the header defining malloc.  On K&R C compilers,\n   that's <malloc.h>, on ANSI C and ISO C compilers, that's <stdlib.h>.  */\n#if HAVE_STDLIB_H\n#  include <stdlib.h>\n#else\n#  if HAVE_MALLOC_H\n#    include <malloc.h>\n#  endif\n#endif\n\n#if HAVE_STRING_H\n#  include <string.h>\n#else\n#  if HAVE_STRINGS_H\n#    include <strings.h>\n#  endif\n#endif\n\n#if HAVE_CTYPE_H\n#  include <ctype.h>\n#endif\n\n#if HAVE_MEMORY_H\n#  include <memory.h>\n#endif\n\n#if HAVE_ERRNO_H\n#  include <errno.h>\n#endif\n\n\n#ifndef __WINDOWS__\n#  ifdef __WIN32__\n#    define __WINDOWS__\n#  endif\n#endif\n\n\n#undef LT_USE_POSIX_DIRENT\n#ifdef HAVE_CLOSEDIR\n#  ifdef HAVE_OPENDIR\n#    ifdef HAVE_READDIR\n#      ifdef HAVE_DIRENT_H\n#        define LT_USE_POSIX_DIRENT\n#      endif /* HAVE_DIRENT_H */\n#    endif /* HAVE_READDIR */\n#  endif /* HAVE_OPENDIR */\n#endif /* HAVE_CLOSEDIR */\n\n\n#undef LT_USE_WINDOWS_DIRENT_EMULATION\n#ifndef LT_USE_POSIX_DIRENT\n#  ifdef __WINDOWS__\n#    define LT_USE_WINDOWS_DIRENT_EMULATION\n#  endif /* __WINDOWS__ */\n#endif /* LT_USE_POSIX_DIRENT */\n\n\n#ifdef LT_USE_POSIX_DIRENT\n#  include <dirent.h>\n#  define LT_D_NAMLEN(dirent) (strlen((dirent)->d_name))\n#else\n#  ifdef LT_USE_WINDOWS_DIRENT_EMULATION\n#    define LT_D_NAMLEN(dirent) (strlen((dirent)->d_name))\n#  else\n#    define dirent direct\n#    define LT_D_NAMLEN(dirent) ((dirent)->d_namlen)\n#    if HAVE_SYS_NDIR_H\n#      include <sys/ndir.h>\n#    endif\n#    if HAVE_SYS_DIR_H\n#      include <sys/dir.h>\n#    endif\n#    if HAVE_NDIR_H\n#      include <ndir.h>\n#    endif\n#  endif\n#endif\n\n#if HAVE_ARGZ_H\n#  include <argz.h>\n#endif\n\n#if HAVE_ASSERT_H\n#  include <assert.h>\n#else\n#  define assert(arg)\t((void) 0)\n#endif\n\n#include \"ltdl.h\"\n\n#if WITH_DMALLOC\n#  include <dmalloc.h>\n#endif\n\n\n\n\f\n/* --- WINDOWS SUPPORT --- */\n\n\n#ifdef DLL_EXPORT\n#  define LT_GLOBAL_DATA\t__declspec(dllexport)\n#else\n#  define LT_GLOBAL_DATA\n#endif\n\n/* fopen() mode flags for reading a text file */\n#undef\tLT_READTEXT_MODE\n#ifdef __WINDOWS__\n#  define LT_READTEXT_MODE \"rt\"\n#else\n#  define LT_READTEXT_MODE \"r\"\n#endif\n\n#ifdef LT_USE_WINDOWS_DIRENT_EMULATION\n\n#include <windows.h>\n\n#define dirent lt_dirent\n#define DIR lt_DIR\n\nstruct dirent\n{\n  char d_name[2048];\n  int  d_namlen;\n};\n\ntypedef struct _DIR\n{\n  HANDLE hSearch;\n  WIN32_FIND_DATA Win32FindData;\n  BOOL firsttime;\n  struct dirent file_info;\n} DIR;\n\n#endif /* LT_USE_WINDOWS_DIRENT_EMULATION */\n\n\f\n/* --- MANIFEST CONSTANTS --- */\n\n\n/* Standard libltdl search path environment variable name  */\n#undef  LTDL_SEARCHPATH_VAR\n#define LTDL_SEARCHPATH_VAR\t\"LTDL_LIBRARY_PATH\"\n\n/* Standard libtool archive file extension.  */\n#undef  LTDL_ARCHIVE_EXT\n#define LTDL_ARCHIVE_EXT\t\".la\"\n\n/* max. filename length */\n#ifndef LT_FILENAME_MAX\n#  define LT_FILENAME_MAX\t1024\n#endif\n\n/* This is the maximum symbol size that won't require malloc/free */\n#undef\tLT_SYMBOL_LENGTH\n#define LT_SYMBOL_LENGTH\t128\n\n/* This accounts for the _LTX_ separator */\n#undef\tLT_SYMBOL_OVERHEAD\n#define LT_SYMBOL_OVERHEAD\t5\n\n\n\n\f\n/* --- MEMORY HANDLING --- */\n\n\n/* These are the functions used internally.  In addition to making\n   use of the associated function pointers above, they also perform\n   error handling.  */\nstatic char   *lt_estrdup\tLT_PARAMS((const char *str));\nstatic lt_ptr lt_emalloc\tLT_PARAMS((size_t size));\nstatic lt_ptr lt_erealloc\tLT_PARAMS((lt_ptr addr, size_t size));\n\n/* static lt_ptr rpl_realloc\tLT_PARAMS((lt_ptr ptr, size_t size)); */\n#define rpl_realloc realloc\n\n/* These are the pointers that can be changed by the caller:  */\nLT_GLOBAL_DATA lt_ptr (*lt_dlmalloc)\tLT_PARAMS((size_t size))\n \t\t\t= (lt_ptr (*) LT_PARAMS((size_t))) malloc;\nLT_GLOBAL_DATA lt_ptr (*lt_dlrealloc)\tLT_PARAMS((lt_ptr ptr, size_t size))\n \t\t\t= (lt_ptr (*) LT_PARAMS((lt_ptr, size_t))) rpl_realloc;\nLT_GLOBAL_DATA void   (*lt_dlfree)\tLT_PARAMS((lt_ptr ptr))\n \t\t\t= (void (*) LT_PARAMS((lt_ptr))) free;\n\n/* The following macros reduce the amount of typing needed to cast\n   assigned memory.  */\n#if WITH_DMALLOC\n\n#define LT_DLMALLOC(tp, n)\t((tp *) xmalloc ((n) * sizeof(tp)))\n#define LT_DLREALLOC(tp, p, n)\t((tp *) xrealloc ((p), (n) * sizeof(tp)))\n#define LT_DLFREE(p)\t\t\t\t\t\t\\\n\tLT_STMT_START { if (p) (p) = (xfree (p), (lt_ptr) 0); } LT_STMT_END\n\n#define LT_EMALLOC(tp, n)\t((tp *) xmalloc ((n) * sizeof(tp)))\n#define LT_EREALLOC(tp, p, n)\t((tp *) xrealloc ((p), (n) * sizeof(tp)))\n\n#else\n\n#define LT_DLMALLOC(tp, n)\t((tp *) lt_dlmalloc ((n) * sizeof(tp)))\n#define LT_DLREALLOC(tp, p, n)\t((tp *) lt_dlrealloc ((p), (n) * sizeof(tp)))\n#define LT_DLFREE(p)\t\t\t\t\t\t\\\n\tLT_STMT_START { if (p) (p) = (lt_dlfree (p), (lt_ptr) 0); } LT_STMT_END\n\n#define LT_EMALLOC(tp, n)\t((tp *) lt_emalloc ((n) * sizeof(tp)))\n#define LT_EREALLOC(tp, p, n)\t((tp *) lt_erealloc ((p), (n) * sizeof(tp)))\n\n#endif\n\n#define LT_DLMEM_REASSIGN(p, q)\t\t\tLT_STMT_START {\t\\\n\tif ((p) != (q)) { if (p) lt_dlfree (p); (p) = (q); (q) = 0; }\t\\\n\t\t\t\t\t\t} LT_STMT_END\n\n\f\n/* --- REPLACEMENT FUNCTIONS --- */\n\n\n#undef strdup\n#define strdup rpl_strdup\n\nstatic char *strdup LT_PARAMS((const char *str));\n\nstatic char *\nstrdup(str)\n     const char *str;\n{\n  char *tmp = 0;\n\n  if (str)\n    {\n      tmp = LT_DLMALLOC (char, 1+ strlen (str));\n      if (tmp)\n\t{\n\t  strcpy(tmp, str);\n\t}\n    }\n\n  return tmp;\n}\n\n\n#if ! HAVE_STRCMP\n\n#undef strcmp\n#define strcmp rpl_strcmp\n\nstatic int strcmp LT_PARAMS((const char *str1, const char *str2));\n\nstatic int\nstrcmp (str1, str2)\n     const char *str1;\n     const char *str2;\n{\n  if (str1 == str2)\n    return 0;\n  if (str1 == 0)\n    return -1;\n  if (str2 == 0)\n    return 1;\n\n  for (;*str1 && *str2; ++str1, ++str2)\n    {\n      if (*str1 != *str2)\n\tbreak;\n    }\n\n  return (int)(*str1 - *str2);\n}\n#endif\n\n\n#if ! HAVE_STRCHR\n\n#  if HAVE_INDEX\n#    define strchr index\n#  else\n#    define strchr rpl_strchr\n\nstatic const char *strchr LT_PARAMS((const char *str, int ch));\n\nstatic const char*\nstrchr(str, ch)\n     const char *str;\n     int ch;\n{\n  const char *p;\n\n  for (p = str; *p != (char)ch && *p != LT_EOS_CHAR; ++p)\n    /*NOWORK*/;\n\n  return (*p == (char)ch) ? p : 0;\n}\n\n#  endif\n#endif /* !HAVE_STRCHR */\n\n\n#if ! HAVE_STRRCHR\n\n#  if HAVE_RINDEX\n#    define strrchr rindex\n#  else\n#    define strrchr rpl_strrchr\n\nstatic const char *strrchr LT_PARAMS((const char *str, int ch));\n\nstatic const char*\nstrrchr(str, ch)\n     const char *str;\n     int ch;\n{\n  const char *p, *q = 0;\n\n  for (p = str; *p != LT_EOS_CHAR; ++p)\n    {\n      if (*p == (char) ch)\n\t{\n\t  q = p;\n\t}\n    }\n\n  return q;\n}\n\n# endif\n#endif\n\n/* NOTE:  Neither bcopy nor the memcpy implementation below can\n          reliably handle copying in overlapping areas of memory.  Use\n          memmove (for which there is a fallback implmentation below)\n\t  if you need that behaviour.  */\n#if ! HAVE_MEMCPY\n\n#  if HAVE_BCOPY\n#    define memcpy(dest, src, size)\tbcopy (src, dest, size)\n#  else\n#    define memcpy rpl_memcpy\n\nstatic lt_ptr memcpy LT_PARAMS((lt_ptr dest, const lt_ptr src, size_t size));\n\nstatic lt_ptr\nmemcpy (dest, src, size)\n     lt_ptr dest;\n     const lt_ptr src;\n     size_t size;\n{\n  const char *\ts = src;\n  char *\td = dest;\n  size_t\ti = 0;\n\n  for (i = 0; i < size; ++i)\n    {\n      d[i] = s[i];\n    }\n\n  return dest;\n}\n\n#  endif /* !HAVE_BCOPY */\n#endif   /* !HAVE_MEMCPY */\n\n#if ! HAVE_MEMMOVE\n#  define memmove rpl_memmove\n\nstatic lt_ptr memmove LT_PARAMS((lt_ptr dest, const lt_ptr src, size_t size));\n\nstatic lt_ptr\nmemmove (dest, src, size)\n     lt_ptr dest;\n     const lt_ptr src;\n     size_t size;\n{\n  const char *\ts = src;\n  char *\td = dest;\n  size_t\ti;\n\n  if (d < s)\n    for (i = 0; i < size; ++i)\n      {\n\td[i] = s[i];\n      }\n  else if (d > s && size > 0)\n    for (i = size -1; ; --i)\n      {\n\td[i] = s[i];\n\tif (i == 0)\n\t  break;\n      }\n\n  return dest;\n}\n\n#endif /* !HAVE_MEMMOVE */\n\n#ifdef LT_USE_WINDOWS_DIRENT_EMULATION\n\nstatic void closedir LT_PARAMS((DIR *entry));\n\nstatic void\nclosedir(entry)\n  DIR *entry;\n{\n  assert(entry != (DIR *) NULL);\n  FindClose(entry->hSearch);\n  lt_dlfree((lt_ptr)entry);\n}\n\n\nstatic DIR * opendir LT_PARAMS((const char *path));\n\nstatic DIR*\nopendir (path)\n  const char *path;\n{\n  char file_specification[LT_FILENAME_MAX];\n  DIR *entry;\n\n  assert(path != (char *) NULL);\n  /* allow space for: path + '\\\\' '\\\\' '*' '.' '*' + '\\0' */\n  (void) strncpy (file_specification, path, LT_FILENAME_MAX-6);\n  file_specification[LT_FILENAME_MAX-6] = LT_EOS_CHAR;\n  (void) strcat(file_specification,\"\\\\\");\n  entry = LT_DLMALLOC (DIR,sizeof(DIR));\n  if (entry != (DIR *) 0)\n    {\n      entry->firsttime = TRUE;\n      entry->hSearch = FindFirstFile(file_specification,&entry->Win32FindData);\n    }\n  if (entry->hSearch == INVALID_HANDLE_VALUE)\n    {\n      (void) strcat(file_specification,\"\\\\*.*\");\n      entry->hSearch = FindFirstFile(file_specification,&entry->Win32FindData);\n      if (entry->hSearch == INVALID_HANDLE_VALUE)\n        {\n          LT_DLFREE (entry);\n          return (DIR *) 0;\n        }\n    }\n  return(entry);\n}\n\n\nstatic struct dirent *readdir LT_PARAMS((DIR *entry));\n\nstatic struct dirent *readdir(entry)\n  DIR *entry;\n{\n  int\n    status;\n\n  if (entry == (DIR *) 0)\n    return((struct dirent *) 0);\n  if (!entry->firsttime)\n    {\n      status = FindNextFile(entry->hSearch,&entry->Win32FindData);\n      if (status == 0)\n        return((struct dirent *) 0);\n    }\n  entry->firsttime = FALSE;\n  (void) strncpy(entry->file_info.d_name,entry->Win32FindData.cFileName,\n    LT_FILENAME_MAX-1);\n  entry->file_info.d_name[LT_FILENAME_MAX - 1] = LT_EOS_CHAR;\n  entry->file_info.d_namlen = strlen(entry->file_info.d_name);\n  return(&entry->file_info);\n}\n\n#endif /* LT_USE_WINDOWS_DIRENT_EMULATION */\n\n/* According to Alexandre Oliva <oliva@lsd.ic.unicamp.br>,\n    ``realloc is not entirely portable''\n   In any case we want to use the allocator supplied by the user without\n   burdening them with an lt_dlrealloc function pointer to maintain.\n   Instead implement our own version (with known boundary conditions)\n   using lt_dlmalloc and lt_dlfree. */\n\n/* #undef realloc\n   #define realloc rpl_realloc\n*/\n#if 0\n  /* You can't (re)define realloc unless you also (re)define malloc.\n     Right now, this code uses the size of the *destination* to decide\n     how much to copy.  That's not right, but you can't know the size\n     of the source unless you know enough about, or wrote malloc.  So\n     this code is disabled... */\n\nstatic lt_ptr\nrealloc (ptr, size)\n     lt_ptr ptr;\n     size_t size;\n{\n  if (size == 0)\n    {\n      /* For zero or less bytes, free the original memory */\n      if (ptr != 0)\n\t{\n\t  lt_dlfree (ptr);\n\t}\n\n      return (lt_ptr) 0;\n    }\n  else if (ptr == 0)\n    {\n      /* Allow reallocation of a NULL pointer.  */\n      return lt_dlmalloc (size);\n    }\n  else\n    {\n      /* Allocate a new block, copy and free the old block.  */\n      lt_ptr mem = lt_dlmalloc (size);\n\n      if (mem)\n\t{\n\t  memcpy (mem, ptr, size);\n\t  lt_dlfree (ptr);\n\t}\n\n      /* Note that the contents of PTR are not damaged if there is\n\t insufficient memory to realloc.  */\n      return mem;\n    }\n}\n#endif\n\n\n#if ! HAVE_ARGZ_APPEND\n#  define argz_append rpl_argz_append\n\nstatic error_t argz_append LT_PARAMS((char **pargz, size_t *pargz_len,\n\t\t\t\t\tconst char *buf, size_t buf_len));\n\nstatic error_t\nargz_append (pargz, pargz_len, buf, buf_len)\n     char **pargz;\n     size_t *pargz_len;\n     const char *buf;\n     size_t buf_len;\n{\n  size_t argz_len;\n  char  *argz;\n\n  assert (pargz);\n  assert (pargz_len);\n  assert ((*pargz && *pargz_len) || (!*pargz && !*pargz_len));\n\n  /* If nothing needs to be appended, no more work is required.  */\n  if (buf_len == 0)\n    return 0;\n\n  /* Ensure there is enough room to append BUF_LEN.  */\n  argz_len = *pargz_len + buf_len;\n  argz = LT_DLREALLOC (char, *pargz, argz_len);\n  if (!argz)\n    return ENOMEM;\n\n  /* Copy characters from BUF after terminating '\\0' in ARGZ.  */\n  memcpy (argz + *pargz_len, buf, buf_len);\n\n  /* Assign new values.  */\n  *pargz = argz;\n  *pargz_len = argz_len;\n\n  return 0;\n}\n#endif /* !HAVE_ARGZ_APPEND */\n\n\n#if ! HAVE_ARGZ_CREATE_SEP\n#  define argz_create_sep rpl_argz_create_sep\n\nstatic error_t argz_create_sep LT_PARAMS((const char *str, int delim,\n\t\t\t\t\t    char **pargz, size_t *pargz_len));\n\nstatic error_t\nargz_create_sep (str, delim, pargz, pargz_len)\n     const char *str;\n     int delim;\n     char **pargz;\n     size_t *pargz_len;\n{\n  size_t argz_len;\n  char *argz = 0;\n\n  assert (str);\n  assert (pargz);\n  assert (pargz_len);\n\n  /* Make a copy of STR, but replacing each occurence of\n     DELIM with '\\0'.  */\n  argz_len = 1+ LT_STRLEN (str);\n  if (argz_len)\n    {\n      const char *p;\n      char *q;\n\n      argz = LT_DLMALLOC (char, argz_len);\n      if (!argz)\n\treturn ENOMEM;\n\n      for (p = str, q = argz; *p != LT_EOS_CHAR; ++p)\n\t{\n\t  if (*p == delim)\n\t    {\n\t      /* Ignore leading delimiters, and fold consecutive\n\t\t delimiters in STR into a single '\\0' in ARGZ.  */\n\t      if ((q > argz) && (q[-1] != LT_EOS_CHAR))\n\t\t*q++ = LT_EOS_CHAR;\n\t      else\n\t\t--argz_len;\n\t    }\n\t  else\n\t    *q++ = *p;\n\t}\n      /* Copy terminating LT_EOS_CHAR.  */\n      *q = *p;\n    }\n\n  /* If ARGZ_LEN has shrunk to nothing, release ARGZ's memory.  */\n  if (!argz_len)\n    LT_DLFREE (argz);\n\n  /* Assign new values.  */\n  *pargz = argz;\n  *pargz_len = argz_len;\n\n  return 0;\n}\n#endif /* !HAVE_ARGZ_CREATE_SEP */\n\n\n#if ! HAVE_ARGZ_INSERT\n#  define argz_insert rpl_argz_insert\n\nstatic error_t argz_insert LT_PARAMS((char **pargz, size_t *pargz_len,\n\t\t\t\t\tchar *before, const char *entry));\n\nstatic error_t\nargz_insert (pargz, pargz_len, before, entry)\n     char **pargz;\n     size_t *pargz_len;\n     char *before;\n     const char *entry;\n{\n  assert (pargz);\n  assert (pargz_len);\n  assert (entry && *entry);\n\n  /* No BEFORE address indicates ENTRY should be inserted after the\n     current last element.  */\n  if (!before)\n    return argz_append (pargz, pargz_len, entry, 1+ LT_STRLEN (entry));\n\n  /* This probably indicates a programmer error, but to preserve\n     semantics, scan back to the start of an entry if BEFORE points\n     into the middle of it.  */\n  while ((before > *pargz) && (before[-1] != LT_EOS_CHAR))\n    --before;\n\n  {\n    size_t entry_len\t= 1+ LT_STRLEN (entry);\n    size_t argz_len\t= *pargz_len + entry_len;\n    size_t offset\t= before - *pargz;\n    char   *argz\t= LT_DLREALLOC (char, *pargz, argz_len);\n\n    if (!argz)\n      return ENOMEM;\n\n    /* Make BEFORE point to the equivalent offset in ARGZ that it\n       used to have in *PARGZ incase realloc() moved the block.  */\n    before = argz + offset;\n\n    /* Move the ARGZ entries starting at BEFORE up into the new\n       space at the end -- making room to copy ENTRY into the\n       resulting gap.  */\n    memmove (before + entry_len, before, *pargz_len - offset);\n    memcpy  (before, entry, entry_len);\n\n    /* Assign new values.  */\n    *pargz = argz;\n    *pargz_len = argz_len;\n  }\n\n  return 0;\n}\n#endif /* !HAVE_ARGZ_INSERT */\n\n\n#if ! HAVE_ARGZ_NEXT\n#  define argz_next rpl_argz_next\n\nstatic char *argz_next LT_PARAMS((char *argz, size_t argz_len,\n\t\t\t\t    const char *entry));\n\nstatic char *\nargz_next (argz, argz_len, entry)\n     char *argz;\n     size_t argz_len;\n     const char *entry;\n{\n  assert ((argz && argz_len) || (!argz && !argz_len));\n\n  if (entry)\n    {\n      /* Either ARGZ/ARGZ_LEN is empty, or ENTRY points into an address\n\t within the ARGZ vector.  */\n      assert ((!argz && !argz_len)\n\t      || ((argz <= entry) && (entry < (argz + argz_len))));\n\n      /* Move to the char immediately after the terminating\n\t '\\0' of ENTRY.  */\n      entry = 1+ strchr (entry, LT_EOS_CHAR);\n\n      /* Return either the new ENTRY, or else NULL if ARGZ is\n\t exhausted.  */\n      return (entry >= argz + argz_len) ? 0 : (char *) entry;\n    }\n  else\n    {\n      /* This should probably be flagged as a programmer error,\n\t since starting an argz_next loop with the iterator set\n\t to ARGZ is safer.  To preserve semantics, handle the NULL\n\t case by returning the start of ARGZ (if any).  */\n      if (argz_len > 0)\n\treturn argz;\n      else\n\treturn 0;\n    }\n}\n#endif /* !HAVE_ARGZ_NEXT */\n\n\n\n#if ! HAVE_ARGZ_STRINGIFY\n#  define argz_stringify rpl_argz_stringify\n\nstatic void argz_stringify LT_PARAMS((char *argz, size_t argz_len,\n\t\t\t\t       int sep));\n\nstatic void\nargz_stringify (argz, argz_len, sep)\n     char *argz;\n     size_t argz_len;\n     int sep;\n{\n  assert ((argz && argz_len) || (!argz && !argz_len));\n\n  if (sep)\n    {\n      --argz_len;\t\t/* don't stringify the terminating EOS */\n      while (--argz_len > 0)\n\t{\n\t  if (argz[argz_len] == LT_EOS_CHAR)\n\t    argz[argz_len] = sep;\n\t}\n    }\n}\n#endif /* !HAVE_ARGZ_STRINGIFY */\n\n\n\n\f\n/* --- TYPE DEFINITIONS -- */\n\n\n/* This type is used for the array of caller data sets in each handler. */\ntypedef struct {\n  lt_dlcaller_id\tkey;\n  lt_ptr\t\tdata;\n} lt_caller_data;\n\n\n\n\f\n/* --- OPAQUE STRUCTURES DECLARED IN LTDL.H --- */\n\n\n/* Extract the diagnostic strings from the error table macro in the same\n   order as the enumerated indices in ltdl.h. */\n\nstatic const char *lt_dlerror_strings[] =\n  {\n#define LT_ERROR(name, diagnostic)\t(diagnostic),\n    lt_dlerror_table\n#undef LT_ERROR\n\n    0\n  };\n\n/* This structure is used for the list of registered loaders. */\nstruct lt_dlloader {\n  struct lt_dlloader   *next;\n  const char\t       *loader_name;\t/* identifying name for each loader */\n  const char\t       *sym_prefix;\t/* prefix for symbols */\n  lt_module_open       *module_open;\n  lt_module_close      *module_close;\n  lt_find_sym\t       *find_sym;\n  lt_dlloader_exit     *dlloader_exit;\n  lt_user_data\t\tdlloader_data;\n};\n\nstruct lt_dlhandle_struct {\n  struct lt_dlhandle_struct   *next;\n  lt_dlloader\t       *loader;\t\t/* dlopening interface */\n  lt_dlinfo\t\tinfo;\n  int\t\t\tdepcount;\t/* number of dependencies */\n  lt_dlhandle\t       *deplibs;\t/* dependencies */\n  lt_module\t\tmodule;\t\t/* system module handle */\n  lt_ptr\t\tsystem;\t\t/* system specific data */\n  lt_caller_data       *caller_data;\t/* per caller associated data */\n  int\t\t\tflags;\t\t/* various boolean stats */\n};\n\n/* Various boolean flags can be stored in the flags field of an\n   lt_dlhandle_struct... */\n#define LT_DLGET_FLAG(handle, flag) (((handle)->flags & (flag)) == (flag))\n#define LT_DLSET_FLAG(handle, flag) ((handle)->flags |= (flag))\n\n#define LT_DLRESIDENT_FLAG\t    (0x01 << 0)\n/* ...add more flags here... */\n\n#define LT_DLIS_RESIDENT(handle)    LT_DLGET_FLAG(handle, LT_DLRESIDENT_FLAG)\n\n\n#define LT_DLSTRERROR(name)\tlt_dlerror_strings[LT_CONC(LT_ERROR_,name)]\n\nstatic\tconst char\tobjdir[]\t\t= LTDL_OBJDIR;\nstatic\tconst char\tarchive_ext[]\t\t= LTDL_ARCHIVE_EXT;\n#ifdef\tLTDL_SHLIB_EXT\nstatic\tconst char\tshlib_ext[]\t\t= LTDL_SHLIB_EXT;\n#endif\n#ifdef\tLTDL_SYSSEARCHPATH\nstatic\tconst char\tsys_search_path[]\t= LTDL_SYSSEARCHPATH;\n#endif\n\n\n\n\f\n/* --- MUTEX LOCKING --- */\n\n\n/* Macros to make it easier to run the lock functions only if they have\n   been registered.  The reason for the complicated lock macro is to\n   ensure that the stored error message from the last error is not\n   accidentally erased if the current function doesn't generate an\n   error of its own.  */\n#define LT_DLMUTEX_LOCK()\t\t\tLT_STMT_START {\t\\\n\tif (lt_dlmutex_lock_func) (*lt_dlmutex_lock_func)();\t\\\n\t\t\t\t\t\t} LT_STMT_END\n#define LT_DLMUTEX_UNLOCK()\t\t\tLT_STMT_START { \\\n\tif (lt_dlmutex_unlock_func) (*lt_dlmutex_unlock_func)();\\\n\t\t\t\t\t\t} LT_STMT_END\n#define LT_DLMUTEX_SETERROR(errormsg)\t\tLT_STMT_START {\t\\\n\tif (lt_dlmutex_seterror_func)\t\t\t\t\\\n\t\t(*lt_dlmutex_seterror_func) (errormsg);\t\t\\\n\telse \tlt_dllast_error = (errormsg);\t} LT_STMT_END\n#define LT_DLMUTEX_GETERROR(errormsg)\t\tLT_STMT_START {\t\\\n\tif (lt_dlmutex_seterror_func)\t\t\t\t\\\n\t\t(errormsg) = (*lt_dlmutex_geterror_func) ();\t\\\n\telse\t(errormsg) = lt_dllast_error;\t} LT_STMT_END\n\n/* The mutex functions stored here are global, and are necessarily the\n   same for all threads that wish to share access to libltdl.  */\nstatic\tlt_dlmutex_lock\t    *lt_dlmutex_lock_func     = 0;\nstatic\tlt_dlmutex_unlock   *lt_dlmutex_unlock_func   = 0;\nstatic\tlt_dlmutex_seterror *lt_dlmutex_seterror_func = 0;\nstatic\tlt_dlmutex_geterror *lt_dlmutex_geterror_func = 0;\nstatic\tconst char\t    *lt_dllast_error\t      = 0;\n\n\n/* Either set or reset the mutex functions.  Either all the arguments must\n   be valid functions, or else all can be NULL to turn off locking entirely.\n   The registered functions should be manipulating a static global lock\n   from the lock() and unlock() callbacks, which needs to be reentrant.  */\nint\nlt_dlmutex_register (lock, unlock, seterror, geterror)\n     lt_dlmutex_lock *lock;\n     lt_dlmutex_unlock *unlock;\n     lt_dlmutex_seterror *seterror;\n     lt_dlmutex_geterror *geterror;\n{\n  lt_dlmutex_unlock *old_unlock = unlock;\n  int\t\t     errors\t= 0;\n\n  /* Lock using the old lock() callback, if any.  */\n  LT_DLMUTEX_LOCK ();\n\n  if ((lock && unlock && seterror && geterror)\n      || !(lock || unlock || seterror || geterror))\n    {\n      lt_dlmutex_lock_func     = lock;\n      lt_dlmutex_unlock_func   = unlock;\n      lt_dlmutex_geterror_func = geterror;\n    }\n  else\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (INVALID_MUTEX_ARGS));\n      ++errors;\n    }\n\n  /* Use the old unlock() callback we saved earlier, if any.  Otherwise\n     record any errors using internal storage.  */\n  if (old_unlock)\n    (*old_unlock) ();\n\n  /* Return the number of errors encountered during the execution of\n     this function.  */\n  return errors;\n}\n\n\n\n\f\n/* --- ERROR HANDLING --- */\n\n\nstatic\tconst char    **user_error_strings\t= 0;\nstatic\tint\t\terrorcount\t\t= LT_ERROR_MAX;\n\nint\nlt_dladderror (diagnostic)\n     const char *diagnostic;\n{\n  int\t\terrindex = 0;\n  int\t\tresult\t = -1;\n  const char  **temp     = (const char **) 0;\n\n  assert (diagnostic);\n\n  LT_DLMUTEX_LOCK ();\n\n  errindex = errorcount - LT_ERROR_MAX;\n  temp = LT_EREALLOC (const char *, user_error_strings, 1 + errindex);\n  if (temp)\n    {\n      user_error_strings\t\t= temp;\n      user_error_strings[errindex]\t= diagnostic;\n      result\t\t\t\t= errorcount++;\n    }\n\n  LT_DLMUTEX_UNLOCK ();\n\n  return result;\n}\n\nint\nlt_dlseterror (errindex)\n     int errindex;\n{\n  int\t\terrors\t = 0;\n\n  LT_DLMUTEX_LOCK ();\n\n  if (errindex >= errorcount || errindex < 0)\n    {\n      /* Ack!  Error setting the error message! */\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (INVALID_ERRORCODE));\n      ++errors;\n    }\n  else if (errindex < LT_ERROR_MAX)\n    {\n      /* No error setting the error message! */\n      LT_DLMUTEX_SETERROR (lt_dlerror_strings[errindex]);\n    }\n  else\n    {\n      /* No error setting the error message! */\n      LT_DLMUTEX_SETERROR (user_error_strings[errindex - LT_ERROR_MAX]);\n    }\n\n  LT_DLMUTEX_UNLOCK ();\n\n  return errors;\n}\n\nstatic lt_ptr\nlt_emalloc (size)\n     size_t size;\n{\n  lt_ptr mem = lt_dlmalloc (size);\n  if (size && !mem)\n    LT_DLMUTEX_SETERROR (LT_DLSTRERROR (NO_MEMORY));\n  return mem;\n}\n\nstatic lt_ptr\nlt_erealloc (addr, size)\n     lt_ptr addr;\n     size_t size;\n{\n  lt_ptr mem = lt_dlrealloc (addr, size);\n  if (size && !mem)\n    LT_DLMUTEX_SETERROR (LT_DLSTRERROR (NO_MEMORY));\n  return mem;\n}\n\nstatic char *\nlt_estrdup (str)\n     const char *str;\n{\n  char *copy = strdup (str);\n  if (LT_STRLEN (str) && !copy)\n    LT_DLMUTEX_SETERROR (LT_DLSTRERROR (NO_MEMORY));\n  return copy;\n}\n\n\n\n\f\n/* --- DLOPEN() INTERFACE LOADER --- */\n\n\n#if HAVE_LIBDL\n\n/* dynamic linking with dlopen/dlsym */\n\n#if HAVE_DLFCN_H\n#  include <dlfcn.h>\n#endif\n\n#if HAVE_SYS_DL_H\n#  include <sys/dl.h>\n#endif\n\n#ifdef RTLD_GLOBAL\n#  define LT_GLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_GLOBAL\t\tDL_GLOBAL\n#  endif\n#endif /* !RTLD_GLOBAL */\n#ifndef LT_GLOBAL\n#  define LT_GLOBAL\t\t0\n#endif /* !LT_GLOBAL */\n\n/* We may have to define LT_LAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_LAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_LAZY_OR_NOW\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_LAZY_OR_NOW\tDL_LAZY\n#    endif\n#  endif /* !RTLD_LAZY */\n#endif\n#ifndef LT_LAZY_OR_NOW\n#  ifdef RTLD_NOW\n#    define LT_LAZY_OR_NOW\tRTLD_NOW\n#  else\n#    ifdef DL_NOW\n#      define LT_LAZY_OR_NOW\tDL_NOW\n#    endif\n#  endif /* !RTLD_NOW */\n#endif\n#ifndef LT_LAZY_OR_NOW\n#  define LT_LAZY_OR_NOW\t0\n#endif /* !LT_LAZY_OR_NOW */\n\n#if HAVE_DLERROR\n#  define DLERROR(arg)\tdlerror ()\n#else\n#  define DLERROR(arg)\tLT_DLSTRERROR (arg)\n#endif\n\nstatic lt_module\nsys_dl_open (loader_data, filename)\n     lt_user_data loader_data;\n     const char *filename;\n{\n  lt_module   module   = dlopen (filename, LT_GLOBAL | LT_LAZY_OR_NOW);\n\n  if (!module)\n    {\n      LT_DLMUTEX_SETERROR (DLERROR (CANNOT_OPEN));\n    }\n\n  return module;\n}\n\nstatic int\nsys_dl_close (loader_data, module)\n     lt_user_data loader_data;\n     lt_module module;\n{\n  int errors = 0;\n\n  if (dlclose (module) != 0)\n    {\n      LT_DLMUTEX_SETERROR (DLERROR (CANNOT_CLOSE));\n      ++errors;\n    }\n\n  return errors;\n}\n\nstatic lt_ptr\nsys_dl_sym (loader_data, module, symbol)\n     lt_user_data loader_data;\n     lt_module module;\n     const char *symbol;\n{\n  lt_ptr address = dlsym (module, symbol);\n\n  if (!address)\n    {\n      LT_DLMUTEX_SETERROR (DLERROR (SYMBOL_NOT_FOUND));\n    }\n\n  return address;\n}\n\nstatic struct lt_user_dlloader sys_dl =\n  {\n#  ifdef NEED_USCORE\n    \"_\",\n#  else\n    0,\n#  endif\n    sys_dl_open, sys_dl_close, sys_dl_sym, 0, 0 };\n\n\n#endif /* HAVE_LIBDL */\n\n\n\f\n/* --- SHL_LOAD() INTERFACE LOADER --- */\n\n#if HAVE_SHL_LOAD\n\n/* dynamic linking with shl_load (HP-UX) (comments from gmodule) */\n\n#ifdef HAVE_DL_H\n#  include <dl.h>\n#endif\n\n/* some flags are missing on some systems, so we provide\n * harmless defaults.\n *\n * Mandatory:\n * BIND_IMMEDIATE  - Resolve symbol references when the library is loaded.\n * BIND_DEFERRED   - Delay code symbol resolution until actual reference.\n *\n * Optionally:\n * BIND_FIRST\t   - Place the library at the head of the symbol search\n * \t\t     order.\n * BIND_NONFATAL   - The default BIND_IMMEDIATE behavior is to treat all\n * \t\t     unsatisfied symbols as fatal.  This flag allows\n * \t\t     binding of unsatisfied code symbols to be deferred\n * \t\t     until use.\n *\t\t     [Perl: For certain libraries, like DCE, deferred\n *\t\t     binding often causes run time problems. Adding\n *\t\t     BIND_NONFATAL to BIND_IMMEDIATE still allows\n *\t\t     unresolved references in situations like this.]\n * BIND_NOSTART\t   - Do not call the initializer for the shared library\n *\t\t     when the library is loaded, nor on a future call to\n *\t\t     shl_unload().\n * BIND_VERBOSE\t   - Print verbose messages concerning possible\n *\t\t     unsatisfied symbols.\n *\n * hp9000s700/hp9000s800:\n * BIND_RESTRICTED - Restrict symbols visible by the library to those\n *\t\t     present at library load time.\n * DYNAMIC_PATH\t   - Allow the loader to dynamically search for the\n *\t\t     library specified by the path argument.\n */\n\n#ifndef\tDYNAMIC_PATH\n#  define DYNAMIC_PATH\t\t0\n#endif\n#ifndef\tBIND_RESTRICTED\n#  define BIND_RESTRICTED\t0\n#endif\n\n#define\tLT_BIND_FLAGS\t(BIND_IMMEDIATE | BIND_NONFATAL | DYNAMIC_PATH)\n\nstatic lt_module\nsys_shl_open (loader_data, filename)\n     lt_user_data loader_data;\n     const char *filename;\n{\n  static shl_t self = (shl_t) 0;\n  lt_module module = shl_load (filename, LT_BIND_FLAGS, 0L);\n\n  /* Since searching for a symbol against a NULL module handle will also\n     look in everything else that was already loaded and exported with\n     the -E compiler flag, we always cache a handle saved before any\n     modules are loaded.  */\n  if (!self)\n    {\n      lt_ptr address;\n      shl_findsym (&self, \"main\", TYPE_UNDEFINED, &address);\n    }\n\n  if (!filename)\n    {\n      module = self;\n    }\n  else\n    {\n      module = shl_load (filename, LT_BIND_FLAGS, 0L);\n\n      if (!module)\n\t{\n\t  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (CANNOT_OPEN));\n\t}\n    }\n\n  return module;\n}\n\nstatic int\nsys_shl_close (loader_data, module)\n     lt_user_data loader_data;\n     lt_module module;\n{\n  int errors = 0;\n\n  if (module && (shl_unload ((shl_t) (module)) != 0))\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (CANNOT_CLOSE));\n      ++errors;\n    }\n\n  return errors;\n}\n\nstatic lt_ptr\nsys_shl_sym (loader_data, module, symbol)\n     lt_user_data loader_data;\n     lt_module module;\n     const char *symbol;\n{\n  lt_ptr address = 0;\n\n  /* sys_shl_open should never return a NULL module handle */\n  if (module == (lt_module) 0)\n  {\n    LT_DLMUTEX_SETERROR (LT_DLSTRERROR (INVALID_HANDLE));\n  }\n  else if (!shl_findsym((shl_t*) &module, symbol, TYPE_UNDEFINED, &address))\n    {\n      if (!address)\n\t{\n\t  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (SYMBOL_NOT_FOUND));\n\t}\n    }\n\n  return address;\n}\n\nstatic struct lt_user_dlloader sys_shl = {\n  0, sys_shl_open, sys_shl_close, sys_shl_sym, 0, 0\n};\n\n#endif /* HAVE_SHL_LOAD */\n\n\n\n\f\n/* --- LOADLIBRARY() INTERFACE LOADER --- */\n\n#ifdef __WINDOWS__\n\n/* dynamic linking for Win32 */\n\n#include <windows.h>\n\n/* Forward declaration; required to implement handle search below. */\nstatic lt_dlhandle handles;\n\nstatic lt_module\nsys_wll_open (loader_data, filename)\n     lt_user_data loader_data;\n     const char *filename;\n{\n  lt_dlhandle\tcur;\n  lt_module\tmodule\t   = 0;\n  const char   *errormsg   = 0;\n  char\t       *searchname = 0;\n  char\t       *ext;\n  char\t\tself_name_buf[MAX_PATH];\n\n  if (!filename)\n    {\n      /* Get the name of main module */\n      *self_name_buf = 0;\n      GetModuleFileName (NULL, self_name_buf, sizeof (self_name_buf));\n      filename = ext = self_name_buf;\n    }\n  else\n    {\n      ext = strrchr (filename, '.');\n    }\n\n  if (ext)\n    {\n      /* FILENAME already has an extension. */\n      searchname = lt_estrdup (filename);\n    }\n  else\n    {\n      /* Append a `.' to stop Windows from adding an\n\t implicit `.dll' extension. */\n      searchname = LT_EMALLOC (char, 2+ LT_STRLEN (filename));\n      if (searchname)\n\tsprintf (searchname, \"%s.\", filename);\n    }\n  if (!searchname)\n    return 0;\n\n#if __CYGWIN__\n  {\n    char wpath[MAX_PATH];\n    cygwin_conv_to_full_win32_path(searchname, wpath);\n    module = LoadLibrary(wpath);\n  }\n#else\n  module = LoadLibrary (searchname);\n#endif\n  LT_DLFREE (searchname);\n\n  /* libltdl expects this function to fail if it is unable\n     to physically load the library.  Sadly, LoadLibrary\n     will search the loaded libraries for a match and return\n     one of them if the path search load fails.\n\n     We check whether LoadLibrary is returning a handle to\n     an already loaded module, and simulate failure if we\n     find one. */\n  LT_DLMUTEX_LOCK ();\n  cur = handles;\n  while (cur)\n    {\n      if (!cur->module)\n\t{\n\t  cur = 0;\n\t  break;\n\t}\n\n      if (cur->module == module)\n\t{\n\t  break;\n\t}\n\n      cur = cur->next;\n  }\n  LT_DLMUTEX_UNLOCK ();\n\n  if (cur || !module)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (CANNOT_OPEN));\n      module = 0;\n    }\n\n  return module;\n}\n\nstatic int\nsys_wll_close (loader_data, module)\n     lt_user_data loader_data;\n     lt_module module;\n{\n  int\t      errors   = 0;\n\n  if (FreeLibrary(module) == 0)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (CANNOT_CLOSE));\n      ++errors;\n    }\n\n  return errors;\n}\n\nstatic lt_ptr\nsys_wll_sym (loader_data, module, symbol)\n     lt_user_data loader_data;\n     lt_module module;\n     const char *symbol;\n{\n  lt_ptr      address  = GetProcAddress (module, symbol);\n\n  if (!address)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (SYMBOL_NOT_FOUND));\n    }\n\n  return address;\n}\n\nstatic struct lt_user_dlloader sys_wll = {\n  0, sys_wll_open, sys_wll_close, sys_wll_sym, 0, 0\n};\n\n#endif /* __WINDOWS__ */\n\n\n\n\f\n/* --- LOAD_ADD_ON() INTERFACE LOADER --- */\n\n\n#ifdef __BEOS__\n\n/* dynamic linking for BeOS */\n\n#include <kernel/image.h>\n\nstatic lt_module\nsys_bedl_open (loader_data, filename)\n     lt_user_data loader_data;\n     const char *filename;\n{\n  image_id image = 0;\n\n  if (filename)\n    {\n      image = load_add_on (filename);\n    }\n  else\n    {\n      image_info info;\n      int32 cookie = 0;\n      if (get_next_image_info (0, &cookie, &info) == B_OK)\n\timage = load_add_on (info.name);\n    }\n\n  if (image <= 0)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (CANNOT_OPEN));\n      image = 0;\n    }\n\n  return (lt_module) image;\n}\n\nstatic int\nsys_bedl_close (loader_data, module)\n     lt_user_data loader_data;\n     lt_module module;\n{\n  int errors = 0;\n\n  if (unload_add_on ((image_id) module) != B_OK)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (CANNOT_CLOSE));\n      ++errors;\n    }\n\n  return errors;\n}\n\nstatic lt_ptr\nsys_bedl_sym (loader_data, module, symbol)\n     lt_user_data loader_data;\n     lt_module module;\n     const char *symbol;\n{\n  lt_ptr address = 0;\n  image_id image = (image_id) module;\n\n  if (get_image_symbol (image, symbol, B_SYMBOL_TYPE_ANY, address) != B_OK)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (SYMBOL_NOT_FOUND));\n      address = 0;\n    }\n\n  return address;\n}\n\nstatic struct lt_user_dlloader sys_bedl = {\n  0, sys_bedl_open, sys_bedl_close, sys_bedl_sym, 0, 0\n};\n\n#endif /* __BEOS__ */\n\n\n\n\f\n/* --- DLD_LINK() INTERFACE LOADER --- */\n\n\n#if HAVE_DLD\n\n/* dynamic linking with dld */\n\n#if HAVE_DLD_H\n#include <dld.h>\n#endif\n\nstatic lt_module\nsys_dld_open (loader_data, filename)\n     lt_user_data loader_data;\n     const char *filename;\n{\n  lt_module module = strdup (filename);\n\n  if (dld_link (filename) != 0)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (CANNOT_OPEN));\n      LT_DLFREE (module);\n      module = 0;\n    }\n\n  return module;\n}\n\nstatic int\nsys_dld_close (loader_data, module)\n     lt_user_data loader_data;\n     lt_module module;\n{\n  int errors = 0;\n\n  if (dld_unlink_by_file ((char*)(module), 1) != 0)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (CANNOT_CLOSE));\n      ++errors;\n    }\n  else\n    {\n      LT_DLFREE (module);\n    }\n\n  return errors;\n}\n\nstatic lt_ptr\nsys_dld_sym (loader_data, module, symbol)\n     lt_user_data loader_data;\n     lt_module module;\n     const char *symbol;\n{\n  lt_ptr address = dld_get_func (symbol);\n\n  if (!address)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (SYMBOL_NOT_FOUND));\n    }\n\n  return address;\n}\n\nstatic struct lt_user_dlloader sys_dld = {\n  0, sys_dld_open, sys_dld_close, sys_dld_sym, 0, 0\n};\n\n#endif /* HAVE_DLD */\n\n/* --- DYLD() MACOSX/DARWIN INTERFACE LOADER --- */\n#if HAVE_DYLD\n\n\n#if HAVE_MACH_O_DYLD_H\n#if !defined(__APPLE_CC__) && !defined(__MWERKS__) && !defined(__private_extern__)\n/* Is this correct? Does it still function properly? */\n#define __private_extern__ extern\n#endif\n# include <mach-o/dyld.h>\n#endif\n#include <mach-o/getsect.h>\n\n/* We have to put some stuff here that isn't in older dyld.h files */\n#ifndef ENUM_DYLD_BOOL\n# define ENUM_DYLD_BOOL\n# undef FALSE\n# undef TRUE\n enum DYLD_BOOL {\n    FALSE,\n    TRUE\n };\n#endif\n#ifndef LC_REQ_DYLD\n# define LC_REQ_DYLD 0x80000000\n#endif\n#ifndef LC_LOAD_WEAK_DYLIB\n# define LC_LOAD_WEAK_DYLIB (0x18 | LC_REQ_DYLD)\n#endif\nstatic const struct mach_header * (*ltdl_NSAddImage)(const char *image_name, unsigned long options) = 0;\nstatic NSSymbol (*ltdl_NSLookupSymbolInImage)(const struct mach_header *image,const char *symbolName, unsigned long options) = 0;\nstatic enum DYLD_BOOL (*ltdl_NSIsSymbolNameDefinedInImage)(const struct mach_header *image, const char *symbolName) = 0;\nstatic enum DYLD_BOOL (*ltdl_NSMakePrivateModulePublic)(NSModule module) = 0;\n\n#ifndef NSADDIMAGE_OPTION_NONE\n#define NSADDIMAGE_OPTION_NONE                          0x0\n#endif\n#ifndef NSADDIMAGE_OPTION_RETURN_ON_ERROR\n#define NSADDIMAGE_OPTION_RETURN_ON_ERROR               0x1\n#endif\n#ifndef NSADDIMAGE_OPTION_WITH_SEARCHING\n#define NSADDIMAGE_OPTION_WITH_SEARCHING                0x2\n#endif\n#ifndef NSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED\n#define NSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED         0x4\n#endif\n#ifndef NSADDIMAGE_OPTION_MATCH_FILENAME_BY_INSTALLNAME\n#define NSADDIMAGE_OPTION_MATCH_FILENAME_BY_INSTALLNAME 0x8\n#endif\n#ifndef NSLOOKUPSYMBOLINIMAGE_OPTION_BIND\n#define NSLOOKUPSYMBOLINIMAGE_OPTION_BIND            0x0\n#endif\n#ifndef NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_NOW\n#define NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_NOW        0x1\n#endif\n#ifndef NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_FULLY\n#define NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_FULLY      0x2\n#endif\n#ifndef NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR\n#define NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR 0x4\n#endif\n\n\nstatic const char *\nlt_int_dyld_error(othererror)\n\tchar* othererror;\n{\n/* return the dyld error string, or the passed in error string if none */\n\tNSLinkEditErrors ler;\n\tint lerno;\n\tconst char *errstr;\n\tconst char *file;\n\tNSLinkEditError(&ler,&lerno,&file,&errstr);\n\tif (!errstr || !strlen(errstr)) errstr = othererror;\n\treturn errstr;\n}\n\nstatic const struct mach_header *\nlt_int_dyld_get_mach_header_from_nsmodule(module)\n\tNSModule module;\n{\n/* There should probably be an apple dyld api for this */\n\tint i=_dyld_image_count();\n\tint j;\n\tconst char *modname=NSNameOfModule(module);\n\tconst struct mach_header *mh=NULL;\n\tif (!modname) return NULL;\n\tfor (j = 0; j < i; j++)\n\t{\n\t\tif (!strcmp(_dyld_get_image_name(j),modname))\n\t\t{\n\t\t\tmh=_dyld_get_image_header(j);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn mh;\n}\n\nstatic const char* lt_int_dyld_lib_install_name(mh)\n\tconst struct mach_header *mh;\n{\n/* NSAddImage is also used to get the loaded image, but it only works if the lib\n   is installed, for uninstalled libs we need to check the install_names against\n   each other. Note that this is still broken if DYLD_IMAGE_SUFFIX is set and a\n   different lib was loaded as a result\n*/\n\tint j;\n\tstruct load_command *lc;\n\tunsigned long offset = sizeof(struct mach_header);\n\tconst char* retStr=NULL;\n\tfor (j = 0; j < mh->ncmds; j++)\n\t{\n\t\tlc = (struct load_command*)(((unsigned long)mh) + offset);\n\t\tif (LC_ID_DYLIB == lc->cmd)\n\t\t{\n\t\t\tretStr=(char*)(((struct dylib_command*)lc)->dylib.name.offset +\n\t\t\t\t\t\t\t\t\t(unsigned long)lc);\n\t\t}\n\t\toffset += lc->cmdsize;\n\t}\n\treturn retStr;\n}\n\nstatic const struct mach_header *\nlt_int_dyld_match_loaded_lib_by_install_name(const char *name)\n{\n\tint i=_dyld_image_count();\n\tint j;\n\tconst struct mach_header *mh=NULL;\n\tconst char *id=NULL;\n\tfor (j = 0; j < i; j++)\n\t{\n\t\tid=lt_int_dyld_lib_install_name(_dyld_get_image_header(j));\n\t\tif ((id) && (!strcmp(id,name)))\n\t\t{\n\t\t\tmh=_dyld_get_image_header(j);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn mh;\n}\n\nstatic NSSymbol\nlt_int_dyld_NSlookupSymbolInLinkedLibs(symbol,mh)\n\tconst char *symbol;\n\tconst struct mach_header *mh;\n{\n\t/* Safe to assume our mh is good */\n\tint j;\n\tstruct load_command *lc;\n\tunsigned long offset = sizeof(struct mach_header);\n\tNSSymbol retSym = 0;\n\tconst struct mach_header *mh1;\n\tif ((ltdl_NSLookupSymbolInImage) && NSIsSymbolNameDefined(symbol) )\n\t{\n\t\tfor (j = 0; j < mh->ncmds; j++)\n\t\t{\n\t\t\tlc = (struct load_command*)(((unsigned long)mh) + offset);\n\t\t\tif ((LC_LOAD_DYLIB == lc->cmd) || (LC_LOAD_WEAK_DYLIB == lc->cmd))\n\t\t\t{\n\t\t\t\tmh1=lt_int_dyld_match_loaded_lib_by_install_name((char*)(((struct dylib_command*)lc)->dylib.name.offset +\n\t\t\t\t\t\t\t\t\t\t(unsigned long)lc));\n\t\t\t\tif (!mh1)\n\t\t\t\t{\n\t\t\t\t\t/* Maybe NSAddImage can find it */\n\t\t\t\t\tmh1=ltdl_NSAddImage((char*)(((struct dylib_command*)lc)->dylib.name.offset +\n\t\t\t\t\t\t\t\t\t\t(unsigned long)lc),\n\t\t\t\t\t\t\t\t\t\tNSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED +\n\t\t\t\t\t\t\t\t\t\tNSADDIMAGE_OPTION_WITH_SEARCHING +\n\t\t\t\t\t\t\t\t\t\tNSADDIMAGE_OPTION_RETURN_ON_ERROR );\n\t\t\t\t}\n\t\t\t\tif (mh1)\n\t\t\t\t{\n\t\t\t\t\tretSym = ltdl_NSLookupSymbolInImage(mh1,\n\t\t\t\t\t\t\t\t\t\t\tsymbol,\n\t\t\t\t\t\t\t\t\t\t\tNSLOOKUPSYMBOLINIMAGE_OPTION_BIND_NOW\n\t\t\t\t\t\t\t\t\t\t\t| NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\tif (retSym) break;\n\t\t\t\t}\n\t\t\t}\n\t\t\toffset += lc->cmdsize;\n\t\t}\n\t}\n\treturn retSym;\n}\n\nstatic int\nsys_dyld_init()\n{\n\tint retCode = 0;\n\tint err = 0;\n\tif (!_dyld_present()) {\n\t\tretCode=1;\n\t}\n\telse {\n      err = _dyld_func_lookup(\"__dyld_NSAddImage\",(unsigned long*)&ltdl_NSAddImage);\n      err = _dyld_func_lookup(\"__dyld_NSLookupSymbolInImage\",(unsigned long*)&ltdl_NSLookupSymbolInImage);\n      err = _dyld_func_lookup(\"__dyld_NSIsSymbolNameDefinedInImage\",(unsigned long*)&ltdl_NSIsSymbolNameDefinedInImage);\n      err = _dyld_func_lookup(\"__dyld_NSMakePrivateModulePublic\",(unsigned long*)&ltdl_NSMakePrivateModulePublic);\n    }\n return retCode;\n}\n\nstatic lt_module\nsys_dyld_open (loader_data, filename)\n     lt_user_data loader_data;\n     const char *filename;\n{\n\tlt_module   module   = 0;\n\tNSObjectFileImage ofi = 0;\n\tNSObjectFileImageReturnCode ofirc;\n\n  \tif (!filename)\n  \t\treturn (lt_module)-1;\n\tofirc = NSCreateObjectFileImageFromFile(filename, &ofi);\n\tswitch (ofirc)\n\t{\n\t\tcase NSObjectFileImageSuccess:\n\t\t\tmodule = NSLinkModule(ofi, filename,\n\t\t\t\t\t\tNSLINKMODULE_OPTION_RETURN_ON_ERROR\n\t\t\t\t\t\t | NSLINKMODULE_OPTION_PRIVATE\n\t\t\t\t\t\t | NSLINKMODULE_OPTION_BINDNOW);\n\t\t\tNSDestroyObjectFileImage(ofi);\n\t\t\tif (module)\n\t\t\t\tltdl_NSMakePrivateModulePublic(module);\n\t\t\tbreak;\n\t\tcase NSObjectFileImageInappropriateFile:\n\t\t    if (ltdl_NSIsSymbolNameDefinedInImage && ltdl_NSLookupSymbolInImage)\n\t\t    {\n\t\t\t\tmodule = (lt_module)ltdl_NSAddImage(filename, NSADDIMAGE_OPTION_RETURN_ON_ERROR);\n\t\t\t\tbreak;\n\t\t\t}\n\t\tdefault:\n\t\t\tLT_DLMUTEX_SETERROR (lt_int_dyld_error(LT_DLSTRERROR(CANNOT_OPEN)));\n\t\t\treturn 0;\n\t}\n\tif (!module) LT_DLMUTEX_SETERROR (lt_int_dyld_error(LT_DLSTRERROR(CANNOT_OPEN)));\n  return module;\n}\n\nstatic int\nsys_dyld_close (loader_data, module)\n     lt_user_data loader_data;\n     lt_module module;\n{\n\tint retCode = 0;\n\tint flags = 0;\n\tif (module == (lt_module)-1) return 0;\n#ifdef __BIG_ENDIAN__\n  \tif (((struct mach_header *)module)->magic == MH_MAGIC)\n#else\n    if (((struct mach_header *)module)->magic == MH_CIGAM)\n#endif\n\t{\n\t  LT_DLMUTEX_SETERROR(\"Can not close a dylib\");\n\t  retCode = 1;\n\t}\n\telse\n\t{\n#if 1\n/* Currently, if a module contains c++ static destructors and it is unloaded, we\n   get a segfault in atexit(), due to compiler and dynamic loader differences of\n   opinion, this works around that.\n*/\n\t\tif ((const struct section *)NULL !=\n\t\t   getsectbynamefromheader(lt_int_dyld_get_mach_header_from_nsmodule(module),\n\t\t   \"__DATA\",\"__mod_term_func\"))\n\t\t{\n\t\t\tflags += NSUNLINKMODULE_OPTION_KEEP_MEMORY_MAPPED;\n\t\t}\n#endif\n#ifdef __ppc__\n\t\t\tflags += NSUNLINKMODULE_OPTION_RESET_LAZY_REFERENCES;\n#endif\n\t\tif (!NSUnLinkModule(module,flags))\n\t\t{\n\t\t\tretCode=1;\n\t\t\tLT_DLMUTEX_SETERROR (lt_int_dyld_error(LT_DLSTRERROR(CANNOT_CLOSE)));\n\t\t}\n\t}\n\n return retCode;\n}\n\nstatic lt_ptr\nsys_dyld_sym (loader_data, module, symbol)\n     lt_user_data loader_data;\n     lt_module module;\n     const char *symbol;\n{\n\tlt_ptr address = 0;\n  \tNSSymbol *nssym = 0;\n  \tvoid *unused;\n  \tconst struct mach_header *mh=NULL;\n  \tchar saveError[256] = \"Symbol not found\";\n  \tif (module == (lt_module)-1)\n  \t{\n  \t\t_dyld_lookup_and_bind(symbol,(unsigned long*)&address,&unused);\n  \t\treturn address;\n  \t}\n#ifdef __BIG_ENDIAN__\n  \tif (((struct mach_header *)module)->magic == MH_MAGIC)\n#else\n    if (((struct mach_header *)module)->magic == MH_CIGAM)\n#endif\n  \t{\n  \t    if (ltdl_NSIsSymbolNameDefinedInImage && ltdl_NSLookupSymbolInImage)\n  \t    {\n  \t    \tmh=module;\n\t\t\tif (ltdl_NSIsSymbolNameDefinedInImage((struct mach_header*)module,symbol))\n\t\t\t{\n\t\t\t\tnssym = ltdl_NSLookupSymbolInImage((struct mach_header*)module,\n\t\t\t\t\t\t\t\t\t\t\tsymbol,\n\t\t\t\t\t\t\t\t\t\t\tNSLOOKUPSYMBOLINIMAGE_OPTION_BIND_NOW\n\t\t\t\t\t\t\t\t\t\t\t| NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t}\n\t    }\n\n  \t}\n  else {\n\tnssym = NSLookupSymbolInModule(module, symbol);\n\t}\n\tif (!nssym)\n\t{\n\t\tstrncpy(saveError, lt_int_dyld_error(LT_DLSTRERROR(SYMBOL_NOT_FOUND)), 255);\n\t\tsaveError[255] = 0;\n\t\tif (!mh) mh=lt_int_dyld_get_mach_header_from_nsmodule(module);\n\t\tnssym = lt_int_dyld_NSlookupSymbolInLinkedLibs(symbol,mh);\n\t}\n\tif (!nssym)\n\t{\n\t\tLT_DLMUTEX_SETERROR (saveError);\n\t\treturn NULL;\n\t}\n\treturn NSAddressOfSymbol(nssym);\n}\n\nstatic struct lt_user_dlloader sys_dyld =\n  { \"_\", sys_dyld_open, sys_dyld_close, sys_dyld_sym, 0, 0 };\n\n\n#endif /* HAVE_DYLD */\n\n\f\n/* --- DLPREOPEN() INTERFACE LOADER --- */\n\n\n/* emulate dynamic linking using preloaded_symbols */\n\ntypedef struct lt_dlsymlists_t\n{\n  struct lt_dlsymlists_t       *next;\n  const lt_dlsymlist\t       *syms;\n} lt_dlsymlists_t;\n\nstatic\tconst lt_dlsymlist     *default_preloaded_symbols\t= 0;\nstatic\tlt_dlsymlists_t\t       *preloaded_symbols\t\t= 0;\n\nstatic int\npresym_init (loader_data)\n     lt_user_data loader_data;\n{\n  int errors = 0;\n\n  LT_DLMUTEX_LOCK ();\n\n  preloaded_symbols = 0;\n  if (default_preloaded_symbols)\n    {\n      errors = lt_dlpreload (default_preloaded_symbols);\n    }\n\n  LT_DLMUTEX_UNLOCK ();\n\n  return errors;\n}\n\nstatic int\npresym_free_symlists ()\n{\n  lt_dlsymlists_t *lists;\n\n  LT_DLMUTEX_LOCK ();\n\n  lists = preloaded_symbols;\n  while (lists)\n    {\n      lt_dlsymlists_t\t*tmp = lists;\n\n      lists = lists->next;\n      LT_DLFREE (tmp);\n    }\n  preloaded_symbols = 0;\n\n  LT_DLMUTEX_UNLOCK ();\n\n  return 0;\n}\n\nstatic int\npresym_exit (loader_data)\n     lt_user_data loader_data;\n{\n  presym_free_symlists ();\n  return 0;\n}\n\nstatic int\npresym_add_symlist (preloaded)\n     const lt_dlsymlist *preloaded;\n{\n  lt_dlsymlists_t *tmp;\n  lt_dlsymlists_t *lists;\n  int\t\t   errors   = 0;\n\n  LT_DLMUTEX_LOCK ();\n\n  lists = preloaded_symbols;\n  while (lists)\n    {\n      if (lists->syms == preloaded)\n\t{\n\t  goto done;\n\t}\n      lists = lists->next;\n    }\n\n  tmp = LT_EMALLOC (lt_dlsymlists_t, 1);\n  if (tmp)\n    {\n      memset (tmp, 0, sizeof(lt_dlsymlists_t));\n      tmp->syms = preloaded;\n      tmp->next = preloaded_symbols;\n      preloaded_symbols = tmp;\n    }\n  else\n    {\n      ++errors;\n    }\n\n done:\n  LT_DLMUTEX_UNLOCK ();\n  return errors;\n}\n\nstatic lt_module\npresym_open (loader_data, filename)\n     lt_user_data loader_data;\n     const char *filename;\n{\n  lt_dlsymlists_t *lists;\n  lt_module\t   module = (lt_module) 0;\n\n  LT_DLMUTEX_LOCK ();\n  lists = preloaded_symbols;\n\n  if (!lists)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (NO_SYMBOLS));\n      goto done;\n    }\n\n  /* Can't use NULL as the reflective symbol header, as NULL is\n     used to mark the end of the entire symbol list.  Self-dlpreopened\n     symbols follow this magic number, chosen to be an unlikely\n     clash with a real module name.  */\n  if (!filename)\n    {\n      filename = \"@PROGRAM@\";\n    }\n\n  while (lists)\n    {\n      const lt_dlsymlist *syms = lists->syms;\n\n      while (syms->name)\n\t{\n\t  if (!syms->address && strcmp(syms->name, filename) == 0)\n\t    {\n\t      module = (lt_module) syms;\n\t      goto done;\n\t    }\n\t  ++syms;\n\t}\n\n      lists = lists->next;\n    }\n\n  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (FILE_NOT_FOUND));\n\n done:\n  LT_DLMUTEX_UNLOCK ();\n  return module;\n}\n\nstatic int\npresym_close (loader_data, module)\n     lt_user_data loader_data;\n     lt_module module;\n{\n  /* Just to silence gcc -Wall */\n  module = 0;\n  return 0;\n}\n\nstatic lt_ptr\npresym_sym (loader_data, module, symbol)\n     lt_user_data loader_data;\n     lt_module module;\n     const char *symbol;\n{\n  lt_dlsymlist *syms = (lt_dlsymlist*) module;\n\n  ++syms;\n  while (syms->address)\n    {\n      if (strcmp(syms->name, symbol) == 0)\n\t{\n\t  return syms->address;\n\t}\n\n    ++syms;\n  }\n\n  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (SYMBOL_NOT_FOUND));\n\n  return 0;\n}\n\nstatic struct lt_user_dlloader presym = {\n  0, presym_open, presym_close, presym_sym, presym_exit, 0\n};\n\n\n\n\n\f\n/* --- DYNAMIC MODULE LOADING --- */\n\n\n/* The type of a function used at each iteration of  foreach_dirinpath().  */\ntypedef int\tforeach_callback_func LT_PARAMS((char *filename, lt_ptr data1,\n\t\t\t\t\t\t lt_ptr data2));\n\nstatic\tint\tforeach_dirinpath     LT_PARAMS((const char *search_path,\n\t\t\t\t\t\t const char *base_name,\n\t\t\t\t\t\t foreach_callback_func *func,\n\t\t\t\t\t\t lt_ptr data1, lt_ptr data2));\n\nstatic\tint\tfind_file_callback    LT_PARAMS((char *filename, lt_ptr data,\n\t\t\t\t\t\t lt_ptr ignored));\nstatic\tint\tfind_handle_callback  LT_PARAMS((char *filename, lt_ptr data,\n\t\t\t\t\t\t lt_ptr ignored));\nstatic\tint\tforeachfile_callback  LT_PARAMS((char *filename, lt_ptr data1,\n\t\t\t\t\t\t lt_ptr data2));\n\n\nstatic\tint     canonicalize_path     LT_PARAMS((const char *path,\n\t\t\t\t\t\t char **pcanonical));\nstatic\tint\targzize_path \t      LT_PARAMS((const char *path,\n\t\t\t\t\t\t char **pargz,\n\t\t\t\t\t\t size_t *pargz_len));\nstatic\tFILE   *find_file\t      LT_PARAMS((const char *search_path,\n\t\t\t\t\t\t const char *base_name,\n\t\t\t\t\t\t char **pdir));\nstatic\tlt_dlhandle *find_handle      LT_PARAMS((const char *search_path,\n\t\t\t\t\t\t const char *base_name,\n\t\t\t\t\t\t lt_dlhandle *handle));\nstatic\tint\tfind_module\t      LT_PARAMS((lt_dlhandle *handle,\n\t\t\t\t\t\t const char *dir,\n\t\t\t\t\t\t const char *libdir,\n\t\t\t\t\t\t const char *dlname,\n\t\t\t\t\t\t const char *old_name,\n\t\t\t\t\t\t int installed));\nstatic\tint\tfree_vars\t      LT_PARAMS((char *dlname, char *oldname,\n\t\t\t\t\t\t char *libdir, char *deplibs));\nstatic\tint\tload_deplibs\t      LT_PARAMS((lt_dlhandle handle,\n\t\t\t\t\t\t char *deplibs));\nstatic\tint\ttrim\t\t      LT_PARAMS((char **dest,\n\t\t\t\t\t\t const char *str));\nstatic\tint\ttry_dlopen\t      LT_PARAMS((lt_dlhandle *handle,\n\t\t\t\t\t\t const char *filename));\nstatic\tint\ttryall_dlopen\t      LT_PARAMS((lt_dlhandle *handle,\n\t\t\t\t\t\t const char *filename,\n\t\t\t\t\t\t const char * useloader));\nstatic\tint\tunload_deplibs\t      LT_PARAMS((lt_dlhandle handle));\nstatic\tint\tlt_argz_insert\t      LT_PARAMS((char **pargz,\n\t\t\t\t\t\t size_t *pargz_len,\n\t\t\t\t\t\t char *before,\n\t\t\t\t\t\t const char *entry));\nstatic\tint\tlt_argz_insertinorder LT_PARAMS((char **pargz,\n\t\t\t\t\t\t size_t *pargz_len,\n\t\t\t\t\t\t const char *entry));\nstatic\tint\tlt_argz_insertdir     LT_PARAMS((char **pargz,\n\t\t\t\t\t\t size_t *pargz_len,\n\t\t\t\t\t\t const char *dirnam,\n\t\t\t\t\t\t struct dirent *dp));\nstatic\tint\tlt_dlpath_insertdir   LT_PARAMS((char **ppath,\n\t\t\t\t\t\t char *before,\n\t\t\t\t\t\t const char *dir));\nstatic\tint\tlist_files_by_dir     LT_PARAMS((const char *dirnam,\n\t\t\t\t\t\t char **pargz,\n\t\t\t\t\t\t size_t *pargz_len));\nstatic\tint\tfile_not_found\t      LT_PARAMS((void));\n\nstatic\tchar\t       *user_search_path= 0;\nstatic\tlt_dlloader    *loaders\t\t= 0;\nstatic\tlt_dlhandle\thandles \t= 0;\nstatic\tint\t\tinitialized \t= 0;\n\n/* Initialize libltdl. */\nint\nlt_dlinit ()\n{\n  int\t      errors   = 0;\n\n  LT_DLMUTEX_LOCK ();\n\n  /* Initialize only at first call. */\n  if (++initialized == 1)\n    {\n      handles = 0;\n      user_search_path = 0; /* empty search path */\n\n#if HAVE_LIBDL\n      errors += lt_dlloader_add (lt_dlloader_next (0), &sys_dl, \"dlopen\");\n#endif\n#if HAVE_SHL_LOAD\n      errors += lt_dlloader_add (lt_dlloader_next (0), &sys_shl, \"dlopen\");\n#endif\n#ifdef __WINDOWS__\n      errors += lt_dlloader_add (lt_dlloader_next (0), &sys_wll, \"dlopen\");\n#endif\n#ifdef __BEOS__\n      errors += lt_dlloader_add (lt_dlloader_next (0), &sys_bedl, \"dlopen\");\n#endif\n#if HAVE_DLD\n      errors += lt_dlloader_add (lt_dlloader_next (0), &sys_dld, \"dld\");\n#endif\n#if HAVE_DYLD\n       errors += lt_dlloader_add (lt_dlloader_next (0), &sys_dyld, \"dyld\");\n       errors += sys_dyld_init();\n#endif\n      errors += lt_dlloader_add (lt_dlloader_next (0), &presym, \"dlpreload\");\n\n      if (presym_init (presym.dlloader_data))\n\t{\n\t  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (INIT_LOADER));\n\t  ++errors;\n\t}\n      else if (errors != 0)\n\t{\n\t  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (DLOPEN_NOT_SUPPORTED));\n\t  ++errors;\n\t}\n    }\n\n  LT_DLMUTEX_UNLOCK ();\n\n  return errors;\n}\n\nint\nlt_dlpreload (preloaded)\n     const lt_dlsymlist *preloaded;\n{\n  int errors = 0;\n\n  if (preloaded)\n    {\n      errors = presym_add_symlist (preloaded);\n    }\n  else\n    {\n      presym_free_symlists();\n\n      LT_DLMUTEX_LOCK ();\n      if (default_preloaded_symbols)\n\t{\n\t  errors = lt_dlpreload (default_preloaded_symbols);\n\t}\n      LT_DLMUTEX_UNLOCK ();\n    }\n\n  return errors;\n}\n\nint\nlt_dlpreload_default (preloaded)\n     const lt_dlsymlist *preloaded;\n{\n  LT_DLMUTEX_LOCK ();\n  default_preloaded_symbols = preloaded;\n  LT_DLMUTEX_UNLOCK ();\n  return 0;\n}\n\nint\nlt_dlexit ()\n{\n  /* shut down libltdl */\n  lt_dlloader *loader;\n  int\t       errors   = 0;\n\n  LT_DLMUTEX_LOCK ();\n  loader = loaders;\n\n  if (!initialized)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (SHUTDOWN));\n      ++errors;\n      goto done;\n    }\n\n  /* shut down only at last call. */\n  if (--initialized == 0)\n    {\n      int\tlevel;\n\n      while (handles && LT_DLIS_RESIDENT (handles))\n\t{\n\t  handles = handles->next;\n\t}\n\n      /* close all modules */\n      for (level = 1; handles; ++level)\n\t{\n\t  lt_dlhandle cur = handles;\n\t  int saw_nonresident = 0;\n\n\t  while (cur)\n\t    {\n\t      lt_dlhandle tmp = cur;\n\t      cur = cur->next;\n\t      if (!LT_DLIS_RESIDENT (tmp))\n\t\tsaw_nonresident = 1;\n\t      if (!LT_DLIS_RESIDENT (tmp) && tmp->info.ref_count <= level)\n\t\t{\n\t\t  if (lt_dlclose (tmp))\n\t\t    {\n\t\t      ++errors;\n\t\t    }\n\t\t}\n\t    }\n\t  /* done if only resident modules are left */\n\t  if (!saw_nonresident)\n\t    break;\n\t}\n\n      /* close all loaders */\n      while (loader)\n\t{\n\t  lt_dlloader *next = loader->next;\n\t  lt_user_data data = loader->dlloader_data;\n\t  if (loader->dlloader_exit && loader->dlloader_exit (data))\n\t    {\n\t      ++errors;\n\t    }\n\n\t  LT_DLMEM_REASSIGN (loader, next);\n\t}\n      loaders = 0;\n    }\n\n done:\n  LT_DLMUTEX_UNLOCK ();\n  return errors;\n}\n\nstatic int\ntryall_dlopen (handle, filename, useloader)\n     lt_dlhandle *handle;\n     const char *filename;\n     const char *useloader;\n{\n  lt_dlhandle\t cur;\n  lt_dlloader   *loader;\n  const char\t*saved_error;\n  int\t\t errors\t\t= 0;\n\n  LT_DLMUTEX_GETERROR (saved_error);\n  LT_DLMUTEX_LOCK ();\n\n  cur\t = handles;\n  loader = loaders;\n\n  /* check whether the module was already opened */\n  while (cur)\n    {\n      /* try to dlopen the program itself? */\n      if (!cur->info.filename && !filename)\n\t{\n\t  break;\n\t}\n\n      if (cur->info.filename && filename\n\t  && strcmp (cur->info.filename, filename) == 0)\n\t{\n\t  break;\n\t}\n\n      cur = cur->next;\n    }\n\n  if (cur)\n    {\n      ++cur->info.ref_count;\n      *handle = cur;\n      goto done;\n    }\n\n  cur = *handle;\n  if (filename)\n    {\n      /* Comment out the check of file permissions using access.\n\t This call seems to always return -1 with error EACCES.\n      */\n      /* We need to catch missing file errors early so that\n\t file_not_found() can detect what happened.\n      if (access (filename, R_OK) != 0)\n\t{\n\t  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (FILE_NOT_FOUND));\n\t  ++errors;\n\t  goto done;\n\t} */\n\n      cur->info.filename = lt_estrdup (filename);\n      if (!cur->info.filename)\n\t{\n\t  ++errors;\n\t  goto done;\n\t}\n    }\n  else\n    {\n      cur->info.filename = 0;\n    }\n\n  while (loader)\n    {\n      if (useloader && strcmp(loader->loader_name, useloader))\n\t{\n\t  loader = loader->next;\n\t  continue;\n\t}\n      lt_user_data data = loader->dlloader_data;\n\n      cur->module = loader->module_open (data, filename);\n\n      if (cur->module != 0)\n\t{\n\t  break;\n\t}\n      loader = loader->next;\n    }\n\n  if (!loader)\n    {\n      LT_DLFREE (cur->info.filename);\n      ++errors;\n      goto done;\n    }\n\n  cur->loader\t= loader;\n  LT_DLMUTEX_SETERROR (saved_error);\n\n done:\n  LT_DLMUTEX_UNLOCK ();\n\n  return errors;\n}\n\nstatic int\ntryall_dlopen_module (handle, prefix, dirname, dlname)\n     lt_dlhandle *handle;\n     const char *prefix;\n     const char *dirname;\n     const char *dlname;\n{\n  int      error\t= 0;\n  char     *filename\t= 0;\n  size_t   filename_len\t= 0;\n  size_t   dirname_len\t= LT_STRLEN (dirname);\n\n  assert (handle);\n  assert (dirname);\n  assert (dlname);\n#ifdef LT_DIRSEP_CHAR\n  /* Only canonicalized names (i.e. with DIRSEP chars already converted)\n     should make it into this function:  */\n  assert (strchr (dirname, LT_DIRSEP_CHAR) == 0);\n#endif\n\n  if (dirname_len > 0)\n    if (dirname[dirname_len -1] == '/')\n      --dirname_len;\n  filename_len = dirname_len + 1 + LT_STRLEN (dlname);\n\n  /* Allocate memory, and combine DIRNAME and MODULENAME into it.\n     The PREFIX (if any) is handled below.  */\n  filename  = LT_EMALLOC (char, dirname_len + 1 + filename_len + 1);\n  if (!filename)\n    return 1;\n\n  sprintf (filename, \"%.*s/%s\", (int) dirname_len, dirname, dlname);\n\n  /* Now that we have combined DIRNAME and MODULENAME, if there is\n     also a PREFIX to contend with, simply recurse with the arguments\n     shuffled.  Otherwise, attempt to open FILENAME as a module.  */\n  if (prefix)\n    {\n      error += tryall_dlopen_module (handle,\n\t\t\t\t     (const char *) 0, prefix, filename);\n    }\n  else if (tryall_dlopen (handle, filename, NULL) != 0)\n    {\n      ++error;\n    }\n\n  LT_DLFREE (filename);\n  return error;\n}\n\nstatic int\nfind_module (handle, dir, libdir, dlname, old_name, installed)\n     lt_dlhandle *handle;\n     const char *dir;\n     const char *libdir;\n     const char *dlname;\n     const char *old_name;\n     int installed;\n{\n  /* Try to open the old library first; if it was dlpreopened,\n     we want the preopened version of it, even if a dlopenable\n     module is available.  */\n  if (old_name && tryall_dlopen (handle, old_name, \"dlpreload\") == 0)\n    {\n      return 0;\n    }\n\n  /* Try to open the dynamic library.  */\n  if (dlname)\n    {\n      /* try to open the installed module */\n      if (installed && libdir)\n\t{\n\t  if (tryall_dlopen_module (handle,\n\t\t\t\t    (const char *) 0, libdir, dlname) == 0)\n\t    return 0;\n\t}\n\n      /* try to open the not-installed module */\n      if (!installed)\n\t{\n\t  if (tryall_dlopen_module (handle, dir, objdir, dlname) == 0)\n\t    return 0;\n\t}\n\n      /* maybe it was moved to another directory */\n      {\n\t  if (tryall_dlopen_module (handle,\n\t\t\t\t    (const char *) 0, dir, dlname) == 0)\n\t    return 0;\n      }\n    }\n\n  return 1;\n}\n\n\nstatic int\ncanonicalize_path (path, pcanonical)\n     const char *path;\n     char **pcanonical;\n{\n  char *canonical = 0;\n\n  assert (path && *path);\n  assert (pcanonical);\n\n  canonical = LT_EMALLOC (char, 1+ LT_STRLEN (path));\n  if (!canonical)\n    return 1;\n\n  {\n    size_t dest = 0;\n    size_t src;\n    for (src = 0; path[src] != LT_EOS_CHAR; ++src)\n      {\n\t/* Path separators are not copied to the beginning or end of\n\t   the destination, or if another separator would follow\n\t   immediately.  */\n\tif (path[src] == LT_PATHSEP_CHAR)\n\t  {\n\t    if ((dest == 0)\n\t\t|| (path[1+ src] == LT_PATHSEP_CHAR)\n\t\t|| (path[1+ src] == LT_EOS_CHAR))\n\t      continue;\n\t  }\n\n\t/* Anything other than a directory separator is copied verbatim.  */\n\tif ((path[src] != '/')\n#ifdef LT_DIRSEP_CHAR\n\t    && (path[src] != LT_DIRSEP_CHAR)\n#endif\n\t    )\n\t  {\n\t    canonical[dest++] = path[src];\n\t  }\n\t/* Directory separators are converted and copied only if they are\n\t   not at the end of a path -- i.e. before a path separator or\n\t   NULL terminator.  */\n\telse if ((path[1+ src] != LT_PATHSEP_CHAR)\n\t\t && (path[1+ src] != LT_EOS_CHAR)\n#ifdef LT_DIRSEP_CHAR\n\t\t && (path[1+ src] != LT_DIRSEP_CHAR)\n#endif\n\t\t && (path[1+ src] != '/'))\n\t  {\n\t    canonical[dest++] = '/';\n\t  }\n      }\n\n    /* Add an end-of-string marker at the end.  */\n    canonical[dest] = LT_EOS_CHAR;\n  }\n\n  /* Assign new value.  */\n  *pcanonical = canonical;\n\n  return 0;\n}\n\nstatic int\nargzize_path (path, pargz, pargz_len)\n     const char *path;\n     char **pargz;\n     size_t *pargz_len;\n{\n  error_t error;\n\n  assert (path);\n  assert (pargz);\n  assert (pargz_len);\n\n  if ((error = argz_create_sep (path, LT_PATHSEP_CHAR, pargz, pargz_len)))\n    {\n      switch (error)\n\t{\n\tcase ENOMEM:\n\t  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (NO_MEMORY));\n\t  break;\n\tdefault:\n\t  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (UNKNOWN));\n\t  break;\n\t}\n\n      return 1;\n    }\n\n  return 0;\n}\n\n/* Repeatedly call FUNC with each LT_PATHSEP_CHAR delimited element\n   of SEARCH_PATH and references to DATA1 and DATA2, until FUNC returns\n   non-zero or all elements are exhausted.  If BASE_NAME is non-NULL,\n   it is appended to each SEARCH_PATH element before FUNC is called.  */\nstatic int\nforeach_dirinpath (search_path, base_name, func, data1, data2)\n     const char *search_path;\n     const char *base_name;\n     foreach_callback_func *func;\n     lt_ptr data1;\n     lt_ptr data2;\n{\n  int\t result\t\t= 0;\n  int\t filenamesize\t= 0;\n  size_t lenbase\t= LT_STRLEN (base_name);\n  size_t argz_len\t= 0;\n  char *argz\t\t= 0;\n  char *filename\t= 0;\n  char *canonical\t= 0;\n\n  LT_DLMUTEX_LOCK ();\n\n  if (!search_path || !*search_path)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (FILE_NOT_FOUND));\n      goto cleanup;\n    }\n\n  if (canonicalize_path (search_path, &canonical) != 0)\n    goto cleanup;\n\n  if (argzize_path (canonical, &argz, &argz_len) != 0)\n    goto cleanup;\n\n  {\n    char *dir_name = 0;\n    while ((dir_name = argz_next (argz, argz_len, dir_name)))\n      {\n\tsize_t lendir = LT_STRLEN (dir_name);\n\n\tif (lendir +1 +lenbase >= filenamesize)\n\t{\n\t  LT_DLFREE (filename);\n\t  filenamesize\t= lendir +1 +lenbase +1; /* \"/d\" + '/' + \"f\" + '\\0' */\n\t  filename\t= LT_EMALLOC (char, filenamesize);\n\t  if (!filename)\n\t    goto cleanup;\n\t}\n\n\tassert (filenamesize > lendir);\n\tstrcpy (filename, dir_name);\n\n\tif (base_name && *base_name)\n\t  {\n\t    if (filename[lendir -1] != '/')\n\t      filename[lendir++] = '/';\n\t    strcpy (filename +lendir, base_name);\n\t  }\n\n\tif ((result = (*func) (filename, data1, data2)))\n\t  {\n\t    break;\n\t  }\n      }\n  }\n\n cleanup:\n  LT_DLFREE (argz);\n  LT_DLFREE (canonical);\n  LT_DLFREE (filename);\n\n  LT_DLMUTEX_UNLOCK ();\n\n  return result;\n}\n\n/* If FILEPATH can be opened, store the name of the directory component\n   in DATA1, and the opened FILE* structure address in DATA2.  Otherwise\n   DATA1 is unchanged, but DATA2 is set to a pointer to NULL.  */\nstatic int\nfind_file_callback (filename, data1, data2)\n     char *filename;\n     lt_ptr data1;\n     lt_ptr data2;\n{\n  char\t     **pdir\t= (char **) data1;\n  FILE\t     **pfile\t= (FILE **) data2;\n  int\t     is_done\t= 0;\n\n  assert (filename && *filename);\n  assert (pdir);\n  assert (pfile);\n\n  if ((*pfile = fopen (filename, LT_READTEXT_MODE)))\n    {\n      char *dirend = strrchr (filename, '/');\n\n      if (dirend > filename)\n\t*dirend   = LT_EOS_CHAR;\n\n      LT_DLFREE (*pdir);\n      *pdir   = lt_estrdup (filename);\n      is_done = (*pdir == 0) ? -1 : 1;\n    }\n\n  return is_done;\n}\n\nstatic FILE *\nfind_file (search_path, base_name, pdir)\n     const char *search_path;\n     const char *base_name;\n     char **pdir;\n{\n  FILE *file = 0;\n\n  foreach_dirinpath (search_path, base_name, find_file_callback, pdir, &file);\n\n  return file;\n}\n\nstatic int\nfind_handle_callback (filename, data, ignored)\n     char *filename;\n     lt_ptr data;\n     lt_ptr ignored;\n{\n  lt_dlhandle  *handle\t\t= (lt_dlhandle *) data;\n  int\t\tnotfound\t= access (filename, R_OK);\n\n  /* Bail out if file cannot be read...  */\n  if (notfound)\n    return 0;\n\n  /* Try to dlopen the file, but do not continue searching in any\n     case.  */\n  if (tryall_dlopen (handle, filename,NULL) != 0)\n    *handle = 0;\n\n  return 1;\n}\n\n/* If HANDLE was found return it, otherwise return 0.  If HANDLE was\n   found but could not be opened, *HANDLE will be set to 0.  */\nstatic lt_dlhandle *\nfind_handle (search_path, base_name, handle)\n     const char *search_path;\n     const char *base_name;\n     lt_dlhandle *handle;\n{\n  if (!search_path)\n    return 0;\n\n  if (!foreach_dirinpath (search_path, base_name, find_handle_callback,\n\t\t\t  handle, 0))\n    return 0;\n\n  return handle;\n}\n\nstatic int\nload_deplibs (handle, deplibs)\n     lt_dlhandle handle;\n     char *deplibs;\n{\n#if LTDL_DLOPEN_DEPLIBS\n  char\t*p, *save_search_path = 0;\n  int   depcount = 0;\n  int\ti;\n  char\t**names = 0;\n#endif\n  int\terrors = 0;\n\n  handle->depcount = 0;\n\n#if LTDL_DLOPEN_DEPLIBS\n  if (!deplibs)\n    {\n      return errors;\n    }\n  ++errors;\n\n  LT_DLMUTEX_LOCK ();\n  if (user_search_path)\n    {\n      save_search_path = lt_estrdup (user_search_path);\n      if (!save_search_path)\n\tgoto cleanup;\n    }\n\n  /* extract search paths and count deplibs */\n  p = deplibs;\n  while (*p)\n    {\n      if (!isspace ((int) *p))\n\t{\n\t  char *end = p+1;\n\t  while (*end && !isspace((int) *end))\n\t    {\n\t      ++end;\n\t    }\n\n\t  if (strncmp(p, \"-L\", 2) == 0 || strncmp(p, \"-R\", 2) == 0)\n\t    {\n\t      char save = *end;\n\t      *end = 0; /* set a temporary string terminator */\n\t      if (lt_dladdsearchdir(p+2))\n\t\t{\n\t\t  goto cleanup;\n\t\t}\n\t      *end = save;\n\t    }\n\t  else\n\t    {\n\t      ++depcount;\n\t    }\n\n\t  p = end;\n\t}\n      else\n\t{\n\t  ++p;\n\t}\n    }\n\n  /* restore the old search path */\n  LT_DLFREE (user_search_path);\n  user_search_path = save_search_path;\n\n  LT_DLMUTEX_UNLOCK ();\n\n  if (!depcount)\n    {\n      errors = 0;\n      goto cleanup;\n    }\n\n  names = LT_EMALLOC (char *, depcount * sizeof (char*));\n  if (!names)\n    goto cleanup;\n\n  /* now only extract the actual deplibs */\n  depcount = 0;\n  p = deplibs;\n  while (*p)\n    {\n      if (isspace ((int) *p))\n\t{\n\t  ++p;\n\t}\n      else\n\t{\n\t  char *end = p+1;\n\t  while (*end && !isspace ((int) *end))\n\t    {\n\t      ++end;\n\t    }\n\n\t  if (strncmp(p, \"-L\", 2) != 0 && strncmp(p, \"-R\", 2) != 0)\n\t    {\n\t      char *name;\n\t      char save = *end;\n\t      *end = 0; /* set a temporary string terminator */\n\t      if (strncmp(p, \"-l\", 2) == 0)\n\t\t{\n\t\t  size_t name_len = 3+ /* \"lib\" */ LT_STRLEN (p + 2);\n\t\t  name = LT_EMALLOC (char, 1+ name_len);\n\t\t  if (name)\n\t\t    sprintf (name, \"lib%s\", p+2);\n\t\t}\n\t      else\n\t\tname = lt_estrdup(p);\n\n\t      if (!name)\n\t\tgoto cleanup_names;\n\n\t      names[depcount++] = name;\n\t      *end = save;\n\t    }\n\t  p = end;\n\t}\n    }\n\n  /* load the deplibs (in reverse order)\n     At this stage, don't worry if the deplibs do not load correctly,\n     they may already be statically linked into the loading application\n     for instance.  There will be a more enlightening error message\n     later on if the loaded module cannot resolve all of its symbols.  */\n  if (depcount)\n    {\n      int\tj = 0;\n\n      handle->deplibs = (lt_dlhandle*) LT_EMALLOC (lt_dlhandle *, depcount);\n      if (!handle->deplibs)\n\tgoto cleanup;\n\n      for (i = 0; i < depcount; ++i)\n\t{\n\t  handle->deplibs[j] = lt_dlopenext(names[depcount-1-i]);\n\t  if (handle->deplibs[j])\n\t    {\n\t      ++j;\n\t    }\n\t}\n\n      handle->depcount\t= j;\t/* Number of successfully loaded deplibs */\n      errors\t\t= 0;\n    }\n\n cleanup_names:\n  for (i = 0; i < depcount; ++i)\n    {\n      LT_DLFREE (names[i]);\n    }\n\n cleanup:\n  LT_DLFREE (names);\n#endif\n\n  return errors;\n}\n\nstatic int\nunload_deplibs (handle)\n     lt_dlhandle handle;\n{\n  int i;\n  int errors = 0;\n\n  if (handle->depcount)\n    {\n      for (i = 0; i < handle->depcount; ++i)\n\t{\n\t  if (!LT_DLIS_RESIDENT (handle->deplibs[i]))\n\t    {\n\t      errors += lt_dlclose (handle->deplibs[i]);\n\t    }\n\t}\n    }\n\n  return errors;\n}\n\nstatic int\ntrim (dest, str)\n     char **dest;\n     const char *str;\n{\n  /* remove the leading and trailing \"'\" from str\n     and store the result in dest */\n  const char *end   = strrchr (str, '\\'');\n  size_t len\t    = LT_STRLEN (str);\n  char *tmp;\n\n  LT_DLFREE (*dest);\n\n  if (!end)\n    return 1;\n\n  if (len > 3 && str[0] == '\\'')\n    {\n      tmp = LT_EMALLOC (char, end - str);\n      if (!tmp)\n\treturn 1;\n\n      strncpy(tmp, &str[1], (end - str) - 1);\n      tmp[len-3] = LT_EOS_CHAR;\n      *dest = tmp;\n    }\n  else\n    {\n      *dest = 0;\n    }\n\n  return 0;\n}\n\nstatic int\nfree_vars (dlname, oldname, libdir, deplibs)\n     char *dlname;\n     char *oldname;\n     char *libdir;\n     char *deplibs;\n{\n  LT_DLFREE (dlname);\n  LT_DLFREE (oldname);\n  LT_DLFREE (libdir);\n  LT_DLFREE (deplibs);\n\n  return 0;\n}\n\nstatic int\ntry_dlopen (phandle, filename)\n     lt_dlhandle *phandle;\n     const char *filename;\n{\n  const char *\text\t\t= 0;\n  const char *\tsaved_error\t= 0;\n  char *\tcanonical\t= 0;\n  char *\tbase_name\t= 0;\n  char *\tdir\t\t= 0;\n  char *\tname\t\t= 0;\n  int\t\terrors\t\t= 0;\n  lt_dlhandle\tnewhandle;\n\n  assert (phandle);\n  assert (*phandle == 0);\n\n  LT_DLMUTEX_GETERROR (saved_error);\n\n  /* dlopen self? */\n  if (!filename)\n    {\n      *phandle = (lt_dlhandle) LT_EMALLOC (struct lt_dlhandle_struct, 1);\n      if (*phandle == 0)\n\treturn 1;\n\n      memset (*phandle, 0, sizeof(struct lt_dlhandle_struct));\n      newhandle\t= *phandle;\n\n      /* lt_dlclose()ing yourself is very bad!  Disallow it.  */\n      LT_DLSET_FLAG (*phandle, LT_DLRESIDENT_FLAG);\n\n      if (tryall_dlopen (&newhandle, 0, NULL) != 0)\n\t{\n\t  LT_DLFREE (*phandle);\n\t  return 1;\n\t}\n\n      goto register_handle;\n    }\n\n  assert (filename && *filename);\n\n  /* Doing this immediately allows internal functions to safely\n     assume only canonicalized paths are passed.  */\n  if (canonicalize_path (filename, &canonical) != 0)\n    {\n      ++errors;\n      goto cleanup;\n    }\n\n  /* If the canonical module name is a path (relative or absolute)\n     then split it into a directory part and a name part.  */\n  base_name = strrchr (canonical, '/');\n  if (base_name)\n    {\n      size_t dirlen = (1+ base_name) - canonical;\n\n      dir = LT_EMALLOC (char, 1+ dirlen);\n      if (!dir)\n\t{\n\t  ++errors;\n\t  goto cleanup;\n\t}\n\n      strncpy (dir, canonical, dirlen);\n      dir[dirlen] = LT_EOS_CHAR;\n\n      ++base_name;\n    }\n  else\n    base_name = canonical;\n\n  assert (base_name && *base_name);\n\n  /* Check whether we are opening a libtool module (.la extension).  */\n  ext = strrchr (base_name, '.');\n  if (ext && strcmp (ext, archive_ext) == 0)\n    {\n      /* this seems to be a libtool module */\n      FILE *\tfile\t = 0;\n      char *\tdlname\t = 0;\n      char *\told_name = 0;\n      char *\tlibdir\t = 0;\n      char *\tdeplibs\t = 0;\n      char *    line\t = 0;\n      size_t\tline_len;\n\n      /* if we can't find the installed flag, it is probably an\n\t installed libtool archive, produced with an old version\n\t of libtool */\n      int\tinstalled = 1;\n\n      /* extract the module name from the file name */\n      name = LT_EMALLOC (char, ext - base_name + 1);\n      if (!name)\n\t{\n\t  ++errors;\n\t  goto cleanup;\n\t}\n\n      /* canonicalize the module name */\n      {\n        size_t i;\n        for (i = 0; i < ext - base_name; ++i)\n\t  {\n\t    if (isalnum ((int)(base_name[i])))\n\t      {\n\t        name[i] = base_name[i];\n\t      }\n\t    else\n\t      {\n\t        name[i] = '_';\n\t      }\n\t  }\n        name[ext - base_name] = LT_EOS_CHAR;\n      }\n\n      /* Now try to open the .la file.  If there is no directory name\n         component, try to find it first in user_search_path and then other\n         prescribed paths.  Otherwise (or in any case if the module was not\n         yet found) try opening just the module name as passed.  */\n      if (!dir)\n\t{\n\t  const char *search_path;\n\n\t  LT_DLMUTEX_LOCK ();\n\t  search_path = user_search_path;\n\t  if (search_path)\n\t    file = find_file (user_search_path, base_name, &dir);\n\t  LT_DLMUTEX_UNLOCK ();\n\n\t  if (!file)\n\t    {\n\t      search_path = getenv (LTDL_SEARCHPATH_VAR);\n\t      if (search_path)\n\t\tfile = find_file (search_path, base_name, &dir);\n\t    }\n\n#ifdef LTDL_SHLIBPATH_VAR\n\t  if (!file)\n\t    {\n\t      search_path = getenv (LTDL_SHLIBPATH_VAR);\n\t      if (search_path)\n\t\tfile = find_file (search_path, base_name, &dir);\n\t    }\n#endif\n#ifdef LTDL_SYSSEARCHPATH\n\t  if (!file && sys_search_path)\n\t    {\n\t      file = find_file (sys_search_path, base_name, &dir);\n\t    }\n#endif\n\t}\n      else\n\t{\n\t  file = fopen (filename, LT_READTEXT_MODE);\n\t}\n\n      /* If we didn't find the file by now, it really isn't there.  Set\n\t the status flag, and bail out.  */\n      if (!file)\n\t{\n\t  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (FILE_NOT_FOUND));\n\t  ++errors;\n\t  goto cleanup;\n\t}\n\n      line_len = LT_FILENAME_MAX;\n      line = LT_EMALLOC (char, line_len);\n      if (!line)\n\t{\n\t  fclose (file);\n\t  ++errors;\n\t  goto cleanup;\n\t}\n\n      /* read the .la file */\n      while (!feof (file))\n\t{\n\t  if (!fgets (line, (int) line_len, file))\n\t    {\n\t      break;\n\t    }\n\n\t  /* Handle the case where we occasionally need to read a line\n\t     that is longer than the initial buffer size.  */\n\t  while ((line[LT_STRLEN(line) -1] != '\\n') && (!feof (file)))\n\t    {\n\t      line = LT_DLREALLOC (char, line, line_len *2);\n\t      if (!fgets (&line[line_len -1], (int) line_len +1, file))\n\t\t{\n\t\t  break;\n\t\t}\n\t      line_len *= 2;\n\t    }\n\n\t  if (line[0] == '\\n' || line[0] == '#')\n\t    {\n\t      continue;\n\t    }\n\n#undef  STR_DLNAME\n#define STR_DLNAME\t\"dlname=\"\n\t  if (strncmp (line, STR_DLNAME, sizeof (STR_DLNAME) - 1) == 0)\n\t    {\n\t      errors += trim (&dlname, &line[sizeof (STR_DLNAME) - 1]);\n\t    }\n\n#undef  STR_OLD_LIBRARY\n#define STR_OLD_LIBRARY\t\"old_library=\"\n\t  else if (strncmp (line, STR_OLD_LIBRARY,\n\t\t\t    sizeof (STR_OLD_LIBRARY) - 1) == 0)\n\t    {\n\t      errors += trim (&old_name, &line[sizeof (STR_OLD_LIBRARY) - 1]);\n\t    }\n#undef  STR_LIBDIR\n#define STR_LIBDIR\t\"libdir=\"\n\t  else if (strncmp (line, STR_LIBDIR, sizeof (STR_LIBDIR) - 1) == 0)\n\t    {\n\t      errors += trim (&libdir, &line[sizeof(STR_LIBDIR) - 1]);\n\t    }\n\n#undef  STR_DL_DEPLIBS\n#define STR_DL_DEPLIBS\t\"dependency_libs=\"\n\t  else if (strncmp (line, STR_DL_DEPLIBS,\n\t\t\t    sizeof (STR_DL_DEPLIBS) - 1) == 0)\n\t    {\n\t      errors += trim (&deplibs, &line[sizeof (STR_DL_DEPLIBS) - 1]);\n\t    }\n\t  else if (strcmp (line, \"installed=yes\\n\") == 0)\n\t    {\n\t      installed = 1;\n\t    }\n\t  else if (strcmp (line, \"installed=no\\n\") == 0)\n\t    {\n\t      installed = 0;\n\t    }\n\n#undef  STR_LIBRARY_NAMES\n#define STR_LIBRARY_NAMES \"library_names=\"\n\t  else if (! dlname && strncmp (line, STR_LIBRARY_NAMES,\n\t\t\t\t\tsizeof (STR_LIBRARY_NAMES) - 1) == 0)\n\t    {\n\t      char *last_libname;\n\t      errors += trim (&dlname, &line[sizeof (STR_LIBRARY_NAMES) - 1]);\n\t      if (!errors\n\t\t  && dlname\n\t\t  && (last_libname = strrchr (dlname, ' ')) != 0)\n\t\t{\n\t\t  last_libname = lt_estrdup (last_libname + 1);\n\t\t  if (!last_libname)\n\t\t    {\n\t\t      ++errors;\n\t\t      goto cleanup;\n\t\t    }\n\t\t  LT_DLMEM_REASSIGN (dlname, last_libname);\n\t\t}\n\t    }\n\n\t  if (errors)\n\t    break;\n\t}\n\n      fclose (file);\n      LT_DLFREE (line);\n\n      /* allocate the handle */\n      *phandle = (lt_dlhandle) LT_EMALLOC (struct lt_dlhandle_struct, 1);\n      if (*phandle == 0)\n\t++errors;\n\n      if (errors)\n\t{\n\t  free_vars (dlname, old_name, libdir, deplibs);\n\t  LT_DLFREE (*phandle);\n\t  goto cleanup;\n\t}\n\n      assert (*phandle);\n\n      memset (*phandle, 0, sizeof(struct lt_dlhandle_struct));\n      if (load_deplibs (*phandle, deplibs) == 0)\n\t{\n\t  newhandle = *phandle;\n\t  /* find_module may replace newhandle */\n\t  if (find_module (&newhandle, dir, libdir, dlname, old_name, installed))\n\t    {\n\t      unload_deplibs (*phandle);\n\t      ++errors;\n\t    }\n\t}\n      else\n\t{\n\t  ++errors;\n\t}\n\n      free_vars (dlname, old_name, libdir, deplibs);\n      if (errors)\n\t{\n\t  LT_DLFREE (*phandle);\n\t  goto cleanup;\n\t}\n\n      if (*phandle != newhandle)\n\t{\n\t  unload_deplibs (*phandle);\n\t}\n    }\n  else\n    {\n      /* not a libtool module */\n      *phandle = (lt_dlhandle) LT_EMALLOC (struct lt_dlhandle_struct, 1);\n      if (*phandle == 0)\n\t{\n\t  ++errors;\n\t  goto cleanup;\n\t}\n\n      memset (*phandle, 0, sizeof (struct lt_dlhandle_struct));\n      newhandle = *phandle;\n\n      /* If the module has no directory name component, try to find it\n\t first in user_search_path and then other prescribed paths.\n\t Otherwise (or in any case if the module was not yet found) try\n\t opening just the module name as passed.  */\n      if ((dir || (!find_handle (user_search_path, base_name, &newhandle)\n\t\t   && !find_handle (getenv (LTDL_SEARCHPATH_VAR), base_name,\n\t\t\t\t    &newhandle)\n#ifdef LTDL_SHLIBPATH_VAR\n\t\t   && !find_handle (getenv (LTDL_SHLIBPATH_VAR), base_name,\n\t\t\t\t    &newhandle)\n#endif\n#ifdef LTDL_SYSSEARCHPATH\n\t\t   && !find_handle (sys_search_path, base_name, &newhandle)\n#endif\n\t\t   )))\n\t{\n          if (tryall_dlopen (&newhandle, filename, NULL) != 0)\n            {\n              newhandle = NULL;\n            }\n\t}\n\n      if (!newhandle)\n\t{\n\t  LT_DLFREE (*phandle);\n\t  ++errors;\n\t  goto cleanup;\n\t}\n    }\n\n register_handle:\n  LT_DLMEM_REASSIGN (*phandle, newhandle);\n\n  if ((*phandle)->info.ref_count == 0)\n    {\n      (*phandle)->info.ref_count\t= 1;\n      LT_DLMEM_REASSIGN ((*phandle)->info.name, name);\n\n      LT_DLMUTEX_LOCK ();\n      (*phandle)->next\t\t= handles;\n      handles\t\t\t= *phandle;\n      LT_DLMUTEX_UNLOCK ();\n    }\n\n  LT_DLMUTEX_SETERROR (saved_error);\n\n cleanup:\n  LT_DLFREE (dir);\n  LT_DLFREE (name);\n  LT_DLFREE (canonical);\n\n  return errors;\n}\n\nlt_dlhandle\nlt_dlopen (filename)\n     const char *filename;\n{\n  lt_dlhandle handle = 0;\n\n  /* Just incase we missed a code path in try_dlopen() that reports\n     an error, but forgets to reset handle... */\n  if (try_dlopen (&handle, filename) != 0)\n    return 0;\n\n  return handle;\n}\n\n/* If the last error messge store was `FILE_NOT_FOUND', then return\n   non-zero.  */\nstatic int\nfile_not_found ()\n{\n  const char *error = 0;\n\n  LT_DLMUTEX_GETERROR (error);\n  if (error == LT_DLSTRERROR (FILE_NOT_FOUND))\n    return 1;\n\n  return 0;\n}\n\n/* If FILENAME has an ARCHIVE_EXT or SHLIB_EXT extension, try to\n   open the FILENAME as passed.  Otherwise try appending ARCHIVE_EXT,\n   and if a file is still not found try again with SHLIB_EXT appended\n   instead.  */\nlt_dlhandle\nlt_dlopenext (filename)\n     const char *filename;\n{\n  lt_dlhandle\thandle\t\t= 0;\n  char *\ttmp\t\t= 0;\n  char *\text\t\t= 0;\n  size_t\tlen;\n  int\t\terrors\t\t= 0;\n\n  if (!filename)\n    {\n      return lt_dlopen (filename);\n    }\n\n  assert (filename);\n\n  len = LT_STRLEN (filename);\n  ext = strrchr (filename, '.');\n\n  /* If FILENAME already bears a suitable extension, there is no need\n     to try appending additional extensions.  */\n  if (ext && ((strcmp (ext, archive_ext) == 0)\n#ifdef LTDL_SHLIB_EXT\n\t      || (strcmp (ext, shlib_ext) == 0)\n#endif\n      ))\n    {\n      return lt_dlopen (filename);\n    }\n\n  /* First try appending ARCHIVE_EXT.  */\n  tmp = LT_EMALLOC (char, len + LT_STRLEN (archive_ext) + 1);\n  if (!tmp)\n    return 0;\n\n  strcpy (tmp, filename);\n  strcat (tmp, archive_ext);\n  errors = try_dlopen (&handle, tmp);\n\n  /* If we found FILENAME, stop searching -- whether we were able to\n     load the file as a module or not.  If the file exists but loading\n     failed, it is better to return an error message here than to\n     report FILE_NOT_FOUND when the alternatives (foo.so etc) are not\n     in the module search path.  */\n  if (handle || ((errors > 0) && !file_not_found ()))\n    {\n      LT_DLFREE (tmp);\n      return handle;\n    }\n\n#ifdef LTDL_SHLIB_EXT\n  /* Try appending SHLIB_EXT.   */\n  if (LT_STRLEN (shlib_ext) > LT_STRLEN (archive_ext))\n    {\n      LT_DLFREE (tmp);\n      tmp = LT_EMALLOC (char, len + LT_STRLEN (shlib_ext) + 1);\n      if (!tmp)\n\treturn 0;\n\n      strcpy (tmp, filename);\n    }\n  else\n    {\n      tmp[len] = LT_EOS_CHAR;\n    }\n\n  strcat(tmp, shlib_ext);\n  errors = try_dlopen (&handle, tmp);\n\n  /* As before, if the file was found but loading failed, return now\n     with the current error message.  */\n  if (handle || ((errors > 0) && !file_not_found ()))\n    {\n      LT_DLFREE (tmp);\n      return handle;\n    }\n#endif\n\n  /* Still here?  Then we really did fail to locate any of the file\n     names we tried.  */\n  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (FILE_NOT_FOUND));\n  LT_DLFREE (tmp);\n  return 0;\n}\n\n\nstatic int\nlt_argz_insert (pargz, pargz_len, before, entry)\n     char **pargz;\n     size_t *pargz_len;\n     char *before;\n     const char *entry;\n{\n  error_t error;\n\n  if ((error = argz_insert (pargz, pargz_len, before, entry)))\n    {\n      switch (error)\n\t{\n\tcase ENOMEM:\n\t  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (NO_MEMORY));\n\t  break;\n\tdefault:\n\t  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (UNKNOWN));\n\t  break;\n\t}\n      return 1;\n    }\n\n  return 0;\n}\n\nstatic int\nlt_argz_insertinorder (pargz, pargz_len, entry)\n     char **pargz;\n     size_t *pargz_len;\n     const char *entry;\n{\n  char *before = 0;\n\n  assert (pargz);\n  assert (pargz_len);\n  assert (entry && *entry);\n\n  if (*pargz)\n    while ((before = argz_next (*pargz, *pargz_len, before)))\n      {\n\tint cmp = strcmp (entry, before);\n\n\tif (cmp < 0)  break;\n\tif (cmp == 0) return 0;\t/* No duplicates! */\n      }\n\n  return lt_argz_insert (pargz, pargz_len, before, entry);\n}\n\nstatic int\nlt_argz_insertdir (pargz, pargz_len, dirnam, dp)\n     char **pargz;\n     size_t *pargz_len;\n     const char *dirnam;\n     struct dirent *dp;\n{\n  char   *buf\t    = 0;\n  size_t buf_len    = 0;\n  char   *end\t    = 0;\n  size_t end_offset = 0;\n  size_t dir_len    = 0;\n  int    errors\t    = 0;\n\n  assert (pargz);\n  assert (pargz_len);\n  assert (dp);\n\n  dir_len = LT_STRLEN (dirnam);\n  end     = dp->d_name + LT_D_NAMLEN(dp);\n\n  /* Ignore version numbers.  */\n  {\n    char *p;\n    for (p = end; p -1 > dp->d_name; --p)\n      if (strchr (\".0123456789\", p[-1]) == 0)\n\tbreak;\n\n    if (*p == '.')\n      end = p;\n  }\n\n  /* Ignore filename extension.  */\n  {\n    char *p;\n    for (p = end -1; p > dp->d_name; --p)\n      if (*p == '.')\n\t{\n\t  end = p;\n\t  break;\n\t}\n  }\n\n  /* Prepend the directory name.  */\n  end_offset\t= end - dp->d_name;\n  buf_len\t= dir_len + 1+ end_offset;\n  buf\t\t= LT_EMALLOC (char, 1+ buf_len);\n  if (!buf)\n    return ++errors;\n\n  assert (buf);\n\n  strcpy  (buf, dirnam);\n  strcat  (buf, \"/\");\n  strncat (buf, dp->d_name, end_offset);\n  buf[buf_len] = LT_EOS_CHAR;\n\n  /* Try to insert (in order) into ARGZ/ARGZ_LEN.  */\n  if (lt_argz_insertinorder (pargz, pargz_len, buf) != 0)\n    ++errors;\n\n  LT_DLFREE (buf);\n\n  return errors;\n}\n\nstatic int\nlist_files_by_dir (dirnam, pargz, pargz_len)\n     const char *dirnam;\n     char **pargz;\n     size_t *pargz_len;\n{\n  DIR\t*dirp\t  = 0;\n  int    errors\t  = 0;\n\n  assert (dirnam && *dirnam);\n  assert (pargz);\n  assert (pargz_len);\n  assert (dirnam[LT_STRLEN(dirnam) -1] != '/');\n\n  dirp = opendir (dirnam);\n  if (dirp)\n    {\n      struct dirent *dp\t= 0;\n\n      while ((dp = readdir (dirp)))\n\tif (dp->d_name[0] != '.')\n\t  if (lt_argz_insertdir (pargz, pargz_len, dirnam, dp))\n\t    {\n\t      ++errors;\n\t      break;\n\t    }\n\n      closedir (dirp);\n    }\n  else\n    ++errors;\n\n  return errors;\n}\n\n\n/* If there are any files in DIRNAME, call the function passed in\n   DATA1 (with the name of each file and DATA2 as arguments).  */\nstatic int\nforeachfile_callback (dirname, data1, data2)\n     char *dirname;\n     lt_ptr data1;\n     lt_ptr data2;\n{\n  int (*func) LT_PARAMS((const char *filename, lt_ptr data))\n\t= (int (*) LT_PARAMS((const char *filename, lt_ptr data))) data1;\n\n  int\t  is_done  = 0;\n  char   *argz     = 0;\n  size_t  argz_len = 0;\n\n  if (list_files_by_dir (dirname, &argz, &argz_len) != 0)\n    goto cleanup;\n  if (!argz)\n    goto cleanup;\n\n  {\n    char *filename = 0;\n    while ((filename = argz_next (argz, argz_len, filename)))\n      if ((is_done = (*func) (filename, data2)))\n\tbreak;\n  }\n\n cleanup:\n  LT_DLFREE (argz);\n\n  return is_done;\n}\n\n\n/* Call FUNC for each unique extensionless file in SEARCH_PATH, along\n   with DATA.  The filenames passed to FUNC would be suitable for\n   passing to lt_dlopenext.  The extensions are stripped so that\n   individual modules do not generate several entries (e.g. libfoo.la,\n   libfoo.so, libfoo.so.1, libfoo.so.1.0.0).  If SEARCH_PATH is NULL,\n   then the same directories that lt_dlopen would search are examined.  */\nint\nlt_dlforeachfile (search_path, func, data)\n     const char *search_path;\n     int (*func) LT_PARAMS ((const char *filename, lt_ptr data));\n     lt_ptr data;\n{\n  int is_done = 0;\n\n  if (search_path)\n    {\n      /* If a specific path was passed, search only the directories\n\t listed in it.  */\n      is_done = foreach_dirinpath (search_path, 0,\n\t\t\t\t   foreachfile_callback, func, data);\n    }\n  else\n    {\n      /* Otherwise search the default paths.  */\n      is_done = foreach_dirinpath (user_search_path, 0,\n\t\t\t\t   foreachfile_callback, func, data);\n      if (!is_done)\n\t{\n\t  is_done = foreach_dirinpath (getenv(\"LTDL_LIBRARY_PATH\"), 0,\n\t\t\t\t       foreachfile_callback, func, data);\n\t}\n\n#ifdef LTDL_SHLIBPATH_VAR\n      if (!is_done)\n\t{\n\t  is_done = foreach_dirinpath (getenv(LTDL_SHLIBPATH_VAR), 0,\n\t\t\t\t       foreachfile_callback, func, data);\n\t}\n#endif\n#ifdef LTDL_SYSSEARCHPATH\n      if (!is_done)\n\t{\n\t  is_done = foreach_dirinpath (getenv(LTDL_SYSSEARCHPATH), 0,\n\t\t\t\t       foreachfile_callback, func, data);\n\t}\n#endif\n    }\n\n  return is_done;\n}\n\nint\nlt_dlclose (handle)\n     lt_dlhandle handle;\n{\n  lt_dlhandle cur, last;\n  int errors = 0;\n\n  LT_DLMUTEX_LOCK ();\n\n  /* check whether the handle is valid */\n  last = cur = handles;\n  while (cur && handle != cur)\n    {\n      last = cur;\n      cur = cur->next;\n    }\n\n  if (!cur)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (INVALID_HANDLE));\n      ++errors;\n      goto done;\n    }\n\n  handle->info.ref_count--;\n\n  /* Note that even with resident modules, we must track the ref_count\n     correctly incase the user decides to reset the residency flag\n     later (even though the API makes no provision for that at the\n     moment).  */\n  if (handle->info.ref_count <= 0 && !LT_DLIS_RESIDENT (handle))\n    {\n      lt_user_data data = handle->loader->dlloader_data;\n\n      if (handle != handles)\n\t{\n\t  last->next = handle->next;\n\t}\n      else\n\t{\n\t  handles = handle->next;\n\t}\n\n      errors += handle->loader->module_close (data, handle->module);\n      errors += unload_deplibs(handle);\n\n      /* It is up to the callers to free the data itself.  */\n      LT_DLFREE (handle->caller_data);\n\n      LT_DLFREE (handle->info.filename);\n      LT_DLFREE (handle->info.name);\n      LT_DLFREE (handle);\n\n      goto done;\n    }\n\n  if (LT_DLIS_RESIDENT (handle))\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (CLOSE_RESIDENT_MODULE));\n      ++errors;\n    }\n\n done:\n  LT_DLMUTEX_UNLOCK ();\n\n  return errors;\n}\n\nlt_ptr\nlt_dlsym (handle, symbol)\n     lt_dlhandle handle;\n     const char *symbol;\n{\n  size_t lensym;\n  char\tlsym[LT_SYMBOL_LENGTH];\n  char\t*sym;\n  lt_ptr address;\n  lt_user_data data;\n\n  if (!handle)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (INVALID_HANDLE));\n      return 0;\n    }\n\n  if (!symbol)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (SYMBOL_NOT_FOUND));\n      return 0;\n    }\n\n  lensym = LT_STRLEN (symbol) + LT_STRLEN (handle->loader->sym_prefix)\n\t\t\t\t\t+ LT_STRLEN (handle->info.name);\n\n  if (lensym + LT_SYMBOL_OVERHEAD < LT_SYMBOL_LENGTH)\n    {\n      sym = lsym;\n    }\n  else\n    {\n      sym = LT_EMALLOC (char, lensym + LT_SYMBOL_OVERHEAD + 1);\n      if (!sym)\n\t{\n\t  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (BUFFER_OVERFLOW));\n\t  return 0;\n\t}\n    }\n\n  data = handle->loader->dlloader_data;\n  if (handle->info.name)\n    {\n      const char *saved_error;\n\n      LT_DLMUTEX_GETERROR (saved_error);\n\n      /* this is a libtool module */\n      if (handle->loader->sym_prefix)\n\t{\n\t  strcpy(sym, handle->loader->sym_prefix);\n\t  strcat(sym, handle->info.name);\n\t}\n      else\n\t{\n\t  strcpy(sym, handle->info.name);\n\t}\n\n      strcat(sym, \"_LTX_\");\n      strcat(sym, symbol);\n\n      /* try \"modulename_LTX_symbol\" */\n      address = handle->loader->find_sym (data, handle->module, sym);\n      if (address)\n\t{\n\t  if (sym != lsym)\n\t    {\n\t      LT_DLFREE (sym);\n\t    }\n\t  return address;\n\t}\n      LT_DLMUTEX_SETERROR (saved_error);\n    }\n\n  /* otherwise try \"symbol\" */\n  if (handle->loader->sym_prefix)\n    {\n      strcpy(sym, handle->loader->sym_prefix);\n      strcat(sym, symbol);\n    }\n  else\n    {\n      strcpy(sym, symbol);\n    }\n\n  address = handle->loader->find_sym (data, handle->module, sym);\n  if (sym != lsym)\n    {\n      LT_DLFREE (sym);\n    }\n\n  return address;\n}\n\nconst char *\nlt_dlerror ()\n{\n  const char *error;\n\n  LT_DLMUTEX_GETERROR (error);\n  LT_DLMUTEX_SETERROR (0);\n\n  return error ? error : NULL;\n}\n\nstatic int\nlt_dlpath_insertdir (ppath, before, dir)\n     char **ppath;\n     char *before;\n     const char *dir;\n{\n  int    errors\t\t= 0;\n  char  *canonical\t= 0;\n  char  *argz\t\t= 0;\n  size_t argz_len\t= 0;\n\n  assert (ppath);\n  assert (dir && *dir);\n\n  if (canonicalize_path (dir, &canonical) != 0)\n    {\n      ++errors;\n      goto cleanup;\n    }\n\n  assert (canonical && *canonical);\n\n  /* If *PPATH is empty, set it to DIR.  */\n  if (*ppath == 0)\n    {\n      assert (!before);\t\t/* BEFORE cannot be set without PPATH.  */\n      assert (dir);\t\t/* Without DIR, don't call this function!  */\n\n      *ppath = lt_estrdup (dir);\n      if (*ppath == 0)\n\t++errors;\n\n      return errors;\n    }\n\n  assert (ppath && *ppath);\n\n  if (argzize_path (*ppath, &argz, &argz_len) != 0)\n    {\n      ++errors;\n      goto cleanup;\n    }\n\n  /* Convert BEFORE into an equivalent offset into ARGZ.  This only works\n     if *PPATH is already canonicalized, and hence does not change length\n     with respect to ARGZ.  We canonicalize each entry as it is added to\n     the search path, and don't call this function with (uncanonicalized)\n     user paths, so this is a fair assumption.  */\n  if (before)\n    {\n      assert (*ppath <= before);\n      assert (before - *ppath <= strlen (*ppath));\n\n      before = before - *ppath + argz;\n    }\n\n  if (lt_argz_insert (&argz, &argz_len, before, dir) != 0)\n    {\n      ++errors;\n      goto cleanup;\n    }\n\n  argz_stringify (argz, argz_len, LT_PATHSEP_CHAR);\n  LT_DLMEM_REASSIGN (*ppath,  argz);\n\n cleanup:\n  LT_DLFREE (canonical);\n  LT_DLFREE (argz);\n\n  return errors;\n}\n\nint\nlt_dladdsearchdir (search_dir)\n     const char *search_dir;\n{\n  int errors = 0;\n\n  if (search_dir && *search_dir)\n    {\n      LT_DLMUTEX_LOCK ();\n      if (lt_dlpath_insertdir (&user_search_path, 0, search_dir) != 0)\n\t++errors;\n      LT_DLMUTEX_UNLOCK ();\n    }\n\n  return errors;\n}\n\nint\nlt_dlinsertsearchdir (before, search_dir)\n     const char *before;\n     const char *search_dir;\n{\n  int errors = 0;\n\n  if (before)\n    {\n      LT_DLMUTEX_LOCK ();\n      if ((before < user_search_path)\n\t  || (before >= user_search_path + LT_STRLEN (user_search_path)))\n\t{\n\t  LT_DLMUTEX_UNLOCK ();\n\t  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (INVALID_POSITION));\n\t  return 1;\n\t}\n      LT_DLMUTEX_UNLOCK ();\n    }\n\n  if (search_dir && *search_dir)\n    {\n      LT_DLMUTEX_LOCK ();\n      if (lt_dlpath_insertdir (&user_search_path,\n\t\t\t       (char *) before, search_dir) != 0)\n\t{\n\t  ++errors;\n\t}\n      LT_DLMUTEX_UNLOCK ();\n    }\n\n  return errors;\n}\n\nint\nlt_dlsetsearchpath (search_path)\n     const char *search_path;\n{\n  int   errors\t    = 0;\n\n  LT_DLMUTEX_LOCK ();\n  LT_DLFREE (user_search_path);\n  LT_DLMUTEX_UNLOCK ();\n\n  if (!search_path || !LT_STRLEN (search_path))\n    {\n      return errors;\n    }\n\n  LT_DLMUTEX_LOCK ();\n  if (canonicalize_path (search_path, &user_search_path) != 0)\n    ++errors;\n  LT_DLMUTEX_UNLOCK ();\n\n  return errors;\n}\n\nconst char *\nlt_dlgetsearchpath ()\n{\n  const char *saved_path;\n\n  LT_DLMUTEX_LOCK ();\n  saved_path = user_search_path;\n  LT_DLMUTEX_UNLOCK ();\n\n  return saved_path;\n}\n\nint\nlt_dlmakeresident (handle)\n     lt_dlhandle handle;\n{\n  int errors = 0;\n\n  if (!handle)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (INVALID_HANDLE));\n      ++errors;\n    }\n  else\n    {\n      LT_DLSET_FLAG (handle, LT_DLRESIDENT_FLAG);\n    }\n\n  return errors;\n}\n\nint\nlt_dlisresident\t(handle)\n     lt_dlhandle handle;\n{\n  if (!handle)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (INVALID_HANDLE));\n      return -1;\n    }\n\n  return LT_DLIS_RESIDENT (handle);\n}\n\n\n\n\f\n/* --- MODULE INFORMATION --- */\n\nconst lt_dlinfo *\nlt_dlgetinfo (handle)\n     lt_dlhandle handle;\n{\n  if (!handle)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (INVALID_HANDLE));\n      return 0;\n    }\n\n  return &(handle->info);\n}\n\nlt_dlhandle\nlt_dlhandle_next (place)\n     lt_dlhandle place;\n{\n  return place ? place->next : handles;\n}\n\nint\nlt_dlforeach (func, data)\n     int (*func) LT_PARAMS((lt_dlhandle handle, lt_ptr data));\n     lt_ptr data;\n{\n  int errors = 0;\n  lt_dlhandle cur;\n\n  LT_DLMUTEX_LOCK ();\n\n  cur = handles;\n  while (cur)\n    {\n      lt_dlhandle tmp = cur;\n\n      cur = cur->next;\n      if ((*func) (tmp, data))\n\t{\n\t  ++errors;\n\t  break;\n\t}\n    }\n\n  LT_DLMUTEX_UNLOCK ();\n\n  return errors;\n}\n\nlt_dlcaller_id\nlt_dlcaller_register ()\n{\n  static lt_dlcaller_id last_caller_id = 0;\n  int result;\n\n  LT_DLMUTEX_LOCK ();\n  result = ++last_caller_id;\n  LT_DLMUTEX_UNLOCK ();\n\n  return result;\n}\n\nlt_ptr\nlt_dlcaller_set_data (key, handle, data)\n     lt_dlcaller_id key;\n     lt_dlhandle handle;\n     lt_ptr data;\n{\n  int n_elements = 0;\n  lt_ptr stale = (lt_ptr) 0;\n  int i;\n\n  /* This needs to be locked so that the caller data can be updated\n     simultaneously by different threads.  */\n  LT_DLMUTEX_LOCK ();\n\n  if (handle->caller_data)\n    while (handle->caller_data[n_elements].key)\n      ++n_elements;\n\n  for (i = 0; i < n_elements; ++i)\n    {\n      if (handle->caller_data[i].key == key)\n\t{\n\t  stale = handle->caller_data[i].data;\n\t  break;\n\t}\n    }\n\n  /* Ensure that there is enough room in this handle's caller_data\n     array to accept a new element (and an empty end marker).  */\n  if (i == n_elements)\n    {\n      lt_caller_data *temp\n\t= LT_DLREALLOC (lt_caller_data, handle->caller_data, 2+ n_elements);\n\n      if (!temp)\n\t{\n\t  stale = 0;\n\t  goto done;\n\t}\n\n      handle->caller_data = temp;\n\n      /* We only need this if we needed to allocate a new caller_data.  */\n      handle->caller_data[i].key  = key;\n      handle->caller_data[1+ i].key = 0;\n    }\n\n  handle->caller_data[i].data = data;\n\n done:\n  LT_DLMUTEX_UNLOCK ();\n\n  return stale;\n}\n\nlt_ptr\nlt_dlcaller_get_data  (key, handle)\n     lt_dlcaller_id key;\n     lt_dlhandle handle;\n{\n  lt_ptr result = (lt_ptr) 0;\n\n  /* This needs to be locked so that the caller data isn't updated by\n     another thread part way through this function.  */\n  LT_DLMUTEX_LOCK ();\n\n  /* Locate the index of the element with a matching KEY.  */\n  {\n    int i;\n    for (i = 0; handle->caller_data[i].key; ++i)\n      {\n\tif (handle->caller_data[i].key == key)\n\t  {\n\t    result = handle->caller_data[i].data;\n\t    break;\n\t  }\n      }\n  }\n\n  LT_DLMUTEX_UNLOCK ();\n\n  return result;\n}\n\n\n\f\n/* --- USER MODULE LOADER API --- */\n\n\nint\nlt_dlloader_add (place, dlloader, loader_name)\n     lt_dlloader *place;\n     const struct lt_user_dlloader *dlloader;\n     const char *loader_name;\n{\n  int errors = 0;\n  lt_dlloader *node = 0, *ptr = 0;\n\n  if ((dlloader == 0)\t/* diagnose null parameters */\n      || (dlloader->module_open == 0)\n      || (dlloader->module_close == 0)\n      || (dlloader->find_sym == 0))\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (INVALID_LOADER));\n      return 1;\n    }\n\n  /* Create a new dlloader node with copies of the user callbacks.  */\n  node = LT_EMALLOC (lt_dlloader, 1);\n  if (!node)\n    return 1;\n\n  node->next\t\t= 0;\n  node->loader_name\t= loader_name;\n  node->sym_prefix\t= dlloader->sym_prefix;\n  node->dlloader_exit\t= dlloader->dlloader_exit;\n  node->module_open\t= dlloader->module_open;\n  node->module_close\t= dlloader->module_close;\n  node->find_sym\t= dlloader->find_sym;\n  node->dlloader_data\t= dlloader->dlloader_data;\n\n  LT_DLMUTEX_LOCK ();\n  if (!loaders)\n    {\n      /* If there are no loaders, NODE becomes the list! */\n      loaders = node;\n    }\n  else if (!place)\n    {\n      /* If PLACE is not set, add NODE to the end of the\n\t LOADERS list. */\n      for (ptr = loaders; ptr->next; ptr = ptr->next)\n\t{\n\t  /*NOWORK*/;\n\t}\n\n      ptr->next = node;\n    }\n  else if (loaders == place)\n    {\n      /* If PLACE is the first loader, NODE goes first. */\n      node->next = place;\n      loaders = node;\n    }\n  else\n    {\n      /* Find the node immediately preceding PLACE. */\n      for (ptr = loaders; ptr->next != place; ptr = ptr->next)\n\t{\n\t  /*NOWORK*/;\n\t}\n\n      if (ptr->next != place)\n\t{\n\t  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (INVALID_LOADER));\n\t  ++errors;\n\t}\n      else\n\t{\n\t  /* Insert NODE between PTR and PLACE. */\n\t  node->next = place;\n\t  ptr->next  = node;\n\t}\n    }\n\n  LT_DLMUTEX_UNLOCK ();\n\n  return errors;\n}\n\nint\nlt_dlloader_remove (loader_name)\n     const char *loader_name;\n{\n  lt_dlloader *place = lt_dlloader_find (loader_name);\n  lt_dlhandle handle;\n  int errors = 0;\n\n  if (!place)\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (INVALID_LOADER));\n      return 1;\n    }\n\n  LT_DLMUTEX_LOCK ();\n\n  /* Fail if there are any open modules which use this loader. */\n  for  (handle = handles; handle; handle = handle->next)\n    {\n      if (handle->loader == place)\n\t{\n\t  LT_DLMUTEX_SETERROR (LT_DLSTRERROR (REMOVE_LOADER));\n\t  ++errors;\n\t  goto done;\n\t}\n    }\n\n  if (place == loaders)\n    {\n      /* PLACE is the first loader in the list. */\n      loaders = loaders->next;\n    }\n  else\n    {\n      /* Find the loader before the one being removed. */\n      lt_dlloader *prev;\n      for (prev = loaders; prev->next; prev = prev->next)\n\t{\n\t  if (!strcmp (prev->next->loader_name, loader_name))\n\t    {\n\t      break;\n\t    }\n\t}\n\n      place = prev->next;\n      prev->next = prev->next->next;\n    }\n\n  if (place->dlloader_exit)\n    {\n      errors = place->dlloader_exit (place->dlloader_data);\n    }\n\n  LT_DLFREE (place);\n\n done:\n  LT_DLMUTEX_UNLOCK ();\n\n  return errors;\n}\n\nlt_dlloader *\nlt_dlloader_next (place)\n     lt_dlloader *place;\n{\n  lt_dlloader *next;\n\n  LT_DLMUTEX_LOCK ();\n  next = place ? place->next : loaders;\n  LT_DLMUTEX_UNLOCK ();\n\n  return next;\n}\n\nconst char *\nlt_dlloader_name (place)\n     lt_dlloader *place;\n{\n  const char *name = 0;\n\n  if (place)\n    {\n      LT_DLMUTEX_LOCK ();\n      name = place ? place->loader_name : 0;\n      LT_DLMUTEX_UNLOCK ();\n    }\n  else\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (INVALID_LOADER));\n    }\n\n  return name;\n}\n\nlt_user_data *\nlt_dlloader_data (place)\n     lt_dlloader *place;\n{\n  lt_user_data *data = 0;\n\n  if (place)\n    {\n      LT_DLMUTEX_LOCK ();\n      data = place ? &(place->dlloader_data) : 0;\n      LT_DLMUTEX_UNLOCK ();\n    }\n  else\n    {\n      LT_DLMUTEX_SETERROR (LT_DLSTRERROR (INVALID_LOADER));\n    }\n\n  return data;\n}\n\nlt_dlloader *\nlt_dlloader_find (loader_name)\n     const char *loader_name;\n{\n  lt_dlloader *place = 0;\n\n  LT_DLMUTEX_LOCK ();\n  for (place = loaders; place; place = place->next)\n    {\n      if (strcmp (place->loader_name, loader_name) == 0)\n\t{\n\t  break;\n\t}\n    }\n  LT_DLMUTEX_UNLOCK ();\n\n  return place;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/libltdl/config-h.in": "/* config-h.in.  Generated from configure.ac by autoheader.  */\n\n/* Define to 1 if you have the `argz_append' function. */\n#undef HAVE_ARGZ_APPEND\n\n/* Define to 1 if you have the `argz_create_sep' function. */\n#undef HAVE_ARGZ_CREATE_SEP\n\n/* Define to 1 if you have the <argz.h> header file. */\n#undef HAVE_ARGZ_H\n\n/* Define to 1 if you have the `argz_insert' function. */\n#undef HAVE_ARGZ_INSERT\n\n/* Define to 1 if you have the `argz_next' function. */\n#undef HAVE_ARGZ_NEXT\n\n/* Define to 1 if you have the `argz_stringify' function. */\n#undef HAVE_ARGZ_STRINGIFY\n\n/* Define to 1 if you have the <assert.h> header file. */\n#undef HAVE_ASSERT_H\n\n/* Define to 1 if you have the `bcopy' function. */\n#undef HAVE_BCOPY\n\n/* Define to 1 if you have the `closedir' function. */\n#undef HAVE_CLOSEDIR\n\n/* Define to 1 if you have the <ctype.h> header file. */\n#undef HAVE_CTYPE_H\n\n/* Define to 1 if you have the <dirent.h> header file, and it defines `DIR'.\n   */\n#undef HAVE_DIRENT_H\n\n/* Define if you have the GNU dld library. */\n#undef HAVE_DLD\n\n/* Define to 1 if you have the <dld.h> header file. */\n#undef HAVE_DLD_H\n\n/* Define to 1 if you have the `dlerror' function. */\n#undef HAVE_DLERROR\n\n/* Define to 1 if you have the <dlfcn.h> header file. */\n#undef HAVE_DLFCN_H\n\n/* Define to 1 if you have the <dl.h> header file. */\n#undef HAVE_DL_H\n\n/* Define if you have the _dyld_func_lookup function. */\n#undef HAVE_DYLD\n\n/* Define to 1 if you have the <errno.h> header file. */\n#undef HAVE_ERRNO_H\n\n/* Define to 1 if the system has the type `error_t'. */\n#undef HAVE_ERROR_T\n\n/* Define to 1 if you have the `index' function. */\n#undef HAVE_INDEX\n\n/* Define to 1 if you have the <inttypes.h> header file. */\n#undef HAVE_INTTYPES_H\n\n/* Define if you have the libdl library or equivalent. */\n#undef HAVE_LIBDL\n\n/* Define to 1 if you have the <mach-o/dyld.h> header file. */\n#undef HAVE_MACH_O_DYLD_H\n\n/* Define to 1 if you have the <malloc.h> header file. */\n#undef HAVE_MALLOC_H\n\n/* Define to 1 if you have the `memcpy' function. */\n#undef HAVE_MEMCPY\n\n/* Define to 1 if you have the `memmove' function. */\n#undef HAVE_MEMMOVE\n\n/* Define to 1 if you have the <memory.h> header file. */\n#undef HAVE_MEMORY_H\n\n/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR'. */\n#undef HAVE_NDIR_H\n\n/* Define to 1 if you have the `opendir' function. */\n#undef HAVE_OPENDIR\n\n/* Define if libtool can extract symbol lists from object files. */\n#undef HAVE_PRELOADED_SYMBOLS\n\n/* Define to 1 if you have the `readdir' function. */\n#undef HAVE_READDIR\n\n/* Define to 1 if you have the `rindex' function. */\n#undef HAVE_RINDEX\n\n/* Define if you have the shl_load function. */\n#undef HAVE_SHL_LOAD\n\n/* Define to 1 if you have the <stdint.h> header file. */\n#undef HAVE_STDINT_H\n\n/* Define to 1 if you have the <stdio.h> header file. */\n#undef HAVE_STDIO_H\n\n/* Define to 1 if you have the <stdlib.h> header file. */\n#undef HAVE_STDLIB_H\n\n/* Define to 1 if you have the `strchr' function. */\n#undef HAVE_STRCHR\n\n/* Define to 1 if you have the `strcmp' function. */\n#undef HAVE_STRCMP\n\n/* Define to 1 if you have the <strings.h> header file. */\n#undef HAVE_STRINGS_H\n\n/* Define to 1 if you have the <string.h> header file. */\n#undef HAVE_STRING_H\n\n/* Define to 1 if you have the `strrchr' function. */\n#undef HAVE_STRRCHR\n\n/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'.\n   */\n#undef HAVE_SYS_DIR_H\n\n/* Define to 1 if you have the <sys/dl.h> header file. */\n#undef HAVE_SYS_DL_H\n\n/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'.\n   */\n#undef HAVE_SYS_NDIR_H\n\n/* Define to 1 if you have the <sys/stat.h> header file. */\n#undef HAVE_SYS_STAT_H\n\n/* Define to 1 if you have the <sys/types.h> header file. */\n#undef HAVE_SYS_TYPES_H\n\n/* Define to 1 if you have the <unistd.h> header file. */\n#undef HAVE_UNISTD_H\n\n/* Define if the OS needs help to load dependent libraries for dlopen(). */\n#undef LTDL_DLOPEN_DEPLIBS\n\n/* Define to the sub-directory in which libtool stores uninstalled libraries.\n   */\n#undef LTDL_OBJDIR\n\n/* Define to the name of the environment variable that determines the dynamic\n   library search path. */\n#undef LTDL_SHLIBPATH_VAR\n\n/* Define to the extension used for shared libraries, say, \".so\". */\n#undef LTDL_SHLIB_EXT\n\n/* Define to the system default library search path. */\n#undef LTDL_SYSSEARCHPATH\n\n/* Define if dlsym() requires a leading underscore in symbol names. */\n#undef NEED_USCORE\n\n/* Define to the address where bug reports for this package should be sent. */\n#undef PACKAGE_BUGREPORT\n\n/* Define to the full name of this package. */\n#undef PACKAGE_NAME\n\n/* Define to the full name and version of this package. */\n#undef PACKAGE_STRING\n\n/* Define to the one symbol short name of this package. */\n#undef PACKAGE_TARNAME\n\n/* Define to the home page for this package. */\n#undef PACKAGE_URL\n\n/* Define to the version of this package. */\n#undef PACKAGE_VERSION\n\n/* Define to 1 if you have the ANSI C header files. */\n#undef STDC_HEADERS\n\n/* Define to empty if `const' does not conform to ANSI C. */\n#undef const\n\n/* Define to a type to use for `error_t' if it is not otherwise available. */\n#undef error_t\n\n/* Define to `__inline__' or `__inline' if that's what the C compiler\n   calls it, or to nothing if 'inline' is not supported under any name.  */\n#ifndef __cplusplus\n#undef inline\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/libltdl/ltmain.sh": "# ltmain.sh - Provide generalized library-building support services.\n# NOTE: Changing this file will not affect anything until you rerun configure.\n#\n# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005\n# Free Software Foundation, Inc.\n# Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\nbasename=\"s,^.*/,,g\"\n\n# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh\n# is ksh but when the shell is invoked as \"sh\" and the current value of\n# the _XPG environment variable is not equal to 1 (one), the special\n# positional parameter $0, within a function call, is the name of the\n# function.\nprogpath=\"$0\"\n\n# The name of this program:\nprogname=`echo \"$progpath\" | $SED $basename`\nmodename=\"$progname\"\n\n# Global variables:\nEXIT_SUCCESS=0\nEXIT_FAILURE=1\n\nPROGRAM=ltmain.sh\nPACKAGE=libtool\nVERSION=1.5.16\nTIMESTAMP=\" (1.1220.2.235 2005/04/25 18:13:26)\"\n\n# See if we are running on zsh, and set the options which allow our\n# commands through without removal of \\ escapes.\nif test -n \"${ZSH_VERSION+set}\" ; then\n  setopt NO_GLOB_SUBST\nfi\n\n# Check that we have a working $echo.\nif test \"X$1\" = X--no-reexec; then\n  # Discard the --no-reexec flag, and continue.\n  shift\nelif test \"X$1\" = X--fallback-echo; then\n  # Avoid inline document here, it may be left over\n  :\nelif test \"X`($echo '\\t') 2>/dev/null`\" = 'X\\t'; then\n  # Yippee, $echo works!\n  :\nelse\n  # Restart under the correct shell, and then maybe $echo will work.\n  exec $SHELL \"$progpath\" --no-reexec ${1+\"$@\"}\nfi\n\nif test \"X$1\" = X--fallback-echo; then\n  # used as fallback echo\n  shift\n  cat <<EOF\n$*\nEOF\n  exit $EXIT_SUCCESS\nfi\n\ndefault_mode=\nhelp=\"Try \\`$progname --help' for more information.\"\nmagic=\"%%%MAGIC variable%%%\"\nmkdir=\"mkdir\"\nmv=\"mv -f\"\nrm=\"rm -f\"\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed=\"${SED}\"' -e 1s/^X//'\nsed_quote_subst='s/\\([\\\\`\\\\\"$\\\\\\\\]\\)/\\\\\\1/g'\n# test EBCDIC or ASCII\ncase `echo A|tr A '\\301'` in\n A) # EBCDIC based system\n  SP2NL=\"tr '\\100' '\\n'\"\n  NL2SP=\"tr '\\r\\n' '\\100\\100'\"\n  ;;\n *) # Assume ASCII based system\n  SP2NL=\"tr '\\040' '\\012'\"\n  NL2SP=\"tr '\\015\\012' '\\040\\040'\"\n  ;;\nesac\n\n# NLS nuisances.\n# Only set LANG and LC_ALL to C if already set.\n# These must not be set unconditionally because not all systems understand\n# e.g. LANG=C (notably SCO).\n# We save the old values to restore during execute mode.\nif test \"${LC_ALL+set}\" = set; then\n  save_LC_ALL=\"$LC_ALL\"; LC_ALL=C; export LC_ALL\nfi\nif test \"${LANG+set}\" = set; then\n  save_LANG=\"$LANG\"; LANG=C; export LANG\nfi\n\n# Make sure IFS has a sensible default\nlt_nl='\n'\nIFS=\" \t$lt_nl\"\n\nif test \"$build_libtool_libs\" != yes && test \"$build_old_libs\" != yes; then\n  $echo \"$modename: not configured to build any kind of library\" 1>&2\n  $echo \"Fatal configuration error.  See the $PACKAGE docs for more information.\" 1>&2\n  exit $EXIT_FAILURE\nfi\n\n# Global variables.\nmode=$default_mode\nnonopt=\nprev=\nprevopt=\nrun=\nshow=\"$echo\"\nshow_help=\nexecute_dlfiles=\nlo2o=\"s/\\\\.lo\\$/.${objext}/\"\no2lo=\"s/\\\\.${objext}\\$/.lo/\"\nquote_scanset='[[~#^*{};<>?'\"'\"' \t]'\n\n#####################################\n# Shell function definitions:\n# This seems to be the best place for them\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\nfunc_win32_libid ()\n{\n  win32_libid_type=\"unknown\"\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null | \\\n      $EGREP -e 'file format pe-i386(.*architecture: i386)?' >/dev/null ; then\n      win32_nmres=`eval $NM -f posix -A $1 | \\\n\tsed -n -e '1,100{/ I /{x;/import/!{s/^/import/;h;p;};x;};}'`\n      if test \"X$win32_nmres\" = \"Ximport\" ; then\n        win32_libid_type=\"x86 archive import\"\n      else\n        win32_libid_type=\"x86 archive static\"\n      fi\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $echo $win32_libid_type\n}\n\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n\tcase $arg in\n\t  *$quote_scanset* | *]* | *\\|* | *\\&* | *\\(* | *\\)* | \"\")\n\t  arg=\"\\\"$arg\\\"\"\n\t  ;;\n\tesac\n\tCC_quoted=\"$CC_quoted $arg\"\n      done\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" `$echo $CC` \"* | \"`$echo $CC` \"* | \" $CC_quoted\"* | \"$CC_quoted \"* | \" `$echo $CC_quoted` \"* | \"`$echo $CC_quoted` \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if grep \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t    # Double-quote args containing other shell metacharacters.\n\t    case $arg in\n\t      *$quote_scanset* | *]* | *\\|* | *\\&* | *\\(* | *\\)* | \"\")\n\t      arg=\"\\\"$arg\\\"\"\n\t      ;;\n\t    esac\n\t    CC_quoted=\"$CC_quoted $arg\"\n\t  done\n\t    case \"$@ \" in\n\t      \" $CC \"* | \"$CC \"* | \" `$echo $CC` \"* | \"`$echo $CC` \"* | \" $CC_quoted\"* | \"$CC_quoted \"* | \" `$echo $CC_quoted` \"* | \"`$echo $CC_quoted` \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  $echo \"$modename: unable to infer tagged configuration\"\n\t  $echo \"$modename: specify a tag with \\`--tag'\" 1>&2\n\t  exit $EXIT_FAILURE\n#        else\n#          $echo \"$modename: using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    f_ex_an_ar_dir=\"$1\"; shift\n    f_ex_an_ar_oldlib=\"$1\"\n\n    $show \"(cd $f_ex_an_ar_dir && $AR x $f_ex_an_ar_oldlib)\"\n    $run eval \"(cd \\$f_ex_an_ar_dir && $AR x \\$f_ex_an_ar_oldlib)\" || exit $?\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      $echo \"$modename: ERROR: object name conflicts: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n}\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    my_gentop=\"$1\"; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\"\"\n    my_xlib=\"\"\n    my_xabs=\"\"\n    my_xdir=\"\"\n    my_status=\"\"\n\n    $show \"${rm}r $my_gentop\"\n    $run ${rm}r \"$my_gentop\"\n    $show \"$mkdir $my_gentop\"\n    $run $mkdir \"$my_gentop\"\n    my_status=$?\n    if test \"$my_status\" -ne 0 && test ! -d \"$my_gentop\"; then\n      exit $my_status\n    fi\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=\"$my_xlib\" ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      my_xlib=`$echo \"X$my_xlib\" | $Xsed -e 's%^.*/%%'`\n      my_xdir=\"$my_gentop/$my_xlib\"\n\n      $show \"${rm}r $my_xdir\"\n      $run ${rm}r \"$my_xdir\"\n      $show \"$mkdir $my_xdir\"\n      $run $mkdir \"$my_xdir\"\n      status=$?\n      if test \"$status\" -ne 0 && test ! -d \"$my_xdir\"; then\n\texit $status\n      fi\n      case $host in\n      *-darwin*)\n\t$show \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\tif test -z \"$run\"; then\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  darwin_base_archive=`$echo \"X$darwin_archive\" | $Xsed -e 's%^.*/%%'`\n\t  darwin_arches=`lipo -info \"$darwin_archive\" 2>/dev/null | $EGREP Architectures 2>/dev/null`\n\t  if test -n \"$darwin_arches\"; then \n\t    darwin_arches=`echo \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    $show \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches ; do\n\t      mkdir -p \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      lipo -thin $darwin_arch -output \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\" \"${darwin_archive}\"\n\t      cd \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      func_extract_an_archive \"`pwd`\" \"${darwin_base_archive}\"\n\t      cd \"$darwin_curdir\"\n\t      $rm \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\"\n\t    done # $darwin_arches\n      ## Okay now we have a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print| xargs basename | sort -u | $NL2SP`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | $NL2SP`\n\t      lipo -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    ${rm}r unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd \"$darwin_orig_dir\"\n \t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\tfi # $run\n      ;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n        ;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | $NL2SP`\n    done\n    func_extract_archives_result=\"$my_oldobjs\"\n}\n# End of Shell function definitions\n#####################################\n\n# Darwin sucks\neval std_shrext=\\\"$shrext_cmds\\\"\n\n# Parse our command line options once, thoroughly.\nwhile test \"$#\" -gt 0\ndo\n  arg=\"$1\"\n  shift\n\n  case $arg in\n  -*=*) optarg=`$echo \"X$arg\" | $Xsed -e 's/[-_a-zA-Z0-9]*=//'` ;;\n  *) optarg= ;;\n  esac\n\n  # If the previous option needs an argument, assign it.\n  if test -n \"$prev\"; then\n    case $prev in\n    execute_dlfiles)\n      execute_dlfiles=\"$execute_dlfiles $arg\"\n      ;;\n    tag)\n      tagname=\"$arg\"\n      preserve_args=\"${preserve_args}=$arg\"\n\n      # Check whether tagname contains only valid characters\n      case $tagname in\n      *[!-_A-Za-z0-9,/]*)\n\t$echo \"$progname: invalid tag name: $tagname\" 1>&2\n\texit $EXIT_FAILURE\n\t;;\n      esac\n\n      case $tagname in\n      CC)\n\t# Don't test for the \"default\" C tag, as we know, it's there, but\n\t# not specially marked.\n\t;;\n      *)\n\tif grep \"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname$\" < \"$progpath\" > /dev/null; then\n\t  taglist=\"$taglist $tagname\"\n\t  # Evaluate the configuration.\n\t  eval \"`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$tagname'$/,/^# ### END LIBTOOL TAG CONFIG: '$tagname'$/p' < $progpath`\"\n\telse\n\t  $echo \"$progname: ignoring unknown tag $tagname\" 1>&2\n\tfi\n\t;;\n      esac\n      ;;\n    *)\n      eval \"$prev=\\$arg\"\n      ;;\n    esac\n\n    prev=\n    prevopt=\n    continue\n  fi\n\n  # Have we seen a non-optional argument yet?\n  case $arg in\n  --help)\n    show_help=yes\n    ;;\n\n  --version)\n    $echo \"$PROGRAM (GNU $PACKAGE) $VERSION$TIMESTAMP\"\n    $echo\n    $echo \"Copyright (C) 2005  Free Software Foundation, Inc.\"\n    $echo \"This is free software; see the source for copying conditions.  There is NO\"\n    $echo \"warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n    exit $?\n    ;;\n\n  --config)\n    ${SED} -e '1,/^# ### BEGIN LIBTOOL CONFIG/d' -e '/^# ### END LIBTOOL CONFIG/,$d' $progpath\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      ${SED} -n -e \"/^# ### BEGIN LIBTOOL TAG CONFIG: $tagname$/,/^# ### END LIBTOOL TAG CONFIG: $tagname$/p\" < \"$progpath\"\n    done\n    exit $?\n    ;;\n\n  --debug)\n    $echo \"$progname: enabling shell trace mode\"\n    set -x\n    preserve_args=\"$preserve_args $arg\"\n    ;;\n\n  --dry-run | -n)\n    run=:\n    ;;\n\n  --features)\n    $echo \"host: $host\"\n    if test \"$build_libtool_libs\" = yes; then\n      $echo \"enable shared libraries\"\n    else\n      $echo \"disable shared libraries\"\n    fi\n    if test \"$build_old_libs\" = yes; then\n      $echo \"enable static libraries\"\n    else\n      $echo \"disable static libraries\"\n    fi\n    exit $?\n    ;;\n\n  --finish) mode=\"finish\" ;;\n\n  --mode) prevopt=\"--mode\" prev=mode ;;\n  --mode=*) mode=\"$optarg\" ;;\n\n  --preserve-dup-deps) duplicate_deps=\"yes\" ;;\n\n  --quiet | --silent)\n    show=:\n    preserve_args=\"$preserve_args $arg\"\n    ;;\n\n  --tag) prevopt=\"--tag\" prev=tag ;;\n  --tag=*)\n    set tag \"$optarg\" ${1+\"$@\"}\n    shift\n    prev=tag\n    preserve_args=\"$preserve_args --tag\"\n    ;;\n\n  -dlopen)\n    prevopt=\"-dlopen\"\n    prev=execute_dlfiles\n    ;;\n\n  -*)\n    $echo \"$modename: unrecognized option \\`$arg'\" 1>&2\n    $echo \"$help\" 1>&2\n    exit $EXIT_FAILURE\n    ;;\n\n  *)\n    nonopt=\"$arg\"\n    break\n    ;;\n  esac\ndone\n\nif test -n \"$prevopt\"; then\n  $echo \"$modename: option \\`$prevopt' requires an argument\" 1>&2\n  $echo \"$help\" 1>&2\n  exit $EXIT_FAILURE\nfi\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\nif test -z \"$show_help\"; then\n\n  # Infer the operation mode.\n  if test -z \"$mode\"; then\n    $echo \"*** Warning: inferring the mode of operation is deprecated.\" 1>&2\n    $echo \"*** Future versions of Libtool will require --mode=MODE be specified.\" 1>&2\n    case $nonopt in\n    *cc | cc* | *++ | gcc* | *-gcc* | g++* | xlc*)\n      mode=link\n      for arg\n      do\n\tcase $arg in\n\t-c)\n\t   mode=compile\n\t   break\n\t   ;;\n\tesac\n      done\n      ;;\n    *db | *dbx | *strace | *truss)\n      mode=execute\n      ;;\n    *install*|cp|mv)\n      mode=install\n      ;;\n    *rm)\n      mode=uninstall\n      ;;\n    *)\n      # If we have no mode, but dlfiles were specified, then do execute mode.\n      test -n \"$execute_dlfiles\" && mode=execute\n\n      # Just use the default operation mode.\n      if test -z \"$mode\"; then\n\tif test -n \"$nonopt\"; then\n\t  $echo \"$modename: warning: cannot infer operation mode from \\`$nonopt'\" 1>&2\n\telse\n\t  $echo \"$modename: warning: cannot infer operation mode without MODE-ARGS\" 1>&2\n\tfi\n      fi\n      ;;\n    esac\n  fi\n\n  # Only execute mode is allowed to have -dlopen flags.\n  if test -n \"$execute_dlfiles\" && test \"$mode\" != execute; then\n    $echo \"$modename: unrecognized option \\`-dlopen'\" 1>&2\n    $echo \"$help\" 1>&2\n    exit $EXIT_FAILURE\n  fi\n\n  # Change the help message to a mode-specific one.\n  generic_help=\"$help\"\n  help=\"Try \\`$modename --help --mode=$mode' for more information.\"\n\n  # These modes are in order of execution frequency so that they run quickly.\n  case $mode in\n  # libtool compile mode\n  compile)\n    modename=\"$modename: compile\"\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=\"$nonopt\"  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n\n    for arg\n    do\n      case \"$arg_mode\" in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=\"$arg\"\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=\"$arg\"\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  if test -n \"$libobj\" ; then\n\t    $echo \"$modename: you cannot specify \\`-o' more than once\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-static | -prefer-pic | -prefer-non-pic)\n\t  later=\"$later $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  args=`$echo \"X$arg\" | $Xsed -e \"s/^-Wc,//\"`\n\t  lastarg=\n\t  save_ifs=\"$IFS\"; IFS=','\n \t  for arg in $args; do\n\t    IFS=\"$save_ifs\"\n\n\t    # Double-quote args containing other shell metacharacters.\n\t    # Many Bourne shells cannot handle close brackets correctly\n\t    # in scan sets, so we specify it separately.\n\t    case $arg in\n\t      *$quote_scanset* | *]* | *\\|* | *\\&* | *\\(* | *\\)* | \"\")\n\t      arg=\"\\\"$arg\\\"\"\n\t      ;;\n\t    esac\n\t    lastarg=\"$lastarg $arg\"\n\t  done\n\t  IFS=\"$save_ifs\"\n\t  lastarg=`$echo \"X$lastarg\" | $Xsed -e \"s/^ //\"`\n\n\t  # Add the arguments to base_compile.\n\t  base_compile=\"$base_compile $lastarg\"\n\t  continue\n\t  ;;\n\n\t* )\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=\"$srcfile\"\n\t  srcfile=\"$arg\"\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      lastarg=`$echo \"X$lastarg\" | $Xsed -e \"$sed_quote_subst\"`\n\n      case $lastarg in\n      # Double-quote args containing other shell metacharacters.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, and some SunOS ksh mistreat backslash-escaping\n      # in scan sets (worked around with variable expansion),\n      # and furthermore cannot handle '|' '&' '(' ')' in scan sets \n      # at all, so we specify them separately.\n      *$quote_scanset* | *]* | *\\|* | *\\&* | *\\(* | *\\)* | \"\")\n\tlastarg=\"\\\"$lastarg\\\"\"\n\t;;\n      esac\n\n      base_compile=\"$base_compile $lastarg\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      $echo \"$modename: you must specify an argument for -Xcompile\"\n      exit $EXIT_FAILURE\n      ;;\n    target)\n      $echo \"$modename: you must specify a target with \\`-o'\" 1>&2\n      exit $EXIT_FAILURE\n      ;;\n    *)\n      # Get the name of the library object.\n      [ -z \"$libobj\" ] && libobj=`$echo \"X$srcfile\" | $Xsed -e 's%^.*/%%'`\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    xform='[cCFSifmso]'\n    case $libobj in\n    *.ada) xform=ada ;;\n    *.adb) xform=adb ;;\n    *.ads) xform=ads ;;\n    *.asm) xform=asm ;;\n    *.c++) xform=c++ ;;\n    *.cc) xform=cc ;;\n    *.ii) xform=ii ;;\n    *.class) xform=class ;;\n    *.cpp) xform=cpp ;;\n    *.cxx) xform=cxx ;;\n    *.f90) xform=f90 ;;\n    *.for) xform=for ;;\n    *.java) xform=java ;;\n    esac\n\n    libobj=`$echo \"X$libobj\" | $Xsed -e \"s/\\.$xform$/.lo/\"`\n\n    case $libobj in\n    *.lo) obj=`$echo \"X$libobj\" | $Xsed -e \"$lo2o\"` ;;\n    *)\n      $echo \"$modename: cannot determine name of library object from \\`$libobj'\" 1>&2\n      exit $EXIT_FAILURE\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -static)\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    qlibobj=`$echo \"X$libobj\" | $Xsed -e \"$sed_quote_subst\"`\n    case $qlibobj in\n      *$quote_scanset* | *]* | *\\|* | *\\&* | *\\(* | *\\)* | \"\")\n\tqlibobj=\"\\\"$qlibobj\\\"\" ;;\n    esac\n    if test \"X$libobj\" != \"X$qlibobj\"; then\n\t$echo \"$modename: libobj name \\`$libobj' may not contain shell special characters.\"\n\texit $EXIT_FAILURE\n    fi\n    objname=`$echo \"X$obj\" | $Xsed -e 's%^.*/%%'`\n    xdir=`$echo \"X$obj\" | $Xsed -e 's%/[^/]*$%%'`\n    if test \"X$xdir\" = \"X$obj\"; then\n      xdir=\n    else\n      xdir=$xdir/\n    fi\n    lobj=${xdir}$objdir/$objname\n\n    if test -z \"$base_compile\"; then\n      $echo \"$modename: you must specify a compilation command\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    # Delete any leftover library objects.\n    if test \"$build_old_libs\" = yes; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    $run $rm $removelist\n    trap \"$run $rm $removelist; exit $EXIT_FAILURE\" 1 2 15\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2*)\n      pic_mode=default\n      ;;\n    esac\n    if test \"$pic_mode\" = no && test \"$deplibs_check_method\" != pass_all; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test \"$compiler_c_o\" = no; then\n      output_obj=`$echo \"X$srcfile\" | $Xsed -e 's%^.*/%%' -e 's%\\.[^.]*$%%'`.${objext}\n      lockfile=\"$output_obj.lock\"\n      removelist=\"$removelist $output_obj $lockfile\"\n      trap \"$run $rm $removelist; exit $EXIT_FAILURE\" 1 2 15\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test \"$need_locks\" = yes; then\n      until $run ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\t$show \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test \"$need_locks\" = warn; then\n      if test -f \"$lockfile\"; then\n\t$echo \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$run $rm $removelist\n\texit $EXIT_FAILURE\n      fi\n      $echo \"$srcfile\" > \"$lockfile\"\n    fi\n\n    if test -n \"$fix_srcfile_path\"; then\n      eval srcfile=\\\"$fix_srcfile_path\\\"\n    fi\n    qsrcfile=`$echo \"X$srcfile\" | $Xsed -e \"$sed_quote_subst\"`\n    case $qsrcfile in\n      *$quote_scanset* | *]* | *\\|* | *\\&* | *\\(* | *\\)* | \"\")\n      qsrcfile=\"\\\"$qsrcfile\\\"\" ;;\n    esac\n\n    $run $rm \"$libobj\" \"${libobj}T\"\n\n    # Create a libtool object file (analogous to a \".la\" file),\n    # but don't create it if we're doing a dry run.\n    test -z \"$run\" && cat > ${libobj}T <<EOF\n# $libobj - a libtool object file\n# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\nEOF\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test \"$build_libtool_libs\" = yes; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test \"$pic_mode\" != no; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      if test ! -d \"${xdir}$objdir\"; then\n\t$show \"$mkdir ${xdir}$objdir\"\n\t$run $mkdir ${xdir}$objdir\n\tstatus=$?\n\tif test \"$status\" -ne 0 && test ! -d \"${xdir}$objdir\"; then\n\t  exit $status\n\tfi\n      fi\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tcommand=\"$command -o $lobj\"\n      fi\n\n      $run $rm \"$lobj\" \"$output_obj\"\n\n      $show \"$command\"\n      if $run eval \"$command\"; then :\n      else\n\ttest -n \"$output_obj\" && $run $rm $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$echo \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$run $rm $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\t$show \"$mv $output_obj $lobj\"\n\tif $run $mv $output_obj $lobj; then :\n\telse\n\t  error=$?\n\t  $run $rm $removelist\n\t  exit $error\n\tfi\n      fi\n\n      # Append the name of the PIC object to the libtool object file.\n      test -z \"$run\" && cat >> ${libobj}T <<EOF\npic_object='$objdir/$objname'\n\nEOF\n\n      # Allow error messages only from the first compilation.\n      if test \"$suppress_opt\" = yes; then\n        suppress_output=' >/dev/null 2>&1'\n      fi\n    else\n      # No PIC object so indicate it doesn't exist in the libtool\n      # object file.\n      test -z \"$run\" && cat >> ${libobj}T <<EOF\npic_object=none\n\nEOF\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test \"$build_old_libs\" = yes; then\n      if test \"$pic_mode\" != yes; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test \"$compiler_c_o\" = yes; then\n\tcommand=\"$command -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      command=\"$command$suppress_output\"\n      $run $rm \"$obj\" \"$output_obj\"\n      $show \"$command\"\n      if $run eval \"$command\"; then :\n      else\n\t$run $rm $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$echo \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$run $rm $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\t$show \"$mv $output_obj $obj\"\n\tif $run $mv $output_obj $obj; then :\n\telse\n\t  error=$?\n\t  $run $rm $removelist\n\t  exit $error\n\tfi\n      fi\n\n      # Append the name of the non-PIC object the libtool object file.\n      # Only append if the libtool object file exists.\n      test -z \"$run\" && cat >> ${libobj}T <<EOF\n# Name of the non-PIC object.\nnon_pic_object='$objname'\n\nEOF\n    else\n      # Append the name of the non-PIC object the libtool object file.\n      # Only append if the libtool object file exists.\n      test -z \"$run\" && cat >> ${libobj}T <<EOF\n# Name of the non-PIC object.\nnon_pic_object=none\n\nEOF\n    fi\n\n    $run $mv \"${libobj}T\" \"${libobj}\"\n\n    # Unlock the critical section if it was locked\n    if test \"$need_locks\" != no; then\n      $run $rm \"$lockfile\"\n    fi\n\n    exit $EXIT_SUCCESS\n    ;;\n\n  # libtool link mode\n  link | relink)\n    modename=\"$modename: link\"\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # which system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll which has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=\"$nonopt\"\n    base_compile=\"$nonopt $@\"\n    compile_command=\"$nonopt\"\n    finalize_command=\"$nonopt\"\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n\n    avoid_version=no\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    non_pic_objects=\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=no\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -all-static | -static)\n\tif test \"X$arg\" = \"X-all-static\"; then\n\t  if test \"$build_libtool_libs\" = yes && test -z \"$link_static_flag\"; then\n\t    $echo \"$modename: warning: complete static linking is impossible in this configuration\" 1>&2\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\telse\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\tfi\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tprefer_static_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=\"$1\"\n      shift\n      case $arg in\n      *$quote_scanset* | *]* | *\\|* | *\\&* | *\\(* | *\\)* | \"\")\n\tqarg=\\\"`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\\\" ### testsuite: skip nested quoting test\n\t;;\n      *) qarg=$arg ;;\n      esac\n      libtool_args=\"$libtool_args $qarg\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  compile_command=\"$compile_command @OUTPUT@\"\n\t  finalize_command=\"$finalize_command @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tdlfiles|dlprefiles)\n\t  if test \"$preload\" = no; then\n\t    # Add the symbol object into the linking commands.\n\t    compile_command=\"$compile_command @SYMFILE@\"\n\t    finalize_command=\"$finalize_command @SYMFILE@\"\n\t    preload=yes\n\t  fi\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test \"$dlself\" = no; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test \"$prev\" = dlprefiles; then\n\t      dlself=yes\n\t    elif test \"$prev\" = dlfiles && test \"$dlopen_self\" != yes; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test \"$prev\" = dlfiles; then\n\t      dlfiles=\"$dlfiles $arg\"\n\t    else\n\t      dlprefiles=\"$dlprefiles $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=\"$arg\"\n\t  if test ! -f \"$arg\"; then\n\t    $echo \"$modename: symbol file \\`$arg' does not exist\"\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=\"-$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat $save_arg`\n\t    do\n#\t      moreargs=\"$moreargs $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if (${SED} -e '2q' $arg | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\t# If there is no directory component, then add one.\n\t\tcase $arg in\n\t\t*/* | *\\\\*) . $arg ;;\n\t\t*) . ./$arg ;;\n\t\tesac\n\n\t\tif test -z \"$pic_object\" || \\\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test \"$pic_object\" = none && \\\n\t\t   test \"$non_pic_object\" = none; then\n\t\t  $echo \"$modename: cannot find name of object for \\`$arg'\" 1>&2\n\t\t  exit $EXIT_FAILURE\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\txdir=`$echo \"X$arg\" | $Xsed -e 's%/[^/]*$%%'`\n\t\tif test \"X$xdir\" = \"X$arg\"; then\n\t\t  xdir=\n\t\telse\n\t\t  xdir=\"$xdir/\"\n\t\tfi\n\n\t\tif test \"$pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=\"$xdir$pic_object\"\n\n\t\t  if test \"$prev\" = dlfiles; then\n\t\t    if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\t      dlfiles=\"$dlfiles $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test \"$prev\" = dlprefiles; then\n\t\t    # Preload the old-style object.\n\t\t    dlprefiles=\"$dlprefiles $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  libobjs=\"$libobjs $pic_object\"\n\t\t  arg=\"$pic_object\"\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test \"$non_pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=\"$xdir$non_pic_object\"\n\n\t\t  # A standard non-PIC object\n\t\t  non_pic_objects=\"$non_pic_objects $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t\t    arg=\"$non_pic_object\"\n\t\t  fi\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif test -z \"$run\"; then\n\t\t  $echo \"$modename: \\`$arg' is not a valid libtool object\" 1>&2\n\t\t  exit $EXIT_FAILURE\n\t\telse\n\t\t  # Dry-run case.\n\n\t\t  # Extract subdirectory from the argument.\n\t\t  xdir=`$echo \"X$arg\" | $Xsed -e 's%/[^/]*$%%'`\n\t\t  if test \"X$xdir\" = \"X$arg\"; then\n\t\t    xdir=\n\t\t  else\n\t\t    xdir=\"$xdir/\"\n\t\t  fi\n\n\t\t  pic_object=`$echo \"X${xdir}${objdir}/${arg}\" | $Xsed -e \"$lo2o\"`\n\t\t  non_pic_object=`$echo \"X${xdir}${arg}\" | $Xsed -e \"$lo2o\"`\n\t\t  libobjs=\"$libobjs $pic_object\"\n\t\t  non_pic_objects=\"$non_pic_objects $non_pic_object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    $echo \"$modename: link input file \\`$save_arg' does not exist\"\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    $echo \"$modename: only absolute run-paths are allowed\" 1>&2\n\t    exit $EXIT_FAILURE\n\t    ;;\n\t  esac\n\t  if test \"$prev\" = rpath; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) rpath=\"$rpath $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) xrpath=\"$xrpath $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\txcompiler)\n\t  compiler_flags=\"$compiler_flags $qarg\"\n\t  prev=\n\t  compile_command=\"$compile_command $qarg\"\n\t  finalize_command=\"$finalize_command $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  linker_flags=\"$linker_flags $qarg\"\n\t  compiler_flags=\"$compiler_flags $wl$qarg\"\n\t  prev=\n\t  compile_command=\"$compile_command $wl$qarg\"\n\t  finalize_command=\"$finalize_command $wl$qarg\"\n\t  continue\n\t  ;;\n\txcclinker)\n\t  linker_flags=\"$linker_flags $qarg\"\n\t  compiler_flags=\"$compiler_flags $qarg\"\n\t  prev=\n\t  compile_command=\"$compile_command $qarg\"\n\t  finalize_command=\"$finalize_command $qarg\"\n\t  continue\n\t  ;;\n\tshrext)\n  \t  shrext_cmds=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n        darwin_framework)\n\t  compiler_flags=\"$compiler_flags $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=\"$arg\"\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  compile_command=\"$compile_command $link_static_flag\"\n\t  finalize_command=\"$finalize_command $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\t$echo \"$modename: \\`-allow-undefined' is deprecated because it is the default\" 1>&2\n\tcontinue\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  $echo \"$modename: more than one -exported-symbols argument is not allowed\"\n\t  exit $EXIT_FAILURE\n\tfi\n\tif test \"X$arg\" = \"X-export-symbols\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework)\n        prev=darwin_framework\n        compiler_flags=\"$compiler_flags $arg\"\n        continue\n        ;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  compile_command=\"$compile_command $arg\"\n\t  finalize_command=\"$finalize_command $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tdir=`$echo \"X$arg\" | $Xsed -e 's/^-L//'`\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  if test -z \"$absdir\"; then\n\t    $echo \"$modename: cannot determine absolute directory name of \\`$dir'\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  dir=\"$absdir\"\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"*) ;;\n\t*)\n\t  deplibs=\"$deplibs -L$dir\"\n\t  lib_search_path=\"$lib_search_path $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  *) dllsearchpath=\"$dllsearchpath:$dir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test \"X$arg\" = \"X-lc\" || test \"X$arg\" = \"X-lm\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-pw32* | *-*-beos*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-mingw* | *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    deplibs=\"$deplibs -framework System\"\n\t    continue\n\t  esac\n\telif test \"X$arg\" = \"X-lc_r\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tdeplibs=\"$deplibs $arg\"\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      -model)\n\tcompile_command=\"$compile_command $arg\"\n\tcompiler_flags=\"$compiler_flags $arg\"\n\tfinalize_command=\"$finalize_command $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n     -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe)\n\tcompiler_flags=\"$compiler_flags $arg\"\n\tcompile_command=\"$compile_command $arg\"\n\tfinalize_command=\"$finalize_command $arg\"\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # -64, -mips[0-9] enable 64-bit mode on the SGI compiler\n      # -r[0-9][0-9]* specifies the processor on the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode on the Sun compiler\n      # +DA*, +DD* enable 64-bit mode on the HP compiler\n      # -q* pass through compiler args for the IBM compiler\n      # -m* pass through architecture-specific compiler args for GCC\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*)\n\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\targ=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n\tcase $arg in\n\t*$quote_scanset* | *]* | *\\|* | *\\&* | *\\(* | *\\)* | \"\")\n\t  arg=\"\\\"$arg\\\"\"\n\t  ;;\n\tesac\n        compile_command=\"$compile_command $arg\"\n        finalize_command=\"$finalize_command $arg\"\n        if test \"$with_gcc\" = \"yes\" ; then\n          compiler_flags=\"$compiler_flags $arg\"\n        fi\n        continue\n        ;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # in order for the loader to find any dlls it needs.\n\t  $echo \"$modename: warning: \\`-no-install' is ignored for $host\" 1>&2\n\t  $echo \"$modename: warning: assuming \\`-no-fast-install' instead\" 1>&2\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tdir=`$echo \"X$arg\" | $Xsed -e 's/^-R//'`\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  $echo \"$modename: only absolute run-paths are allowed\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) xrpath=\"$xrpath $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -static)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -Wc,*)\n\targs=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\" -e 's/^-Wc,//'`\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n\t  case $flag in\n\t    *$quote_scanset* | *]* | *\\|* | *\\&* | *\\(* | *\\)* | \"\")\n\t    flag=\"\\\"$flag\\\"\"\n\t    ;;\n\t  esac\n\t  arg=\"$arg $wl$flag\"\n\t  compiler_flags=\"$compiler_flags $flag\"\n\tdone\n\tIFS=\"$save_ifs\"\n\targ=`$echo \"X$arg\" | $Xsed -e \"s/^ //\"`\n\t;;\n\n      -Wl,*)\n\targs=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\" -e 's/^-Wl,//'`\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n\t  case $flag in\n\t    *$quote_scanset* | *]* | *\\|* | *\\&* | *\\(* | *\\)* | \"\")\n\t    flag=\"\\\"$flag\\\"\"\n\t    ;;\n\t  esac\n\t  arg=\"$arg $wl$flag\"\n\t  compiler_flags=\"$compiler_flags $wl$flag\"\n\t  linker_flags=\"$linker_flags $flag\"\n\tdone\n\tIFS=\"$save_ifs\"\n\targ=`$echo \"X$arg\" | $Xsed -e \"s/^ //\"`\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # Some other compiler flag.\n      -* | +*)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\targ=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n\tcase $arg in\n\t*$quote_scanset* | *]* | *\\|* | *\\&* | *\\(* | *\\)* | \"\")\n\t  arg=\"\\\"$arg\\\"\"\n\t  ;;\n\tesac\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tobjs=\"$objs $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif (${SED} -e '2q' $arg | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  # If there is no directory component, then add one.\n\t  case $arg in\n\t  */* | *\\\\*) . $arg ;;\n\t  *) . ./$arg ;;\n\t  esac\n\n\t  if test -z \"$pic_object\" || \\\n\t     test -z \"$non_pic_object\" ||\n\t     test \"$pic_object\" = none && \\\n\t     test \"$non_pic_object\" = none; then\n\t    $echo \"$modename: cannot find name of object for \\`$arg'\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  xdir=`$echo \"X$arg\" | $Xsed -e 's%/[^/]*$%%'`\n\t  if test \"X$xdir\" = \"X$arg\"; then\n\t    xdir=\n \t  else\n\t    xdir=\"$xdir/\"\n\t  fi\n\n\t  if test \"$pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=\"$xdir$pic_object\"\n\n\t    if test \"$prev\" = dlfiles; then\n\t      if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\tdlfiles=\"$dlfiles $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test \"$prev\" = dlprefiles; then\n\t      # Preload the old-style object.\n\t      dlprefiles=\"$dlprefiles $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    libobjs=\"$libobjs $pic_object\"\n\t    arg=\"$pic_object\"\n\t  fi\n\n\t  # Non-PIC object.\n\t  if test \"$non_pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=\"$xdir$non_pic_object\"\n\n\t    # A standard non-PIC object\n\t    non_pic_objects=\"$non_pic_objects $non_pic_object\"\n\t    if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t      arg=\"$non_pic_object\"\n\t    fi\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if test -z \"$run\"; then\n\t    $echo \"$modename: \\`$arg' is not a valid libtool object\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  else\n\t    # Dry-run case.\n\n\t    # Extract subdirectory from the argument.\n\t    xdir=`$echo \"X$arg\" | $Xsed -e 's%/[^/]*$%%'`\n\t    if test \"X$xdir\" = \"X$arg\"; then\n\t      xdir=\n\t    else\n\t      xdir=\"$xdir/\"\n\t    fi\n\n\t    pic_object=`$echo \"X${xdir}${objdir}/${arg}\" | $Xsed -e \"$lo2o\"`\n\t    non_pic_object=`$echo \"X${xdir}${arg}\" | $Xsed -e \"$lo2o\"`\n\t    libobjs=\"$libobjs $pic_object\"\n\t    non_pic_objects=\"$non_pic_objects $non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tdeplibs=\"$deplibs $arg\"\n\told_deplibs=\"$old_deplibs $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tif test \"$prev\" = dlfiles; then\n\t  # This library was specified with -dlopen.\n\t  dlfiles=\"$dlfiles $arg\"\n\t  prev=\n\telif test \"$prev\" = dlprefiles; then\n\t  # The library was specified with -dlpreopen.\n\t  dlprefiles=\"$dlprefiles $arg\"\n\t  prev=\n\telse\n\t  deplibs=\"$deplibs $arg\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\targ=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n\tcase $arg in\n\t*$quote_scanset* | *]* | *\\|* | *\\&* | *\\(* | *\\)* | \"\")\n\t  arg=\"\\\"$arg\\\"\"\n\t  ;;\n\tesac\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tcompile_command=\"$compile_command $arg\"\n\tfinalize_command=\"$finalize_command $arg\"\n      fi\n    done # argument parsing loop\n\n    if test -n \"$prev\"; then\n      $echo \"$modename: the \\`$prevarg' option requires an argument\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    if test \"$export_dynamic\" = yes && test -n \"$export_dynamic_flag_spec\"; then\n      eval arg=\\\"$export_dynamic_flag_spec\\\"\n      compile_command=\"$compile_command $arg\"\n      finalize_command=\"$finalize_command $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    outputname=`$echo \"X$output\" | $Xsed -e 's%^.*/%%'`\n    libobjs_save=\"$libobjs\"\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$echo \\\"X\\${$shlibpath_var}\\\" \\| \\$Xsed -e \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\n    eval sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\n\n    output_objdir=`$echo \"X$output\" | $Xsed -e 's%/[^/]*$%%'`\n    if test \"X$output_objdir\" = \"X$output\"; then\n      output_objdir=\"$objdir\"\n    else\n      output_objdir=\"$output_objdir/$objdir\"\n    fi\n    # Create the object directory.\n    if test ! -d \"$output_objdir\"; then\n      $show \"$mkdir $output_objdir\"\n      $run $mkdir $output_objdir\n      status=$?\n      if test \"$status\" -ne 0 && test ! -d \"$output_objdir\"; then\n\texit $status\n      fi\n    fi\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      $echo \"$modename: you must specify an output file\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    case $host in\n    *cygwin* | *mingw* | *pw32*)\n      # don't eliminate duplications in $postdeps and $predeps\n      duplicate_compiler_generated_deps=yes\n      ;;\n    *)\n      duplicate_compiler_generated_deps=$duplicate_deps\n      ;;\n    esac\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if test \"X$duplicate_deps\" = \"Xyes\" ; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\tesac\n      fi\n      libs=\"$libs $deplib\"\n    done\n\n    if test \"$linkmode\" = lib; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if test \"X$duplicate_compiler_generated_deps\" = \"Xyes\" ; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) specialdeplibs=\"$specialdeplibs $pre_post_deps\" ;;\n\t  esac\n\t  pre_post_deps=\"$pre_post_deps $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    notinst_path= # paths that contain not-installed libtool libraries\n    case $linkmode in\n    lib)\n\tpasses=\"conv link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    $echo \"$modename: libraries can \\`-dlopen' only libtool libraries: $file\" 1>&2\n\t    exit $EXIT_FAILURE\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=no\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n    for pass in $passes; do\n      if test \"$linkmode,$pass\" = \"lib,link\" ||\n\t test \"$linkmode,$pass\" = \"prog,scan\"; then\n\tlibs=\"$deplibs\"\n\tdeplibs=\n      fi\n      if test \"$linkmode\" = prog; then\n\tcase $pass in\n\tdlopen) libs=\"$dlfiles\" ;;\n\tdlpreopen) libs=\"$dlprefiles\" ;;\n\tlink) libs=\"$deplibs %DEPLIBS% $dependency_libs\" ;;\n\tesac\n      fi\n      if test \"$pass\" = dlopen; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=\"$deplibs\"\n\tdeplibs=\n      fi\n      for deplib in $libs; do\n\tlib=\n\tfound=no\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    compiler_flags=\"$compiler_flags $deplib\"\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test \"$linkmode\" != lib && test \"$linkmode\" != prog; then\n\t    $echo \"$modename: warning: \\`-l' is ignored for archives/objects\" 1>&2\n\t    continue\n\t  fi\n\t  name=`$echo \"X$deplib\" | $Xsed -e 's/^-l//'`\n\t  for searchdir in $newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=\"$searchdir/lib${name}${search_ext}\"\n\t      if test -f \"$lib\"; then\n\t\tif test \"$search_ext\" = \".la\"; then\n\t\t  found=yes\n\t\telse\n\t\t  found=no\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if test \"$found\" != yes; then\n\t    # deplib doesn't seem to be a libtool library\n\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  else # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif (${SED} -e '2q' $lib |\n                    grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  case $lib in\n\t\t  */* | *\\\\*) . $lib ;;\n\t\t  *) . ./$lib ;;\n\t\t  esac\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=\"$l\"\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\" ; then # only static version available\n\t\t    found=no\n\t\t    ladir=`$echo \"X$lib\" | $Xsed -e 's%/[^/]*$%%'`\n\t\t    test \"X$ladir\" = \"X$lib\" && ladir=\".\"\n\t\t    lib=$ladir/$old_library\n\t\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t        ;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  fi\n\t  ;; # -l\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test \"$pass\" = conv && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    newlib_search_path=\"$newlib_search_path \"`$echo \"X$deplib\" | $Xsed -e 's/^-L//'`\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" = conv; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test \"$pass\" = scan; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    newlib_search_path=\"$newlib_search_path \"`$echo \"X$deplib\" | $Xsed -e 's/^-L//'`\n\t    ;;\n\t  *)\n\t    $echo \"$modename: warning: \\`-L' is ignored for archives/objects\" 1>&2\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test \"$pass\" = link; then\n\t    dir=`$echo \"X$deplib\" | $Xsed -e 's/^-R//'`\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) xrpath=\"$xrpath $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la) lib=\"$deplib\" ;;\n\t*.$libext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    valid_a_lib=no\n\t    case $deplibs_check_method in\n\t      match_pattern*)\n\t\tset dummy $deplibs_check_method\n\t        match_pattern_regex=`expr \"$deplibs_check_method\" : \"$2 \\(.*\\)\"`\n\t\tif eval $echo \\\"$deplib\\\" 2>/dev/null \\\n\t\t    | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t  valid_a_lib=yes\n\t\tfi\n\t\t;;\n\t      pass_all)\n\t\tvalid_a_lib=yes\n\t\t;;\n            esac\n\t    if test \"$valid_a_lib\" != yes; then\n\t      $echo\n\t      $echo \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t      $echo \"*** I have the capability to make that library automatically link in when\"\n\t      $echo \"*** you link to this library.  But I can only do this if you have a\"\n\t      $echo \"*** shared version of the library, which you do not appear to have\"\n\t      $echo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t      $echo \"*** that it is just a static archive that I should not used here.\"\n\t    else\n\t      $echo\n\t      $echo \"*** Warning: Linking the shared library $output against the\"\n\t      $echo \"*** static library $deplib is not portable!\"\n\t      deplibs=\"$deplib $deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" != link; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test \"$linkmode\" = prog; then\n\t    if test \"$pass\" = dlpreopen || test \"$dlopen_support\" != yes || test \"$build_libtool_libs\" = no; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      newdlprefiles=\"$newdlprefiles $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      newdlfiles=\"$newdlfiles $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=yes\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\tif test \"$found\" = yes || test -f \"$lib\"; then :\n\telse\n\t  $echo \"$modename: cannot find the library \\`$lib'\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\t# Check to see that this really is a libtool archive.\n\tif (${SED} -e '2q' $lib | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then :\n\telse\n\t  $echo \"$modename: \\`$lib' is not a valid libtool archive\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\tladir=`$echo \"X$lib\" | $Xsed -e 's%/[^/]*$%%'`\n\ttest \"X$ladir\" = \"X$lib\" && ladir=\".\"\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tcase $lib in\n\t*/* | *\\\\*) . $lib ;;\n\t*) . ./$lib ;;\n\tesac\n\n\tif test \"$linkmode,$pass\" = \"lib,link\" ||\n\t   test \"$linkmode,$pass\" = \"prog,scan\" ||\n\t   { test \"$linkmode\" != prog && test \"$linkmode\" != lib; }; then\n\t  test -n \"$dlopen\" && dlfiles=\"$dlfiles $dlopen\"\n\t  test -n \"$dlpreopen\" && dlprefiles=\"$dlprefiles $dlpreopen\"\n\tfi\n\n\tif test \"$pass\" = conv; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      $echo \"$modename: cannot find name of link library for \\`$lib'\" 1>&2\n\t      exit $EXIT_FAILURE\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    convenience=\"$convenience $ladir/$objdir/$old_library\"\n\t    old_convenience=\"$old_convenience $ladir/$objdir/$old_library\"\n\t    tmp_libs=\n\t    for deplib in $dependency_libs; do\n\t      deplibs=\"$deplib $deplibs\"\n              if test \"X$duplicate_deps\" = \"Xyes\" ; then\n\t        case \"$tmp_libs \" in\n\t        *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t        esac\n              fi\n\t      tmp_libs=\"$tmp_libs $deplib\"\n\t    done\n\t  elif test \"$linkmode\" != prog && test \"$linkmode\" != lib; then\n\t    $echo \"$modename: \\`$lib' is not a convenience library\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tfor l in $old_library $library_names; do\n\t  linklib=\"$l\"\n\tdone\n\tif test -z \"$linklib\"; then\n\t  $echo \"$modename: cannot find name of link library for \\`$lib'\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test \"$pass\" = dlopen; then\n\t  if test -z \"$libdir\"; then\n\t    $echo \"$modename: cannot -dlopen a convenience library: \\`$lib'\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  if test -z \"$dlname\" ||\n\t     test \"$dlopen_support\" != yes ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    dlprefiles=\"$dlprefiles $lib $dependency_libs\"\n\t  else\n\t    newdlfiles=\"$newdlfiles $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=\"$ladir\" ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    $echo \"$modename: warning: cannot determine absolute directory name of \\`$ladir'\" 1>&2\n\t    $echo \"$modename: passing it literally to the linker, although it might fail\" 1>&2\n\t    abs_ladir=\"$ladir\"\n\t  fi\n\t  ;;\n\tesac\n\tlaname=`$echo \"X$lib\" | $Xsed -e 's%^.*/%%'`\n\n\t# Find the relevant object directory and library name.\n\tif test \"X$installed\" = Xyes; then\n\t  if test ! -f \"$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    $echo \"$modename: warning: library \\`$lib' was moved.\" 1>&2\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    libdir=\"$abs_ladir\"\n\t  else\n\t    dir=\"$libdir\"\n\t    absdir=\"$libdir\"\n\t  fi\n\t  test \"X$hardcode_automatic\" = Xyes && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    # Remove this search path later\n\t    notinst_path=\"$notinst_path $abs_ladir\"\n\t  else\n\t    dir=\"$ladir/$objdir\"\n\t    absdir=\"$abs_ladir/$objdir\"\n\t    # Remove this search path later\n\t    notinst_path=\"$notinst_path $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tname=`$echo \"X$laname\" | $Xsed -e 's/\\.la$//' -e 's/^lib//'`\n\n\t# This library was specified with -dlpreopen.\n\tif test \"$pass\" = dlpreopen; then\n\t  if test -z \"$libdir\"; then\n\t    $echo \"$modename: cannot -dlpreopen a convenience library: \\`$lib'\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t  # are required to link).\n\t  if test -n \"$old_library\"; then\n\t    newdlprefiles=\"$newdlprefiles $dir/$old_library\"\n\t  # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t  elif test -n \"$dlname\"; then\n\t    newdlprefiles=\"$newdlprefiles $dir/$dlname\"\n\t  else\n\t    newdlprefiles=\"$newdlprefiles $dir/$linklib\"\n\t  fi\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test \"$linkmode\" = lib; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test \"$linkmode\" = prog && test \"$pass\" != link; then\n\t  newlib_search_path=\"$newlib_search_path $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=no\n\t  if test \"$link_all_deplibs\" != no || test -z \"$library_names\" ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    linkalldeplibs=yes\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) newlib_search_path=\"$newlib_search_path \"`$echo \"X$deplib\" | $Xsed -e 's/^-L//'`;; ### testsuite: skip nested quoting test\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if test \"$linkalldeplibs\" = yes; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if test \"X$duplicate_deps\" = \"Xyes\" ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t      esac\n\t    fi\n\t    tmp_libs=\"$tmp_libs $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t  if test -n \"$library_names\" &&\n\t     { test \"$prefer_static_libs\" = no || test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\" ; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case \"$temp_rpath \" in\n\t      *\" $dir \"*) ;;\n\t      *\" $absdir \"*) ;;\n\t      *) temp_rpath=\"$temp_rpath $dir\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) compile_rpath=\"$compile_rpath $absdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) finalize_rpath=\"$finalize_rpath $libdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if test \"$alldeplibs\" = yes &&\n\t     { test \"$deplibs_check_method\" = pass_all ||\n\t       { test \"$build_libtool_libs\" = yes &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tif test -n \"$library_names\" &&\n\t   { test \"$prefer_static_libs\" = no || test -z \"$old_library\"; }; then\n\t  if test \"$installed\" = no; then\n\t    notinst_deplibs=\"$notinst_deplibs $lib\"\n\t    need_relink=yes\n\t  fi\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on\n\t  # some systems (darwin)\n\t  if test \"$shouldnotlink\" = yes && test \"$pass\" = link ; then\n\t    $echo\n\t    if test \"$linkmode\" = prog; then\n\t      $echo \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $echo \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $echo \"*** $linklib is not portable!\"\n\t  fi\n\t  if test \"$linkmode\" = lib &&\n\t     test \"$hardcode_into_libs\" = yes; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) compile_rpath=\"$compile_rpath $absdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) finalize_rpath=\"$finalize_rpath $libdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    realname=\"$2\"\n\t    shift; shift\n\t    libname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=\"$dlname\"\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw*)\n\t\tmajor=`expr $current - $age`\n\t\tversuffix=\"-$major\"\n\t\t;;\n\t      esac\n\t      eval soname=\\\"$soname_spec\\\"\n\t    else\n\t      soname=\"$realname\"\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=\"$soname\"\n\t    soname=`$echo $soroot | ${SED} -e 's/^.*\\///'`\n\t    newlib=\"libimp-`$echo $soname | ${SED} 's/^lib//;s/\\.dll$//'`.a\"\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      $show \"extracting exported symbol list from \\`$soname'\"\n\t      save_ifs=\"$IFS\"; IFS='~'\n\t      cmds=$extract_expsyms_cmds\n\t      for cmd in $cmds; do\n\t\tIFS=\"$save_ifs\"\n\t\teval cmd=\\\"$cmd\\\"\n\t\t$show \"$cmd\"\n\t\t$run eval \"$cmd\" || exit $?\n\t      done\n\t      IFS=\"$save_ifs\"\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      $show \"generating import library for \\`$soname'\"\n\t      save_ifs=\"$IFS\"; IFS='~'\n\t      cmds=$old_archive_from_expsyms_cmds\n\t      for cmd in $cmds; do\n\t\tIFS=\"$save_ifs\"\n\t\teval cmd=\\\"$cmd\\\"\n\t\t$show \"$cmd\"\n\t\t$run eval \"$cmd\" || exit $?\n\t      done\n\t      IFS=\"$save_ifs\"\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test \"$linkmode\" = prog || test \"$mode\" != relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test \"$hardcode_direct\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t\tcase $host in\n\t\t  *-*-sco3.2v5* ) add_dir=\"-L$dir\" ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a module then we can not link against\n\t\t    # it, someone is ignoring the new warnings I added\n\t\t    if /usr/bin/file -L $add 2> /dev/null | $EGREP \"bundle\" >/dev/null ; then\n\t\t      $echo \"** Warning, lib $linklib is a module, not a shared library\"\n\t\t      if test -z \"$old_library\" ; then\n\t\t        $echo\n\t\t        $echo \"** And there doesn't seem to be a static archive available\"\n\t\t        $echo \"** The link will probably fail, sorry\"\n\t\t      else\n\t\t        add=\"$dir/$old_library\"\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test \"$hardcode_minus_L\" = no; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=\"$dir\" ;;\n\t\tesac\n\t\tadd_dir=\"-L$dir\"\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = no; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test \"$hardcode_direct\" = yes; then\n\t\tadd=\"$dir/$linklib\"\n\t      elif test \"$hardcode_minus_L\" = yes; then\n\t\tadd_dir=\"-L$dir\"\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case \"$libdir\" in\n\t\t    [\\\\/]*)\n\t\t      add_dir=\"$add_dir -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = yes; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test \"$lib_linked\" != yes; then\n\t      $echo \"$modename: configuration error: unsupported hardcode properties\"\n\t      exit $EXIT_FAILURE\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) compile_shlibpath=\"$compile_shlibpath$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test \"$hardcode_direct\" != yes && \\\n\t\t test \"$hardcode_minus_L\" != yes && \\\n\t\t test \"$hardcode_shlibpath_var\" = yes; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) finalize_shlibpath=\"$finalize_shlibpath$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test \"$linkmode\" = prog || test \"$mode\" = relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test \"$hardcode_direct\" = yes; then\n\t      add=\"$libdir/$linklib\"\n\t    elif test \"$hardcode_minus_L\" = yes; then\n\t      add_dir=\"-L$libdir\"\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_shlibpath_var\" = yes; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) finalize_shlibpath=\"$finalize_shlibpath$libdir:\" ;;\n\t      esac\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_automatic\" = yes; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\" ; then\n\t        add=\"$inst_prefix_dir$libdir/$linklib\"\n\t      else\n\t        add=\"$libdir/$linklib\"\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=\"-L$libdir\"\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase \"$libdir\" in\n\t\t  [\\\\/]*)\n\t\t    add_dir=\"$add_dir -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=\"-l$name\"\n\t    fi\n\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test \"$linkmode\" = prog; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test \"$hardcode_direct\" != unsupported; then\n\t    test -n \"$old_library\" && linklib=\"$old_library\"\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test \"$build_libtool_libs\" = yes; then\n\t  # Not a shared library\n\t  if test \"$deplibs_check_method\" != pass_all; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    $echo\n\t    $echo \"*** Warning: This system can not link to static lib archive $lib.\"\n\t    $echo \"*** I have the capability to make that library automatically link in when\"\n\t    $echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    $echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test \"$module\" = yes; then\n\t      $echo \"*** But as you try to build a module library, libtool will still create \"\n\t      $echo \"*** a static module, that should work as long as the dlopening application\"\n\t      $echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\t$echo\n\t\t$echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\t$echo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t\t$echo \"*** not find such a program.  So, this module is probably useless.\"\n\t\t$echo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test \"$build_old_libs\" = no; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    convenience=\"$convenience $dir/$old_library\"\n\t    old_convenience=\"$old_convenience $dir/$old_library\"\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test \"$linkmode\" = lib; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test \"$hardcode_into_libs\" != yes ||\n\t       test \"$build_old_libs\" = yes ||\n\t       test \"$link_static\" = yes; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) temp_xrpath=`$echo \"X$libdir\" | $Xsed -e 's/^-R//'`\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) xrpath=\"$xrpath $temp_xrpath\";;\n\t\t   esac;;\n\t      *) temp_deplibs=\"$temp_deplibs $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=\"$temp_deplibs\"\n\t  fi\n\n\t  newlib_search_path=\"$newlib_search_path $absdir\"\n\t  # Link against this library\n\t  test \"$link_static\" = no && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    if test \"X$duplicate_deps\" = \"Xyes\" ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t      esac\n\t    fi\n\t    tmp_libs=\"$tmp_libs $deplib\"\n\t  done\n\n\t  if test \"$link_all_deplibs\" != no; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      -L*) path=\"$deplib\" ;;\n\t      *.la)\n\t\tdir=`$echo \"X$deplib\" | $Xsed -e 's%/[^/]*$%%'`\n\t\ttest \"X$dir\" = \"X$deplib\" && dir=\".\"\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=\"$dir\" ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    $echo \"$modename: warning: cannot determine absolute directory name of \\`$dir'\" 1>&2\n\t\t    absdir=\"$dir\"\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif grep \"^installed=no\" $deplib > /dev/null; then\n\t\t  path=\"$absdir/$objdir\"\n\t\telse\n\t\t  eval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -z \"$libdir\"; then\n\t\t    $echo \"$modename: \\`$deplib' is not a valid libtool archive\" 1>&2\n\t\t    exit $EXIT_FAILURE\n\t\t  fi\n\t\t  if test \"$absdir\" != \"$libdir\"; then\n\t\t    $echo \"$modename: warning: \\`$deplib' seems to be moved\" 1>&2\n\t\t  fi\n\t\t  path=\"$absdir\"\n\t\tfi\n\t\tdepdepl=\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  # we do not want to link against static libs,\n\t\t  # but need to link against shared\n\t\t  eval deplibrary_names=`${SED} -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\" ; then\n\t\t    for tmp in $deplibrary_names ; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$path/$depdepl\" ; then\n\t\t      depdepl=\"$path/$depdepl\"\n\t\t    fi\n\t\t    # do not add paths which are already there\n\t\t    case \" $newlib_search_path \" in\n\t\t    *\" $path \"*) ;;\n\t\t    *) newlib_search_path=\"$newlib_search_path $path\";;\n\t\t    esac\n\t\t  fi\n\t\t  path=\"\"\n\t\t  ;;\n\t\t*)\n\t\t  path=\"-L$path\"\n\t\t  ;;\n\t\tesac\n\t\t;;\n\t      -l*)\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  # Again, we only want to link against shared libraries\n\t\t  eval tmp_libs=`$echo \"X$deplib\" | $Xsed -e \"s,^\\-l,,\"`\n\t\t  for tmp in $newlib_search_path ; do\n\t\t    if test -f \"$tmp/lib$tmp_libs.dylib\" ; then\n\t\t      eval depdepl=\"$tmp/lib$tmp_libs.dylib\"\n\t\t      break\n\t\t    fi\n\t\t  done\n\t\t  path=\"\"\n\t\t  ;;\n\t\t*) continue ;;\n\t\tesac\n\t\t;;\n\t      *) continue ;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $depdepl \"*) ;;\n\t      *) deplibs=\"$depdepl $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      dependency_libs=\"$newdependency_libs\"\n      if test \"$pass\" = dlpreopen; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test \"$pass\" != dlopen; then\n\tif test \"$pass\" != conv; then\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) lib_search_path=\"$lib_search_path $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\tfi\n\n\tif test \"$linkmode,$pass\" != \"prog,link\"; then\n\t  vars=\"deplibs\"\n\telse\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\\"\\$$var\\\"\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) tmp_libs=\"$tmp_libs $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) tmp_libs=\"$tmp_libs $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\\"$tmp_libs\\\"\n\tdone # for var\n      fi\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs ; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\"\"\n\t  ;;\n\tesac\n\tif test -n \"$i\" ; then\n\t  tmp_libs=\"$tmp_libs $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test \"$linkmode\" = prog; then\n      dlfiles=\"$newdlfiles\"\n      dlprefiles=\"$newdlprefiles\"\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$deplibs\"; then\n\t$echo \"$modename: warning: \\`-l' and \\`-L' are ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\t$echo \"$modename: warning: \\`-dlopen' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$rpath\"; then\n\t$echo \"$modename: warning: \\`-rpath' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$xrpath\"; then\n\t$echo \"$modename: warning: \\`-R' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$vinfo\"; then\n\t$echo \"$modename: warning: \\`-version-info/-version-number' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$release\"; then\n\t$echo \"$modename: warning: \\`-release' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t$echo \"$modename: warning: \\`-export-symbols' is ignored for archives\" 1>&2\n      fi\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=\"$output\"\n      objs=\"$objs$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form `libNAME.la'.\n      case $outputname in\n      lib*)\n\tname=`$echo \"X$outputname\" | $Xsed -e 's/\\.la$//' -e 's/^lib//'`\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval libname=\\\"$libname_spec\\\"\n\t;;\n      *)\n\tif test \"$module\" = no; then\n\t  $echo \"$modename: libtool library \\`$output' must begin with \\`lib'\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\tif test \"$need_lib_prefix\" != no; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  name=`$echo \"X$outputname\" | $Xsed -e 's/\\.la$//'`\n\t  eval shared_ext=\\\"$shrext_cmds\\\"\n\t  eval libname=\\\"$libname_spec\\\"\n\telse\n\t  libname=`$echo \"X$outputname\" | $Xsed -e 's/\\.la$//'`\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test \"$deplibs_check_method\" != pass_all; then\n\t  $echo \"$modename: cannot build libtool library \\`$output' from non-libtool objects on this host:$objs\" 2>&1\n\t  exit $EXIT_FAILURE\n\telse\n\t  $echo\n\t  $echo \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $echo \"*** objects $objs is not portable!\"\n\t  libobjs=\"$libobjs $objs\"\n\tfi\n      fi\n\n      if test \"$dlself\" != no; then\n\t$echo \"$modename: warning: \\`-dlopen self' is ignored for libtool libraries\" 1>&2\n      fi\n\n      set dummy $rpath\n      if test \"$#\" -gt 2; then\n\t$echo \"$modename: warning: ignoring multiple \\`-rpath's for a libtool library\" 1>&2\n      fi\n      install_libdir=\"$2\"\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test \"$build_libtool_libs\" = yes; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a `.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\tif test -n \"$vinfo\"; then\n\t  $echo \"$modename: warning: \\`-version-info/-version-number' is ignored for convenience libraries\" 1>&2\n\tfi\n\n\tif test -n \"$release\"; then\n\t  $echo \"$modename: warning: \\`-release' is ignored for convenience libraries\" 1>&2\n\tfi\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=\"$IFS\"; IFS=':'\n\tset dummy $vinfo 0 0 0\n\tIFS=\"$save_ifs\"\n\n\tif test -n \"$8\"; then\n\t  $echo \"$modename: too many parameters to \\`-version-info'\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=\"$2\"\n\t  number_minor=\"$3\"\n\t  number_revision=\"$4\"\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # which has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  darwin|linux|osf|windows)\n\t    current=`expr $number_major + $number_minor`\n\t    age=\"$number_minor\"\n\t    revision=\"$number_revision\"\n\t    ;;\n\t  freebsd-aout|freebsd-elf|sunos)\n\t    current=\"$number_major\"\n\t    revision=\"$number_minor\"\n\t    age=\"0\"\n\t    ;;\n\t  irix|nonstopux)\n\t    current=`expr $number_major + $number_minor - 1`\n\t    age=\"$number_minor\"\n\t    revision=\"$number_minor\"\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=\"$2\"\n\t  revision=\"$3\"\n\t  age=\"$4\"\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  $echo \"$modename: CURRENT \\`$current' must be a nonnegative integer\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  $echo \"$modename: REVISION \\`$revision' must be a nonnegative integer\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  $echo \"$modename: AGE \\`$age' must be a nonnegative integer\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  $echo \"$modename: AGE \\`$age' is greater than the current interface number \\`$current'\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  major=.`expr $current - $age`\n\t  versuffix=\"$major.$age.$revision\"\n\t  # Darwin ld doesn't like 0 for these options...\n\t  minor_current=`expr $current + 1`\n\t  verstring=\"${wl}-compatibility_version ${wl}$minor_current ${wl}-current_version ${wl}$minor_current.$revision\"\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\";\n\t  ;;\n\n\tfreebsd-elf)\n\t  major=\".$current\"\n\t  versuffix=\".$current\";\n\t  ;;\n\n\tirix | nonstopux)\n\t  major=`expr $current - $age + 1`\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=\"$verstring_prefix$major.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test \"$loop\" -ne 0; do\n\t    iface=`expr $revision - $loop`\n\t    loop=`expr $loop - 1`\n\t    verstring=\"$verstring_prefix$major.$iface:$verstring\"\n\t  done\n\n\t  # Before this point, $major must not contain `.'.\n\t  major=.$major\n\t  versuffix=\"$major.$revision\"\n\t  ;;\n\n\tlinux)\n\t  major=.`expr $current - $age`\n\t  versuffix=\"$major.$age.$revision\"\n\t  ;;\n\n\tosf)\n\t  major=.`expr $current - $age`\n\t  versuffix=\".$current.$age.$revision\"\n\t  verstring=\"$current.$age.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test \"$loop\" -ne 0; do\n\t    iface=`expr $current - $loop`\n\t    loop=`expr $loop - 1`\n\t    verstring=\"$verstring:${iface}.0\"\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  verstring=\"$verstring:${current}.0\"\n\t  ;;\n\n\tsunos)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\"\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 filesystems.\n\t  major=`expr $current - $age`\n\t  versuffix=\"-$major\"\n\t  ;;\n\n\t*)\n\t  $echo \"$modename: unknown library version type \\`$version_type'\" 1>&2\n\t  $echo \"Fatal configuration error.  See the $PACKAGE docs for more information.\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=\"0.0\"\n\t    ;;\n\t  esac\n\t  if test \"$need_version\" = no; then\n\t    versuffix=\n\t  else\n\t    versuffix=\".0.0\"\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test \"$avoid_version\" = yes && test \"$need_version\" = no; then\n\t  major=\n\t  versuffix=\n\t  verstring=\"\"\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test \"$allow_undefined\" = yes; then\n\t  if test \"$allow_undefined_flag\" = unsupported; then\n\t    $echo \"$modename: warning: undefined symbols not allowed in $host shared libraries\" 1>&2\n\t    build_libtool_libs=no\n\t    build_old_libs=yes\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=\"$no_undefined_flag\"\n\tfi\n      fi\n\n      if test \"$mode\" != relink; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$echo \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/${libname}${release}.*)\n\t       if test \"X$precious_files_regex\" != \"X\"; then\n\t         if echo $p | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t         then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       removelist=\"$removelist $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\tif test -n \"$removelist\"; then\n\t  $show \"${rm}r $removelist\"\n\t  $run ${rm}r $removelist\n\tfi\n      fi\n\n      # Now set the variables for building old libraries.\n      if test \"$build_old_libs\" = yes && test \"$build_libtool_libs\" != convenience ; then\n\toldlibs=\"$oldlibs $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$echo \"X$libobjs\" | $SP2NL | $Xsed -e '/\\.'${libext}'$/d' -e \"$lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      for path in $notinst_path; do\n\tlib_search_path=`$echo \"$lib_search_path \" | ${SED} -e 's% $path % %g'`\n\tdeplibs=`$echo \"$deplibs \" | ${SED} -e 's% -L$path % %g'`\n\tdependency_libs=`$echo \"$dependency_libs \" | ${SED} -e 's% -L$path % %g'`\n      done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  temp_xrpath=\"$temp_xrpath -R$libdir\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_rpath=\"$finalize_rpath $libdir\" ;;\n\t  esac\n\tdone\n\tif test \"$hardcode_into_libs\" != yes || test \"$build_old_libs\" = yes; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=\"$dlfiles\"\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) dlfiles=\"$dlfiles $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=\"$dlprefiles\"\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) dlprefiles=\"$dlprefiles $lib\" ;;\n\tesac\n      done\n\n      if test \"$build_libtool_libs\" = yes; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    deplibs=\"$deplibs -framework System\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n \t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test \"$build_libtool_need_lc\" = \"yes\"; then\n\t      deplibs=\"$deplibs -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\"\"\n\tversuffix=\"\"\n\tmajor=\"\"\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $rm conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $rm conftest\n\t  $LTCC -o conftest conftest.c $deplibs\n\t  if test \"$?\" -eq 0 ; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      name=\"`expr $i : '-l\\(.*\\)'`\"\n\t      # If $name is empty we are operating on a -L argument.\n              if test \"$name\" != \"\" && test \"$name\" -ne \"0\"; then\n\t\tif test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    newdeplibs=\"$newdeplibs $i\"\n\t\t    i=\"\"\n\t\t    ;;\n\t\t  esac\n\t        fi\n\t\tif test -n \"$i\" ; then\n\t\t  libname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t\t  deplib_matches=`eval \\\\$echo \\\"$library_names_spec\\\"`\n\t\t  set dummy $deplib_matches\n\t\t  deplib_match=$2\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t    newdeplibs=\"$newdeplibs $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    $echo\n\t\t    $echo \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    $echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    $echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    $echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    $echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    $echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t      else\n\t\tnewdeplibs=\"$newdeplibs $i\"\n\t      fi\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      name=\"`expr $i : '-l\\(.*\\)'`\"\n\t      # If $name is empty we are operating on a -L argument.\n              if test \"$name\" != \"\" && test \"$name\" != \"0\"; then\n\t\t$rm conftest\n\t\t$LTCC -o conftest conftest.c $i\n\t\t# Did it work?\n\t\tif test \"$?\" -eq 0 ; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      newdeplibs=\"$newdeplibs $i\"\n\t\t      i=\"\"\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\" ; then\n\t\t    libname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t\t    deplib_matches=`eval \\\\$echo \\\"$library_names_spec\\\"`\n\t\t    set dummy $deplib_matches\n\t\t    deplib_match=$2\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t      newdeplibs=\"$newdeplibs $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      $echo\n\t\t      $echo \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      $echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      $echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      $echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      $echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      $echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  $echo\n\t\t  $echo \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  $echo \"***  make it link in!  You will probably need to install it or some\"\n\t\t  $echo \"*** library that it depends on before this library will be fully\"\n\t\t  $echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t      else\n\t\tnewdeplibs=\"$newdeplibs $i\"\n\t      fi\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$2 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    name=\"`expr $a_deplib : '-l\\(.*\\)'`\"\n\t    # If $name is empty we are operating on a -L argument.\n            if test \"$name\" != \"\" && test  \"$name\" != \"0\"; then\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tlibname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null \\\n\t\t\t | grep \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=\"$potent_lib\"\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=\"$potliblink\";;\n\t\t\t*) potlib=`$echo \"X$potlib\" | $Xsed -e 's,[^/]*$,,'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval $file_magic_cmd \\\"\\$potlib\\\" 2>/dev/null \\\n\t\t\t | ${SED} 10q \\\n\t\t\t | $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tnewdeplibs=\"$newdeplibs $a_deplib\"\n\t\t\ta_deplib=\"\"\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\t$echo\n\t\t$echo \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\t$echo \"*** I have the capability to make that library automatically link in when\"\n\t\t$echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t$echo \"*** shared version of the library, which you do not appear to have\"\n\t\t$echo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $echo \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $echo \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $echo \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t    else\n\t      # Add a -L argument.\n\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t    fi\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$2 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    name=\"`expr $a_deplib : '-l\\(.*\\)'`\"\n\t    # If $name is empty we are operating on a -L argument.\n\t    if test -n \"$name\" && test \"$name\" != \"0\"; then\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tlibname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=\"$potent_lib\" # see symlink-check above in file_magic test\n\t\t    if eval $echo \\\"$potent_lib\\\" 2>/dev/null \\\n\t\t        | ${SED} 10q \\\n\t\t        | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t      a_deplib=\"\"\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\t$echo\n\t\t$echo \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\t$echo \"*** I have the capability to make that library automatically link in when\"\n\t\t$echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t$echo \"*** shared version of the library, which you do not appear to have\"\n\t\t$echo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $echo \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $echo \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $echo \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t    else\n\t      # Add a -L argument.\n\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t    fi\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\"\"\n\t  tmp_deplibs=`$echo \"X $deplibs\" | $Xsed -e 's/ -lc$//' \\\n\t    -e 's/ -[LR][^ ]*//g'`\n\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t    for i in $predeps $postdeps ; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$echo \"X $tmp_deplibs\" | ${SED} -e \"1s,^X,,\" -e \"s,$i,,\"`\n\t    done\n\t  fi\n\t  if $echo \"X $tmp_deplibs\" | $Xsed -e 's/[ \t]//g' \\\n\t    | grep . >/dev/null; then\n\t    $echo\n\t    if test \"X$deplibs_check_method\" = \"Xnone\"; then\n\t      $echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      $echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    $echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t  fi\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library is the System framework\n\t  newdeplibs=`$echo \"X $newdeplibs\" | $Xsed -e 's/ -lc / -framework System /'`\n\t  ;;\n\tesac\n\n\tif test \"$droppeddeps\" = yes; then\n\t  if test \"$module\" = yes; then\n\t    $echo\n\t    $echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $echo \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    $echo \"*** a static module, that should work as long as the dlopening\"\n\t    $echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      $echo\n\t      $echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      $echo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t      $echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      $echo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test \"$build_old_libs\" = no; then\n\t      oldlibs=\"$output_objdir/$libname.$libext\"\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    $echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    $echo \"*** automatically added whenever a program is linked with this library\"\n\t    $echo \"*** or is declared to -dlopen it.\"\n\n\t    if test \"$allow_undefined\" = no; then\n\t      $echo\n\t      $echo \"*** Since this library must not contain undefined symbols,\"\n\t      $echo \"*** because either the platform does not support them or\"\n\t      $echo \"*** it was explicitly requested with -no-undefined,\"\n\t      $echo \"*** libtool will only create a static version of it.\"\n\t      if test \"$build_old_libs\" = no; then\n\t\toldlibs=\"$output_objdir/$libname.$libext\"\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test \"$build_libtool_libs\" = yes; then\n\tif test \"$hardcode_into_libs\" = yes; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=\"$finalize_rpath\"\n\t  test \"$mode\" != relink && rpath=\"$compile_rpath$rpath\"\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=\"$libdir\"\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    hardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t\tdep_rpath=\"$dep_rpath $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) perm_rpath=\"$perm_rpath $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=\"$hardcode_libdirs\"\n\t    if test -n \"$hardcode_libdir_flag_spec_ld\"; then\n\t      eval dep_rpath=\\\"$hardcode_libdir_flag_spec_ld\\\"\n\t    else\n\t      eval dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\n\t    fi\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      rpath=\"$rpath$dir:\"\n\t    done\n\t    eval \"$runpath_var='$rpath\\$$runpath_var'; export $runpath_var\"\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=\"$finalize_shlibpath\"\n\ttest \"$mode\" != relink && shlibpath=\"$compile_shlibpath$shlibpath\"\n\tif test -n \"$shlibpath\"; then\n\t  eval \"$shlibpath_var='$shlibpath\\$$shlibpath_var'; export $shlibpath_var\"\n\tfi\n\n\t# Get the real and link names of the library.\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval library_names=\\\"$library_names_spec\\\"\n\tset dummy $library_names\n\trealname=\"$2\"\n\tshift; shift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval soname=\\\"$soname_spec\\\"\n\telse\n\t  soname=\"$realname\"\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=\"$output_objdir/$realname\"\n\tfor link\n\tdo\n\t  linknames=\"$linknames $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$echo \"X$libobjs\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test \"$always_export_symbols\" = yes || test -n \"$export_symbols_regex\"; then\n\t    $show \"generating symbol list for \\`$libname.la'\"\n\t    export_symbols=\"$output_objdir/$libname.exp\"\n\t    $run $rm $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $cmds; do\n\t      IFS=\"$save_ifs\"\n\t      eval cmd=\\\"$cmd\\\"\n\t      if len=`expr \"X$cmd\" : \".*\"` &&\n\t       test \"$len\" -le \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t        $show \"$cmd\"\n\t        $run eval \"$cmd\" || exit $?\n\t        skipped_export=false\n\t      else\n\t        # The command line is too long to execute in one step.\n\t        $show \"using reloadable object file for export list...\"\n\t        skipped_export=:\n\t      fi\n\t    done\n\t    IFS=\"$save_ifs\"\n\t    if test -n \"$export_symbols_regex\"; then\n\t      $show \"$EGREP -e \\\"$export_symbols_regex\\\" \\\"$export_symbols\\\" > \\\"${export_symbols}T\\\"\"\n\t      $run eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      $show \"$mv \\\"${export_symbols}T\\\" \\\"$export_symbols\\\"\"\n\t      $run eval '$mv \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $run eval '$echo \"X$include_expsyms\" | $SP2NL >> \"$export_symbols\"'\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t\tcase \" $convenience \" in\n\t\t*\" $test_deplib \"*) ;;\n\t\t*)\n\t\t\ttmp_deplibs=\"$tmp_deplibs $test_deplib\"\n\t\t\t;;\n\t\tesac\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t  else\n\t    gentop=\"$output_objdir/${outputname}x\"\n\t    generated=\"$generated $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    libobjs=\"$libobjs $func_extract_archives_result\"\n\t  fi\n\tfi\n\t\n\tif test \"$thread_safe\" = yes && test -n \"$thread_safe_flag_spec\"; then\n\t  eval flag=\\\"$thread_safe_flag_spec\\\"\n\t  linker_flags=\"$linker_flags $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test \"$mode\" = relink; then\n\t  $run eval '(cd $output_objdir && $rm ${realname}U && $mv $realname ${realname}U)' || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$module_expsym_cmds\\\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$module_cmds\\\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\tif test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t  eval test_cmds=\\\"$archive_expsym_cmds\\\"\n\t  cmds=$archive_expsym_cmds\n\telse\n\t  eval test_cmds=\\\"$archive_cmds\\\"\n\t  cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" && len=`expr \"X$test_cmds\" : \".*\"` &&\n\t   test \"$len\" -le \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise.\n\t  $echo \"creating reloadable object files...\"\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  output_la=`$echo \"X$output\" | $Xsed -e \"$basename\"`\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  delfiles=\n\t  last_robj=\n\t  k=1\n\t  output=$output_objdir/$output_la-${k}.$objext\n\t  # Loop over the list of objects to be linked.\n\t  for obj in $save_libobjs\n\t  do\n\t    eval test_cmds=\\\"$reload_cmds $objlist $last_robj\\\"\n\t    if test \"X$objlist\" = X ||\n\t       { len=`expr \"X$test_cmds\" : \".*\"` &&\n\t\t test \"$len\" -le \"$max_cmd_len\"; }; then\n\t      objlist=\"$objlist $obj\"\n\t    else\n\t      # The command $test_cmds is almost too long, add a\n\t      # command to the queue.\n\t      if test \"$k\" -eq 1 ; then\n\t\t# The first file doesn't have a previous command to add.\n\t\teval concat_cmds=\\\"$reload_cmds $objlist $last_robj\\\"\n\t      else\n\t\t# All subsequent reloadable object files will link in\n\t\t# the last one created.\n\t\teval concat_cmds=\\\"\\$concat_cmds~$reload_cmds $objlist $last_robj\\\"\n\t      fi\n\t      last_robj=$output_objdir/$output_la-${k}.$objext\n\t      k=`expr $k + 1`\n\t      output=$output_objdir/$output_la-${k}.$objext\n\t      objlist=$obj\n\t      len=1\n\t    fi\n\t  done\n\t  # Handle the remaining objects by creating one last\n\t  # reloadable object file.  All subsequent reloadable object\n\t  # files will link in the last one created.\n\t  test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t  eval concat_cmds=\\\"\\${concat_cmds}$reload_cmds $objlist $last_robj\\\"\n\n\t  if ${skipped_export-false}; then\n\t    $show \"generating symbol list for \\`$libname.la'\"\n\t    export_symbols=\"$output_objdir/$libname.exp\"\n\t    $run $rm $export_symbols\n\t    libobjs=$output\n\t    # Append the command to create the export file.\n\t    eval concat_cmds=\\\"\\$concat_cmds~$export_symbols_cmds\\\"\n          fi\n\n\t  # Set up a command to remove the reloadable object files\n\t  # after they are used.\n\t  i=0\n\t  while test \"$i\" -lt \"$k\"\n\t  do\n\t    i=`expr $i + 1`\n\t    delfiles=\"$delfiles $output_objdir/$output_la-${i}.$objext\"\n\t  done\n\n\t  $echo \"creating a temporary reloadable object file: $output\"\n\n\t  # Loop through the commands generated above and execute them.\n\t  save_ifs=\"$IFS\"; IFS='~'\n\t  for cmd in $concat_cmds; do\n\t    IFS=\"$save_ifs\"\n\t    $show \"$cmd\"\n\t    $run eval \"$cmd\" || exit $?\n\t  done\n\t  IFS=\"$save_ifs\"\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    cmds=$archive_cmds\n\t    fi\n\t  fi\n\n\t  # Append the command to remove the reloadable object files\n\t  # to the just-reset $cmds.\n\t  eval cmds=\\\"\\$cmds~\\$rm $delfiles\\\"\n\tfi\n\tsave_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  eval cmd=\\\"$cmd\\\"\n\t  $show \"$cmd\"\n\t  $run eval \"$cmd\" || exit $?\n\tdone\n\tIFS=\"$save_ifs\"\n\n\t# Restore the uninstalled library and exit\n\tif test \"$mode\" = relink; then\n\t  $run eval '(cd $output_objdir && $rm ${realname}T && $mv $realname ${realname}T && $mv \"$realname\"U $realname)' || exit $?\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    $show \"(cd $output_objdir && $rm $linkname && $LN_S $realname $linkname)\"\n\t    $run eval '(cd $output_objdir && $rm $linkname && $LN_S $realname $linkname)' || exit $?\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test \"$module\" = yes || test \"$export_dynamic\" = yes; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=\"$soname\"\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$deplibs\"; then\n\t$echo \"$modename: warning: \\`-l' and \\`-L' are ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\t$echo \"$modename: warning: \\`-dlopen' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$rpath\"; then\n\t$echo \"$modename: warning: \\`-rpath' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$xrpath\"; then\n\t$echo \"$modename: warning: \\`-R' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$vinfo\"; then\n\t$echo \"$modename: warning: \\`-version-info' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$release\"; then\n\t$echo \"$modename: warning: \\`-release' is ignored for objects\" 1>&2\n      fi\n\n      case $output in\n      *.lo)\n\tif test -n \"$objs$old_deplibs\"; then\n\t  $echo \"$modename: cannot build library object \\`$output' from non-libtool objects\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\tlibobj=\"$output\"\n\tobj=`$echo \"X$output\" | $Xsed -e \"$lo2o\"`\n\t;;\n      *)\n\tlibobj=\n\tobj=\"$output\"\n\t;;\n      esac\n\n      # Delete the old objects.\n      $run $rm $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # reload_cmds runs $LD directly, so let us get rid of\n      # -Wl from whole_archive_flag_spec\n      wl=\n\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval reload_conv_objs=\\\"\\$reload_objs $whole_archive_flag_spec\\\"\n\telse\n\t  gentop=\"$output_objdir/${obj}x\"\n\t  generated=\"$generated $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # Create the old-style object.\n      reload_objs=\"$objs$old_deplibs \"`$echo \"X$libobjs\" | $SP2NL | $Xsed -e '/\\.'${libext}$'/d' -e '/\\.lib$/d' -e \"$lo2o\" | $NL2SP`\" $reload_conv_objs\" ### testsuite: skip nested quoting test\n\n      output=\"$obj\"\n      cmds=$reload_cmds\n      save_ifs=\"$IFS\"; IFS='~'\n      for cmd in $cmds; do\n\tIFS=\"$save_ifs\"\n\teval cmd=\\\"$cmd\\\"\n\t$show \"$cmd\"\n\t$run eval \"$cmd\" || exit $?\n      done\n      IFS=\"$save_ifs\"\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  $show \"${rm}r $gentop\"\n\t  $run ${rm}r $gentop\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$build_libtool_libs\" != yes; then\n\tif test -n \"$gentop\"; then\n\t  $show \"${rm}r $gentop\"\n\t  $run ${rm}r $gentop\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $run eval \"echo timestamp > $libobj\" || exit $?\n\texit $EXIT_SUCCESS\n      fi\n\n      if test -n \"$pic_flag\" || test \"$pic_mode\" != default; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=\"$libobj\"\n\tcmds=$reload_cmds\n\tsave_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  eval cmd=\\\"$cmd\\\"\n\t  $show \"$cmd\"\n\t  $run eval \"$cmd\" || exit $?\n\tdone\n\tIFS=\"$save_ifs\"\n      fi\n\n      if test -n \"$gentop\"; then\n\t$show \"${rm}r $gentop\"\n\t$run ${rm}r $gentop\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) output=`$echo $output | ${SED} -e 's,.exe$,,;s,$,.exe,'` ;;\n      esac\n      if test -n \"$vinfo\"; then\n\t$echo \"$modename: warning: \\`-version-info' is ignored for programs\" 1>&2\n      fi\n\n      if test -n \"$release\"; then\n\t$echo \"$modename: warning: \\`-release' is ignored for programs\" 1>&2\n      fi\n\n      if test \"$preload\" = yes; then\n\tif test \"$dlopen_support\" = unknown && test \"$dlopen_self\" = unknown &&\n\t   test \"$dlopen_self_static\" = unknown; then\n\t  $echo \"$modename: warning: \\`AC_LIBTOOL_DLOPEN' not used. Assuming no dlopen support.\"\n\tfi\n      fi\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$echo \"X $compile_deplibs\" | $Xsed -e 's/ -lc / -framework System /'`\n\tfinalize_deplibs=`$echo \"X $finalize_deplibs\" | $Xsed -e 's/ -lc / -framework System /'`\n\t;;\n      esac\n\n      case $host in\n      *darwin*)\n        # Don't allow lazy linking, it breaks C++ global constructors\n        if test \"$tagname\" = CXX ; then\n        compile_command=\"$compile_command ${wl}-bind_at_load\"\n        finalize_command=\"$finalize_command ${wl}-bind_at_load\"\n        fi\n        ;;\n      esac\n\n      compile_command=\"$compile_command $compile_deplibs\"\n      finalize_command=\"$finalize_command $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_rpath=\"$finalize_rpath $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\thardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    rpath=\"$rpath $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) perm_rpath=\"$perm_rpath $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  *) dllsearchpath=\"$dllsearchpath:$libdir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      compile_rpath=\"$rpath\"\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\thardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    rpath=\"$rpath $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_perm_rpath=\"$finalize_perm_rpath $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      finalize_rpath=\"$rpath\"\n\n      if test -n \"$libobjs\" && test \"$build_old_libs\" = yes; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$echo \"X$compile_command\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$echo \"X$finalize_command\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n      fi\n\n      dlsyms=\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tif test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\t  dlsyms=\"${outputname}S.c\"\n\telse\n\t  $echo \"$modename: not configured to extract global symbols from dlpreopened files\" 1>&2\n\tfi\n      fi\n\n      if test -n \"$dlsyms\"; then\n\tcase $dlsyms in\n\t\"\") ;;\n\t*.c)\n\t  # Discover the nlist of each of the dlfiles.\n\t  nlist=\"$output_objdir/${outputname}.nm\"\n\n\t  $show \"$rm $nlist ${nlist}S ${nlist}T\"\n\t  $run $rm \"$nlist\" \"${nlist}S\" \"${nlist}T\"\n\n\t  # Parse the name list into a source file.\n\t  $show \"creating $output_objdir/$dlsyms\"\n\n\t  test -z \"$run\" && $echo > \"$output_objdir/$dlsyms\" \"\\\n/* $dlsyms - symbol resolution table for \\`$outputname' dlsym emulation. */\n/* Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n/* Prevent the only kind of declaration conflicts we can make. */\n#define lt_preloaded_symbols some_other_symbol\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\t  if test \"$dlself\" = yes; then\n\t    $show \"generating symbol list for \\`$output'\"\n\n\t    test -z \"$run\" && $echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t    # Add our own program objects to the symbol list.\n\t    progfiles=`$echo \"X$objs$old_deplibs\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n\t    for arg in $progfiles; do\n\t      $show \"extracting global C symbols from \\`$arg'\"\n\t      $run eval \"$NM $arg | $global_symbol_pipe >> '$nlist'\"\n\t    done\n\n\t    if test -n \"$exclude_expsyms\"; then\n\t      $run eval '$EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T'\n\t      $run eval '$mv \"$nlist\"T \"$nlist\"'\n\t    fi\n\n\t    if test -n \"$export_symbols_regex\"; then\n\t      $run eval '$EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T'\n\t      $run eval '$mv \"$nlist\"T \"$nlist\"'\n\t    fi\n\n\t    # Prepare the list of exported symbols\n\t    if test -z \"$export_symbols\"; then\n\t      export_symbols=\"$output_objdir/$outputname.exp\"\n\t      $run $rm $export_symbols\n\t      $run eval \"${SED} -n -e '/^: @PROGRAM@$/d' -e 's/^.* \\(.*\\)$/\\1/p' \"'< \"$nlist\" > \"$export_symbols\"'\n\t    else\n\t      $run eval \"${SED} -e 's/\\([ ][.*^$]\\)/\\\\\\1/g' -e 's/^/ /' -e 's/$/$/'\"' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"'\n\t      $run eval 'grep -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T'\n\t      $run eval 'mv \"$nlist\"T \"$nlist\"'\n\t    fi\n\t  fi\n\n\t  for arg in $dlprefiles; do\n\t    $show \"extracting global C symbols from \\`$arg'\"\n\t    name=`$echo \"$arg\" | ${SED} -e 's%^.*/%%'`\n\t    $run eval '$echo \": $name \" >> \"$nlist\"'\n\t    $run eval \"$NM $arg | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -z \"$run\"; then\n\t    # Make sure we have at least an empty file.\n\t    test -f \"$nlist\" || : > \"$nlist\"\n\n\t    if test -n \"$exclude_expsyms\"; then\n\t      $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t      $mv \"$nlist\"T \"$nlist\"\n\t    fi\n\n\t    # Try sorting and uniquifying the output.\n\t    if grep -v \"^: \" < \"$nlist\" |\n\t\tif sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\t  sort -k 3\n\t\telse\n\t\t  sort +2\n\t\tfi |\n\t\tuniq > \"$nlist\"S; then\n\t      :\n\t    else\n\t      grep -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t    fi\n\n\t    if test -f \"$nlist\"S; then\n\t      eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$dlsyms\"'\n\t    else\n\t      $echo '/* NONE */' >> \"$output_objdir/$dlsyms\"\n\t    fi\n\n\t    $echo >> \"$output_objdir/$dlsyms\" \"\\\n\n#undef lt_preloaded_symbols\n\n#if defined (__STDC__) && __STDC__\n# define lt_ptr void *\n#else\n# define lt_ptr char *\n# define const\n#endif\n\n/* The mapping between symbol names and symbols. */\n\"\n\n\t    case $host in\n\t    *cygwin* | *mingw* )\n\t  $echo >> \"$output_objdir/$dlsyms\" \"\\\n/* DATA imports from DLLs on WIN32 can't be const, because\n   runtime relocations are performed -- see ld's documentation\n   on pseudo-relocs */\nstruct {\n\"\n\t      ;;\n\t    * )\n\t  $echo >> \"$output_objdir/$dlsyms\" \"\\\nconst struct {\n\"\n\t      ;;\n\t    esac\n\n\n\t  $echo >> \"$output_objdir/$dlsyms\" \"\\\n  const char *name;\n  lt_ptr address;\n}\nlt_preloaded_symbols[] =\n{\\\n\"\n\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$dlsyms\"\n\n\t    $echo >> \"$output_objdir/$dlsyms\" \"\\\n  {0, (lt_ptr) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t  fi\n\n\t  pic_flag_for_symtable=\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    case \"$compile_command \" in\n\t    *\" -static \"*) ;;\n\t    *) pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\";;\n\t    esac;;\n\t  *-*-hpux*)\n\t    case \"$compile_command \" in\n\t    *\" -static \"*) ;;\n\t    *) pic_flag_for_symtable=\" $pic_flag\";;\n\t    esac\n\t  esac\n\n\t  # Now compile the dynamic symbol file.\n\t  $show \"(cd $output_objdir && $LTCC -c$no_builtin_flag$pic_flag_for_symtable \\\"$dlsyms\\\")\"\n\t  $run eval '(cd $output_objdir && $LTCC -c$no_builtin_flag$pic_flag_for_symtable \"$dlsyms\")' || exit $?\n\n\t  # Clean up the generated files.\n\t  $show \"$rm $output_objdir/$dlsyms $nlist ${nlist}S ${nlist}T\"\n\t  $run $rm \"$output_objdir/$dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\"\n\n\t  # Transform the symbol file into the correct name.\n\t  compile_command=`$echo \"X$compile_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%\"`\n\t  finalize_command=`$echo \"X$finalize_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%\"`\n\t  ;;\n\t*)\n\t  $echo \"$modename: unknown suffix for \\`$dlsyms'\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n      else\n\t# We keep going just in case the user didn't refer to\n\t# lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n\t# really was required.\n\n\t# Nullify the symbol file.\n\tcompile_command=`$echo \"X$compile_command\" | $Xsed -e \"s% @SYMFILE@%%\"`\n\tfinalize_command=`$echo \"X$finalize_command\" | $Xsed -e \"s% @SYMFILE@%%\"`\n      fi\n\n      if test \"$need_relink\" = no || test \"$build_libtool_libs\" != yes; then\n\t# Replace the output file specification.\n\tcompile_command=`$echo \"X$compile_command\" | $Xsed -e 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=\"$compile_command$compile_rpath\"\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\t$show \"$link_command\"\n\t$run eval \"$link_command\"\n\tstatus=$?\n\n\t# Delete the generated files.\n\tif test -n \"$dlsyms\"; then\n\t  $show \"$rm $output_objdir/${outputname}S.${objext}\"\n\t  $run $rm \"$output_objdir/${outputname}S.${objext}\"\n\tfi\n\n\texit $status\n      fi\n\n      if test -n \"$shlibpath_var\"; then\n\t# We should set the shlibpath_var\n\trpath=\n\tfor dir in $temp_rpath; do\n\t  case $dir in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*)\n\t    # Absolute path.\n\t    rpath=\"$rpath$dir:\"\n\t    ;;\n\t  *)\n\t    # Relative path: add a thisdir entry.\n\t    rpath=\"$rpath\\$thisdir/$dir:\"\n\t    ;;\n\t  esac\n\tdone\n\ttemp_rpath=\"$rpath\"\n      fi\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    rpath=\"$rpath$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    rpath=\"$rpath$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test \"$no_install\" = yes; then\n\t# We don't need to create a wrapper script.\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\t# Replace the output file specification.\n\tlink_command=`$echo \"X$link_command\" | $Xsed -e 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$run $rm $output\n\t# Link the executable and exit\n\t$show \"$link_command\"\n\t$run eval \"$link_command\" || exit $?\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$hardcode_action\" = relink; then\n\t# Fast installation is not supported\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\trelink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\n\t$echo \"$modename: warning: this platform does not like uninstalled shared libraries\" 1>&2\n\t$echo \"$modename: \\`$output' will be relinked during installation\" 1>&2\n      else\n\tif test \"$fast_install\" != no; then\n\t  link_command=\"$finalize_var$compile_command$finalize_rpath\"\n\t  if test \"$fast_install\" = yes; then\n\t    relink_command=`$echo \"X$compile_var$compile_command$compile_rpath\" | $Xsed -e 's%@OUTPUT@%\\$progdir/\\$file%g'`\n\t  else\n\t    # fast_install is set to needless\n\t    relink_command=\n\t  fi\n\telse\n\t  link_command=\"$compile_var$compile_command$compile_rpath\"\n\t  relink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\tfi\n      fi\n\n      # Replace the output file specification.\n      link_command=`$echo \"X$link_command\" | $Xsed -e 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $run $rm $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      $show \"$link_command\"\n      $run eval \"$link_command\" || exit $?\n\n      # Now create the wrapper script.\n      $show \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    var_value=`$echo \"X$var_value\" | $Xsed -e \"$sed_quote_subst\"`\n\t    relink_command=\"$var=\\\"$var_value\\\"; export $var; $relink_command\"\n\t  fi\n\tdone\n\trelink_command=\"(cd `pwd`; $relink_command)\"\n\trelink_command=`$echo \"X$relink_command\" | $Xsed -e \"$sed_quote_subst\"`\n      fi\n\n      # Quote $echo for shipping.\n      if test \"X$echo\" = \"X$SHELL $progpath --fallback-echo\"; then\n\tcase $progpath in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) qecho=\"$SHELL $progpath --fallback-echo\";;\n\t*) qecho=\"$SHELL `pwd`/$progpath --fallback-echo\";;\n\tesac\n\tqecho=`$echo \"X$qecho\" | $Xsed -e \"$sed_quote_subst\"`\n      else\n\tqecho=`$echo \"X$echo\" | $Xsed -e \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if our run command is non-null.\n      if test -z \"$run\"; then\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) output=`$echo $output|${SED} 's,.exe$,,'` ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    outputname=`$echo $outputname|${SED} 's,.exe$,,'` ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n\t    cwrappersource=`$echo ${objdir}/lt-${outputname}.c`\n\t    cwrapper=`$echo ${output}.exe`\n\t    $rm $cwrappersource $cwrapper\n\t    trap \"$rm $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    cat > $cwrappersource <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n\n   Currently, it simply execs the wrapper *script* \"/bin/sh $output\",\n   but could eventually absorb all of the scripts functionality and\n   exec $objdir/$outputname directly.\n*/\nEOF\n\t    cat >> $cwrappersource<<\"EOF\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n\n#if defined(PATH_MAX)\n# define LT_PATHMAX PATH_MAX\n#elif defined(MAXPATHLEN)\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef DIR_SEPARATOR\n#define DIR_SEPARATOR '/'\n#endif\n\n#if defined (_WIN32) || defined (__MSDOS__) || defined (__DJGPP__) || \\\n  defined (__OS2__)\n#define HAVE_DOS_BASED_FILE_SYSTEM\n#ifndef DIR_SEPARATOR_2\n#define DIR_SEPARATOR_2 '\\\\'\n#endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n        (((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free ((void *) stale); stale = 0; } \\\n} while (0)\n\nconst char *program_name = NULL;\n\nvoid * xmalloc (size_t num);\nchar * xstrdup (const char *string);\nchar * basename (const char *name);\nchar * fnqualify(const char *path);\nchar * strendzap(char *str, const char *pat);\nvoid lt_fatal (const char *message, ...);\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int i;\n\n  program_name = (char *) xstrdup ((char *) basename (argv[0]));\n  newargz = XMALLOC(char *, argc+2);\nEOF\n\n\t    cat >> $cwrappersource <<EOF\n  newargz[0] = \"$SHELL\";\nEOF\n\n\t    cat >> $cwrappersource <<\"EOF\"\n  newargz[1] = fnqualify(argv[0]);\n  /* we know the script has the same name, without the .exe */\n  /* so make sure newargz[1] doesn't end in .exe */\n  strendzap(newargz[1],\".exe\");\n  for (i = 1; i < argc; i++)\n    newargz[i+1] = xstrdup(argv[i]);\n  newargz[argc+1] = NULL;\nEOF\n\n\t    cat >> $cwrappersource <<EOF\n  execv(\"$SHELL\",newargz);\nEOF\n\n\t    cat >> $cwrappersource <<\"EOF\"\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void * p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (\"Memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1), string) : NULL\n;\n}\n\nchar *\nbasename (const char *name)\n{\n  const char *base;\n\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha (name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return (char *) base;\n}\n\nchar *\nfnqualify(const char *path)\n{\n  size_t size;\n  char *p;\n  char tmp[LT_PATHMAX + 1];\n\n  assert(path != NULL);\n\n  /* Is it qualified already? */\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  if (isalpha (path[0]) && path[1] == ':')\n    return xstrdup (path);\n#endif\n  if (IS_DIR_SEPARATOR (path[0]))\n    return xstrdup (path);\n\n  /* prepend the current directory */\n  /* doesn't handle '~' */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (\"getcwd failed\");\n  size = strlen(tmp) + 1 + strlen(path) + 1; /* +2 for '/' and '\\0' */\n  p = XMALLOC(char, size);\n  sprintf(p, \"%s%c%s\", tmp, DIR_SEPARATOR, path);\n  return p;\n}\n\nchar *\nstrendzap(char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert(str != NULL);\n  assert(pat != NULL);\n\n  len = strlen(str);\n  patlen = strlen(pat);\n\n  if (patlen <= len)\n  {\n    str += len - patlen;\n    if (strcmp(str, pat) == 0)\n      *str = '\\0';\n  }\n  return str;\n}\n\nstatic void\nlt_error_core (int exit_status, const char * mode,\n          const char * message, va_list ap)\n{\n  fprintf (stderr, \"%s: %s: \", program_name, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, \"FATAL\", message, ap);\n  va_end (ap);\n}\nEOF\n\t  # we should really use a build-platform specific compiler\n\t  # here, but OTOH, the wrappers (shell script and this C one)\n\t  # are only useful if you want to execute the \"real\" binary.\n\t  # Since the \"real\" binary is built for $host, then this\n\t  # wrapper might as well be built for $host, too.\n\t  $run $LTCC -s -o $cwrapper $cwrappersource\n\t  ;;\n\tesac\n\t$rm $output\n\ttrap \"$rm $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t$echo > $output \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed='${SED} -e 1s/^X//'\nsed_quote_subst='$sed_quote_subst'\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variable:\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$echo are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    echo=\\\"$qecho\\\"\n    file=\\\"\\$0\\\"\n    # Make sure echo works.\n    if test \\\"X\\$1\\\" = X--no-reexec; then\n      # Discard the --no-reexec flag, and continue.\n      shift\n    elif test \\\"X\\`(\\$echo '\\t') 2>/dev/null\\`\\\" = 'X\\t'; then\n      # Yippee, \\$echo works!\n      :\n    else\n      # Restart under the correct shell, and then maybe \\$echo will work.\n      exec $SHELL \\\"\\$0\\\" --no-reexec \\${1+\\\"\\$@\\\"}\n    fi\n  fi\\\n\"\n\t$echo >> $output \"\\\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$echo \\\"X\\$file\\\" | \\$Xsed -e 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | ${SED} -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$echo \\\"X\\$file\\\" | \\$Xsed -e 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$echo \\\"X\\$file\\\" | \\$Xsed -e 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | ${SED} -n 's/.*-> //p'\\`\n  done\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test \"$fast_install\" = yes; then\n\t  $echo >> $output \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" || \\\\\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | ${SED} 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $mkdir \\\"\\$progdir\\\"\n    else\n      $rm \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $echo >> $output \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\$relink_command 2>&1\\`; then :\n      else\n\t$echo \\\"\\$relink_command_output\\\" >&2\n\t$rm \\\"\\$progdir/\\$file\\\"\n\texit $EXIT_FAILURE\n      fi\n    fi\n\n    $mv \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $rm \\\"\\$progdir/\\$program\\\";\n      $mv \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $rm \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $echo >> $output \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$echo >> $output \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# Export our shlibpath_var if we have one.\n\tif test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $echo >> $output \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$echo \\\"X\\$$shlibpath_var\\\" | \\$Xsed -e 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t# fixup the dll searchpath if we need to.\n\tif test -n \"$dllsearchpath\"; then\n\t  $echo >> $output \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t$echo >> $output \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n\"\n\tcase $host in\n\t# Backslashes separate directories on plain windows\n\t*-*-mingw | *-*-os2*)\n\t  $echo >> $output \"\\\n      exec \\$progdir\\\\\\\\\\$program \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\n\t*)\n\t  $echo >> $output \"\\\n      exec \\$progdir/\\$program \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\tesac\n\t$echo >> $output \"\\\n      \\$echo \\\"\\$0: cannot exec \\$program \\${1+\\\"\\$@\\\"}\\\"\n      exit $EXIT_FAILURE\n    fi\n  else\n    # The program doesn't exist.\n    \\$echo \\\"\\$0: error: \\$progdir/\\$program does not exist\\\" 1>&2\n    \\$echo \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    $echo \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit $EXIT_FAILURE\n  fi\nfi\\\n\"\n\tchmod +x $output\n      fi\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      if test \"$build_libtool_libs\" = convenience; then\n\toldobjs=\"$libobjs_save\"\n\taddlibs=\"$convenience\"\n\tbuild_libtool_libs=no\n      else\n\tif test \"$build_libtool_libs\" = module; then\n\t  oldobjs=\"$libobjs_save\"\n\t  build_libtool_libs=no\n\telse\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\tfi\n\taddlibs=\"$old_convenience\"\n      fi\n\n      if test -n \"$addlibs\"; then\n\tgentop=\"$output_objdir/${outputname}x\"\n\tgenerated=\"$generated $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\toldobjs=\"$oldobjs $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test \"$build_libtool_libs\" = yes; then\n       cmds=$old_archive_from_new_cmds\n      else\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      $echo \"X$obj\" | $Xsed -e 's%^.*/%%'\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  $echo \"copying selected object files to avoid basename conflicts...\"\n\n\t  if test -z \"$gentop\"; then\n\t    gentop=\"$output_objdir/${outputname}x\"\n\t    generated=\"$generated $gentop\"\n\n\t    $show \"${rm}r $gentop\"\n\t    $run ${rm}r \"$gentop\"\n\t    $show \"$mkdir $gentop\"\n\t    $run $mkdir \"$gentop\"\n\t    status=$?\n\t    if test \"$status\" -ne 0 && test ! -d \"$gentop\"; then\n\t      exit $status\n\t    fi\n\t  fi\n\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    objbase=`$echo \"X$obj\" | $Xsed -e 's%^.*/%%'`\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tcounter=`expr $counter + 1`\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      $show \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      $run ln \"$obj\" \"$gentop/$newobj\" ||\n\t      $run cp \"$obj\" \"$gentop/$newobj\"\n\t      oldobjs=\"$oldobjs $gentop/$newobj\"\n\t      ;;\n\t    *) oldobjs=\"$oldobjs $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\n\teval cmds=\\\"$old_archive_cmds\\\"\n\n\tif len=`expr \"X$cmds\" : \".*\"` &&\n\t     test \"$len\" -le \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  $echo \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  for obj in $save_oldobjs\n\t  do\n\t    oldobjs=\"$objlist $obj\"\n\t    objlist=\"$objlist $obj\"\n\t    eval test_cmds=\\\"$old_archive_cmds\\\"\n\t    if len=`expr \"X$test_cmds\" : \".*\"` &&\n\t       test \"$len\" -le \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\" ; then\n\t        RANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\${concat_cmds}$old_archive_cmds\\\"\n\t      objlist=\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test \"X$oldobjs\" = \"X\" ; then\n\t    eval cmds=\\\"\\$concat_cmds\\\"\n\t  else\n\t    eval cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\n\t  fi\n\tfi\n      fi\n      save_ifs=\"$IFS\"; IFS='~'\n      for cmd in $cmds; do\n        eval cmd=\\\"$cmd\\\"\n\tIFS=\"$save_ifs\"\n\t$show \"$cmd\"\n\t$run eval \"$cmd\" || exit $?\n      done\n      IFS=\"$save_ifs\"\n    done\n\n    if test -n \"$generated\"; then\n      $show \"${rm}r$generated\"\n      $run ${rm}r$generated\n    fi\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test \"$build_old_libs\" = yes && old_library=\"$libname.$libext\"\n      $show \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  var_value=`$echo \"X$var_value\" | $Xsed -e \"$sed_quote_subst\"`\n\t  relink_command=\"$var=\\\"$var_value\\\"; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      relink_command=\"(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      relink_command=`$echo \"X$relink_command\" | $Xsed -e \"$sed_quote_subst\"`\n      if test \"$hardcode_automatic\" = yes ; then\n\trelink_command=\n      fi\n\n\n      # Only create the output if not a dry run.\n      if test -z \"$run\"; then\n\tfor installed in no yes; do\n\t  if test \"$installed\" = yes; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=\"$output_objdir/$outputname\"i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tname=`$echo \"X$deplib\" | $Xsed -e 's%^.*/%%'`\n\t\teval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\tif test -z \"$libdir\"; then\n\t\t  $echo \"$modename: \\`$deplib' is not a valid libtool archive\" 1>&2\n\t\t  exit $EXIT_FAILURE\n\t\tfi\n\t\tnewdependency_libs=\"$newdependency_libs $libdir/$name\"\n\t\t;;\n\t      *) newdependency_libs=\"$newdependency_libs $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=\"$newdependency_libs\"\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      name=`$echo \"X$lib\" | $Xsed -e 's%^.*/%%'`\n\t      eval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t      if test -z \"$libdir\"; then\n\t\t$echo \"$modename: \\`$lib' is not a valid libtool archive\" 1>&2\n\t\texit $EXIT_FAILURE\n\t      fi\n\t      newdlfiles=\"$newdlfiles $libdir/$name\"\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      name=`$echo \"X$lib\" | $Xsed -e 's%^.*/%%'`\n\t      eval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t      if test -z \"$libdir\"; then\n\t\t$echo \"$modename: \\`$lib' is not a valid libtool archive\" 1>&2\n\t\texit $EXIT_FAILURE\n\t      fi\n\t      newdlprefiles=\"$newdlprefiles $libdir/$name\"\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      newdlfiles=\"$newdlfiles $abs\"\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      newdlprefiles=\"$newdlprefiles $abs\"\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  fi\n\t  $rm $output\n\t  # place dlname in correct position for cygwin\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll) tdlname=../bin/$dlname ;;\n\t  esac\n\t  $echo > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test \"$installed\" = no && test \"$need_relink\" = yes; then\n\t    $echo >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      fi\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      $show \"(cd $output_objdir && $rm $outputname && $LN_S ../$outputname $outputname)\"\n      $run eval '(cd $output_objdir && $rm $outputname && $LN_S ../$outputname $outputname)' || exit $?\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n    ;;\n\n  # libtool install mode\n  install)\n    modename=\"$modename: install\"\n\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$nonopt\" = \"$SHELL\" || test \"$nonopt\" = /bin/sh ||\n       # Allow the use of GNU shtool's install command.\n       $echo \"X$nonopt\" | $Xsed | grep shtool > /dev/null; then\n      # Aesthetically quote it.\n      arg=`$echo \"X$nonopt\" | $Xsed -e \"$sed_quote_subst\"`\n      case $arg in\n      *$quote_scanset* | *]* | *\\|* | *\\&* | *\\(* | *\\)* | \"\")\n\targ=\"\\\"$arg\\\"\"\n\t;;\n      esac\n      install_prog=\"$arg \"\n      arg=\"$1\"\n      shift\n    else\n      install_prog=\n      arg=\"$nonopt\"\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    arg=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n    case $arg in\n    *$quote_scanset* | *]* | *\\|* | *\\&* | *\\(* | *\\)* | \"\")\n      arg=\"\\\"$arg\\\"\"\n      ;;\n    esac\n    install_prog=\"$install_prog$arg\"\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=no\n    stripme=\n    for arg\n    do\n      if test -n \"$dest\"; then\n\tfiles=\"$files $dest\"\n\tdest=\"$arg\"\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=yes ;;\n      -f) prev=\"-f\" ;;\n      -g) prev=\"-g\" ;;\n      -m) prev=\"-m\" ;;\n      -o) prev=\"-o\" ;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*) ;;\n\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  prev=\n\telse\n\t  dest=\"$arg\"\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      arg=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n      case $arg in\n      *$quote_scanset* | *]* | *\\|* | *\\&* | *\\(* | *\\)* | \"\")\n\targ=\"\\\"$arg\\\"\"\n\t;;\n      esac\n      install_prog=\"$install_prog $arg\"\n    done\n\n    if test -z \"$install_prog\"; then\n      $echo \"$modename: you must specify an install program\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    if test -n \"$prev\"; then\n      $echo \"$modename: the \\`$prev' option requires an argument\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\t$echo \"$modename: no file or destination specified\" 1>&2\n      else\n\t$echo \"$modename: you must specify a destination\" 1>&2\n      fi\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    # Strip any trailing slash from the destination.\n    dest=`$echo \"X$dest\" | $Xsed -e 's%/$%%'`\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=yes\n    if test \"$isdir\" = yes; then\n      destdir=\"$dest\"\n      destname=\n    else\n      destdir=`$echo \"X$dest\" | $Xsed -e 's%/[^/]*$%%'`\n      test \"X$destdir\" = \"X$dest\" && destdir=.\n      destname=`$echo \"X$dest\" | $Xsed -e 's%^.*/%%'`\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files\n      if test \"$#\" -gt 2; then\n\t$echo \"$modename: \\`$dest' is not a directory\" 1>&2\n\t$echo \"$help\" 1>&2\n\texit $EXIT_FAILURE\n      fi\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  $echo \"$modename: \\`$destdir' must be an absolute directory name\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tstaticlibs=\"$staticlibs $file\"\n\t;;\n\n      *.la)\n\t# Check to see that this really is a libtool archive.\n\tif (${SED} -e '2q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then :\n\telse\n\t  $echo \"$modename: \\`$file' is not a valid libtool archive\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\t# If there is no directory component, then add one.\n\tcase $file in\n\t*/* | *\\\\*) . $file ;;\n\t*) . ./$file ;;\n\tesac\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) current_libdirs=\"$current_libdirs $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) future_libdirs=\"$future_libdirs $libdir\" ;;\n\t  esac\n\tfi\n\n\tdir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`/\n\ttest \"X$dir\" = \"X$file/\" && dir=\n\tdir=\"$dir$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$echo \"$destdir\" | $SED \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  if test \"$inst_prefix_dir\" = \"$destdir\"; then\n\t    $echo \"$modename: error: cannot install \\`$file' to a directory not ending in $libdir\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$echo \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$echo \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  $echo \"$modename: warning: relinking \\`$file'\" 1>&2\n\t  $show \"$relink_command\"\n\t  if $run eval \"$relink_command\"; then :\n\t  else\n\t    $echo \"$modename: error: relink \\`$file' with the above command before installing it\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names\n\tif test -n \"$2\"; then\n\t  realname=\"$2\"\n\t  shift\n\t  shift\n\n\t  srcname=\"$realname\"\n\t  test -n \"$relink_command\" && srcname=\"$realname\"T\n\n\t  # Install the shared library and build the symlinks.\n\t  $show \"$install_prog $dir/$srcname $destdir/$realname\"\n\t  $run eval \"$install_prog $dir/$srcname $destdir/$realname\" || exit $?\n\t  if test -n \"$stripme\" && test -n \"$striplib\"; then\n\t    $show \"$striplib $destdir/$realname\"\n\t    $run eval \"$striplib $destdir/$realname\" || exit $?\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    for linkname\n\t    do\n\t      if test \"$linkname\" != \"$realname\"; then\n\t\t$show \"(cd $destdir && $rm $linkname && $LN_S $realname $linkname)\"\n\t\t$run eval \"(cd $destdir && $rm $linkname && $LN_S $realname $linkname)\"\n\t      fi\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=\"$destdir/$realname\"\n\t  cmds=$postinstall_cmds\n\t  save_ifs=\"$IFS\"; IFS='~'\n\t  for cmd in $cmds; do\n\t    IFS=\"$save_ifs\"\n\t    eval cmd=\\\"$cmd\\\"\n\t    $show \"$cmd\"\n\t    $run eval \"$cmd\" || exit $?\n\t  done\n\t  IFS=\"$save_ifs\"\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tname=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\tinstname=\"$dir/$name\"i\n\t$show \"$install_prog $instname $destdir/$name\"\n\t$run eval \"$install_prog $instname $destdir/$name\" || exit $?\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && staticlibs=\"$staticlibs $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  destfile=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  staticdest=`$echo \"X$destfile\" | $Xsed -e \"$lo2o\"`\n\t  ;;\n\t*.$objext)\n\t  staticdest=\"$destfile\"\n\t  destfile=\n\t  ;;\n\t*)\n\t  $echo \"$modename: cannot copy a libtool object to \\`$destfile'\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\tif test -n \"$destfile\"; then\n\t  $show \"$install_prog $file $destfile\"\n\t  $run eval \"$install_prog $file $destfile\" || exit $?\n\tfi\n\n\t# Install the old object if enabled.\n\tif test \"$build_old_libs\" = yes; then\n\t  # Deduce the name of the old-style object file.\n\t  staticobj=`$echo \"X$file\" | $Xsed -e \"$lo2o\"`\n\n\t  $show \"$install_prog $staticobj $staticdest\"\n\t  $run eval \"$install_prog \\$staticobj \\$staticdest\" || exit $?\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  destfile=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\"\"\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      file=`$echo $file|${SED} 's,.exe$,,'`\n\t      stripped_ext=\".exe\"\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin*|*mingw*)\n\t    wrapper=`$echo $file | ${SED} -e 's,.exe$,,'`\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif (${SED} -e '4q' $wrapper | grep \"^# Generated by .*$PACKAGE\")>/dev/null 2>&1; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  # To insure that \"foo\" is sourced, and not \"foo.exe\",\n\t  # finese the cygwin/MSYS system by explicitly sourcing \"foo.\"\n\t  # which disallows the automatic-append-.exe behavior.\n\t  case $build in\n\t  *cygwin* | *mingw*) wrapperdot=${wrapper}. ;;\n\t  *) wrapperdot=${wrapper} ;;\n\t  esac\n\t  # If there is no directory component, then add one.\n\t  case $file in\n\t  */* | *\\\\*) . ${wrapperdot} ;;\n\t  *) . ./${wrapperdot} ;;\n\t  esac\n\n\t  # Check the variables that should have been set.\n\t  if test -z \"$notinst_deplibs\"; then\n\t    $echo \"$modename: invalid libtool wrapper script \\`$wrapper'\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\n\t  finalize=yes\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      # If there is no directory component, then add one.\n\t      case $lib in\n\t      */* | *\\\\*) . $lib ;;\n\t      *) . ./$lib ;;\n\t      esac\n\t    fi\n\t    libfile=\"$libdir/\"`$echo \"X$lib\" | $Xsed -e 's%^.*/%%g'` ### testsuite: skip nested quoting test\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      $echo \"$modename: warning: \\`$lib' has not been installed in \\`$libdir'\" 1>&2\n\t      finalize=no\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  # To insure that \"foo\" is sourced, and not \"foo.exe\",\n\t  # finese the cygwin/MSYS system by explicitly sourcing \"foo.\"\n\t  # which disallows the automatic-append-.exe behavior.\n\t  case $build in\n\t  *cygwin* | *mingw*) wrapperdot=${wrapper}. ;;\n\t  *) wrapperdot=${wrapper} ;;\n\t  esac\n\t  # If there is no directory component, then add one.\n\t  case $file in\n\t  */* | *\\\\*) . ${wrapperdot} ;;\n\t  *) . ./${wrapperdot} ;;\n\t  esac\n\n\t  outputname=\n\t  if test \"$fast_install\" = no && test -n \"$relink_command\"; then\n\t    if test \"$finalize\" = yes && test -z \"$run\"; then\n\t      tmpdir=\"/tmp\"\n\t      test -n \"$TMPDIR\" && tmpdir=\"$TMPDIR\"\n\t      tmpdir=\"$tmpdir/libtool-$$\"\n\t      save_umask=`umask`\n\t      umask 0077\n\t      if $mkdir \"$tmpdir\"; then\n\t        umask $save_umask\n\t      else\n\t        umask $save_umask\n\t\t$echo \"$modename: error: cannot create temporary directory \\`$tmpdir'\" 1>&2\n\t\tcontinue\n\t      fi\n\t      file=`$echo \"X$file$stripped_ext\" | $Xsed -e 's%^.*/%%'`\n\t      outputname=\"$tmpdir/$file\"\n\t      # Replace the output file specification.\n\t      relink_command=`$echo \"X$relink_command\" | $Xsed -e 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t      $show \"$relink_command\"\n\t      if $run eval \"$relink_command\"; then :\n\t      else\n\t\t$echo \"$modename: error: relink \\`$file' with the above command before installing it\" 1>&2\n\t\t${rm}r \"$tmpdir\"\n\t\tcontinue\n\t      fi\n\t      file=\"$outputname\"\n\t    else\n\t      $echo \"$modename: warning: cannot relink \\`$file'\" 1>&2\n\t    fi\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$echo \"X$file$stripped_ext\" | $Xsed -e \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyways\n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    destfile=`$echo $destfile | ${SED} -e 's,.exe$,,'`\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\t$show \"$install_prog$stripme $file $destfile\"\n\t$run eval \"$install_prog\\$stripme \\$file \\$destfile\" || exit $?\n\ttest -n \"$outputname\" && ${rm}r \"$tmpdir\"\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      name=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\n      # Set up the ranlib parameters.\n      oldlib=\"$destdir/$name\"\n\n      $show \"$install_prog $file $oldlib\"\n      $run eval \"$install_prog \\$file \\$oldlib\" || exit $?\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\t$show \"$old_striplib $oldlib\"\n\t$run eval \"$old_striplib $oldlib\" || exit $?\n      fi\n\n      # Do each command in the postinstall commands.\n      cmds=$old_postinstall_cmds\n      save_ifs=\"$IFS\"; IFS='~'\n      for cmd in $cmds; do\n\tIFS=\"$save_ifs\"\n\teval cmd=\\\"$cmd\\\"\n\t$show \"$cmd\"\n\t$run eval \"$cmd\" || exit $?\n      done\n      IFS=\"$save_ifs\"\n    done\n\n    if test -n \"$future_libdirs\"; then\n      $echo \"$modename: warning: remember to run \\`$progname --finish$future_libdirs'\" 1>&2\n    fi\n\n    if test -n \"$current_libdirs\"; then\n      # Maybe just do a dry run.\n      test -n \"$run\" && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL $progpath $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n    ;;\n\n  # libtool finish mode\n  finish)\n    modename=\"$modename: finish\"\n    libdirs=\"$nonopt\"\n    admincmds=\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for dir\n      do\n\tlibdirs=\"$libdirs $dir\"\n      done\n\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  cmds=$finish_cmds\n\t  save_ifs=\"$IFS\"; IFS='~'\n\t  for cmd in $cmds; do\n\t    IFS=\"$save_ifs\"\n\t    eval cmd=\\\"$cmd\\\"\n\t    $show \"$cmd\"\n\t    $run eval \"$cmd\" || admincmds=\"$admincmds\n       $cmd\"\n\t  done\n\t  IFS=\"$save_ifs\"\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $run eval \"$cmds\" || admincmds=\"$admincmds\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    test \"$show\" = : && exit $EXIT_SUCCESS\n\n    $echo \"----------------------------------------------------------------------\"\n    $echo \"Libraries have been installed in:\"\n    for libdir in $libdirs; do\n      $echo \"   $libdir\"\n    done\n    $echo\n    $echo \"If you ever happen to want to link against installed libraries\"\n    $echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n    $echo \"specify the full pathname of the library, or use the \\`-LLIBDIR'\"\n    $echo \"flag during linking and do at least one of the following:\"\n    if test -n \"$shlibpath_var\"; then\n      $echo \"   - add LIBDIR to the \\`$shlibpath_var' environment variable\"\n      $echo \"     during execution\"\n    fi\n    if test -n \"$runpath_var\"; then\n      $echo \"   - add LIBDIR to the \\`$runpath_var' environment variable\"\n      $echo \"     during linking\"\n    fi\n    if test -n \"$hardcode_libdir_flag_spec\"; then\n      libdir=LIBDIR\n      eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\n      $echo \"   - use the \\`$flag' linker flag\"\n    fi\n    if test -n \"$admincmds\"; then\n      $echo \"   - have your system administrator run these commands:$admincmds\"\n    fi\n    if test -f /etc/ld.so.conf; then\n      $echo \"   - have your system administrator add LIBDIR to \\`/etc/ld.so.conf'\"\n    fi\n    $echo\n    $echo \"See any operating system documentation about shared libraries for\"\n    $echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n    $echo \"----------------------------------------------------------------------\"\n    exit $EXIT_SUCCESS\n    ;;\n\n  # libtool execute mode\n  execute)\n    modename=\"$modename: execute\"\n\n    # The first argument is the command name.\n    cmd=\"$nonopt\"\n    if test -z \"$cmd\"; then\n      $echo \"$modename: you must specify a COMMAND\" 1>&2\n      $echo \"$help\"\n      exit $EXIT_FAILURE\n    fi\n\n    # Handle -dlopen flags immediately.\n    for file in $execute_dlfiles; do\n      if test ! -f \"$file\"; then\n\t$echo \"$modename: \\`$file' is not a file\" 1>&2\n\t$echo \"$help\" 1>&2\n\texit $EXIT_FAILURE\n      fi\n\n      dir=\n      case $file in\n      *.la)\n\t# Check to see that this really is a libtool archive.\n\tif (${SED} -e '2q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then :\n\telse\n\t  $echo \"$modename: \\`$lib' is not a valid libtool archive\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\n\t# If there is no directory component, then add one.\n\tcase $file in\n\t*/* | *\\\\*) . $file ;;\n\t*) . ./$file ;;\n\tesac\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && $echo \"$modename: warning: \\`$file' was not linked with \\`-export-dynamic'\"\n\t  continue\n\tfi\n\n\tdir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`\n\ttest \"X$dir\" = \"X$file\" && dir=.\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  dir=\"$dir/$objdir\"\n\telse\n\t  $echo \"$modename: cannot find \\`$dlname' in \\`$dir' or \\`$dir/$objdir'\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tdir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`\n\ttest \"X$dir\" = \"X$file\" && dir=.\n\t;;\n\n      *)\n\t$echo \"$modename: warning \\`-dlopen' is ignored for non-libtool libraries and objects\" 1>&2\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=\"$absdir\"\n\n      # Now add the directory to shlibpath_var.\n      if eval \"test -z \\\"\\$$shlibpath_var\\\"\"; then\n\teval \"$shlibpath_var=\\\"\\$dir\\\"\"\n      else\n\teval \"$shlibpath_var=\\\"\\$dir:\\$$shlibpath_var\\\"\"\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=\"$magic\"\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -*) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif (${SED} -e '4q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t  # If there is no directory component, then add one.\n\t  case $file in\n\t  */* | *\\\\*) . $file ;;\n\t  *) . ./$file ;;\n\t  esac\n\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      file=`$echo \"X$file\" | $Xsed -e \"$sed_quote_subst\"`\n      args=\"$args \\\"$file\\\"\"\n    done\n\n    if test -z \"$run\"; then\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      if test \"${save_LC_ALL+set}\" = set; then\n\tLC_ALL=\"$save_LC_ALL\"; export LC_ALL\n      fi\n      if test \"${save_LANG+set}\" = set; then\n\tLANG=\"$save_LANG\"; export LANG\n      fi\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\"\\$cmd$args\"\n    else\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$echo \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\t$echo \"export $shlibpath_var\"\n      fi\n      $echo \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    fi\n    ;;\n\n  # libtool clean and uninstall mode\n  clean | uninstall)\n    modename=\"$modename: $mode\"\n    rm=\"$nonopt\"\n    files=\n    rmforce=\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    for arg\n    do\n      case $arg in\n      -f) rm=\"$rm $arg\"; rmforce=yes ;;\n      -*) rm=\"$rm $arg\" ;;\n      *) files=\"$files $arg\" ;;\n      esac\n    done\n\n    if test -z \"$rm\"; then\n      $echo \"$modename: you must specify an RM program\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    rmdirs=\n\n    origobjdir=\"$objdir\"\n    for file in $files; do\n      dir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`\n      if test \"X$dir\" = \"X$file\"; then\n\tdir=.\n\tobjdir=\"$origobjdir\"\n      else\n\tobjdir=\"$dir/$origobjdir\"\n      fi\n      name=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n      test \"$mode\" = uninstall && objdir=\"$dir\"\n\n      # Remember objdir for removal later, being careful to avoid duplicates\n      if test \"$mode\" = clean; then\n\tcase \" $rmdirs \" in\n\t  *\" $objdir \"*) ;;\n\t  *) rmdirs=\"$rmdirs $objdir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if (test -L \"$file\") >/dev/null 2>&1 \\\n\t|| (test -h \"$file\") >/dev/null 2>&1 \\\n\t|| test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif test \"$rmforce\" = yes; then\n\tcontinue\n      fi\n\n      rmfiles=\"$file\"\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif (${SED} -e '2q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t  . $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    rmfiles=\"$rmfiles $objdir/$n\"\n\t  done\n\t  test -n \"$old_library\" && rmfiles=\"$rmfiles $objdir/$old_library\"\n\t  test \"$mode\" = clean && rmfiles=\"$rmfiles $objdir/$name $objdir/${name}i\"\n\n\t  if test \"$mode\" = uninstall; then\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      cmds=$postuninstall_cmds\n\t      save_ifs=\"$IFS\"; IFS='~'\n\t      for cmd in $cmds; do\n\t\tIFS=\"$save_ifs\"\n\t\teval cmd=\\\"$cmd\\\"\n\t\t$show \"$cmd\"\n\t\t$run eval \"$cmd\"\n\t\tif test \"$?\" -ne 0 && test \"$rmforce\" != yes; then\n\t\t  exit_status=1\n\t\tfi\n\t      done\n\t      IFS=\"$save_ifs\"\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      cmds=$old_postuninstall_cmds\n\t      save_ifs=\"$IFS\"; IFS='~'\n\t      for cmd in $cmds; do\n\t\tIFS=\"$save_ifs\"\n\t\teval cmd=\\\"$cmd\\\"\n\t\t$show \"$cmd\"\n\t\t$run eval \"$cmd\"\n\t\tif test \"$?\" -ne 0 && test \"$rmforce\" != yes; then\n\t\t  exit_status=1\n\t\tfi\n\t      done\n\t      IFS=\"$save_ifs\"\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t  fi\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif (${SED} -e '2q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\n\t  # Read the .lo file\n\t  . $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" \\\n\t     && test \"$pic_object\" != none; then\n\t    rmfiles=\"$rmfiles $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" \\\n\t     && test \"$non_pic_object\" != none; then\n\t    rmfiles=\"$rmfiles $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test \"$mode\" = clean ; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    file=`$echo $file|${SED} 's,.exe$,,'`\n\t    noexename=`$echo $name|${SED} 's,.exe$,,'`\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    rmfiles=\"$rmfiles $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if (${SED} -e '4q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t    relink_command=\n\t    . $dir/$noexename\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    rmfiles=\"$rmfiles $objdir/$name $objdir/${name}S.${objext}\"\n\t    if test \"$fast_install\" = yes && test -n \"$relink_command\"; then\n\t      rmfiles=\"$rmfiles $objdir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\" ; then\n\t      rmfiles=\"$rmfiles $objdir/lt-${noexename}.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      $show \"$rm $rmfiles\"\n      $run $rm $rmfiles || exit_status=1\n    done\n    objdir=\"$origobjdir\"\n\n    # Try to remove the ${objdir}s in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\t$show \"rmdir $dir\"\n\t$run rmdir $dir >/dev/null 2>&1\n      fi\n    done\n\n    exit $exit_status\n    ;;\n\n  \"\")\n    $echo \"$modename: you must specify a MODE\" 1>&2\n    $echo \"$generic_help\" 1>&2\n    exit $EXIT_FAILURE\n    ;;\n  esac\n\n  if test -z \"$exec_cmd\"; then\n    $echo \"$modename: invalid operation mode \\`$mode'\" 1>&2\n    $echo \"$generic_help\" 1>&2\n    exit $EXIT_FAILURE\n  fi\nfi # test -z \"$show_help\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec $exec_cmd\n  exit $EXIT_FAILURE\nfi\n\n# We need to display help for each of the modes.\ncase $mode in\n\"\") $echo \\\n\"Usage: $modename [OPTION]... [MODE-ARG]...\n\nProvide generalized library-building support services.\n\n    --config          show all configuration variables\n    --debug           enable verbose shell tracing\n-n, --dry-run         display commands without modifying any files\n    --features        display basic configuration information and exit\n    --finish          same as \\`--mode=finish'\n    --help            display this help message and exit\n    --mode=MODE       use operation mode MODE [default=inferred from MODE-ARGS]\n    --quiet           same as \\`--silent'\n    --silent          don't print informational messages\n    --tag=TAG         use configuration variables from tag TAG\n    --version         print version information\n\nMODE must be one of the following:\n\n      clean           remove files from the build directory\n      compile         compile a source file into a libtool object\n      execute         automatically set library path, then run a program\n      finish          complete the installation of libtool libraries\n      install         install libraries or executables\n      link            create a library or an executable\n      uninstall       remove libraries from an installed directory\n\nMODE-ARGS vary depending on the MODE.  Try \\`$modename --help --mode=MODE' for\na more detailed description of MODE.\n\nReport bugs to <bug-libtool@gnu.org>.\"\n  exit $EXIT_SUCCESS\n  ;;\n\nclean)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n  ;;\n\ncompile)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -prefer-pic       try to building PIC objects only\n  -prefer-non-pic   try to building non-PIC objects only\n  -static           always build a \\`.o' file suitable for static linking\n\nCOMPILE-COMMAND is a command to be used in creating a \\`standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix \\`.c' with the\nlibrary object suffix, \\`.lo'.\"\n  ;;\n\nexecute)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to \\`-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n  ;;\n\nfinish)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe \\`--dry-run' option if you just want to see what would be executed.\"\n  ;;\n\ninstall)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the \\`install' or \\`cp' program.\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n  ;;\n\nlink)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -dlopen FILE      \\`-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n\t\t    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n\t\t    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  Use a list of object files found in FILE to specify objects\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -static           do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n\t\t    specify library version info [each variable defaults to 0]\n\nAll other options (arguments beginning with \\`-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in \\`.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in \\`.la', then a libtool library is created,\nonly library objects (\\`.lo' files) may be specified, and \\`-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in \\`.a' or \\`.lib', then a standard library is created\nusing \\`ar' and \\`ranlib', or on Windows using \\`lib'.\n\nIf OUTPUT-FILE ends in \\`.lo' or \\`.${objext}', then a reloadable object file\nis created, otherwise an executable program is created.\"\n  ;;\n\nuninstall)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n  ;;\n\n*)\n  $echo \"$modename: invalid operation mode \\`$mode'\" 1>&2\n  $echo \"$help\" 1>&2\n  exit $EXIT_FAILURE\n  ;;\nesac\n\n$echo\n$echo \"Try \\`$modename --help' for more information about other modes.\"\n\nexit $?\n\n# The TAGs below are defined such that we never get into a situation\n# in which we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\nbuild_libtool_libs=no\nbuild_old_libs=yes\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\nbuild_old_libs=`case $build_libtool_libs in yes) $echo no;; *) $echo yes;; esac`\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/java/lang/natRuntime.cc": "// natRuntime.cc - Implementation of native side of Runtime class.\n\n/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007  Free Software Foundation\n\n   This file is part of libgcj.\n\nThis software is copyrighted work licensed under the terms of the\nLibgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\ndetails.  */\n\n#include <config.h>\n#include <platform.h>\n\n#include <stdlib.h>\n\n#include <gcj/cni.h>\n#include <jvm.h>\n#include <java-props.h>\n#include <java-stack.h>\n#include <java/lang/Long.h>\n#include <java/lang/Runtime.h>\n#include <java/lang/UnknownError.h>\n#include <java/lang/UnsatisfiedLinkError.h>\n#include <gnu/gcj/runtime/FinalizerThread.h>\n#include <java/io/File.h>\n#include <java/util/TimeZone.h>\n#include <java/lang/StringBuffer.h>\n#include <java/lang/Process.h>\n#include <java/lang/ClassLoader.h>\n\n// It is convenient and safe to simply include all of these.\n#include <java/lang/Win32Process.h>\n#include <java/lang/EcosProcess.h>\n#include <java/lang/PosixProcess.h>\n\n#include <jni.h>\n\n#ifdef HAVE_PWD_H\n#include <pwd.h>\n#endif\n#include <errno.h>\n\n#ifdef HAVE_LOCALE_H\n#include <locale.h>\n#endif\n\n#ifdef HAVE_LANGINFO_H\n#include <langinfo.h>\n#endif\n\n\f\n\n#ifdef USE_LTDL\n#include <ltdl.h>\n\n/* FIXME: we don't always need this.  The next libtool will let us use\n   AC_LTDL_PREOPEN to see if we do.  */\nextern const lt_dlsymlist lt_preloaded_symbols[1] = { { 0, 0 } };\n\nstruct lookup_data\n{\n  const char *symname;\n  void *result;\n};\n\nstatic int\nfind_symbol (lt_dlhandle handle, lt_ptr data)\n{\n  lookup_data *ld = (lookup_data *) data;\n  ld->result = lt_dlsym (handle, ld->symname);\n  return ld->result != NULL;\n}\n\nvoid *\n_Jv_FindSymbolInExecutable (const char *symname)\n{\n  lookup_data data;\n  data.symname = symname;\n  data.result = NULL;\n  lt_dlforeach (find_symbol, (lt_ptr) &data);\n  return data.result;\n}\n\n#else\n\nvoid *\n_Jv_FindSymbolInExecutable (const char *)\n{\n  return NULL;\n}\n\n#endif /* USE_LTDL */\n\n\f\n\nvoid\njava::lang::Runtime::runFinalizationForExit ()\n{\n  if (finalizeOnExit)\n    _Jv_RunAllFinalizers ();\n}\n\nvoid\njava::lang::Runtime::exitInternal (jint status)\n{\n  // Make status right for Unix.  This is perhaps strange.\n  if (status < 0 || status > 255)\n    status = 255;\n\n  ::exit (status);\n}\n\njlong\njava::lang::Runtime::freeMemory (void)\n{\n  return _Jv_GCFreeMemory ();\n}\n\nvoid\njava::lang::Runtime::gc (void)\n{\n  _Jv_RunGC ();\n}\n\n#ifdef USE_LTDL\n// List of names for JNI_OnLoad.\nstatic const char *onload_names[] = _Jv_platform_onload_names;\n#endif\n\nvoid\njava::lang::Runtime::_load (jstring path, jboolean do_search)\n{\n  JvSynchronize sync (this);\n  using namespace java::lang;\n#ifdef USE_LTDL\n  jint len = _Jv_GetStringUTFLength (path);\n  char buf[len + 1 + strlen (_Jv_platform_solib_prefix)\n\t   + strlen (_Jv_platform_solib_suffix)];\n  int offset = 0;\n  if (do_search)\n    {\n      strcpy (buf, _Jv_platform_solib_prefix);\n      offset = strlen (_Jv_platform_solib_prefix);\n    }\n  jsize total = JvGetStringUTFRegion (path, 0, path->length(), &buf[offset]);\n  buf[offset + total] = '\\0';\n\n  char *lib_name = buf;\n\n  if (do_search)\n    {\n      ClassLoader *look = _Jv_StackTrace::GetFirstNonSystemClassLoader ();\n\n      if (look != NULL)\n\t{\n\t  // Don't include solib prefix in string passed to\n\t  // findLibrary.\n\t  jstring name = look->findLibrary(JvNewStringUTF(&buf[offset]));\n\t  if (name != NULL)\n\t    {\n\t      len = _Jv_GetStringUTFLength (name);\n\t      lib_name = (char *) _Jv_AllocBytes(len + 1);\n\t      total = JvGetStringUTFRegion (name, 0,\n\t\t\t\t\t    name->length(), lib_name);\n\t      lib_name[total] = '\\0';\n\t      // Don't append suffixes any more; we have the full file\n\t      // name.\n\t      do_search = false;\n\t    }\n\t}\n    }\n\n  lt_dlhandle h;\n  // FIXME: make sure path is absolute.\n  {\n    // Synchronize on java.lang.Class. This is to protect the class chain from\n    // concurrent modification by class registration calls which may be run\n    // during the dlopen().\n    JvSynchronize sync (&java::lang::Class::class$);\n    h = do_search ? lt_dlopenext (lib_name) : lt_dlopen (lib_name);\n  }\n  if (h == NULL)\n    {\n      const char *msg = lt_dlerror ();\n      jstring str = JvNewStringLatin1 (lib_name);\n      str = str->concat (JvNewStringLatin1 (\": \"));\n      str = str->concat (JvNewStringLatin1 (msg));\n      throw new UnsatisfiedLinkError (str);\n    }\n\n  // Search for JNI_OnLoad function.\n  void *onload = NULL;\n  const char **name = onload_names;\n  while (*name != NULL)\n    {\n      onload = lt_dlsym (h, *name);\n      if (onload != NULL)\n\tbreak;\n      ++name;\n    }\n\n  if (onload != NULL)\n    {\n      JavaVM *vm = _Jv_GetJavaVM ();\n      if (vm == NULL)\n\t{\n\t  // FIXME: what?\n\t  return;\n\t}\n\n      // Push a new frame so that JNI_OnLoad will get the right class\n      // loader if it calls FindClass.\n      ::java::lang::ClassLoader *loader\n\t  = _Jv_StackTrace::GetFirstNonSystemClassLoader();\n      JNIEnv *env = _Jv_GetJNIEnvNewFrameWithLoader (loader);\n      jint vers = ((jint (JNICALL *) (JavaVM *, void *)) onload) (vm, NULL);\n      _Jv_JNI_PopSystemFrame (env);\n      if (vers != JNI_VERSION_1_1 && vers != JNI_VERSION_1_2\n\t  && vers != JNI_VERSION_1_4)\n\t{\n\t  // FIXME: unload the library.\n\t  throw new UnsatisfiedLinkError (JvNewStringLatin1 (\"unrecognized version from JNI_OnLoad\"));\n\t}\n    }\n#else\n  throw new UnknownError\n    (JvNewStringLatin1 (do_search\n\t\t\t? \"Runtime.loadLibrary not implemented\"\n\t\t\t: \"Runtime.load not implemented\"));\n#endif /* USE_LTDL */\n}\n\njboolean\njava::lang::Runtime::loadLibraryInternal (jstring lib)\n{\n  JvSynchronize sync (this);\n  using namespace java::lang;\n#ifdef USE_LTDL\n  jint len = _Jv_GetStringUTFLength (lib);\n  char buf[len + 1];\n  jsize total = JvGetStringUTFRegion (lib, 0, lib->length(), buf);\n  buf[total] = '\\0';\n  // FIXME: make sure path is absolute.\n  lt_dlhandle h = lt_dlopenext (buf);\n  return h != NULL;\n#else\n  return false;\n#endif /* USE_LTDL */\n}\n\nvoid\njava::lang::Runtime::init (void)\n{\n#ifdef USE_LTDL\n  lt_dlinit ();\n  // Set module load path.\n  lt_dlsetsearchpath (_Jv_Module_Load_Path);\n  // Make sure self is opened.\n  lt_dlopen (NULL);\n#endif\n}\n\nvoid\njava::lang::Runtime::runFinalization (void)\n{\n  gnu::gcj::runtime::FinalizerThread::finalizerReady ();\n}\n\njlong\njava::lang::Runtime::totalMemory (void)\n{\n  return _Jv_GCTotalMemory ();\n}\n\njlong\njava::lang::Runtime::maxMemory (void)\n{\n  // We don't have a maximum.  FIXME: we might if we ask the GC for\n  // one.\n  return Long::MAX_VALUE;\n}\n\nvoid\njava::lang::Runtime::traceInstructions (jboolean)\n{\n  // Do nothing.\n}\n\nvoid\njava::lang::Runtime::traceMethodCalls (jboolean)\n{\n  // Do nothing.\n}\n\njava::lang::Process *\njava::lang::Runtime::execInternal (jstringArray cmd,\n\t\t\t\t   jstringArray env,\n\t\t\t\t   java::io::File *dir)\n{\n  return new _Jv_platform_process (cmd, env, dir, false);\n}\n\njint\njava::lang::Runtime::availableProcessors (void)\n{\n  // FIXME: find the real value.\n  return 1;\n}\n\njstring\njava::lang::Runtime::nativeGetLibname (jstring pathname, jstring libname)\n{\n  java::lang::StringBuffer *sb = new java::lang::StringBuffer ();\n  sb->append(pathname);\n  if (pathname->length() > 0)\n    sb->append (_Jv_platform_file_separator);\n\n  sb->append (JvNewStringLatin1 (_Jv_platform_solib_prefix));\n  sb->append(libname);\n  sb->append (JvNewStringLatin1 (_Jv_platform_solib_suffix));\n\n  return sb->toString();\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/java/net/natVMURLConnection.cc": "/* Copyright (C) 2006, 2007  Free Software Foundation\n\n   This file is part of libgcj.\n\nThis software is copyrighted work licensed under the terms of the\nLibgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\ndetails.  */\n\n#include <config.h>\n\n#include <java/net/VMURLConnection.h>\n#include <gcj/cni.h>\n#include <java/lang/UnsupportedOperationException.h>\n#include <stdio.h>\n\n#if defined (HAVE_MAGIC_T) && defined (HAVE_MAGIC_H) && defined (USE_LTDL)\n\n#include <magic.h>\n#include <ltdl.h>\n\nstatic magic_t cookie;\n\nstatic magic_t (*p_magic_open)(int flags);\nstatic int (*p_magic_load)(magic_t cookie, const char *filename);\nstatic void (*p_magic_close)(magic_t cookie);\nstatic const char * (*p_magic_buffer) (magic_t cookie, const void *buffer,\n\t\t\t\t       size_t length);\n\n#endif /* HAVE_MAGIC_T && HAVE_MAGIC_H && defined (USE_LTDL) */\n\nvoid\njava::net::VMURLConnection::init ()\n{\n#if defined (HAVE_MAGIC_T) && defined (HAVE_MAGIC_H) && defined (USE_LTDL)\n  lt_dlhandle handle = lt_dlopenext (\"libmagic.so\");\n  if (!handle)\n    return;\n\n  p_magic_open = (typeof (p_magic_open))lt_dlsym(handle, \"magic_open\");\n  if (p_magic_open == NULL)\n    return;\n  p_magic_buffer = (typeof (p_magic_buffer))lt_dlsym(handle, \"magic_buffer\");\n  if (p_magic_buffer == NULL)\n    return;\n  p_magic_close = (typeof (p_magic_close))lt_dlsym(handle, \"magic_close\");\n  if (p_magic_close == NULL)\n    return;\n  p_magic_load = (typeof (p_magic_load))lt_dlsym(handle, \"magic_load\");\n  if (p_magic_load == NULL)\n    return;\n\n  cookie = p_magic_open (MAGIC_MIME);\n  if (cookie == (magic_t) NULL)\n    return;\n  if (p_magic_load (cookie, NULL) == -1)\n    {\n      p_magic_close (cookie);\n      cookie = (magic_t) NULL;\n    }\n#endif /* HAVE_MAGIC_T && HAVE_MAGIC_H  && defined (USE_LTDL) */\n}\n\n::java::lang::String *\njava::net::VMURLConnection::guessContentTypeFromBuffer (jbyteArray bytes __attribute__ ((unused)),\n\t\t\t\t\t\t\tjint valid __attribute__ ((unused)))\n{\n#if defined (HAVE_MAGIC_T) && defined (HAVE_MAGIC_H) && defined (USE_LTDL)\n  const char *result;\n\n  if (cookie == (magic_t) NULL)\n    return NULL;\n\n  result = p_magic_buffer (cookie, elements(bytes), valid);\n\n  if (result == NULL)\n    return NULL;\n  return _Jv_NewStringUTF (result);\n#else\n  return NULL;\n#endif /* HAVE_MAGIC_T && HAVE_MAGIC_H  && defined (USE_LTDL) */\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/testsuite/ext/mt_allocator/22309_thread.cc": "// { dg-require-sharedlib \"\" }\n// { dg-options \"-g -O2 -pthread -ldl\" { target *-*-linux* } }\n\n// Copyright (C) 2004-2013 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <dlfcn.h>\n#include <pthread.h>\n#include <cstdlib>\n#include <stdexcept>\n\nvoid\ncheck_dlopen(void*& h)\n{\n  dlerror();\n  void* tmp = dlopen(\"./testsuite_shared.so\", RTLD_LAZY);\n  if (!tmp) \n    {\n      try \n\t{\n\t  // Throws std::logic_error on NULL string.\n\t  std::string error(dlerror());\n\t  throw std::runtime_error(error);\n\t}\n      catch (const std::logic_error&)\n\t{ }\n    }\n  h = tmp;\n}\n\nvoid\ncheck_dlsym(void*& h)\n{\n  dlerror();\n\n  typedef void (*function_type) (void);\n  function_type fn;\n  fn = reinterpret_cast<function_type>(dlsym(h, \"try_allocation\"));\n\n  try \n    {\n      std::string error(dlerror());\n      throw std::runtime_error(error);\n    }\n  catch (const std::logic_error&)\n    { }\n\n  fn();\n}\n\nvoid\ncheck_dlclose(void*& h)\n{\n  dlerror();\n  if (dlclose(h) != 0)\n    {\n      try \n\t{\n\t  std::string error(dlerror());\n\t  throw std::runtime_error(error);\n\t}\n      catch (const std::logic_error&)\n\t{ }\n    }\n}\n\nvoid*\ntf(void* arg)\n{\n  void* h;\n  check_dlopen(h);\n  check_dlsym(h);\n  check_dlclose(h);\n  return 0;\n}\n\n// libstdc++/22309\nint\nmain (void)\n{\n  pthread_t th;\n  pthread_create(&th, 0, tf, 0);\n  pthread_join(th, 0);\n  return 0;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/testsuite/18_support/bad_exception/23591_thread-1.c": "// { dg-require-sharedlib \"\" }\n// { dg-options \"-g -O2 -pthread -ldl -x c\" { target *-*-linux* } }\n\n// Copyright (C) 2005-2013 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// <http://www.gnu.org/licenses/>.\n\n#include <pthread.h>\n#include <dlfcn.h>\n#include <errno.h>\n#include <stdio.h>\n#include <string.h>\n\n// NB: This must be compiled and linked as a \"C\" executable.\nstatic void* run(void* arg)\n{\n  typedef void (*function_type) (void);\n  void* lib;\n  void (*cb)();\n\n  lib = dlopen(\"./testsuite_shared.so\", RTLD_NOW);\n  if (!lib)\n    {\n      printf(\"dlopen failed: %s\\n\", strerror(errno));\n      return 0;\n    }\n  cb = (function_type) dlsym(lib, \"try_throw_exception\");\n  if (!cb)\n    {\n      printf(\"dlsym failed: %s\\n\", strerror(errno));\n      return 0;\n    }\n  cb();\n  dlclose(lib);\n  return 0;\n}\n\n// libstdc++/23591\nint main(void)\n{\n  pthread_t pt;\n\n  if (pthread_create(&pt, 0, &run, 0) != 0)\n    return 1;\n  if (pthread_join(pt, 0) != 0)\n    return 1;\n\n  return 0;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libmudflap/mf-runtime.h": "/* Implementation header for mudflap runtime library.\n   Mudflap: narrow-pointer bounds-checking by tree rewriting.\n   Copyright (C) 2002-2013 Free Software Foundation, Inc.\n   Contributed by Frank Ch. Eigler <fche@redhat.com>\n   and Graydon Hoare <graydon@redhat.com>\n\nThis file is part of GCC.\n\nGCC is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free\nSoftware Foundation; either version 3, or (at your option) any later\nversion.\n\nGCC is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\nfor more details.\n\nUnder Section 7 of GPL version 3, you are granted additional\npermissions described in the GCC Runtime Library Exception, version\n3.1, as published by the Free Software Foundation.\n\nYou should have received a copy of the GNU General Public License and\na copy of the GCC Runtime Library Exception along with this program;\nsee the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n<http://www.gnu.org/licenses/>.  */\n\n/* Public libmudflap declarations -*- C -*- */\n\n#ifndef MF_RUNTIME_H\n#define MF_RUNTIME_H\n\ntypedef void *__mf_ptr_t;\ntypedef unsigned int __mf_uintptr_t __attribute__ ((__mode__ (__pointer__)));\ntypedef __SIZE_TYPE__ __mf_size_t;\n\n/* Global declarations used by instrumentation.  When _MUDFLAP is\n   defined, these have been auto-declared by the compiler and we\n   should not declare them again (ideally we *would* declare them\n   again, to verify that the compiler's declarations match the\n   library's, but the C++ front end has no mechanism for allowing\n   the re-definition of a structure type).  */\n#ifndef _MUDFLAP\nstruct __mf_cache { __mf_uintptr_t low; __mf_uintptr_t high; };\nextern struct __mf_cache __mf_lookup_cache [];\nextern __mf_uintptr_t __mf_lc_mask;\nextern unsigned char __mf_lc_shift;\n#endif\n\n/* Multithreading support.  */\n#ifdef _MUDFLAPTH\n/* extern pthread_mutex_t __mf_biglock; */\n#ifndef _REENTRANT\n#define _REENTRANT\n#endif\n#ifndef _THREAD_SAFE\n#define _THREAD_SAFE\n#endif\n#endif\n\n/* Codes to describe the type of access to check: __mf_check arg 3 */\n\n#define __MF_CHECK_READ 0\n#define __MF_CHECK_WRITE 1\n\n\n/* Codes to describe a region of memory being registered: __mf_*register arg 3 */\n\n#define __MF_TYPE_NOACCESS 0\n#define __MF_TYPE_HEAP 1\n#define __MF_TYPE_HEAP_I 2\n#define __MF_TYPE_STACK 3\n#define __MF_TYPE_STATIC 4\n#define __MF_TYPE_GUESS 5\n\n\n/* The public mudflap API */\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\nextern void __mf_check (void *ptr, __mf_size_t sz, int type, const char *location)\n       __attribute((nothrow));\nextern void __mf_register (void *ptr, __mf_size_t sz, int type, const char *name)\n       __attribute((nothrow));\nextern void __mf_unregister (void *ptr, __mf_size_t sz, int type)\n       __attribute((nothrow));\nextern unsigned __mf_watch (void *ptr, __mf_size_t sz);\nextern unsigned __mf_unwatch (void *ptr, __mf_size_t sz);\nextern void __mf_report ();\nextern int __mf_set_options (const char *opts);\n\n\n/* Redirect some standard library functions to libmudflap.  These are\n   done by simple #define rather than linker wrapping, since only\n   instrumented modules are meant to be affected.  */\n\n#ifdef _MUDFLAP\n#pragma redefine_extname memcpy __mfwrap_memcpy\n#pragma redefine_extname memmove __mfwrap_memmove\n#pragma redefine_extname memset __mfwrap_memset\n#pragma redefine_extname memcmp __mfwrap_memcmp\n#pragma redefine_extname memchr __mfwrap_memchr\n#pragma redefine_extname memrchr __mfwrap_memrchr\n#pragma redefine_extname strcpy __mfwrap_strcpy\n#pragma redefine_extname strncpy __mfwrap_strncpy\n#pragma redefine_extname strcat __mfwrap_strcat\n#pragma redefine_extname strncat __mfwrap_strncat\n#pragma redefine_extname strcmp __mfwrap_strcmp\n#pragma redefine_extname strcasecmp __mfwrap_strcasecmp\n#pragma redefine_extname strncmp __mfwrap_strncmp\n#pragma redefine_extname strncasecmp __mfwrap_strncasecmp\n#pragma redefine_extname strdup __mfwrap_strdup\n#pragma redefine_extname strndup __mfwrap_strndup\n#pragma redefine_extname strchr __mfwrap_strchr\n#pragma redefine_extname strrchr __mfwrap_strrchr\n#pragma redefine_extname strstr __mfwrap_strstr\n#pragma redefine_extname memmem __mfwrap_memmem\n#pragma redefine_extname strlen __mfwrap_strlen\n#pragma redefine_extname strnlen __mfwrap_strnlen\n#pragma redefine_extname bzero __mfwrap_bzero\n#pragma redefine_extname bcopy __mfwrap_bcopy\n#pragma redefine_extname bcmp __mfwrap_bcmp\n#pragma redefine_extname index __mfwrap_index\n#pragma redefine_extname rindex __mfwrap_rindex\n#pragma redefine_extname asctime __mfwrap_asctime\n#pragma redefine_extname ctime __mfwrap_ctime\n#pragma redefine_extname gmtime __mfwrap_gmtime\n#pragma redefine_extname localtime __mfwrap_localtime\n#pragma redefine_extname time __mfwrap_time\n#pragma redefine_extname strerror __mfwrap_strerror\n#pragma redefine_extname fopen __mfwrap_fopen\n#pragma redefine_extname fdopen __mfwrap_fdopen\n#pragma redefine_extname freopen __mfwrap_freopen\n#pragma redefine_extname fclose __mfwrap_fclose\n#pragma redefine_extname fread __mfwrap_fread\n#pragma redefine_extname fwrite __mfwrap_fwrite\n#pragma redefine_extname fgetc __mfwrap_fgetc\n#pragma redefine_extname fgets __mfwrap_fgets\n#pragma redefine_extname getc __mfwrap_getc\n#pragma redefine_extname gets __mfwrap_gets\n#pragma redefine_extname ungetc __mfwrap_ungetc\n#pragma redefine_extname fputc __mfwrap_fputc\n#pragma redefine_extname fputs __mfwrap_fputs\n#pragma redefine_extname putc __mfwrap_putc\n#pragma redefine_extname puts __mfwrap_puts\n#pragma redefine_extname clearerr __mfwrap_clearerr\n#pragma redefine_extname feof __mfwrap_feof\n#pragma redefine_extname ferror __mfwrap_ferror\n#pragma redefine_extname fileno __mfwrap_fileno\n#pragma redefine_extname printf __mfwrap_printf\n#pragma redefine_extname fprintf __mfwrap_fprintf\n#pragma redefine_extname sprintf __mfwrap_sprintf\n#pragma redefine_extname snprintf __mfwrap_snprintf\n#pragma redefine_extname vprintf __mfwrap_vprintf\n#pragma redefine_extname vfprintf __mfwrap_vfprintf\n#pragma redefine_extname vsprintf __mfwrap_vsprintf\n#pragma redefine_extname vsnprintf __mfwrap_vsnprintf\n#pragma redefine_extname access __mfwrap_access\n#pragma redefine_extname remove __mfwrap_remove\n#pragma redefine_extname fflush __mfwrap_fflush\n#pragma redefine_extname fseek __mfwrap_fseek\n#pragma redefine_extname ftell __mfwrap_ftell\n#pragma redefine_extname rewind __mfwrap_rewind\n#pragma redefine_extname fgetpos __mfwrap_fgetpos\n#pragma redefine_extname fsetpos __mfwrap_fsetpos\n#pragma redefine_extname stat __mfwrap_stat\n#pragma redefine_extname fstat __mfwrap_fstat\n#pragma redefine_extname lstat __mfwrap_lstat\n#pragma redefine_extname mkfifo __mfwrap_mkfifo\n#pragma redefine_extname setvbuf __mfwrap_setvbuf\n#pragma redefine_extname setbuf __mfwrap_setbuf\n#pragma redefine_extname setbuffer __mfwrap_setbuffer\n#pragma redefine_extname setlinebuf __mfwrap_setlinebuf\n#pragma redefine_extname opendir __mfwrap_opendir\n#pragma redefine_extname closedir __mfwrap_closedir\n#pragma redefine_extname readdir __mfwrap_readdir\n#pragma redefine_extname recv __mfwrap_recv\n#pragma redefine_extname recvfrom __mfwrap_recvfrom\n#pragma redefine_extname recvmsg __mfwrap_recvmsg\n#pragma redefine_extname send __mfwrap_send\n#pragma redefine_extname sendto __mfwrap_sendto\n#pragma redefine_extname sendmsg __mfwrap_sendmsg\n#pragma redefine_extname setsockopt __mfwrap_setsockopt\n#pragma redefine_extname getsockopt __mfwrap_getsockopt\n#pragma redefine_extname accept __mfwrap_accept\n#pragma redefine_extname bind __mfwrap_bind\n#pragma redefine_extname connect __mfwrap_connect\n#pragma redefine_extname gethostname __mfwrap_gethostname\n#pragma redefine_extname sethostname __mfwrap_sethostname\n#pragma redefine_extname gethostbyname __mfwrap_gethostbyname\n#pragma redefine_extname wait __mfwrap_wait\n#pragma redefine_extname waitpid __mfwrap_waitpid\n#pragma redefine_extname popen __mfwrap_popen\n#pragma redefine_extname pclose __mfwrap_pclose\n#pragma redefine_extname execve __mfwrap_execve\n#pragma redefine_extname execv __mfwrap_execv\n#pragma redefine_extname execvp __mfwrap_execvp\n#pragma redefine_extname system __mfwrap_system\n#pragma redefine_extname dlopen __mfwrap_dlopen\n#pragma redefine_extname dlerror __mfwrap_dlerror\n#pragma redefine_extname dlsym __mfwrap_dlsym\n#pragma redefine_extname dlclose __mfwrap_dlclose\n#pragma redefine_extname fopen64 __mfwrap_fopen64\n#pragma redefine_extname freopen64 __mfwrap_freopen64\n#pragma redefine_extname stat64 __mfwrap_stat64\n#pragma redefine_extname fseeko64 __mfwrap_fseeko64\n#pragma redefine_extname ftello64 __mfwrap_ftello64\n#pragma redefine_extname semop __mfwrap_semop\n#pragma redefine_extname semctl __mfwrap_semctl\n#pragma redefine_extname shmctl __mfwrap_shmctl\n#pragma redefine_extname shmat __mfwrap_shmat\n#pragma redefine_extname shmdt __mfwrap_shmdt\n#pragma redefine_extname __ctype_b_loc __mfwrap___ctype_b_loc\n#pragma redefine_extname __ctype_toupper_loc __mfwrap___ctype_toupper_loc\n#pragma redefine_extname __ctype_tolower_loc __mfwrap___ctype_tolower_loc\n#pragma redefine_extname getlogin __mfwrap_getlogin\n#pragma redefine_extname cuserid __mfwrap_cuserid\n#pragma redefine_extname getpwnam __mfwrap_getpwnam\n#pragma redefine_extname getpwuid __mfwrap_getpwuid\n#pragma redefine_extname getgrnam __mfwrap_getgrnam\n#pragma redefine_extname getgrgid __mfwrap_getgrgid\n#pragma redefine_extname getservent __mfwrap_getservent\n#pragma redefine_extname getservbyname __mfwrap_getservbyname\n#pragma redefine_extname getservbyport __mfwrap_getservbyport\n#pragma redefine_extname gai_strerror __mfwrap_gai_strerror\n#pragma redefine_extname getmntent __mfwrap_getmntent\n#pragma redefine_extname inet_ntoa __mfwrap_inet_ntoa\n#pragma redefine_extname getprotoent __mfwrap_getprotoent\n#pragma redefine_extname getprotobyname __mfwrap_getprotobyname\n#pragma redefine_extname getprotobynumber __mfwrap_getprotobynumber\n\n/* Disable glibc macros.  */\n#define __NO_STRING_INLINES\n\n#endif /* _MUDFLAP */\n\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif /* MF_RUNTIME_H */\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libmudflap/configure.ac": "# Process this file with autoconf to produce a configure script, like so:\n# aclocal -I .. -I ../config && autoconf && autoheader && automake\n\nAC_PREREQ(2.64)\nAC_INIT(libmudflap, 1.0)\nAC_CONFIG_SRCDIR(mf-runtime.c)\nAC_CANONICAL_SYSTEM\nACX_NONCANONICAL_TARGET\n\nAM_INIT_AUTOMAKE([no-dist])\n\nAC_MSG_CHECKING([for --enable-version-specific-runtime-libs])\nAC_ARG_ENABLE(version-specific-runtime-libs,\n[  --enable-version-specific-runtime-libs    Specify that runtime libraries should be installed in a compiler-specific directory ],\n[case \"$enableval\" in\n yes) version_specific_libs=yes ;;\n no)  version_specific_libs=no ;;\n *)   AC_MSG_ERROR([Unknown argument to enable/disable version-specific libs]);;\n esac],\n[version_specific_libs=no])\nAC_MSG_RESULT($version_specific_libs)\n\nAM_MAINTAINER_MODE\nAC_EXEEXT\n\nAM_ENABLE_MULTILIB(, ..)\n\ntarget_alias=${target_alias-$host_alias}\nAC_SUBST(target_alias)\n\nAC_CONFIG_HEADERS(config.h)\n\nAC_LANG_C\n# The same as in boehm-gc and libstdc++. Have to borrow it from there.\n# We must force CC to /not/ be precious variables; otherwise\n# the wrong, non-multilib-adjusted value will be used in multilibs.\n# As a side effect, we have to subst CFLAGS ourselves.\n\nm4_rename([_AC_ARG_VAR_PRECIOUS],[real_PRECIOUS])\nm4_define([_AC_ARG_VAR_PRECIOUS],[])\nAC_PROG_CC\nm4_rename_force([real_PRECIOUS],[_AC_ARG_VAR_PRECIOUS])\n\nAC_SUBST(CFLAGS)\n\nif test \"x$GCC\" != \"xyes\"; then\n  AC_MSG_ERROR([libmudflap must be built with GCC])\nfi\nAC_PROG_CPP\n\n# Some hosts don't have dlsym(RTLD_NEXT, \"symbol\") for use in\n# symbol interposition.  We disable shared libraries for these.\nAC_MSG_CHECKING([whether dlsym(RTLD_NEXT,...) is available])\nAC_TRY_COMPILE([\n#define _GNU_SOURCE\n#include <dlfcn.h>\n],\n[void *foo = dlsym (RTLD_NEXT, \"exit\");],\n[AC_MSG_RESULT(yes)],\n[AC_MSG_RESULT(no)\nenable_shared=no])\n\nAC_CHECK_HEADERS(stdint.h execinfo.h signal.h dlfcn.h dirent.h pwd.h grp.h \\\n  netdb.h sys/ipc.h sys/sem.h sys/shm.h sys/wait.h ctype.h mntent.h \\\n  sys/mnttab.h sys/socket.h netinet/in.h arpa/inet.h dlfcn.h sys/mman.h)\n\nAC_CHECK_FUNCS(backtrace backtrace_symbols gettimeofday signal)\nAC_CHECK_FUNCS(fopen64 fseeko64 ftello64 stat64 freopen64)\nAC_CHECK_FUNCS(setbuf setbuffer setlinebuf setvbuf)\nAC_CHECK_FUNCS(strnlen memrchr strncpy memmem sethostname)\nAC_CHECK_FUNCS(__ctype_b_loc __ctype_tolower_loc __ctype_toupper_loc)\nAC_CHECK_FUNCS(getlogin cuserid getpwnam getpwuid getpwent getgrnam getgrgid getgrent)\nAC_CHECK_FUNCS(getlogin_r getpwnam_r getpwuid_r getgrnam_r getgrgid_r)\nAC_CHECK_FUNCS(getservent getservbyname getservbyport getaddrinfo gai_strerror)\nAC_CHECK_FUNCS(getprotoent getprotobyname getprotobynumber)\nAC_CHECK_FUNCS(getmntent setmntent addmntent)\nAC_CHECK_FUNCS(inet_ntoa mmap munmap)\nAC_CHECK_FUNCS(mmap64)\nAC_CHECK_FUNCS(__libc_freeres)\nAC_CHECK_FUNCS(rawmemchr stpcpy mempcpy)\n\nAC_TRY_COMPILE([#include <sys/types.h>\n#include <sys/ipc.h>\n#include <sys/sem.h>],[union semun foo;], [mf_have_semun=1], [mf_have_semun=0])\nif test $mf_have_semun = 1\nthen\n  AC_DEFINE(HAVE_UNION_SEMUN, 1, [union semun defined in sys/ipc.h or sys/sem.h])\nfi\n\n\nAC_MSG_CHECKING([for socklen_t in sys/socket.h])\nAC_TRY_COMPILE([#define _POSIX_PII_SOCKET\n#include <sys/types.h>\n#include <sys/socket.h>], [socklen_t x = 5;],\n  [AC_DEFINE(HAVE_SOCKLEN_T, 1, [Define it socklen_t typedef is in sys/socket.h.])\n   AC_MSG_RESULT(yes)],\n  [AC_MSG_RESULT(no)])\n\nAC_LIBTOOL_DLOPEN\nAM_PROG_LIBTOOL\nAC_SUBST(enable_shared)\nAC_SUBST(enable_static)\n\nAC_CHECK_HEADER(stdint.h, [MF_HAVE_STDINT_H=1], [MF_HAVE_STDINT_H=0])\nAC_SUBST(MF_HAVE_STDINT_H)\nif test $MF_HAVE_STDINT_H = 1\nthen\n   MF_HAVE_UINTPTR_T=1\nelse\n   AC_TRY_COMPILE([#include <sys/types.h>], [uintptr_t k = 0;],\n\t[MF_HAVE_UINTPTR_T=1], [MF_HAVE_UINTPTR_T=0])\nfi\nAC_SUBST(MF_HAVE_UINTPTR_T)\n\nAC_CHECK_HEADERS(pthread.h)\n\nAC_MSG_CHECKING([for thread model used by GCC])\ntarget_thread_file=`$CC -v 2>&1 | sed -n 's/^Thread model: //p'`\nAC_MSG_RESULT([$target_thread_file])\n\n# We only support posix threads, or no threads at all.\nposix_threads=\ncase ${target_thread_file} in\n  posix)\n    posix_threads=yes\n    ;;\n  single)\n    ;;\n  *)\n    echo \"${target_thread_file} is an unsupported thread package\" 1>&2\n    exit 1\n    ;;\nesac\n\nAM_CONDITIONAL(LIBMUDFLAPTH, [test \"x$posix_threads\" != \"x\"])\nif test \"x$posix_threads\" != \"x\"\nthen\n        build_libmudflapth=1\nelse\n        build_libmudflapth=0\nfi\nAC_SUBST(build_libmudflapth)\n\nAC_CHECK_LIB(dl, dlsym)\n\nAC_CHECK_FUNC(connect,, AC_CHECK_LIB(socket, connect))\nAC_CHECK_FUNC(sched_yield,, AC_CHECK_LIB(rt, sched_yield))\n\n# Calculate toolexeclibdir\n# Also toolexecdir, though it's only used in toolexeclibdir\ncase ${version_specific_libs} in\n  yes)\n    # Need the gcc compiler version to know where to install libraries\n    # and header files if --enable-version-specific-runtime-libs option\n    # is selected.\n    toolexecdir='$(libdir)/gcc/$(target_alias)'\n    toolexeclibdir='$(toolexecdir)/$(gcc_version)$(MULTISUBDIR)'\n    ;;\n  no)\n    if test -n \"$with_cross_host\" &&\n       test x\"$with_cross_host\" != x\"no\"; then\n      # Install a library built with a cross compiler in tooldir, not libdir.\n      toolexecdir='$(exec_prefix)/$(target_alias)'\n      toolexeclibdir='$(toolexecdir)/lib'\n    else\n      toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n      toolexeclibdir='$(libdir)'\n    fi\n    multi_os_directory=`$CC -print-multi-os-directory`\n    case $multi_os_directory in\n      .) ;; # Avoid trailing /.\n      *) toolexeclibdir=$toolexeclibdir/$multi_os_directory ;;\n    esac\n    ;;\nesac\nAC_SUBST(toolexecdir)\nAC_SUBST(toolexeclibdir)\n\nincludedir=${toolexecdir}/include\nAC_SUBST(includedir)\n\npthread_create_version='\"\"'\nif test \"x$enable_shared\" = \"xyes\" && test \"x$posix_threads\" != \"x\"; then\n  # NB: don't check for -lpthread here, because then it would be\n  # added to LIBS.  For the thread-unaware libmudflap.la, we don't\n  # want it there.\n\n  # glibc-related hacks.  dlsym() may pick the wrong version of\n  # interposed functions like pthread_create on modern glibc.\n  # We need to find the proper symbol version string, and use\n  # the nonstandard dlvsym().\n  AC_CHECK_FUNCS(dlvsym)\n  AC_CHECK_TOOL(NM, nm)\n  if test \"x$ac_cv_have_dlvsym\" != \"x\"; then\n    # Try compiling a simple pthreads program.  Find the shared libraries it\n    # ends up with.  Then use \"nm\" on those libraries to extract the\n    # default symbol versioning suffix (\"@@\"), if any.  But that's tricky.\n    # Rather, run nm on the resulting executable.  Unfortunately, autoconf\n    # doesn't appear to have a macro that builds a test executable for\n    # subsequent analysis ... so we do it by hand here.\n    cat >> conftest.c << EOF\n#include <pthread.h>\nint main () { void *p = (void *) & pthread_create; return (int) p; }\nEOF\n    oldLIBS=\"$LIBS\"\n    LIBS=\"$LIBS -lpthread\"\n    pthread_create_version=\"\\\"\\\"\"\n    AC_MSG_CHECKING(pthread_create symbol version)\n    if eval $ac_link 2>&5 && test -s conftest${ac_exeext}; then\n      version=`$NM conftest${ac_exeect} | grep 'pthread_create@@' | sed -e 's/^.*@@//'`\n      if test \"x$version\" != \"x\"; then\n        pthread_create_version=\"\\\"$version\\\"\"\n      fi\n    fi\n    AC_MSG_RESULT($pthread_create_version)\n    LIBS=\"$oldLIBS\"\n  fi\nfi\nAC_DEFINE_UNQUOTED(PTHREAD_CREATE_VERSION, $pthread_create_version, [pthread_create symbol version])\n\n\n# Figure out whether the compiler supports \"-ffunction-sections -fdata-sections\",\n# similarly to how libstdc++ does it\nac_test_CFLAGS=\"${CFLAGS+set}\"\nac_save_CFLAGS=\"$CFLAGS\"\n\n# Check for -ffunction-sections -fdata-sections\nAC_MSG_CHECKING([for gcc that supports -ffunction-sections -fdata-sections])\nCFLAGS='-Werror -ffunction-sections -fdata-sections'\nAC_TRY_COMPILE(, [int foo;], [ac_fdsections=yes], [ac_fdsections=no])\nif test \"$ac_test_CFLAGS\" = set; then\n  CFLAGS=\"$ac_save_CFLAGS\"\nelse\n  # this is the suspicious part\n  CFLAGS=\"\"\nfi\nif test x\"$ac_fdsections\" = x\"yes\"; then\n  SECTION_FLAGS='-ffunction-sections -fdata-sections'\nfi\nAC_MSG_RESULT($ac_fdsections)\nAC_SUBST(SECTION_FLAGS)\n\n\n# Check for the name of the symbol used for the entry point.\nAC_CACHE_CHECK([for the name of the symbol used for the entry point],\n  [mudflap_cv_entry_point], [\nfor name in _start __start unknown; do\n  AC_LINK_IFELSE([AC_LANG_PROGRAM([extern char $name@<:@@:>@;], [$name@<:@0@:>@ = 0;])],\n\t\t [break])\ndone\nmudflap_cv_entry_point=\"$name\"])\nif test \"$mudflap_cv_entry_point\" = unknown; then\n  AC_MSG_ERROR([none of the known symbol names works])\nfi\nAC_DEFINE_UNQUOTED([ENTRY_POINT], [$mudflap_cv_entry_point],\n  [Define to the name of the symbol used for the entry point.])\n\n\nif test ${multilib} = yes; then\n  multilib_arg=\"--enable-multilib\"\nelse\n  multilib_arg=\nfi\n\n# See if we support thread-local storage.\nGCC_CHECK_TLS\nGCC_CHECK_EMUTLS\n\nAC_CONFIG_FILES([Makefile testsuite/Makefile testsuite/mfconfig.exp])\nAC_OUTPUT\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libmudflap/mf-impl.h": "/* Implementation header for mudflap runtime library.\n   Mudflap: narrow-pointer bounds-checking by tree rewriting.\n   Copyright (C) 2002-2013 Free Software Foundation, Inc.\n   Contributed by Frank Ch. Eigler <fche@redhat.com>\n   and Graydon Hoare <graydon@redhat.com>\n\nThis file is part of GCC.\n\nGCC is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free\nSoftware Foundation; either version 3, or (at your option) any later\nversion.\n\nGCC is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\nfor more details.\n\nUnder Section 7 of GPL version 3, you are granted additional\npermissions described in the GCC Runtime Library Exception, version\n3.1, as published by the Free Software Foundation.\n\nYou should have received a copy of the GNU General Public License and\na copy of the GCC Runtime Library Exception along with this program;\nsee the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n<http://www.gnu.org/licenses/>.  */\n\n#ifndef __MF_IMPL_H\n#define __MF_IMPL_H\n\n#ifdef _MUDFLAP\n#error \"Do not compile this file with -fmudflap!\"\n#endif\n\n#if HAVE_PTHREAD_H\n#include <pthread.h>\n#elif LIBMUDFLAPTH\n#error \"Cannot build libmudflapth without pthread.h.\"\n#endif\n\n#if HAVE_STDINT_H\n#include <stdint.h>\n#else\ntypedef __mf_uintptr_t uintptr_t;\n#endif\n\n/* Private definitions related to mf-runtime.h  */\n\n#define __MF_TYPE_MAX_CEM  __MF_TYPE_STACK  /* largest type# for the cemetery */\n#define __MF_TYPE_MAX __MF_TYPE_GUESS\n\n\n#ifndef max\n#define max(a,b) ((a) > (b) ? (a) : (b))\n#endif\n\n#ifndef min\n#define min(a,b) ((a) < (b) ? (a) : (b))\n#endif\n\n/* Address calculation macros.  */\n\n#define MINPTR ((uintptr_t) 0)\n#define MAXPTR (~ (uintptr_t) 0)\n\n/* Clamp the addition/subtraction of uintptr_t's to [MINPTR,MAXPTR] */\n#define CLAMPSUB(ptr,offset) (((uintptr_t) ptr) >= (offset) ? ((uintptr_t) ptr)-((uintptr_t) offset) : MINPTR)\n#define CLAMPADD(ptr,offset) (((uintptr_t) ptr) <= MAXPTR-(offset) ? ((uintptr_t) ptr)+((uintptr_t) offset) : MAXPTR)\n#define CLAMPSZ(ptr,size) ((size) ? (((uintptr_t) ptr) <= MAXPTR-(size)+1 ? ((uintptr_t) ptr)+((uintptr_t) size) - 1 : MAXPTR) : ((uintptr_t) ptr))\n\n#define __MF_CACHE_INDEX(ptr) ((((uintptr_t) (ptr)) >> __mf_lc_shift) & __mf_lc_mask)\n#define __MF_CACHE_MISS_P(ptr,sz) ({ \\\n             struct __mf_cache *elem = & __mf_lookup_cache[__MF_CACHE_INDEX((ptr))]; \\\n             ((elem->low > (uintptr_t) (ptr)) ||                  \\\n\t      (elem->high < (CLAMPADD((uintptr_t) (ptr), (uintptr_t) CLAMPSUB(sz,1) )))); })\n/* XXX: the above should use CLAMPSZ () */\n\n\n\n/* Private functions. */\n\nextern void __mf_violation (void *ptr, size_t sz,\n\t\t\t    uintptr_t pc, const char *location,\n\t\t\t    int type);\nextern size_t __mf_backtrace (char ***, void *, unsigned);\nextern int __mf_heuristic_check (uintptr_t, uintptr_t);\n\n/* ------------------------------------------------------------------------ */\n/* Type definitions. */\n/* ------------------------------------------------------------------------ */\n\n/* The mf_state type codes describe recursion and initialization order.\n\n   reentrant means we are inside a mf-runtime support routine, such as\n   __mf_register, and thus there should be no calls to any wrapped functions,\n   such as the wrapped malloc.  This indicates a bug if it occurs.\n   in_malloc means we are inside a real malloc call inside a wrapped malloc\n   call, and thus there should be no calls to any wrapped functions like the\n   wrapped mmap.  This happens on some systems due to how the system libraries\n   are constructed.  */\n\nenum __mf_state_enum { active, reentrant, in_malloc }; \n\n/* The __mf_options structure records optional or tunable aspects of the\n mudflap library's behavior. There is a single global instance of this\n structure which is populated from user input (in an environment variable)\n when the library initializes. */\n\nstruct __mf_options\n{\n  /* Emit a trace message for each call. */\n  unsigned trace_mf_calls;\n\n  /* Collect and emit statistics. */\n  unsigned collect_stats;\n\n  /* Set up a SIGUSR1 -> __mf_report handler. */\n  unsigned sigusr1_report;\n\n  /* Execute internal checking code. */\n  unsigned internal_checking;\n\n  /* Age object liveness periodically. */\n  unsigned tree_aging;\n\n  /* Adapt the lookup cache to working set. */\n  unsigned adapt_cache;\n\n  /* Print list of leaked heap objects on shutdown. */\n  unsigned print_leaks;\n\n#ifdef HAVE___LIBC_FREERES\n  /* Call __libc_freeres before leak analysis. */\n  unsigned call_libc_freeres;\n#endif\n\n  /* Detect reads of uninitialized objects. */\n  unsigned check_initialization;\n\n  /* Print verbose description of violations. */\n  unsigned verbose_violations;\n\n  /* Abbreviate duplicate object descriptions.  */\n  unsigned abbreviate;\n\n  /* Emit internal tracing message. */\n  unsigned verbose_trace;\n\n  /* Wipe stack/heap objects upon unwind.  */\n  unsigned wipe_stack;\n  unsigned wipe_heap;\n\n  /* Maintain a queue of this many deferred free()s,\n     to trap use of freed memory. */\n  unsigned free_queue_length;\n\n  /* Maintain a history of this many past unregistered objects. */\n  unsigned persistent_count;\n\n  /* Pad allocated extents by this many bytes on either side. */\n  unsigned crumple_zone;\n\n  /* Maintain this many stack frames for contexts. */\n  unsigned backtrace;\n\n  /* Ignore read operations even if mode_check is in effect.  */\n  unsigned ignore_reads;\n\n  /* Collect register/unregister timestamps.  */\n  unsigned timestamps;\n\n#ifdef LIBMUDFLAPTH\n  /* Thread stack size.  */\n  unsigned thread_stack;\n#endif\n\n  /* Major operation mode */\n#define mode_nop 0      /* Do nothing.  */\n#define mode_populate 1 /* Populate tree but do not check for violations.  */\n#define mode_check 2    /* Populate and check for violations (normal).  */\n#define mode_violate 3  /* Trigger a violation on every call (diagnostic).  */\n  unsigned mudflap_mode;\n\n  /* How to handle a violation. */\n#define viol_nop 0   /* Return control to application. */\n#define viol_segv 1  /* Signal self with segv. */\n#define viol_abort 2 /* Call abort (). */\n#define viol_gdb 3   /* Fork a debugger on self */\n  unsigned violation_mode;\n\n  /* Violation heuristics selection. */\n  unsigned heur_stack_bound; /* allow current stack region */\n  unsigned heur_proc_map;  /* allow & cache /proc/self/map regions.  */\n  unsigned heur_start_end; /* allow _start .. _end */\n  unsigned heur_std_data; /* allow & cache stdlib data */\n};\n\n\n#ifdef PIC\n\n/* This is a table of dynamically resolved function pointers. */\n\nstruct __mf_dynamic_entry\n{\n  void *pointer;\n  char *name;\n  char *version;\n};\n\n/* The definition of the array (mf-runtime.c) must match the enums!  */\nextern struct __mf_dynamic_entry __mf_dynamic[];\nenum __mf_dynamic_index\n{\n  dyn_calloc, dyn_free, dyn_malloc, dyn_mmap,\n#ifdef HAVE_MMAP64\n  dyn_mmap64,\n#endif\n  dyn_munmap, dyn_realloc,\n  dyn_INITRESOLVE,  /* Marker for last init-time resolution. */\n#ifdef LIBMUDFLAPTH\n  dyn_pthread_create\n#endif\n};\n\n#endif /* PIC */\n\n/* ------------------------------------------------------------------------ */\n/* Private global variables. */\n/* ------------------------------------------------------------------------ */\n\n#ifdef LIBMUDFLAPTH\nextern pthread_mutex_t __mf_biglock;\n#define LOCKTH() do { extern unsigned long __mf_lock_contention; \\\n                      int rc = pthread_mutex_trylock (& __mf_biglock); \\\n                      if (rc) { __mf_lock_contention ++; \\\n                                rc = pthread_mutex_lock (& __mf_biglock); } \\\n                      assert (rc==0); } while (0)\n#define UNLOCKTH() do { int rc = pthread_mutex_unlock (& __mf_biglock); \\\n                        assert (rc==0); } while (0)\n#else\n#define LOCKTH() do {} while (0)\n#define UNLOCKTH() do {} while (0)\n#endif\n\n#if defined(LIBMUDFLAPTH) && (!defined(HAVE_TLS) || defined(USE_EMUTLS))\nextern enum __mf_state_enum __mf_get_state (void);\nextern void __mf_set_state (enum __mf_state_enum);\n#else\n# ifdef LIBMUDFLAPTH\nextern __thread enum __mf_state_enum __mf_state_1;\n# else\nextern enum __mf_state_enum __mf_state_1;\n# endif\nstatic inline enum __mf_state_enum __mf_get_state (void)\n{\n  return __mf_state_1;\n}\nstatic inline void __mf_set_state (enum __mf_state_enum s)\n{\n  __mf_state_1 = s;\n}\n#endif\n\nextern int __mf_starting_p;\nextern struct __mf_options __mf_opts;\n\n/* ------------------------------------------------------------------------ */\n/* Utility macros. */\n/* ------------------------------------------------------------------------ */\n\n#define UNLIKELY(e) (__builtin_expect (!!(e), 0))\n#define LIKELY(e) (__builtin_expect (!!(e), 1))\n#define STRINGIFY2(e) #e\n#define STRINGIFY(e) STRINGIFY2(e)\n\n#ifdef LIBMUDFLAPTH\n#define VERBOSE_TRACE(...) \\\n  do { if (UNLIKELY (__mf_opts.verbose_trace)) {  \\\n      fprintf (stderr, \"mf(%u): \", (unsigned) pthread_self ()); \\\n      fprintf (stderr, __VA_ARGS__); \\\n    } } while (0)\n#define TRACE(...) \\\n  do { if (UNLIKELY (__mf_opts.trace_mf_calls)) { \\\n      fprintf (stderr, \"mf(%u): \", (unsigned) pthread_self ()); \\\n      fprintf (stderr, __VA_ARGS__); \\\n    } } while (0)\n#else\n#define VERBOSE_TRACE(...) \\\n  do { if (UNLIKELY (__mf_opts.verbose_trace)) {  \\\n      fprintf (stderr, \"mf: \"); \\\n      fprintf (stderr, __VA_ARGS__); \\\n    } } while (0)\n#define TRACE(...) \\\n  do { if (UNLIKELY (__mf_opts.trace_mf_calls)) { \\\n      fprintf (stderr, \"mf: \"); \\\n      fprintf (stderr, __VA_ARGS__); \\\n    } } while (0)\n#endif\n\n\n#define __MF_PERSIST_MAX 256\n#define __MF_FREEQ_MAX 256\n\n/*\n   Wrapping and redirection:\n\n   Mudflap redirects a number of libc functions into itself, for \"cheap\"\n   verification (eg. strcpy, bzero, memcpy) and also to register /\n   unregister regions of memory as they are manipulated by the program\n   (eg. malloc/free, mmap/munmap).\n\n   There are two methods of wrapping.\n\n   (1) The static method involves a list of -wrap=foo flags being passed to\n   the linker, which then links references to \"foo\" to the symbol\n   \"__wrap_foo\", and links references to \"__real_foo\" to the symbol \"foo\".\n   When compiled without -DPIC, libmudflap.a contains such __wrap_foo\n   functions which delegate to __real_foo functions in libc to get their\n   work done.\n\n   (2) The dynamic method involves providing a definition of symbol foo in\n   libmudflap.so and linking it earlier in the compiler command line,\n   before libc.so. The function \"foo\" in libmudflap must then call\n   dlsym(RTLD_NEXT, \"foo\") to acquire a pointer to the \"real\" libc foo, or\n   at least the \"next\" foo in the dynamic link resolution order.\n\n   We switch between these two techniques by the presence of the -DPIC\n   #define passed in by libtool when building libmudflap.\n*/\n\n\n#ifdef PIC\n\nextern void __mf_resolve_single_dynamic (struct __mf_dynamic_entry *);\n\n#define _GNU_SOURCE\n#include <dlfcn.h>\n\n#define WRAPPER(ret, fname, ...)                      \\\nret __wrap_ ## fname (__VA_ARGS__)                    \\\n    __attribute__ (( alias  (#fname)  ));             \\\nret __real_ ## fname (__VA_ARGS__)                    \\\n    __attribute__ (( alias  (#fname)  ));             \\\nret fname (__VA_ARGS__)\n#define DECLARE(ty, fname, ...)                       \\\n typedef ty (*__mf_fn_ ## fname) (__VA_ARGS__);       \\\n extern ty __mf_0fn_ ## fname (__VA_ARGS__);\n#define CALL_REAL(fname, ...)                         \\\n  ({__mf_starting_p \\\n     ? __mf_0fn_ ## fname (__VA_ARGS__) \\\n    : (__mf_resolve_single_dynamic (& __mf_dynamic[dyn_ ## fname]), \\\n       (((__mf_fn_ ## fname)(__mf_dynamic[dyn_ ## fname].pointer)) (__VA_ARGS__)));})\n#define CALL_BACKUP(fname, ...)                       \\\n  __mf_0fn_ ## fname(__VA_ARGS__)\n\n#else /* not PIC --> static library */\n\n#define WRAPPER(ret, fname, ...)            \\\nret __wrap_ ## fname (__VA_ARGS__)\n#define DECLARE(ty, fname, ...)             \\\n extern ty __real_ ## fname (__VA_ARGS__)\n#define CALL_REAL(fname, ...)               \\\n __real_ ## fname (__VA_ARGS__)\n#define CALL_BACKUP(fname, ...)             \\\n  __real_ ## fname(__VA_ARGS__)\n\n#endif /* PIC */\n\n/* WRAPPER2 is for functions intercepted via macros at compile time. */\n#define WRAPPER2(ret, fname, ...)                     \\\nret __mfwrap_ ## fname (__VA_ARGS__)\n\n\n/* Utility macros for mf-hooks*.c */\n\n#define MF_VALIDATE_EXTENT(value,size,acc,context) \\\n do { \\\n  if (UNLIKELY (size > 0 && __MF_CACHE_MISS_P (value, size))) \\\n    if (acc == __MF_CHECK_WRITE || ! __mf_opts.ignore_reads) \\\n    __mf_check ((void *) (value), (size), acc, \"(\" context \")\"); \\\n } while (0)\n#define BEGIN_PROTECT(fname, ...)       \\\n  if (UNLIKELY (__mf_starting_p)) \\\n  {                                         \\\n    return CALL_BACKUP(fname, __VA_ARGS__); \\\n  }                                         \\\n  else if (UNLIKELY (__mf_get_state () == reentrant))   \\\n  {                                         \\\n    extern unsigned long __mf_reentrancy;   \\\n    __mf_reentrancy ++; \\\n    return CALL_REAL(fname, __VA_ARGS__);   \\\n  }                                         \\\n  else if (UNLIKELY (__mf_get_state () == in_malloc))   \\\n  {                                         \\\n    return CALL_REAL(fname, __VA_ARGS__);   \\\n  }                                         \\\n  else                                      \\\n  {                                         \\\n    TRACE (\"%s\\n\", __PRETTY_FUNCTION__); \\\n  }\n\n/* There is an assumption here that these will only be called in routines\n   that call BEGIN_PROTECT at the start, and hence the state must always\n   be active when BEGIN_MALLOC_PROTECT is called.  */\n#define BEGIN_MALLOC_PROTECT() \\\n  __mf_set_state (in_malloc)\n\n#define END_MALLOC_PROTECT() \\\n  __mf_set_state (active)\n\n/* Unlocked variants of main entry points from mf-runtime.h.  */\nextern void __mfu_check (void *ptr, size_t sz, int type, const char *location);\nextern void __mfu_register (void *ptr, size_t sz, int type, const char *name);\nextern void __mfu_unregister (void *ptr, size_t sz, int type);\nextern void __mfu_report ();\nextern int __mfu_set_options (const char *opts);\n\n\n#endif /* __MF_IMPL_H */\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libmudflap/mf-hooks2.c": "/* Mudflap: narrow-pointer bounds-checking by tree rewriting.\n   Copyright (C) 2002-2013 Free Software Foundation, Inc.\n   Contributed by Frank Ch. Eigler <fche@redhat.com>\n   and Graydon Hoare <graydon@redhat.com>\n\nThis file is part of GCC.\n\nGCC is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free\nSoftware Foundation; either version 3, or (at your option) any later\nversion.\n\nGCC is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\nfor more details.\n\nUnder Section 7 of GPL version 3, you are granted additional\npermissions described in the GCC Runtime Library Exception, version\n3.1, as published by the Free Software Foundation.\n\nYou should have received a copy of the GNU General Public License and\na copy of the GCC Runtime Library Exception along with this program;\nsee the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n<http://www.gnu.org/licenses/>.  */\n\n#include \"config.h\"\n\n#ifndef HAVE_SOCKLEN_T\n#define socklen_t int\n#endif\n\n/* These attempt to coax various unix flavours to declare all our\n   needed tidbits in the system headers.  */\n#if !defined(__FreeBSD__) && !defined(__APPLE__)\n#define _POSIX_SOURCE\n#endif /* Some BSDs break <sys/socket.h> if this is defined. */\n#define _GNU_SOURCE\n#define _XOPEN_SOURCE\n#define _BSD_TYPES\n#define __EXTENSIONS__\n#define _ALL_SOURCE\n#define _LARGE_FILE_API\n#define _LARGEFILE64_SOURCE\n#define _XOPEN_SOURCE_EXTENDED 1\n\n#include <string.h>\n#include <stdarg.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <sys/stat.h>\n#include <sys/time.h>\n#include <sys/types.h>\n#include <unistd.h>\n#include <assert.h>\n#include <errno.h>\n#include <limits.h>\n#include <time.h>\n#include <ctype.h>\n#ifdef HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n#ifdef HAVE_DIRENT_H\n#include <dirent.h>\n#endif\n#ifdef HAVE_SYS_SOCKET_H\n#include <sys/socket.h>\n#endif\n#ifdef HAVE_NETDB_H\n#include <netdb.h>\n#endif\n#ifdef HAVE_SYS_WAIT_H\n#include <sys/wait.h>\n#endif\n#ifdef HAVE_SYS_IPC_H\n#include <sys/ipc.h>\n#endif\n#ifdef HAVE_SYS_SEM_H\n#include <sys/sem.h>\n#endif\n#ifdef HAVE_SYS_SHM_H\n#include <sys/shm.h>\n#endif\n#ifdef HAVE_PWD_H\n#include <pwd.h>\n#endif\n#ifdef HAVE_GRP_H\n#include <grp.h>\n#endif\n#ifdef HAVE_MNTENT_H\n#include <mntent.h>\n#endif\n#ifdef HAVE_SYS_MNTTAB_H\n#include <sys/mnttab.h>\n#endif\n#ifdef HAVE_SYS_SOCKET_H\n#include <sys/socket.h>\n#endif\n#ifdef HAVE_NETINET_IN_H\n#include <netinet/in.h>\n#endif\n#ifdef HAVE_ARPA_INET_H\n#include <arpa/inet.h>\n#endif\n\n#include \"mf-runtime.h\"\n#include \"mf-impl.h\"\n\n#ifdef _MUDFLAP\n#error \"Do not compile this file with -fmudflap!\"\n#endif\n\n\n/* A bunch of independent stdlib/unistd hook functions, all\n   intercepted by mf-runtime.h macros.  */\n\n#ifndef HAVE_STRNLEN\nstatic inline size_t (strnlen) (const char* str, size_t n)\n{\n  const char *s;\n\n  for (s = str; n && *s; ++s, --n)\n    ;\n  return (s - str);\n}\n#endif\n\n\n/* str*,mem*,b* */\n\nWRAPPER2(void *, memcpy, void *dest, const void *src, size_t n)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(src, n, __MF_CHECK_READ, \"memcpy source\");\n  MF_VALIDATE_EXTENT(dest, n, __MF_CHECK_WRITE, \"memcpy dest\");\n  return memcpy (dest, src, n);\n}\n\n\nWRAPPER2(void *, memmove, void *dest, const void *src, size_t n)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(src, n, __MF_CHECK_READ, \"memmove src\");\n  MF_VALIDATE_EXTENT(dest, n, __MF_CHECK_WRITE, \"memmove dest\");\n  return memmove (dest, src, n);\n}\n\n\nWRAPPER2(void *, memset, void *s, int c, size_t n)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(s, n, __MF_CHECK_WRITE, \"memset dest\");\n  return memset (s, c, n);\n}\n\n\nWRAPPER2(int, memcmp, const void *s1, const void *s2, size_t n)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(s1, n, __MF_CHECK_READ, \"memcmp 1st arg\");\n  MF_VALIDATE_EXTENT(s2, n, __MF_CHECK_READ, \"memcmp 2nd arg\");\n  return memcmp (s1, s2, n);\n}\n\n\nWRAPPER2(void *, memchr, const void *s, int c, size_t n)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(s, n, __MF_CHECK_READ, \"memchr region\");\n  return memchr (s, c, n);\n}\n\n\n#ifdef HAVE_MEMRCHR\nWRAPPER2(void *, memrchr, const void *s, int c, size_t n)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(s, n, __MF_CHECK_READ, \"memrchr region\");\n  return memrchr (s, c, n);\n}\n#endif\n\n\nWRAPPER2(char *, strcpy, char *dest, const char *src)\n{\n  /* nb: just because strlen(src) == n doesn't mean (src + n) or (src + n +\n     1) are valid pointers. the allocated object might have size < n.\n     check anyways. */\n\n  size_t n = strlen (src);\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(src, CLAMPADD(n, 1), __MF_CHECK_READ, \"strcpy src\");\n  MF_VALIDATE_EXTENT(dest, CLAMPADD(n, 1), __MF_CHECK_WRITE, \"strcpy dest\");\n  return strcpy (dest, src);\n}\n\n\n#ifdef HAVE_STRNCPY\nWRAPPER2(char *, strncpy, char *dest, const char *src, size_t n)\n{\n  size_t len = strnlen (src, n);\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(src, len, __MF_CHECK_READ, \"strncpy src\");\n  MF_VALIDATE_EXTENT(dest, len, __MF_CHECK_WRITE, \"strncpy dest\"); /* nb: strNcpy */\n  return strncpy (dest, src, n);\n}\n#endif\n\n\nWRAPPER2(char *, strcat, char *dest, const char *src)\n{\n  size_t dest_sz;\n  size_t src_sz;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  dest_sz = strlen (dest);\n  src_sz = strlen (src);\n  MF_VALIDATE_EXTENT(src, CLAMPADD(src_sz, 1), __MF_CHECK_READ, \"strcat src\");\n  MF_VALIDATE_EXTENT(dest, CLAMPADD(dest_sz, CLAMPADD(src_sz, 1)),\n\t\t     __MF_CHECK_WRITE, \"strcat dest\");\n  return strcat (dest, src);\n}\n\n\nWRAPPER2(char *, strncat, char *dest, const char *src, size_t n)\n{\n\n  /* nb: validating the extents (s,n) might be a mistake for two reasons.\n\n  (1) the string s might be shorter than n chars, and n is just a\n  poor choice by the programmer. this is not a \"true\" error in the\n  sense that the call to strncat would still be ok.\n\n  (2) we could try to compensate for case (1) by calling strlen(s) and\n  using that as a bound for the extent to verify, but strlen might fall off\n  the end of a non-terminated string, leading to a false positive.\n\n  so we will call strnlen(s,n) and use that as a bound.\n\n  if strnlen returns a length beyond the end of the registered extent\n  associated with s, there is an error: the programmer's estimate for n is\n  too large _AND_ the string s is unterminated, in which case they'd be\n  about to touch memory they don't own while calling strncat.\n\n  this same logic applies to further uses of strnlen later down in this\n  file. */\n\n  size_t src_sz;\n  size_t dest_sz;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  src_sz = strnlen (src, n);\n  dest_sz = strnlen (dest, n);\n  MF_VALIDATE_EXTENT(src, src_sz, __MF_CHECK_READ, \"strncat src\");\n  MF_VALIDATE_EXTENT(dest, (CLAMPADD(dest_sz, CLAMPADD(src_sz, 1))),\n\t\t     __MF_CHECK_WRITE, \"strncat dest\");\n  return strncat (dest, src, n);\n}\n\n\nWRAPPER2(int, strcmp, const char *s1, const char *s2)\n{\n  size_t s1_sz;\n  size_t s2_sz;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  s1_sz = strlen (s1);\n  s2_sz = strlen (s2);\n  MF_VALIDATE_EXTENT(s1, CLAMPADD(s1_sz, 1), __MF_CHECK_READ, \"strcmp 1st arg\");\n  MF_VALIDATE_EXTENT(s2, CLAMPADD(s2_sz, 1), __MF_CHECK_WRITE, \"strcmp 2nd arg\");\n  return strcmp (s1, s2);\n}\n\n\nWRAPPER2(int, strcasecmp, const char *s1, const char *s2)\n{\n  size_t s1_sz;\n  size_t s2_sz;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  s1_sz = strlen (s1);\n  s2_sz = strlen (s2);\n  MF_VALIDATE_EXTENT(s1, CLAMPADD(s1_sz, 1), __MF_CHECK_READ, \"strcasecmp 1st arg\");\n  MF_VALIDATE_EXTENT(s2, CLAMPADD(s2_sz, 1), __MF_CHECK_READ, \"strcasecmp 2nd arg\");\n  return strcasecmp (s1, s2);\n}\n\n\nWRAPPER2(int, strncmp, const char *s1, const char *s2, size_t n)\n{\n  size_t s1_sz;\n  size_t s2_sz;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  s1_sz = strnlen (s1, n);\n  s2_sz = strnlen (s2, n);\n  MF_VALIDATE_EXTENT(s1, s1_sz, __MF_CHECK_READ, \"strncmp 1st arg\");\n  MF_VALIDATE_EXTENT(s2, s2_sz, __MF_CHECK_READ, \"strncmp 2nd arg\");\n  return strncmp (s1, s2, n);\n}\n\n\nWRAPPER2(int, strncasecmp, const char *s1, const char *s2, size_t n)\n{\n  size_t s1_sz;\n  size_t s2_sz;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  s1_sz = strnlen (s1, n);\n  s2_sz = strnlen (s2, n);\n  MF_VALIDATE_EXTENT(s1, s1_sz, __MF_CHECK_READ, \"strncasecmp 1st arg\");\n  MF_VALIDATE_EXTENT(s2, s2_sz, __MF_CHECK_READ, \"strncasecmp 2nd arg\");\n  return strncasecmp (s1, s2, n);\n}\n\n\nWRAPPER2(char *, strdup, const char *s)\n{\n  DECLARE(void *, malloc, size_t sz);\n  char *result;\n  size_t n = strlen (s);\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(s, CLAMPADD(n,1), __MF_CHECK_READ, \"strdup region\");\n  result = (char *)CALL_REAL(malloc,\n\t\t\t     CLAMPADD(CLAMPADD(n,1),\n\t\t\t\t      CLAMPADD(__mf_opts.crumple_zone,\n\t\t\t\t\t       __mf_opts.crumple_zone)));\n\n  if (UNLIKELY(! result)) return result;\n\n  result += __mf_opts.crumple_zone;\n  memcpy (result, s, n);\n  result[n] = '\\0';\n\n  __mf_register (result, CLAMPADD(n,1), __MF_TYPE_HEAP_I, \"strdup region\");\n  return result;\n}\n\n\nWRAPPER2(char *, strndup, const char *s, size_t n)\n{\n  DECLARE(void *, malloc, size_t sz);\n  char *result;\n  size_t sz = strnlen (s, n);\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(s, sz, __MF_CHECK_READ, \"strndup region\"); /* nb: strNdup */\n\n  /* note: strndup still adds a \\0, even with the N limit! */\n  result = (char *)CALL_REAL(malloc,\n\t\t\t     CLAMPADD(CLAMPADD(n,1),\n\t\t\t\t      CLAMPADD(__mf_opts.crumple_zone,\n\t\t\t\t\t       __mf_opts.crumple_zone)));\n\n  if (UNLIKELY(! result)) return result;\n\n  result += __mf_opts.crumple_zone;\n  memcpy (result, s, n);\n  result[n] = '\\0';\n\n  __mf_register (result, CLAMPADD(n,1), __MF_TYPE_HEAP_I, \"strndup region\");\n  return result;\n}\n\n\nWRAPPER2(char *, strchr, const char *s, int c)\n{\n  size_t n;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  n = strlen (s);\n  MF_VALIDATE_EXTENT(s, CLAMPADD(n,1), __MF_CHECK_READ, \"strchr region\");\n  return strchr (s, c);\n}\n\n\nWRAPPER2(char *, strrchr, const char *s, int c)\n{\n  size_t n;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  n = strlen (s);\n  MF_VALIDATE_EXTENT(s, CLAMPADD(n,1), __MF_CHECK_READ, \"strrchr region\");\n  return strrchr (s, c);\n}\n\n\nWRAPPER2(char *, strstr, const char *haystack, const char *needle)\n{\n  size_t haystack_sz;\n  size_t needle_sz;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  haystack_sz = strlen (haystack);\n  needle_sz = strlen (needle);\n  MF_VALIDATE_EXTENT(haystack, CLAMPADD(haystack_sz, 1), __MF_CHECK_READ, \"strstr haystack\");\n  MF_VALIDATE_EXTENT(needle, CLAMPADD(needle_sz, 1), __MF_CHECK_READ, \"strstr needle\");\n  return strstr (haystack, needle);\n}\n\n\n#ifdef HAVE_MEMMEM\nWRAPPER2(void *, memmem,\n\tconst void *haystack, size_t haystacklen,\n\tconst void *needle, size_t needlelen)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(haystack, haystacklen, __MF_CHECK_READ, \"memmem haystack\");\n  MF_VALIDATE_EXTENT(needle, needlelen, __MF_CHECK_READ, \"memmem needle\");\n  return memmem (haystack, haystacklen, needle, needlelen);\n}\n#endif\n\n\nWRAPPER2(size_t, strlen, const char *s)\n{\n  size_t result = strlen (s);\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(s, CLAMPADD(result, 1), __MF_CHECK_READ, \"strlen region\");\n  return result;\n}\n\n\nWRAPPER2(size_t, strnlen, const char *s, size_t n)\n{\n  size_t result = strnlen (s, n);\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(s, result, __MF_CHECK_READ, \"strnlen region\");\n  return result;\n}\n\n\nWRAPPER2(void, bzero, void *s, size_t n)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(s, n, __MF_CHECK_WRITE, \"bzero region\");\n  bzero (s, n);\n}\n\n\n#undef bcopy\nWRAPPER2(void, bcopy, const void *src, void *dest, size_t n)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(src, n, __MF_CHECK_READ, \"bcopy src\");\n  MF_VALIDATE_EXTENT(dest, n, __MF_CHECK_WRITE, \"bcopy dest\");\n  bcopy (src, dest, n);\n}\n\n\n#undef bcmp\nWRAPPER2(int, bcmp, const void *s1, const void *s2, size_t n)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(s1, n, __MF_CHECK_READ, \"bcmp 1st arg\");\n  MF_VALIDATE_EXTENT(s2, n, __MF_CHECK_READ, \"bcmp 2nd arg\");\n  return bcmp (s1, s2, n);\n}\n\n\nWRAPPER2(char *, index, const char *s, int c)\n{\n  size_t n = strlen (s);\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(s, CLAMPADD(n, 1), __MF_CHECK_READ, \"index region\");\n  return index (s, c);\n}\n\n\nWRAPPER2(char *, rindex, const char *s, int c)\n{\n  size_t n = strlen (s);\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(s, CLAMPADD(n, 1), __MF_CHECK_READ, \"rindex region\");\n  return rindex (s, c);\n}\n\n/* XXX:  stpcpy, memccpy */\n\n/* XXX: *printf,*scanf */\n\n/* XXX: setjmp, longjmp */\n\nWRAPPER2(char *, asctime, struct tm *tm)\n{\n  static char *reg_result = NULL;\n  char *result;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(tm, sizeof (struct tm), __MF_CHECK_READ, \"asctime tm\");\n  result = asctime (tm);\n  if (reg_result == NULL)\n    {\n      __mf_register (result, strlen (result)+1, __MF_TYPE_STATIC, \"asctime string\");\n      reg_result = result;\n    }\n  return result;\n}\n\n\nWRAPPER2(char *, ctime, const time_t *timep)\n{\n  static char *reg_result = NULL;\n  char *result;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(timep, sizeof (time_t), __MF_CHECK_READ, \"ctime time\");\n  result = ctime (timep);\n  if (reg_result == NULL)\n    {\n      /* XXX: what if asctime and ctime return the same static ptr? */\n      __mf_register (result, strlen (result)+1, __MF_TYPE_STATIC, \"ctime string\");\n      reg_result = result;\n    }\n  return result;\n}\n\n\nWRAPPER2(struct tm*, localtime, const time_t *timep)\n{\n  static struct tm *reg_result = NULL;\n  struct tm *result;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(timep, sizeof (time_t), __MF_CHECK_READ, \"localtime time\");\n  result = localtime (timep);\n  if (reg_result == NULL)\n    {\n      __mf_register (result, sizeof (struct tm), __MF_TYPE_STATIC, \"localtime tm\");\n      reg_result = result;\n    }\n  return result;\n}\n\n\nWRAPPER2(struct tm*, gmtime, const time_t *timep)\n{\n  static struct tm *reg_result = NULL;\n  struct tm *result;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT(timep, sizeof (time_t), __MF_CHECK_READ, \"gmtime time\");\n  result = gmtime (timep);\n  if (reg_result == NULL)\n    {\n      __mf_register (result, sizeof (struct tm), __MF_TYPE_STATIC, \"gmtime tm\");\n      reg_result = result;\n    }\n  return result;\n}\n\n\n/* EL start */\n\n/* The following indicate if the result of the corresponding function\n * should be explicitly un/registered by the wrapper\n*/\n\n#ifdef __FreeBSD__\n#define MF_REGISTER_fopen\t\t__MF_TYPE_STATIC\n#else\n#undef  MF_REGISTER_fopen\n#endif\n#define MF_RESULT_SIZE_fopen\t\t(sizeof (FILE))\n\n#undef  MF_REGISTER_opendir\n#define MF_RESULT_SIZE_opendir\t\t0\t/* (sizeof (DIR)) */\n#undef  MF_REGISTER_readdir\n#define MF_REGISTER_gethostbyname\t__MF_TYPE_STATIC\n#undef  MF_REGISTER_gethostbyname_items\n#undef  MF_REGISTER_dlopen\n#undef  MF_REGISTER_dlerror\n#undef  MF_REGISTER_dlsym\n#define MF_REGISTER_shmat\t\t__MF_TYPE_GUESS\n\n\n#include <time.h>\nWRAPPER2(time_t, time, time_t *timep)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  if (NULL != timep)\n    MF_VALIDATE_EXTENT (timep, sizeof (*timep), __MF_CHECK_WRITE,\n      \"time timep\");\n  return time (timep);\n}\n\n\nWRAPPER2(char *, strerror, int errnum)\n{\n  char *p;\n  static char * last_strerror = NULL;\n\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  p = strerror (errnum);\n  if (last_strerror != NULL)\n    __mf_unregister (last_strerror, 0, __MF_TYPE_STATIC);\n  if (NULL != p)\n    __mf_register (p, strlen (p) + 1, __MF_TYPE_STATIC, \"strerror result\");\n  last_strerror = p;\n  return p;\n}\n\n\n\n/* An auxiliary data structure for tracking the hand-made stdio\n   buffers we generate during the fopen/fopen64 hooks.  In a civilized\n   language, this would be a simple dynamically sized FILE*->char*\n   lookup table, but this is C and we get to do it by hand.  */\nstruct mf_filebuffer\n{\n  FILE *file;\n  char *buffer;\n  struct mf_filebuffer *next;\n};\nstatic struct mf_filebuffer *mf_filebuffers = NULL;\n\nstatic void\nmkbuffer (FILE *f)\n{\n  /* Reset any buffer automatically provided by libc, since this may\n     have been done via mechanisms that libmudflap couldn't\n     intercept.  */\n  int rc;\n  size_t bufsize = BUFSIZ;\n  int bufmode;\n  char *buffer = malloc (bufsize);\n  struct mf_filebuffer *b = malloc (sizeof (struct mf_filebuffer));\n  assert ((buffer != NULL) && (b != NULL));\n\n  /* Link it into list.  */\n  b->file = f;\n  b->buffer = buffer;\n  b->next = mf_filebuffers;\n  mf_filebuffers = b;\n\n  /* Determine how the file is supposed to be buffered at the moment.  */\n  bufmode = fileno (f) == 2 ? _IONBF : (isatty (fileno (f)) ? _IOLBF : _IOFBF);\n\n  rc = setvbuf (f, buffer, bufmode, bufsize);\n  assert (rc == 0);\n}\n\nstatic void\nunmkbuffer (FILE *f)\n{\n  struct mf_filebuffer *b = mf_filebuffers;\n  struct mf_filebuffer **pb = & mf_filebuffers;\n  while (b != NULL)\n    {\n      if (b->file == f)\n        {\n          *pb = b->next;\n          free (b->buffer);\n          free (b);\n          return;\n        }\n      pb = & b->next;\n      b = b->next;\n    }\n}\n\n\n\nWRAPPER2(FILE *, fopen, const char *path, const char *mode)\n{\n  size_t n;\n  FILE *p;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n\n  n = strlen (path);\n  MF_VALIDATE_EXTENT (path, CLAMPADD(n, 1), __MF_CHECK_READ, \"fopen path\");\n\n  n = strlen (mode);\n  MF_VALIDATE_EXTENT (mode, CLAMPADD(n, 1), __MF_CHECK_READ, \"fopen mode\");\n\n  p = fopen (path, mode);\n  if (NULL != p) {\n#ifdef MF_REGISTER_fopen\n    __mf_register (p, sizeof (*p), MF_REGISTER_fopen, \"fopen result\");\n#endif\n    MF_VALIDATE_EXTENT (p, sizeof (*p), __MF_CHECK_WRITE, \"fopen result\");\n\n    mkbuffer (p);\n  }\n\n  return p;\n}\n\n\nWRAPPER2(int, setvbuf, FILE *stream, char *buf, int mode, size_t size)\n{\n  int rc = 0;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE, \"setvbuf stream\");\n\n  unmkbuffer (stream);\n\n  if (buf != NULL)\n    MF_VALIDATE_EXTENT (buf, size, __MF_CHECK_WRITE, \"setvbuf buffer\");\n\n  /* Override the user only if it's an auto-allocated buffer request.  Otherwise\n     assume that the supplied buffer is already known to libmudflap.  */\n  if ((buf == NULL) && ((mode == _IOFBF) || (mode == _IOLBF)))\n    mkbuffer (stream);\n  else\n    rc = setvbuf (stream, buf, mode, size);\n\n  return rc;\n}\n\n\n#ifdef HAVE_SETBUF\nWRAPPER2(int, setbuf, FILE* stream, char *buf)\n{\n  return __mfwrap_setvbuf (stream, buf, buf ? _IOFBF : _IONBF, BUFSIZ);\n}\n#endif\n\n#ifdef HAVE_SETBUFFER\nWRAPPER2(int, setbuffer, FILE* stream, char *buf, size_t sz)\n{\n  return __mfwrap_setvbuf (stream, buf, buf ? _IOFBF : _IONBF, sz);\n}\n#endif\n\n#ifdef HAVE_SETLINEBUF\nWRAPPER2(int, setlinebuf, FILE* stream)\n{\n  return __mfwrap_setvbuf(stream, NULL, _IOLBF, 0);\n}\n#endif\n\n\n\nWRAPPER2(FILE *, fdopen, int fd, const char *mode)\n{\n  size_t n;\n  FILE *p;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n\n  n = strlen (mode);\n  MF_VALIDATE_EXTENT (mode, CLAMPADD(n, 1), __MF_CHECK_READ, \"fdopen mode\");\n\n  p = fdopen (fd, mode);\n  if (NULL != p) {\n#ifdef MF_REGISTER_fopen\n    __mf_register (p, sizeof (*p), MF_REGISTER_fopen, \"fdopen result\");\n#endif\n    MF_VALIDATE_EXTENT (p, sizeof (*p), __MF_CHECK_WRITE, \"fdopen result\");\n\n    mkbuffer (p);\n  }\n\n  return p;\n}\n\n\nWRAPPER2(FILE *, freopen, const char *path, const char *mode, FILE *s)\n{\n  size_t n;\n  FILE *p;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n\n  n = strlen (path);\n  MF_VALIDATE_EXTENT (path, CLAMPADD(n, 1), __MF_CHECK_READ, \"freopen path\");\n\n  MF_VALIDATE_EXTENT (s, (sizeof (*s)), __MF_CHECK_WRITE, \"freopen stream\");\n  unmkbuffer (s);\n\n  n = strlen (mode);\n  MF_VALIDATE_EXTENT (mode, CLAMPADD(n, 1), __MF_CHECK_READ, \"freopen mode\");\n\n  p = freopen (path, mode, s);\n  if (NULL != p) {\n#ifdef MF_REGISTER_fopen\n    __mf_register (p, sizeof (*p), MF_REGISTER_fopen, \"freopen result\");\n#endif\n    MF_VALIDATE_EXTENT (p, sizeof (*p), __MF_CHECK_WRITE, \"freopen result\");\n\n    mkbuffer (p);\n  }\n\n  return p;\n}\n\n\n#ifdef HAVE_FOPEN64\nWRAPPER2(FILE *, fopen64, const char *path, const char *mode)\n{\n  size_t n;\n  FILE *p;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n\n  n = strlen (path);\n  MF_VALIDATE_EXTENT (path, CLAMPADD(n, 1), __MF_CHECK_READ, \"fopen64 path\");\n\n  n = strlen (mode);\n  MF_VALIDATE_EXTENT (mode, CLAMPADD(n, 1), __MF_CHECK_READ, \"fopen64 mode\");\n\n  p = fopen64 (path, mode);\n  if (NULL != p) {\n#ifdef MF_REGISTER_fopen\n    __mf_register (p, sizeof (*p), MF_REGISTER_fopen, \"fopen64 result\");\n#endif\n    MF_VALIDATE_EXTENT (p, sizeof (*p), __MF_CHECK_WRITE, \"fopen64 result\");\n\n    mkbuffer (p);\n  }\n\n  return p;\n}\n#endif\n\n\n#ifdef HAVE_FREOPEN64\nWRAPPER2(FILE *, freopen64, const char *path, const char *mode, FILE *s)\n{\n  size_t n;\n  FILE *p;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n\n  n = strlen (path);\n  MF_VALIDATE_EXTENT (path, CLAMPADD(n, 1), __MF_CHECK_READ, \"freopen64 path\");\n\n  MF_VALIDATE_EXTENT (s, (sizeof (*s)), __MF_CHECK_WRITE, \"freopen64 stream\");\n  unmkbuffer (s);\n\n  n = strlen (mode);\n  MF_VALIDATE_EXTENT (mode, CLAMPADD(n, 1), __MF_CHECK_READ, \"freopen64 mode\");\n\n  p = freopen (path, mode, s);\n  if (NULL != p) {\n#ifdef MF_REGISTER_fopen\n    __mf_register (p, sizeof (*p), MF_REGISTER_fopen, \"freopen64 result\");\n#endif\n    MF_VALIDATE_EXTENT (p, sizeof (*p), __MF_CHECK_WRITE, \"freopen64 result\");\n\n    mkbuffer (p);\n  }\n\n  return p;\n}\n#endif\n\n\nWRAPPER2(int, fclose, FILE *stream)\n{\n  int resp;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"fclose stream\");\n  resp = fclose (stream);\n#ifdef MF_REGISTER_fopen\n  __mf_unregister (stream, sizeof (*stream), MF_REGISTER_fopen);\n#endif\n  unmkbuffer (stream);\n\n  return resp;\n}\n\n\nWRAPPER2(size_t, fread, void *ptr, size_t size, size_t nmemb, FILE *stream)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"fread stream\");\n  MF_VALIDATE_EXTENT (ptr, size * nmemb, __MF_CHECK_WRITE, \"fread buffer\");\n  return fread (ptr, size, nmemb, stream);\n}\n\n\nWRAPPER2(size_t, fwrite, const void *ptr, size_t size, size_t nmemb,\n\tFILE *stream)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"fwrite stream\");\n  MF_VALIDATE_EXTENT (ptr, size * nmemb, __MF_CHECK_READ, \"fwrite buffer\");\n  return fwrite (ptr, size, nmemb, stream);\n}\n\n\nWRAPPER2(int, fgetc, FILE *stream)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"fgetc stream\");\n  return fgetc (stream);\n}\n\n\nWRAPPER2(char *, fgets, char *s, int size, FILE *stream)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"fgets stream\");\n  MF_VALIDATE_EXTENT (s, size, __MF_CHECK_WRITE, \"fgets buffer\");\n  return fgets (s, size, stream);\n}\n\n\nWRAPPER2(int, getc, FILE *stream)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"getc stream\");\n  return getc (stream);\n}\n\n\nWRAPPER2(char *, gets, char *s)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (s, 1, __MF_CHECK_WRITE, \"gets buffer\");\n  /* Avoid link-time warning... */\n  s = fgets (s, INT_MAX, stdin);\n  if (NULL != s) {\t/* better late than never */\n    size_t n = strlen (s);\n    MF_VALIDATE_EXTENT (s, CLAMPADD(n, 1), __MF_CHECK_WRITE, \"gets buffer\");\n  }\n  return s;\n}\n\n\nWRAPPER2(int, ungetc, int c, FILE *stream)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n     \"ungetc stream\");\n  return ungetc (c, stream);\n}\n\n\nWRAPPER2(int, fputc, int c, FILE *stream)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"fputc stream\");\n  return fputc (c, stream);\n}\n\n\nWRAPPER2(int, fputs, const char *s, FILE *stream)\n{\n  size_t n;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  n = strlen (s);\n  MF_VALIDATE_EXTENT (s, CLAMPADD(n, 1), __MF_CHECK_READ, \"fputs buffer\");\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"fputs stream\");\n  return fputs (s, stream);\n}\n\n\nWRAPPER2(int, putc, int c, FILE *stream)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"putc stream\");\n  return putc (c, stream);\n}\n\n\nWRAPPER2(int, puts, const char *s)\n{\n  size_t n;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  n = strlen (s);\n  MF_VALIDATE_EXTENT (s, CLAMPADD(n, 1), __MF_CHECK_READ, \"puts buffer\");\n  return puts (s);\n}\n\n\nWRAPPER2(void, clearerr, FILE *stream)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"clearerr stream\");\n  clearerr (stream);\n}\n\n\nWRAPPER2(int, feof, FILE *stream)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"feof stream\");\n  return feof (stream);\n}\n\n\nWRAPPER2(int, ferror, FILE *stream)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"ferror stream\");\n  return ferror (stream);\n}\n\n\nWRAPPER2(int, fileno, FILE *stream)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"fileno stream\");\n  return fileno (stream);\n}\n\n\nWRAPPER2(int, printf, const char *format, ...)\n{\n  size_t n;\n  va_list ap;\n  int result;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  n = strlen (format);\n  MF_VALIDATE_EXTENT (format, CLAMPADD(n, 1), __MF_CHECK_READ,\n    \"printf format\");\n  va_start (ap, format);\n  result = vprintf (format, ap);\n  va_end (ap);\n  return result;\n}\n\n\nWRAPPER2(int, fprintf, FILE *stream, const char *format, ...)\n{\n  size_t n;\n  va_list ap;\n  int result;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"fprintf stream\");\n  n = strlen (format);\n  MF_VALIDATE_EXTENT (format, CLAMPADD(n, 1), __MF_CHECK_READ,\n    \"fprintf format\");\n  va_start (ap, format);\n  result = vfprintf (stream, format, ap);\n  va_end (ap);\n  return result;\n}\n\n\nWRAPPER2(int, sprintf, char *str, const char *format, ...)\n{\n  size_t n;\n  va_list ap;\n  int result;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (str, 1, __MF_CHECK_WRITE, \"sprintf str\");\n  n = strlen (format);\n  MF_VALIDATE_EXTENT (format, CLAMPADD(n, 1), __MF_CHECK_READ,\n    \"sprintf format\");\n  va_start (ap, format);\n  result = vsprintf (str, format, ap);\n  va_end (ap);\n  n = strlen (str);\n  MF_VALIDATE_EXTENT (str, CLAMPADD(n, 1), __MF_CHECK_WRITE, \"sprintf str\");\n  return result;\n}\n\n\nWRAPPER2(int, snprintf, char *str, size_t size, const char *format, ...)\n{\n  size_t n;\n  va_list ap;\n  int result;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (str, size, __MF_CHECK_WRITE, \"snprintf str\");\n  n = strlen (format);\n  MF_VALIDATE_EXTENT (format, CLAMPADD(n, 1), __MF_CHECK_READ,\n    \"snprintf format\");\n  va_start (ap, format);\n  result = vsnprintf (str, size, format, ap);\n  va_end (ap);\n  return result;\n}\n\n\nWRAPPER2(int, vprintf,  const char *format, va_list ap)\n{\n  size_t n;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  n = strlen (format);\n  MF_VALIDATE_EXTENT (format, CLAMPADD(n, 1), __MF_CHECK_READ,\n    \"vprintf format\");\n  return vprintf (format, ap);\n}\n\n\nWRAPPER2(int, vfprintf, FILE *stream, const char *format, va_list ap)\n{\n  size_t n;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"vfprintf stream\");\n  n = strlen (format);\n  MF_VALIDATE_EXTENT (format, CLAMPADD(n, 1), __MF_CHECK_READ,\n    \"vfprintf format\");\n  return vfprintf (stream, format, ap);\n}\n\n\nWRAPPER2(int, vsprintf, char *str, const char *format, va_list ap)\n{\n  size_t n;\n  int result;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (str, 1, __MF_CHECK_WRITE, \"vsprintf str\");\n  n = strlen (format);\n  MF_VALIDATE_EXTENT (format, CLAMPADD(n, 1), __MF_CHECK_READ,\n    \"vsprintf format\");\n  result = vsprintf (str, format, ap);\n  n = strlen (str);\n  MF_VALIDATE_EXTENT (str, CLAMPADD(n, 1), __MF_CHECK_WRITE, \"vsprintf str\");\n  return result;\n}\n\n\nWRAPPER2(int, vsnprintf, char *str, size_t size, const char *format,\n\tva_list ap)\n{\n  size_t n;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (str, size, __MF_CHECK_WRITE, \"vsnprintf str\");\n  n = strlen (format);\n  MF_VALIDATE_EXTENT (format, CLAMPADD(n, 1), __MF_CHECK_READ,\n    \"vsnprintf format\");\n  return vsnprintf (str, size, format, ap);\n}\n\n\nWRAPPER2(int , access, const char *path, int mode)\n{\n  size_t n;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  n = strlen (path);\n  MF_VALIDATE_EXTENT (path, CLAMPADD(n, 1), __MF_CHECK_READ, \"access path\");\n  return access (path, mode);\n}\n\n\nWRAPPER2(int , remove, const char *path)\n{\n  size_t n;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  n = strlen (path);\n  MF_VALIDATE_EXTENT (path, CLAMPADD(n, 1), __MF_CHECK_READ, \"remove path\");\n  return remove (path);\n}\n\n\nWRAPPER2(int, fflush, FILE *stream)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  if (stream != NULL)\n    MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n                        \"fflush stream\");\n  return fflush (stream);\n}\n\n\nWRAPPER2(int, fseek, FILE *stream, long offset, int whence)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"fseek stream\");\n  return fseek (stream, offset, whence);\n}\n\n\n#ifdef HAVE_FSEEKO64\nWRAPPER2(int, fseeko64, FILE *stream, off64_t offset, int whence)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"fseeko64 stream\");\n  return fseeko64 (stream, offset, whence);\n}\n#endif\n\n\nWRAPPER2(long, ftell, FILE *stream)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"ftell stream\");\n  return ftell (stream);\n}\n\n\n#ifdef HAVE_FTELLO64\nWRAPPER2(off64_t, ftello64, FILE *stream)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"ftello64 stream\");\n  return ftello64 (stream);\n}\n#endif\n\n\nWRAPPER2(void, rewind, FILE *stream)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"rewind stream\");\n  rewind (stream);\n}\n\n\nWRAPPER2(int, fgetpos, FILE *stream, fpos_t *pos)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"fgetpos stream\");\n  MF_VALIDATE_EXTENT (pos, sizeof (*pos), __MF_CHECK_WRITE, \"fgetpos pos\");\n  return fgetpos (stream, pos);\n}\n\n\nWRAPPER2(int, fsetpos, FILE *stream, fpos_t *pos)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"fsetpos stream\");\n  MF_VALIDATE_EXTENT (pos, sizeof (*pos), __MF_CHECK_READ, \"fsetpos pos\");\n  return fsetpos (stream, pos);\n}\n\n\nWRAPPER2(int , stat, const char *path, struct stat *buf)\n{\n  size_t n;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  n = strlen (path);\n  MF_VALIDATE_EXTENT (path, CLAMPADD(n, 1), __MF_CHECK_READ, \"stat path\");\n  MF_VALIDATE_EXTENT (buf, sizeof (*buf), __MF_CHECK_READ, \"stat buf\");\n  return stat (path, buf);\n}\n\n\n#ifdef HAVE_STAT64\nWRAPPER2(int , stat64, const char *path, struct stat64 *buf)\n{\n  size_t n;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  n = strlen (path);\n  MF_VALIDATE_EXTENT (path, CLAMPADD(n, 1), __MF_CHECK_READ, \"stat64 path\");\n  MF_VALIDATE_EXTENT (buf, sizeof (*buf), __MF_CHECK_READ, \"stat64 buf\");\n  return stat64 (path, buf);\n}\n#endif\n\n\nWRAPPER2(int , fstat, int filedes, struct stat *buf)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (buf, sizeof (*buf), __MF_CHECK_READ, \"fstat buf\");\n  return fstat (filedes, buf);\n}\n\n\nWRAPPER2(int , lstat, const char *path, struct stat *buf)\n{\n  size_t n;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  n = strlen (path);\n  MF_VALIDATE_EXTENT (path, CLAMPADD(n, 1), __MF_CHECK_READ, \"lstat path\");\n  MF_VALIDATE_EXTENT (buf, sizeof (*buf), __MF_CHECK_READ, \"lstat buf\");\n  return lstat (path, buf);\n}\n\n\nWRAPPER2(int , mkfifo, const char *path, mode_t mode)\n{\n  size_t n;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  n = strlen (path);\n  MF_VALIDATE_EXTENT (path, CLAMPADD(n, 1), __MF_CHECK_READ, \"mkfifo path\");\n  return mkfifo (path, mode);\n}\n\n\n#ifdef HAVE_DIRENT_H\nWRAPPER2(DIR *, opendir, const char *path)\n{\n  DIR *p;\n  size_t n;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  n = strlen (path);\n  MF_VALIDATE_EXTENT (path, CLAMPADD(n, 1), __MF_CHECK_READ, \"opendir path\");\n\n  p = opendir (path);\n  if (NULL != p) {\n#ifdef MF_REGISTER_opendir\n    __mf_register (p, MF_RESULT_SIZE_opendir, MF_REGISTER_opendir,\n      \"opendir result\");\n#endif\n    MF_VALIDATE_EXTENT (p, MF_RESULT_SIZE_opendir, __MF_CHECK_WRITE,\n      \"opendir result\");\n  }\n  return p;\n}\n\n\nWRAPPER2(int, closedir, DIR *dir)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (dir, 0, __MF_CHECK_WRITE, \"closedir dir\");\n#ifdef MF_REGISTER_opendir\n  __mf_unregister (dir, MF_RESULT_SIZE_opendir, MF_REGISTER_opendir);\n#endif\n  return closedir (dir);\n}\n\n\nWRAPPER2(struct dirent *, readdir, DIR *dir)\n{\n  struct dirent *p;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (dir, 0, __MF_CHECK_READ, \"readdir dir\");\n  p = readdir (dir);\n  if (NULL != p) {\n#ifdef MF_REGISTER_readdir\n    __mf_register (p, sizeof (*p), MF_REGISTER_readdir, \"readdir result\");\n#endif\n    MF_VALIDATE_EXTENT (p, sizeof (*p), __MF_CHECK_WRITE, \"readdir result\");\n  }\n  return p;\n}\n#endif\n\n\n#ifdef HAVE_SYS_SOCKET_H\n\nWRAPPER2(int, recv, int s, void *buf, size_t len, int flags)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (buf, len, __MF_CHECK_WRITE, \"recv buf\");\n  return recv (s, buf, len, flags);\n}\n\n\nWRAPPER2(int, recvfrom, int s, void *buf, size_t len, int flags,\n\t\tstruct sockaddr *from, socklen_t *fromlen)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (buf, len, __MF_CHECK_WRITE, \"recvfrom buf\");\n  MF_VALIDATE_EXTENT (from, (size_t)*fromlen, __MF_CHECK_WRITE,\n    \"recvfrom from\");\n  return recvfrom (s, buf, len, flags, from, fromlen);\n}\n\n\nWRAPPER2(int, recvmsg, int s, struct msghdr *msg, int flags)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (msg, sizeof (*msg), __MF_CHECK_WRITE, \"recvmsg msg\");\n  return recvmsg (s, msg, flags);\n}\n\n\nWRAPPER2(int, send, int s, const void *msg, size_t len, int flags)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (msg, len, __MF_CHECK_READ, \"send msg\");\n  return send (s, msg, len, flags);\n}\n\n\nWRAPPER2(int, sendto, int s, const void *msg, size_t len, int flags,\n\t\tconst struct sockaddr *to, socklen_t tolen)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (msg, len, __MF_CHECK_READ, \"sendto msg\");\n  MF_VALIDATE_EXTENT (to, (size_t)tolen, __MF_CHECK_WRITE, \"sendto to\");\n  return sendto (s, msg, len, flags, to, tolen);\n}\n\n\nWRAPPER2(int, sendmsg, int s, const void *msg, int flags)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (msg, sizeof (*msg), __MF_CHECK_READ, \"sendmsg msg\");\n  return sendmsg (s, msg, flags);\n}\n\n\nWRAPPER2(int, setsockopt, int s, int level, int optname, const void *optval,\n\tsocklen_t optlen)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (optval, (size_t)optlen, __MF_CHECK_READ,\n    \"setsockopt optval\");\n  return setsockopt (s, level, optname, optval, optlen);\n}\n\n\nWRAPPER2(int, getsockopt, int s, int level, int optname, void *optval,\n\t\tsocklen_t *optlen)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (optval, (size_t)*optlen, __MF_CHECK_WRITE,\n    \"getsockopt optval\");\n  return getsockopt (s, level, optname, optval, optlen);\n}\n\n\nWRAPPER2(int, accept, int s, struct  sockaddr *addr, socklen_t *addrlen)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  if (addr != NULL)\n    MF_VALIDATE_EXTENT (addr, (size_t)*addrlen, __MF_CHECK_WRITE, \"accept addr\");\n  return accept (s, addr, addrlen);\n}\n\n\nWRAPPER2(int, bind, int sockfd, struct  sockaddr *addr, socklen_t addrlen)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (addr, (size_t)addrlen, __MF_CHECK_WRITE, \"bind addr\");\n  return bind (sockfd, addr, addrlen);\n}\n\n\nWRAPPER2(int, connect, int sockfd, const struct sockaddr  *addr,\n\tsocklen_t addrlen)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (addr, (size_t)addrlen, __MF_CHECK_READ,\n    \"connect addr\");\n  return connect (sockfd, addr, addrlen);\n}\n\n#endif /* HAVE_SYS_SOCKET_H */\n\n\nWRAPPER2(int, gethostname, char *name, size_t len)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (name, len, __MF_CHECK_WRITE, \"gethostname name\");\n  return gethostname (name, len);\n}\n\n\n#ifdef HAVE_SETHOSTNAME\nWRAPPER2(int, sethostname, const char *name, size_t len)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (name, len, __MF_CHECK_READ, \"sethostname name\");\n  return sethostname (name, len);\n}\n#endif\n\n\n#ifdef HAVE_NETDB_H\n\nWRAPPER2(struct hostent *, gethostbyname, const char *name)\n{\n  struct hostent *p;\n  char **ss;\n  char *s;\n  size_t n;\n  int nreg;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  n = strlen (name);\n  MF_VALIDATE_EXTENT (name, CLAMPADD(n, 1), __MF_CHECK_READ,\n    \"gethostbyname name\");\n  p = gethostbyname (name);\n  if (NULL != p) {\n#ifdef MF_REGISTER_gethostbyname\n    __mf_register (p, sizeof (*p), MF_REGISTER_gethostbyname,\n      \"gethostbyname result\");\n#endif\n    MF_VALIDATE_EXTENT (p, sizeof (*p), __MF_CHECK_WRITE,\n      \"gethostbyname result\");\n    if (NULL != (s = p->h_name)) {\n      n = strlen (s);\n      n = CLAMPADD(n, 1);\n#ifdef MF_REGISTER_gethostbyname_items\n      __mf_register (s, n, MF_REGISTER_gethostbyname_items,\n        \"gethostbyname result->h_name\");\n#endif\n      MF_VALIDATE_EXTENT (s, n, __MF_CHECK_WRITE,\n        \"gethostbyname result->h_name\");\n    }\n\n    if (NULL != (ss = p->h_aliases)) {\n      for (nreg = 1;; ++nreg) {\n        s = *ss++;\n        if (NULL == s)\n          break;\n        n = strlen (s);\n        n = CLAMPADD(n, 1);\n#ifdef MF_REGISTER_gethostbyname_items\n        __mf_register (s, n, MF_REGISTER_gethostbyname_items,\n          \"gethostbyname result->h_aliases[]\");\n#endif\n        MF_VALIDATE_EXTENT (s, n, __MF_CHECK_WRITE,\n          \"gethostbyname result->h_aliases[]\");\n      }\n      nreg *= sizeof (*p->h_aliases);\n#ifdef MF_REGISTER_gethostbyname_items\n      __mf_register (p->h_aliases, nreg, MF_REGISTER_gethostbyname_items,\n        \"gethostbyname result->h_aliases\");\n#endif\n      MF_VALIDATE_EXTENT (p->h_aliases, nreg, __MF_CHECK_WRITE,\n        \"gethostbyname result->h_aliases\");\n    }\n\n    if (NULL != (ss = p->h_addr_list)) {\n      for (nreg = 1;; ++nreg) {\n        s = *ss++;\n        if (NULL == s)\n          break;\n#ifdef MF_REGISTER_gethostbyname_items\n        __mf_register (s, p->h_length, MF_REGISTER_gethostbyname_items,\n          \"gethostbyname result->h_addr_list[]\");\n#endif\n        MF_VALIDATE_EXTENT (s, p->h_length, __MF_CHECK_WRITE,\n          \"gethostbyname result->h_addr_list[]\");\n      }\n      nreg *= sizeof (*p->h_addr_list);\n#ifdef MF_REGISTER_gethostbyname_items\n      __mf_register (p->h_addr_list, nreg, MF_REGISTER_gethostbyname_items,\n        \"gethostbyname result->h_addr_list\");\n#endif\n      MF_VALIDATE_EXTENT (p->h_addr_list, nreg, __MF_CHECK_WRITE,\n        \"gethostbyname result->h_addr_list\");\n    }\n  }\n  return p;\n}\n\n#endif /* HAVE_NETDB_H */\n\n\n#ifdef HAVE_SYS_WAIT_H\n\nWRAPPER2(pid_t, wait, int *status)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  if (NULL != status)\n    MF_VALIDATE_EXTENT (status, sizeof (*status), __MF_CHECK_WRITE,\n      \"wait status\");\n  return wait (status);\n}\n\n\nWRAPPER2(pid_t, waitpid, pid_t pid, int *status, int options)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  if (NULL != status)\n    MF_VALIDATE_EXTENT (status, sizeof (*status), __MF_CHECK_WRITE,\n      \"waitpid status\");\n  return waitpid (pid, status, options);\n}\n\n#endif /* HAVE_SYS_WAIT_H */\n\n\nWRAPPER2(FILE *, popen, const char *command, const char *mode)\n{\n  size_t n;\n  FILE *p;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n\n  n = strlen (command);\n  MF_VALIDATE_EXTENT (command, CLAMPADD(n, 1), __MF_CHECK_READ, \"popen path\");\n\n  n = strlen (mode);\n  MF_VALIDATE_EXTENT (mode, CLAMPADD(n, 1), __MF_CHECK_READ, \"popen mode\");\n\n  p = popen (command, mode);\n  if (NULL != p) {\n#ifdef MF_REGISTER_fopen\n    __mf_register (p, sizeof (*p), MF_REGISTER_fopen, \"popen result\");\n#endif\n    MF_VALIDATE_EXTENT (p, sizeof (*p), __MF_CHECK_WRITE, \"popen result\");\n  }\n  return p;\n}\n\n\nWRAPPER2(int, pclose, FILE *stream)\n{\n  int resp;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (stream, sizeof (*stream), __MF_CHECK_WRITE,\n    \"pclose stream\");\n  resp = pclose (stream);\n#ifdef MF_REGISTER_fopen\n  __mf_unregister (stream, sizeof (*stream), MF_REGISTER_fopen);\n#endif\n  return resp;\n}\n\n\nWRAPPER2(int, execve, const char *path, char *const argv [],\n\tchar *const envp[])\n{\n  size_t n;\n  char *const *p;\n  const char *s;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n\n  n = strlen (path);\n  MF_VALIDATE_EXTENT (path, CLAMPADD(n, 1), __MF_CHECK_READ, \"execve path\");\n\n  for (p = argv;;) {\n    MF_VALIDATE_EXTENT (p, sizeof (*p), __MF_CHECK_READ, \"execve *argv\");\n    s = *p++;\n    if (NULL == s)\n      break;\n    n = strlen (s);\n    MF_VALIDATE_EXTENT (s, CLAMPADD(n, 1), __MF_CHECK_READ, \"execve **argv\");\n  }\n\n  for (p = envp;;) {\n    MF_VALIDATE_EXTENT (p, sizeof (*p), __MF_CHECK_READ, \"execve *envp\");\n    s = *p++;\n    if (NULL == s)\n      break;\n    n = strlen (s);\n    MF_VALIDATE_EXTENT (s, CLAMPADD(n, 1), __MF_CHECK_READ, \"execve **envp\");\n  }\n  return execve (path, argv, envp);\n}\n\n\nWRAPPER2(int, execv, const char *path, char *const argv [])\n{\n  size_t n;\n  char *const *p;\n  const char *s;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n\n  n = strlen (path);\n  MF_VALIDATE_EXTENT (path, CLAMPADD(n, 1), __MF_CHECK_READ, \"execv path\");\n\n  for (p = argv;;) {\n    MF_VALIDATE_EXTENT (p, sizeof (*p), __MF_CHECK_READ, \"execv *argv\");\n    s = *p++;\n    if (NULL == s)\n      break;\n    n = strlen (s);\n    MF_VALIDATE_EXTENT (s, CLAMPADD(n, 1), __MF_CHECK_READ, \"execv **argv\");\n  }\n  return execv (path, argv);\n}\n\n\nWRAPPER2(int, execvp, const char *path, char *const argv [])\n{\n  size_t n;\n  char *const *p;\n  const char *s;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n\n  n = strlen (path);\n  MF_VALIDATE_EXTENT (path, CLAMPADD(n, 1), __MF_CHECK_READ, \"execvp path\");\n\n  for (p = argv;;) {\n    MF_VALIDATE_EXTENT (p, sizeof (*p), __MF_CHECK_READ, \"execvp *argv\");\n    s = *p++;\n    if (NULL == s)\n      break;\n    n = strlen (s);\n    MF_VALIDATE_EXTENT (s, CLAMPADD(n, 1), __MF_CHECK_READ, \"execvp **argv\");\n  }\n  return execvp (path, argv);\n}\n\n\nWRAPPER2(int, system, const char *string)\n{\n  size_t n;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  n = strlen (string);\n  MF_VALIDATE_EXTENT (string, CLAMPADD(n, 1), __MF_CHECK_READ,\n    \"system string\");\n  return system (string);\n}\n\n\nWRAPPER2(void *, dlopen, const char *path, int flags)\n{\n  void *p;\n  size_t n;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  n = strlen (path);\n  MF_VALIDATE_EXTENT (path, CLAMPADD(n, 1), __MF_CHECK_READ, \"dlopen path\");\n  p = dlopen (path, flags);\n  if (NULL != p) {\n#ifdef MF_REGISTER_dlopen\n    __mf_register (p, 0, MF_REGISTER_dlopen, \"dlopen result\");\n#endif\n    MF_VALIDATE_EXTENT (p, 0, __MF_CHECK_WRITE, \"dlopen result\");\n  }\n  return p;\n}\n\n\nWRAPPER2(int, dlclose, void *handle)\n{\n  int resp;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (handle, 0, __MF_CHECK_READ, \"dlclose handle\");\n  resp = dlclose (handle);\n#ifdef MF_REGISTER_dlopen\n  __mf_unregister (handle, 0, MF_REGISTER_dlopen);\n#endif\n  return resp;\n}\n\n\nWRAPPER2(char *, dlerror)\n{\n  char *p;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  p = dlerror ();\n  if (NULL != p) {\n    size_t n;\n    n = strlen (p);\n    n = CLAMPADD(n, 1);\n#ifdef MF_REGISTER_dlerror\n    __mf_register (p, n, MF_REGISTER_dlerror, \"dlerror result\");\n#endif\n    MF_VALIDATE_EXTENT (p, n, __MF_CHECK_WRITE, \"dlerror result\");\n  }\n  return p;\n}\n\n\nWRAPPER2(void *, dlsym, void *handle, char *symbol)\n{\n  size_t n;\n  void *p;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (handle, 0, __MF_CHECK_READ, \"dlsym handle\");\n  n = strlen (symbol);\n  MF_VALIDATE_EXTENT (symbol, CLAMPADD(n, 1), __MF_CHECK_READ, \"dlsym symbol\");\n  p = dlsym (handle, symbol);\n  if (NULL != p) {\n#ifdef MF_REGISTER_dlsym\n    __mf_register (p, 0, MF_REGISTER_dlsym, \"dlsym result\");\n#endif\n    MF_VALIDATE_EXTENT (p, 0, __MF_CHECK_WRITE, \"dlsym result\");\n  }\n  return p;\n}\n\n\n#if defined (HAVE_SYS_IPC_H) && defined (HAVE_SYS_SEM_H) && defined (HAVE_SYS_SHM_H)\n\nWRAPPER2(int, semop, int semid, struct sembuf *sops, unsigned nsops)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  MF_VALIDATE_EXTENT (sops, sizeof (*sops) * nsops, __MF_CHECK_READ,\n    \"semop sops\");\n  return semop (semid, sops, nsops);\n}\n\n\n#ifndef HAVE_UNION_SEMUN\nunion semun {\n\tint val;\t\t\t/* value for SETVAL */\n\tstruct semid_ds *buf;\t\t/* buffer for IPC_STAT, IPC_SET */\n\tunsigned short int *array;\t/* array for GETALL, SETALL */\n\tstruct seminfo *__buf;\t\t/* buffer for IPC_INFO */\n};\n#endif\nWRAPPER2(int, semctl, int semid, int semnum, int cmd, union semun arg)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  switch (cmd) {\n  case IPC_STAT:\n    MF_VALIDATE_EXTENT (arg.buf, sizeof (*arg.buf), __MF_CHECK_WRITE,\n      \"semctl buf\");\n    break;\n  case IPC_SET:\n    MF_VALIDATE_EXTENT (arg.buf, sizeof (*arg.buf), __MF_CHECK_READ,\n      \"semctl buf\");\n    break;\n  case GETALL:\n    MF_VALIDATE_EXTENT (arg.array, sizeof (*arg.array), __MF_CHECK_WRITE,\n      \"semctl array\");\n  case SETALL:\n    MF_VALIDATE_EXTENT (arg.array, sizeof (*arg.array), __MF_CHECK_READ,\n      \"semctl array\");\n    break;\n#ifdef IPC_INFO\n  /* FreeBSD 5.1 And Cygwin headers include IPC_INFO but not the __buf field.  */\n#if !defined(__FreeBSD__) && !defined(__CYGWIN__)\n  case IPC_INFO:\n    MF_VALIDATE_EXTENT (arg.__buf, sizeof (*arg.__buf), __MF_CHECK_WRITE,\n      \"semctl __buf\");\n    break;\n#endif\n#endif\n  default:\n    break;\n  }\n  return semctl (semid, semnum, cmd, arg);\n}\n\n\nWRAPPER2(int, shmctl, int shmid, int cmd, struct shmid_ds *buf)\n{\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  switch (cmd) {\n  case IPC_STAT:\n    MF_VALIDATE_EXTENT (buf, sizeof (*buf), __MF_CHECK_WRITE,\n      \"shmctl buf\");\n    break;\n  case IPC_SET:\n    MF_VALIDATE_EXTENT (buf, sizeof (*buf), __MF_CHECK_READ,\n      \"shmctl buf\");\n    break;\n  default:\n    break;\n  }\n  return shmctl (shmid, cmd, buf);\n}\n\n\nWRAPPER2(void *, shmat, int shmid, const void *shmaddr, int shmflg)\n{\n  void *p;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  p = shmat (shmid, shmaddr, shmflg);\n#ifdef MF_REGISTER_shmat\n  if (NULL != p) {\n    struct shmid_ds buf;\n    __mf_register (p, shmctl (shmid, IPC_STAT, &buf) ? 0 : buf.shm_segsz,\n      MF_REGISTER_shmat, \"shmat result\");\n  }\n#endif\n  return p;\n}\n\n\nWRAPPER2(int, shmdt, const void *shmaddr)\n{\n  int resp;\n  TRACE (\"%s\\n\", __PRETTY_FUNCTION__);\n  resp = shmdt (shmaddr);\n#ifdef MF_REGISTER_shmat\n  __mf_unregister ((void *)shmaddr, 0, MF_REGISTER_shmat);\n#endif\n  return resp;\n}\n\n\n#endif /* HAVE_SYS_IPC/SEM/SHM_H */\n\n\n\n/* ctype stuff.  This is host-specific by necessity, as the arrays\n   that is used by most is*()/to*() macros are implementation-defined.  */\n\n/* GLIBC 2.3 */\n#ifdef HAVE___CTYPE_B_LOC\nWRAPPER2(unsigned short **, __ctype_b_loc, void)\n{\n  static unsigned short * last_buf = (void *) 0;\n  static unsigned short ** last_ptr = (void *) 0;\n  unsigned short ** ptr = (unsigned short **) __ctype_b_loc ();\n  unsigned short * buf = * ptr;\n  if (ptr != last_ptr)\n    {\n      /* XXX: unregister last_ptr? */\n      last_ptr = ptr;\n      __mf_register (last_ptr, sizeof(last_ptr), __MF_TYPE_STATIC, \"ctype_b_loc **\");\n    }\n  if (buf != last_buf)\n    {\n      last_buf = buf;\n      __mf_register ((void *) (last_buf - 128), 384 * sizeof(unsigned short), __MF_TYPE_STATIC,\n                     \"ctype_b_loc []\");\n    }\n  return ptr;\n}\n#endif\n\n#ifdef HAVE___CTYPE_TOUPPER_LOC\nWRAPPER2(int **, __ctype_toupper_loc, void)\n{\n  static int * last_buf = (void *) 0;\n  static int ** last_ptr = (void *) 0;\n  int ** ptr = (int **) __ctype_toupper_loc ();\n  int * buf = * ptr;\n  if (ptr != last_ptr)\n    {\n      /* XXX: unregister last_ptr? */\n      last_ptr = ptr;\n      __mf_register (last_ptr, sizeof(last_ptr), __MF_TYPE_STATIC, \"ctype_toupper_loc **\");\n    }\n  if (buf != last_buf)\n    {\n      last_buf = buf;\n      __mf_register ((void *) (last_buf - 128), 384 * sizeof(int), __MF_TYPE_STATIC,\n                     \"ctype_toupper_loc []\");\n    }\n  return ptr;\n}\n#endif\n\n#ifdef HAVE___CTYPE_TOLOWER_LOC\nWRAPPER2(int **, __ctype_tolower_loc, void)\n{\n  static int * last_buf = (void *) 0;\n  static int ** last_ptr = (void *) 0;\n  int ** ptr = (int **) __ctype_tolower_loc ();\n  int * buf = * ptr;\n  if (ptr != last_ptr)\n    {\n      /* XXX: unregister last_ptr? */\n      last_ptr = ptr;\n      __mf_register (last_ptr, sizeof(last_ptr), __MF_TYPE_STATIC, \"ctype_tolower_loc **\");\n    }\n  if (buf != last_buf)\n    {\n      last_buf = buf;\n      __mf_register ((void *) (last_buf - 128), 384 * sizeof(int), __MF_TYPE_STATIC,\n                     \"ctype_tolower_loc []\");\n    }\n  return ptr;\n}\n#endif\n\n\n/* passwd/group related functions.  These register every (static) pointer value returned,\n   and rely on libmudflap's quiet toleration of duplicate static registrations.  */\n\n#ifdef HAVE_GETLOGIN\nWRAPPER2(char *, getlogin, void)\n{\n  char *buf = getlogin ();\n  if (buf != NULL)\n    __mf_register (buf, sizeof(*buf), __MF_TYPE_STATIC,\n                   \"getlogin() return\");\n  return buf;\n}\n#endif\n\n\n#ifdef HAVE_CUSERID\nWRAPPER2(char *, cuserid, char * buf)\n{\n  if (buf != NULL)\n    {\n      MF_VALIDATE_EXTENT(buf, L_cuserid, __MF_CHECK_WRITE,\n                         \"cuserid destination\");\n      return cuserid (buf);\n    }\n  buf = cuserid (NULL);\n  if (buf != NULL)\n    __mf_register (buf, sizeof(*buf), __MF_TYPE_STATIC,\n                   \"getcuserid() return\");\n  return buf;\n}\n#endif\n\n\n#ifdef HAVE_GETPWNAM\nWRAPPER2(struct passwd *, getpwnam, const char *name)\n{\n  struct passwd *buf;\n  MF_VALIDATE_EXTENT(name, strlen(name)+1, __MF_CHECK_READ,\n                     \"getpwnam name\");\n  buf = getpwnam (name);\n  if (buf != NULL)\n    __mf_register (buf, sizeof(*buf), __MF_TYPE_STATIC,\n                   \"getpw*() return\");\n  return buf;\n}\n#endif\n\n\n#ifdef HAVE_GETPWUID\nWRAPPER2(struct passwd *, getpwuid, uid_t uid)\n{\n  struct passwd *buf;\n  buf = getpwuid (uid);\n  if (buf != NULL)\n    __mf_register (buf, sizeof(*buf), __MF_TYPE_STATIC,\n                   \"getpw*() return\");\n  return buf;\n}\n#endif\n\n\n#ifdef HAVE_GETGRNAM\nWRAPPER2(struct group *, getgrnam, const char *name)\n{\n  struct group *buf;\n  MF_VALIDATE_EXTENT(name, strlen(name)+1, __MF_CHECK_READ,\n                     \"getgrnam name\");\n  buf = getgrnam (name);\n  if (buf != NULL)\n    __mf_register (buf, sizeof(*buf), __MF_TYPE_STATIC,\n                   \"getgr*() return\");\n  return buf;\n}\n#endif\n\n\n#ifdef HAVE_GETGRGID\nWRAPPER2(struct group *, getgrgid, uid_t uid)\n{\n  struct group *buf;\n  buf = getgrgid (uid);\n  if (buf != NULL)\n    __mf_register (buf, sizeof(*buf), __MF_TYPE_STATIC,\n                   \"getgr*() return\");\n  return buf;\n}\n#endif\n\n\n#ifdef HAVE_GETSERVENT\nWRAPPER2(struct servent *, getservent, void)\n{\n  struct servent *buf;\n  buf = getservent ();\n  if (buf != NULL)\n    __mf_register (buf, sizeof(*buf), __MF_TYPE_STATIC,\n                   \"getserv*() return\");\n  return buf;\n}\n#endif\n\n\n#ifdef HAVE_GETSERVBYNAME\nWRAPPER2(struct servent *, getservbyname, const char *name, const char *proto)\n{\n  struct servent *buf;\n  MF_VALIDATE_EXTENT(name, strlen(name)+1, __MF_CHECK_READ,\n                     \"getservbyname name\");\n  MF_VALIDATE_EXTENT(proto, strlen(proto)+1, __MF_CHECK_READ,\n                     \"getservbyname proto\");\n  buf = getservbyname (name, proto);\n  if (buf != NULL)\n    __mf_register (buf, sizeof(*buf), __MF_TYPE_STATIC,\n                   \"getserv*() return\");\n  return buf;\n}\n#endif\n\n\n#ifdef HAVE_GETSERVBYPORT\nWRAPPER2(struct servent *, getservbyport, int port, const char *proto)\n{\n  struct servent *buf;\n  MF_VALIDATE_EXTENT(proto, strlen(proto)+1, __MF_CHECK_READ,\n                     \"getservbyport proto\");\n  buf = getservbyport (port, proto);\n  if (buf != NULL)\n    __mf_register (buf, sizeof(*buf), __MF_TYPE_STATIC,\n                   \"getserv*() return\");\n  return buf;\n}\n#endif\n\n\n#ifdef HAVE_GAI_STRERROR\nWRAPPER2(const char *, gai_strerror, int errcode)\n{\n  const char *buf;\n  buf = gai_strerror (errcode);\n  if (buf != NULL)\n    __mf_register ((void *) buf, strlen(buf)+1, __MF_TYPE_STATIC,\n                   \"gai_strerror() return\");\n  return buf;\n}\n#endif\n\n\n#ifdef HAVE_GETMNTENT\n#ifdef HAVE_MNTENT_H\nWRAPPER2(struct mntent *, getmntent, FILE *filep)\n{\n  struct mntent *m;\n  static struct mntent *last = NULL;\n\n  MF_VALIDATE_EXTENT (filep, sizeof (*filep), __MF_CHECK_WRITE,\n    \"getmntent stream\");\n#define UR(field) __mf_unregister(last->field, strlen (last->field)+1, __MF_TYPE_STATIC)\n  if (last)\n    {\n      UR (mnt_fsname);\n      UR (mnt_dir);\n      UR (mnt_type);\n      UR (mnt_opts);\n      __mf_unregister (last, sizeof (*last), __MF_TYPE_STATIC);\n    }\n#undef UR\n\n  m = getmntent (filep);\n  last = m;\n\n#define R(field) __mf_register(last->field, strlen (last->field)+1, __MF_TYPE_STATIC, \"mntent \" #field)\n  if (m)\n    {\n      R (mnt_fsname);\n      R (mnt_dir);\n      R (mnt_type);\n      R (mnt_opts);\n      __mf_register (last, sizeof (*last), __MF_TYPE_STATIC, \"getmntent result\");\n    }\n#undef R\n\n  return m;\n}\n#elif defined HAVE_SYS_MNTTAB_H\nWRAPPER2(int, getmntent, FILE *filep, struct mnttab *mp)\n{\n  static struct mnttab *last = NULL;\n  int res;\n\n  MF_VALIDATE_EXTENT (filep, sizeof (*filep), __MF_CHECK_WRITE,\n    \"getmntent stream\");\n#define UR(field) __mf_unregister(last->field, strlen (last->field)+1, __MF_TYPE_STATIC)\n  if (last)\n    {\n      UR (mnt_special);\n      UR (mnt_mountp);\n      UR (mnt_fstype);\n      UR (mnt_mntopts);\n      UR (mnt_time);\n      __mf_unregister (last, sizeof (*last), __MF_TYPE_STATIC);\n    }\n#undef UR\n\n  res = getmntent (filep, mp);\n  last = mp;\n\n#define R(field) __mf_register(last->field, strlen (last->field)+1, __MF_TYPE_STATIC, \"mntent \" #field)\n  if (mp)\n    {\n      R (mnt_special);\n      R (mnt_mountp);\n      R (mnt_fstype);\n      R (mnt_mntopts);\n      R (mnt_time);\n      __mf_register (last, sizeof (*last), __MF_TYPE_STATIC, \"getmntent result\");\n    }\n#undef R\n\n  return res;\n}\n#endif\n#endif\n\n\n#ifdef HAVE_INET_NTOA\nWRAPPER2(char *, inet_ntoa, struct in_addr in)\n{\n  static char *last_buf = NULL;\n  char *buf;\n  if (last_buf)\n    __mf_unregister (last_buf, strlen (last_buf)+1, __MF_TYPE_STATIC);\n  buf = inet_ntoa (in);\n  last_buf = buf;\n  if (buf)\n    __mf_register (last_buf, strlen (last_buf)+1, __MF_TYPE_STATIC, \"inet_ntoa result\");\n  return buf;\n}\n#endif\n\n\n#ifdef HAVE_GETPROTOENT\nWRAPPER2(struct protoent *, getprotoent, void)\n{\n  struct protoent *buf;\n  buf = getprotoent ();\n  if (buf != NULL)\n    __mf_register (buf, sizeof(*buf), __MF_TYPE_STATIC, \"getproto*() return\");\n  return buf;\n}\n#endif\n\n\n#ifdef HAVE_GETPROTOBYNAME\nWRAPPER2(struct protoent *, getprotobyname, const char *name)\n{\n  struct protoent *buf;\n  MF_VALIDATE_EXTENT(name, strlen(name)+1, __MF_CHECK_READ,\n                     \"getprotobyname name\");\n  buf = getprotobyname (name);\n  if (buf != NULL)\n    __mf_register (buf, sizeof(*buf), __MF_TYPE_STATIC,\n                   \"getproto*() return\");\n  return buf;\n}\n#endif\n\n\n#ifdef HAVE_GETPROTOBYNUMBER\nWRAPPER2(struct protoent *, getprotobynumber, int port)\n{\n  struct protoent *buf;\n  buf = getprotobynumber (port);\n  if (buf != NULL)\n    __mf_register (buf, sizeof(*buf), __MF_TYPE_STATIC,\n                   \"getproto*() return\");\n  return buf;\n}\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libmudflap/mf-runtime.c": "/* Mudflap: narrow-pointer bounds-checking by tree rewriting.\n   Copyright (C) 2002-2013 Free Software Foundation, Inc.\n   Contributed by Frank Ch. Eigler <fche@redhat.com>\n   and Graydon Hoare <graydon@redhat.com>\n   Splay Tree code originally by Mark Mitchell <mark@markmitchell.com>,\n   adapted from libiberty.\n\nThis file is part of GCC.\n\nGCC is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free\nSoftware Foundation; either version 3, or (at your option) any later\nversion.\n\nGCC is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\nfor more details.\n\nUnder Section 7 of GPL version 3, you are granted additional\npermissions described in the GCC Runtime Library Exception, version\n3.1, as published by the Free Software Foundation.\n\nYou should have received a copy of the GNU General Public License and\na copy of the GCC Runtime Library Exception along with this program;\nsee the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n<http://www.gnu.org/licenses/>.  */\n\n#include \"config.h\"\n\n/* These attempt to coax various unix flavours to declare all our\n   needed tidbits in the system headers.  */\n#if !defined(__FreeBSD__) && !defined(__APPLE__)\n#define _POSIX_SOURCE\n#endif /* Some BSDs break <sys/socket.h> if this is defined. */\n#define _GNU_SOURCE\n#define _XOPEN_SOURCE\n#define _BSD_TYPES\n#define __EXTENSIONS__\n#define _ALL_SOURCE\n#define _LARGE_FILE_API\n#define _XOPEN_SOURCE_EXTENDED 1\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <sys/types.h>\n#include <sys/time.h>\n#include <time.h>\n#include <unistd.h>\n#ifdef HAVE_EXECINFO_H\n#include <execinfo.h>\n#endif\n#ifdef HAVE_SIGNAL_H\n#include <signal.h>\n#endif\n#include <assert.h>\n\n#include <string.h>\n#include <limits.h>\n#include <sys/types.h>\n#include <signal.h>\n#include <errno.h>\n#include <ctype.h>\n\n#include \"mf-runtime.h\"\n#include \"mf-impl.h\"\n\n\n/* ------------------------------------------------------------------------ */\n/* Splay-tree implementation.  */\n\ntypedef uintptr_t mfsplay_tree_key;\ntypedef void *mfsplay_tree_value;\n\n/* Forward declaration for a node in the tree.  */\ntypedef struct mfsplay_tree_node_s *mfsplay_tree_node;\n\n/* The type of a function used to iterate over the tree.  */\ntypedef int (*mfsplay_tree_foreach_fn) (mfsplay_tree_node, void *);\n\n/* The nodes in the splay tree.  */\nstruct mfsplay_tree_node_s\n{\n  /* Data.  */\n  mfsplay_tree_key key;\n  mfsplay_tree_value value;\n  /* Children.  */\n  mfsplay_tree_node left;\n  mfsplay_tree_node right;\n  /* XXX: The addition of a parent pointer may eliminate some recursion.  */\n};\n\n/* The splay tree itself.  */\nstruct mfsplay_tree_s\n{\n  /* The root of the tree.  */\n  mfsplay_tree_node root;\n\n  /* The last key value for which the tree has been splayed, but not\n     since modified.  */\n  mfsplay_tree_key last_splayed_key;\n  int last_splayed_key_p;\n\n  /* Statistics.  */\n  unsigned num_keys;\n\n  /* Traversal recursion control flags.  */\n  unsigned max_depth;\n  unsigned depth;\n  unsigned rebalance_p;\n};\ntypedef struct mfsplay_tree_s *mfsplay_tree;\n\nstatic mfsplay_tree mfsplay_tree_new (void);\nstatic mfsplay_tree_node mfsplay_tree_insert (mfsplay_tree, mfsplay_tree_key, mfsplay_tree_value);\nstatic void mfsplay_tree_remove (mfsplay_tree, mfsplay_tree_key);\nstatic mfsplay_tree_node mfsplay_tree_lookup (mfsplay_tree, mfsplay_tree_key);\nstatic mfsplay_tree_node mfsplay_tree_predecessor (mfsplay_tree, mfsplay_tree_key);\nstatic mfsplay_tree_node mfsplay_tree_successor (mfsplay_tree, mfsplay_tree_key);\nstatic int mfsplay_tree_foreach (mfsplay_tree, mfsplay_tree_foreach_fn, void *);\nstatic void mfsplay_tree_rebalance (mfsplay_tree sp);\n\n/* ------------------------------------------------------------------------ */\n/* Utility macros */\n\n#define CTOR  __attribute__ ((constructor))\n#define DTOR  __attribute__ ((destructor))\n\n\n/* Codes to describe the context in which a violation occurs. */\n#define __MF_VIOL_UNKNOWN 0\n#define __MF_VIOL_READ 1\n#define __MF_VIOL_WRITE 2\n#define __MF_VIOL_REGISTER 3\n#define __MF_VIOL_UNREGISTER 4\n#define __MF_VIOL_WATCH 5\n\n/* Protect against recursive calls. */\n\nstatic void\nbegin_recursion_protect1 (const char *pf)\n{\n  if (__mf_get_state () == reentrant)\n    {\n      write (2, \"mf: erroneous reentrancy detected in `\", 38);\n      write (2, pf, strlen(pf));\n      write (2, \"'\\n\", 2); \\\n      abort ();\n    }\n  __mf_set_state (reentrant);\n}\n\n#define BEGIN_RECURSION_PROTECT() \\\n  begin_recursion_protect1 (__PRETTY_FUNCTION__)\n\n#define END_RECURSION_PROTECT() \\\n  __mf_set_state (active)\n\n/* ------------------------------------------------------------------------ */\n/* Required globals.  */\n\n#define LOOKUP_CACHE_MASK_DFL 1023\n#define LOOKUP_CACHE_SIZE_MAX 65536 /* Allows max CACHE_MASK 0xFFFF */\n#define LOOKUP_CACHE_SHIFT_DFL 2\n\nstruct __mf_cache __mf_lookup_cache [LOOKUP_CACHE_SIZE_MAX];\nuintptr_t __mf_lc_mask = LOOKUP_CACHE_MASK_DFL;\nunsigned char __mf_lc_shift = LOOKUP_CACHE_SHIFT_DFL;\n#define LOOKUP_CACHE_SIZE (__mf_lc_mask + 1)\n\nstruct __mf_options __mf_opts;\nint __mf_starting_p = 1;\n\n#ifdef LIBMUDFLAPTH\n#if defined(HAVE_TLS) && !defined(USE_EMUTLS)\n__thread enum __mf_state_enum __mf_state_1 = reentrant;\n#endif\n#else\nenum __mf_state_enum __mf_state_1 = reentrant;\n#endif\n\n#ifdef LIBMUDFLAPTH\npthread_mutex_t __mf_biglock =\n#ifdef PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP\n       PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP;\n#else\n       PTHREAD_MUTEX_INITIALIZER;\n#endif\n#endif\n\n/* Use HAVE_PTHREAD_H here instead of LIBMUDFLAPTH, so that even\n   the libmudflap.la (no threading support) can diagnose whether\n   the application is linked with -lpthread.  See __mf_usage() below.  */\n#if HAVE_PTHREAD_H\n#ifdef _POSIX_THREADS\n#pragma weak pthread_join\n#else\n#define pthread_join NULL\n#endif\n#endif\n\n\n/* ------------------------------------------------------------------------ */\n/* stats-related globals.  */\n\nstatic unsigned long __mf_count_check;\nstatic unsigned long __mf_lookup_cache_reusecount [LOOKUP_CACHE_SIZE_MAX];\nstatic unsigned long __mf_count_register;\nstatic unsigned long __mf_total_register_size [__MF_TYPE_MAX+1];\nstatic unsigned long __mf_count_unregister;\nstatic unsigned long __mf_total_unregister_size;\nstatic unsigned long __mf_count_violation [__MF_VIOL_WATCH+1];\nstatic unsigned long __mf_sigusr1_received;\nstatic unsigned long __mf_sigusr1_handled;\n/* not static */ unsigned long __mf_reentrancy;\n#ifdef LIBMUDFLAPTH\n/* not static */ unsigned long __mf_lock_contention;\n#endif\n\n\n/* ------------------------------------------------------------------------ */\n/* mode-check-related globals.  */\n\ntypedef struct __mf_object\n{\n  uintptr_t low, high; /* __mf_register parameters */\n  const char *name;\n  char type; /* __MF_TYPE_something */\n  char watching_p; /* Trigger a VIOL_WATCH on access? */\n  unsigned read_count; /* Number of times __mf_check/read was called on this object.  */\n  unsigned write_count; /* Likewise for __mf_check/write.  */\n  unsigned liveness; /* A measure of recent checking activity.  */\n  unsigned description_epoch; /* Last epoch __mf_describe_object printed this.  */\n\n  uintptr_t alloc_pc;\n  struct timeval alloc_time;\n  char **alloc_backtrace;\n  size_t alloc_backtrace_size;\n#ifdef LIBMUDFLAPTH\n  pthread_t alloc_thread;\n#endif\n\n  int deallocated_p;\n  uintptr_t dealloc_pc;\n  struct timeval dealloc_time;\n  char **dealloc_backtrace;\n  size_t dealloc_backtrace_size;\n#ifdef LIBMUDFLAPTH\n  pthread_t dealloc_thread;\n#endif\n} __mf_object_t;\n\n/* Live objects: splay trees, separated by type, ordered on .low (base address).  */\n/* Actually stored as static vars within lookup function below.  */\n\n/* Dead objects: circular arrays; _MIN_CEM .. _MAX_CEM only */\nstatic unsigned __mf_object_dead_head[__MF_TYPE_MAX_CEM+1]; /* next empty spot */\nstatic __mf_object_t *__mf_object_cemetary[__MF_TYPE_MAX_CEM+1][__MF_PERSIST_MAX];\n\n\n/* ------------------------------------------------------------------------ */\n/* Forward function declarations */\n\nvoid __mf_init () CTOR;\nstatic void __mf_sigusr1_respond ();\nstatic unsigned __mf_find_objects (uintptr_t ptr_low, uintptr_t ptr_high,\n                                   __mf_object_t **objs, unsigned max_objs);\nstatic unsigned __mf_find_objects2 (uintptr_t ptr_low, uintptr_t ptr_high,\n                                    __mf_object_t **objs, unsigned max_objs, int type);\nstatic unsigned __mf_find_dead_objects (uintptr_t ptr_low, uintptr_t ptr_high,\n                                        __mf_object_t **objs, unsigned max_objs);\nstatic void __mf_adapt_cache ();\nstatic void __mf_describe_object (__mf_object_t *obj);\nstatic unsigned __mf_watch_or_not (void *ptr, size_t sz, char flag);\nstatic mfsplay_tree __mf_object_tree (int type);\nstatic void __mf_link_object (__mf_object_t *node);\nstatic void __mf_unlink_object (__mf_object_t *node);\n\n\n/* ------------------------------------------------------------------------ */\n/* Configuration engine */\n\nstatic void\n__mf_set_default_options ()\n{\n  memset (& __mf_opts, 0, sizeof (__mf_opts));\n\n  __mf_opts.adapt_cache = 1000003;\n  __mf_opts.abbreviate = 1;\n  __mf_opts.verbose_violations = 1;\n  __mf_opts.free_queue_length = 4;\n  __mf_opts.persistent_count = 100;\n  __mf_opts.crumple_zone = 32;\n  __mf_opts.backtrace = 4;\n  __mf_opts.timestamps = 1;\n  __mf_opts.mudflap_mode = mode_check;\n  __mf_opts.violation_mode = viol_nop;\n#ifdef HAVE___LIBC_FREERES\n  __mf_opts.call_libc_freeres = 1;\n#endif\n  __mf_opts.heur_std_data = 1;\n#ifdef LIBMUDFLAPTH\n  __mf_opts.thread_stack = 0;\n#endif\n\n  /* PR41443: Beware that the above flags will be applied to\n     setuid/setgid binaries, and cannot be overriden with\n     $MUDFLAP_OPTIONS.  So the defaults must be non-exploitable. \n\n     Should we consider making the default violation_mode something\n     harsher than viol_nop?  OTOH, glibc's MALLOC_CHECK_ is disabled\n     by default for these same programs. */\n}\n\nstatic struct mudoption\n{\n  char *name;\n  char *description;\n  enum\n    {\n      set_option,\n      read_integer_option,\n    } type;\n  unsigned value;\n  unsigned *target;\n}\noptions [] =\n  {\n    {\"mode-nop\",\n     \"mudflaps do nothing\",\n     set_option, (unsigned)mode_nop, (unsigned *)&__mf_opts.mudflap_mode},\n    {\"mode-populate\",\n     \"mudflaps populate object tree\",\n     set_option, (unsigned)mode_populate, (unsigned *)&__mf_opts.mudflap_mode},\n    {\"mode-check\",\n     \"mudflaps check for memory violations\",\n     set_option, (unsigned)mode_check, (unsigned *)&__mf_opts.mudflap_mode},\n    {\"mode-violate\",\n     \"mudflaps always cause violations (diagnostic)\",\n     set_option, (unsigned)mode_violate, (unsigned *)&__mf_opts.mudflap_mode},\n\n    {\"viol-nop\",\n     \"violations do not change program execution\",\n     set_option, (unsigned)viol_nop, (unsigned *)&__mf_opts.violation_mode},\n    {\"viol-abort\",\n     \"violations cause a call to abort()\",\n     set_option, (unsigned)viol_abort, (unsigned *)&__mf_opts.violation_mode},\n    {\"viol-segv\",\n     \"violations are promoted to SIGSEGV signals\",\n     set_option, (unsigned)viol_segv, (unsigned *)&__mf_opts.violation_mode},\n    {\"viol-gdb\",\n     \"violations fork a gdb process attached to current program\",\n     set_option, (unsigned)viol_gdb, (unsigned *)&__mf_opts.violation_mode},\n    {\"trace-calls\",\n     \"trace calls to mudflap runtime library\",\n     set_option, 1, &__mf_opts.trace_mf_calls},\n    {\"verbose-trace\",\n     \"trace internal events within mudflap runtime library\",\n     set_option, 1, &__mf_opts.verbose_trace},\n    {\"collect-stats\",\n     \"collect statistics on mudflap's operation\",\n     set_option, 1, &__mf_opts.collect_stats},\n#ifdef SIGUSR1\n    {\"sigusr1-report\",\n     \"print report upon SIGUSR1\",\n     set_option, 1, &__mf_opts.sigusr1_report},\n#endif\n    {\"internal-checking\",\n     \"perform more expensive internal checking\",\n     set_option, 1, &__mf_opts.internal_checking},\n    {\"print-leaks\",\n     \"print any memory leaks at program shutdown\",\n     set_option, 1, &__mf_opts.print_leaks},\n#ifdef HAVE___LIBC_FREERES\n    {\"libc-freeres\",\n     \"call glibc __libc_freeres at shutdown for better leak data\",\n     set_option, 1, &__mf_opts.call_libc_freeres},\n#endif\n    {\"check-initialization\",\n     \"detect uninitialized object reads\",\n     set_option, 1, &__mf_opts.check_initialization},\n    {\"verbose-violations\",\n     \"print verbose messages when memory violations occur\",\n     set_option, 1, &__mf_opts.verbose_violations},\n    {\"abbreviate\",\n     \"abbreviate repetitive listings\",\n     set_option, 1, &__mf_opts.abbreviate},\n    {\"timestamps\",\n     \"track object lifetime timestamps\",\n     set_option, 1, &__mf_opts.timestamps},\n    {\"ignore-reads\",\n     \"ignore read accesses - assume okay\",\n     set_option, 1, &__mf_opts.ignore_reads},\n    {\"wipe-stack\",\n     \"wipe stack objects at unwind\",\n     set_option, 1, &__mf_opts.wipe_stack},\n    {\"wipe-heap\",\n     \"wipe heap objects at free\",\n     set_option, 1, &__mf_opts.wipe_heap},\n    {\"heur-proc-map\",\n     \"support /proc/self/map heuristics\",\n     set_option, 1, &__mf_opts.heur_proc_map},\n    {\"heur-stack-bound\",\n     \"enable a simple upper stack bound heuristic\",\n     set_option, 1, &__mf_opts.heur_stack_bound},\n    {\"heur-start-end\",\n     \"support _start.._end heuristics\",\n     set_option, 1, &__mf_opts.heur_start_end},\n    {\"heur-stdlib\",\n     \"register standard library data (argv, errno, stdin, ...)\",\n     set_option, 1, &__mf_opts.heur_std_data},\n    {\"free-queue-length\",\n     \"queue N deferred free() calls before performing them\",\n     read_integer_option, 0, &__mf_opts.free_queue_length},\n    {\"persistent-count\",\n     \"keep a history of N unregistered regions\",\n     read_integer_option, 0, &__mf_opts.persistent_count},\n    {\"crumple-zone\",\n     \"surround allocations with crumple zones of N bytes\",\n     read_integer_option, 0, &__mf_opts.crumple_zone},\n    /* XXX: not type-safe.\n    {\"lc-mask\",\n     \"set lookup cache size mask to N (2**M - 1)\",\n     read_integer_option, 0, (int *)(&__mf_lc_mask)},\n    {\"lc-shift\",\n     \"set lookup cache pointer shift\",\n     read_integer_option, 0, (int *)(&__mf_lc_shift)},\n    */\n    {\"lc-adapt\",\n     \"adapt mask/shift parameters after N cache misses\",\n     read_integer_option, 1, &__mf_opts.adapt_cache},\n    {\"backtrace\",\n     \"keep an N-level stack trace of each call context\",\n     read_integer_option, 0, &__mf_opts.backtrace},\n#ifdef LIBMUDFLAPTH\n    {\"thread-stack\",\n     \"override thread stacks allocation: N kB\",\n     read_integer_option, 0, &__mf_opts.thread_stack},\n#endif\n    {0, 0, set_option, 0, NULL}\n  };\n\nstatic void\n__mf_usage ()\n{\n  struct mudoption *opt;\n\n  fprintf (stderr,\n           \"This is a %s%sGCC \\\"mudflap\\\" memory-checked binary.\\n\"\n           \"Mudflap is Copyright (C) 2002-2013 Free Software Foundation, Inc.\\n\"\n           \"\\n\"\n           \"Unless setuid, a program's mudflap options be set by an environment variable:\\n\"\n           \"\\n\"\n           \"$ export MUDFLAP_OPTIONS='<options>'\\n\"\n           \"$ <mudflapped_program>\\n\"\n           \"\\n\"\n           \"where <options> is a space-separated list of \\n\"\n           \"any of the following options.  Use `-no-OPTION' to disable options.\\n\"\n           \"\\n\",\n#if HAVE_PTHREAD_H\n           (pthread_join ? \"multi-threaded \" : \"single-threaded \"),\n#else\n           \"\",\n#endif\n#if LIBMUDFLAPTH\n           \"thread-aware \"\n#else\n           \"thread-unaware \"\n#endif\n            );\n  /* XXX: The multi-threaded thread-unaware combination is bad.  */\n\n  for (opt = options; opt->name; opt++)\n    {\n      int default_p = (opt->value == * opt->target);\n\n      switch (opt->type)\n        {\n          char buf[128];\n        case set_option:\n          fprintf (stderr, \"-%-23.23s %s\", opt->name, opt->description);\n          if (default_p)\n            fprintf (stderr, \" [active]\\n\");\n          else\n            fprintf (stderr, \"\\n\");\n          break;\n        case read_integer_option:\n          strncpy (buf, opt->name, 128);\n          strncpy (buf + strlen (opt->name), \"=N\", 2);\n          fprintf (stderr, \"-%-23.23s %s\", buf, opt->description);\n          fprintf (stderr, \" [%d]\\n\", * opt->target);\n          break;\n        default: abort();\n        }\n    }\n\n  fprintf (stderr, \"\\n\");\n}\n\n\nint\n__mf_set_options (const char *optstr)\n{\n  int rc;\n  LOCKTH ();\n  BEGIN_RECURSION_PROTECT ();\n  rc = __mfu_set_options (optstr);\n  /* XXX: It's not really that easy.  A change to a bunch of parameters\n     can require updating auxiliary state or risk crashing:\n     free_queue_length, crumple_zone ... */\n  END_RECURSION_PROTECT ();\n  UNLOCKTH ();\n  return rc;\n}\n\n\nint\n__mfu_set_options (const char *optstr)\n{\n  struct mudoption *opts = 0;\n  char *nxt = 0;\n  long tmp = 0;\n  int rc = 0;\n  const char *saved_optstr = optstr;\n\n  /* XXX: bounds-check for optstr! */\n\n  while (*optstr)\n    {\n      switch (*optstr) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n        optstr++;\n        break;\n\n      case '-':\n        if (*optstr+1)\n          {\n            int negate = 0;\n            optstr++;\n\n            if (*optstr == '?' ||\n                strncmp (optstr, \"help\", 4) == 0)\n              {\n                /* Caller will print help and exit.  */\n                return -1;\n              }\n\n            if (strncmp (optstr, \"no-\", 3) == 0)\n              {\n                negate = 1;\n                optstr = & optstr[3];\n              }\n\n            for (opts = options; opts->name; opts++)\n              {\n                if (strncmp (optstr, opts->name, strlen (opts->name)) == 0)\n                  {\n                    optstr += strlen (opts->name);\n                    assert (opts->target);\n                    switch (opts->type)\n                      {\n                      case set_option:\n                        if (negate)\n                          *(opts->target) = 0;\n                        else\n                          *(opts->target) = opts->value;\n                        break;\n                      case read_integer_option:\n                        if (! negate && (*optstr == '=' && *(optstr+1)))\n                          {\n                            optstr++;\n                            tmp = strtol (optstr, &nxt, 10);\n                            if ((optstr != nxt) && (tmp != LONG_MAX))\n                              {\n                                optstr = nxt;\n                                *(opts->target) = (int)tmp;\n                              }\n                          }\n                        else if (negate)\n                          * opts->target = 0;\n                        break;\n                      }\n                  }\n              }\n          }\n        break;\n\n      default:\n        fprintf (stderr,\n                 \"warning: unrecognized string '%s' in mudflap options\\n\",\n                 optstr);\n        optstr += strlen (optstr);\n        rc = -1;\n        break;\n      }\n    }\n\n  /* Special post-processing: bound __mf_lc_mask and free_queue_length for security. */\n  __mf_lc_mask &= (LOOKUP_CACHE_SIZE_MAX - 1);\n  __mf_opts.free_queue_length &= (__MF_FREEQ_MAX - 1);\n\n  /* Clear the lookup cache, in case the parameters got changed.  */\n  /* XXX: race */\n  memset (__mf_lookup_cache, 0, sizeof(__mf_lookup_cache));\n  /* void slot 0 */\n  __mf_lookup_cache[0].low = MAXPTR;\n\n  TRACE (\"set options from `%s'\\n\", saved_optstr);\n\n  /* Call this unconditionally, in case -sigusr1-report was toggled. */\n  __mf_sigusr1_respond ();\n\n  return rc;\n}\n\n\n#ifdef PIC\n\nvoid\n__mf_resolve_single_dynamic (struct __mf_dynamic_entry *e)\n{\n  char *err;\n\n  assert (e);\n  if (e->pointer) return;\n\n#if HAVE_DLVSYM\n  if (e->version != NULL && e->version[0] != '\\0') /* non-null/empty */\n    e->pointer = dlvsym (RTLD_NEXT, e->name, e->version);\n  else\n#endif\n    e->pointer = dlsym (RTLD_NEXT, e->name);\n\n  err = dlerror ();\n\n  if (err)\n    {\n      fprintf (stderr, \"mf: error in dlsym(\\\"%s\\\"): %s\\n\",\n               e->name, err);\n      abort ();\n    }\n  if (! e->pointer)\n    {\n      fprintf (stderr, \"mf: dlsym(\\\"%s\\\") = NULL\\n\", e->name);\n      abort ();\n    }\n}\n\n\nstatic void\n__mf_resolve_dynamics ()\n{\n  int i;\n  for (i = 0; i < dyn_INITRESOLVE; i++)\n    __mf_resolve_single_dynamic (& __mf_dynamic[i]);\n}\n\n\n/* NB: order must match enums in mf-impl.h */\nstruct __mf_dynamic_entry __mf_dynamic [] =\n{\n  {NULL, \"calloc\", NULL},\n  {NULL, \"free\", NULL},\n  {NULL, \"malloc\", NULL},\n  {NULL, \"mmap\", NULL},\n#ifdef HAVE_MMAP64\n  {NULL, \"mmap64\", NULL},\n#endif\n  {NULL, \"munmap\", NULL},\n  {NULL, \"realloc\", NULL},\n  {NULL, \"DUMMY\", NULL}, /* dyn_INITRESOLVE */\n#ifdef LIBMUDFLAPTH\n  {NULL, \"pthread_create\", PTHREAD_CREATE_VERSION},\n  {NULL, \"pthread_join\", NULL},\n  {NULL, \"pthread_exit\", NULL}\n#endif\n};\n\n#endif /* PIC */\n\n\n\n/* ------------------------------------------------------------------------ */\n\n/* Lookup & manage automatic initialization of the five or so splay trees.  */\nstatic mfsplay_tree\n__mf_object_tree (int type)\n{\n  static mfsplay_tree trees [__MF_TYPE_MAX+1];\n  assert (type >= 0 && type <= __MF_TYPE_MAX);\n  if (UNLIKELY (trees[type] == NULL))\n    trees[type] = mfsplay_tree_new ();\n  return trees[type];\n}\n\n\n/* not static */void\n__mf_init ()\n{\n  char *ov = 0;\n\n  /* Return if initialization has already been done. */\n  if (LIKELY (__mf_starting_p == 0))\n    return;\n\n#if defined(__FreeBSD__) && defined(LIBMUDFLAPTH)\n  pthread_self();\n  LOCKTH ();\n  UNLOCKTH ();\n#endif /* Prime mutex which calls calloc upon first lock to avoid deadlock. */\n\n  /* This initial bootstrap phase requires that __mf_starting_p = 1. */\n#ifdef PIC\n  __mf_resolve_dynamics ();\n#endif\n  __mf_starting_p = 0;\n\n  __mf_set_state (active);\n\n  __mf_set_default_options ();\n\n  if (getuid () == geteuid () && getgid () == getegid ()) /* PR41433, not setuid */\n    ov = getenv (\"MUDFLAP_OPTIONS\");\n  if (ov)\n    {\n      int rc = __mfu_set_options (ov);\n      if (rc < 0)\n        {\n          __mf_usage ();\n          exit (1);\n        }\n    }\n\n  /* Initialize to a non-zero description epoch. */\n  __mf_describe_object (NULL);\n\n#define REG_RESERVED(obj) \\\n  __mf_register (& obj, sizeof(obj), __MF_TYPE_NOACCESS, # obj)\n\n  REG_RESERVED (__mf_lookup_cache);\n  REG_RESERVED (__mf_lc_mask);\n  REG_RESERVED (__mf_lc_shift);\n  /* XXX: others of our statics?  */\n\n  /* Prevent access to *NULL. */\n  __mf_register (MINPTR, 1, __MF_TYPE_NOACCESS, \"NULL\");\n  __mf_lookup_cache[0].low = (uintptr_t) -1;\n}\n\n\n\nint\n__wrap_main (int argc, char* argv[])\n{\n  extern char **environ;\n  extern int main ();\n  extern int __real_main ();\n  static int been_here = 0;\n\n  if (__mf_opts.heur_std_data && ! been_here)\n    {\n      unsigned i;\n\n      been_here = 1;\n      __mf_register (argv, sizeof(char *)*(argc+1), __MF_TYPE_STATIC, \"argv[]\");\n      for (i=0; i<argc; i++)\n        {\n          unsigned j = strlen (argv[i]);\n          __mf_register (argv[i], j+1, __MF_TYPE_STATIC, \"argv element\");\n        }\n\n      for (i=0; ; i++)\n        {\n          char *e = environ[i];\n          unsigned j;\n          if (e == NULL) break;\n          j = strlen (environ[i]);\n          __mf_register (environ[i], j+1, __MF_TYPE_STATIC, \"environ element\");\n        }\n      __mf_register (environ, sizeof(char *)*(i+1), __MF_TYPE_STATIC, \"environ[]\");\n\n      __mf_register (& errno, sizeof (errno), __MF_TYPE_STATIC, \"errno area\");\n\n#if !(defined(__sun__) && defined(__svr4__))\n      /* Conflicts with the automatic registration of __iob[].  */\n      __mf_register (stdin,  sizeof (*stdin),  __MF_TYPE_STATIC, \"stdin\");\n      __mf_register (stdout, sizeof (*stdout), __MF_TYPE_STATIC, \"stdout\");\n      __mf_register (stderr, sizeof (*stderr), __MF_TYPE_STATIC, \"stderr\");\n#endif\n\n      /* Make some effort to register ctype.h static arrays.  */\n#if defined(__sun__) && defined(__svr4__)\n      /* __ctype[] is declared without size, but MB_CUR_MAX is the last\n\t member.  There seems to be no proper way to determine the size.  */\n      __mf_register (__ctype, &MB_CUR_MAX - &__ctype[0] + 1, __MF_TYPE_STATIC, \"__ctype\");\n      /* __ctype_mask points at _C_masks[1].  The size can only determined\n\t using nm on libc.so.1.  */\n      __mf_register (__ctype_mask - 1, 1028, __MF_TYPE_STATIC, \"_C_masks\");\n#endif\n      /* On modern Linux GLIBC, these are thread-specific and changeable, and are dealt\n         with in mf-hooks2.c.  */\n    }\n\n#ifdef PIC\n  return main (argc, argv, environ);\n#else\n  return __real_main (argc, argv, environ);\n#endif\n}\n\n\n\nextern void __mf_fini () DTOR;\nvoid __mf_fini ()\n{\n  TRACE (\"__mf_fini\\n\");\n  __mfu_report ();\n\n#ifndef PIC\n/* Since we didn't populate the tree for allocations in constructors\n   before __mf_init, we cannot check destructors after __mf_fini.  */\n  __mf_opts.mudflap_mode = mode_nop;\n#endif\n}\n\n\n\n/* ------------------------------------------------------------------------ */\n/* __mf_check */\n\nvoid __mf_check (void *ptr, size_t sz, int type, const char *location)\n{\n  LOCKTH ();\n  BEGIN_RECURSION_PROTECT ();\n  __mfu_check (ptr, sz, type, location);\n  END_RECURSION_PROTECT ();\n  UNLOCKTH ();\n}\n\n\nvoid __mfu_check (void *ptr, size_t sz, int type, const char *location)\n{\n  unsigned entry_idx = __MF_CACHE_INDEX (ptr);\n  struct __mf_cache *entry = & __mf_lookup_cache [entry_idx];\n  int judgement = 0; /* 0=undecided; <0=violation; >0=okay */\n  uintptr_t ptr_low = (uintptr_t) ptr;\n  uintptr_t ptr_high = CLAMPSZ (ptr, sz);\n  struct __mf_cache old_entry = *entry;\n\n  if (UNLIKELY (__mf_opts.sigusr1_report))\n    __mf_sigusr1_respond ();\n  if (UNLIKELY (__mf_opts.ignore_reads && type == 0))\n    return;\n\n  TRACE (\"check ptr=%p b=%u size=%lu %s location=`%s'\\n\",\n         ptr, entry_idx, (unsigned long)sz,\n         (type == 0 ? \"read\" : \"write\"), location);\n\n  switch (__mf_opts.mudflap_mode)\n    {\n    case mode_nop:\n      /* It is tempting to poison the cache here similarly to\n         mode_populate.  However that eliminates a valuable\n         distinction between these two modes.  mode_nop is useful to\n         let a user count & trace every single check / registration\n         call.  mode_populate is useful to let a program run fast\n         while unchecked.\n      */\n      judgement = 1;\n      break;\n\n    case mode_populate:\n      entry->low = ptr_low;\n      entry->high = ptr_high;\n      judgement = 1;\n      break;\n\n    case mode_check:\n      {\n        unsigned heuristics = 0;\n\n        /* Advance aging/adaptation counters.  */\n        static unsigned adapt_count;\n        adapt_count ++;\n        if (UNLIKELY (__mf_opts.adapt_cache > 0 &&\n                      adapt_count > __mf_opts.adapt_cache))\n          {\n            adapt_count = 0;\n            __mf_adapt_cache ();\n          }\n\n        /* Looping only occurs if heuristics were triggered.  */\n        while (judgement == 0)\n          {\n            DECLARE (void, free, void *p);\n            __mf_object_t* ovr_obj[1];\n            unsigned obj_count;\n            __mf_object_t** all_ovr_obj = NULL;\n            __mf_object_t** dealloc_me = NULL;\n            unsigned i;\n\n            /* Find all overlapping objects.  Be optimistic that there is just one.  */\n            obj_count = __mf_find_objects (ptr_low, ptr_high, ovr_obj, 1);\n            if (UNLIKELY (obj_count > 1))\n              {\n                /* Allocate a real buffer and do the search again.  */\n                DECLARE (void *, malloc, size_t c);\n                unsigned n;\n                all_ovr_obj = CALL_REAL (malloc, (sizeof (__mf_object_t *) *\n                                                   obj_count));\n                if (all_ovr_obj == NULL) abort ();\n                n = __mf_find_objects (ptr_low, ptr_high, all_ovr_obj, obj_count);\n                assert (n == obj_count);\n                dealloc_me = all_ovr_obj;\n              }\n            else\n              {\n                all_ovr_obj = ovr_obj;\n                dealloc_me = NULL;\n              }\n\n            /* Update object statistics.  */\n            for (i = 0; i < obj_count; i++)\n              {\n                __mf_object_t *obj = all_ovr_obj[i];\n                assert (obj != NULL);\n                if (type == __MF_CHECK_READ)\n                  obj->read_count ++;\n                else\n                  obj->write_count ++;\n                obj->liveness ++;\n              }\n\n            /* Iterate over the various objects.  There are a number of special cases.  */\n            for (i = 0; i < obj_count; i++)\n              {\n                  __mf_object_t *obj = all_ovr_obj[i];\n\n                /* Any __MF_TYPE_NOACCESS hit is bad.  */\n                if (UNLIKELY (obj->type == __MF_TYPE_NOACCESS))\n                  judgement = -1;\n\n                /* Any object with a watch flag is bad.  */\n                if (UNLIKELY (obj->watching_p))\n                  judgement = -2; /* trigger VIOL_WATCH */\n\n                /* A read from an uninitialized object is bad. */\n                if (UNLIKELY (__mf_opts.check_initialization\n                              /* reading */\n                              && type == __MF_CHECK_READ\n                              /* not written */\n                              && obj->write_count == 0\n                              /* uninitialized (heap) */\n                              && obj->type == __MF_TYPE_HEAP))\n                  judgement = -1;\n              }\n\n            /* We now know that the access spans no invalid objects.  */\n            if (LIKELY (judgement >= 0))\n              for (i = 0; i < obj_count; i++)\n                {\n                  __mf_object_t *obj = all_ovr_obj[i];\n\n                  /* Is this access entirely contained within this object?  */\n                  if (LIKELY (ptr_low >= obj->low && ptr_high <= obj->high))\n                    {\n                      /* Valid access.  */\n                      entry->low = obj->low;\n                      entry->high = obj->high;\n                      judgement = 1;\n                    }\n                }\n\n            /* This access runs off the end of one valid object.  That\n                could be okay, if other valid objects fill in all the\n                holes.  We allow this only for HEAP and GUESS type\n                objects.  Accesses to STATIC and STACK variables\n                should not be allowed to span.  */\n            if (UNLIKELY ((judgement == 0) && (obj_count > 1)))\n              {\n                unsigned uncovered = 0;\n                for (i = 0; i < obj_count; i++)\n                  {\n                    __mf_object_t *obj = all_ovr_obj[i];\n                    int j, uncovered_low_p, uncovered_high_p;\n                    uintptr_t ptr_lower, ptr_higher;\n\n                    uncovered_low_p = ptr_low < obj->low;\n                    ptr_lower = CLAMPSUB (obj->low, 1);\n                    uncovered_high_p = ptr_high > obj->high;\n                    ptr_higher = CLAMPADD (obj->high, 1);\n\n                    for (j = 0; j < obj_count; j++)\n                      {\n                        __mf_object_t *obj2 = all_ovr_obj[j];\n\n                        if (i == j) continue;\n\n                        /* Filter out objects that cannot be spanned across.  */\n                        if (obj2->type == __MF_TYPE_STACK\n                            || obj2->type == __MF_TYPE_STATIC)\n                          continue;\n\n                          /* Consider a side \"covered\" if obj2 includes\n                             the next byte on that side.  */\n                          if (uncovered_low_p\n                              && (ptr_lower >= obj2->low && ptr_lower <= obj2->high))\n                            uncovered_low_p = 0;\n                          if (uncovered_high_p\n                              && (ptr_high >= obj2->low && ptr_higher <= obj2->high))\n                            uncovered_high_p = 0;\n                      }\n\n                    if (uncovered_low_p || uncovered_high_p)\n                      uncovered ++;\n                  }\n\n                /* Success if no overlapping objects are uncovered.  */\n                if (uncovered == 0)\n                  judgement = 1;\n                }\n\n\n            if (dealloc_me != NULL)\n              CALL_REAL (free, dealloc_me);\n\n            /* If the judgment is still unknown at this stage, loop\n               around at most one more time.  */\n            if (judgement == 0)\n              {\n                if (heuristics++ < 2) /* XXX parametrize this number? */\n                  judgement = __mf_heuristic_check (ptr_low, ptr_high);\n                else\n                  judgement = -1;\n              }\n          }\n\n      }\n      break;\n\n    case mode_violate:\n      judgement = -1;\n      break;\n    }\n\n  if (__mf_opts.collect_stats)\n    {\n      __mf_count_check ++;\n\n      if (LIKELY (old_entry.low != entry->low || old_entry.high != entry->high))\n        /* && (old_entry.low != 0) && (old_entry.high != 0)) */\n        __mf_lookup_cache_reusecount [entry_idx] ++;\n    }\n\n  if (UNLIKELY (judgement < 0))\n    __mf_violation (ptr, sz,\n                    (uintptr_t) __builtin_return_address (0), location,\n                    ((judgement == -1) ?\n                     (type == __MF_CHECK_READ ? __MF_VIOL_READ : __MF_VIOL_WRITE) :\n                     __MF_VIOL_WATCH));\n}\n\n\nstatic __mf_object_t *\n__mf_insert_new_object (uintptr_t low, uintptr_t high, int type,\n                        const char *name, uintptr_t pc)\n{\n  DECLARE (void *, calloc, size_t c, size_t n);\n\n  __mf_object_t *new_obj;\n  new_obj = CALL_REAL (calloc, 1, sizeof(__mf_object_t));\n  new_obj->low = low;\n  new_obj->high = high;\n  new_obj->type = type;\n  new_obj->name = name;\n  new_obj->alloc_pc = pc;\n#if HAVE_GETTIMEOFDAY\n  if (__mf_opts.timestamps)\n    gettimeofday (& new_obj->alloc_time, NULL);\n#endif\n#if LIBMUDFLAPTH\n  new_obj->alloc_thread = pthread_self ();\n#endif\n\n  if (__mf_opts.backtrace > 0 && (type == __MF_TYPE_HEAP || type == __MF_TYPE_HEAP_I))\n    new_obj->alloc_backtrace_size =\n      __mf_backtrace (& new_obj->alloc_backtrace,\n                      (void *) pc, 2);\n\n  __mf_link_object (new_obj);\n  return new_obj;\n}\n\n\nstatic void\n__mf_uncache_object (__mf_object_t *old_obj)\n{\n  /* Remove any low/high pointers for this object from the lookup cache.  */\n\n  /* Can it possibly exist in the cache?  */\n  if (LIKELY (old_obj->read_count + old_obj->write_count))\n    {\n      uintptr_t low = old_obj->low;\n      uintptr_t high = old_obj->high;\n      struct __mf_cache *entry;\n      unsigned i;\n      if ((high - low) >= (__mf_lc_mask << __mf_lc_shift))\n\t{\n\t  /* For large objects (>= cache size - 1) check the whole cache.  */\n          entry = & __mf_lookup_cache [0];\n          for (i = 0; i <= __mf_lc_mask; i++, entry++)\n            {\n              /* NB: the \"||\" in the following test permits this code to\n                 tolerate the situation introduced by __mf_check over\n                 contiguous objects, where a cache entry spans several\n                 objects.  */\n              if (entry->low == low || entry->high == high)\n                {\n                  entry->low = MAXPTR;\n                  entry->high = MINPTR;\n                }\n            }\n        }\n      else\n\t{\n\t  /* Object is now smaller then cache size.  */\n          unsigned entry_low_idx = __MF_CACHE_INDEX (low);\n          unsigned entry_high_idx = __MF_CACHE_INDEX (high);\n          if (entry_low_idx <= entry_high_idx)\n\t    {\n              entry = & __mf_lookup_cache [entry_low_idx];\n              for (i = entry_low_idx; i <= entry_high_idx; i++, entry++)\n                {\n                  /* NB: the \"||\" in the following test permits this code to\n                     tolerate the situation introduced by __mf_check over\n                     contiguous objects, where a cache entry spans several\n                     objects.  */\n                  if (entry->low == low || entry->high == high)\n                    {\n                      entry->low = MAXPTR;\n                      entry->high = MINPTR;\n                    }\n                }\n            }\n          else\n\t    {\n\t      /* Object wrapped around the end of the cache. First search\n\t\t from low to end of cache and then from 0 to high.  */\n              entry = & __mf_lookup_cache [entry_low_idx];\n              for (i = entry_low_idx; i <= __mf_lc_mask; i++, entry++)\n                {\n                  /* NB: the \"||\" in the following test permits this code to\n                     tolerate the situation introduced by __mf_check over\n                     contiguous objects, where a cache entry spans several\n                     objects.  */\n                  if (entry->low == low || entry->high == high)\n                    {\n                      entry->low = MAXPTR;\n                      entry->high = MINPTR;\n                    }\n                }\n              entry = & __mf_lookup_cache [0];\n              for (i = 0; i <= entry_high_idx; i++, entry++)\n                {\n                  /* NB: the \"||\" in the following test permits this code to\n                     tolerate the situation introduced by __mf_check over\n                     contiguous objects, where a cache entry spans several\n                     objects.  */\n                  if (entry->low == low || entry->high == high)\n                    {\n                      entry->low = MAXPTR;\n                      entry->high = MINPTR;\n                    }\n                }\n\t    }\n\t}\n    }\n}\n\n\nvoid\n__mf_register (void *ptr, size_t sz, int type, const char *name)\n{\n  LOCKTH ();\n  BEGIN_RECURSION_PROTECT ();\n  __mfu_register (ptr, sz, type, name);\n  END_RECURSION_PROTECT ();\n  UNLOCKTH ();\n}\n\n\nvoid\n__mfu_register (void *ptr, size_t sz, int type, const char *name)\n{\n  TRACE (\"register ptr=%p size=%lu type=%x name='%s'\\n\",\n         ptr, (unsigned long) sz, type, name ? name : \"\");\n\n  if (__mf_opts.collect_stats)\n    {\n      __mf_count_register ++;\n      __mf_total_register_size [(type < 0) ? 0 :\n                                (type > __MF_TYPE_MAX) ? 0 :\n                                type] += sz;\n    }\n\n  if (UNLIKELY (__mf_opts.sigusr1_report))\n    __mf_sigusr1_respond ();\n\n  switch (__mf_opts.mudflap_mode)\n    {\n    case mode_nop:\n      break;\n\n    case mode_violate:\n      __mf_violation (ptr, sz, (uintptr_t) __builtin_return_address (0), NULL,\n                      __MF_VIOL_REGISTER);\n      break;\n\n    case mode_populate:\n      /* Clear the cache.  */\n      /* XXX: why the entire cache? */\n      /* XXX: race */\n      memset (__mf_lookup_cache, 0, sizeof(__mf_lookup_cache));\n      /* void slot 0 */\n      __mf_lookup_cache[0].low = MAXPTR;\n      break;\n\n    case mode_check:\n      {\n        __mf_object_t *ovr_objs [1];\n        unsigned num_overlapping_objs;\n        uintptr_t low = (uintptr_t) ptr;\n        uintptr_t high = CLAMPSZ (ptr, sz);\n        uintptr_t pc = (uintptr_t) __builtin_return_address (0);\n\n        /* Treat unknown size indication as 1.  */\n        if (UNLIKELY (sz == 0)) sz = 1;\n\n        /* Look for objects only of the same type.  This will e.g. permit a registration\n           of a STATIC overlapping with a GUESS, and a HEAP with a NOACCESS.  At\n           __mf_check time however harmful overlaps will be detected. */\n        num_overlapping_objs = __mf_find_objects2 (low, high, ovr_objs, 1, type);\n\n        /* Handle overlaps.  */\n        if (UNLIKELY (num_overlapping_objs > 0))\n          {\n            __mf_object_t *ovr_obj = ovr_objs[0];\n\n            /* Accept certain specific duplication pairs.  */\n            if (((type == __MF_TYPE_STATIC) || (type == __MF_TYPE_GUESS))\n                && ovr_obj->low == low\n                && ovr_obj->high == high\n                && ovr_obj->type == type)\n              {\n                /* Duplicate registration for static objects may come\n                   from distinct compilation units.  */\n                VERBOSE_TRACE (\"harmless duplicate reg %p-%p `%s'\\n\",\n                               (void *) low, (void *) high,\n                               (ovr_obj->name ? ovr_obj->name : \"\"));\n                break;\n              }\n\n            /* Alas, a genuine violation.  */\n            else\n              {\n                /* Two or more *real* mappings here. */\n                __mf_violation ((void *) ptr, sz,\n                                (uintptr_t) __builtin_return_address (0), NULL,\n                                __MF_VIOL_REGISTER);\n              }\n          }\n        else /* No overlapping objects: AOK.  */\n          __mf_insert_new_object (low, high, type, name, pc);\n\n        /* We could conceivably call __mf_check() here to prime the cache,\n           but then the read_count/write_count field is not reliable.  */\n        break;\n      }\n    } /* end switch (__mf_opts.mudflap_mode) */\n}\n\n\nvoid\n__mf_unregister (void *ptr, size_t sz, int type)\n{\n  LOCKTH ();\n  BEGIN_RECURSION_PROTECT ();\n  __mfu_unregister (ptr, sz, type);\n  END_RECURSION_PROTECT ();\n  UNLOCKTH ();\n}\n\n\nvoid\n__mfu_unregister (void *ptr, size_t sz, int type)\n{\n  DECLARE (void, free, void *ptr);\n\n  if (UNLIKELY (__mf_opts.sigusr1_report))\n    __mf_sigusr1_respond ();\n\n  TRACE (\"unregister ptr=%p size=%lu type=%x\\n\", ptr, (unsigned long) sz, type);\n\n  switch (__mf_opts.mudflap_mode)\n    {\n    case mode_nop:\n      break;\n\n    case mode_violate:\n      __mf_violation (ptr, sz,\n                      (uintptr_t) __builtin_return_address (0), NULL,\n                      __MF_VIOL_UNREGISTER);\n      break;\n\n    case mode_populate:\n      /* Clear the cache.  */\n      /* XXX: race */\n      memset (__mf_lookup_cache, 0, sizeof(__mf_lookup_cache));\n      /* void slot 0 */\n      __mf_lookup_cache[0].low = MAXPTR;\n      break;\n\n    case mode_check:\n      {\n        __mf_object_t *old_obj = NULL;\n        __mf_object_t *del_obj = NULL;  /* Object to actually delete. */\n        __mf_object_t *objs[1] = {NULL};\n        unsigned num_overlapping_objs;\n\n        num_overlapping_objs = __mf_find_objects2 ((uintptr_t) ptr,\n                                                   CLAMPSZ (ptr, sz), objs, 1, type);\n\n        /* Special case for HEAP_I - see free & realloc hook.  They don't\n           know whether the input region was HEAP or HEAP_I before\n           unmapping it.  Here we give HEAP a try in case HEAP_I\n           failed.  */\n        if ((type == __MF_TYPE_HEAP_I) && (num_overlapping_objs == 0))\n          {\n            num_overlapping_objs = __mf_find_objects2 ((uintptr_t) ptr,\n                                                       CLAMPSZ (ptr, sz), objs, 1, __MF_TYPE_HEAP);\n          }\n\n        old_obj = objs[0];\n        if (UNLIKELY ((num_overlapping_objs != 1) /* more than one overlap */\n                      || ((sz == 0) ? 0 : (sz != (old_obj->high - old_obj->low + 1))) /* size mismatch */\n                      || ((uintptr_t) ptr != old_obj->low))) /* base mismatch */\n          {\n            __mf_violation (ptr, sz,\n                            (uintptr_t) __builtin_return_address (0), NULL,\n                            __MF_VIOL_UNREGISTER);\n            break;\n          }\n\n        __mf_unlink_object (old_obj);\n        __mf_uncache_object (old_obj);\n\n        /* Wipe buffer contents if desired.  */\n        if ((__mf_opts.wipe_stack && old_obj->type == __MF_TYPE_STACK)\n            || (__mf_opts.wipe_heap && (old_obj->type == __MF_TYPE_HEAP\n                                        || old_obj->type == __MF_TYPE_HEAP_I)))\n          {\n            memset ((void *) old_obj->low,\n                    0,\n                    (size_t) (old_obj->high - old_obj->low + 1));\n          }\n\n        /* Manage the object cemetary.  */\n        if (__mf_opts.persistent_count > 0\n\t    && (unsigned) old_obj->type <= __MF_TYPE_MAX_CEM)\n          {\n            old_obj->deallocated_p = 1;\n            old_obj->dealloc_pc = (uintptr_t) __builtin_return_address (0);\n#if HAVE_GETTIMEOFDAY\n            if (__mf_opts.timestamps)\n              gettimeofday (& old_obj->dealloc_time, NULL);\n#endif\n#ifdef LIBMUDFLAPTH\n            old_obj->dealloc_thread = pthread_self ();\n#endif\n\n            if (__mf_opts.backtrace > 0 && old_obj->type == __MF_TYPE_HEAP)\n              old_obj->dealloc_backtrace_size =\n                __mf_backtrace (& old_obj->dealloc_backtrace,\n                                NULL, 2);\n\n            /* Encourage this object to be displayed again in current epoch.  */\n            old_obj->description_epoch --;\n\n            /* Put this object into the cemetary.  This may require this plot to\n               be recycled, and the previous resident to be designated del_obj.  */\n            {\n              unsigned row = old_obj->type;\n              unsigned plot = __mf_object_dead_head [row];\n\n              del_obj = __mf_object_cemetary [row][plot];\n              __mf_object_cemetary [row][plot] = old_obj;\n              plot ++;\n              if (plot == __mf_opts.persistent_count) plot = 0;\n              __mf_object_dead_head [row] = plot;\n            }\n          }\n        else\n          del_obj = old_obj;\n\n        if (__mf_opts.print_leaks)\n          {\n            if ((old_obj->read_count + old_obj->write_count) == 0 &&\n                (old_obj->type == __MF_TYPE_HEAP\n                 || old_obj->type == __MF_TYPE_HEAP_I))\n              {\n\t\t/* The problem with a warning message here is that we may not\n\t\t   be privy to accesses to such objects that occur within\n\t\t   uninstrumented libraries.  */\n#if 0\n                fprintf (stderr,\n                         \"*******\\n\"\n                         \"mudflap warning: unaccessed registered object:\\n\");\n                __mf_describe_object (old_obj);\n#endif\n              }\n          }\n\n        if (del_obj != NULL) /* May or may not equal old_obj.  */\n          {\n            if (__mf_opts.backtrace > 0)\n              {\n                CALL_REAL(free, del_obj->alloc_backtrace);\n                if (__mf_opts.persistent_count > 0)\n                  {\n                    CALL_REAL(free, del_obj->dealloc_backtrace);\n                  }\n              }\n            CALL_REAL(free, del_obj);\n          }\n\n        break;\n      }\n    } /* end switch (__mf_opts.mudflap_mode) */\n\n\n  if (__mf_opts.collect_stats)\n    {\n      __mf_count_unregister ++;\n      __mf_total_unregister_size += sz;\n    }\n}\n\n\n\nstruct tree_stats\n{\n  unsigned obj_count;\n  unsigned long total_size;\n  unsigned live_obj_count;\n  double total_weight;\n  double weighted_size;\n  unsigned long weighted_address_bits [sizeof (uintptr_t) * 8][2];\n};\n\n\n\nstatic int\n__mf_adapt_cache_fn (mfsplay_tree_node n, void *param)\n{\n  __mf_object_t *obj = (__mf_object_t *) n->value;\n  struct tree_stats *s = (struct tree_stats *) param;\n\n  assert (obj != NULL && s != NULL);\n\n  /* Exclude never-accessed objects.  */\n  if (obj->read_count + obj->write_count)\n    {\n      s->obj_count ++;\n      s->total_size += (obj->high - obj->low + 1);\n\n      if (obj->liveness)\n        {\n          unsigned i;\n          uintptr_t addr;\n\n          /* VERBOSE_TRACE (\"analyze low=%p live=%u name=`%s'\\n\",\n             (void *) obj->low, obj->liveness, obj->name); */\n\n          s->live_obj_count ++;\n          s->total_weight += (double) obj->liveness;\n          s->weighted_size +=\n            (double) (obj->high - obj->low + 1) *\n            (double) obj->liveness;\n\n          addr = obj->low;\n          for (i=0; i<sizeof(uintptr_t) * 8; i++)\n            {\n              unsigned bit = addr & 1;\n              s->weighted_address_bits[i][bit] += obj->liveness;\n              addr = addr >> 1;\n            }\n\n          /* Age the liveness value.  */\n          obj->liveness >>= 1;\n        }\n    }\n\n  return 0;\n}\n\n\nstatic void\n__mf_adapt_cache ()\n{\n  struct tree_stats s;\n  uintptr_t new_mask = 0;\n  unsigned char new_shift;\n  float cache_utilization;\n  float max_value;\n  static float smoothed_new_shift = -1.0;\n  unsigned i;\n\n  memset (&s, 0, sizeof (s));\n\n  mfsplay_tree_foreach (__mf_object_tree (__MF_TYPE_HEAP), __mf_adapt_cache_fn, (void *) & s);\n  mfsplay_tree_foreach (__mf_object_tree (__MF_TYPE_HEAP_I), __mf_adapt_cache_fn, (void *) & s);\n  mfsplay_tree_foreach (__mf_object_tree (__MF_TYPE_STACK), __mf_adapt_cache_fn, (void *) & s);\n  mfsplay_tree_foreach (__mf_object_tree (__MF_TYPE_STATIC), __mf_adapt_cache_fn, (void *) & s);\n  mfsplay_tree_foreach (__mf_object_tree (__MF_TYPE_GUESS), __mf_adapt_cache_fn, (void *) & s);\n\n  /* Maybe we're dealing with funny aging/adaptation parameters, or an\n     empty tree.  Just leave the cache alone in such cases, rather\n     than risk dying by division-by-zero.  */\n  if (! (s.obj_count > 0) && (s.live_obj_count > 0) && (s.total_weight > 0.0))\n    return;\n\n  /* Guess a good value for the shift parameter by finding an address bit that is a\n     good discriminant of lively objects.  */\n  max_value = 0.0;\n  for (i=0; i<sizeof (uintptr_t)*8; i++)\n    {\n      float value = (float) s.weighted_address_bits[i][0] * (float) s.weighted_address_bits[i][1];\n      if (max_value < value) max_value = value;\n    }\n  for (i=0; i<sizeof (uintptr_t)*8; i++)\n    {\n      float shoulder_factor = 0.7;  /* Include slightly less popular bits too.  */\n      float value = (float) s.weighted_address_bits[i][0] * (float) s.weighted_address_bits[i][1];\n      if (value >= max_value * shoulder_factor)\n        break;\n    }\n  if (smoothed_new_shift < 0) smoothed_new_shift = __mf_lc_shift;\n  /* Converge toward this slowly to reduce flapping. */\n  smoothed_new_shift = 0.9*smoothed_new_shift + 0.1*i;\n  new_shift = (unsigned) (smoothed_new_shift + 0.5);\n  assert (new_shift < sizeof (uintptr_t)*8);\n\n  /* Count number of used buckets.  */\n  cache_utilization = 0.0;\n  for (i = 0; i < (1 + __mf_lc_mask); i++)\n    if (__mf_lookup_cache[i].low != 0 || __mf_lookup_cache[i].high != 0)\n      cache_utilization += 1.0;\n  cache_utilization /= (1 + __mf_lc_mask);\n\n  new_mask |= 0xffff; /* XXX: force a large cache.  */\n  new_mask &= (LOOKUP_CACHE_SIZE_MAX - 1);\n\n  VERBOSE_TRACE (\"adapt cache obj=%u/%u sizes=%lu/%.0f/%.0f => \"\n                 \"util=%u%% m=%p s=%u\\n\",\n                 s.obj_count, s.live_obj_count, s.total_size, s.total_weight, s.weighted_size,\n                 (unsigned)(cache_utilization*100.0), (void *) new_mask, new_shift);\n\n  /* We should reinitialize cache if its parameters have changed.  */\n  if (new_mask != __mf_lc_mask ||\n      new_shift != __mf_lc_shift)\n    {\n      __mf_lc_mask = new_mask;\n      __mf_lc_shift = new_shift;\n      /* XXX: race */\n      memset (__mf_lookup_cache, 0, sizeof(__mf_lookup_cache));\n      /* void slot 0 */\n      __mf_lookup_cache[0].low = MAXPTR;\n    }\n}\n\n\n\n/* __mf_find_object[s] */\n\n/* Find overlapping live objecs between [low,high].  Return up to\n   max_objs of their pointers in objs[].  Return total count of\n   overlaps (may exceed max_objs). */\n\nunsigned\n__mf_find_objects2 (uintptr_t ptr_low, uintptr_t ptr_high,\n                    __mf_object_t **objs, unsigned max_objs, int type)\n{\n  unsigned count = 0;\n  mfsplay_tree t = __mf_object_tree (type);\n  mfsplay_tree_key k = (mfsplay_tree_key) ptr_low;\n  int direction;\n\n  mfsplay_tree_node n = mfsplay_tree_lookup (t, k);\n  /* An exact match for base address implies a hit.  */\n  if (n != NULL)\n    {\n      if (count < max_objs)\n        objs[count] = (__mf_object_t *) n->value;\n      count ++;\n    }\n\n  /* Iterate left then right near this key value to find all overlapping objects. */\n  for (direction = 0; direction < 2; direction ++)\n    {\n      /* Reset search origin.  */\n      k = (mfsplay_tree_key) ptr_low;\n\n      while (1)\n        {\n          __mf_object_t *obj;\n\n          n = (direction == 0 ? mfsplay_tree_successor (t, k) : mfsplay_tree_predecessor (t, k));\n          if (n == NULL) break;\n          obj = (__mf_object_t *) n->value;\n\n          if (! (obj->low <= ptr_high && obj->high >= ptr_low)) /* No overlap? */\n            break;\n\n          if (count < max_objs)\n            objs[count] = (__mf_object_t *) n->value;\n          count ++;\n\n          k = (mfsplay_tree_key) obj->low;\n        }\n    }\n\n  return count;\n}\n\n\nunsigned\n__mf_find_objects (uintptr_t ptr_low, uintptr_t ptr_high,\n                   __mf_object_t **objs, unsigned max_objs)\n{\n  int type;\n  unsigned count = 0;\n\n  /* Search each splay tree for overlaps.  */\n  for (type = __MF_TYPE_NOACCESS; type <= __MF_TYPE_GUESS; type++)\n    {\n      unsigned c = __mf_find_objects2 (ptr_low, ptr_high, objs, max_objs, type);\n      if (c > max_objs)\n        {\n          max_objs = 0;\n          objs = NULL;\n        }\n      else /* NB: C may equal 0 */\n        {\n          max_objs -= c;\n          objs += c;\n        }\n      count += c;\n    }\n\n  return count;\n}\n\n\n\n/* __mf_link_object */\n\nstatic void\n__mf_link_object (__mf_object_t *node)\n{\n  mfsplay_tree t = __mf_object_tree (node->type);\n  mfsplay_tree_insert (t, (mfsplay_tree_key) node->low, (mfsplay_tree_value) node);\n}\n\n/* __mf_unlink_object */\n\nstatic void\n__mf_unlink_object (__mf_object_t *node)\n{\n  mfsplay_tree t = __mf_object_tree (node->type);\n  mfsplay_tree_remove (t, (mfsplay_tree_key) node->low);\n}\n\n/* __mf_find_dead_objects */\n\n/* Find overlapping dead objecs between [low,high].  Return up to\n   max_objs of their pointers in objs[].  Return total count of\n   overlaps (may exceed max_objs).  */\n\nstatic unsigned\n__mf_find_dead_objects (uintptr_t low, uintptr_t high,\n                        __mf_object_t **objs, unsigned max_objs)\n{\n  if (__mf_opts.persistent_count > 0)\n    {\n      unsigned count = 0;\n      unsigned recollection = 0;\n      unsigned row = 0;\n\n      assert (low <= high);\n      assert (max_objs == 0 || objs != NULL);\n\n      /* Widen the search from the most recent plots in each row, looking\n         backward in time.  */\n      recollection = 0;\n      while (recollection < __mf_opts.persistent_count)\n        {\n          count = 0;\n\n          for (row = 0; row <= __MF_TYPE_MAX_CEM; row ++)\n            {\n              unsigned plot;\n              unsigned i;\n\n              plot = __mf_object_dead_head [row];\n              for (i = 0; i <= recollection; i ++)\n                {\n                  __mf_object_t *obj;\n\n                  /* Look backward through row: it's a circular buffer.  */\n                  if (plot > 0) plot --;\n                  else plot = __mf_opts.persistent_count - 1;\n\n                  obj = __mf_object_cemetary [row][plot];\n                  if (obj && obj->low <= high && obj->high >= low)\n                    {\n                      /* Found an overlapping dead object!  */\n                      if (count < max_objs)\n                        objs [count] = obj;\n                      count ++;\n                    }\n                }\n            }\n\n          if (count)\n            break;\n\n          /* Look farther back in time.  */\n          recollection = (recollection * 2) + 1;\n        }\n\n      return count;\n    } else {\n      return 0;\n    }\n}\n\n/* __mf_describe_object */\n\nstatic void\n__mf_describe_object (__mf_object_t *obj)\n{\n  static unsigned epoch = 0;\n  if (obj == NULL)\n    {\n      epoch ++;\n      return;\n    }\n\n  if (__mf_opts.abbreviate && obj->description_epoch == epoch)\n    {\n      fprintf (stderr,\n               \"mudflap %sobject %p: name=`%s'\\n\",\n               (obj->deallocated_p ? \"dead \" : \"\"),\n               (void *) obj, (obj->name ? obj->name : \"\"));\n      return;\n    }\n  else\n    obj->description_epoch = epoch;\n\n  fprintf (stderr,\n           \"mudflap %sobject %p: name=`%s'\\n\"\n           \"bounds=[%p,%p] size=%lu area=%s check=%ur/%uw liveness=%u%s\\n\"\n           \"alloc time=%lu.%06lu pc=%p\"\n#ifdef LIBMUDFLAPTH\n           \" thread=%u\"\n#endif\n           \"\\n\",\n           (obj->deallocated_p ? \"dead \" : \"\"),\n           (void *) obj, (obj->name ? obj->name : \"\"),\n           (void *) obj->low, (void *) obj->high,\n           (unsigned long) (obj->high - obj->low + 1),\n           (obj->type == __MF_TYPE_NOACCESS ? \"no-access\" :\n            obj->type == __MF_TYPE_HEAP ? \"heap\" :\n            obj->type == __MF_TYPE_HEAP_I ? \"heap-init\" :\n            obj->type == __MF_TYPE_STACK ? \"stack\" :\n            obj->type == __MF_TYPE_STATIC ? \"static\" :\n            obj->type == __MF_TYPE_GUESS ? \"guess\" :\n            \"unknown\"),\n           obj->read_count, obj->write_count, obj->liveness,\n           obj->watching_p ? \" watching\" : \"\",\n           obj->alloc_time.tv_sec, obj->alloc_time.tv_usec,\n           (void *) obj->alloc_pc\n#ifdef LIBMUDFLAPTH\n           , (unsigned) obj->alloc_thread\n#endif\n           );\n\n  if (__mf_opts.backtrace > 0)\n  {\n    unsigned i;\n    for (i=0; i<obj->alloc_backtrace_size; i++)\n      fprintf (stderr, \"      %s\\n\", obj->alloc_backtrace[i]);\n  }\n\n  if (__mf_opts.persistent_count > 0)\n    {\n      if (obj->deallocated_p)\n        {\n          fprintf (stderr, \"dealloc time=%lu.%06lu pc=%p\"\n#ifdef LIBMUDFLAPTH\n                   \" thread=%u\"\n#endif\n                   \"\\n\",\n                   obj->dealloc_time.tv_sec, obj->dealloc_time.tv_usec,\n                   (void *) obj->dealloc_pc\n#ifdef LIBMUDFLAPTH\n                   , (unsigned) obj->dealloc_thread\n#endif\n                   );\n\n\n          if (__mf_opts.backtrace > 0)\n          {\n            unsigned i;\n            for (i=0; i<obj->dealloc_backtrace_size; i++)\n              fprintf (stderr, \"      %s\\n\", obj->dealloc_backtrace[i]);\n          }\n        }\n    }\n}\n\n\nstatic int\n__mf_report_leaks_fn (mfsplay_tree_node n, void *param)\n{\n  __mf_object_t *node = (__mf_object_t *) n->value;\n  unsigned *count = (unsigned *) param;\n\n  if (count != NULL)\n    (*count) ++;\n\n  fprintf (stderr, \"Leaked object %u:\\n\", (*count));\n  __mf_describe_object (node);\n\n  return 0;\n}\n\n\nstatic unsigned\n__mf_report_leaks ()\n{\n  unsigned count = 0;\n\n  (void) mfsplay_tree_foreach (__mf_object_tree (__MF_TYPE_HEAP),\n                             __mf_report_leaks_fn, & count);\n  (void) mfsplay_tree_foreach (__mf_object_tree (__MF_TYPE_HEAP_I),\n                             __mf_report_leaks_fn, & count);\n\n  return count;\n}\n\n/* ------------------------------------------------------------------------ */\n/* __mf_report */\n\nvoid\n__mf_report ()\n{\n  LOCKTH ();\n  BEGIN_RECURSION_PROTECT ();\n  __mfu_report ();\n  END_RECURSION_PROTECT ();\n  UNLOCKTH ();\n}\n\nvoid\n__mfu_report ()\n{\n  if (__mf_opts.collect_stats)\n    {\n      fprintf (stderr,\n               \"*******\\n\"\n               \"mudflap stats:\\n\"\n               \"calls to __mf_check: %lu\\n\"\n               \"         __mf_register: %lu [%luB, %luB, %luB, %luB, %luB]\\n\"\n               \"         __mf_unregister: %lu [%luB]\\n\"\n               \"         __mf_violation: [%lu, %lu, %lu, %lu, %lu]\\n\",\n               __mf_count_check,\n               __mf_count_register,\n               __mf_total_register_size[0], __mf_total_register_size[1],\n               __mf_total_register_size[2], __mf_total_register_size[3],\n               __mf_total_register_size[4], /* XXX */\n               __mf_count_unregister, __mf_total_unregister_size,\n               __mf_count_violation[0], __mf_count_violation[1],\n               __mf_count_violation[2], __mf_count_violation[3],\n               __mf_count_violation[4]);\n\n      fprintf (stderr,\n               \"calls with reentrancy: %lu\\n\", __mf_reentrancy);\n#ifdef LIBMUDFLAPTH\n      fprintf (stderr,\n               \"           lock contention: %lu\\n\", __mf_lock_contention);\n#endif\n\n      /* Lookup cache stats.  */\n      {\n        unsigned i;\n        unsigned max_reuse = 0;\n        unsigned num_used = 0;\n        unsigned num_unused = 0;\n\n        for (i = 0; i < LOOKUP_CACHE_SIZE; i++)\n          {\n            if (__mf_lookup_cache_reusecount[i])\n              num_used ++;\n            else\n              num_unused ++;\n            if (max_reuse < __mf_lookup_cache_reusecount[i])\n              max_reuse = __mf_lookup_cache_reusecount[i];\n          }\n        fprintf (stderr, \"lookup cache slots used: %u  unused: %u  peak-reuse: %u\\n\",\n                 num_used, num_unused, max_reuse);\n      }\n\n      {\n        unsigned live_count;\n        live_count = __mf_find_objects (MINPTR, MAXPTR, NULL, 0);\n        fprintf (stderr, \"number of live objects: %u\\n\", live_count);\n      }\n\n      if (__mf_opts.persistent_count > 0)\n        {\n          unsigned dead_count = 0;\n          unsigned row, plot;\n          for (row = 0; row <= __MF_TYPE_MAX_CEM; row ++)\n            for (plot = 0 ; plot < __mf_opts.persistent_count; plot ++)\n              if (__mf_object_cemetary [row][plot] != 0)\n                dead_count ++;\n          fprintf (stderr, \"          zombie objects: %u\\n\", dead_count);\n        }\n    }\n  if (__mf_opts.print_leaks && (__mf_opts.mudflap_mode == mode_check))\n    {\n      unsigned l;\n      extern void * __mf_wrap_alloca_indirect (size_t c);\n\n      /* Free up any remaining alloca()'d blocks.  */\n      __mf_wrap_alloca_indirect (0);\n#ifdef HAVE___LIBC_FREERES\n      if (__mf_opts.call_libc_freeres)\n        {\n          extern void __libc_freeres (void);\n          __libc_freeres ();\n        }\n#endif\n\n      __mf_describe_object (NULL); /* Reset description epoch.  */\n      l = __mf_report_leaks ();\n      fprintf (stderr, \"number of leaked objects: %u\\n\", l);\n    }\n}\n\n/* __mf_backtrace */\n\nsize_t\n__mf_backtrace (char ***symbols, void *guess_pc, unsigned guess_omit_levels)\n{\n  void ** pc_array;\n  unsigned pc_array_size = __mf_opts.backtrace + guess_omit_levels;\n  unsigned remaining_size;\n  unsigned omitted_size = 0;\n  unsigned i;\n  DECLARE (void, free, void *ptr);\n  DECLARE (void *, calloc, size_t c, size_t n);\n  DECLARE (void *, malloc, size_t n);\n\n  pc_array = CALL_REAL (calloc, pc_array_size, sizeof (void *) );\n#ifdef HAVE_BACKTRACE\n  pc_array_size = backtrace (pc_array, pc_array_size);\n#else\n#define FETCH(n) do { if (pc_array_size >= n) { \\\n                 pc_array[n] = __builtin_return_address(n); \\\n                 if (pc_array[n] == 0) pc_array_size = n; } } while (0)\n\n  /* Unroll some calls __builtin_return_address because this function\n     only takes a literal integer parameter.  */\n  FETCH (0);\n#if 0\n  /* XXX: __builtin_return_address sometimes crashes (!) on >0 arguments,\n     rather than simply returning 0.  :-(  */\n  FETCH (1);\n  FETCH (2);\n  FETCH (3);\n  FETCH (4);\n  FETCH (5);\n  FETCH (6);\n  FETCH (7);\n  FETCH (8);\n  if (pc_array_size > 8) pc_array_size = 9;\n#else\n  if (pc_array_size > 0) pc_array_size = 1;\n#endif\n\n#undef FETCH\n#endif\n\n  /* We want to trim the first few levels of the stack traceback,\n     since they contain libmudflap wrappers and junk.  If pc_array[]\n     ends up containing a non-NULL guess_pc, then trim everything\n     before that.  Otherwise, omit the first guess_omit_levels\n     entries. */\n\n  if (guess_pc != NULL)\n    for (i=0; i<pc_array_size; i++)\n      if (pc_array [i] == guess_pc)\n        omitted_size = i;\n\n  if (omitted_size == 0) /* No match? */\n    if (pc_array_size > guess_omit_levels)\n      omitted_size = guess_omit_levels;\n\n  remaining_size = pc_array_size - omitted_size;\n\n#ifdef HAVE_BACKTRACE_SYMBOLS\n  *symbols = backtrace_symbols (pc_array + omitted_size, remaining_size);\n#else\n  {\n    /* Let's construct a buffer by hand.  It will have <remaining_size>\n       char*'s at the front, pointing at individual strings immediately\n       afterwards.  */\n    void *buffer;\n    char *chars;\n    char **pointers;\n    enum { perline = 30 };\n    buffer = CALL_REAL (malloc, remaining_size * (perline + sizeof(char *)));\n    pointers = (char **) buffer;\n    chars = (char *)buffer + (remaining_size * sizeof (char *));\n    for (i = 0; i < remaining_size; i++)\n      {\n        pointers[i] = chars;\n        sprintf (chars, \"[0x%p]\", pc_array [omitted_size + i]);\n        chars = chars + perline;\n      }\n    *symbols = pointers;\n  }\n#endif\n  CALL_REAL (free, pc_array);\n\n  return remaining_size;\n}\n\n/* ------------------------------------------------------------------------ */\n/* __mf_violation */\n\nvoid\n__mf_violation (void *ptr, size_t sz, uintptr_t pc,\n                const char *location, int type)\n{\n  char buf [128];\n  static unsigned violation_number;\n  DECLARE(void, free, void *ptr);\n\n  TRACE (\"violation pc=%p location=%s type=%d ptr=%p size=%lu\\n\",\n         (void *) pc,\n         (location != NULL ? location : \"\"), type, ptr, (unsigned long) sz);\n\n  if (__mf_opts.collect_stats)\n    __mf_count_violation [(type < 0) ? 0 :\n                          (type > __MF_VIOL_WATCH) ? 0 :\n                          type] ++;\n\n  /* Print out a basic warning message.  */\n  if (__mf_opts.verbose_violations)\n  {\n    unsigned dead_p;\n    unsigned num_helpful = 0;\n    struct timeval now = { 0, 0 };\n#if HAVE_GETTIMEOFDAY\n    gettimeofday (& now, NULL);\n#endif\n\n    violation_number ++;\n    fprintf (stderr,\n             \"*******\\n\"\n             \"mudflap violation %u (%s): time=%lu.%06lu \"\n             \"ptr=%p size=%lu\\npc=%p%s%s%s\\n\",\n             violation_number,\n             ((type == __MF_VIOL_READ) ? \"check/read\" :\n              (type == __MF_VIOL_WRITE) ? \"check/write\" :\n              (type == __MF_VIOL_REGISTER) ? \"register\" :\n              (type == __MF_VIOL_UNREGISTER) ? \"unregister\" :\n              (type == __MF_VIOL_WATCH) ? \"watch\" : \"unknown\"),\n             now.tv_sec, now.tv_usec,\n             (void *) ptr, (unsigned long)sz, (void *) pc,\n             (location != NULL ? \" location=`\" : \"\"),\n             (location != NULL ? location : \"\"),\n             (location != NULL ? \"'\" : \"\"));\n\n    if (__mf_opts.backtrace > 0)\n      {\n        char ** symbols;\n        unsigned i, num;\n\n        num = __mf_backtrace (& symbols, (void *) pc, 2);\n        /* Note: backtrace_symbols calls malloc().  But since we're in\n           __mf_violation and presumably __mf_check, it'll detect\n           recursion, and not put the new string into the database.  */\n\n        for (i=0; i<num; i++)\n          fprintf (stderr, \"      %s\\n\", symbols[i]);\n\n        /* Calling free() here would trigger a violation.  */\n        CALL_REAL(free, symbols);\n      }\n\n\n    /* Look for nearby objects.  For this, we start with s_low/s_high\n       pointing to the given area, looking for overlapping objects.\n       If none show up, widen the search area and keep looking. */\n\n    if (sz == 0) sz = 1;\n\n    for (dead_p = 0; dead_p <= 1; dead_p ++) /* for dead_p in 0 1 */\n      {\n        enum {max_objs = 3}; /* magic */\n        __mf_object_t *objs[max_objs];\n        unsigned num_objs = 0;\n        uintptr_t s_low, s_high;\n        unsigned tries = 0;\n        unsigned i;\n\n        s_low = (uintptr_t) ptr;\n        s_high = CLAMPSZ (ptr, sz);\n\n        while (tries < 16) /* magic */\n          {\n            if (dead_p)\n              num_objs = __mf_find_dead_objects (s_low, s_high, objs, max_objs);\n            else\n              num_objs = __mf_find_objects (s_low, s_high, objs, max_objs);\n\n            if (num_objs) /* good enough */\n              break;\n\n            tries ++;\n\n            /* XXX: tune this search strategy.  It's too dependent on\n             sz, which can vary from 1 to very big (when array index\n             checking) numbers. */\n            s_low = CLAMPSUB (s_low, (sz * tries * tries));\n            s_high = CLAMPADD (s_high, (sz * tries * tries));\n          }\n\n        for (i = 0; i < min (num_objs, max_objs); i++)\n          {\n            __mf_object_t *obj = objs[i];\n            uintptr_t low = (uintptr_t) ptr;\n            uintptr_t high = CLAMPSZ (ptr, sz);\n            unsigned before1 = (low < obj->low) ? obj->low - low : 0;\n            unsigned after1 = (low > obj->high) ? low - obj->high : 0;\n            unsigned into1 = (high >= obj->low && low <= obj->high) ? low - obj->low : 0;\n            unsigned before2 = (high < obj->low) ? obj->low - high : 0;\n            unsigned after2 = (high > obj->high) ? high - obj->high : 0;\n            unsigned into2 = (high >= obj->low && low <= obj->high) ? high - obj->low : 0;\n\n            fprintf (stderr, \"Nearby object %u: checked region begins %uB %s and ends %uB %s\\n\",\n                     num_helpful + i + 1,\n                     (before1 ? before1 : after1 ? after1 : into1),\n                     (before1 ? \"before\" : after1 ? \"after\" : \"into\"),\n                     (before2 ? before2 : after2 ? after2 : into2),\n                     (before2 ? \"before\" : after2 ? \"after\" : \"into\"));\n            __mf_describe_object (obj);\n          }\n        num_helpful += num_objs;\n      }\n\n    fprintf (stderr, \"number of nearby objects: %u\\n\", num_helpful);\n  }\n\n  /* How to finally handle this violation?  */\n  switch (__mf_opts.violation_mode)\n    {\n    case viol_nop:\n      break;\n    case viol_segv:\n      kill (getpid(), SIGSEGV);\n      break;\n    case viol_abort:\n      abort ();\n      break;\n    case viol_gdb:\n\n      snprintf (buf, 128, \"gdb --pid=%u\", (unsigned) getpid ());\n      system (buf);\n      /* XXX: should probably fork() && sleep(GDB_WAIT_PARAMETER)\n      instead, and let the forked child execlp() gdb.  That way, this\n      subject process can be resumed under the supervision of gdb.\n      This can't happen now, since system() only returns when gdb\n      dies.  In that case, we need to beware of starting a second\n      concurrent gdb child upon the next violation.  (But if the first\n      gdb dies, then starting a new one is appropriate.)  */\n      break;\n    }\n}\n\n/* ------------------------------------------------------------------------ */\n\n\nunsigned __mf_watch (void *ptr, size_t sz)\n{\n  unsigned rc;\n  LOCKTH ();\n  BEGIN_RECURSION_PROTECT ();\n  rc = __mf_watch_or_not (ptr, sz, 1);\n  END_RECURSION_PROTECT ();\n  UNLOCKTH ();\n  return rc;\n}\n\nunsigned __mf_unwatch (void *ptr, size_t sz)\n{\n  unsigned rc;\n  LOCKTH ();\n  rc = __mf_watch_or_not (ptr, sz, 0);\n  UNLOCKTH ();\n  return rc;\n}\n\n\nstatic unsigned\n__mf_watch_or_not (void *ptr, size_t sz, char flag)\n{\n  uintptr_t ptr_high = CLAMPSZ (ptr, sz);\n  uintptr_t ptr_low = (uintptr_t) ptr;\n  unsigned count = 0;\n\n  TRACE (\"%s ptr=%p size=%lu\\n\",\n         (flag ? \"watch\" : \"unwatch\"), ptr, (unsigned long) sz);\n\n  switch (__mf_opts.mudflap_mode)\n    {\n    case mode_nop:\n    case mode_populate:\n    case mode_violate:\n      count = 0;\n      break;\n\n    case mode_check:\n      {\n        __mf_object_t **all_ovr_objs;\n        unsigned obj_count;\n        unsigned n;\n        DECLARE (void *, malloc, size_t c);\n        DECLARE (void, free, void *p);\n\n        obj_count = __mf_find_objects (ptr_low, ptr_high, NULL, 0);\n        VERBOSE_TRACE (\" %u:\", obj_count);\n\n        all_ovr_objs = CALL_REAL (malloc, (sizeof (__mf_object_t *) * obj_count));\n        if (all_ovr_objs == NULL) abort ();\n        n = __mf_find_objects (ptr_low, ptr_high, all_ovr_objs, obj_count);\n        assert (n == obj_count);\n\n        for (n = 0; n < obj_count; n ++)\n          {\n            __mf_object_t *obj = all_ovr_objs[n];\n\n            VERBOSE_TRACE (\" [%p]\", (void *) obj);\n            if (obj->watching_p != flag)\n              {\n                obj->watching_p = flag;\n                count ++;\n\n                /* Remove object from cache, to ensure next access\n                   goes through __mf_check().  */\n                if (flag)\n                  __mf_uncache_object (obj);\n              }\n          }\n        CALL_REAL (free, all_ovr_objs);\n      }\n      break;\n    }\n\n  return count;\n}\n\n\nvoid\n__mf_sigusr1_handler (int num)\n{\n  __mf_sigusr1_received ++;\n}\n\n/* Install or remove SIGUSR1 handler as necessary.\n   Also, respond to a received pending SIGUSR1.  */\nvoid\n__mf_sigusr1_respond ()\n{\n  static int handler_installed;\n\n#ifdef SIGUSR1\n  /* Manage handler */\n  if (__mf_opts.sigusr1_report && ! handler_installed)\n    {\n      signal (SIGUSR1, __mf_sigusr1_handler);\n      handler_installed = 1;\n    }\n  else if(! __mf_opts.sigusr1_report && handler_installed)\n    {\n      signal (SIGUSR1, SIG_DFL);\n      handler_installed = 0;\n    }\n#endif\n\n  /* Manage enqueued signals */\n  if (__mf_sigusr1_received > __mf_sigusr1_handled)\n    {\n      __mf_sigusr1_handled ++;\n      assert (__mf_get_state () == reentrant);\n      __mfu_report ();\n      handler_installed = 0; /* We may need to re-enable signal; this might be a SysV library. */\n    }\n}\n\n\n/* XXX: provide an alternative __assert_fail function that cannot\n   fail due to libmudflap infinite recursion.  */\n#ifndef NDEBUG\n\nstatic void\nwrite_itoa (int fd, unsigned n)\n{\n  enum x { bufsize = sizeof(n)*4 };\n  char buf [bufsize];\n  unsigned i;\n\n  for (i=0; i<bufsize-1; i++)\n    {\n      unsigned digit = n % 10;\n      buf[bufsize-2-i] = digit + '0';\n      n /= 10;\n      if (n == 0)\n        {\n          char *m = & buf [bufsize-2-i];\n          buf[bufsize-1] = '\\0';\n          write (fd, m, strlen(m));\n          break;\n        }\n    }\n}\n\n\nvoid\n__assert_fail (const char *msg, const char *file, unsigned line, const char *func)\n{\n#define write2(string) write (2, (string), strlen ((string)));\n  write2(\"mf\");\n#ifdef LIBMUDFLAPTH\n  write2(\"(\");\n  write_itoa (2, (unsigned) pthread_self ());\n  write2(\")\");\n#endif\n  write2(\": assertion failure: `\");\n  write (2, msg, strlen (msg));\n  write2(\"' in \");\n  write (2, func, strlen (func));\n  write2(\" at \");\n  write (2, file, strlen (file));\n  write2(\":\");\n  write_itoa (2, line);\n  write2(\"\\n\");\n#undef write2\n  abort ();\n}\n\n\n#endif\n\n\n\n/* Adapted splay tree code, originally from libiberty.  It has been\n   specialized for libmudflap as requested by RMS.  */\n\nstatic void\nmfsplay_tree_free (void *p)\n{\n  DECLARE (void, free, void *p);\n  CALL_REAL (free, p);\n}\n\nstatic void *\nmfsplay_tree_xmalloc (size_t s)\n{\n  DECLARE (void *, malloc, size_t s);\n  return CALL_REAL (malloc, s);\n}\n\n\nstatic void mfsplay_tree_splay (mfsplay_tree, mfsplay_tree_key);\nstatic mfsplay_tree_node mfsplay_tree_splay_helper (mfsplay_tree,\n                                                mfsplay_tree_key,\n                                                mfsplay_tree_node *,\n                                                mfsplay_tree_node *,\n                                                mfsplay_tree_node *);\n\n\n/* Help splay SP around KEY.  PARENT and GRANDPARENT are the parent\n   and grandparent, respectively, of NODE.  */\n\nstatic mfsplay_tree_node\nmfsplay_tree_splay_helper (mfsplay_tree sp,\n                         mfsplay_tree_key key,\n                         mfsplay_tree_node * node,\n                         mfsplay_tree_node * parent,\n                         mfsplay_tree_node * grandparent)\n{\n  mfsplay_tree_node *next;\n  mfsplay_tree_node n;\n  int comparison;\n\n  n = *node;\n\n  if (!n)\n    return *parent;\n\n  comparison = ((key > n->key) ? 1 : ((key < n->key) ? -1 : 0));\n\n  if (comparison == 0)\n    /* We've found the target.  */\n    next = 0;\n  else if (comparison < 0)\n    /* The target is to the left.  */\n    next = &n->left;\n  else\n    /* The target is to the right.  */\n    next = &n->right;\n\n  if (next)\n    {\n      /* Check whether our recursion depth is too high.  Abort this search,\n         and signal that a rebalance is required to continue.  */\n      if (sp->depth > sp->max_depth)\n        {\n          sp->rebalance_p = 1;\n          return n;\n         }\n\n      /* Continue down the tree.  */\n      sp->depth ++;\n      n = mfsplay_tree_splay_helper (sp, key, next, node, parent);\n      sp->depth --;\n\n      /* The recursive call will change the place to which NODE\n         points.  */\n      if (*node != n || sp->rebalance_p)\n        return n;\n    }\n\n  if (!parent)\n    /* NODE is the root.  We are done.  */\n    return n;\n\n  /* First, handle the case where there is no grandparent (i.e.,\n   *PARENT is the root of the tree.)  */\n  if (!grandparent)\n    {\n      if (n == (*parent)->left)\n        {\n          *node = n->right;\n          n->right = *parent;\n        }\n      else\n        {\n          *node = n->left;\n          n->left = *parent;\n        }\n      *parent = n;\n      return n;\n    }\n\n  /* Next handle the cases where both N and *PARENT are left children,\n     or where both are right children.  */\n  if (n == (*parent)->left && *parent == (*grandparent)->left)\n    {\n      mfsplay_tree_node p = *parent;\n\n      (*grandparent)->left = p->right;\n      p->right = *grandparent;\n      p->left = n->right;\n      n->right = p;\n      *grandparent = n;\n      return n;\n    }\n  else if (n == (*parent)->right && *parent == (*grandparent)->right)\n    {\n      mfsplay_tree_node p = *parent;\n\n      (*grandparent)->right = p->left;\n      p->left = *grandparent;\n      p->right = n->left;\n      n->left = p;\n      *grandparent = n;\n      return n;\n    }\n\n  /* Finally, deal with the case where N is a left child, but *PARENT\n     is a right child, or vice versa.  */\n  if (n == (*parent)->left)\n    {\n      (*parent)->left = n->right;\n      n->right = *parent;\n      (*grandparent)->right = n->left;\n      n->left = *grandparent;\n      *grandparent = n;\n      return n;\n    }\n  else\n    {\n      (*parent)->right = n->left;\n      n->left = *parent;\n      (*grandparent)->left = n->right;\n      n->right = *grandparent;\n      *grandparent = n;\n      return n;\n    }\n}\n\n\n\nstatic int\nmfsplay_tree_rebalance_helper1 (mfsplay_tree_node n, void *array_ptr)\n{\n  mfsplay_tree_node **p = array_ptr;\n  *(*p) = n;\n  (*p)++;\n  return 0;\n}\n\n\nstatic mfsplay_tree_node\nmfsplay_tree_rebalance_helper2 (mfsplay_tree_node * array, unsigned low,\n                              unsigned high)\n{\n  unsigned middle = low + (high - low) / 2;\n  mfsplay_tree_node n = array[middle];\n\n  /* Note that since we're producing a balanced binary tree, it is not a problem\n     that this function is recursive.  */\n  if (low + 1 <= middle)\n    n->left = mfsplay_tree_rebalance_helper2 (array, low, middle - 1);\n  else\n    n->left = NULL;\n\n  if (middle + 1 <= high)\n    n->right = mfsplay_tree_rebalance_helper2 (array, middle + 1, high);\n  else\n    n->right = NULL;\n\n  return n;\n}\n\n\n/* Rebalance the entire tree.  Do this by copying all the node\n   pointers into an array, then cleverly re-linking them.  */\nstatic void\nmfsplay_tree_rebalance (mfsplay_tree sp)\n{\n  mfsplay_tree_node *all_nodes, *all_nodes_1;\n\n  if (sp->num_keys <= 2)\n    return;\n\n  all_nodes = mfsplay_tree_xmalloc (sizeof (mfsplay_tree_node) * sp->num_keys);\n\n  /* Traverse all nodes to copy their addresses into this array.  */\n  all_nodes_1 = all_nodes;\n  mfsplay_tree_foreach (sp, mfsplay_tree_rebalance_helper1,\n                      (void *) &all_nodes_1);\n\n  /* Relink all the nodes.  */\n  sp->root = mfsplay_tree_rebalance_helper2 (all_nodes, 0, sp->num_keys - 1);\n\n  mfsplay_tree_free (all_nodes);\n}\n\n\n/* Splay SP around KEY.  */\nstatic void\nmfsplay_tree_splay (mfsplay_tree sp, mfsplay_tree_key key)\n{\n  if (sp->root == 0)\n    return;\n\n  /* If we just splayed the tree with the same key, do nothing.  */\n  if (sp->last_splayed_key_p &&\n      (sp->last_splayed_key == key))\n    return;\n\n  /* Compute a maximum recursion depth for a splay tree with NUM nodes.\n     The idea is to limit excessive stack usage if we're facing\n     degenerate access patterns.  Unfortunately such patterns can occur\n     e.g. during static initialization, where many static objects might\n     be registered in increasing address sequence, or during a case where\n     large tree-like heap data structures are allocated quickly.\n\n     On x86, this corresponds to roughly 200K of stack usage.\n     XXX: For libmudflapth, this could be a function of __mf_opts.thread_stack.  */\n  sp->max_depth = 2500;\n  sp->rebalance_p = sp->depth = 0;\n\n  mfsplay_tree_splay_helper (sp, key, &sp->root, NULL, NULL);\n  if (sp->rebalance_p)\n    {\n      mfsplay_tree_rebalance (sp);\n\n      sp->rebalance_p = sp->depth = 0;\n      mfsplay_tree_splay_helper (sp, key, &sp->root, NULL, NULL);\n\n      if (sp->rebalance_p)\n        abort ();\n    }\n\n\n  /* Cache this splay key. */\n  sp->last_splayed_key = key;\n  sp->last_splayed_key_p = 1;\n}\n\n\n\n/* Allocate a new splay tree.  */\nstatic mfsplay_tree\nmfsplay_tree_new ()\n{\n  mfsplay_tree sp = mfsplay_tree_xmalloc (sizeof (struct mfsplay_tree_s));\n  sp->root = NULL;\n  sp->last_splayed_key_p = 0;\n  sp->num_keys = 0;\n\n  return sp;\n}\n\n\n\n/* Insert a new node (associating KEY with DATA) into SP.  If a\n   previous node with the indicated KEY exists, its data is replaced\n   with the new value.  Returns the new node.  */\nstatic mfsplay_tree_node\nmfsplay_tree_insert (mfsplay_tree sp, mfsplay_tree_key key, mfsplay_tree_value value)\n{\n  int comparison = 0;\n\n  mfsplay_tree_splay (sp, key);\n\n  if (sp->root)\n    comparison = ((sp->root->key > key) ? 1 :\n                  ((sp->root->key < key) ? -1 : 0));\n\n  if (sp->root && comparison == 0)\n    {\n      /* If the root of the tree already has the indicated KEY, just\n         replace the value with VALUE.  */\n      sp->root->value = value;\n    }\n  else\n    {\n      /* Create a new node, and insert it at the root.  */\n      mfsplay_tree_node node;\n\n      node = mfsplay_tree_xmalloc (sizeof (struct mfsplay_tree_node_s));\n      node->key = key;\n      node->value = value;\n      sp->num_keys++;\n      if (!sp->root)\n        node->left = node->right = 0;\n      else if (comparison < 0)\n        {\n          node->left = sp->root;\n          node->right = node->left->right;\n          node->left->right = 0;\n        }\n      else\n        {\n          node->right = sp->root;\n          node->left = node->right->left;\n          node->right->left = 0;\n        }\n\n      sp->root = node;\n      sp->last_splayed_key_p = 0;\n    }\n\n  return sp->root;\n}\n\n/* Remove KEY from SP.  It is not an error if it did not exist.  */\n\nstatic void\nmfsplay_tree_remove (mfsplay_tree sp, mfsplay_tree_key key)\n{\n  mfsplay_tree_splay (sp, key);\n  sp->last_splayed_key_p = 0;\n  if (sp->root && (sp->root->key == key))\n    {\n      mfsplay_tree_node left, right;\n      left = sp->root->left;\n      right = sp->root->right;\n      /* Delete the root node itself.  */\n      mfsplay_tree_free (sp->root);\n      sp->num_keys--;\n      /* One of the children is now the root.  Doesn't matter much\n         which, so long as we preserve the properties of the tree.  */\n      if (left)\n        {\n          sp->root = left;\n          /* If there was a right child as well, hang it off the\n             right-most leaf of the left child.  */\n          if (right)\n            {\n              while (left->right)\n                left = left->right;\n              left->right = right;\n            }\n        }\n      else\n        sp->root = right;\n    }\n}\n\n/* Lookup KEY in SP, returning VALUE if present, and NULL\n   otherwise.  */\n\nstatic mfsplay_tree_node\nmfsplay_tree_lookup (mfsplay_tree sp, mfsplay_tree_key key)\n{\n  mfsplay_tree_splay (sp, key);\n  if (sp->root && (sp->root->key == key))\n    return sp->root;\n  else\n    return 0;\n}\n\n\n/* Return the immediate predecessor KEY, or NULL if there is no\n   predecessor.  KEY need not be present in the tree.  */\n\nstatic mfsplay_tree_node\nmfsplay_tree_predecessor (mfsplay_tree sp, mfsplay_tree_key key)\n{\n  int comparison;\n  mfsplay_tree_node node;\n  /* If the tree is empty, there is certainly no predecessor.  */\n  if (!sp->root)\n    return NULL;\n  /* Splay the tree around KEY.  That will leave either the KEY\n     itself, its predecessor, or its successor at the root.  */\n  mfsplay_tree_splay (sp, key);\n  comparison = ((sp->root->key > key) ? 1 :\n                ((sp->root->key < key) ? -1 : 0));\n\n  /* If the predecessor is at the root, just return it.  */\n  if (comparison < 0)\n    return sp->root;\n  /* Otherwise, find the rightmost element of the left subtree.  */\n  node = sp->root->left;\n  if (node)\n    while (node->right)\n      node = node->right;\n  return node;\n}\n\n/* Return the immediate successor KEY, or NULL if there is no\n   successor.  KEY need not be present in the tree.  */\n\nstatic mfsplay_tree_node\nmfsplay_tree_successor (mfsplay_tree sp, mfsplay_tree_key key)\n{\n  int comparison;\n  mfsplay_tree_node node;\n  /* If the tree is empty, there is certainly no successor.  */\n  if (!sp->root)\n    return NULL;\n  /* Splay the tree around KEY.  That will leave either the KEY\n     itself, its predecessor, or its successor at the root.  */\n  mfsplay_tree_splay (sp, key);\n  comparison = ((sp->root->key > key) ? 1 :\n                ((sp->root->key < key) ? -1 : 0));\n  /* If the successor is at the root, just return it.  */\n  if (comparison > 0)\n    return sp->root;\n  /* Otherwise, find the leftmost element of the right subtree.  */\n  node = sp->root->right;\n  if (node)\n    while (node->left)\n      node = node->left;\n  return node;\n}\n\n/* Call FN, passing it the DATA, for every node in SP, following an\n   in-order traversal.  If FN every returns a non-zero value, the\n   iteration ceases immediately, and the value is returned.\n   Otherwise, this function returns 0.\n\n   This function simulates recursion using dynamically allocated\n   arrays, since it may be called from mfsplay_tree_rebalance(), which\n   in turn means that the tree is already uncomfortably deep for stack\n   space limits.  */\nstatic int\nmfsplay_tree_foreach (mfsplay_tree st, mfsplay_tree_foreach_fn fn, void *data)\n{\n  mfsplay_tree_node *stack1;\n  char *stack2;\n  unsigned sp;\n  int val = 0;\n  enum s { s_left, s_here, s_right, s_up };\n\n  if (st->root == NULL) /* => num_keys == 0 */\n    return 0;\n\n  stack1 = mfsplay_tree_xmalloc (sizeof (mfsplay_tree_node) * st->num_keys);\n  stack2 = mfsplay_tree_xmalloc (sizeof (char) * st->num_keys);\n\n  sp = 0;\n  stack1 [sp] = st->root;\n  stack2 [sp] = s_left;\n\n  while (1)\n    {\n      mfsplay_tree_node n;\n      enum s s;\n\n      n = stack1 [sp];\n      s = stack2 [sp];\n\n      /* Handle each of the four possible states separately.  */\n\n      /* 1: We're here to traverse the left subtree (if any).  */\n      if (s == s_left)\n        {\n          stack2 [sp] = s_here;\n          if (n->left != NULL)\n            {\n              sp ++;\n              stack1 [sp] = n->left;\n              stack2 [sp] = s_left;\n            }\n        }\n\n      /* 2: We're here to traverse this node.  */\n      else if (s == s_here)\n        {\n          stack2 [sp] = s_right;\n          val = (*fn) (n, data);\n          if (val) break;\n        }\n\n      /* 3: We're here to traverse the right subtree (if any).  */\n      else if (s == s_right)\n        {\n          stack2 [sp] = s_up;\n          if (n->right != NULL)\n            {\n              sp ++;\n              stack1 [sp] = n->right;\n              stack2 [sp] = s_left;\n            }\n        }\n\n      /* 4: We're here after both subtrees (if any) have been traversed.  */\n      else if (s == s_up)\n        {\n          /* Pop the stack.  */\n          if (sp == 0) break; /* Popping off the root note: we're finished!  */\n          sp --;\n        }\n\n      else\n        abort ();\n    }\n\n  mfsplay_tree_free (stack1);\n  mfsplay_tree_free (stack2);\n  return val;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/boehm-gc/dyn_load.c": "/*\n * Copyright (c) 1991-1994 by Xerox Corporation.  All rights reserved.\n * Copyright (c) 1997 by Silicon Graphics.  All rights reserved.\n *\n * THIS MATERIAL IS PROVIDED AS IS, WITH ABSOLUTELY NO WARRANTY EXPRESSED\n * OR IMPLIED.  ANY USE IS AT YOUR OWN RISK.\n *\n * Permission is hereby granted to use or copy this program\n * for any purpose,  provided the above notices are retained on all copies.\n * Permission to modify the code and to distribute modified code is granted,\n * provided the above notices are retained, and a notice that the code was\n * modified is included with the above copyright notice.\n *\n * Original author: Bill Janssen\n * Heavily modified by Hans Boehm and others\n */\n\n/*\n * This is incredibly OS specific code for tracking down data sections in\n * dynamic libraries.  There appears to be no way of doing this quickly\n * without groveling through undocumented data structures.  We would argue\n * that this is a bug in the design of the dlopen interface.  THIS CODE\n * MAY BREAK IN FUTURE OS RELEASES.  If this matters to you, don't hesitate\n * to let your vendor know ...\n *\n * None of this is safe with dlclose and incremental collection.\n * But then not much of anything is safe in the presence of dlclose.\n */\n#if (defined(__linux__) || defined(__GLIBC__) || defined(__GNU__)) \\\n    && !defined(_GNU_SOURCE)\n    /* Can't test LINUX, since this must be define before other includes */\n#   define _GNU_SOURCE\n#endif\n#if !defined(MACOS) && !defined(_WIN32_WCE)\n#  include <sys/types.h>\n#endif\n#include \"private/gc_priv.h\"\n\n/* BTL: avoid circular redefinition of dlopen if GC_SOLARIS_THREADS defined */\n# if (defined(GC_PTHREADS) || defined(GC_SOLARIS_THREADS)) \\\n      && defined(dlopen) && !defined(GC_USE_LD_WRAP)\n    /* To support threads in Solaris, gc.h interposes on dlopen by       */\n    /* defining \"dlopen\" to be \"GC_dlopen\", which is implemented below.  */\n    /* However, both GC_FirstDLOpenedLinkMap() and GC_dlopen() use the   */\n    /* real system dlopen() in their implementation. We first remove     */\n    /* gc.h's dlopen definition and restore it later, after GC_dlopen(). */\n#   undef dlopen\n#   define GC_must_restore_redefined_dlopen\n# else\n#   undef GC_must_restore_redefined_dlopen\n# endif\n\n#if (defined(DYNAMIC_LOADING) \\\n\t|| defined(MSWIN32)   \\\n\t|| defined(MSWINCE)   \\\n\t|| defined(CYGWIN32)) \\\n    && !defined(PCR)\n#if !defined(SUNOS4) && !defined(SUNOS5DL) && !defined(IRIX5) && \\\n    !defined(MSWIN32) && !defined(MSWINCE) && !defined(CYGWIN32) && \\\n    !(defined(ALPHA) && defined(OSF1)) && \\\n    !defined(HPUX) && !(defined(LINUX) && defined(__ELF__)) && \\\n    !defined(RS6000) && !defined(SCO_ELF) && !defined(DGUX) && \\\n    !(defined(FREEBSD) && defined(__ELF__)) && \\\n    !(defined(NETBSD) && defined(__ELF__)) && !defined(HURD) && \\\n    !defined(DARWIN)\n --> We only know how to find data segments of dynamic libraries for the\n --> above.  Additional SVR4 variants might not be too\n --> hard to add.\n#endif\n\n#include <stdio.h>\n#ifdef SUNOS5DL\n#   include <sys/elf.h>\n#   include <dlfcn.h>\n#   include <link.h>\n#endif\n#ifdef SUNOS4\n#   include <dlfcn.h>\n#   include <link.h>\n#   include <a.out.h>\n  /* struct link_map field overrides */\n#   define l_next\tlm_next\n#   define l_addr\tlm_addr\n#   define l_name\tlm_name\n#endif\n#ifdef IRIX5\n#   include <elf.h>\n#   if _MIPS_SIM == _MIPS_SIM_ABI32 /* O32 ABI */\n     /* Don't include <obj_list.h> here. */\n#     include <obj.h>\n#   else /* N32 or N64 ABIs */\n#     include <objlist.h>\n#   endif\n#endif\n\n#if defined(NETBSD)\n#   include <machine/elf_machdep.h>\n#   define ELFSIZE ARCH_ELFSIZE\n#endif\n\n#if defined(LINUX) && defined(__ELF__) || defined(SCO_ELF) || \\\n    (defined(FREEBSD) && defined(__ELF__)) || defined(DGUX) || \\\n    (defined(NETBSD) && defined(__ELF__)) || defined(HURD)\n#   include <stddef.h>\n#   include <elf.h>\n#   include <link.h>\n#endif\n\n/* Newer versions of GNU/Linux define this macro.  We\n * define it similarly for any ELF systems that don't.  */\n#  ifndef ElfW\n#    if defined(FREEBSD)\n#      if __ELF_WORD_SIZE == 32\n#        define ElfW(type) Elf32_##type\n#      else\n#        define ElfW(type) Elf64_##type\n#      endif\n#    else\n#      ifdef NETBSD\n#        if ELFSIZE == 32\n#          define ElfW(type) Elf32_##type\n#        else\n#          define ElfW(type) Elf64_##type\n#        endif\n#      else\n#        if !defined(ELF_CLASS) || ELF_CLASS == ELFCLASS32\n#          define ElfW(type) Elf32_##type\n#        else\n#          define ElfW(type) Elf64_##type\n#\t endif\n#      endif\n#    endif\n#  endif\n\n/* An user-supplied routine that is called to determine if a DSO must\n   be scanned by the gc.  */\nstatic int (*GC_has_static_roots)(const char *, void *, size_t);\n/* Register the routine.  */\nvoid\nGC_register_has_static_roots_callback \n  (int (*callback)(const char *, void *, size_t))\n{\n  GC_has_static_roots = callback;\n}\n\n#if defined(SUNOS5DL) && !defined(USE_PROC_FOR_LIBRARIES)\n\n#ifdef LINT\n    Elf32_Dyn _DYNAMIC;\n#endif\n\n#define obj_offset(lm) ((unsigned long)(lm->l_addr))\n\nstatic struct link_map *\nGC_FirstDLOpenedLinkMap()\n{\n    extern ElfW(Dyn) _DYNAMIC;\n    ElfW(Dyn) *dp;\n    struct r_debug *r;\n    static struct link_map * cachedResult = 0;\n    static ElfW(Dyn) *dynStructureAddr = 0;\n    \t\t\t/* BTL: added to avoid Solaris 5.3 ld.so _DYNAMIC bug */\n\n#   ifdef SUNOS53_SHARED_LIB\n\t/* BTL: Avoid the Solaris 5.3 bug that _DYNAMIC isn't being set\t*/\n\t/* up properly in dynamically linked .so's. This means we have\t*/\n\t/* to use its value in the set of original object files loaded\t*/\n\t/* at program startup.\t\t\t\t\t\t*/\n\tif( dynStructureAddr == 0 ) {\n\t  void* startupSyms = dlopen(0, RTLD_LAZY);\n\t  dynStructureAddr = (ElfW(Dyn)*)dlsym(startupSyms, \"_DYNAMIC\");\n\t\t}\n#   else\n\tdynStructureAddr = &_DYNAMIC;\n#   endif\n\n    if( dynStructureAddr == 0) {\n        return(0);\n    }\n    if( cachedResult == 0 ) {\n        int tag;\n        for( dp = ((ElfW(Dyn) *)(&_DYNAMIC)); (tag = dp->d_tag) != 0; dp++ ) {\n            if( tag == DT_DEBUG ) {\n                struct link_map *lm\n                        = ((struct r_debug *)(dp->d_un.d_ptr))->r_map;\n                if( lm != 0 ) cachedResult = lm->l_next; /* might be NIL */\n                break;\n            }\n        }\n    }\n    return cachedResult;\n}\n\n#endif /* SUNOS5DL ... */\n\n/* BTL: added to fix circular dlopen definition if GC_SOLARIS_THREADS defined */\n# if defined(GC_must_restore_redefined_dlopen)\n#   define dlopen GC_dlopen\n# endif\n\n#if defined(SUNOS4) && !defined(USE_PROC_FOR_LIBRARIES)\n\n#ifdef LINT\n    struct link_dynamic _DYNAMIC;\n#endif\n\n#define obj_offset(lm) ((unsigned long)(lm->l_addr))\n\nstatic struct link_map *\nGC_FirstDLOpenedLinkMap()\n{\n    extern struct link_dynamic _DYNAMIC;\n\n    if( &_DYNAMIC == 0) {\n        return(0);\n    }\n    return(_DYNAMIC.ld_un.ld_1->ld_loaded);\n}\n\n/* Return the address of the ld.so allocated common symbol\t*/\n/* with the least address, or 0 if none.\t\t\t*/\nstatic ptr_t GC_first_common()\n{\n    ptr_t result = 0;\n    extern struct link_dynamic _DYNAMIC;\n    struct rtc_symb * curr_symbol;\n    \n    if( &_DYNAMIC == 0) {\n        return(0);\n    }\n    curr_symbol = _DYNAMIC.ldd -> ldd_cp;\n    for (; curr_symbol != 0; curr_symbol = curr_symbol -> rtc_next) {\n        if (result == 0\n            || (ptr_t)(curr_symbol -> rtc_sp -> n_value) < result) {\n            result = (ptr_t)(curr_symbol -> rtc_sp -> n_value);\n        }\n    }\n    return(result);\n}\n\n#endif  /* SUNOS4 ... */\n\n#if defined(IRIX5) && !defined(USE_PROC_FOR_LIBRARIES)\n\n/* Provide struct link map. */\n#  if _MIPS_SIM == _MIPS_SIM_ABI32 /* O32 ABI */\n/* Provide our own version of struct obj_list in <obj_list.h> with\n   correctly typed data member.  */\nstruct obj_list {\n    struct obj *data;\n    struct obj_list *next;\n    struct obj_list *prev;\n} objList;\n\nstruct link_map {\n    objList l_ol;\n};\n\nextern objList *__rld_obj_head;\n\n/* Map field names */\n#    define l_next\tl_ol.next\n#    define l_addr\tl_ol.data->o_pelfhdr\t\n\n#    define obj_offset(lm) \\\n\t((unsigned long)(lm->l_ol.o_praw - (char *)lm->l_ol.o_base_address))\n#  else /* N32 or N64 ABIs */\nstruct link_map {\n    ElfW(Obj_Info) l_oi;\n};\n\nextern ElfW(Obj_Info) *__rld_obj_head;\n\n/* Map field names */\n#    define l_next\tl_oi.oi_next\n#    define l_addr\tl_oi.oi_ehdr\n\n/* See gdb/solib-irix.c (fetch_lm_info).  */\n#    define obj_offset(lm) \\\n\t ((unsigned long)(lm->l_oi.oi_ehdr - lm->l_oi.oi_orig_ehdr))\n#  endif\n\nstatic struct link_map *\nGC_FirstDLOpenedLinkMap()\n{\n    return (struct link_map *)__rld_obj_head;\n}\n\n#endif /* IRIX5 ... */\n\n# if defined(SUNOS4) || defined(SUNOS5DL) || defined(IRIX5)\n/* Add dynamic library data sections to the root set.\t\t*/\n# if !defined(PCR) \\\n     && !defined(GC_SOLARIS_PTHREADS) && !defined(GC_IRIX_THREADS) \\\n     && defined(THREADS)\n#   ifndef SRC_M3\n\t--> fix mutual exclusion with dlopen\n#   endif  /* We assume M3 programs don't call dlopen for now */\n# endif\n\n# ifndef USE_PROC_FOR_LIBRARIES\nvoid GC_register_dynamic_libraries()\n{\n  struct link_map *lm = GC_FirstDLOpenedLinkMap();\n  \n\n  for (lm = GC_FirstDLOpenedLinkMap();\n       lm != (struct link_map *) 0;  lm = (struct link_map *) lm->l_next)\n    {\n#     ifdef SUNOS4\n\tstruct exec *e;\n\t \n        e = (struct exec *) lm->lm_addr;\n        GC_add_roots_inner(\n      \t\t    ((char *) (N_DATOFF(*e) + lm->lm_addr)),\n\t\t    ((char *) (N_BSSADDR(*e) + e->a_bss + lm->lm_addr)),\n\t\t    TRUE);\n#     endif\n#     if defined(SUNOS5DL) || defined(IRIX5)\n\tElfW(Ehdr) * e;\n        ElfW(Phdr) * p;\n        unsigned long offset;\n        char * start;\n        register int i;\n        \n\te = (ElfW(Ehdr) *) lm->l_addr;\n        p = ((ElfW(Phdr) *)(((char *)(e)) + e->e_phoff));\n        offset = obj_offset(lm);\n        for( i = 0; i < (int)(e->e_phnum); ((i++),(p++)) ) {\n          switch( p->p_type ) {\n            case PT_LOAD:\n              {\n                if( !(p->p_flags & PF_W) ) break;\n                start = ((char *)(p->p_vaddr)) + offset;\n                GC_add_roots_inner(\n                  start,\n                  start + p->p_memsz,\n                  TRUE\n                );\n              }\n              break;\n            default:\n              break;\n          }\n\t}\n#     endif\n    }\n#   ifdef SUNOS4\n      {\n      \tstatic ptr_t common_start = 0;\n      \tptr_t common_end;\n      \textern ptr_t GC_find_limit();\n      \t\n      \tif (common_start == 0) common_start = GC_first_common();\n      \tif (common_start != 0) {\n      \t    common_end = GC_find_limit(common_start, TRUE);\n      \t    GC_add_roots_inner((char *)common_start, (char *)common_end, TRUE);\n      \t}\n      }\n#   endif\n}\n\n# endif /* !USE_PROC ... */\n# endif /* SUNOS */\n\n#if defined(LINUX) && defined(__ELF__) || defined(SCO_ELF) || \\\n    (defined(FREEBSD) && defined(__ELF__)) || defined(DGUX) || \\\n    (defined(NETBSD) && defined(__ELF__)) || defined(HURD)\n\n\n#ifdef USE_PROC_FOR_LIBRARIES\n\n#include <string.h>\n\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <unistd.h>\n\n#define MAPS_BUF_SIZE (32*1024)\n\nextern ssize_t GC_repeat_read(int fd, char *buf, size_t count);\n\t/* Repeatedly read until buffer is filled, or EOF is encountered */\n\t/* Defined in os_dep.c.  \t\t\t\t\t */\n\nchar *GC_parse_map_entry(char *buf_ptr, word *start, word *end,\n                         char *prot_buf, unsigned int *maj_dev);\nword GC_apply_to_maps(word (*fn)(char *));\n\t/* From os_dep.c\t*/\n\nword GC_register_map_entries(char *maps)\n{\n    char prot_buf[5];\n    char *buf_ptr = maps;\n    int count;\n    word start, end;\n    unsigned int maj_dev;\n    word least_ha, greatest_ha;\n    unsigned i;\n    word datastart = (word)(DATASTART);\n\n    /* Compute heap bounds. FIXME: Should be done by add_to_heap?\t*/\n\tleast_ha = (word)(-1);\n\tgreatest_ha = 0;\n\tfor (i = 0; i < GC_n_heap_sects; ++i) {\n\t    word sect_start = (word)GC_heap_sects[i].hs_start;\n\t    word sect_end = sect_start + GC_heap_sects[i].hs_bytes;\n\t    if (sect_start < least_ha) least_ha = sect_start;\n\t    if (sect_end > greatest_ha) greatest_ha = sect_end;\n        }\n    \tif (greatest_ha < (word)GC_scratch_last_end_ptr)\n\t    greatest_ha = (word)GC_scratch_last_end_ptr; \n\n    for (;;) {\n        buf_ptr = GC_parse_map_entry(buf_ptr, &start, &end, prot_buf, &maj_dev);\n\tif (buf_ptr == NULL) return 1;\n\tif (prot_buf[1] == 'w') {\n\t    /* This is a writable mapping.  Add it to\t\t*/\n\t    /* the root set unless it is already otherwise\t*/\n\t    /* accounted for.\t\t\t\t\t*/\n\t    if (start <= (word)GC_stackbottom && end >= (word)GC_stackbottom) {\n\t\t/* Stack mapping; discard\t*/\n\t\tcontinue;\n\t    }\n#\t    ifdef THREADS\n\t      if (GC_segment_is_thread_stack(start, end)) continue;\n#\t    endif\n\t    /* We no longer exclude the main data segment.\t\t*/\n\t    if (start < least_ha && end > least_ha) {\n\t\tend = least_ha;\n\t    }\n\t    if (start < greatest_ha && end > greatest_ha) {\n\t\tstart = greatest_ha;\n\t    }\n\t    if (start >= least_ha && end <= greatest_ha) continue;\n\t    GC_add_roots_inner((char *)start, (char *)end, TRUE);\n\t}\n    }\n    return 1;\n}\n\nvoid GC_register_dynamic_libraries()\n{\n   if (!GC_apply_to_maps(GC_register_map_entries))\n       ABORT(\"Failed to read /proc for library registration.\");\n}\n\n/* We now take care of the main data segment ourselves: */\nGC_bool GC_register_main_static_data()\n{\n  return FALSE;\n}\n\n# define HAVE_REGISTER_MAIN_STATIC_DATA\n\n#endif /* USE_PROC_FOR_LIBRARIES */\n\n#if !defined(USE_PROC_FOR_LIBRARIES)\n/* The following is the preferred way to walk dynamic libraries\t*/\n/* For glibc 2.2.4+.  Unfortunately, it doesn't work for older\t*/\n/* versions.  Thanks to Jakub Jelinek for most of the code.\t*/\n\n# if (defined(LINUX) || defined (__GLIBC__)) /* Are others OK here, too? */ \\\n     && (__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2) \\\n         || (__GLIBC__ == 2 && __GLIBC_MINOR__ == 2 && defined(DT_CONFIG))) \n\n/* We have the header files for a glibc that includes dl_iterate_phdr.\t*/\n/* It may still not be available in the library on the target system.   */\n/* Thus we also treat it as a weak symbol.\t\t\t\t*/\n#define HAVE_DL_ITERATE_PHDR\n#pragma weak dl_iterate_phdr\n#endif\n\n# if (defined(FREEBSD) && __FreeBSD__ >= 7)\n/* On the FreeBSD system, any target system at major version 7 shall    */\n/* have dl_iterate_phdr; therefore, we need not make it weak as above.  */\n#define HAVE_DL_ITERATE_PHDR\n#endif\n\n#if defined(HAVE_DL_ITERATE_PHDR)\n\nstatic int GC_register_dynlib_callback(info, size, ptr)\n     struct dl_phdr_info * info;\n     size_t size;\n     void * ptr;\n{\n  const ElfW(Phdr) * p;\n  char * start;\n  register int i;\n\n  /* Make sure struct dl_phdr_info is at least as big as we need.  */\n  if (size < offsetof (struct dl_phdr_info, dlpi_phnum)\n      + sizeof (info->dlpi_phnum))\n    return -1;\n\n  p = info->dlpi_phdr;\n  for( i = 0; i < (int)(info->dlpi_phnum); ((i++),(p++)) ) {\n    switch( p->p_type ) {\n      case PT_LOAD:\n\t{\n\t  if( !(p->p_flags & PF_W) ) break;\n\t  start = ((char *)(p->p_vaddr)) + info->dlpi_addr;\n\n\t  if (GC_has_static_roots \n\t      && !GC_has_static_roots(info->dlpi_name, start, p->p_memsz))\n\t    break;\n\n\t  GC_add_roots_inner(start, start + p->p_memsz, TRUE);\n\t}\n      break;\n      default:\n\tbreak;\n    }\n  }\n\n  * (int *)ptr = 1;\t/* Signal that we were called */\n  return 0;\n}     \n\n/* Return TRUE if we succeed, FALSE if dl_iterate_phdr wasn't there. */\n\nGC_bool GC_register_dynamic_libraries_dl_iterate_phdr()\n{\n  if (dl_iterate_phdr) {\n    int did_something = 0;\n    dl_iterate_phdr(GC_register_dynlib_callback, &did_something);\n    if (!did_something) {\n\t/* dl_iterate_phdr may forget the static data segment in\t*/\n\t/* statically linked executables.\t\t\t\t*/\n\tGC_add_roots_inner(DATASTART, (char *)(DATAEND), TRUE);\n#       if defined(DATASTART2)\n          GC_add_roots_inner(DATASTART2, (char *)(DATAEND2), TRUE);\n#       endif\n    }\n\n    return TRUE;\n  } else {\n    return FALSE;\n  }\n}\n\n/* Do we need to separately register the main static data segment? */\nGC_bool GC_register_main_static_data()\n{\n  return (dl_iterate_phdr == 0);\n}\n\n#define HAVE_REGISTER_MAIN_STATIC_DATA\n\n# else /* !LINUX || version(glibc) < 2.2.4 */\n\n/* Dynamic loading code for Linux running ELF. Somewhat tested on\n * Linux/x86, untested but hopefully should work on Linux/Alpha. \n * This code was derived from the Solaris/ELF support. Thanks to\n * whatever kind soul wrote that.  - Patrick Bridges */\n\n/* This doesn't necessarily work in all cases, e.g. with preloaded\n * dynamic libraries.\t\t\t\t\t\t*/\n\n#if defined(NETBSD)\n#  include <sys/exec_elf.h>\n/* for compatibility with 1.4.x */\n#  ifndef DT_DEBUG\n#  define DT_DEBUG     21\n#  endif\n#  ifndef PT_LOAD\n#  define PT_LOAD      1\n#  endif\n#  ifndef PF_W\n#  define PF_W         2\n#  endif\n#else\n#  include <elf.h>\n#endif\n#include <link.h>\n\n# endif\n\n#ifdef __GNUC__\n# pragma weak _DYNAMIC\n#endif\nextern ElfW(Dyn) _DYNAMIC[];\n\nstatic struct link_map *\nGC_FirstDLOpenedLinkMap()\n{\n    ElfW(Dyn) *dp;\n    static struct link_map *cachedResult = 0;\n\n    if( _DYNAMIC == 0) {\n        return(0);\n    }\n    if( cachedResult == 0 ) {\n        int tag;\n        for( dp = _DYNAMIC; (tag = dp->d_tag) != 0; dp++ ) {\n\t    /* FIXME: The DT_DEBUG header is not mandated by the\t*/\n\t    /* ELF spec.  This code appears to be dependent on\t\t*/\n\t    /* idiosynchracies of older GNU tool chains.  If this code\t*/\n\t    /* fails for you, the real problem is probably that it is\t*/\n\t    /* being used at all.  You should be getting the \t\t*/\n\t    /* dl_iterate_phdr version.\t\t\t\t\t*/\n            if( tag == DT_DEBUG ) {\n                struct link_map *lm\n                        = ((struct r_debug *)(dp->d_un.d_ptr))->r_map;\n                if( lm != 0 ) cachedResult = lm->l_next; /* might be NIL */\n                break;\n            }\n        }\n    }\n    return cachedResult;\n}\n\n\nvoid GC_register_dynamic_libraries()\n{\n  struct link_map *lm;\n  \n\n# ifdef HAVE_DL_ITERATE_PHDR\n    if (GC_register_dynamic_libraries_dl_iterate_phdr()) {\n\treturn;\n    }\n# endif\n  lm = GC_FirstDLOpenedLinkMap();\n  for (lm = GC_FirstDLOpenedLinkMap();\n       lm != (struct link_map *) 0;  lm = lm->l_next)\n    {\n\tElfW(Ehdr) * e;\n        ElfW(Phdr) * p;\n        unsigned long offset;\n        char * start;\n        register int i;\n        \n\te = (ElfW(Ehdr) *) lm->l_addr;\n        p = ((ElfW(Phdr) *)(((char *)(e)) + e->e_phoff));\n        offset = ((unsigned long)(lm->l_addr));\n        for( i = 0; i < (int)(e->e_phnum); ((i++),(p++)) ) {\n          switch( p->p_type ) {\n            case PT_LOAD:\n              {\n                if( !(p->p_flags & PF_W) ) break;\n                start = ((char *)(p->p_vaddr)) + offset;\n                GC_add_roots_inner(start, start + p->p_memsz, TRUE);\n              }\n              break;\n            default:\n              break;\n          }\n\t}\n    }\n}\n\n#endif /* !USE_PROC_FOR_LIBRARIES */\n\n#endif /* LINUX */\n\n#if defined(USE_PROC_FOR_LIBRARIES) && !defined(LINUX)\n\n#include <sys/procfs.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <elf.h>\n#include <errno.h>\n#include <signal.h>  /* Only for the following test. */\n#ifndef _sigargs\n# define IRIX6\n#endif\n\nextern void * GC_roots_present();\n\t/* The type is a lie, since the real type doesn't make sense here, */\n\t/* and we only test for NULL.\t\t\t\t\t   */\n\n\n/* We use /proc to track down all parts of the address space that are\t*/\n/* mapped by the process, and throw out regions we know we shouldn't\t*/\n/* worry about.  This may also work under other SVR4 variants.\t\t*/\nvoid GC_register_dynamic_libraries()\n{\n    static int fd = -1;\n    char buf[30];\n    static prmap_t * addr_map = 0;\n    static int current_sz = 0;\t/* Number of records currently in addr_map */\n    static int needed_sz;\t/* Required size of addr_map\t\t*/\n    register int i;\n    register long flags;\n    register ptr_t start;\n    register ptr_t limit;\n    ptr_t heap_start = (ptr_t)HEAP_START;\n    ptr_t heap_end = heap_start;\n\n#   ifdef SUNOS5DL\n#     define MA_PHYS 0\n#   endif /* SUNOS5DL */\n\n    if (fd < 0) {\n      sprintf(buf, \"/proc/%d\", getpid());\n\t/* The above generates a lint complaint, since pid_t varies.\t*/\n\t/* It's unclear how to improve this.\t\t\t\t*/\n      fd = open(buf, O_RDONLY);\n      if (fd < 0) {\n    \tABORT(\"/proc open failed\");\n      }\n    }\n    if (ioctl(fd, PIOCNMAP, &needed_sz) < 0) {\n\tGC_err_printf2(\"fd = %d, errno = %d\\n\", fd, errno);\n    \tABORT(\"/proc PIOCNMAP ioctl failed\");\n    }\n    if (needed_sz >= current_sz) {\n        current_sz = needed_sz * 2 + 1;\n        \t\t/* Expansion, plus room for 0 record */\n        addr_map = (prmap_t *)GC_scratch_alloc((word)\n\t\t\t\t\t\t(current_sz * sizeof(prmap_t)));\n    }\n    if (ioctl(fd, PIOCMAP, addr_map) < 0) {\n        GC_err_printf4(\"fd = %d, errno = %d, needed_sz = %d, addr_map = 0x%X\\n\",\n                        fd, errno, needed_sz, addr_map);\n    \tABORT(\"/proc PIOCMAP ioctl failed\");\n    };\n    if (GC_n_heap_sects > 0) {\n    \theap_end = GC_heap_sects[GC_n_heap_sects-1].hs_start\n    \t\t\t+ GC_heap_sects[GC_n_heap_sects-1].hs_bytes;\n    \tif (heap_end < GC_scratch_last_end_ptr) heap_end = GC_scratch_last_end_ptr; \n    }\n    for (i = 0; i < needed_sz; i++) {\n        flags = addr_map[i].pr_mflags;\n        if ((flags & (MA_BREAK | MA_STACK | MA_PHYS\n\t\t      | MA_FETCHOP | MA_NOTCACHED)) != 0) goto irrelevant;\n        if ((flags & (MA_READ | MA_WRITE)) != (MA_READ | MA_WRITE))\n            goto irrelevant;\n          /* The latter test is empirically useless in very old Irix\t*/\n\t  /* versions.  Other than the\t\t\t\t\t*/\n          /* main data and stack segments, everything appears to be\t*/\n          /* mapped readable, writable, executable, and shared(!!).\t*/\n          /* This makes no sense to me.\t- HB\t\t\t\t*/\n        start = (ptr_t)(addr_map[i].pr_vaddr);\n        if (GC_roots_present(start)) goto irrelevant;\n        if (start < heap_end && start >= heap_start)\n        \tgoto irrelevant;\n#\tifdef MMAP_STACKS\n\t  if (GC_is_thread_stack(start)) goto irrelevant;\n#\tendif /* MMAP_STACKS */\n\n        limit = start + addr_map[i].pr_size;\n\t/* The following seemed to be necessary for very old versions \t*/\n\t/* of Irix, but it has been reported to discard relevant\t*/\n\t/* segments under Irix 6.5.  \t\t\t\t\t*/\n#\tifndef IRIX6\n\t  if (addr_map[i].pr_off == 0 && strncmp(start, ELFMAG, 4) == 0) {\n\t    /* Discard text segments, i.e. 0-offset mappings against\t*/\n\t    /* executable files which appear to have ELF headers.\t*/\n\t    caddr_t arg;\n\t    int obj;\n#\t    define MAP_IRR_SZ 10\n\t    static ptr_t map_irr[MAP_IRR_SZ];\n\t    \t\t\t\t/* Known irrelevant map entries\t*/\n\t    static int n_irr = 0;\n\t    struct stat buf;\n\t    register int i;\n\t    \n\t    for (i = 0; i < n_irr; i++) {\n\t        if (map_irr[i] == start) goto irrelevant;\n\t    }\n\t    arg = (caddr_t)start;\n\t    obj = ioctl(fd, PIOCOPENM, &arg);\n\t    if (obj >= 0) {\n\t        fstat(obj, &buf);\n\t        close(obj);\n\t        if ((buf.st_mode & 0111) != 0) {\n\t            if (n_irr < MAP_IRR_SZ) {\n\t                map_irr[n_irr++] = start;\n\t            }\n\t            goto irrelevant;\n\t        }\n\t    }\n\t  }\n#\tendif /* !IRIX6 */\n        GC_add_roots_inner(start, limit, TRUE);\n      irrelevant: ;\n    }\n    /* Dont keep cached descriptor, for now.  Some kernels don't like us */\n    /* to keep a /proc file descriptor around during kill -9.\t\t */\n    \tif (close(fd) < 0) ABORT(\"Couldnt close /proc file\");\n\tfd = -1;\n}\n\n# endif /* USE_PROC */\n\n# if defined(MSWIN32) || defined(MSWINCE) || defined(CYGWIN32)\n\n# define WIN32_LEAN_AND_MEAN\n# define NOSERVICE\n# include <windows.h>\n# include <stdlib.h>\n\n  /* We traverse the entire address space and register all segments \t*/\n  /* that could possibly have been written to.\t\t\t\t*/\n  \n  extern GC_bool GC_is_heap_base (ptr_t p);\n\n# ifdef GC_WIN32_THREADS\n    extern void GC_get_next_stack(char *start, char **lo, char **hi);\n    void GC_cond_add_roots(char *base, char * limit)\n    {\n      char * curr_base = base;\n      char * next_stack_lo;\n      char * next_stack_hi;\n   \n      if (base == limit) return;\n      for(;;) {\n\t  GC_get_next_stack(curr_base, &next_stack_lo, &next_stack_hi);\n\t  if (next_stack_lo >= limit) break;\n\t  GC_add_roots_inner(curr_base, next_stack_lo, TRUE);\n\t  curr_base = next_stack_hi;\n      }\n      if (curr_base < limit) GC_add_roots_inner(curr_base, limit, TRUE);\n    }\n# else\n    void GC_cond_add_roots(char *base, char * limit)\n    {\n      char dummy;\n      char * stack_top\n\t = (char *) ((word)(&dummy) & ~(GC_sysinfo.dwAllocationGranularity-1));\n      if (base == limit) return;\n      if (limit > stack_top && base < GC_stackbottom) {\n    \t  /* Part of the stack; ignore it. */\n    \t  return;\n      }\n      GC_add_roots_inner(base, limit, TRUE);\n    }\n# endif\n\n# if defined(MSWINCE) || defined(CYGWIN32)\n  /* Do we need to separately register the main static data segment? */\n  GC_bool GC_register_main_static_data()\n  {\n    return FALSE;\n  }\n# else /* win32 */\n  extern GC_bool GC_no_win32_dlls;\n\n  GC_bool GC_register_main_static_data()\n  {\n    return GC_no_win32_dlls;\n  }\n# endif /* win32 */\n  \n# define HAVE_REGISTER_MAIN_STATIC_DATA\n\n  /* The frame buffer testing code is dead in this version.\t*/\n  /* We leave it here temporarily in case the switch to just \t*/\n  /* testing for MEM_IMAGE sections causes un expected \t\t*/\n  /* problems.\t\t\t\t\t\t\t*/\n  GC_bool GC_warn_fb = TRUE;\t/* Warn about traced likely \t*/\n  \t\t\t\t/* graphics memory.\t\t*/\n  GC_bool GC_disallow_ignore_fb = FALSE;\n  int GC_ignore_fb_mb;\t/* Ignore mappings bigger than the \t*/\n  \t\t\t/* specified number of MB.\t\t*/\n  GC_bool GC_ignore_fb = FALSE; /* Enable frame buffer \t*/\n  \t\t\t\t/* checking.\t\t*/\n  \n  /* Issue warning if tracing apparent framebuffer. \t\t*/\n  /* This limits us to one warning, and it's a back door to\t*/\n  /* disable that.\t\t\t\t\t\t*/\n \n  /* Should [start, start+len) be treated as a frame buffer\t*/\n  /* and ignored?\t\t\t\t\t\t*/\n  /* Unfortunately, we currently are not quite sure how to tell\t*/\n  /* this automatically, and rely largely on user input.\t*/\n  /* We expect that any mapping with type MEM_MAPPED (which \t*/\n  /* apparently excludes library data sections) can be safely\t*/\n  /* ignored.  But we're too chicken to do that in this \t*/\n  /* version.\t\t\t\t\t\t\t*/\n  /* Based on a very limited sample, it appears that:\t\t*/\n  /* \t- Frame buffer mappings appear as mappings of large\t*/\n  /*\t  length, usually a bit less than a power of two.\t*/\n  /*\t- The definition of \"a bit less\" in the above cannot\t*/\n  /*\t  be made more precise.\t\t\t\t\t*/\n  /*\t- Have a starting address at best 64K aligned.\t\t*/\n  /*\t- Have type == MEM_MAPPED.\t\t\t\t*/\n  static GC_bool is_frame_buffer(ptr_t start, size_t len, DWORD tp)\n  {\n    static GC_bool initialized = FALSE;\n#   define MB (1024*1024)\n#   define DEFAULT_FB_MB 15\n#   define MIN_FB_MB 3\n\n    if (GC_disallow_ignore_fb || tp != MEM_MAPPED) return FALSE;\n    if (!initialized) {\n      char * ignore_fb_string =  GETENV(\"GC_IGNORE_FB\");\n\n      if (0 != ignore_fb_string) {\n\twhile (*ignore_fb_string == ' ' || *ignore_fb_string == '\\t')\n\t  ++ignore_fb_string;\n\tif (*ignore_fb_string == '\\0') {\n\t  GC_ignore_fb_mb = DEFAULT_FB_MB;\n\t} else {\n\t  GC_ignore_fb_mb = atoi(ignore_fb_string);\n\t  if (GC_ignore_fb_mb < MIN_FB_MB) {\n\t    WARN(\"Bad GC_IGNORE_FB value.  Using %ld\\n\", DEFAULT_FB_MB);\n\t    GC_ignore_fb_mb = DEFAULT_FB_MB;\n\t  }\n\t}\n\tGC_ignore_fb = TRUE;\n      } else {\n\tGC_ignore_fb_mb = DEFAULT_FB_MB;  /* For warning */\n      }\n      initialized = TRUE;\n    }\n    if (len >= ((size_t)GC_ignore_fb_mb << 20)) {\n      if (GC_ignore_fb) {\n\treturn TRUE;\n      } else {\n\tif (GC_warn_fb) {\n\t  WARN(\"Possible frame buffer mapping at 0x%lx: \\n\"\n\t       \"\\tConsider setting GC_IGNORE_FB to improve performance.\\n\",\n\t       start);\n\t  GC_warn_fb = FALSE;\n\t}\n\treturn FALSE;\n      }\n    } else {\n      return FALSE;\n    }\n  }\n\n# ifdef DEBUG_VIRTUALQUERY\n  void GC_dump_meminfo(MEMORY_BASIC_INFORMATION *buf)\n  {\n    GC_printf4(\"BaseAddress = %lx, AllocationBase = %lx, RegionSize = %lx(%lu)\\n\",\n\t       buf -> BaseAddress, buf -> AllocationBase, buf -> RegionSize,\n\t       buf -> RegionSize);\n    GC_printf4(\"\\tAllocationProtect = %lx, State = %lx, Protect = %lx, \"\n\t       \"Type = %lx\\n\",\n\t       buf -> AllocationProtect, buf -> State, buf -> Protect,\n\t       buf -> Type);\n  }\n# endif /* DEBUG_VIRTUALQUERY */\n\n# ifdef CYGWIN32\n#   define GC_wnt (TRUE)\n# else\n    extern GC_bool GC_wnt;  /* Is Windows NT derivative.\t*/\n  \t\t\t    /* Defined and set in os_dep.c.\t*/\n# endif\n\n  void GC_register_dynamic_libraries()\n  {\n    MEMORY_BASIC_INFORMATION buf;\n    DWORD result;\n    DWORD protect;\n    LPVOID p;\n    char * base;\n    char * limit, * new_limit;\n\n#   ifdef MSWIN32\n      if (GC_no_win32_dlls) return;\n#   endif\n    base = limit = p = GC_sysinfo.lpMinimumApplicationAddress;\n#   if defined(MSWINCE) && !defined(_WIN32_WCE_EMULATION)\n    /* Only the first 32 MB of address space belongs to the current process */\n    while (p < (LPVOID)0x02000000) {\n        result = VirtualQuery(p, &buf, sizeof(buf));\n\tif (result == 0) {\n\t    /* Page is free; advance to the next possible allocation base */\n\t    new_limit = (char *)\n\t\t(((DWORD) p + GC_sysinfo.dwAllocationGranularity)\n\t\t & ~(GC_sysinfo.dwAllocationGranularity-1));\n\t} else\n#   else\n    while (p < GC_sysinfo.lpMaximumApplicationAddress) {\n        result = VirtualQuery(p, &buf, sizeof(buf));\n#   endif\n\t{\n\t    if (result != sizeof(buf)) {\n\t\tABORT(\"Weird VirtualQuery result\");\n\t    }\n\t    new_limit = (char *)p + buf.RegionSize;\n\t    protect = buf.Protect;\n\t    if (buf.State == MEM_COMMIT\n\t\t&& (protect == PAGE_EXECUTE_READWRITE\n\t\t    || protect == PAGE_READWRITE)\n\t\t&& !GC_is_heap_base(buf.AllocationBase)\n\t\t/* This used to check for\n\t\t * !is_frame_buffer(p, buf.RegionSize, buf.Type)\n\t\t * instead of just checking for MEM_IMAGE.\n\t\t * If something breaks, change it back. */\n\t\t/* There is some evidence that we cannot always\n\t\t * ignore MEM_PRIVATE sections under Windows ME\n\t\t * and predecessors.  Hence we now also check for\n\t\t * that case.\t*/\n\t\t&& (buf.Type == MEM_IMAGE ||\n\t\t    !GC_wnt && buf.Type == MEM_PRIVATE)) {  \n#\t        ifdef DEBUG_VIRTUALQUERY\n\t          GC_dump_meminfo(&buf);\n#\t        endif\n\t\tif ((char *)p != limit) {\n\t\t    GC_cond_add_roots(base, limit);\n\t\t    base = p;\n\t\t}\n\t\tlimit = new_limit;\n\t    }\n\t}\n        if (p > (LPVOID)new_limit /* overflow */) break;\n        p = (LPVOID)new_limit;\n    }\n    GC_cond_add_roots(base, limit);\n  }\n\n#endif /* MSWIN32 || MSWINCE || CYGWIN32 */\n  \n#if defined(ALPHA) && defined(OSF1)\n\n#include <loader.h>\n\nvoid GC_register_dynamic_libraries()\n{\n  int status;\n  ldr_process_t mypid;\n\n  /* module */\n    ldr_module_t moduleid = LDR_NULL_MODULE;\n    ldr_module_info_t moduleinfo;\n    size_t moduleinfosize = sizeof(moduleinfo);\n    size_t modulereturnsize;    \n\n  /* region */\n    ldr_region_t region; \n    ldr_region_info_t regioninfo;\n    size_t regioninfosize = sizeof(regioninfo);\n    size_t regionreturnsize;\n\n  /* Obtain id of this process */\n    mypid = ldr_my_process();\n  \n  /* For each module */\n    while (TRUE) {\n\n      /* Get the next (first) module */\n        status = ldr_next_module(mypid, &moduleid);\n\n      /* Any more modules? */\n        if (moduleid == LDR_NULL_MODULE)\n            break;    /* No more modules */\n\n      /* Check status AFTER checking moduleid because */\n      /* of a bug in the non-shared ldr_next_module stub */\n        if (status != 0 ) {\n            GC_printf1(\"dynamic_load: status = %ld\\n\", (long)status);\n            {\n                extern char *sys_errlist[];\n                extern int sys_nerr;\n                extern int errno;\n                if (errno <= sys_nerr) {\n                    GC_printf1(\"dynamic_load: %s\\n\", (long)sys_errlist[errno]);\n               } else {\n                    GC_printf1(\"dynamic_load: %d\\n\", (long)errno);\n                }\n        }\n            ABORT(\"ldr_next_module failed\");\n         }\n\n      /* Get the module information */\n        status = ldr_inq_module(mypid, moduleid, &moduleinfo,\n                                moduleinfosize, &modulereturnsize); \n        if (status != 0 )\n            ABORT(\"ldr_inq_module failed\");\n\n      /* is module for the main program (i.e. nonshared portion)? */\n          if (moduleinfo.lmi_flags & LDR_MAIN)\n              continue;    /* skip the main module */\n\n#     ifdef VERBOSE\n          GC_printf(\"---Module---\\n\");\n          GC_printf(\"Module ID            = %16ld\\n\", moduleinfo.lmi_modid);\n          GC_printf(\"Count of regions     = %16d\\n\", moduleinfo.lmi_nregion);\n          GC_printf(\"flags for module     = %16lx\\n\", moduleinfo.lmi_flags); \n          GC_printf(\"pathname of module   = \\\"%s\\\"\\n\", moduleinfo.lmi_name);\n#     endif\n\n      /* For each region in this module */\n        for (region = 0; region < moduleinfo.lmi_nregion; region++) {\n\n          /* Get the region information */\n            status = ldr_inq_region(mypid, moduleid, region, &regioninfo,\n                                    regioninfosize, &regionreturnsize);\n            if (status != 0 )\n                ABORT(\"ldr_inq_region failed\");\n\n          /* only process writable (data) regions */\n            if (! (regioninfo.lri_prot & LDR_W))\n                continue;\n\n#         ifdef VERBOSE\n              GC_printf(\"--- Region ---\\n\");\n              GC_printf(\"Region number    = %16ld\\n\",\n              \t        regioninfo.lri_region_no);\n              GC_printf(\"Protection flags = %016x\\n\",  regioninfo.lri_prot);\n              GC_printf(\"Virtual address  = %16p\\n\",   regioninfo.lri_vaddr);\n              GC_printf(\"Mapped address   = %16p\\n\",   regioninfo.lri_mapaddr);\n              GC_printf(\"Region size      = %16ld\\n\",  regioninfo.lri_size);\n              GC_printf(\"Region name      = \\\"%s\\\"\\n\", regioninfo.lri_name);\n#         endif\n\n          /* register region as a garbage collection root */\n            GC_add_roots_inner (\n                (char *)regioninfo.lri_mapaddr,\n                (char *)regioninfo.lri_mapaddr + regioninfo.lri_size,\n                TRUE);\n\n        }\n    }\n}\n#endif\n\n#if defined(HPUX)\n\n#include <errno.h>\n#include <dl.h>\n\nextern int errno;\nextern char *sys_errlist[];\nextern int sys_nerr;\n\nvoid GC_register_dynamic_libraries()\n{\n  int status;\n  int index = 1; /* Ordinal position in shared library search list */\n  struct shl_descriptor *shl_desc; /* Shared library info, see dl.h */\n\n  /* For each dynamic library loaded */\n    while (TRUE) {\n\n      /* Get info about next shared library */\n        status = shl_get(index, &shl_desc);\n\n      /* Check if this is the end of the list or if some error occured */\n        if (status != 0) {\n#\t ifdef GC_HPUX_THREADS\n\t   /* I've seen errno values of 0.  The man page is not clear\t*/\n\t   /* as to whether errno should get set on a -1 return.\t*/\n\t   break;\n#\t else\n          if (errno == EINVAL) {\n              break; /* Moved past end of shared library list --> finished */\n          } else {\n              if (errno <= sys_nerr) {\n                    GC_printf1(\"dynamic_load: %s\\n\", (long) sys_errlist[errno]);\n              } else {\n                    GC_printf1(\"dynamic_load: %d\\n\", (long) errno);\n\t      }\n              ABORT(\"shl_get failed\");\n          }\n#\t endif\n        }\n\n#     ifdef VERBOSE\n          GC_printf0(\"---Shared library---\\n\");\n          GC_printf1(\"\\tfilename        = \\\"%s\\\"\\n\", shl_desc->filename);\n          GC_printf1(\"\\tindex           = %d\\n\", index);\n          GC_printf1(\"\\thandle          = %08x\\n\",\n\t\t\t\t\t(unsigned long) shl_desc->handle);\n          GC_printf1(\"\\ttext seg. start = %08x\\n\", shl_desc->tstart);\n          GC_printf1(\"\\ttext seg. end   = %08x\\n\", shl_desc->tend);\n          GC_printf1(\"\\tdata seg. start = %08x\\n\", shl_desc->dstart);\n          GC_printf1(\"\\tdata seg. end   = %08x\\n\", shl_desc->dend);\n          GC_printf1(\"\\tref. count      = %lu\\n\", shl_desc->ref_count);\n#     endif\n\n      /* register shared library's data segment as a garbage collection root */\n        GC_add_roots_inner((char *) shl_desc->dstart,\n\t\t\t   (char *) shl_desc->dend, TRUE);\n\n        index++;\n    }\n}\n#endif /* HPUX */\n\n#ifdef RS6000\n#pragma alloca\n#include <sys/ldr.h>\n#include <sys/errno.h>\nvoid GC_register_dynamic_libraries()\n{\n\tint len;\n\tchar *ldibuf;\n\tint ldibuflen;\n\tstruct ld_info *ldi;\n\n\tldibuf = alloca(ldibuflen = 8192);\n\n\twhile ( (len = loadquery(L_GETINFO,ldibuf,ldibuflen)) < 0) {\n\t\tif (errno != ENOMEM) {\n\t\t\tABORT(\"loadquery failed\");\n\t\t}\n\t\tldibuf = alloca(ldibuflen *= 2);\n\t}\n\n\tldi = (struct ld_info *)ldibuf;\n\twhile (ldi) {\n\t\tlen = ldi->ldinfo_next;\n\t\tGC_add_roots_inner(\n\t\t\t\tldi->ldinfo_dataorg,\n\t\t\t\t(ptr_t)(unsigned long)ldi->ldinfo_dataorg\n\t\t\t        + ldi->ldinfo_datasize,\n\t\t\t\tTRUE);\n\t\tldi = len ? (struct ld_info *)((char *)ldi + len) : 0;\n\t}\n}\n#endif /* RS6000 */\n\n#ifdef DARWIN\n\n/* __private_extern__ hack required for pre-3.4 gcc versions.\t*/\n#ifndef __private_extern__\n# define __private_extern__ extern\n# include <mach-o/dyld.h>\n# undef __private_extern__\n#else\n# include <mach-o/dyld.h>\n#endif\n#include <mach-o/getsect.h>\n\n/*#define DARWIN_DEBUG*/\n\n/* Writeable sections generally available on Darwin.  */\nconst static struct { \n        const char *seg;\n        const char *sect;\n} GC_dyld_sections[] = {\n        { SEG_DATA, SECT_DATA },\n        /* Used by FSF GCC, but not by OSX system tools, so far.  */\n        { SEG_DATA, \"__static_data\" }, \n        { SEG_DATA, SECT_BSS },\n        { SEG_DATA, SECT_COMMON },\n        /* FSF GCC - zero-sized object sections for targets supporting section\n           anchors.  */\n        { SEG_DATA, \"__zobj_data\" },\n        { SEG_DATA, \"__zobj_bss\" }\n};\n\n/* Additional writeable sections:\n\n   GCC on Darwin constucts aligned sections \"on demand\", where the alignment\n   size is embedded in the section name.  Furthermore, there are distintions\n   between sections containing private vs. public symbols.\n\n   It also constructs sections specifically for zero-sized objects, when the\n   target supports section anchors.  */\nconst char * GC_dyld_add_sect_fmts[] = \n{\n  \"__bss%u\",\n  \"__pu_bss%u\",\n  \"__zo_bss%u\",\n  \"__zo_pu_bss%u\",\n  NULL\n} ;\n\n/* Currently, mach-o will allow up to a max of 2^15 alignment in an\n   object file.  */\n#define L2_MAX_OFILE_ALIGNMENT 15\n\n  \n#ifdef DARWIN_DEBUG\nstatic const char *\nGC_dyld_name_for_hdr (const struct GC_MACH_HEADER *hdr)\n{\n  unsigned long i,c;\n  c = _dyld_image_count();\n  for (i=0;i<c;i++) \n    if(_dyld_get_image_header(i) == hdr)\n      return _dyld_get_image_name(i);\n  return NULL;\n}\n#endif\n\n\n/* This should never be called by a thread holding the lock */\nstatic void \nGC_dyld_image_add (const struct GC_MACH_HEADER *hdr, intptr_t slide)\n{\n  char secnam[16];\n  unsigned long start,end,i,j;\n  const struct GC_MACH_SECTION *sec;\n  const char *fmt;\n\n  if (GC_no_dls)\n    return;\n\n  for (i=0; i<sizeof(GC_dyld_sections)/sizeof(GC_dyld_sections[0]); i++)\n    {\n      sec = GC_GETSECTBYNAME (hdr, GC_dyld_sections[i].seg,\n\t\t\t      GC_dyld_sections[i].sect);\n      if(sec == NULL || sec->size == 0)\n\tcontinue;\n\n      start = slide + sec->addr;\n      end = start + sec->size;\n\n#     ifdef DARWIN_DEBUG\n      GC_printf5(\"Adding section __DATA,%s at %p-%p (%lu bytes) from image %s\\n\",\n                GC_dyld_sections[i].sect, start,end,sec->size,GC_dyld_name_for_hdr(hdr));\n#      endif\n      GC_add_roots((char*)start,(char*)end);\n    }\n\n  /* Sections constructed on demand.  */\n  j=0;\n  while ((fmt = GC_dyld_add_sect_fmts[j]) != NULL)\n    {\n      /* Add our manufactured aligned BSS sections.  */\n      for (i=0; i<=L2_MAX_OFILE_ALIGNMENT; i++)\n\t{\n\t  snprintf (secnam, 16, fmt, (unsigned)i);\n\t  sec = GC_GETSECTBYNAME (hdr, SEG_DATA, secnam);\n\t  if (sec == NULL || sec->size == 0)\n\t    continue;\n\t  start = slide + sec->addr;\n\t  end = start + sec->size;\n#\t  ifdef DARWIN_DEBUG\n\t  GC_printf5(\"Adding section __DATA,%s at %p-%p (%lu bytes) from image %s\\n\",\n\t\t secnam, start,end,sec->size,GC_dyld_name_for_hdr(hdr));\n#\t  endif\n\t  GC_add_roots((char*)start,(char*)end);\n\t}\n      j++;\n    } \n# ifdef DARWIN_DEBUG\n  GC_print_static_roots();\n# endif\n}\n\n/* This should never be called by a thread holding the lock */\nstatic void \nGC_dyld_image_remove (const struct GC_MACH_HEADER *hdr, intptr_t slide)\n{\n  char secnam[16];\n  unsigned long start,end,i,j;\n  const struct GC_MACH_SECTION *sec;\n  const char *fmt;\n\n  for (i=0; i<sizeof(GC_dyld_sections)/sizeof(GC_dyld_sections[0]); i++)\n    {\n      sec = GC_GETSECTBYNAME (hdr, GC_dyld_sections[i].seg,\n\t\t\t      GC_dyld_sections[i].sect);\n      if(sec == NULL || sec->size == 0)\n\tcontinue;\n\n      start = slide + sec->addr;\n      end = start + sec->size;\n#     ifdef DARWIN_DEBUG\n      GC_printf5(\"Removing section __DATA,%s at %p-%p (%lu bytes) from image %s\\n\",\n                  GC_dyld_sections[i].sect, start,end,sec->size,GC_dyld_name_for_hdr(hdr));\n#      endif\n      GC_remove_roots((char*)start,(char*)end);\n    }\n\n  /* Remove our on-demand sections.  */\n  j=0;\n  while ((fmt = GC_dyld_add_sect_fmts[j]) != NULL)\n    {\n      for (i=0; i<=L2_MAX_OFILE_ALIGNMENT; i++)\n\t{\n\t  snprintf (secnam, 16, fmt, (unsigned)i);\n\t  sec = GC_GETSECTBYNAME (hdr, SEG_DATA, secnam);\n\t  if (sec == NULL || sec->size == 0)\n\t    continue;\n\t  start = slide + sec->addr;\n\t  end = start + sec->size;\n#\t  ifdef DARWIN_DEBUG\n\t  GC_printf5(\"Removing section __DATA,%s at %p-%p (%lu bytes) from image %s\\n\",\n\t\t      secnam, start,end,sec->size,GC_dyld_name_for_hdr(hdr));\n#\t  endif\n\t  GC_remove_roots((char*)start,(char*)end);\n\t}\n      j++;\n    }\n\n# ifdef DARWIN_DEBUG\n  GC_print_static_roots();\n# endif\n}\n\nvoid \nGC_register_dynamic_libraries() \n{\n    /* Currently does nothing. The callbacks are setup by GC_init_dyld() \n    The dyld library takes it from there. */\n}\n\n/* The _dyld_* functions have an internal lock so no _dyld functions\n   can be called while the world is stopped without the risk of a deadlock.\n   Because of this we MUST setup callbacks BEFORE we ever stop the world.\n   This should be called BEFORE any thread in created and WITHOUT the\n   allocation lock held. */\n   \nvoid \nGC_init_dyld()\n{\n  static GC_bool initialized = FALSE;\n  char *bind_fully_env = NULL;\n  \n  if(initialized)\n    return;\n  \n# ifdef DARWIN_DEBUG\n  GC_printf0(\"Registering dyld callbacks...\\n\");\n# endif\n  \n  /* Apple's Documentation:\n     When you call _dyld_register_func_for_add_image, the dynamic linker runtime\n     calls the specified callback (func) once for each of the images that is\n     currently loaded into the program. When a new image is added to the program,\n     your callback is called again with the mach_header for the new image, and the \t\n     virtual memory slide amount of the new image. \n     \n     This WILL properly register already linked libraries and libraries \n     linked in the future\n  */\n  \n  _dyld_register_func_for_add_image(GC_dyld_image_add);\n  _dyld_register_func_for_remove_image(GC_dyld_image_remove);\n\n  /* Set this early to avoid reentrancy issues. */\n  initialized = TRUE;\n\n  bind_fully_env = getenv(\"DYLD_BIND_AT_LAUNCH\");\n    \n  if (bind_fully_env == NULL)\n    {\n#     ifdef DARWIN_DEBUG\n      GC_printf0(\"Forcing full bind of GC code...\\n\");\n#     endif\n      \n      if (!_dyld_bind_fully_image_containing_address((unsigned long*)GC_malloc))\n\tGC_abort(\"_dyld_bind_fully_image_containing_address failed\");\n    }\n}\n\n#define HAVE_REGISTER_MAIN_STATIC_DATA\nGC_bool \nGC_register_main_static_data (void)\n{\n  /* Already done through dyld callbacks */\n  return FALSE;\n}\n\n#endif /* DARWIN */\n\n#else /* !DYNAMIC_LOADING */\n\n#ifdef PCR\n\n#   include \"il/PCR_IL.h\"\n#   include \"th/PCR_ThCtl.h\"\n#   include \"mm/PCR_MM.h\"\n\nvoid GC_register_dynamic_libraries()\n{\n    /* Add new static data areas of dynamically loaded modules.\t*/\n        {\n          PCR_IL_LoadedFile * p = PCR_IL_GetLastLoadedFile();\n          PCR_IL_LoadedSegment * q;\n          \n          /* Skip uncommited files */\n          while (p != NIL && !(p -> lf_commitPoint)) {\n              /* The loading of this file has not yet been committed\t*/\n              /* Hence its description could be inconsistent.  \t\t*/\n              /* Furthermore, it hasn't yet been run.  Hence its data\t*/\n              /* segments can't possibly reference heap allocated\t*/\n              /* objects.\t\t\t\t\t\t*/\n              p = p -> lf_prev;\n          }\n          for (; p != NIL; p = p -> lf_prev) {\n            for (q = p -> lf_ls; q != NIL; q = q -> ls_next) {\n              if ((q -> ls_flags & PCR_IL_SegFlags_Traced_MASK)\n                  == PCR_IL_SegFlags_Traced_on) {\n                GC_add_roots_inner\n                \t((char *)(q -> ls_addr), \n                \t (char *)(q -> ls_addr) + q -> ls_bytes,\n                \t TRUE);\n              }\n            }\n          }\n        }\n}\n\n\n#else /* !PCR */\n\nvoid GC_register_dynamic_libraries(){}\n\nint GC_no_dynamic_loading;\n\n#endif /* !PCR */\n\n#endif /* !DYNAMIC_LOADING */\n\n#ifndef HAVE_REGISTER_MAIN_STATIC_DATA\n\n/* Do we need to separately register the main static data segment? */\nGC_bool GC_register_main_static_data()\n{\n  return TRUE;\n}\n#endif /* HAVE_REGISTER_MAIN_STATIC_DATA */\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/config/libtool.m4": "# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-\n#\n#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,\n#                 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\nm4_define([_LT_COPYING], [dnl\n#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,\n#                 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from http://www.gnu.org/licenses/gpl.html, or\n# obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n])\n\n# serial 56 LT_INIT\n\n\n# LT_PREREQ(VERSION)\n# ------------------\n# Complain and exit if this libtool version is less that VERSION.\nm4_defun([LT_PREREQ],\n[m4_if(m4_version_compare(m4_defn([LT_PACKAGE_VERSION]), [$1]), -1,\n       [m4_default([$3],\n\t\t   [m4_fatal([Libtool version $1 or higher is required],\n\t\t             63)])],\n       [$2])])\n\n\n# _LT_CHECK_BUILDDIR\n# ------------------\n# Complain if the absolute build directory name contains unusual characters\nm4_defun([_LT_CHECK_BUILDDIR],\n[case `pwd` in\n  *\\ * | *\\\t*)\n    AC_MSG_WARN([Libtool does not cope well with whitespace in `pwd`]) ;;\nesac\n])\n\n\n# LT_INIT([OPTIONS])\n# ------------------\nAC_DEFUN([LT_INIT],\n[AC_PREREQ([2.58])dnl We use AC_INCLUDES_DEFAULT\nAC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl\nAC_BEFORE([$0], [LT_LANG])dnl\nAC_BEFORE([$0], [LT_OUTPUT])dnl\nAC_BEFORE([$0], [LTDL_INIT])dnl\nm4_require([_LT_CHECK_BUILDDIR])dnl\n\ndnl Autoconf doesn't catch unexpanded LT_ macros by default:\nm4_pattern_forbid([^_?LT_[A-Z_]+$])dnl\nm4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl\ndnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4\ndnl unless we require an AC_DEFUNed macro:\nAC_REQUIRE([LTOPTIONS_VERSION])dnl\nAC_REQUIRE([LTSUGAR_VERSION])dnl\nAC_REQUIRE([LTVERSION_VERSION])dnl\nAC_REQUIRE([LTOBSOLETE_VERSION])dnl\nm4_require([_LT_PROG_LTMAIN])dnl\n\n_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])\n\ndnl Parse OPTIONS\n_LT_SET_OPTIONS([$0], [$1])\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=\"$ltmain\"\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\nAC_SUBST(LIBTOOL)dnl\n\n_LT_SETUP\n\n# Only expand once:\nm4_define([LT_INIT])\n])# LT_INIT\n\n# Old names:\nAU_ALIAS([AC_PROG_LIBTOOL], [LT_INIT])\nAU_ALIAS([AM_PROG_LIBTOOL], [LT_INIT])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PROG_LIBTOOL], [])\ndnl AC_DEFUN([AM_PROG_LIBTOOL], [])\n\n\n# _LT_CC_BASENAME(CC)\n# -------------------\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nm4_defun([_LT_CC_BASENAME],\n[for cc_temp in $1\"\"; do\n  case $cc_temp in\n    compile | *[[\\\\/]]compile | ccache | *[[\\\\/]]ccache ) ;;\n    distcc | *[[\\\\/]]distcc | purify | *[[\\\\/]]purify ) ;;\n    \\-*) ;;\n    *) break;;\n  esac\ndone\ncc_basename=`$ECHO \"$cc_temp\" | $SED \"s%.*/%%; s%^$host_alias-%%\"`\n])\n\n\n# _LT_FILEUTILS_DEFAULTS\n# ----------------------\n# It is okay to use these file commands and assume they have been set\n# sensibly after `m4_require([_LT_FILEUTILS_DEFAULTS])'.\nm4_defun([_LT_FILEUTILS_DEFAULTS],\n[: ${CP=\"cp -f\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n])# _LT_FILEUTILS_DEFAULTS\n\n\n# _LT_SETUP\n# ---------\nm4_defun([_LT_SETUP],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_REQUIRE([_LT_PREPARE_SED_QUOTE_VARS])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\n\n_LT_DECL([], [host_alias], [0], [The host system])dnl\n_LT_DECL([], [host], [0])dnl\n_LT_DECL([], [host_os], [0])dnl\ndnl\n_LT_DECL([], [build_alias], [0], [The build system])dnl\n_LT_DECL([], [build], [0])dnl\n_LT_DECL([], [build_os], [0])dnl\ndnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\ndnl\nAC_REQUIRE([AC_PROG_LN_S])dnl\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\n_LT_DECL([], [LN_S], [1], [Whether we need soft or hard links])dnl\ndnl\nAC_REQUIRE([LT_CMD_MAX_LEN])dnl\n_LT_DECL([objext], [ac_objext], [0], [Object file suffix (normally \"o\")])dnl\n_LT_DECL([], [exeext], [0], [Executable file suffix (normally \"\")])dnl\ndnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_CMD_RELOAD])dnl\nm4_require([_LT_CHECK_MAGIC_METHOD])dnl\nm4_require([_LT_CMD_OLD_ARCHIVE])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\n\n_LT_CONFIG_LIBTOOL_INIT([\n# See if we are running on zsh, and set the options which allow our\n# commands through without removal of \\ escapes INIT.\nif test -n \"\\${ZSH_VERSION+set}\" ; then\n   setopt NO_GLOB_SUBST\nfi\n])\nif test -n \"${ZSH_VERSION+set}\" ; then\n   setopt NO_GLOB_SUBST\nfi\n\n_LT_CHECK_OBJDIR\n\nm4_require([_LT_TAG_COMPILER])dnl\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test \"X${COLLECT_NAMES+set}\" != Xset; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Global variables:\nofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a `.a' archive for static linking (except MSVC,\n# which needs '.lib').\nlibext=a\n\nwith_gnu_ld=\"$lt_cv_prog_gnu_ld\"\n\nold_CC=\"$CC\"\nold_CFLAGS=\"$CFLAGS\"\n\n# Set sane defaults for various variables\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$LTCFLAGS\" && LTCFLAGS=$CFLAGS\ntest -z \"$LD\" && LD=ld\ntest -z \"$ac_objext\" && ac_objext=o\n\n_LT_CC_BASENAME([$compiler])\n\n# Only perform the check for file, if the check method requires it\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    _LT_PATH_MAGIC\n  fi\n  ;;\nesac\n\n# Use C for the default configuration in the libtool script\nLT_SUPPORTED_TAG([CC])\n_LT_LANG_C_CONFIG\n_LT_LANG_DEFAULT_CONFIG\n_LT_CONFIG_COMMANDS\n])# _LT_SETUP\n\n\n# _LT_PREPARE_SED_QUOTE_VARS\n# --------------------------\n# Define a few sed substitution that help us do robust quoting.\nm4_defun([_LT_PREPARE_SED_QUOTE_VARS],\n[# Backslashify metacharacters that are still active within\n# double-quoted strings.\nsed_quote_subst='s/\\([[\"`$\\\\]]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([[\"`\\\\]]\\)/\\\\\\1/g'\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to delay expansion of an escaped single quote.\ndelay_single_quote_subst='s/'\\''/'\\'\\\\\\\\\\\\\\'\\''/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n])\n\n# _LT_PROG_LTMAIN\n# ---------------\n# Note that this code is called both from `configure', and `config.status'\n# now that we use AC_CONFIG_COMMANDS to generate libtool.  Notably,\n# `config.status' has no value for ac_aux_dir unless we are using Automake,\n# so we pass a copy along to make sure it has a sensible value anyway.\nm4_defun([_LT_PROG_LTMAIN],\n[m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([ltmain.sh])])dnl\n_LT_CONFIG_LIBTOOL_INIT([ac_aux_dir='$ac_aux_dir'])\nltmain=\"$ac_aux_dir/ltmain.sh\"\n])# _LT_PROG_LTMAIN\n\n\n## ------------------------------------- ##\n## Accumulate code for creating libtool. ##\n## ------------------------------------- ##\n\n# So that we can recreate a full libtool script including additional\n# tags, we accumulate the chunks of code to send to AC_CONFIG_COMMANDS\n# in macros and then make a single call at the end using the `libtool'\n# label.\n\n\n# _LT_CONFIG_LIBTOOL_INIT([INIT-COMMANDS])\n# ----------------------------------------\n# Register INIT-COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL_INIT],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_INIT],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_INIT])\n\n\n# _LT_CONFIG_LIBTOOL([COMMANDS])\n# ------------------------------\n# Register COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_COMMANDS],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS])\n\n\n# _LT_CONFIG_SAVE_COMMANDS([COMMANDS], [INIT_COMMANDS])\n# -----------------------------------------------------\nm4_defun([_LT_CONFIG_SAVE_COMMANDS],\n[_LT_CONFIG_LIBTOOL([$1])\n_LT_CONFIG_LIBTOOL_INIT([$2])\n])\n\n\n# _LT_FORMAT_COMMENT([COMMENT])\n# -----------------------------\n# Add leading comment marks to the start of each line, and a trailing\n# full-stop to the whole comment if one is not present already.\nm4_define([_LT_FORMAT_COMMENT],\n[m4_ifval([$1], [\nm4_bpatsubst([m4_bpatsubst([$1], [^ *], [# ])],\n              [['`$\\]], [\\\\\\&])]m4_bmatch([$1], [[!?.]$], [], [.])\n)])\n\n\n\n## ------------------------ ##\n## FIXME: Eliminate VARNAME ##\n## ------------------------ ##\n\n\n# _LT_DECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION], [IS-TAGGED?])\n# -------------------------------------------------------------------\n# CONFIGNAME is the name given to the value in the libtool script.\n# VARNAME is the (base) name used in the configure script.\n# VALUE may be 0, 1 or 2 for a computed quote escaped value based on\n# VARNAME.  Any other value will be used directly.\nm4_define([_LT_DECL],\n[lt_if_append_uniq([lt_decl_varnames], [$2], [, ],\n    [lt_dict_add_subkey([lt_decl_dict], [$2], [libtool_name],\n\t[m4_ifval([$1], [$1], [$2])])\n    lt_dict_add_subkey([lt_decl_dict], [$2], [value], [$3])\n    m4_ifval([$4],\n\t[lt_dict_add_subkey([lt_decl_dict], [$2], [description], [$4])])\n    lt_dict_add_subkey([lt_decl_dict], [$2],\n\t[tagged?], [m4_ifval([$5], [yes], [no])])])\n])\n\n\n# _LT_TAGDECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION])\n# --------------------------------------------------------\nm4_define([_LT_TAGDECL], [_LT_DECL([$1], [$2], [$3], [$4], [yes])])\n\n\n# lt_decl_tag_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_tag_varnames],\n[_lt_decl_filter([tagged?], [yes], $@)])\n\n\n# _lt_decl_filter(SUBKEY, VALUE, [SEPARATOR], [VARNAME1..])\n# ---------------------------------------------------------\nm4_define([_lt_decl_filter],\n[m4_case([$#],\n  [0], [m4_fatal([$0: too few arguments: $#])],\n  [1], [m4_fatal([$0: too few arguments: $#: $1])],\n  [2], [lt_dict_filter([lt_decl_dict], [$1], [$2], [], lt_decl_varnames)],\n  [3], [lt_dict_filter([lt_decl_dict], [$1], [$2], [$3], lt_decl_varnames)],\n  [lt_dict_filter([lt_decl_dict], $@)])[]dnl\n])\n\n\n# lt_decl_quote_varnames([SEPARATOR], [VARNAME1...])\n# --------------------------------------------------\nm4_define([lt_decl_quote_varnames],\n[_lt_decl_filter([value], [1], $@)])\n\n\n# lt_decl_dquote_varnames([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_dquote_varnames],\n[_lt_decl_filter([value], [2], $@)])\n\n\n# lt_decl_varnames_tagged([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_varnames_tagged],\n[m4_assert([$# <= 2])dnl\n_$0(m4_quote(m4_default([$1], [[, ]])),\n    m4_ifval([$2], [[$2]], [m4_dquote(lt_decl_tag_varnames)]),\n    m4_split(m4_normalize(m4_quote(_LT_TAGS)), [ ]))])\nm4_define([_lt_decl_varnames_tagged],\n[m4_ifval([$3], [lt_combine([$1], [$2], [_], $3)])])\n\n\n# lt_decl_all_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_all_varnames],\n[_$0(m4_quote(m4_default([$1], [[, ]])),\n     m4_if([$2], [],\n\t   m4_quote(lt_decl_varnames),\n\tm4_quote(m4_shift($@))))[]dnl\n])\nm4_define([_lt_decl_all_varnames],\n[lt_join($@, lt_decl_varnames_tagged([$1],\n\t\t\tlt_decl_tag_varnames([[, ]], m4_shift($@))))dnl\n])\n\n\n# _LT_CONFIG_STATUS_DECLARE([VARNAME])\n# ------------------------------------\n# Quote a variable value, and forward it to `config.status' so that its\n# declaration there will have the same value as in `configure'.  VARNAME\n# must have a single quote delimited value for this to work.\nm4_define([_LT_CONFIG_STATUS_DECLARE],\n[$1='`$ECHO \"$][$1\" | $SED \"$delay_single_quote_subst\"`'])\n\n\n# _LT_CONFIG_STATUS_DECLARATIONS\n# ------------------------------\n# We delimit libtool config variables with single quotes, so when\n# we write them to config.status, we have to be sure to quote all\n# embedded single quotes properly.  In configure, this macro expands\n# each variable declared with _LT_DECL (and _LT_TAGDECL) into:\n#\n#    <var>='`$ECHO \"$<var>\" | $SED \"$delay_single_quote_subst\"`'\nm4_defun([_LT_CONFIG_STATUS_DECLARATIONS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_all_varnames),\n    [m4_n([_LT_CONFIG_STATUS_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAGS\n# ----------------\n# Output comment and list of tags supported by the script\nm4_defun([_LT_LIBTOOL_TAGS],\n[_LT_FORMAT_COMMENT([The names of the tagged configurations supported by this script])dnl\navailable_tags=\"_LT_TAGS\"dnl\n])\n\n\n# _LT_LIBTOOL_DECLARE(VARNAME, [TAG])\n# -----------------------------------\n# Extract the dictionary values for VARNAME (optionally with TAG) and\n# expand to a commented shell variable setting:\n#\n#    # Some comment about what VAR is for.\n#    visible_name=$lt_internal_name\nm4_define([_LT_LIBTOOL_DECLARE],\n[_LT_FORMAT_COMMENT(m4_quote(lt_dict_fetch([lt_decl_dict], [$1],\n\t\t\t\t\t   [description])))[]dnl\nm4_pushdef([_libtool_name],\n    m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [libtool_name])))[]dnl\nm4_case(m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [value])),\n    [0], [_libtool_name=[$]$1],\n    [1], [_libtool_name=$lt_[]$1],\n    [2], [_libtool_name=$lt_[]$1],\n    [_libtool_name=lt_dict_fetch([lt_decl_dict], [$1], [value])])[]dnl\nm4_ifval([$2], [_$2])[]m4_popdef([_libtool_name])[]dnl\n])\n\n\n# _LT_LIBTOOL_CONFIG_VARS\n# -----------------------\n# Produce commented declarations of non-tagged libtool config variables\n# suitable for insertion in the LIBTOOL CONFIG section of the `libtool'\n# script.  Tagged libtool config variables (even for the LIBTOOL CONFIG\n# section) are produced by _LT_LIBTOOL_TAG_VARS.\nm4_defun([_LT_LIBTOOL_CONFIG_VARS],\n[m4_foreach([_lt_var],\n    m4_quote(_lt_decl_filter([tagged?], [no], [], lt_decl_varnames)),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAG_VARS(TAG)\n# -------------------------\nm4_define([_LT_LIBTOOL_TAG_VARS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_tag_varnames),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var, [$1])])])])\n\n\n# _LT_TAGVAR(VARNAME, [TAGNAME])\n# ------------------------------\nm4_define([_LT_TAGVAR], [m4_ifval([$2], [$1_$2], [$1])])\n\n\n# _LT_CONFIG_COMMANDS\n# -------------------\n# Send accumulated output to $CONFIG_STATUS.  Thanks to the lists of\n# variables for single and double quote escaping we saved from calls\n# to _LT_DECL, we can put quote escaped variables declarations\n# into `config.status', and then the shell code to quote escape them in\n# for loops in `config.status'.  Finally, any additional code accumulated\n# from calls to _LT_CONFIG_LIBTOOL_INIT is expanded.\nm4_defun([_LT_CONFIG_COMMANDS],\n[AC_PROVIDE_IFELSE([LT_OUTPUT],\n\tdnl If the libtool generation code has been placed in $CONFIG_LT,\n\tdnl instead of duplicating it all over again into config.status,\n\tdnl then we will have config.status run $CONFIG_LT later, so it\n\tdnl needs to know what name is stored there:\n        [AC_CONFIG_COMMANDS([libtool],\n            [$SHELL $CONFIG_LT || AS_EXIT(1)], [CONFIG_LT='$CONFIG_LT'])],\n    dnl If the libtool generation code is destined for config.status,\n    dnl expand the accumulated commands and init code now:\n    [AC_CONFIG_COMMANDS([libtool],\n        [_LT_OUTPUT_LIBTOOL_COMMANDS], [_LT_OUTPUT_LIBTOOL_COMMANDS_INIT])])\n])#_LT_CONFIG_COMMANDS\n\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS_INIT],\n[\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nsed_quote_subst='$sed_quote_subst'\ndouble_quote_subst='$double_quote_subst'\ndelay_variable_subst='$delay_variable_subst'\n_LT_CONFIG_STATUS_DECLARATIONS\nLTCC='$LTCC'\nLTCFLAGS='$LTCFLAGS'\ncompiler='$compiler_DEFAULT'\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$[]1\n_LTECHO_EOF'\n}\n\n# Quote evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_quote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED \\\\\"\\\\\\$sed_quote_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\"\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n# Double-quote double-evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_dquote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED -e \\\\\"\\\\\\$double_quote_subst\\\\\" -e \\\\\"\\\\\\$sed_quote_subst\\\\\" -e \\\\\"\\\\\\$delay_variable_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\"\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n_LT_OUTPUT_LIBTOOL_INIT\n])\n\n# _LT_GENERATED_FILE_INIT(FILE, [COMMENT])\n# ------------------------------------\n# Generate a child script FILE with all initialization necessary to\n# reuse the environment learned by the parent script, and make the\n# file executable.  If COMMENT is supplied, it is inserted after the\n# `#!' sequence but before initialization text begins.  After this\n# macro, additional text can be appended to FILE to form the body of\n# the child script.  The macro ends with non-zero status if the\n# file could not be fully written (such as if the disk is full).\nm4_ifdef([AS_INIT_GENERATED],\n[m4_defun([_LT_GENERATED_FILE_INIT],[AS_INIT_GENERATED($@)])],\n[m4_defun([_LT_GENERATED_FILE_INIT],\n[m4_require([AS_PREPARE])]dnl\n[m4_pushdef([AS_MESSAGE_LOG_FD])]dnl\n[lt_write_fail=0\ncat >$1 <<_ASEOF || lt_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n$2\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$1 <<\\_ASEOF || lt_write_fail=1\nAS_SHELL_SANITIZE\n_AS_PREPARE\nexec AS_MESSAGE_FD>&1\n_ASEOF\ntest $lt_write_fail = 0 && chmod +x $1[]dnl\nm4_popdef([AS_MESSAGE_LOG_FD])])])# _LT_GENERATED_FILE_INIT\n\n# LT_OUTPUT\n# ---------\n# This macro allows early generation of the libtool script (before\n# AC_OUTPUT is called), incase it is used in configure for compilation\n# tests.\nAC_DEFUN([LT_OUTPUT],\n[: ${CONFIG_LT=./config.lt}\nAC_MSG_NOTICE([creating $CONFIG_LT])\n_LT_GENERATED_FILE_INIT([\"$CONFIG_LT\"],\n[# Run this file to recreate a libtool stub with the current configuration.])\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nlt_cl_silent=false\nexec AS_MESSAGE_LOG_FD>>config.log\n{\n  echo\n  AS_BOX([Running $as_me.])\n} >&AS_MESSAGE_LOG_FD\n\nlt_cl_help=\"\\\n\\`$as_me' creates a local libtool stub from the current configuration,\nfor use in further configure time tests before the real libtool is\ngenerated.\n\nUsage: $[0] [[OPTIONS]]\n\n  -h, --help      print this help, then exit\n  -V, --version   print version number, then exit\n  -q, --quiet     do not print progress messages\n  -d, --debug     don't remove temporary files\n\nReport bugs to <bug-libtool@gnu.org>.\"\n\nlt_cl_version=\"\\\nm4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl\nm4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])\nconfigured by $[0], generated by m4_PACKAGE_STRING.\n\nCopyright (C) 2009 Free Software Foundation, Inc.\nThis config.lt script is free software; the Free Software Foundation\ngives unlimited permision to copy, distribute and modify it.\"\n\nwhile test $[#] != 0\ndo\n  case $[1] in\n    --version | --v* | -V )\n      echo \"$lt_cl_version\"; exit 0 ;;\n    --help | --h* | -h )\n      echo \"$lt_cl_help\"; exit 0 ;;\n    --debug | --d* | -d )\n      debug=: ;;\n    --quiet | --q* | --silent | --s* | -q )\n      lt_cl_silent=: ;;\n\n    -*) AC_MSG_ERROR([unrecognized option: $[1]\nTry \\`$[0] --help' for more information.]) ;;\n\n    *) AC_MSG_ERROR([unrecognized argument: $[1]\nTry \\`$[0] --help' for more information.]) ;;\n  esac\n  shift\ndone\n\nif $lt_cl_silent; then\n  exec AS_MESSAGE_FD>/dev/null\nfi\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<_LTEOF\n_LT_OUTPUT_LIBTOOL_COMMANDS_INIT\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nAC_MSG_NOTICE([creating $ofile])\n_LT_OUTPUT_LIBTOOL_COMMANDS\nAS_EXIT(0)\n_LTEOF\nchmod +x \"$CONFIG_LT\"\n\n# configure is writing to config.log, but config.lt does its own redirection,\n# appending to config.log, which fails on DOS, as config.log is still kept\n# open by configure.  Here we exec the FD to /dev/null, effectively closing\n# config.log, so it can be properly (re)opened and appended to by config.lt.\nlt_cl_success=:\ntest \"$silent\" = yes &&\n  lt_config_lt_args=\"$lt_config_lt_args --quiet\"\nexec AS_MESSAGE_LOG_FD>/dev/null\n$SHELL \"$CONFIG_LT\" $lt_config_lt_args || lt_cl_success=false\nexec AS_MESSAGE_LOG_FD>>config.log\n$lt_cl_success || AS_EXIT(1)\n])# LT_OUTPUT\n\n\n# _LT_CONFIG(TAG)\n# ---------------\n# If TAG is the built-in tag, create an initial libtool script with a\n# default configuration from the untagged config vars.  Otherwise add code\n# to config.status for appending the configuration named by TAG from the\n# matching tagged config vars.\nm4_defun([_LT_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_CONFIG_SAVE_COMMANDS([\n  m4_define([_LT_TAG], m4_if([$1], [], [C], [$1]))dnl\n  m4_if(_LT_TAG, [C], [\n    # See if we are running on zsh, and set the options which allow our\n    # commands through without removal of \\ escapes.\n    if test -n \"${ZSH_VERSION+set}\" ; then\n      setopt NO_GLOB_SUBST\n    fi\n\n    cfgfile=\"${ofile}T\"\n    trap \"$RM \\\"$cfgfile\\\"; exit 1\" 1 2 15\n    $RM \"$cfgfile\"\n\n    cat <<_LT_EOF >> \"$cfgfile\"\n#! $SHELL\n\n# `$ECHO \"$ofile\" | sed 's%^.*/%%'` - Provide generalized library-building support services.\n# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION\n# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n#\n_LT_COPYING\n_LT_LIBTOOL_TAGS\n\n# ### BEGIN LIBTOOL CONFIG\n_LT_LIBTOOL_CONFIG_VARS\n_LT_LIBTOOL_TAG_VARS\n# ### END LIBTOOL CONFIG\n\n_LT_EOF\n\n  case $host_os in\n  aix3*)\n    cat <<\\_LT_EOF >> \"$cfgfile\"\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test \"X${COLLECT_NAMES+set}\" != Xset; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\n_LT_EOF\n    ;;\n  esac\n\n  _LT_PROG_LTMAIN\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '/^# Generated shell functions inserted here/q' \"$ltmain\" >> \"$cfgfile\" \\\n    || (rm -f \"$cfgfile\"; exit 1)\n\n  _LT_PROG_XSI_SHELLFNS\n\n  sed -n '/^# Generated shell functions inserted here/,$p' \"$ltmain\" >> \"$cfgfile\" \\\n    || (rm -f \"$cfgfile\"; exit 1)\n\n  mv -f \"$cfgfile\" \"$ofile\" ||\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n],\n[cat <<_LT_EOF >> \"$ofile\"\n\ndnl Unfortunately we have to use $1 here, since _LT_TAG is not expanded\ndnl in a comment (ie after a #).\n# ### BEGIN LIBTOOL TAG CONFIG: $1\n_LT_LIBTOOL_TAG_VARS(_LT_TAG)\n# ### END LIBTOOL TAG CONFIG: $1\n_LT_EOF\n])dnl /m4_if\n],\n[m4_if([$1], [], [\n    PACKAGE='$PACKAGE'\n    VERSION='$VERSION'\n    TIMESTAMP='$TIMESTAMP'\n    RM='$RM'\n    ofile='$ofile'], [])\n])dnl /_LT_CONFIG_SAVE_COMMANDS\n])# _LT_CONFIG\n\n\n# LT_SUPPORTED_TAG(TAG)\n# ---------------------\n# Trace this macro to discover what tags are supported by the libtool\n# --tag option, using:\n#    autoconf --trace 'LT_SUPPORTED_TAG:$1'\nAC_DEFUN([LT_SUPPORTED_TAG], [])\n\n\n# C support is built-in for now\nm4_define([_LT_LANG_C_enabled], [])\nm4_define([_LT_TAGS], [])\n\n\n# LT_LANG(LANG)\n# -------------\n# Enable libtool support for the given language if not already enabled.\nAC_DEFUN([LT_LANG],\n[AC_BEFORE([$0], [LT_OUTPUT])dnl\nm4_case([$1],\n  [C],\t\t\t[_LT_LANG(C)],\n  [C++],\t\t[_LT_LANG(CXX)],\n  [Go],\t\t\t[_LT_LANG(GO)],\n  [Java],\t\t[_LT_LANG(GCJ)],\n  [Fortran 77],\t\t[_LT_LANG(F77)],\n  [Fortran],\t\t[_LT_LANG(FC)],\n  [Windows Resource],\t[_LT_LANG(RC)],\n  [m4_ifdef([_LT_LANG_]$1[_CONFIG],\n    [_LT_LANG($1)],\n    [m4_fatal([$0: unsupported language: \"$1\"])])])dnl\n])# LT_LANG\n\n\n# _LT_LANG(LANGNAME)\n# ------------------\nm4_defun([_LT_LANG],\n[m4_ifdef([_LT_LANG_]$1[_enabled], [],\n  [LT_SUPPORTED_TAG([$1])dnl\n  m4_append([_LT_TAGS], [$1 ])dnl\n  m4_define([_LT_LANG_]$1[_enabled], [])dnl\n  _LT_LANG_$1_CONFIG($1)])dnl\n])# _LT_LANG\n\n\n# _LT_LANG_DEFAULT_CONFIG\n# -----------------------\nm4_defun([_LT_LANG_DEFAULT_CONFIG],\n[AC_PROVIDE_IFELSE([AC_PROG_CXX],\n  [LT_LANG(CXX)],\n  [m4_define([AC_PROG_CXX], defn([AC_PROG_CXX])[LT_LANG(CXX)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_F77],\n  [LT_LANG(F77)],\n  [m4_define([AC_PROG_F77], defn([AC_PROG_F77])[LT_LANG(F77)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_FC],\n  [LT_LANG(FC)],\n  [m4_define([AC_PROG_FC], defn([AC_PROG_FC])[LT_LANG(FC)])])\n\ndnl The call to [A][M_PROG_GCJ] is quoted like that to stop aclocal\ndnl pulling things in needlessly.\nAC_PROVIDE_IFELSE([AC_PROG_GCJ],\n  [LT_LANG(GCJ)],\n  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],\n    [LT_LANG(GCJ)],\n    [AC_PROVIDE_IFELSE([LT_PROG_GCJ],\n      [LT_LANG(GCJ)],\n      [m4_ifdef([AC_PROG_GCJ],\n\t[m4_define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([A][M_PROG_GCJ],\n\t[m4_define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([LT_PROG_GCJ],\n\t[m4_define([LT_PROG_GCJ], defn([LT_PROG_GCJ])[LT_LANG(GCJ)])])])])])\n\nAC_PROVIDE_IFELSE([AC_PROG_GO],\n  [LT_LANG(GO)],\n  [m4_define([AC_PROG_GO], defn([AC_PROG_GO])[LT_LANG(GO)])])\n\nAC_PROVIDE_IFELSE([LT_PROG_RC],\n  [LT_LANG(RC)],\n  [m4_define([LT_PROG_RC], defn([LT_PROG_RC])[LT_LANG(RC)])])\n])# _LT_LANG_DEFAULT_CONFIG\n\n# Obsolete macros:\nAU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])\nAU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])\nAU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])\nAU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])\nAU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_CXX], [])\ndnl AC_DEFUN([AC_LIBTOOL_F77], [])\ndnl AC_DEFUN([AC_LIBTOOL_FC], [])\ndnl AC_DEFUN([AC_LIBTOOL_GCJ], [])\ndnl AC_DEFUN([AC_LIBTOOL_RC], [])\n\n\n# _LT_TAG_COMPILER\n# ----------------\nm4_defun([_LT_TAG_COMPILER],\n[AC_REQUIRE([AC_PROG_CC])dnl\n\n_LT_DECL([LTCC], [CC], [1], [A C compiler])dnl\n_LT_DECL([LTCFLAGS], [CFLAGS], [1], [LTCC compiler flags])dnl\n_LT_TAGDECL([CC], [compiler], [1], [A language specific compiler])dnl\n_LT_TAGDECL([with_gcc], [GCC], [0], [Is the compiler the GNU compiler?])dnl\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n])# _LT_TAG_COMPILER\n\n\n# _LT_COMPILER_BOILERPLATE\n# ------------------------\n# Check for compiler boilerplate output or warnings with\n# the simple compiler test code.\nm4_defun([_LT_COMPILER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$RM conftest*\n])# _LT_COMPILER_BOILERPLATE\n\n\n# _LT_LINKER_BOILERPLATE\n# ----------------------\n# Check for linker boilerplate output or warnings with\n# the simple link test code.\nm4_defun([_LT_LINKER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$RM -r conftest*\n])# _LT_LINKER_BOILERPLATE\n\n# _LT_REQUIRED_DARWIN_CHECKS\n# -------------------------\nm4_defun_once([_LT_REQUIRED_DARWIN_CHECKS],[\n  case $host_os in\n    rhapsody* | darwin*)\n    AC_CHECK_TOOL([DSYMUTIL], [dsymutil], [:])\n    AC_CHECK_TOOL([NMEDIT], [nmedit], [:])\n    AC_CHECK_TOOL([LIPO], [lipo], [:])\n    AC_CHECK_TOOL([OTOOL], [otool], [:])\n    AC_CHECK_TOOL([OTOOL64], [otool64], [:])\n    _LT_DECL([], [DSYMUTIL], [1],\n      [Tool to manipulate archived DWARF debug symbol files on Mac OS X])\n    _LT_DECL([], [NMEDIT], [1],\n      [Tool to change global to local symbols on Mac OS X])\n    _LT_DECL([], [LIPO], [1],\n      [Tool to manipulate fat objects and archives on Mac OS X])\n    _LT_DECL([], [OTOOL], [1],\n      [ldd/readelf like tool for Mach-O binaries on Mac OS X])\n    _LT_DECL([], [OTOOL64], [1],\n      [ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4])\n\n    AC_CACHE_CHECK([for -single_module linker flag],[lt_cv_apple_cc_single_mod],\n      [lt_cv_apple_cc_single_mod=no\n      if test -z \"${LT_MULTI_MODULE}\"; then\n\t# By default we will add the -single_module flag. You can override\n\t# by either setting the environment variable LT_MULTI_MODULE\n\t# non-empty at configure time, or by adding -multi_module to the\n\t# link flags.\n\trm -rf libconftest.dylib*\n\techo \"int foo(void){return 1;}\" > conftest.c\n\techo \"$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n-dynamiclib -Wl,-single_module conftest.c\" >&AS_MESSAGE_LOG_FD\n\t$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n\t  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err\n        _lt_result=$?\n\tif test -f libconftest.dylib && test ! -s conftest.err && test $_lt_result = 0; then\n\t  lt_cv_apple_cc_single_mod=yes\n\telse\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\tfi\n\trm -rf libconftest.dylib*\n\trm -f conftest.*\n      fi])\n    AC_CACHE_CHECK([for -exported_symbols_list linker flag],\n      [lt_cv_ld_exported_symbols_list],\n      [lt_cv_ld_exported_symbols_list=no\n      save_LDFLAGS=$LDFLAGS\n      echo \"_main\" > conftest.sym\n      LDFLAGS=\"$LDFLAGS -Wl,-exported_symbols_list,conftest.sym\"\n      AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n\t[lt_cv_ld_exported_symbols_list=yes],\n\t[lt_cv_ld_exported_symbols_list=no])\n\tLDFLAGS=\"$save_LDFLAGS\"\n    ])\n    AC_CACHE_CHECK([for -force_load linker flag],[lt_cv_ld_force_load],\n      [lt_cv_ld_force_load=no\n      cat > conftest.c << _LT_EOF\nint forced_loaded() { return 2;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS -c -o conftest.o conftest.c\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&AS_MESSAGE_LOG_FD\n      echo \"$AR cru libconftest.a conftest.o\" >&AS_MESSAGE_LOG_FD\n      $AR cru libconftest.a conftest.o 2>&AS_MESSAGE_LOG_FD\n      cat > conftest.c << _LT_EOF\nint main() { return 0;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a 2>conftest.err\n      _lt_result=$?\n      if test -f conftest && test ! -s conftest.err && test $_lt_result = 0 && $GREP forced_load conftest 2>&1 >/dev/null; then\n\tlt_cv_ld_force_load=yes\n      else\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      fi\n        rm -f conftest.err libconftest.a conftest conftest.c\n        rm -rf conftest.dSYM\n    ])\n    case $host_os in\n    rhapsody* | darwin1.[[012]])\n      _lt_dar_allow_undefined='${wl}-undefined ${wl}suppress' ;;\n    darwin1.*)\n      _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;\n    darwin*) # darwin 5.x on\n      # if running on 10.5 or later, the deployment target defaults\n      # to the OS version, if on x86, and 10.4, the deployment\n      # target defaults to 10.4. Don't you love it?\n      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n\t10.0,*86*-darwin8*|10.0,*-darwin[[91]]*)\n\t  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;\n\t10.[[012]]*)\n\t  _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;\n\t10.*)\n\t  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;\n      esac\n    ;;\n  esac\n    if test \"$lt_cv_apple_cc_single_mod\" = \"yes\"; then\n      _lt_dar_single_mod='$single_module'\n    fi\n    if test \"$lt_cv_ld_exported_symbols_list\" = \"yes\"; then\n      _lt_dar_export_syms=' ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'\n    else\n      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/${libname}-symbols.expsym ${lib}'\n    fi\n    if test \"$DSYMUTIL\" != \":\" && test \"$lt_cv_ld_force_load\" = \"no\"; then\n      _lt_dsymutil='~$DSYMUTIL $lib || :'\n    else\n      _lt_dsymutil=\n    fi\n    ;;\n  esac\n])\n\n\n# _LT_DARWIN_LINKER_FEATURES\n# --------------------------\n# Checks for linker and compiler features on darwin\nm4_defun([_LT_DARWIN_LINKER_FEATURES],\n[\n  m4_require([_LT_REQUIRED_DARWIN_CHECKS])\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_automatic, $1)=yes\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  if test \"$lt_cv_ld_force_load\" = \"yes\"; then\n    _LT_TAGVAR(whole_archive_flag_spec, $1)='`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience ${wl}-force_load,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"`'\n  else\n    _LT_TAGVAR(whole_archive_flag_spec, $1)=''\n  fi\n  _LT_TAGVAR(link_all_deplibs, $1)=yes\n  _LT_TAGVAR(allow_undefined_flag, $1)=\"$_lt_dar_allow_undefined\"\n  case $cc_basename in\n     ifort*) _lt_dar_can_shared=yes ;;\n     *) _lt_dar_can_shared=$GCC ;;\n  esac\n  if test \"$_lt_dar_can_shared\" = \"yes\"; then\n    output_verbose_link_cmd=func_echo_all\n    _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod${_lt_dsymutil}\"\n    _LT_TAGVAR(module_cmds, $1)=\"\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags${_lt_dsymutil}\"\n    _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's,^,_,' < \\$export_symbols > \\$output_objdir/\\${libname}-symbols.expsym~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring ${_lt_dar_single_mod}${_lt_dar_export_syms}${_lt_dsymutil}\"\n    _LT_TAGVAR(module_expsym_cmds, $1)=\"sed -e 's,^,_,' < \\$export_symbols > \\$output_objdir/\\${libname}-symbols.expsym~\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags${_lt_dar_export_syms}${_lt_dsymutil}\"\n    m4_if([$1], [CXX],\n[   if test \"$lt_cv_apple_cc_single_mod\" != \"yes\"; then\n      _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -r -keep_private_externs -nostdlib -o \\${lib}-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\${lib}-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring${_lt_dsymutil}\"\n      _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's,^,_,' < \\$export_symbols > \\$output_objdir/\\${libname}-symbols.expsym~\\$CC -r -keep_private_externs -nostdlib -o \\${lib}-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\${lib}-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring${_lt_dar_export_syms}${_lt_dsymutil}\"\n    fi\n],[])\n  else\n  _LT_TAGVAR(ld_shlibs, $1)=no\n  fi\n])\n\n# _LT_SYS_MODULE_PATH_AIX\n# -----------------------\n# Links a minimal program and checks the executable\n# for the system default hardcoded library path. In most cases,\n# this is /usr/lib:/lib, but when the MPI compilers are used\n# the location of the communication and MPI libs are included too.\n# If we don't find anything, use the default library path according\n# to the aix ld manual.\nm4_defun([_LT_SYS_MODULE_PATH_AIX],\n[m4_require([_LT_DECL_SED])dnl\nAC_LINK_IFELSE(AC_LANG_PROGRAM,[\nlt_aix_libpath_sed='\n    /Import File Strings/,/^$/ {\n\t/^0/ {\n\t    s/^0  *\\(.*\\)$/\\1/\n\t    p\n\t}\n    }'\naix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n# Check for a 64-bit object if we didn't find anything.\nif test -z \"$aix_libpath\"; then\n  aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\nfi],[])\nif test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n])# _LT_SYS_MODULE_PATH_AIX\n\n\n# _LT_SHELL_INIT(ARG)\n# -------------------\nm4_define([_LT_SHELL_INIT],\n[m4_divert_text([M4SH-INIT], [$1\n])])# _LT_SHELL_INIT\n\n\n\n# _LT_PROG_ECHO_BACKSLASH\n# -----------------------\n# Find how we can fake an echo command that does not interpret backslash.\n# In particular, with Autoconf 2.60 or later we add some code to the start\n# of the generated configure script which will find a shell with a builtin\n# printf (which we can use as an echo command).\nm4_defun([_LT_PROG_ECHO_BACKSLASH],\n[ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n\nAC_MSG_CHECKING([how to print strings])\n# Test print first, because it will be a builtin if present.\nif test \"X`print -r -- -n 2>/dev/null`\" = X-n && \\\n   test \"X`print -r -- $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='print -r --'\nelif test \"X`printf %s $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='printf %s\\n'\nelse\n  # Use this function as a fallback that always works.\n  func_fallback_echo ()\n  {\n    eval 'cat <<_LTECHO_EOF\n$[]1\n_LTECHO_EOF'\n  }\n  ECHO='func_fallback_echo'\nfi\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\" \n}\n\ncase \"$ECHO\" in\n  printf*) AC_MSG_RESULT([printf]) ;;\n  print*) AC_MSG_RESULT([print -r]) ;;\n  *) AC_MSG_RESULT([cat]) ;;\nesac\n\nm4_ifdef([_AS_DETECT_SUGGESTED],\n[_AS_DETECT_SUGGESTED([\n  test -n \"${ZSH_VERSION+set}${BASH_VERSION+set}\" || (\n    ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n    PATH=/empty FPATH=/empty; export PATH FPATH\n    test \"X`printf %s $ECHO`\" = \"X$ECHO\" \\\n      || test \"X`print -r -- $ECHO`\" = \"X$ECHO\" )])])\n\n_LT_DECL([], [SHELL], [1], [Shell to use when invoking shell scripts])\n_LT_DECL([], [ECHO], [1], [An echo program that protects backslashes])\n])# _LT_PROG_ECHO_BACKSLASH\n\n\n# _LT_ENABLE_LOCK\n# ---------------\nm4_defun([_LT_ENABLE_LOCK],\n[AC_ARG_ENABLE([libtool-lock],\n  [AS_HELP_STRING([--disable-libtool-lock],\n    [avoid locking (might break parallel builds)])])\ntest \"x$enable_libtool_lock\" != xno && enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.$ac_objext` in\n      *ELF-32*)\n\tHPUX_IA64_MODE=\"32\"\n\t;;\n      *ELF-64*)\n\tHPUX_IA64_MODE=\"64\"\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out which ABI we are using.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    if test \"$lt_cv_prog_gnu_ld\" = yes; then\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -melf32bsmip\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -melf32bmipn32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -melf64bmip\"\n\t;;\n      esac\n    else\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -32\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -n32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -64\"\n\t  ;;\n      esac\n    fi\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*kfreebsd*-gnu|x86_64-*linux*|powerpc*-*linux*| \\\ns390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n      *32-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_i386_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_i386\"\n\t    ;;\n\t  powerpc64le-*linux*)\n\t    LD=\"${LD-ld} -m elf32lppclinux\"\n\t    ;;\n\t  powerpc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32ppclinux\"\n\t    ;;\n\t  s390x-*linux*)\n\t    LD=\"${LD-ld} -m elf_s390\"\n\t    ;;\n\t  sparc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32_sparc\"\n\t    ;;\n\tesac\n\t;;\n      *64-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_x86_64_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_x86_64\"\n\t    ;;\n\t  powerpcle-*linux*)\n\t    LD=\"${LD-ld} -m elf64lppc\"\n\t    ;;\n\t  powerpc-*linux*)\n\t    LD=\"${LD-ld} -m elf64ppc\"\n\t    ;;\n\t  s390*-*linux*|s390*-*tpf*)\n\t    LD=\"${LD-ld} -m elf64_s390\"\n\t    ;;\n\t  sparc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64_sparc\"\n\t    ;;\n\tesac\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=\"$CFLAGS\"\n  CFLAGS=\"$CFLAGS -belf\"\n  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n    [AC_LANG_PUSH(C)\n     AC_LINK_IFELSE([AC_LANG_PROGRAM([[]],[[]])],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])\n     AC_LANG_POP])\n  if test x\"$lt_cv_cc_needs_belf\" != x\"yes\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=\"$SAVE_CFLAGS\"\n  fi\n  ;;\n*-*solaris*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n    *64-bit*)\n      case $lt_cv_prog_gnu_ld in\n      yes*)\n        case $host in\n        i?86-*-solaris* | x86_64-*-solaris2.1[[0-9]]*)\n          LD=\"${LD-ld} -m elf_x86_64\"\n          ;;\n        sparc*-*-solaris*)\n          LD=\"${LD-ld} -m elf64_sparc\"\n          ;;\n        esac\n        # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.\n        if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then\n          LD=\"${LD-ld}_sol2\"\n        fi\n        ;;\n      *)\n\tif ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then\n\t  LD=\"${LD-ld} -64\"\n\tfi\n\t;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\nesac\n\nneed_locks=\"$enable_libtool_lock\"\n])# _LT_ENABLE_LOCK\n\n\n# _LT_CMD_OLD_ARCHIVE\n# -------------------\nm4_defun([_LT_CMD_OLD_ARCHIVE],\n[AC_CHECK_TOOL(AR, ar, false)\ntest -z \"$AR\" && AR=ar\ntest -z \"$AR_FLAGS\" && AR_FLAGS=cru\n_LT_DECL([], [AR], [1], [The archiver])\n_LT_DECL([], [AR_FLAGS], [1])\n\nAC_CHECK_TOOL(STRIP, strip, :)\ntest -z \"$STRIP\" && STRIP=:\n_LT_DECL([], [STRIP], [1], [A symbol stripping program])\n\nAC_CHECK_TOOL(RANLIB, ranlib, :)\ntest -z \"$RANLIB\" && RANLIB=:\n_LT_DECL([], [RANLIB], [1],\n    [Commands used to install an old-style archive])\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  openbsd*)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB -t \\$oldlib\"\n    ;;\n  *)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB \\$oldlib\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$oldlib\"\nfi\n\ncase $host_os in\n  darwin*)\n    lock_old_archive_extraction=yes ;;\n  *)\n    lock_old_archive_extraction=no ;;\nesac\n_LT_DECL([], [old_postinstall_cmds], [2])\n_LT_DECL([], [old_postuninstall_cmds], [2])\n_LT_TAGDECL([], [old_archive_cmds], [2],\n    [Commands used to build an old-style archive])\n_LT_DECL([], [lock_old_archive_extraction], [0],\n    [Whether to use a lock for old archive extraction])\n])# _LT_CMD_OLD_ARCHIVE\n\n\n# _LT_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#\t\t[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([_LT_COMPILER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$3\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       $2=yes\n     fi\n   fi\n   $RM conftest*\n])\n\nif test x\"[$]$2\" = xyes; then\n    m4_if([$5], , :, [$5])\nelse\n    m4_if([$6], , :, [$6])\nfi\n])# _LT_COMPILER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_COMPILER_OPTION], [_LT_COMPILER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [])\n\n\n# _LT_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#                  [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------\n# Check whether the given linker option works\nAC_DEFUN([_LT_LINKER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   save_LDFLAGS=\"$LDFLAGS\"\n   LDFLAGS=\"$LDFLAGS $3\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&AS_MESSAGE_LOG_FD\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         $2=yes\n       fi\n     else\n       $2=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=\"$save_LDFLAGS\"\n])\n\nif test x\"[$]$2\" = xyes; then\n    m4_if([$4], , :, [$4])\nelse\n    m4_if([$5], , :, [$5])\nfi\n])# _LT_LINKER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_LINKER_OPTION], [_LT_LINKER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [])\n\n\n# LT_CMD_MAX_LEN\n#---------------\nAC_DEFUN([LT_CMD_MAX_LEN],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n# find the maximum length of command line arguments\nAC_MSG_CHECKING([the maximum length of command line arguments])\nAC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl\n  i=0\n  teststring=\"ABCD\"\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw* | cegcc*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  mint*)\n    # On MiNT this can take a long time and run out of memory.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536\t# usable default for all BSDs\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n\n  interix*)\n    # We know the value 262144 and hardcode it with a safety zone (like BSD)\n    lt_cv_sys_max_cmd_len=196608\n    ;;\n\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    #\n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  sco3.2v5*)\n    lt_cv_sys_max_cmd_len=102400\n    ;;\n  sysv5* | sco5v6* | sysv4.2uw2*)\n    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`\n    if test -n \"$kargmax\"; then\n      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[\t ]]//'`\n    else\n      lt_cv_sys_max_cmd_len=32768\n    fi\n    ;;\n  *)\n    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`\n    if test -n \"$lt_cv_sys_max_cmd_len\"; then\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    else\n      # Make teststring a little bigger before we do anything with it.\n      # a 1K string should be a reasonable start.\n      for i in 1 2 3 4 5 6 7 8 ; do\n        teststring=$teststring$teststring\n      done\n      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n      # If test is not a shell built-in, we'll probably end up computing a\n      # maximum length that is only half of the actual maximum length, but\n      # we can't tell.\n      while { test \"X\"`func_fallback_echo \"$teststring$teststring\" 2>/dev/null` \\\n\t         = \"X$teststring$teststring\"; } >/dev/null 2>&1 &&\n\t      test $i != 17 # 1/2 MB should be enough\n      do\n        i=`expr $i + 1`\n        teststring=$teststring$teststring\n      done\n      # Only check the string length outside the loop.\n      lt_cv_sys_max_cmd_len=`expr \"X$teststring\" : \".*\" 2>&1`\n      teststring=\n      # Add a significant safety factor because C++ compilers can tack on\n      # massive amounts of additional arguments before passing them to the\n      # linker.  It appears as though 1/2 is a usable value.\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    fi\n    ;;\n  esac\n])\nif test -n $lt_cv_sys_max_cmd_len ; then\n  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)\nelse\n  AC_MSG_RESULT(none)\nfi\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n_LT_DECL([], [max_cmd_len], [0],\n    [What is the maximum length of a command?])\n])# LT_CMD_MAX_LEN\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_SYS_MAX_CMD_LEN], [LT_CMD_MAX_LEN])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [])\n\n\n# _LT_HEADER_DLFCN\n# ----------------\nm4_defun([_LT_HEADER_DLFCN],\n[AC_CHECK_HEADERS([dlfcn.h], [], [], [AC_INCLUDES_DEFAULT])dnl\n])# _LT_HEADER_DLFCN\n\n\n# _LT_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,\n#                      ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)\n# ----------------------------------------------------------------\nm4_defun([_LT_TRY_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test \"$cross_compiling\" = yes; then :\n  [$4]\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<_LT_EOF\n[#line __oline__ \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n/* When -fvisbility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined(__GNUC__) && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nvoid fnord () __attribute__((visibility(\"default\")));\n#endif\n\nvoid fnord () { int i=42; }\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else\n        {\n\t  if (dlsym( self,\"_fnord\"))  status = $lt_dlneed_uscore;\n          else puts (dlerror ());\n\t}\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n  return status;\n}]\n_LT_EOF\n  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext} 2>/dev/null; then\n    (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) $1 ;;\n      x$lt_dlneed_uscore) $2 ;;\n      x$lt_dlunknown|x*) $3 ;;\n    esac\n  else :\n    # compilation failed\n    $3\n  fi\nfi\nrm -fr conftest*\n])# _LT_TRY_DLOPEN_SELF\n\n\n# LT_SYS_DLOPEN_SELF\n# ------------------\nAC_DEFUN([LT_SYS_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test \"x$enable_dlopen\" != xyes; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=\"load_add_on\"\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32* | cegcc*)\n    lt_cv_dlopen=\"LoadLibrary\"\n    lt_cv_dlopen_libs=\n    ;;\n\n  cygwin*)\n    lt_cv_dlopen=\"dlopen\"\n    lt_cv_dlopen_libs=\n    ;;\n\n  darwin*)\n  # if libdl is installed we need to link against it\n    AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"],[\n    lt_cv_dlopen=\"dyld\"\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ])\n    ;;\n\n  *)\n    AC_CHECK_FUNC([shl_load],\n\t  [lt_cv_dlopen=\"shl_load\"],\n      [AC_CHECK_LIB([dld], [shl_load],\n\t    [lt_cv_dlopen=\"shl_load\" lt_cv_dlopen_libs=\"-ldld\"],\n\t[AC_CHECK_FUNC([dlopen],\n\t      [lt_cv_dlopen=\"dlopen\"],\n\t  [AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"],\n\t    [AC_CHECK_LIB([svld], [dlopen],\n\t\t  [lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-lsvld\"],\n\t      [AC_CHECK_LIB([dld], [dld_link],\n\t\t    [lt_cv_dlopen=\"dld_link\" lt_cv_dlopen_libs=\"-ldld\"])\n\t      ])\n\t    ])\n\t  ])\n\t])\n      ])\n    ;;\n  esac\n\n  if test \"x$lt_cv_dlopen\" != xno; then\n    enable_dlopen=yes\n  else\n    enable_dlopen=no\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=\"$CPPFLAGS\"\n    test \"x$ac_cv_header_dlfcn_h\" = xyes && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=\"$LDFLAGS\"\n    wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=\"$LIBS\"\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    AC_CACHE_CHECK([whether a program can dlopen itself],\n\t  lt_cv_dlopen_self, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,\n\t    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)\n    ])\n\n    if test \"x$lt_cv_dlopen_self\" = xyes; then\n      wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $lt_prog_compiler_static\\\"\n      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],\n\t  lt_cv_dlopen_self_static, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,\n\t    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)\n      ])\n    fi\n\n    CPPFLAGS=\"$save_CPPFLAGS\"\n    LDFLAGS=\"$save_LDFLAGS\"\n    LIBS=\"$save_LIBS\"\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n_LT_DECL([dlopen_support], [enable_dlopen], [0],\n\t [Whether dlopen is supported])\n_LT_DECL([dlopen_self], [enable_dlopen_self], [0],\n\t [Whether dlopen of programs is supported])\n_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],\n\t [Whether dlopen of statically linked programs is supported])\n])# LT_SYS_DLOPEN_SELF\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [])\n\n\n# _LT_COMPILER_C_O([TAGNAME])\n# ---------------------------\n# Check to see if options -c and -o are simultaneously supported by compiler.\n# This macro does not hard code the compiler like AC_PROG_CC_C_O.\nm4_defun([_LT_COMPILER_C_O],\n[m4_require([_LT_DECL_SED])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       _LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n     fi\n   fi\n   chmod u+w . 2>&AS_MESSAGE_LOG_FD\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n])\n_LT_TAGDECL([compiler_c_o], [lt_cv_prog_compiler_c_o], [1],\n\t[Does compiler simultaneously support -c and -o options?])\n])# _LT_COMPILER_C_O\n\n\n# _LT_COMPILER_FILE_LOCKS([TAGNAME])\n# ----------------------------------\n# Check to see if we can do hard links to lock some files if needed\nm4_defun([_LT_COMPILER_FILE_LOCKS],\n[m4_require([_LT_ENABLE_LOCK])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_COMPILER_C_O([$1])\n\nhard_links=\"nottested\"\nif test \"$_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)\" = no && test \"$need_locks\" != no; then\n  # do not overwrite the value of need_locks provided by the user\n  AC_MSG_CHECKING([if we can lock with hard links])\n  hard_links=yes\n  $RM conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  AC_MSG_RESULT([$hard_links])\n  if test \"$hard_links\" = no; then\n    AC_MSG_WARN([`$CC' does not support `-c -o', so `make -j' may be unsafe])\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n_LT_DECL([], [need_locks], [1], [Must we lock files when doing compilation?])\n])# _LT_COMPILER_FILE_LOCKS\n\n\n# _LT_CHECK_OBJDIR\n# ----------------\nm4_defun([_LT_CHECK_OBJDIR],\n[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],\n[rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null])\nobjdir=$lt_cv_objdir\n_LT_DECL([], [objdir], [0],\n         [The name of the directory that contains temporary libtool files])dnl\nm4_pattern_allow([LT_OBJDIR])dnl\nAC_DEFINE_UNQUOTED(LT_OBJDIR, \"$lt_cv_objdir/\",\n  [Define to the sub-directory in which libtool stores uninstalled libraries.])\n])# _LT_CHECK_OBJDIR\n\n\n# _LT_LINKER_HARDCODE_LIBPATH([TAGNAME])\n# --------------------------------------\n# Check hardcoding attributes.\nm4_defun([_LT_LINKER_HARDCODE_LIBPATH],\n[AC_MSG_CHECKING([how to hardcode library paths into programs])\n_LT_TAGVAR(hardcode_action, $1)=\nif test -n \"$_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\" ||\n   test -n \"$_LT_TAGVAR(runpath_var, $1)\" ||\n   test \"X$_LT_TAGVAR(hardcode_automatic, $1)\" = \"Xyes\" ; then\n\n  # We can hardcode non-existent directories.\n  if test \"$_LT_TAGVAR(hardcode_direct, $1)\" != no &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test \"$_LT_TAGVAR(hardcode_shlibpath_var, $1)\" != no &&\n     test \"$_LT_TAGVAR(hardcode_minus_L, $1)\" != no; then\n    # Linking always hardcodes the temporary library directory.\n    _LT_TAGVAR(hardcode_action, $1)=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    _LT_TAGVAR(hardcode_action, $1)=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  _LT_TAGVAR(hardcode_action, $1)=unsupported\nfi\nAC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, $1)])\n\nif test \"$_LT_TAGVAR(hardcode_action, $1)\" = relink ||\n   test \"$_LT_TAGVAR(inherit_rpath, $1)\" = yes; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test \"$shlibpath_overrides_runpath\" = yes ||\n     test \"$enable_shared\" = no; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n_LT_TAGDECL([], [hardcode_action], [0],\n    [How to hardcode a shared library path into an executable])\n])# _LT_LINKER_HARDCODE_LIBPATH\n\n\n# _LT_CMD_STRIPLIB\n# ----------------\nm4_defun([_LT_CMD_STRIPLIB],\n[m4_require([_LT_DECL_EGREP])\nstriplib=\nold_striplib=\nAC_MSG_CHECKING([whether stripping libraries is possible])\nif test -n \"$STRIP\" && $STRIP -V 2>&1 | $GREP \"GNU strip\" >/dev/null; then\n  test -z \"$old_striplib\" && old_striplib=\"$STRIP --strip-debug\"\n  test -z \"$striplib\" && striplib=\"$STRIP --strip-unneeded\"\n  AC_MSG_RESULT([yes])\nelse\n# FIXME - insert some real tests, host_os isn't really good enough\n  case $host_os in\n  darwin*)\n    if test -n \"$STRIP\" ; then\n      striplib=\"$STRIP -x\"\n      old_striplib=\"$STRIP -S\"\n      AC_MSG_RESULT([yes])\n    else\n      AC_MSG_RESULT([no])\n    fi\n    ;;\n  *)\n    AC_MSG_RESULT([no])\n    ;;\n  esac\nfi\n_LT_DECL([], [old_striplib], [1], [Commands to strip libraries])\n_LT_DECL([], [striplib], [1])\n])# _LT_CMD_STRIPLIB\n\n\n# _LT_SYS_DYNAMIC_LINKER([TAG])\n# -----------------------------\n# PORTME Fill in your ld.so characteristics\nm4_defun([_LT_SYS_DYNAMIC_LINKER],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_OBJDUMP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nAC_MSG_CHECKING([dynamic linker characteristics])\nm4_if([$1],\n\t[], [\nif test \"$GCC\" = yes; then\n  case $host_os in\n    darwin*) lt_awk_arg=\"/^libraries:/,/LR/\" ;;\n    *) lt_awk_arg=\"/^libraries:/\" ;;\n  esac\n  case $host_os in\n    mingw* | cegcc*) lt_sed_strip_eq=\"s,=\\([[A-Za-z]]:\\),\\1,g\" ;;\n    *) lt_sed_strip_eq=\"s,=/,/,g\" ;;\n  esac\n  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e \"s/^libraries://\" -e $lt_sed_strip_eq`\n  case $lt_search_path_spec in\n  *\\;*)\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED 's/;/ /g'`\n    ;;\n  *)\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED \"s/$PATH_SEPARATOR/ /g\"`\n    ;;\n  esac\n  # Ok, now we have the path, separated by spaces, we can step through it\n  # and add multilib dir if necessary.\n  lt_tmp_lt_search_path_spec=\n  lt_multi_os_dir=`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`\n  for lt_sys_path in $lt_search_path_spec; do\n    if test -d \"$lt_sys_path/$lt_multi_os_dir\"; then\n      lt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path/$lt_multi_os_dir\"\n    else\n      test -d \"$lt_sys_path\" && \\\n\tlt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path\"\n    fi\n  done\n  lt_search_path_spec=`$ECHO \"$lt_tmp_lt_search_path_spec\" | awk '\nBEGIN {RS=\" \"; FS=\"/|\\n\";} {\n  lt_foo=\"\";\n  lt_count=0;\n  for (lt_i = NF; lt_i > 0; lt_i--) {\n    if ($lt_i != \"\" && $lt_i != \".\") {\n      if ($lt_i == \"..\") {\n        lt_count++;\n      } else {\n        if (lt_count == 0) {\n          lt_foo=\"/\" $lt_i lt_foo;\n        } else {\n          lt_count--;\n        }\n      }\n    }\n  }\n  if (lt_foo != \"\") { lt_freq[[lt_foo]]++; }\n  if (lt_freq[[lt_foo]] == 1) { print lt_foo; }\n}'`\n  # AWK program above erroneously prepends '/' to C:/dos/paths\n  # for these hosts.\n  case $host_os in\n    mingw* | cegcc*) lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" |\\\n      $SED 's,/\\([[A-Za-z]]:\\),\\1,g'` ;;\n  esac\n  sys_lib_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $lt_NL2SP`\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi])\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=\".so\"\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\ncase $host_os in\naix3*)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='${libname}${release}${shared_ext}$major'\n  ;;\n\naix[[4-9]]*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test \"$host_cpu\" = ia64; then\n    # AIX 5 supports IA64\n    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line `#! .'.  This would cause the generated library to\n    # depend on `.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[[01]] | aix4.[[01]].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | ${CC} -E - | $GREP yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    if test \"$aix_use_runtimelinking\" = yes; then\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    else\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='${libname}${release}.a $libname.a'\n      soname_spec='${libname}${release}${shared_ext}$major'\n    fi\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  case $host_cpu in\n  powerpc)\n    # Since July 2007 AmigaOS4 officially supports .so libraries.\n    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    ;;\n  m68k)\n    library_names_spec='$libname.ixlibrary $libname.a'\n    # Create ${libname}_ixlibrary.a entries in /sys/libs.\n    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all \"$lib\" | $SED '\\''s%^.*/\\([[^/]]*\\)\\.ixlibrary$%\\1%'\\''`; test $RM /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n    ;;\n  esac\n  ;;\n\nbeos*)\n  library_names_spec='${libname}${shared_ext}'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[[45]]*)\n  version_type=linux\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32* | cegcc*)\n  version_type=windows\n  shrext_cmds=\".dll\"\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$host_os in\n  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\${file}`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\${base_file}'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname~\n      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n      fi'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\nm4_if([$1], [],[\n      sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/lib/w32api\"])\n      ;;\n    mingw* | cegcc*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      ;;\n    esac\n    ;;\n\n  *)\n    library_names_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext} $libname.lib'\n    ;;\n  esac\n  dynamic_linker='Win32 ld.exe'\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${major}$shared_ext ${libname}$shared_ext'\n  soname_spec='${libname}${release}${major}$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\nm4_if([$1], [],[\n  sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/local/lib\"])\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[[123]]*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[[01]]* | freebsdelf3.[[01]]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[[2-9]]* | freebsdelf3.[[2-9]]* | \\\n  freebsd4.[[0-5]] | freebsdelf4.[[0-5]] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  *) # from 4.6 on, and DragonFly\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\ngnu*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  hardcode_into_libs=yes\n  ;;\n\nhaiku*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  dynamic_linker=\"$host_os runtime_loader\"\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/beos/system/lib'\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    if test \"X$HPUX_IA64_MODE\" = X32; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n    fi\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  hppa*64*)\n    shrext_cmds='.sl'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...\n  postinstall_cmds='chmod 555 $lib'\n  # or fails outright, so override atomically:\n  install_override_mode=555\n  ;;\n\ninterix[[3-9]]*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test \"$lt_cv_prog_gnu_ld\" = yes; then\n\t\tversion_type=linux\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib${libsuff} /lib${libsuff}\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\n# This must be Linux ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n\n  # Some binutils ld are patched to set DT_RUNPATH\n  AC_CACHE_VAL([lt_cv_shlibpath_overrides_runpath],\n    [lt_cv_shlibpath_overrides_runpath=no\n    save_LDFLAGS=$LDFLAGS\n    save_libdir=$libdir\n    eval \"libdir=/foo; wl=\\\"$_LT_TAGVAR(lt_prog_compiler_wl, $1)\\\"; \\\n\t LDFLAGS=\\\"\\$LDFLAGS $_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\\\"\"\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n      [AS_IF([ ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep \"RUNPATH.*$libdir\" >/dev/null],\n\t [lt_cv_shlibpath_overrides_runpath=yes])])\n    LDFLAGS=$save_LDFLAGS\n    libdir=$save_libdir\n    ])\n  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Append ld.so.conf contents to the search path\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/\"//g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\n*nto* | *qnx*)\n  version_type=qnx\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='ldqnx.so'\n  ;;\n\nopenbsd*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=\"/usr/lib\"\n  need_lib_prefix=no\n  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.\n  case $host_os in\n    openbsd3.3 | openbsd3.3.*)\tneed_version=yes ;;\n    *)\t\t\t\tneed_version=no  ;;\n  esac\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n    case $host_os in\n      openbsd2.[[89]] | openbsd2.[[89]].*)\n\tshlibpath_overrides_runpath=no\n\t;;\n      *)\n\tshlibpath_overrides_runpath=yes\n\t;;\n      esac\n  else\n    shlibpath_overrides_runpath=yes\n  fi\n  ;;\n\nos2*)\n  libname_spec='$name'\n  shrext_cmds=\".dll\"\n  need_lib_prefix=no\n  library_names_spec='$libname${shared_ext} $libname.a'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=LIBPATH\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=\"$sys_lib_search_path_spec\"\n  ;;\n\nrdos*)\n  dynamic_linker=no\n  ;;\n\nsolaris*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test \"$with_gnu_ld\" = yes; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec ;then\n    version_type=linux\n    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'\n    soname_spec='$libname${shared_ext}.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=freebsd-elf\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  if test \"$with_gnu_ld\" = yes; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\ntpf*)\n  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nuts4*)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\nAC_MSG_RESULT([$dynamic_linker])\ntest \"$dynamic_linker\" = no && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test \"$GCC\" = yes; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\nif test \"${lt_cv_sys_lib_search_path_spec+set}\" = set; then\n  sys_lib_search_path_spec=\"$lt_cv_sys_lib_search_path_spec\"\nfi\nif test \"${lt_cv_sys_lib_dlsearch_path_spec+set}\" = set; then\n  sys_lib_dlsearch_path_spec=\"$lt_cv_sys_lib_dlsearch_path_spec\"\nfi\n\n_LT_DECL([], [variables_saved_for_relink], [1],\n    [Variables whose values should be saved in libtool wrapper scripts and\n    restored at link time])\n_LT_DECL([], [need_lib_prefix], [0],\n    [Do we need the \"lib\" prefix for modules?])\n_LT_DECL([], [need_version], [0], [Do we need a version for libraries?])\n_LT_DECL([], [version_type], [0], [Library versioning type])\n_LT_DECL([], [runpath_var], [0],  [Shared library runtime path variable])\n_LT_DECL([], [shlibpath_var], [0],[Shared library path variable])\n_LT_DECL([], [shlibpath_overrides_runpath], [0],\n    [Is shlibpath searched before the hard-coded library search path?])\n_LT_DECL([], [libname_spec], [1], [Format of library name prefix])\n_LT_DECL([], [library_names_spec], [1],\n    [[List of archive names.  First name is the real one, the rest are links.\n    The last name is the one that the linker finds with -lNAME]])\n_LT_DECL([], [soname_spec], [1],\n    [[The coded name of the library, if different from the real name]])\n_LT_DECL([], [install_override_mode], [1],\n    [Permission mode override for installation of shared libraries])\n_LT_DECL([], [postinstall_cmds], [2],\n    [Command to use after installation of a shared archive])\n_LT_DECL([], [postuninstall_cmds], [2],\n    [Command to use after uninstallation of a shared archive])\n_LT_DECL([], [finish_cmds], [2],\n    [Commands used to finish a libtool library installation in a directory])\n_LT_DECL([], [finish_eval], [1],\n    [[As \"finish_cmds\", except a single script fragment to be evaled but\n    not shown]])\n_LT_DECL([], [hardcode_into_libs], [0],\n    [Whether we should hardcode library paths into libraries])\n_LT_DECL([], [sys_lib_search_path_spec], [2],\n    [Compile-time system search path for libraries])\n_LT_DECL([], [sys_lib_dlsearch_path_spec], [2],\n    [Run-time system search path for libraries])\n])# _LT_SYS_DYNAMIC_LINKER\n\n\n# _LT_PATH_TOOL_PREFIX(TOOL)\n# --------------------------\n# find a file program which can recognize shared library\nAC_DEFUN([_LT_PATH_TOOL_PREFIX],\n[m4_require([_LT_DECL_EGREP])dnl\nAC_MSG_CHECKING([for $1])\nAC_CACHE_VAL(lt_cv_path_MAGIC_CMD,\n[case $MAGIC_CMD in\n[[\\\\/*] |  ?:[\\\\/]*])\n  lt_cv_path_MAGIC_CMD=\"$MAGIC_CMD\" # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=\"$MAGIC_CMD\"\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\ndnl $ac_dummy forces splitting on constant user-supplied paths.\ndnl POSIX.2 word splitting is done only on the output of word expansions,\ndnl not every word.  This closes a longstanding sh security hole.\n  ac_dummy=\"m4_if([$2], , $PATH, [$2])\"\n  for ac_dir in $ac_dummy; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f $ac_dir/$1; then\n      lt_cv_path_MAGIC_CMD=\"$ac_dir/$1\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=\"$lt_cv_path_MAGIC_CMD\"\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<_LT_EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\n_LT_EOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\n  MAGIC_CMD=\"$lt_save_MAGIC_CMD\"\n  ;;\nesac])\nMAGIC_CMD=\"$lt_cv_path_MAGIC_CMD\"\nif test -n \"$MAGIC_CMD\"; then\n  AC_MSG_RESULT($MAGIC_CMD)\nelse\n  AC_MSG_RESULT(no)\nfi\n_LT_DECL([], [MAGIC_CMD], [0],\n\t [Used to examine libraries when file_magic_cmd begins with \"file\"])dnl\n])# _LT_PATH_TOOL_PREFIX\n\n# Old name:\nAU_ALIAS([AC_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PATH_TOOL_PREFIX], [])\n\n\n# _LT_PATH_MAGIC\n# --------------\n# find a file program which can recognize a shared library\nm4_defun([_LT_PATH_MAGIC],\n[_LT_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    _LT_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)\n  else\n    MAGIC_CMD=:\n  fi\nfi\n])# _LT_PATH_MAGIC\n\n\n# LT_PATH_LD\n# ----------\n# find the pathname to the GNU or non-GNU linker\nAC_DEFUN([LT_PATH_LD],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PROG_ECHO_BACKSLASH])dnl\n\nAC_ARG_WITH([gnu-ld],\n    [AS_HELP_STRING([--with-gnu-ld],\n\t[assume the C compiler uses GNU ld @<:@default=no@:>@])],\n    [test \"$withval\" = no || with_gnu_ld=yes],\n    [with_gnu_ld=no])dnl\n\nac_prog=ld\nif test \"$GCC\" = yes; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  AC_MSG_CHECKING([for ld used by $CC])\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [[\\\\/]]* | ?:[[\\\\/]]*)\n      re_direlt='/[[^/]][[^/]]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=\"$ac_prog\"\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test \"$with_gnu_ld\" = yes; then\n  AC_MSG_CHECKING([for GNU ld])\nelse\n  AC_MSG_CHECKING([for non-GNU ld])\nfi\nAC_CACHE_VAL(lt_cv_path_LD,\n[if test -z \"$LD\"; then\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=\"$ac_dir/$ac_prog\"\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest \"$with_gnu_ld\" != no && break\n\t;;\n      *)\n\ttest \"$with_gnu_ld\" != yes && break\n\t;;\n      esac\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\nelse\n  lt_cv_path_LD=\"$LD\" # Let the user override the test with a path.\nfi])\nLD=\"$lt_cv_path_LD\"\nif test -n \"$LD\"; then\n  AC_MSG_RESULT($LD)\nelse\n  AC_MSG_RESULT(no)\nfi\ntest -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\n_LT_PATH_LD_GNU\nAC_SUBST([LD])\n\n_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])\n])# LT_PATH_LD\n\n# Old names:\nAU_ALIAS([AM_PROG_LD], [LT_PATH_LD])\nAU_ALIAS([AC_PROG_LD], [LT_PATH_LD])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_LD], [])\ndnl AC_DEFUN([AC_PROG_LD], [])\n\n\n# _LT_PATH_LD_GNU\n#- --------------\nm4_defun([_LT_PATH_LD_GNU],\n[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,\n[# I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac])\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n])# _LT_PATH_LD_GNU\n\n\n# _LT_CMD_RELOAD\n# --------------\n# find reload flag for linker\n#   -- PORTME Some linkers may need a different reload flag.\nm4_defun([_LT_CMD_RELOAD],\n[AC_CACHE_CHECK([for $LD option to reload object files],\n  lt_cv_ld_reload_flag,\n  [lt_cv_ld_reload_flag='-r'])\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  darwin*)\n    if test \"$GCC\" = yes; then\n      reload_cmds='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n_LT_TAGDECL([], [reload_flag], [1], [How to create reloadable object files])dnl\n_LT_TAGDECL([], [reload_cmds], [2])dnl\n])# _LT_CMD_RELOAD\n\n\n# _LT_CHECK_MAGIC_METHOD\n# ----------------------\n# how to check for library dependencies\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_MAGIC_METHOD],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nAC_CACHE_CHECK([how to recognize dependent libraries],\nlt_cv_deplibs_check_method,\n[lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# `unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# which responds to the $file_magic_cmd with a given extended regex.\n# If you have `file' or equivalent on your system and you're not sure\n# whether `pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix[[4-9]]*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[[45]]*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump',\n  # unless we find 'file', for example because we are cross-compiling.\n  # func_win32_libid assumes BSD nm, so disallow it if using MS dumpbin.\n  if ( test \"$lt_cv_nm_interface\" = \"BSD nm\" && file / ) >/dev/null 2>&1; then\n    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n    lt_cv_file_magic_cmd='func_win32_libid'\n  else\n    lt_cv_deplibs_check_method='file_magic file format pei*-i386(.*architecture: i386)?'\n    lt_cv_file_magic_cmd='$OBJDUMP -f'\n  fi\n  ;;\n\ncegcc*)\n  # use the weaker test based on 'objdump'. See mingw*.\n  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | dragonfly*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\ngnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhaiku*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case $host_cpu in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF[ -][0-9][0-9])(-bit)?( [LM]SB)? shared object( file)?[, -]* PA-RISC [0-9]\\.[0-9]']\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]]\\.[[0-9]]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\ninterix[[3-9]]*)\n  # PIC code is broken on Interix 3.x, that's why |\\.a not |_pic\\.a here\n  lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|\\.a)$'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be Linux ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\n*nto* | *qnx*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nopenbsd*)\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nrdos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.3*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  pc)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\ntpf*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n])\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n\n_LT_DECL([], [deplibs_check_method], [1],\n    [Method to check whether dependent libraries are shared objects])\n_LT_DECL([], [file_magic_cmd], [1],\n    [Command to use when deplibs_check_method == \"file_magic\"])\n])# _LT_CHECK_MAGIC_METHOD\n\n\n# LT_PATH_NM\n# ----------\n# find the pathname to a BSD- or MS-compatible name lister\nAC_DEFUN([LT_PATH_NM],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,\n[if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=\"$NM\"\nelse\n  lt_nm_to_check=\"${ac_tool_prefix}nm\"\n  if test -n \"$ac_tool_prefix\" && test \"$build\" = \"$host\"; then\n    lt_nm_to_check=\"$lt_nm_to_check nm\"\n  fi\n  for lt_tmp_nm in $lt_nm_to_check; do\n    lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do\n      IFS=\"$lt_save_ifs\"\n      test -z \"$ac_dir\" && ac_dir=.\n      tmp_nm=\"$ac_dir/$lt_tmp_nm\"\n      if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\" ; then\n\t# Check to see if the nm accepts a BSD-compat flag.\n\t# Adding the `sed 1q' prevents false positives on HP-UX, which says:\n\t#   nm: unknown option \"B\" ignored\n\t# Tru64's nm complains that /dev/null is an invalid object file\n\tcase `\"$tmp_nm\" -B /dev/null 2>&1 | sed '1q'` in\n\t*/dev/null* | *'Invalid file or object type'*)\n\t  lt_cv_path_NM=\"$tmp_nm -B\"\n\t  break\n\t  ;;\n\t*)\n\t  case `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t  */dev/null*)\n\t    lt_cv_path_NM=\"$tmp_nm -p\"\n\t    break\n\t    ;;\n\t  *)\n\t    lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t    continue # so that we can try to find one that supports BSD flags\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n      fi\n    done\n    IFS=\"$lt_save_ifs\"\n  done\n  : ${lt_cv_path_NM=no}\nfi])\nif test \"$lt_cv_path_NM\" != \"no\"; then\n  NM=\"$lt_cv_path_NM\"\nelse\n  # Didn't find any BSD compatible name lister, look for dumpbin.\n  if test -n \"$DUMPBIN\"; then :\n    # Let the user override the test.\n  else\n    AC_CHECK_TOOLS(DUMPBIN, [dumpbin \"link -dump\"], :)\n    case `$DUMPBIN -symbols /dev/null 2>&1 | sed '1q'` in\n    *COFF*)\n      DUMPBIN=\"$DUMPBIN -symbols\"\n      ;;\n    *)\n      DUMPBIN=:\n      ;;\n    esac\n  fi\n  AC_SUBST([DUMPBIN])\n  if test \"$DUMPBIN\" != \":\"; then\n    NM=\"$DUMPBIN\"\n  fi\nfi\ntest -z \"$NM\" && NM=nm\nAC_SUBST([NM])\n_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl\n\nAC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],\n  [lt_cv_nm_interface=\"BSD nm\"\n  echo \"int some_variable = 0;\" > conftest.$ac_ext\n  (eval echo \"\\\"\\$as_me:$LINENO: $ac_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$ac_compile\" 2>conftest.err)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: output\\\"\" >&AS_MESSAGE_LOG_FD)\n  cat conftest.out >&AS_MESSAGE_LOG_FD\n  if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n    lt_cv_nm_interface=\"MS dumpbin\"\n  fi\n  rm -f conftest*])\n])# LT_PATH_NM\n\n# Old names:\nAU_ALIAS([AM_PROG_NM], [LT_PATH_NM])\nAU_ALIAS([AC_PROG_NM], [LT_PATH_NM])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_NM], [])\ndnl AC_DEFUN([AC_PROG_NM], [])\n\n\n# LT_LIB_M\n# --------\n# check for math library\nAC_DEFUN([LT_LIB_M],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nLIBM=\ncase $host in\n*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)\n  # These system don't have libm, or don't need it\n  ;;\n*-ncr-sysv4.3*)\n  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=\"-lmw\")\n  AC_CHECK_LIB(m, cos, LIBM=\"$LIBM -lm\")\n  ;;\n*)\n  AC_CHECK_LIB(m, cos, LIBM=\"-lm\")\n  ;;\nesac\nAC_SUBST([LIBM])\n])# LT_LIB_M\n\n# Old name:\nAU_ALIAS([AC_CHECK_LIBM], [LT_LIB_M])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_CHECK_LIBM], [])\n\n\n# _LT_COMPILER_NO_RTTI([TAGNAME])\n# -------------------------------\nm4_defun([_LT_COMPILER_NO_RTTI],\n[m4_require([_LT_TAG_COMPILER])dnl\n\n_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n\nif test \"$GCC\" = yes; then\n  case $cc_basename in\n  nvcc*)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -Xcompiler -fno-builtin' ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin' ;;\n  esac\n\n  _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],\n    lt_cv_prog_compiler_rtti_exceptions,\n    [-fno-rtti -fno-exceptions], [],\n    [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\"$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions\"])\nfi\n_LT_TAGDECL([no_builtin_flag], [lt_prog_compiler_no_builtin_flag], [1],\n\t[Compiler flag to turn off builtin functions])\n])# _LT_COMPILER_NO_RTTI\n\n\n# _LT_CMD_GLOBAL_SYMBOLS\n# ----------------------\nm4_defun([_LT_CMD_GLOBAL_SYMBOLS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_PROG_AWK])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_TAG_COMPILER])dnl\n\n# Check for command to grab the raw symbol name followed by C symbol from nm.\nAC_MSG_CHECKING([command to parse $NM output from $compiler object])\nAC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],\n[\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[[BCDEGRST]]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([[_A-Za-z]][[_A-Za-z0-9]]*\\)'\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[[BCDT]]'\n  ;;\ncygwin* | mingw* | pw32* | cegcc*)\n  symcode='[[ABCDGISTW]]'\n  ;;\nhpux*)\n  if test \"$host_cpu\" = ia64; then\n    symcode='[[ABCDEGRST]]'\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[[BCDEGRST]]'\n  ;;\nosf*)\n  symcode='[[BCDEGQRST]]'\n  ;;\nsolaris*)\n  symcode='[[BDRT]]'\n  ;;\nsco3.2v5*)\n  symcode='[[DT]]'\n  ;;\nsysv4.2uw2*)\n  symcode='[[DT]]'\n  ;;\nsysv5* | sco5v6* | unixware* | OpenUNIX*)\n  symcode='[[ABDT]]'\n  ;;\nsysv4)\n  symcode='[[DFNSTU]]'\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[[ABCDGIRSTW]]' ;;\nesac\n\n# Transform an extracted symbol line into a proper C declaration.\n# Some systems (esp. on ia64) link data and code symbols differently,\n# so use this general approach.\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n -e 's/^T .* \\(.*\\)$/extern int \\1();/p' -e 's/^$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n -e 's/^: \\([[^ ]]*\\) $/  {\\\\\\\"\\1\\\\\\\", (void *) 0},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"\\2\\\", (void *) \\&\\2},/p'\"\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix=\"sed -n -e 's/^: \\([[^ ]]*\\) $/  {\\\\\\\"\\1\\\\\\\", (void *) 0},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\(lib[[^ ]]*\\)$/  {\\\"\\2\\\", (void *) \\&\\2},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"lib\\2\\\", (void *) \\&\\2},/p'\"\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`$ECHO 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# Try without a prefix underscore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  if test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n    # Fake it for dumpbin and say T for any non-static function\n    # and D for any global variable.\n    # Also find C++ and __fastcall symbols from MSVC++,\n    # which start with @ or ?.\n    lt_cv_sys_global_symbol_pipe=\"$AWK ['\"\\\n\"     {last_section=section; section=\\$ 3};\"\\\n\"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};\"\\\n\"     \\$ 0!~/External *\\|/{next};\"\\\n\"     / 0+ UNDEF /{next}; / UNDEF \\([^|]\\)*()/{next};\"\\\n\"     {if(hide[section]) next};\"\\\n\"     {f=0}; \\$ 0~/\\(\\).*\\|/{f=1}; {printf f ? \\\"T \\\" : \\\"D \\\"};\"\\\n\"     {split(\\$ 0, a, /\\||\\r/); split(a[2], s)};\"\\\n\"     s[1]~/^[@?]/{print s[1], s[1]; next};\"\\\n\"     s[1]~prfx {split(s[1],t,\\\"@\\\"); print t[1], substr(t[1],length(prfx))}\"\\\n\"     ' prfx=^$ac_symprfx]\"\n  else\n    lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[[\t ]]\\($symcode$symcode*\\)[[\t ]][[\t ]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n  fi\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<_LT_EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(void);\nvoid nm_test_func(void){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\n_LT_EOF\n\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| \"$lt_cv_sys_global_symbol_pipe\" \\> $nlist) && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if $GREP ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif $GREP ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<_LT_EOF > conftest.$ac_ext\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n_LT_EOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | $GREP -v main >> conftest.$ac_ext'\n\n\t  cat <<_LT_EOF >> conftest.$ac_ext\n\n/* The mapping between symbol names and symbols.  */\nconst struct {\n  const char *name;\n  void       *address;\n}\nlt__PROGRAM__LTX_preloaded_symbols[[]] =\n{\n  { \"@PROGRAM@\", (void *) 0 },\n_LT_EOF\n\t  $SED \"s/^$symcode$symcode* \\(.*\\) \\(.*\\)$/  {\\\"\\2\\\", (void *) \\&\\2},/\" < \"$nlist\" | $GREP -v main >> conftest.$ac_ext\n\t  cat <<\\_LT_EOF >> conftest.$ac_ext\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt__PROGRAM__LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n_LT_EOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_save_LIBS=\"$LIBS\"\n\t  lt_save_CFLAGS=\"$CFLAGS\"\n\t  LIBS=\"conftstm.$ac_objext\"\n\t  CFLAGS=\"$CFLAGS$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\"\n\t  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext}; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=\"$lt_save_LIBS\"\n\t  CFLAGS=\"$lt_save_CFLAGS\"\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&AS_MESSAGE_LOG_FD\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&AS_MESSAGE_LOG_FD\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"$progname: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.$ac_ext >&5\n  fi\n  rm -rf conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test \"$pipe_works\" = yes; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n])\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  AC_MSG_RESULT(failed)\nelse\n  AC_MSG_RESULT(ok)\nfi\n\n_LT_DECL([global_symbol_pipe], [lt_cv_sys_global_symbol_pipe], [1],\n    [Take the output of nm and produce a listing of raw symbols and C names])\n_LT_DECL([global_symbol_to_cdecl], [lt_cv_sys_global_symbol_to_cdecl], [1],\n    [Transform the output of nm in a proper C declaration])\n_LT_DECL([global_symbol_to_c_name_address],\n    [lt_cv_sys_global_symbol_to_c_name_address], [1],\n    [Transform the output of nm in a C name address pair])\n_LT_DECL([global_symbol_to_c_name_address_lib_prefix],\n    [lt_cv_sys_global_symbol_to_c_name_address_lib_prefix], [1],\n    [Transform the output of nm in a C name address pair when lib prefix is needed])\n]) # _LT_CMD_GLOBAL_SYMBOLS\n\n\n# _LT_COMPILER_PIC([TAGNAME])\n# ---------------------------\nm4_defun([_LT_COMPILER_PIC],\n[m4_require([_LT_TAG_COMPILER])dnl\n_LT_TAGVAR(lt_prog_compiler_wl, $1)=\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n_LT_TAGVAR(lt_prog_compiler_static, $1)=\n\nAC_MSG_CHECKING([for $compiler option to produce PIC])\nm4_if([$1], [CXX], [\n  # C++ specific cases for pic, static, wl, etc.\n  if test \"$GXX\" = yes; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the `-m68020' flag to GCC prevents building anything better,\n            # like `-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | cygwin* | os2* | pw32* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n      ;;\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n    *qnx* | *nto*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix[[4-9]]*)\n\t# All AIX code is PIC.\n\tif test \"$host_cpu\" = ia64; then\n\t  # AIX 5 now supports IA64 processor\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\telse\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_TAGVAR(lt_prog_compiler_static, $1)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n\t    if test \"$host_cpu\" != ia64; then\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n\t    case $host_cpu in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      interix*)\n\t# This is c89, which is MS Visual C++ (no shared libs)\n\t# Anyone wants to do a port?\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux* | k*bsd*-gnu | kopensolaris*-gnu)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    ;;\n\t  ecpc* )\n\t    # old Intel C++ for x86_64 which still supported -KPIC.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  icpc* )\n\t    # Intel C++, used to be incompatible with GCC.\n\t    # ICC 10 doesn't accept -KPIC any more.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  pgCC* | pgcpp*)\n\t    # Portland Group C++ compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  xlc* | xlC* | bgxl[[cC]]* | mpixl[[cC]]*)\n\t    # IBM XL 8.0, 9.0 on PPC and BlueGene\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd*)\n\t;;\n      *qnx* | *nto*)\n        # QNX uses GNU C++, but need to define -shared option too, otherwise\n        # it will coredump.\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n        ;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      vxworks*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n\t;;\n    esac\n  fi\n],\n[\n  if test \"$GCC\" = yes; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the `-m68020' flag to GCC prevents building anything better,\n            # like `-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      enable_shared=no\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n\n    case $cc_basename in\n    nvcc*) # Cuda Compiler Driver 2.2\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Xlinker '\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-Xcompiler -fPIC'\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      else\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC (with -KPIC) is the default.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    linux* | k*bsd*-gnu | kopensolaris*-gnu)\n      case $cc_basename in\n      # old Intel for x86_64 which still supported -KPIC.\n      ecc*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # icc used to be incompatible with GCC.\n      # ICC 10 doesn't accept -KPIC any more.\n      icc* | ifort*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # Lahey Fortran 8.1.\n      lf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='--shared'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='--static'\n\t;;\n      pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      ccc*)\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n        # All Alpha code is PIC.\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n        ;;\n      xl* | bgxl* | bgf* | mpixl*)\n\t# IBM XL C 8.0/Fortran 10.1, 11.1 on PPC and BlueGene\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t;;\n      *)\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ F* | *Sun*Fortran*)\n\t  # Sun Fortran 8.3 passes all unrecognized flags to the linker\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)=''\n\t  ;;\n\t*Sun\\ C*)\n\t  # Sun C 5.9\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  ;;\n\tesac\n\t;;\n      esac\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    osf3* | osf4* | osf5*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # All OSF/1 code is PIC.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    rdos*)\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec ;then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    unicos*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n    esac\n  fi\n])\ncase $host_os in\n  # For platforms which do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n    ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])\"\n    ;;\nesac\nAC_MSG_RESULT([$_LT_TAGVAR(lt_prog_compiler_pic, $1)])\n_LT_TAGDECL([wl], [lt_prog_compiler_wl], [1],\n\t[How to pass a linker flag through the compiler])\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n  _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, $1) works],\n    [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, $1)],\n    [$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])], [],\n    [case $_LT_TAGVAR(lt_prog_compiler_pic, $1) in\n     \"\" | \" \"*) ;;\n     *) _LT_TAGVAR(lt_prog_compiler_pic, $1)=\" $_LT_TAGVAR(lt_prog_compiler_pic, $1)\" ;;\n     esac],\n    [_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n     _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])\nfi\n_LT_TAGDECL([pic_flag], [lt_prog_compiler_pic], [1],\n\t[Additional compiler flags for building library objects])\n\n#\n# Check to make sure the static flag actually works.\n#\nwl=$_LT_TAGVAR(lt_prog_compiler_wl, $1) eval lt_tmp_static_flag=\\\"$_LT_TAGVAR(lt_prog_compiler_static, $1)\\\"\n_LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works],\n  _LT_TAGVAR(lt_cv_prog_compiler_static_works, $1),\n  $lt_tmp_static_flag,\n  [],\n  [_LT_TAGVAR(lt_prog_compiler_static, $1)=])\n_LT_TAGDECL([link_static_flag], [lt_prog_compiler_static], [1],\n\t[Compiler flag to prevent dynamic linking])\n])# _LT_COMPILER_PIC\n\n\n# _LT_LINKER_SHLIBS([TAGNAME])\n# ----------------------------\n# See if the linker supports building shared libraries.\nm4_defun([_LT_LINKER_SHLIBS],\n[AC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\nm4_if([$1], [CXX], [\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  case $host_os in\n  aix[[4-9]]*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to AIX nm, but means don't demangle with GNU nm\n    # Also, AIX nm treats weak defined symbols like other global defined\n    # symbols, whereas GNU nm marks them as \"W\".\n    if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n    else\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    _LT_TAGVAR(export_symbols_cmds, $1)=\"$ltdll_cmds\"\n  ;;\n  cygwin* | mingw* | cegcc*)\n    _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;/^.*[[ ]]__nm__/s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n  ;;\n  *)\n    _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  ;;\n  esac\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n], [\n  runpath_var=\n  _LT_TAGVAR(allow_undefined_flag, $1)=\n  _LT_TAGVAR(always_export_symbols, $1)=no\n  _LT_TAGVAR(archive_cmds, $1)=\n  _LT_TAGVAR(archive_expsym_cmds, $1)=\n  _LT_TAGVAR(compiler_needs_object, $1)=no\n  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n  _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(hardcode_automatic, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n  _LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n  _LT_TAGVAR(hardcode_minus_L, $1)=no\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  _LT_TAGVAR(inherit_rpath, $1)=no\n  _LT_TAGVAR(link_all_deplibs, $1)=unknown\n  _LT_TAGVAR(module_cmds, $1)=\n  _LT_TAGVAR(module_expsym_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_new_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_expsyms_cmds, $1)=\n  _LT_TAGVAR(thread_safe_flag_spec, $1)=\n  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  _LT_TAGVAR(include_expsyms, $1)=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ` (' and `)$', so one must not match beginning or\n  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',\n  # as well as any symbol that contains `d'.\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  # Exclude shared library initialization/finalization symbols.\ndnl Note also adjust exclude_expsyms for C++ above.\n  extract_expsyms_cmds=\n\n  case $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test \"$GCC\" != yes; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++)\n    with_gnu_ld=yes\n    ;;\n  openbsd*)\n    with_gnu_ld=no\n    ;;\n  esac\n\n  _LT_TAGVAR(ld_shlibs, $1)=yes\n\n  # On some targets, GNU ld is compatible enough with the native linker\n  # that we're better off using the native interface for both.\n  lt_use_gnu_ld_interface=no\n  if test \"$with_gnu_ld\" = yes; then\n    case $host_os in\n      aix*)\n\t# The AIX port of GNU ld has always aspired to compatibility\n\t# with the native linker.  However, as the warning in the GNU ld\n\t# block says, versions before 2.19.5* couldn't really create working\n\t# shared libraries, regardless of the interface used.\n\tcase `$LD -v 2>&1` in\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.19.5*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.[[2-9]]*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ [[3-9]]*) ;;\n\t  *)\n\t    lt_use_gnu_ld_interface=yes\n\t    ;;\n\tesac\n\t;;\n      *)\n\tlt_use_gnu_ld_interface=yes\n\t;;\n    esac\n  fi\n\n  if test \"$lt_use_gnu_ld_interface\" = yes; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='${wl}'\n\n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n    else\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v 2>&1` in\n      *GNU\\ gold*) supports_anon_versioning=yes ;;\n      *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n\n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix[[3-9]]*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test \"$host_cpu\" != ia64; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.19, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to install binutils\n*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.\n*** You will then need to restart the configuration process.\n\n_LT_EOF\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n      # as there is no search path for DLLs.\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-all-symbols'\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=no\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/'\\'' | $SED -e '\\''/^[[AITW]][[ ]]/s/.*[[ ]]//'\\'' | sort | uniq > $export_symbols'\n\n      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t# If the export-symbols file already is a .def file (1st line\n\t# is EXPORTS), use it as is; otherwise, prepend...\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t  cp $export_symbols $output_objdir/$soname.def;\n\telse\n\t  echo EXPORTS > $output_objdir/$soname.def;\n\t  cat $export_symbols >> $output_objdir/$soname.def;\n\tfi~\n\t$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    haiku*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    interix[[3-9]]*)\n      _LT_TAGVAR(hardcode_direct, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n      # Instead, shared libraries are loaded at an image base (0x10000000 by\n      # default) and relocated if they conflict, which is a slow very memory\n      # consuming and fragmenting process.  To avoid this, we pick a random,\n      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s,^,_,\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      ;;\n\n    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)\n      tmp_diet=no\n      if test \"$host_os\" = linux-dietlibc; then\n\tcase $cc_basename in\n\t  diet\\ *) tmp_diet=yes;;\t# linux-dietlibc with static linking (!diet-dyn)\n\tesac\n      fi\n      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \\\n\t && test \"$tmp_diet\" = no\n      then\n\ttmp_addflag=\n\ttmp_sharedflag='-shared'\n\tcase $cc_basename,$host_cpu in\n        pgcc*)\t\t\t\t# Portland Group C compiler\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  tmp_addflag=' $pic_flag'\n\t  ;;\n\tpgf77* | pgf90* | pgf95* | pgfortran*)\n\t\t\t\t\t# Portland Group f77 and f90 compilers\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  tmp_addflag=' $pic_flag -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tlf95*)\t\t\t\t# Lahey Fortran 8.1\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n\t  tmp_sharedflag='--shared' ;;\n\txl[[cC]]* | bgxl[[cC]]* | mpixl[[cC]]*) # IBM XL C 8.0 on PPC (deal with xlf below)\n\t  tmp_sharedflag='-qmkshrobj'\n\t  tmp_addflag= ;;\n\tnvcc*)\t# Cuda Compiler Driver 2.2\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  ;;\n\tesac\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ C*)\t\t\t# Sun C 5.9\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  tmp_sharedflag='-G' ;;\n\t*Sun\\ F*)\t\t\t# Sun Fortran 8.3\n\t  tmp_sharedflag='-G' ;;\n\tesac\n\t_LT_TAGVAR(archive_cmds, $1)='$CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\n        if test \"x$supports_anon_versioning\" = xyes; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n\t    cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n\t    echo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t    $CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'\n        fi\n\n\tcase $cc_basename in\n\txlf* | bgf* | bgxlf* | mpixlf*)\n\t  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='--whole-archive$convenience --no-whole-archive'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='-rpath $libdir'\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $compiler_flags -soname $soname -o $lib'\n\t  if test \"x$supports_anon_versioning\" = xyes; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n\t      cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n\t      echo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t      $LD -shared $libobjs $deplibs $compiler_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'\n\t  fi\n\t  ;;\n\tesac\n      else\n        _LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris*)\n      if $LD -v 2>&1 | $GREP 'BFD 2\\.8' > /dev/null; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.1[[0-5]].*)\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not\n*** reliably create shared libraries on SCO systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n\t;;\n\t*)\n\t  # For security reasons, it is highly recommended that you always\n\t  # use absolute paths for naming shared libraries, and exclude the\n\t  # DT_RUNPATH tag from executables and libraries.  But doing so\n\t  # requires that you compile everything twice, which is a pain.\n\t  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t;;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n\n    if test \"$_LT_TAGVAR(ld_shlibs, $1)\" = no; then\n      runpath_var=\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      if test \"$GCC\" = yes && test -z \"$lt_prog_compiler_static\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\t_LT_TAGVAR(hardcode_direct, $1)=unsupported\n      fi\n      ;;\n\n    aix[[4-9]]*)\n      if test \"$host_cpu\" = ia64; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\"\"\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to AIX nm, but means don't demangle with GNU nm\n\t# Also, AIX nm treats weak defined symbols like other global\n\t# defined symbols, whereas GNU nm marks them as \"W\".\n\tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# need to do runtime linking.\n\tcase $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t  for ld_flag in $LDFLAGS; do\n\t  if (test $ld_flag = \"-brtl\" || test $ld_flag = \"-Wl,-brtl\"); then\n\t    aix_use_runtimelinking=yes\n\t    break\n\t  fi\n\t  done\n\t  ;;\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      _LT_TAGVAR(archive_cmds, $1)=''\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(file_list_spec, $1)='${wl}-f,'\n\n      if test \"$GCC\" = yes; then\n\tcase $host_os in aix4.[[012]]|aix4.[[012]].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`${CC} -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t   strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t  # We have reworked collect2\n\t  :\n\t  else\n\t  # We have old collect2\n\t  _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n\t  ;;\n\tesac\n\tshared_flag='-shared'\n\tif test \"$aix_use_runtimelinking\" = yes; then\n\t  shared_flag=\"$shared_flag \"'${wl}-G'\n\tfi\n      else\n\t# not using gcc\n\tif test \"$host_cpu\" = ia64; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n\t  if test \"$aix_use_runtimelinking\" = yes; then\n\t    shared_flag='${wl}-G'\n\t  else\n\t    shared_flag='${wl}-bM:SRE'\n\t  fi\n\tfi\n      fi\n\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-bexpall'\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      if test \"$aix_use_runtimelinking\" = yes; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n        # Determine the default libpath from the value encoded in an\n        # empty executable.\n        _LT_SYS_MODULE_PATH_AIX\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags `if test \"x${allow_undefined_flag}\" != \"x\"; then func_echo_all \"${wl}${allow_undefined_flag}\"; else :; fi` '\"\\${wl}$exp_sym_flag:\\$export_symbols $shared_flag\"\n      else\n\tif test \"$host_cpu\" = ia64; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an\n\t # empty executable.\n\t _LT_SYS_MODULE_PATH_AIX\n\t _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'\n\t  if test \"$with_gnu_ld\" = yes; then\n\t    # We only use this code for GNU lds that support --whole-archive.\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t  else\n\t    # Exported symbols can be pulled into shared objects from archives\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t  fi\n\t  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  # This is similar to how AIX traditionally builds its shared libraries.\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    bsdi[[45]]*)\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      # Tell ltmain to make .lib files, not .a files.\n      libext=lib\n      # Tell ltmain to make .dll files, not .so files.\n      shrext_cmds=\".dll\"\n      # FIXME: Setting linknames here is a bad hack.\n      _LT_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `func_echo_all \"$deplibs\" | $SED '\\''s/ -lc$//'\\''` -link -dll~linknames='\n      # The linker will automatically build a .lib file if we build a DLL.\n      _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n      # FIXME: Should let the user specify the lib program.\n      _LT_TAGVAR(old_archive_cmds, $1)='lib -OUT:$oldlib$oldobjs$old_deplibs'\n      _LT_TAGVAR(fix_srcfile_path, $1)='`cygpath -w \"$srcfile\"`'\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      ;;\n\n    darwin* | rhapsody*)\n      _LT_DARWIN_LINKER_FEATURES($1)\n      ;;\n\n    dgux*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | dragonfly*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared -o $lib $libobjs $deplibs $compiler_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    hpux9*)\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      ;;\n\n    hpux10*)\n      if test \"$GCC\" = yes && test \"$with_gnu_ld\" = no; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      if test \"$with_gnu_ld\" = no; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t_LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='+b $libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\t# hardcode_minus_L: Not really in the search PATH,\n\t# but as the default location of the library.\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n      fi\n      ;;\n\n    hpux11*)\n      if test \"$GCC\" = yes && test \"$with_gnu_ld\" = no; then\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\tm4_if($1, [], [\n\t  # Older versions of the 11.00 compiler do not understand -b yet\n\t  # (HP92453-01 A.11.01.20 doesn't, HP92453-01 B.11.X.35175-35176.GP does)\n\t  _LT_LINKER_OPTION([if $CC understands -b],\n\t    _LT_TAGVAR(lt_cv_prog_compiler__b, $1), [-b],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])],\n\t  [_LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'])\n\t  ;;\n\tesac\n      fi\n      if test \"$with_gnu_ld\" = no; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\tcase $host_cpu in\n\thppa*64*|ia64*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t# Try to use the -exported_symbol ld option, if it does not\n\t# work, assume that -exports_file does not work either and\n\t# implicitly export all symbols.\n        save_LDFLAGS=\"$LDFLAGS\"\n        LDFLAGS=\"$LDFLAGS -shared ${wl}-exported_symbol ${wl}foo ${wl}-update_registry ${wl}/dev/null\"\n        AC_LINK_IFELSE(int foo(void) {},\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations ${wl}-exports_file ${wl}$export_symbols -o $lib'\n        )\n        LDFLAGS=\"$save_LDFLAGS\"\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -exports_file $export_symbols -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(inherit_rpath, $1)=yes\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *nto* | *qnx*)\n      ;;\n\n    openbsd*)\n      if test -f /usr/libexec/ld.so; then\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\tif test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\telse\n\t  case $host_os in\n\t   openbsd[[01]].* | openbsd2.[[0-7]] | openbsd2.[[0-7]].*)\n\t     _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n\t     _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t     ;;\n\t   *)\n\t     _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t     _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t     ;;\n\t  esac\n\tfi\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY $libname INITINSTANCE\" > $output_objdir/$libname.def~$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~echo DATA >> $output_objdir/$libname.def~echo \" SINGLE NONSHARED\" >> $output_objdir/$libname.def~echo EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_from_new_cmds, $1)='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'\n      ;;\n\n    osf3*)\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; printf \"%s\\\\n\" \"-hidden\">> $lib.exp~\n\t$CC -shared${allow_undefined_flag} ${wl}-input ${wl}$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib~$RM $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(no_undefined_flag, $1)=' -z defs'\n      if test \"$GCC\" = yes; then\n\twlarc='${wl}'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-z ${wl}text ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t  $CC -shared ${wl}-z ${wl}text ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n      else\n\tcase `$CC -V 2>&1` in\n\t*\"Compilers 5.0\"*)\n\t  wlarc=''\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'\n\t  ;;\n\t*)\n\t  wlarc='${wl}'\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t  $CC -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n\t  ;;\n\tesac\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      case $host_os in\n      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n      *)\n\t# The compiler driver will combine and reorder linker options,\n\t# but understands `-z linker_flag'.  GCC discards it without `$wl',\n\t# but is careful enough not to reorder.\n\t# Supported since Solaris 2.6 (maybe 2.5.1?)\n\tif test \"$GCC\" = yes; then\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'\n\telse\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\tfi\n\t;;\n      esac\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    sunos4*)\n      if test \"x$host_vendor\" = xsequent; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n        ;;\n\tmotorola)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4.3*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n      fi\n      ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6*)\n      # Note: We can NOT use -z defs as we might desire, because we do not\n      # link with -lc, and that would cause any symbols used from libc to\n      # always be unresolved, which means just about no library would\n      # ever link correctly.  If we're not using GNU ld we use -z text\n      # though, which does catch some bad symbols but isn't as heavy-handed\n      # as -z defs.\n      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R,$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'\n      runpath_var='LD_RUN_PATH'\n\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      _LT_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    esac\n\n    if test x$host_vendor = xsni; then\n      case $host in\n      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Blargedynsym'\n\t;;\n      esac\n    fi\n  fi\n])\nAC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\ntest \"$_LT_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\n_LT_TAGVAR(with_gnu_ld, $1)=$with_gnu_ld\n\n_LT_DECL([], [libext], [0], [Old archive suffix (normally \"a\")])dnl\n_LT_DECL([], [shrext_cmds], [1], [Shared library suffix (normally \".so\")])dnl\n_LT_DECL([], [extract_expsyms_cmds], [2],\n    [The commands to extract the exported symbol list from a shared archive])\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$_LT_TAGVAR(archive_cmds_need_lc, $1)\" in\nx|xyes)\n  # Assume -lc should be added\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\n  if test \"$enable_shared\" = yes && test \"$GCC\" = yes; then\n    case $_LT_TAGVAR(archive_cmds, $1) in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      AC_CACHE_CHECK([whether -lc should be explicitly linked in],\n\t[lt_cv_]_LT_TAGVAR(archive_cmds_need_lc, $1),\n\t[$RM conftest*\n\techo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n\tif AC_TRY_EVAL(ac_compile) 2>conftest.err; then\n\t  soname=conftest\n\t  lib=conftest\n\t  libobjs=conftest.$ac_objext\n\t  deplibs=\n\t  wl=$_LT_TAGVAR(lt_prog_compiler_wl, $1)\n\t  pic_flag=$_LT_TAGVAR(lt_prog_compiler_pic, $1)\n\t  compiler_flags=-v\n\t  linker_flags=-v\n\t  verstring=\n\t  output_objdir=.\n\t  libname=conftest\n\t  lt_save_allow_undefined_flag=$_LT_TAGVAR(allow_undefined_flag, $1)\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\n\t  if AC_TRY_EVAL(_LT_TAGVAR(archive_cmds, $1) 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1)\n\t  then\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t  else\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  fi\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag\n\telse\n\t  cat conftest.err 1>&5\n\tfi\n\t$RM conftest*\n\t])\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=$lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)\n      ;;\n    esac\n  fi\n  ;;\nesac\n\n_LT_TAGDECL([build_libtool_need_lc], [archive_cmds_need_lc], [0],\n    [Whether or not to add -lc for building shared libraries])\n_LT_TAGDECL([allow_libtool_libs_with_static_runtimes],\n    [enable_shared_with_static_runtimes], [0],\n    [Whether or not to disallow shared libs when runtime libs are static])\n_LT_TAGDECL([], [export_dynamic_flag_spec], [1],\n    [Compiler flag to allow reflexive dlopens])\n_LT_TAGDECL([], [whole_archive_flag_spec], [1],\n    [Compiler flag to generate shared objects directly from archives])\n_LT_TAGDECL([], [compiler_needs_object], [1],\n    [Whether the compiler copes with passing no objects directly])\n_LT_TAGDECL([], [old_archive_from_new_cmds], [2],\n    [Create an old-style archive from a shared archive])\n_LT_TAGDECL([], [old_archive_from_expsyms_cmds], [2],\n    [Create a temporary old-style archive to link instead of a shared archive])\n_LT_TAGDECL([], [archive_cmds], [2], [Commands used to build a shared archive])\n_LT_TAGDECL([], [archive_expsym_cmds], [2])\n_LT_TAGDECL([], [module_cmds], [2],\n    [Commands used to build a loadable module if different from building\n    a shared archive.])\n_LT_TAGDECL([], [module_expsym_cmds], [2])\n_LT_TAGDECL([], [with_gnu_ld], [1],\n    [Whether we are building with GNU ld or not])\n_LT_TAGDECL([], [allow_undefined_flag], [1],\n    [Flag that allows shared libraries with undefined symbols to be built])\n_LT_TAGDECL([], [no_undefined_flag], [1],\n    [Flag that enforces no undefined symbols])\n_LT_TAGDECL([], [hardcode_libdir_flag_spec], [1],\n    [Flag to hardcode $libdir into a binary during linking.\n    This must work even if $libdir does not exist])\n_LT_TAGDECL([], [hardcode_libdir_flag_spec_ld], [1],\n    [[If ld is used when linking, flag to hardcode $libdir into a binary\n    during linking.  This must work even if $libdir does not exist]])\n_LT_TAGDECL([], [hardcode_libdir_separator], [1],\n    [Whether we need a single \"-rpath\" flag with a separated argument])\n_LT_TAGDECL([], [hardcode_direct], [0],\n    [Set to \"yes\" if using DIR/libNAME${shared_ext} during linking hardcodes\n    DIR into the resulting binary])\n_LT_TAGDECL([], [hardcode_direct_absolute], [0],\n    [Set to \"yes\" if using DIR/libNAME${shared_ext} during linking hardcodes\n    DIR into the resulting binary and the resulting library dependency is\n    \"absolute\", i.e impossible to change by setting ${shlibpath_var} if the\n    library is relocated])\n_LT_TAGDECL([], [hardcode_minus_L], [0],\n    [Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_shlibpath_var], [0],\n    [Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_automatic], [0],\n    [Set to \"yes\" if building a shared library automatically hardcodes DIR\n    into the library and all subsequent libraries and executables linked\n    against it])\n_LT_TAGDECL([], [inherit_rpath], [0],\n    [Set to yes if linker adds runtime paths of dependent libraries\n    to runtime path list])\n_LT_TAGDECL([], [link_all_deplibs], [0],\n    [Whether libtool must link a program against all its dependency libraries])\n_LT_TAGDECL([], [fix_srcfile_path], [1],\n    [Fix the shell variable $srcfile for the compiler])\n_LT_TAGDECL([], [always_export_symbols], [0],\n    [Set to \"yes\" if exported symbols are required])\n_LT_TAGDECL([], [export_symbols_cmds], [2],\n    [The commands to list exported symbols])\n_LT_TAGDECL([], [exclude_expsyms], [1],\n    [Symbols that should not be listed in the preloaded symbols])\n_LT_TAGDECL([], [include_expsyms], [1],\n    [Symbols that must always be exported])\n_LT_TAGDECL([], [prelink_cmds], [2],\n    [Commands necessary for linking programs (against libraries) with templates])\n_LT_TAGDECL([], [file_list_spec], [1],\n    [Specify filename containing input files])\ndnl FIXME: Not yet implemented\ndnl _LT_TAGDECL([], [thread_safe_flag_spec], [1],\ndnl    [Compiler flag to generate thread safe objects])\n])# _LT_LINKER_SHLIBS\n\n\n# _LT_LANG_C_CONFIG([TAG])\n# ------------------------\n# Ensure that the configuration variables for a C compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_C_CONFIG],\n[m4_require([_LT_DECL_EGREP])dnl\nlt_save_CC=\"$CC\"\nAC_LANG_PUSH(C)\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}'\n\n_LT_TAG_COMPILER\n# Save the default compiler, since it gets overwritten when the other\n# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.\ncompiler_DEFAULT=$CC\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_SYS_DYNAMIC_LINKER($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n  LT_SYS_DLOPEN_SELF\n  _LT_CMD_STRIPLIB\n\n  # Report which library types will actually be built\n  AC_MSG_CHECKING([if libtool supports shared libraries])\n  AC_MSG_RESULT([$can_build_shared])\n\n  AC_MSG_CHECKING([whether to build shared libraries])\n  test \"$can_build_shared\" = \"no\" && enable_shared=no\n\n  # On AIX, shared libraries and static libraries use the same namespace, and\n  # are all built from PIC.\n  case $host_os in\n  aix3*)\n    test \"$enable_shared\" = yes && enable_static=no\n    if test -n \"$RANLIB\"; then\n      archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n      postinstall_cmds='$RANLIB $lib'\n    fi\n    ;;\n\n  aix[[4-9]]*)\n    if test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n      test \"$enable_shared\" = yes && enable_static=no\n    fi\n    ;;\n  esac\n  AC_MSG_RESULT([$enable_shared])\n\n  AC_MSG_CHECKING([whether to build static libraries])\n  # Make sure either enable_shared or enable_static is yes.\n  test \"$enable_shared\" = yes || enable_static=yes\n  AC_MSG_RESULT([$enable_static])\n\n  _LT_CONFIG($1)\nfi\nAC_LANG_POP\nCC=\"$lt_save_CC\"\n])# _LT_LANG_C_CONFIG\n\n\n# _LT_LANG_CXX_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a C++ compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_CXX_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nif test -n \"$CXX\" && ( test \"X$CXX\" != \"Xno\" &&\n    ( (test \"X$CXX\" = \"Xg++\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test \"X$CXX\" != \"Xg++\"))) ; then\n  AC_PROG_CXXCPP\nelse\n  _lt_caught_CXX_error=yes\nfi\n\nAC_LANG_PUSH(C++)\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(compiler_needs_object, $1)=no\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for C++ test sources.\nac_ext=cpp\n\n# Object file extension for compiled C++ test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the CXX compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test \"$_lt_caught_CXX_error\" != yes; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"int some_variable = 0;\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code='int main(int, char *[[]]) { return(0); }'\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_LD=$LD\n  lt_save_GCC=$GCC\n  GCC=$GXX\n  lt_save_with_gnu_ld=$with_gnu_ld\n  lt_save_path_LD=$lt_cv_path_LD\n  if test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n    lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\n  else\n    $as_unset lt_cv_prog_gnu_ld\n  fi\n  if test -n \"${lt_cv_path_LDCXX+set}\"; then\n    lt_cv_path_LD=$lt_cv_path_LDCXX\n  else\n    $as_unset lt_cv_path_LD\n  fi\n  test -z \"${LDCXX+set}\" || LD=$LDCXX\n  CC=${CXX-\"c++\"}\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    # We don't want -fno-exception when compiling C++ code, so set the\n    # no_builtin_flag separately\n    if test \"$GXX\" = yes; then\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\n    else\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n    fi\n\n    if test \"$GXX\" = yes; then\n      # Set up default GNU C++ configuration\n\n      LT_PATH_LD\n\n      # Check if GNU C++ uses GNU ld as the underlying linker, since the\n      # archiving commands below assume that GNU ld is being used.\n      if test \"$with_gnu_ld\" = yes; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\n        # If archive_cmds runs LD, not CC, wlarc should be empty\n        # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n        #     investigate it a little bit more. (MM)\n        wlarc='${wl}'\n\n        # ancient GNU ld didn't support --whole-archive et. al.\n        if eval \"`$CC -print-prog-name=ld` --help 2>&1\" |\n\t  $GREP 'no-whole-archive' > /dev/null; then\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n        else\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\n        fi\n      else\n        with_gnu_ld=no\n        wlarc=\n\n        # A generic and very simple default shared library creation\n        # command for GNU C++ for the case where it uses the native\n        # linker, instead of GNU ld.  If possible, this setting should\n        # overridden to take advantage of the native linker features on\n        # the platform it is being used on.\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n      fi\n\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n    else\n      GXX=no\n      with_gnu_ld=no\n      wlarc=\n    fi\n\n    # PORTME: fill in a description of your system's C++ link characteristics\n    AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\n    _LT_TAGVAR(ld_shlibs, $1)=yes\n    case $host_os in\n      aix3*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n      aix[[4-9]]*)\n        if test \"$host_cpu\" = ia64; then\n          # On IA64, the linker does run time linking by default, so we don't\n          # have to do anything special.\n          aix_use_runtimelinking=no\n          exp_sym_flag='-Bexport'\n          no_entry_flag=\"\"\n        else\n          aix_use_runtimelinking=no\n\n          # Test if we are trying to use run time linking or normal\n          # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n          # need to do runtime linking.\n          case $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t    for ld_flag in $LDFLAGS; do\n\t      case $ld_flag in\n\t      *-brtl*)\n\t        aix_use_runtimelinking=yes\n\t        break\n\t        ;;\n\t      esac\n\t    done\n\t    ;;\n          esac\n\n          exp_sym_flag='-bexport'\n          no_entry_flag='-bnoentry'\n        fi\n\n        # When large executables or shared objects are built, AIX ld can\n        # have problems creating the table of contents.  If linking a library\n        # or program results in \"error TOC overflow\" add -mminimal-toc to\n        # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n        # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n        _LT_TAGVAR(archive_cmds, $1)=''\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        _LT_TAGVAR(file_list_spec, $1)='${wl}-f,'\n\n        if test \"$GXX\" = yes; then\n          case $host_os in aix4.[[012]]|aix4.[[012]].*)\n          # We only want to do this on AIX 4.2 and lower, the check\n          # below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`${CC} -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t     strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t    # We have reworked collect2\n\t    :\n\t  else\n\t    # We have old collect2\n\t    _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t    # It fails to find uninstalled libraries when the uninstalled\n\t    # path is not listed in the libpath.  Setting hardcode_minus_L\n\t    # to unsupported forces relinking\n\t    _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n          esac\n          shared_flag='-shared'\n\t  if test \"$aix_use_runtimelinking\" = yes; then\n\t    shared_flag=\"$shared_flag \"'${wl}-G'\n\t  fi\n        else\n          # not using gcc\n          if test \"$host_cpu\" = ia64; then\n\t  # VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t  # chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n          else\n\t    if test \"$aix_use_runtimelinking\" = yes; then\n\t      shared_flag='${wl}-G'\n\t    else\n\t      shared_flag='${wl}-bM:SRE'\n\t    fi\n          fi\n        fi\n\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-bexpall'\n        # It seems that -bexpall does not export symbols beginning with\n        # underscore (_), so it is better to generate a list of symbols to\n\t# export.\n        _LT_TAGVAR(always_export_symbols, $1)=yes\n        if test \"$aix_use_runtimelinking\" = yes; then\n          # Warning - without using the other runtime loading flags (-brtl),\n          # -berok will link without error, but may produce a broken library.\n          _LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n          # Determine the default libpath from the value encoded in an empty\n          # executable.\n          _LT_SYS_MODULE_PATH_AIX\n          _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags `if test \"x${allow_undefined_flag}\" != \"x\"; then func_echo_all \"${wl}${allow_undefined_flag}\"; else :; fi` '\"\\${wl}$exp_sym_flag:\\$export_symbols $shared_flag\"\n        else\n          if test \"$host_cpu\" = ia64; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$exp_sym_flag:\\$export_symbols\"\n          else\n\t    # Determine the default libpath from the value encoded in an\n\t    # empty executable.\n\t    _LT_SYS_MODULE_PATH_AIX\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t    # Warning - without using the other run time loading flags,\n\t    # -berok will link without error, but may produce a broken library.\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'\n\t    if test \"$with_gnu_ld\" = yes; then\n\t      # We only use this code for GNU lds that support --whole-archive.\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t    else\n\t      # Exported symbols can be pulled into shared objects from archives\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t    fi\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t    # This is similar to how AIX traditionally builds its shared\n\t    # libraries.\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n          fi\n        fi\n        ;;\n\n      beos*)\n\tif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  # Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t  # support --undefined.  This deserves some investigation.  FIXME\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      chorus*)\n        case $cc_basename in\n          *)\n\t  # FIXME: insert proper C++ library support\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\t  ;;\n        esac\n        ;;\n\n      cygwin* | mingw* | pw32* | cegcc*)\n        # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n        # as there is no search path for DLLs.\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-all-symbols'\n        _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n        _LT_TAGVAR(always_export_symbols, $1)=no\n        _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\n        if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n          # If the export-symbols file already is a .def file (1st line\n          # is EXPORTS), use it as is; otherwise, prepend...\n          _LT_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t    cp $export_symbols $output_objdir/$soname.def;\n          else\n\t    echo EXPORTS > $output_objdir/$soname.def;\n\t    cat $export_symbols >> $output_objdir/$soname.def;\n          fi~\n          $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n        else\n          _LT_TAGVAR(ld_shlibs, $1)=no\n        fi\n        ;;\n      darwin* | rhapsody*)\n        _LT_DARWIN_LINKER_FEATURES($1)\n\t;;\n\n      dgux*)\n        case $cc_basename in\n          ec++*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          ghcx*)\n\t    # Green Hills C++ Compiler\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      freebsd[[12]]*)\n        # C++ shared libraries reported to be fairly broken before\n\t# switch to ELF\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      freebsd-elf*)\n        _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n        ;;\n\n      freebsd* | dragonfly*)\n        # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n        # conventions\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n        ;;\n\n      gnu*)\n        ;;\n\n      haiku*)\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        ;;\n\n      hpux9*)\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t             # but as the default\n\t\t\t\t             # location of the library.\n\n        case $cc_basename in\n          CC*)\n            # FIXME: insert proper C++ library support\n            _LT_TAGVAR(ld_shlibs, $1)=no\n            ;;\n          aCC*)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -b ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n            # Commands to make compiler produce verbose output that lists\n            # what \"hidden\" libraries, object files and flags are used when\n            # linking a shared library.\n            #\n            # There doesn't appear to be a way to prevent this compiler from\n            # explicitly linking system object files so we need to strip them\n            # from the output so that they don't get included in the library\n            # dependencies.\n            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP \"\\-L\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n            ;;\n          *)\n            if test \"$GXX\" = yes; then\n              _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -nostdlib -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n            else\n              # FIXME: insert proper C++ library support\n              _LT_TAGVAR(ld_shlibs, $1)=no\n            fi\n            ;;\n        esac\n        ;;\n\n      hpux10*|hpux11*)\n        if test $with_gnu_ld = no; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n          case $host_cpu in\n            hppa*64*|ia64*)\n              ;;\n            *)\n\t      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n              ;;\n          esac\n        fi\n        case $host_cpu in\n          hppa*64*|ia64*)\n            _LT_TAGVAR(hardcode_direct, $1)=no\n            _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n            ;;\n          *)\n            _LT_TAGVAR(hardcode_direct, $1)=yes\n            _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t\t         # but as the default\n\t\t\t\t\t         # location of the library.\n            ;;\n        esac\n\n        case $cc_basename in\n          CC*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          aCC*)\n\t    case $host_cpu in\n\t      hppa*64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      ia64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      *)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t    esac\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP \"\\-L\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n          *)\n\t    if test \"$GXX\" = yes; then\n\t      if test $with_gnu_ld = no; then\n\t        case $host_cpu in\n\t          hppa*64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          ia64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          *)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t        esac\n\t      fi\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      interix[[3-9]]*)\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\t# Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n\t# Instead, shared libraries are loaded at an image base (0x10000000 by\n\t# default) and relocated if they conflict, which is a slow very memory\n\t# consuming and fragmenting process.  To avoid this, we pick a random,\n\t# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n\t# time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s,^,_,\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t;;\n      irix5* | irix6*)\n        case $cc_basename in\n          CC*)\n\t    # SGI C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    if test \"$GXX\" = yes; then\n\t      if test \"$with_gnu_ld\" = no; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t      else\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` -o $lib'\n\t      fi\n\t    fi\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\t    ;;\n        esac\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(inherit_rpath, $1)=yes\n        ;;\n\n      linux* | k*bsd*-gnu | kopensolaris*-gnu)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib ${wl}-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP \"ld\"`; rm -f libconftest$shared_ext; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\t    ;;\n\t  icpc* | ecpc* )\n\t    # Intel C++\n\t    with_gnu_ld=yes\n\t    # version 8.0 and above of icpc choke on multiply defined symbols\n\t    # if we add $predep_objects and $postdep_objects, however 7.1 and\n\t    # earlier do not add the objects themselves.\n\t    case `$CC -V 2>&1` in\n\t      *\"Version 7.\"*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t      *)  # Version 8.0 or newer\n\t        tmp_idyn=\n\t        case $host_cpu in\n\t\t  ia64*) tmp_idyn=' -i_dynamic';;\n\t\tesac\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t    esac\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t    ;;\n          pgCC* | pgcpp*)\n            # Portland Group C++ compiler\n\t    case `$CC -V` in\n\t    *pgCC\\ [[1-5]].* | *pgcpp\\ [[1-5]].*)\n\t      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n\t      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n\t\t$RANLIB $oldlib'\n\t      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n\t      ;;\n\t    *) # Version 6 and above use weak symbols\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n\t      ;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n            ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname  -o $lib ${wl}-retain-symbols-file $wl$export_symbols'\n\n\t    runpath_var=LD_RUN_PATH\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"X$list\" | $Xsed'\n\t    ;;\n\t  xl* | mpixl* | bgxl*)\n\t    # IBM XL 8.0 on PPC, with GNU ld\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t    if test \"x$supports_anon_versioning\" = xyes; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n\t\tcat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n\t\techo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t\t$CC -qmkshrobj $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'\n\t    fi\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag} -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G${allow_undefined_flag} -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file ${wl}$export_symbols'\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t      _LT_TAGVAR(compiler_needs_object, $1)=yes\n\n\t      # Not sure whether something based on\n\t      # $CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1\n\t      # would be better.\n\t      output_verbose_link_cmd='func_echo_all'\n\n\t      # Archives containing C++ object files must be created using\n\t      # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t      # necessary to make sure instantiated templates are included\n\t      # in the archive.\n\t      _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n\n      lynxos*)\n        # FIXME: insert proper C++ library support\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      m88k*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      mvs*)\n        case $cc_basename in\n          cxx*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\t  *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\tesac\n\t;;\n\n      netbsd*)\n        if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n\t  wlarc=\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\tfi\n\t# Workaround some broken pre-1.5 toolchains\n\toutput_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n\t;;\n\n      *nto* | *qnx*)\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n\t;;\n\n      openbsd2*)\n        # C++ shared libraries are fairly broken\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      openbsd*)\n\tif test -f /usr/libexec/ld.so; then\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file,$export_symbols -o $lib'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n\t  fi\n\t  output_verbose_link_cmd=func_echo_all\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      osf3* | osf4* | osf5*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo \"$lib\" | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Archives containing C++ object files must be created using\n\t    # the KAI C++ compiler.\n\t    case $host in\n\t      osf3*) _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs' ;;\n\t      *) _LT_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs' ;;\n\t    esac\n\t    ;;\n          RCC*)\n\t    # Rational C++ 2.4.1\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          cxx*)\n\t    case $host in\n\t      osf3*)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t\t;;\n\t      *)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n\t          echo \"-hidden\">> $lib.exp~\n\t          $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname ${wl}-input ${wl}$lib.exp  `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib~\n\t          $RM $lib.exp'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t\t;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\" | $GREP -v \"ld:\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n\t  *)\n\t    if test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t      _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t      case $host in\n\t        osf3*)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t\t  ;;\n\t        *)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t\t  ;;\n\t      esac\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t      # Commands to make compiler produce verbose output that lists\n\t      # what \"hidden\" libraries, object files and flags are used when\n\t      # linking a shared library.\n\t      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      psos*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      sunos4*)\n        case $cc_basename in\n          CC*)\n\t    # Sun C++ 4.x\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          lcc*)\n\t    # Lucid\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      solaris*)\n        case $cc_basename in\n          CC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n            _LT_TAGVAR(archive_cmds_need_lc,$1)=yes\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag}  -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t      $CC -G${allow_undefined_flag} ${wl}-M ${wl}$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t    _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t    case $host_os in\n\t      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t      *)\n\t\t# The compiler driver will combine and reorder linker options,\n\t\t# but understands `-z linker_flag'.\n\t        # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t\t_LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\t        ;;\n\t    esac\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\n\t    output_verbose_link_cmd='func_echo_all'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t    ;;\n          gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\n\t    # The C++ compiler must be used to create the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    # GNU C++ compiler with Solaris linker\n\t    if test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-z ${wl}defs'\n\t      if $CC --version | $GREP -v '^2\\.7' > /dev/null; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t\t  $CC -shared -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      else\n\t        # g++ 2.7 appears to require `-G' NOT `-shared' on this\n\t        # platform.\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t\t  $CC -G -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      fi\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $wl$libdir'\n\t      case $host_os in\n\t\tsolaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t\t*)\n\t\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'\n\t\t  ;;\n\t      esac\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      case $cc_basename in\n        CC*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n      esac\n      ;;\n\n      sysv5* | sco3.2v5* | sco5v6*)\n\t# Note: We can NOT use -z defs as we might desire, because we do not\n\t# link with -lc, and that would cause any symbols used from libc to\n\t# always be unresolved, which means just about no library would\n\t# ever link correctly.  If we're not using GNU ld we use -z text\n\t# though, which does catch some bad symbols but isn't as heavy-handed\n\t# as -z defs.\n\t_LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n\t_LT_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'\n\t_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R,$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n\t_LT_TAGVAR(link_all_deplibs, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'\n\trunpath_var='LD_RUN_PATH'\n\n\tcase $cc_basename in\n          CC*)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Tprelink_objects $oldobjs~\n\t      '\"$_LT_TAGVAR(old_archive_cmds, $1)\"\n\t    _LT_TAGVAR(reload_cmds, $1)='$CC -Tprelink_objects $reload_objs~\n\t      '\"$_LT_TAGVAR(reload_cmds, $1)\"\n\t    ;;\n\t  *)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    ;;\n\tesac\n      ;;\n\n      tandem*)\n        case $cc_basename in\n          NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      vxworks*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      *)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n    esac\n\n    AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\n    test \"$_LT_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\n    _LT_TAGVAR(GCC, $1)=\"$GXX\"\n    _LT_TAGVAR(LD, $1)=\"$LD\"\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  CC=$lt_save_CC\n  LDCXX=$LD\n  LD=$lt_save_LD\n  GCC=$lt_save_GCC\n  with_gnu_ld=$lt_save_with_gnu_ld\n  lt_cv_path_LDCXX=$lt_cv_path_LD\n  lt_cv_path_LD=$lt_save_path_LD\n  lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\n  lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\nfi # test \"$_lt_caught_CXX_error\" != yes\n\nAC_LANG_POP\n])# _LT_LANG_CXX_CONFIG\n\n\n# _LT_SYS_HIDDEN_LIBDEPS([TAGNAME])\n# ---------------------------------\n# Figure out \"hidden\" library dependencies from verbose\n# compiler output when linking a shared library.\n# Parse the compiler output and extract the necessary\n# objects, libraries and library flags.\nm4_defun([_LT_SYS_HIDDEN_LIBDEPS],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\n# Dependencies to place before and after the object being linked:\n_LT_TAGVAR(predep_objects, $1)=\n_LT_TAGVAR(postdep_objects, $1)=\n_LT_TAGVAR(predeps, $1)=\n_LT_TAGVAR(postdeps, $1)=\n_LT_TAGVAR(compiler_lib_search_path, $1)=\n\ndnl we can't use the lt_simple_compile_test_code here,\ndnl because it contains code intended for an executable,\ndnl not a library.  It's possible we should let each\ndnl tag define a new lt_????_link_test_code variable,\ndnl but it's only used here...\nm4_if([$1], [], [cat > conftest.$ac_ext <<_LT_EOF\nint a;\nvoid foo (void) { a = 0; }\n_LT_EOF\n], [$1], [CXX], [cat > conftest.$ac_ext <<_LT_EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\n_LT_EOF\n], [$1], [F77], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer*4 a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [FC], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [GCJ], [cat > conftest.$ac_ext <<_LT_EOF\npublic class foo {\n  private int a;\n  public void bar (void) {\n    a = 0;\n  }\n};\n_LT_EOF\n], [$1], [GO], [cat > conftest.$ac_ext <<_LT_EOF\npackage foo\nfunc foo() { }\n_LT_EOF\n])\ndnl Parse the compiler output and extract the necessary\ndnl objects, libraries and library flags.\nif AC_TRY_EVAL(ac_compile); then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  for p in `eval \"$output_verbose_link_cmd\"`; do\n    case $p in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test $p = \"-L\" ||\n          test $p = \"-R\"; then\n\t prev=$p\n\t continue\n       else\n\t prev=\n       fi\n\n       if test \"$pre_test_object_deps_done\" = no; then\n\t case $p in\n\t -L* | -R*)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$_LT_TAGVAR(compiler_lib_search_path, $1)\"; then\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${prev}${p}\"\n\t   else\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${_LT_TAGVAR(compiler_lib_search_path, $1)} ${prev}${p}\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$_LT_TAGVAR(postdeps, $1)\"; then\n\t   _LT_TAGVAR(postdeps, $1)=\"${prev}${p}\"\n\t else\n\t   _LT_TAGVAR(postdeps, $1)=\"${_LT_TAGVAR(postdeps, $1)} ${prev}${p}\"\n\t fi\n       fi\n       ;;\n\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test \"$pre_test_object_deps_done\" = no; then\n\t if test -z \"$_LT_TAGVAR(predep_objects, $1)\"; then\n\t   _LT_TAGVAR(predep_objects, $1)=\"$p\"\n\t else\n\t   _LT_TAGVAR(predep_objects, $1)=\"$_LT_TAGVAR(predep_objects, $1) $p\"\n\t fi\n       else\n\t if test -z \"$_LT_TAGVAR(postdep_objects, $1)\"; then\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$p\"\n\t else\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$_LT_TAGVAR(postdep_objects, $1) $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling $1 test program\"\nfi\n\n$RM -f confest.$objext\n\n# PORTME: override above test on systems where it is broken\nm4_if([$1], [CXX],\n[case $host_os in\ninterix[[3-9]]*)\n  # Interix 3.5 installs completely hosed .la files for C++, so rather than\n  # hack all around it, let's just trust \"g++\" to DTRT.\n  _LT_TAGVAR(predep_objects,$1)=\n  _LT_TAGVAR(postdep_objects,$1)=\n  _LT_TAGVAR(postdeps,$1)=\n  ;;\n\nlinux*)\n  case `$CC -V 2>&1 | sed 5q` in\n  *Sun\\ C*)\n    # Sun C++ 5.9\n\n    # The more standards-conforming stlport4 library is\n    # incompatible with the Cstd library. Avoid specifying\n    # it if it's in CXXFLAGS. Ignore libCrun as\n    # -library=stlport4 depends on it.\n    case \" $CXX $CXXFLAGS \" in\n    *\" -library=stlport4 \"*)\n      solaris_use_stlport4=yes\n      ;;\n    esac\n\n    if test \"$solaris_use_stlport4\" != yes; then\n      _LT_TAGVAR(postdeps,$1)='-library=Cstd -library=Crun'\n    fi\n    ;;\n  esac\n  ;;\n\nsolaris*)\n  case $cc_basename in\n  CC*)\n    # The more standards-conforming stlport4 library is\n    # incompatible with the Cstd library. Avoid specifying\n    # it if it's in CXXFLAGS. Ignore libCrun as\n    # -library=stlport4 depends on it.\n    case \" $CXX $CXXFLAGS \" in\n    *\" -library=stlport4 \"*)\n      solaris_use_stlport4=yes\n      ;;\n    esac\n\n    # Adding this requires a known-good setup of shared libraries for\n    # Sun compiler versions before 5.6, else PIC objects from an old\n    # archive will be linked into the output, leading to subtle bugs.\n    if test \"$solaris_use_stlport4\" != yes; then\n      _LT_TAGVAR(postdeps,$1)='-library=Cstd -library=Crun'\n    fi\n    ;;\n  esac\n  ;;\nesac\n])\n\ncase \" $_LT_TAGVAR(postdeps, $1) \" in\n*\" -lc \"*) _LT_TAGVAR(archive_cmds_need_lc, $1)=no ;;\nesac\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=\nif test -n \"${_LT_TAGVAR(compiler_lib_search_path, $1)}\"; then\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=`echo \" ${_LT_TAGVAR(compiler_lib_search_path, $1)}\" | ${SED} -e 's! -L! !g' -e 's!^ !!'`\nfi\n_LT_TAGDECL([], [compiler_lib_search_dirs], [1],\n    [The directories searched by this compiler when creating a shared library])\n_LT_TAGDECL([], [predep_objects], [1],\n    [Dependencies to place before and after the objects being linked to\n    create a shared library])\n_LT_TAGDECL([], [postdep_objects], [1])\n_LT_TAGDECL([], [predeps], [1])\n_LT_TAGDECL([], [postdeps], [1])\n_LT_TAGDECL([], [compiler_lib_search_path], [1],\n    [The library search path used internally by the compiler when linking\n    a shared library])\n])# _LT_SYS_HIDDEN_LIBDEPS\n\n\n# _LT_LANG_F77_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a Fortran 77 compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_F77_CONFIG],\n[AC_LANG_PUSH(Fortran 77)\nif test -z \"$F77\" || test \"X$F77\" = \"Xno\"; then\n  _lt_disable_F77=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for f77 test sources.\nac_ext=f\n\n# Object file extension for compiled f77 test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the F77 compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test \"$_lt_disable_F77\" != yes; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=\"$CC\"\n  lt_save_GCC=$GCC\n  CC=${F77-\"f77\"}\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n  GCC=$G77\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test \"$can_build_shared\" = \"no\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test \"$enable_shared\" = yes && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n\t  test \"$enable_shared\" = yes && enable_static=no\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test \"$enable_shared\" = yes || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=\"$G77\"\n    _LT_TAGVAR(LD, $1)=\"$LD\"\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=\"$lt_save_CC\"\nfi # test \"$_lt_disable_F77\" != yes\n\nAC_LANG_POP\n])# _LT_LANG_F77_CONFIG\n\n\n# _LT_LANG_FC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for a Fortran compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_FC_CONFIG],\n[AC_LANG_PUSH(Fortran)\n\nif test -z \"$FC\" || test \"X$FC\" = \"Xno\"; then\n  _lt_disable_FC=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for fc test sources.\nac_ext=${ac_fc_srcext-f}\n\n# Object file extension for compiled fc test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the FC compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test \"$_lt_disable_FC\" != yes; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=\"$CC\"\n  lt_save_GCC=$GCC\n  CC=${FC-\"f95\"}\n  compiler=$CC\n  GCC=$ac_cv_fc_compiler_gnu\n\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test \"$can_build_shared\" = \"no\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test \"$enable_shared\" = yes && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n\t  test \"$enable_shared\" = yes && enable_static=no\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test \"$enable_shared\" = yes || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=\"$ac_cv_fc_compiler_gnu\"\n    _LT_TAGVAR(LD, $1)=\"$LD\"\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=\"$lt_save_CC\"\nfi # test \"$_lt_disable_FC\" != yes\n\nAC_LANG_POP\n])# _LT_LANG_FC_CONFIG\n\n\n# _LT_LANG_GCJ_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Java Compiler compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_GCJ_CONFIG],\n[AC_REQUIRE([LT_PROG_GCJ])dnl\nAC_LANG_SAVE\n\n# Source file extension for Java test sources.\nac_ext=java\n\n# Object file extension for compiled Java test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"class foo {}\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GCJ-\"gcj\"}\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=\"$LD\"\n_LT_CC_BASENAME([$compiler])\n\n# GCJ did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=\"$lt_save_CC\"\n])# _LT_LANG_GCJ_CONFIG\n\n# _LT_LANG_GO_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Go compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_GO_CONFIG],\n[AC_REQUIRE([LT_PROG_GO])dnl\nAC_LANG_SAVE\n\n# Source file extension for Go test sources.\nac_ext=go\n\n# Object file extension for compiled Go test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"package main; func main() { }\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='package main; func main() { }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nlt_save_GCC=\"$GCC\"\nGCC=yes\nCC=${GOC-\"gccgo\"}\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=\"$LD\"\n_LT_CC_BASENAME([$compiler])\n\n# Go did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=\"$lt_save_CC\"\n])# _LT_LANG_GO_CONFIG\n\n\n# _LT_LANG_RC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for the Windows resource compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_RC_CONFIG],\n[AC_REQUIRE([LT_PROG_RC])dnl\nAC_LANG_SAVE\n\n# Source file extension for RC test sources.\nac_ext=rc\n\n# Object file extension for compiled RC test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code='sample MENU { MENUITEM \"&Soup\", 100, CHECKED }'\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=\"$lt_simple_compile_test_code\"\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nlt_save_GCC=$GCC\nGCC=\nCC=${RC-\"windres\"}\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n\nif test -n \"$compiler\"; then\n  :\n  _LT_CONFIG($1)\nfi\n\nGCC=$lt_save_GCC\nAC_LANG_RESTORE\nCC=\"$lt_save_CC\"\n])# _LT_LANG_RC_CONFIG\n\n\n# LT_PROG_GCJ\n# -----------\nAC_DEFUN([LT_PROG_GCJ],\n[m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],\n  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],\n    [AC_CHECK_TOOL(GCJ, gcj,)\n      test \"x${GCJFLAGS+set}\" = xset || GCJFLAGS=\"-g -O2\"\n      AC_SUBST(GCJFLAGS)])])[]dnl\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_GCJ], [LT_PROG_GCJ])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_GCJ], [])\n\n# LT_PROG_GO\n# -----------\nAC_DEFUN([LT_PROG_GO],\n[AC_CHECK_TOOL(GOC, gccgo,)\n])\n\n# LT_PROG_RC\n# ----------\nAC_DEFUN([LT_PROG_RC],\n[AC_CHECK_TOOL(RC, windres,)\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_RC], [LT_PROG_RC])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_RC], [])\n\n\n# _LT_DECL_EGREP\n# --------------\n# If we don't have a new enough Autoconf to choose the best grep\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_EGREP],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_REQUIRE([AC_PROG_FGREP])dnl\ntest -z \"$GREP\" && GREP=grep\n_LT_DECL([], [GREP], [1], [A grep program that handles long lines])\n_LT_DECL([], [EGREP], [1], [An ERE matcher])\n_LT_DECL([], [FGREP], [1], [A literal string matcher])\ndnl Non-bleeding-edge autoconf doesn't subst GREP, so do it here too\nAC_SUBST([GREP])\n])\n\n\n# _LT_DECL_OBJDUMP\n# --------------\n# If we don't have a new enough Autoconf to choose the best objdump\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_OBJDUMP],\n[AC_CHECK_TOOL(OBJDUMP, objdump, false)\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [An object symbol dumper])\nAC_SUBST([OBJDUMP])\n])\n\n\n# _LT_DECL_SED\n# ------------\n# Check for a fully-functional sed program, that truncates\n# as few characters as possible.  Prefer GNU sed if found.\nm4_defun([_LT_DECL_SED],\n[AC_PROG_SED\ntest -z \"$SED\" && SED=sed\nXsed=\"$SED -e 1s/^X//\"\n_LT_DECL([], [SED], [1], [A sed program that does not truncate output])\n_LT_DECL([], [Xsed], [\"\\$SED -e 1s/^X//\"],\n    [Sed that helps us avoid accidentally triggering echo(1) options like -n])\n])# _LT_DECL_SED\n\nm4_ifndef([AC_PROG_SED], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_SED.  When it is available in   #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\n\nm4_defun([AC_PROG_SED],\n[AC_MSG_CHECKING([for a sed that does not truncate output])\nAC_CACHE_VAL(lt_cv_path_SED,\n[# Loop through the user's path and test for sed and gsed.\n# Then use that list of sed's as ones to test for truncation.\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  for lt_ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      if $as_executable_p \"$as_dir/$lt_ac_prog$ac_exec_ext\"; then\n        lt_ac_sed_list=\"$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext\"\n      fi\n    done\n  done\ndone\nIFS=$as_save_IFS\nlt_ac_max=0\nlt_ac_count=0\n# Add /usr/xpg4/bin/sed as it is typically found on Solaris\n# along with /bin/sed that truncates output.\nfor lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do\n  test ! -f $lt_ac_sed && continue\n  cat /dev/null > conftest.in\n  lt_ac_count=0\n  echo $ECHO_N \"0123456789$ECHO_C\" >conftest.in\n  # Check for GNU sed and select it if it is found.\n  if \"$lt_ac_sed\" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then\n    lt_cv_path_SED=$lt_ac_sed\n    break\n  fi\n  while true; do\n    cat conftest.in conftest.in >conftest.tmp\n    mv conftest.tmp conftest.in\n    cp conftest.in conftest.nl\n    echo >>conftest.nl\n    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break\n    cmp -s conftest.out conftest.nl || break\n    # 10000 chars as input seems more than enough\n    test $lt_ac_count -gt 10 && break\n    lt_ac_count=`expr $lt_ac_count + 1`\n    if test $lt_ac_count -gt $lt_ac_max; then\n      lt_ac_max=$lt_ac_count\n      lt_cv_path_SED=$lt_ac_sed\n    fi\n  done\ndone\n])\nSED=$lt_cv_path_SED\nAC_SUBST([SED])\nAC_MSG_RESULT([$SED])\n])#AC_PROG_SED\n])#m4_ifndef\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_SED], [AC_PROG_SED])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_SED], [])\n\n\n# _LT_CHECK_SHELL_FEATURES\n# ------------------------\n# Find out whether the shell is Bourne or XSI compatible,\n# or has some other useful features.\nm4_defun([_LT_CHECK_SHELL_FEATURES],\n[AC_MSG_CHECKING([whether the shell understands some XSI constructs])\n# Try some XSI features\nxsi_shell=no\n( _lt_dummy=\"a/b/c\"\n  test \"${_lt_dummy##*/},${_lt_dummy%/*},\"${_lt_dummy%\"$_lt_dummy\"}, \\\n      = c,a/b,, \\\n    && eval 'test $(( 1 + 1 )) -eq 2 \\\n    && test \"${#_lt_dummy}\" -eq 5' ) >/dev/null 2>&1 \\\n  && xsi_shell=yes\nAC_MSG_RESULT([$xsi_shell])\n_LT_CONFIG_LIBTOOL_INIT([xsi_shell='$xsi_shell'])\n\nAC_MSG_CHECKING([whether the shell understands \"+=\"])\nlt_shell_append=no\n( foo=bar; set foo baz; eval \"$[1]+=\\$[2]\" && test \"$foo\" = barbaz ) \\\n    >/dev/null 2>&1 \\\n  && lt_shell_append=yes\nAC_MSG_RESULT([$lt_shell_append])\n_LT_CONFIG_LIBTOOL_INIT([lt_shell_append='$lt_shell_append'])\n\nif ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then\n  lt_unset=unset\nelse\n  lt_unset=false\nfi\n_LT_DECL([], [lt_unset], [0], [whether the shell understands \"unset\"])dnl\n\n# test EBCDIC or ASCII\ncase `echo X|tr X '\\101'` in\n A) # ASCII based system\n    # \\n is not interpreted correctly by Solaris 8 /usr/ucb/tr\n  lt_SP2NL='tr \\040 \\012'\n  lt_NL2SP='tr \\015\\012 \\040\\040'\n  ;;\n *) # EBCDIC based system\n  lt_SP2NL='tr \\100 \\n'\n  lt_NL2SP='tr \\r\\n \\100\\100'\n  ;;\nesac\n_LT_DECL([SP2NL], [lt_SP2NL], [1], [turn spaces into newlines])dnl\n_LT_DECL([NL2SP], [lt_NL2SP], [1], [turn newlines into spaces])dnl\n])# _LT_CHECK_SHELL_FEATURES\n\n\n# _LT_PROG_XSI_SHELLFNS\n# ---------------------\n# Bourne and XSI compatible variants of some useful shell functions.\nm4_defun([_LT_PROG_XSI_SHELLFNS],\n[case $xsi_shell in\n  yes)\n    cat << \\_LT_EOF >> \"$cfgfile\"\n\n# func_dirname file append nondir_replacement\n# Compute the dirname of FILE.  If nonempty, add APPEND to the result,\n# otherwise set result to NONDIR_REPLACEMENT.\nfunc_dirname ()\n{\n  case ${1} in\n    */*) func_dirname_result=\"${1%/*}${2}\" ;;\n    *  ) func_dirname_result=\"${3}\" ;;\n  esac\n}\n\n# func_basename file\nfunc_basename ()\n{\n  func_basename_result=\"${1##*/}\"\n}\n\n# func_dirname_and_basename file append nondir_replacement\n# perform func_basename and func_dirname in a single function\n# call:\n#   dirname:  Compute the dirname of FILE.  If nonempty,\n#             add APPEND to the result, otherwise set result\n#             to NONDIR_REPLACEMENT.\n#             value returned in \"$func_dirname_result\"\n#   basename: Compute filename of FILE.\n#             value retuned in \"$func_basename_result\"\n# Implementation must be kept synchronized with func_dirname\n# and func_basename. For efficiency, we do not delegate to\n# those functions but instead duplicate the functionality here.\nfunc_dirname_and_basename ()\n{\n  case ${1} in\n    */*) func_dirname_result=\"${1%/*}${2}\" ;;\n    *  ) func_dirname_result=\"${3}\" ;;\n  esac\n  func_basename_result=\"${1##*/}\"\n}\n\n# func_stripname prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\nfunc_stripname ()\n{\n  # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are\n  # positional parameters, so assign one to ordinary parameter first.\n  func_stripname_result=${3}\n  func_stripname_result=${func_stripname_result#\"${1}\"}\n  func_stripname_result=${func_stripname_result%\"${2}\"}\n}\n\n# func_opt_split\nfunc_opt_split ()\n{\n  func_opt_split_opt=${1%%=*}\n  func_opt_split_arg=${1#*=}\n}\n\n# func_lo2o object\nfunc_lo2o ()\n{\n  case ${1} in\n    *.lo) func_lo2o_result=${1%.lo}.${objext} ;;\n    *)    func_lo2o_result=${1} ;;\n  esac\n}\n\n# func_xform libobj-or-source\nfunc_xform ()\n{\n  func_xform_result=${1%.*}.lo\n}\n\n# func_arith arithmetic-term...\nfunc_arith ()\n{\n  func_arith_result=$(( $[*] ))\n}\n\n# func_len string\n# STRING may not start with a hyphen.\nfunc_len ()\n{\n  func_len_result=${#1}\n}\n\n_LT_EOF\n    ;;\n  *) # Bourne compatible functions.\n    cat << \\_LT_EOF >> \"$cfgfile\"\n\n# func_dirname file append nondir_replacement\n# Compute the dirname of FILE.  If nonempty, add APPEND to the result,\n# otherwise set result to NONDIR_REPLACEMENT.\nfunc_dirname ()\n{\n  # Extract subdirectory from the argument.\n  func_dirname_result=`$ECHO \"${1}\" | $SED \"$dirname\"`\n  if test \"X$func_dirname_result\" = \"X${1}\"; then\n    func_dirname_result=\"${3}\"\n  else\n    func_dirname_result=\"$func_dirname_result${2}\"\n  fi\n}\n\n# func_basename file\nfunc_basename ()\n{\n  func_basename_result=`$ECHO \"${1}\" | $SED \"$basename\"`\n}\n\ndnl func_dirname_and_basename\ndnl A portable version of this function is already defined in general.m4sh\ndnl so there is no need for it here.\n\n# func_stripname prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\n# func_strip_suffix prefix name\nfunc_stripname ()\n{\n  case ${2} in\n    .*) func_stripname_result=`$ECHO \"${3}\" | $SED \"s%^${1}%%; s%\\\\\\\\${2}\\$%%\"`;;\n    *)  func_stripname_result=`$ECHO \"${3}\" | $SED \"s%^${1}%%; s%${2}\\$%%\"`;;\n  esac\n}\n\n# sed scripts:\nmy_sed_long_opt='1s/^\\(-[[^=]]*\\)=.*/\\1/;q'\nmy_sed_long_arg='1s/^-[[^=]]*=//'\n\n# func_opt_split\nfunc_opt_split ()\n{\n  func_opt_split_opt=`$ECHO \"${1}\" | $SED \"$my_sed_long_opt\"`\n  func_opt_split_arg=`$ECHO \"${1}\" | $SED \"$my_sed_long_arg\"`\n}\n\n# func_lo2o object\nfunc_lo2o ()\n{\n  func_lo2o_result=`$ECHO \"${1}\" | $SED \"$lo2o\"`\n}\n\n# func_xform libobj-or-source\nfunc_xform ()\n{\n  func_xform_result=`$ECHO \"${1}\" | $SED 's/\\.[[^.]]*$/.lo/'`\n}\n\n# func_arith arithmetic-term...\nfunc_arith ()\n{\n  func_arith_result=`expr \"$[@]\"`\n}\n\n# func_len string\n# STRING may not start with a hyphen.\nfunc_len ()\n{\n  func_len_result=`expr \"$[1]\" : \".*\" 2>/dev/null || echo $max_cmd_len`\n}\n\n_LT_EOF\nesac\n\ncase $lt_shell_append in\n  yes)\n    cat << \\_LT_EOF >> \"$cfgfile\"\n\n# func_append var value\n# Append VALUE to the end of shell variable VAR.\nfunc_append ()\n{\n  eval \"$[1]+=\\$[2]\"\n}\n_LT_EOF\n    ;;\n  *)\n    cat << \\_LT_EOF >> \"$cfgfile\"\n\n# func_append var value\n# Append VALUE to the end of shell variable VAR.\nfunc_append ()\n{\n  eval \"$[1]=\\$$[1]\\$[2]\"\n}\n\n_LT_EOF\n    ;;\n  esac\n])\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/config/ltmain.sh": "# Generated from ltmain.m4sh.\n\n# libtool (GNU libtool 1.3134 2009-11-29) 2.2.7a\n# Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n\n# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006,\n# 2007, 2008, 2009 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n# Usage: $progname [OPTION]... [MODE-ARG]...\n#\n# Provide generalized library-building support services.\n#\n#       --config             show all configuration variables\n#       --debug              enable verbose shell tracing\n#   -n, --dry-run            display commands without modifying any files\n#       --features           display basic configuration information and exit\n#       --mode=MODE          use operation mode MODE\n#       --no-finish          let install mode avoid finish commands\n#       --preserve-dup-deps  don't remove duplicate dependency libraries\n#       --quiet, --silent    don't print informational messages\n#       --no-quiet, --no-silent\n#                            print informational messages (default)\n#       --tag=TAG            use configuration variables from tag TAG\n#   -v, --verbose            print more informational messages than default\n#       --no-verbose         don't print the extra informational messages\n#       --version            print version information\n#   -h, --help, --help-all   print short, long, or detailed help message\n#\n# MODE must be one of the following:\n#\n#         clean              remove files from the build directory\n#         compile            compile a source file into a libtool object\n#         execute            automatically set library path, then run a program\n#         finish             complete the installation of libtool libraries\n#         install            install libraries or executables\n#         link               create a library or an executable\n#         uninstall          remove libraries from an installed directory\n#\n# MODE-ARGS vary depending on the MODE.  When passed as first option,\n# `--mode=MODE' may be abbreviated as `MODE' or a unique abbreviation of that.\n# Try `$progname --help --mode=MODE' for a more detailed description of MODE.\n#\n# When reporting a bug, please describe a test case to reproduce it and\n# include the following information:\n#\n#         host-triplet:\t$host\n#         shell:\t\t$SHELL\n#         compiler:\t\t$LTCC\n#         compiler flags:\t\t$LTCFLAGS\n#         linker:\t\t$LD (gnu? $with_gnu_ld)\n#         $progname:\t(GNU libtool 1.3134 2009-11-29) 2.2.7a\n#         automake:\t$automake_version\n#         autoconf:\t$autoconf_version\n#\n# Report bugs to <bug-libtool@gnu.org>.\n\nPROGRAM=libtool\nPACKAGE=libtool\nVERSION=2.2.7a\nTIMESTAMP=\" 1.3134 2009-11-29\"\npackage_revision=1.3134\n\n# Be Bourne compatible\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n$1\n_LTECHO_EOF'\n}\n\n# NLS nuisances: We save the old values to restore during execute mode.\n# Only set LANG and LC_ALL to C if already set.\n# These must not be set unconditionally because not all systems understand\n# e.g. LANG=C (notably SCO).\nlt_user_locale=\nlt_safe_locale=\nfor lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\ndo\n  eval \"if test \\\"\\${$lt_var+set}\\\" = set; then\n          save_$lt_var=\\$$lt_var\n          $lt_var=C\n\t  export $lt_var\n\t  lt_user_locale=\\\"$lt_var=\\\\\\$save_\\$lt_var; \\$lt_user_locale\\\"\n\t  lt_safe_locale=\\\"$lt_var=C; \\$lt_safe_locale\\\"\n\tfi\"\ndone\n\n$lt_unset CDPATH\n\n\n\n\n\n\n\n# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh\n# is ksh but when the shell is invoked as \"sh\" and the current value of\n# the _XPG environment variable is not equal to 1 (one), the special\n# positional parameter $0, within a function call, is the name of the\n# function.\nprogpath=\"$0\"\n\n\n\n: ${CP=\"cp -f\"}\n: ${ECHO=$as_echo}\n: ${EGREP=\"/bin/grep -E\"}\n: ${FGREP=\"/bin/grep -F\"}\n: ${GREP=\"/bin/grep\"}\n: ${LN_S=\"ln -s\"}\n: ${MAKE=\"make\"}\n: ${MKDIR=\"mkdir\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n: ${SED=\"/mount/endor/wildenhu/local-x86_64/bin/sed\"}\n: ${SHELL=\"${CONFIG_SHELL-/bin/sh}\"}\n: ${Xsed=\"$SED -e 1s/^X//\"}\n\n# Global variables:\nEXIT_SUCCESS=0\nEXIT_FAILURE=1\nEXIT_MISMATCH=63  # $? = 63 is used to indicate version mismatch to missing.\nEXIT_SKIP=77\t  # $? = 77 is used to indicate a skipped test to automake.\n\nexit_status=$EXIT_SUCCESS\n\n# Make sure IFS has a sensible default\nlt_nl='\n'\nIFS=\" \t$lt_nl\"\n\ndirname=\"s,/[^/]*$,,\"\nbasename=\"s,^.*/,,\"\n\n# func_dirname_and_basename file append nondir_replacement\n# perform func_basename and func_dirname in a single function\n# call:\n#   dirname:  Compute the dirname of FILE.  If nonempty,\n#             add APPEND to the result, otherwise set result\n#             to NONDIR_REPLACEMENT.\n#             value returned in \"$func_dirname_result\"\n#   basename: Compute filename of FILE.\n#             value retuned in \"$func_basename_result\"\n# Implementation must be kept synchronized with func_dirname\n# and func_basename. For efficiency, we do not delegate to\n# those functions but instead duplicate the functionality here.\nfunc_dirname_and_basename ()\n{\n  # Extract subdirectory from the argument.\n  func_dirname_result=`$ECHO \"${1}\" | $SED -e \"$dirname\"`\n  if test \"X$func_dirname_result\" = \"X${1}\"; then\n    func_dirname_result=\"${3}\"\n  else\n    func_dirname_result=\"$func_dirname_result${2}\"\n  fi\n  func_basename_result=`$ECHO \"${1}\" | $SED -e \"$basename\"`\n}\n\n# Generated shell functions inserted here.\n\n# These SED scripts presuppose an absolute path with a trailing slash.\npathcar='s,^/\\([^/]*\\).*$,\\1,'\npathcdr='s,^/[^/]*,,'\nremovedotparts=':dotsl\n\t\ts@/\\./@/@g\n\t\tt dotsl\n\t\ts,/\\.$,/,'\ncollapseslashes='s@/\\{1,\\}@/@g'\nfinalslash='s,/*$,/,'\n\n# func_normal_abspath PATH\n# Remove doubled-up and trailing slashes, \".\" path components,\n# and cancel out any \"..\" path components in PATH after making\n# it an absolute path.\n#             value returned in \"$func_normal_abspath_result\"\nfunc_normal_abspath ()\n{\n  # Start from root dir and reassemble the path.\n  func_normal_abspath_result=\n  func_normal_abspath_tpath=$1\n  func_normal_abspath_altnamespace=\n  case $func_normal_abspath_tpath in\n    \"\")\n      # Empty path, that just means $cwd.\n      func_stripname '' '/' \"`pwd`\"\n      func_normal_abspath_result=$func_stripname_result\n      return\n    ;;\n    # The next three entries are used to spot a run of precisely\n    # two leading slashes without using negated character classes;\n    # we take advantage of case's first-match behaviour.\n    ///*)\n      # Unusual form of absolute path, do nothing.\n    ;;\n    //*)\n      # Not necessarily an ordinary path; POSIX reserves leading '//'\n      # and for example Cygwin uses it to access remote file shares\n      # over CIFS/SMB, so we conserve a leading double slash if found.\n      func_normal_abspath_altnamespace=/\n    ;;\n    /*)\n      # Absolute path, do nothing.\n    ;;\n    *)\n      # Relative path, prepend $cwd.\n      func_normal_abspath_tpath=`pwd`/$func_normal_abspath_tpath\n    ;;\n  esac\n  # Cancel out all the simple stuff to save iterations.  We also want\n  # the path to end with a slash for ease of parsing, so make sure\n  # there is one (and only one) here.\n  func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$removedotparts\" -e \"$collapseslashes\" -e \"$finalslash\"`\n  while :; do\n    # Processed it all yet?\n    if test \"$func_normal_abspath_tpath\" = / ; then\n      # If we ascended to the root using \"..\" the result may be empty now.\n      if test -z \"$func_normal_abspath_result\" ; then\n        func_normal_abspath_result=/\n      fi\n      break\n    fi\n    func_normal_abspath_tcomponent=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$pathcar\"`\n    func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$pathcdr\"`\n    # Figure out what to do with it\n    case $func_normal_abspath_tcomponent in\n      \"\")\n        # Trailing empty path component, ignore it.\n      ;;\n      ..)\n        # Parent dir; strip last assembled component from result.\n        func_dirname \"$func_normal_abspath_result\"\n        func_normal_abspath_result=$func_dirname_result\n      ;;\n      *)\n        # Actual path component, append it.\n        func_normal_abspath_result=$func_normal_abspath_result/$func_normal_abspath_tcomponent\n      ;;\n    esac\n  done\n  # Restore leading double-slash if one was found on entry.\n  func_normal_abspath_result=$func_normal_abspath_altnamespace$func_normal_abspath_result\n}\n\n# func_relative_path SRCDIR DSTDIR\n# generates a relative path from SRCDIR to DSTDIR, with a trailing\n# slash if non-empty, suitable for immediately appending a filename\n# without needing to append a separator.\n#             value returned in \"$func_relative_path_result\"\nfunc_relative_path ()\n{\n  func_relative_path_result=\n  func_normal_abspath \"$1\"\n  func_relative_path_tlibdir=$func_normal_abspath_result\n  func_normal_abspath \"$2\"\n  func_relative_path_tbindir=$func_normal_abspath_result\n\n  # Ascend the tree starting from libdir\n  while :; do\n    # check if we have found a prefix of bindir\n    case $func_relative_path_tbindir in\n      $func_relative_path_tlibdir)\n        # found an exact match\n        func_relative_path_tcancelled=\n        break\n        ;;\n      $func_relative_path_tlibdir*)\n        # found a matching prefix\n        func_stripname \"$func_relative_path_tlibdir\" '' \"$func_relative_path_tbindir\"\n        func_relative_path_tcancelled=$func_stripname_result\n        if test -z \"$func_relative_path_result\"; then\n          func_relative_path_result=.\n        fi\n        break\n        ;;\n      *)\n        func_dirname $func_relative_path_tlibdir\n        func_relative_path_tlibdir=${func_dirname_result}\n        if test \"x$func_relative_path_tlibdir\" = x ; then\n          # Have to descend all the way to the root!\n          func_relative_path_result=../$func_relative_path_result\n          func_relative_path_tcancelled=$func_relative_path_tbindir\n          break\n        fi\n        func_relative_path_result=../$func_relative_path_result\n        ;;\n    esac\n  done\n\n  # Now calculate path; take care to avoid doubling-up slashes.\n  func_stripname '' '/' \"$func_relative_path_result\"\n  func_relative_path_result=$func_stripname_result\n  func_stripname '/' '/' \"$func_relative_path_tcancelled\"\n  if test \"x$func_stripname_result\" != x ; then\n    func_relative_path_result=${func_relative_path_result}/${func_stripname_result}\n  fi\n\n  # Normalisation. If bindir is libdir, return empty string,\n  # else relative path ending with a slash; either way, target\n  # file name can be directly appended.\n  if test ! -z \"$func_relative_path_result\"; then\n    func_stripname './' '' \"$func_relative_path_result/\"\n    func_relative_path_result=$func_stripname_result\n  fi\n}\n\n# The name of this program:\nfunc_dirname_and_basename \"$progpath\"\nprogname=$func_basename_result\n\n# Make sure we have an absolute path for reexecution:\ncase $progpath in\n  [\\\\/]*|[A-Za-z]:\\\\*) ;;\n  *[\\\\/]*)\n     progdir=$func_dirname_result\n     progdir=`cd \"$progdir\" && pwd`\n     progpath=\"$progdir/$progname\"\n     ;;\n  *)\n     save_IFS=\"$IFS\"\n     IFS=:\n     for progdir in $PATH; do\n       IFS=\"$save_IFS\"\n       test -x \"$progdir/$progname\" && break\n     done\n     IFS=\"$save_IFS\"\n     test -n \"$progdir\" || progdir=`pwd`\n     progpath=\"$progdir/$progname\"\n     ;;\nesac\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed=\"${SED}\"' -e 1s/^X//'\nsed_quote_subst='s/\\([`\"$\\\\]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([\"`\\\\]\\)/\\\\\\1/g'\n\n# Re-`\\' parameter expansions in output of double_quote_subst that were\n# `\\'-ed in input to the same.  If an odd number of `\\' preceded a '$'\n# in input to double_quote_subst, that '$' was protected from expansion.\n# Since each input `\\' is now two `\\'s, look for any number of runs of\n# four `\\'s followed by two `\\'s and then a '$'.  `\\' that '$'.\nbs='\\\\'\nbs2='\\\\\\\\'\nbs4='\\\\\\\\\\\\\\\\'\ndollar='\\$'\nsed_double_backslash=\"\\\n  s/$bs4/&\\\\\n/g\n  s/^$bs2$dollar/$bs&/\n  s/\\\\([^$bs]\\\\)$bs2$dollar/\\\\1$bs2$bs$dollar/g\n  s/\\n//g\"\n\n# Standard options:\nopt_dry_run=false\nopt_help=false\nopt_quiet=false\nopt_verbose=false\nopt_warning=:\n\n# func_echo arg...\n# Echo program name prefixed message, along with the current mode\n# name if it has been set yet.\nfunc_echo ()\n{\n    $ECHO \"$progname${mode+: }$mode: $*\"\n}\n\n# func_verbose arg...\n# Echo program name prefixed message in verbose mode only.\nfunc_verbose ()\n{\n    $opt_verbose && func_echo ${1+\"$@\"}\n\n    # A bug in bash halts the script if the last line of a function\n    # fails when set -e is in force, so we need another command to\n    # work around that:\n    :\n}\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\n# func_error arg...\n# Echo program name prefixed message to standard error.\nfunc_error ()\n{\n    $ECHO \"$progname${mode+: }$mode: \"${1+\"$@\"} 1>&2\n}\n\n# func_warning arg...\n# Echo program name prefixed warning message to standard error.\nfunc_warning ()\n{\n    $opt_warning && $ECHO \"$progname${mode+: }$mode: warning: \"${1+\"$@\"} 1>&2\n\n    # bash bug again:\n    :\n}\n\n# func_fatal_error arg...\n# Echo program name prefixed message to standard error, and exit.\nfunc_fatal_error ()\n{\n    func_error ${1+\"$@\"}\n    exit $EXIT_FAILURE\n}\n\n# func_fatal_help arg...\n# Echo program name prefixed message to standard error, followed by\n# a help hint, and exit.\nfunc_fatal_help ()\n{\n    func_error ${1+\"$@\"}\n    func_fatal_error \"$help\"\n}\nhelp=\"Try \\`$progname --help' for more information.\"  ## default\n\n\n# func_grep expression filename\n# Check whether EXPRESSION matches any line of FILENAME, without output.\nfunc_grep ()\n{\n    $GREP \"$1\" \"$2\" >/dev/null 2>&1\n}\n\n\n# func_mkdir_p directory-path\n# Make sure the entire path to DIRECTORY-PATH is available.\nfunc_mkdir_p ()\n{\n    my_directory_path=\"$1\"\n    my_dir_list=\n\n    if test -n \"$my_directory_path\" && test \"$opt_dry_run\" != \":\"; then\n\n      # Protect directory names starting with `-'\n      case $my_directory_path in\n        -*) my_directory_path=\"./$my_directory_path\" ;;\n      esac\n\n      # While some portion of DIR does not yet exist...\n      while test ! -d \"$my_directory_path\"; do\n        # ...make a list in topmost first order.  Use a colon delimited\n\t# list incase some portion of path contains whitespace.\n        my_dir_list=\"$my_directory_path:$my_dir_list\"\n\n        # If the last portion added has no slash in it, the list is done\n        case $my_directory_path in */*) ;; *) break ;; esac\n\n        # ...otherwise throw away the child directory and loop\n        my_directory_path=`$ECHO \"$my_directory_path\" | $SED -e \"$dirname\"`\n      done\n      my_dir_list=`$ECHO \"$my_dir_list\" | $SED 's,:*$,,'`\n\n      save_mkdir_p_IFS=\"$IFS\"; IFS=':'\n      for my_dir in $my_dir_list; do\n\tIFS=\"$save_mkdir_p_IFS\"\n        # mkdir can fail with a `File exist' error if two processes\n        # try to create one of the directories concurrently.  Don't\n        # stop in that case!\n        $MKDIR \"$my_dir\" 2>/dev/null || :\n      done\n      IFS=\"$save_mkdir_p_IFS\"\n\n      # Bail out if we (or some other process) failed to create a directory.\n      test -d \"$my_directory_path\" || \\\n        func_fatal_error \"Failed to create \\`$1'\"\n    fi\n}\n\n\n# func_mktempdir [string]\n# Make a temporary directory that won't clash with other running\n# libtool processes, and avoids race conditions if possible.  If\n# given, STRING is the basename for that directory.\nfunc_mktempdir ()\n{\n    my_template=\"${TMPDIR-/tmp}/${1-$progname}\"\n\n    if test \"$opt_dry_run\" = \":\"; then\n      # Return a directory name, but don't create it in dry-run mode\n      my_tmpdir=\"${my_template}-$$\"\n    else\n\n      # If mktemp works, use that first and foremost\n      my_tmpdir=`mktemp -d \"${my_template}-XXXXXXXX\" 2>/dev/null`\n\n      if test ! -d \"$my_tmpdir\"; then\n        # Failing that, at least try and use $RANDOM to avoid a race\n        my_tmpdir=\"${my_template}-${RANDOM-0}$$\"\n\n        save_mktempdir_umask=`umask`\n        umask 0077\n        $MKDIR \"$my_tmpdir\"\n        umask $save_mktempdir_umask\n      fi\n\n      # If we're not in dry-run mode, bomb out on failure\n      test -d \"$my_tmpdir\" || \\\n        func_fatal_error \"cannot create temporary directory \\`$my_tmpdir'\"\n    fi\n\n    $ECHO \"$my_tmpdir\"\n}\n\n\n# func_quote_for_eval arg\n# Aesthetically quote ARG to be evaled later.\n# This function returns two values: FUNC_QUOTE_FOR_EVAL_RESULT\n# is double-quoted, suitable for a subsequent eval, whereas\n# FUNC_QUOTE_FOR_EVAL_UNQUOTED_RESULT has merely all characters\n# which are still active within double quotes backslashified.\nfunc_quote_for_eval ()\n{\n    case $1 in\n      *[\\\\\\`\\\"\\$]*)\n\tfunc_quote_for_eval_unquoted_result=`$ECHO \"$1\" | $SED \"$sed_quote_subst\"` ;;\n      *)\n        func_quote_for_eval_unquoted_result=\"$1\" ;;\n    esac\n\n    case $func_quote_for_eval_unquoted_result in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting, command substitution and and variable\n      # expansion for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        func_quote_for_eval_result=\"\\\"$func_quote_for_eval_unquoted_result\\\"\"\n        ;;\n      *)\n        func_quote_for_eval_result=\"$func_quote_for_eval_unquoted_result\"\n    esac\n}\n\n\n# func_quote_for_expand arg\n# Aesthetically quote ARG to be evaled later; same as above,\n# but do not quote variable references.\nfunc_quote_for_expand ()\n{\n    case $1 in\n      *[\\\\\\`\\\"]*)\n\tmy_arg=`$ECHO \"$1\" | $SED \\\n\t    -e \"$double_quote_subst\" -e \"$sed_double_backslash\"` ;;\n      *)\n        my_arg=\"$1\" ;;\n    esac\n\n    case $my_arg in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting and command substitution for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        my_arg=\"\\\"$my_arg\\\"\"\n        ;;\n    esac\n\n    func_quote_for_expand_result=\"$my_arg\"\n}\n\n\n# func_show_eval cmd [fail_exp]\n# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.\nfunc_show_eval ()\n{\n    my_cmd=\"$1\"\n    my_fail_exp=\"${2-:}\"\n\n    ${opt_silent-false} || {\n      func_quote_for_expand \"$my_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    if ${opt_dry_run-false}; then :; else\n      eval \"$my_cmd\"\n      my_status=$?\n      if test \"$my_status\" -eq 0; then :; else\n\teval \"(exit $my_status); $my_fail_exp\"\n      fi\n    fi\n}\n\n\n# func_show_eval_locale cmd [fail_exp]\n# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.  Use the saved locale for evaluation.\nfunc_show_eval_locale ()\n{\n    my_cmd=\"$1\"\n    my_fail_exp=\"${2-:}\"\n\n    ${opt_silent-false} || {\n      func_quote_for_expand \"$my_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    if ${opt_dry_run-false}; then :; else\n      eval \"$lt_user_locale\n\t    $my_cmd\"\n      my_status=$?\n      eval \"$lt_safe_locale\"\n      if test \"$my_status\" -eq 0; then :; else\n\teval \"(exit $my_status); $my_fail_exp\"\n      fi\n    fi\n}\n\n\n\n\n\n# func_version\n# Echo version message to standard output and exit.\nfunc_version ()\n{\n    $SED -n '/(C)/!b go\n\t:more\n\t/\\./!{\n\t  N\n\t  s/\\n# //\n\t  b more\n\t}\n\t:go\n\t/^# '$PROGRAM' (GNU /,/# warranty; / {\n        s/^# //\n\ts/^# *$//\n        s/\\((C)\\)[ 0-9,-]*\\( [1-9][0-9]*\\)/\\1\\2/\n        p\n     }' < \"$progpath\"\n     exit $?\n}\n\n# func_usage\n# Echo short help message to standard output and exit.\nfunc_usage ()\n{\n    $SED -n '/^# Usage:/,/^#  *-h/ {\n        s/^# //\n\ts/^# *$//\n\ts/\\$progname/'$progname'/\n\tp\n    }' < \"$progpath\"\n    echo\n    $ECHO \"run \\`$progname --help | more' for full usage\"\n    exit $?\n}\n\n# func_help [NOEXIT]\n# Echo long help message to standard output and exit,\n# unless 'noexit' is passed as argument.\nfunc_help ()\n{\n    $SED -n '/^# Usage:/,/# Report bugs to/ {\n        s/^# //\n\ts/^# *$//\n\ts*\\$progname*'$progname'*\n\ts*\\$host*'\"$host\"'*\n\ts*\\$SHELL*'\"$SHELL\"'*\n\ts*\\$LTCC*'\"$LTCC\"'*\n\ts*\\$LTCFLAGS*'\"$LTCFLAGS\"'*\n\ts*\\$LD*'\"$LD\"'*\n\ts/\\$with_gnu_ld/'\"$with_gnu_ld\"'/\n\ts/\\$automake_version/'\"`(automake --version) 2>/dev/null |$SED 1q`\"'/\n\ts/\\$autoconf_version/'\"`(autoconf --version) 2>/dev/null |$SED 1q`\"'/\n\tp\n     }' < \"$progpath\"\n    ret=$?\n    if test -z \"$1\"; then\n      exit $ret\n    fi\n}\n\n# func_missing_arg argname\n# Echo program name prefixed message to standard error and set global\n# exit_cmd.\nfunc_missing_arg ()\n{\n    func_error \"missing argument for $1\"\n    exit_cmd=exit\n}\n\nexit_cmd=:\n\n\n\n\n\n\nmagic=\"%%%MAGIC variable%%%\"\nmagic_exe=\"%%%MAGIC EXE variable%%%\"\n\n# Global variables.\n# $mode is unset\nnonopt=\nexecute_dlfiles=\npreserve_args=\nlo2o=\"s/\\\\.lo\\$/.${objext}/\"\no2lo=\"s/\\\\.${objext}\\$/.lo/\"\nextracted_archives=\nextracted_serial=0\n\nopt_dry_run=false\nopt_finish=:\nopt_duplicate_deps=false\nopt_silent=false\nopt_debug=:\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\n# func_fatal_configuration arg...\n# Echo program name prefixed message to standard error, followed by\n# a configuration failure hint, and exit.\nfunc_fatal_configuration ()\n{\n    func_error ${1+\"$@\"}\n    func_error \"See the $PACKAGE documentation for more information.\"\n    func_fatal_error \"Fatal configuration error.\"\n}\n\n\n# func_config\n# Display the configuration for all the tags in this script.\nfunc_config ()\n{\n    re_begincf='^# ### BEGIN LIBTOOL'\n    re_endcf='^# ### END LIBTOOL'\n\n    # Default configuration.\n    $SED \"1,/$re_begincf CONFIG/d;/$re_endcf CONFIG/,\\$d\" < \"$progpath\"\n\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      $SED -n \"/$re_begincf TAG CONFIG: $tagname\\$/,/$re_endcf TAG CONFIG: $tagname\\$/p\" < \"$progpath\"\n    done\n\n    exit $?\n}\n\n# func_features\n# Display the features supported by this script.\nfunc_features ()\n{\n    echo \"host: $host\"\n    if test \"$build_libtool_libs\" = yes; then\n      echo \"enable shared libraries\"\n    else\n      echo \"disable shared libraries\"\n    fi\n    if test \"$build_old_libs\" = yes; then\n      echo \"enable static libraries\"\n    else\n      echo \"disable static libraries\"\n    fi\n\n    exit $?\n}\n\n# func_enable_tag tagname\n# Verify that TAGNAME is valid, and either flag an error and exit, or\n# enable the TAGNAME tag.  We also add TAGNAME to the global $taglist\n# variable here.\nfunc_enable_tag ()\n{\n  # Global variable:\n  tagname=\"$1\"\n\n  re_begincf=\"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\\$\"\n  re_endcf=\"^# ### END LIBTOOL TAG CONFIG: $tagname\\$\"\n  sed_extractcf=\"/$re_begincf/,/$re_endcf/p\"\n\n  # Validate tagname.\n  case $tagname in\n    *[!-_A-Za-z0-9,/]*)\n      func_fatal_error \"invalid tag name: $tagname\"\n      ;;\n  esac\n\n  # Don't test for the \"default\" C tag, as we know it's\n  # there but not specially marked.\n  case $tagname in\n    CC) ;;\n    *)\n      if $GREP \"$re_begincf\" \"$progpath\" >/dev/null 2>&1; then\n\ttaglist=\"$taglist $tagname\"\n\n\t# Evaluate the configuration.  Be careful to quote the path\n\t# and the sed script, to avoid splitting on whitespace, but\n\t# also don't use non-portable quotes within backquotes within\n\t# quotes we have to do it in 2 steps:\n\textractedcf=`$SED -n -e \"$sed_extractcf\" < \"$progpath\"`\n\teval \"$extractedcf\"\n      else\n\tfunc_error \"ignoring unknown tag $tagname\"\n      fi\n      ;;\n  esac\n}\n\n# Parse options once, thoroughly.  This comes as soon as possible in\n# the script to make things like `libtool --version' happen quickly.\n{\n\n  # Shorthand for --mode=foo, only valid as the first argument\n  case $1 in\n  clean|clea|cle|cl)\n    shift; set dummy --mode clean ${1+\"$@\"}; shift\n    ;;\n  compile|compil|compi|comp|com|co|c)\n    shift; set dummy --mode compile ${1+\"$@\"}; shift\n    ;;\n  execute|execut|execu|exec|exe|ex|e)\n    shift; set dummy --mode execute ${1+\"$@\"}; shift\n    ;;\n  finish|finis|fini|fin|fi|f)\n    shift; set dummy --mode finish ${1+\"$@\"}; shift\n    ;;\n  install|instal|insta|inst|ins|in|i)\n    shift; set dummy --mode install ${1+\"$@\"}; shift\n    ;;\n  link|lin|li|l)\n    shift; set dummy --mode link ${1+\"$@\"}; shift\n    ;;\n  uninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)\n    shift; set dummy --mode uninstall ${1+\"$@\"}; shift\n    ;;\n  esac\n\n  # Parse non-mode specific arguments:\n  while test \"$#\" -gt 0; do\n    opt=\"$1\"\n    shift\n\n    case $opt in\n      --config)\t\tfunc_config\t\t\t\t\t;;\n\n      --debug)\t\tpreserve_args=\"$preserve_args $opt\"\n\t\t\tfunc_echo \"enabling shell trace mode\"\n\t\t\topt_debug='set -x'\n\t\t\t$opt_debug\n\t\t\t;;\n\n      -dlopen)\t\ttest \"$#\" -eq 0 && func_missing_arg \"$opt\" && break\n\t\t\texecute_dlfiles=\"$execute_dlfiles $1\"\n\t\t\tshift\n\t\t\t;;\n\n      --dry-run | -n)\topt_dry_run=:\t\t\t\t\t;;\n      --features)       func_features\t\t\t\t\t;;\n      --finish)\t\tmode=\"finish\"\t\t\t\t\t;;\n      --no-finish)\topt_finish=false\t\t\t\t;;\n\n      --mode)\t\ttest \"$#\" -eq 0 && func_missing_arg \"$opt\" && break\n\t\t\tcase $1 in\n\t\t\t  # Valid mode arguments:\n\t\t\t  clean)\t;;\n\t\t\t  compile)\t;;\n\t\t\t  execute)\t;;\n\t\t\t  finish)\t;;\n\t\t\t  install)\t;;\n\t\t\t  link)\t\t;;\n\t\t\t  relink)\t;;\n\t\t\t  uninstall)\t;;\n\n\t\t\t  # Catch anything else as an error\n\t\t\t  *) func_error \"invalid argument for $opt\"\n\t\t\t     exit_cmd=exit\n\t\t\t     break\n\t\t\t     ;;\n\t\t        esac\n\n\t\t\tmode=\"$1\"\n\t\t\tshift\n\t\t\t;;\n\n      --preserve-dup-deps)\n\t\t\topt_duplicate_deps=:\t\t\t\t;;\n\n      --quiet|--silent)\tpreserve_args=\"$preserve_args $opt\"\n\t\t\topt_silent=:\n\t\t\topt_verbose=false\n\t\t\t;;\n\n      --no-quiet|--no-silent)\n\t\t\tpreserve_args=\"$preserve_args $opt\"\n\t\t\topt_silent=false\n\t\t\t;;\n\n      --verbose| -v)\tpreserve_args=\"$preserve_args $opt\"\n\t\t\topt_silent=false\n\t\t\topt_verbose=:\n\t\t\t;;\n\n      --no-verbose)\tpreserve_args=\"$preserve_args $opt\"\n\t\t\topt_verbose=false\n\t\t\t;;\n\n      --tag)\t\ttest \"$#\" -eq 0 && func_missing_arg \"$opt\" && break\n\t\t\tpreserve_args=\"$preserve_args $opt $1\"\n\t\t\tfunc_enable_tag \"$1\"\t# tagname is set here\n\t\t\tshift\n\t\t\t;;\n\n      # Separate optargs to long options:\n      -dlopen=*|--mode=*|--tag=*)\n\t\t\tfunc_opt_split \"$opt\"\n\t\t\tset dummy \"$func_opt_split_opt\" \"$func_opt_split_arg\" ${1+\"$@\"}\n\t\t\tshift\n\t\t\t;;\n\n      -\\?|-h)\t\tfunc_usage\t\t\t\t\t;;\n      --help)\t\topt_help=:\t\t\t\t\t;;\n      --help-all)\topt_help=': help-all'\t\t\t\t;;\n      --version)\tfunc_version\t\t\t\t\t;;\n\n      -*)\t\tfunc_fatal_help \"unrecognized option \\`$opt'\"\t;;\n\n      *)\t\tnonopt=\"$opt\"\n\t\t\tbreak\n\t\t\t;;\n    esac\n  done\n\n\n  case $host in\n    *cygwin* | *mingw* | *pw32* | *cegcc*)\n      # don't eliminate duplications in $postdeps and $predeps\n      opt_duplicate_compiler_generated_deps=:\n      ;;\n    *)\n      opt_duplicate_compiler_generated_deps=$opt_duplicate_deps\n      ;;\n  esac\n\n  # Having warned about all mis-specified options, bail out if\n  # anything was wrong.\n  $exit_cmd $EXIT_FAILURE\n}\n\n# func_check_version_match\n# Ensure that we are using m4 macros, and libtool script from the same\n# release of libtool.\nfunc_check_version_match ()\n{\n  if test \"$package_revision\" != \"$macro_revision\"; then\n    if test \"$VERSION\" != \"$macro_version\"; then\n      if test -z \"$macro_version\"; then\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from an older release.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n      else\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from $PACKAGE $macro_version.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n      fi\n    else\n      cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,\n$progname: but the definition of this LT_INIT comes from revision $macro_revision.\n$progname: You should recreate aclocal.m4 with macros from revision $package_revision\n$progname: of $PACKAGE $VERSION and run autoconf again.\n_LT_EOF\n    fi\n\n    exit $EXIT_MISMATCH\n  fi\n}\n\n\n## ----------- ##\n##    Main.    ##\n## ----------- ##\n\n$opt_help || {\n  # Sanity checks first:\n  func_check_version_match\n\n  if test \"$build_libtool_libs\" != yes && test \"$build_old_libs\" != yes; then\n    func_fatal_configuration \"not configured to build any kind of library\"\n  fi\n\n  test -z \"$mode\" && func_fatal_error \"error: you must specify a MODE.\"\n\n\n  # Darwin sucks\n  eval \"std_shrext=\\\"$shrext_cmds\\\"\"\n\n\n  # Only execute mode is allowed to have -dlopen flags.\n  if test -n \"$execute_dlfiles\" && test \"$mode\" != execute; then\n    func_error \"unrecognized option \\`-dlopen'\"\n    $ECHO \"$help\" 1>&2\n    exit $EXIT_FAILURE\n  fi\n\n  # Change the help message to a mode-specific one.\n  generic_help=\"$help\"\n  help=\"Try \\`$progname --help --mode=$mode' for more information.\"\n}\n\n\n# func_lalib_p file\n# True iff FILE is a libtool `.la' library or `.lo' object file.\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_lalib_p ()\n{\n    test -f \"$1\" &&\n      $SED -e 4q \"$1\" 2>/dev/null \\\n        | $GREP \"^# Generated by .*$PACKAGE\" > /dev/null 2>&1\n}\n\n# func_lalib_unsafe_p file\n# True iff FILE is a libtool `.la' library or `.lo' object file.\n# This function implements the same check as func_lalib_p without\n# resorting to external programs.  To this end, it redirects stdin and\n# closes it afterwards, without saving the original file descriptor.\n# As a safety measure, use it only where a negative result would be\n# fatal anyway.  Works if `file' does not exist.\nfunc_lalib_unsafe_p ()\n{\n    lalib_p=no\n    if test -f \"$1\" && test -r \"$1\" && exec 5<&0 <\"$1\"; then\n\tfor lalib_p_l in 1 2 3 4\n\tdo\n\t    read lalib_p_line\n\t    case \"$lalib_p_line\" in\n\t\t\\#\\ Generated\\ by\\ *$PACKAGE* ) lalib_p=yes; break;;\n\t    esac\n\tdone\n\texec 0<&5 5<&-\n    fi\n    test \"$lalib_p\" = yes\n}\n\n# func_ltwrapper_script_p file\n# True iff FILE is a libtool wrapper script\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_script_p ()\n{\n    func_lalib_p \"$1\"\n}\n\n# func_ltwrapper_executable_p file\n# True iff FILE is a libtool wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_executable_p ()\n{\n    func_ltwrapper_exec_suffix=\n    case $1 in\n    *.exe) ;;\n    *) func_ltwrapper_exec_suffix=.exe ;;\n    esac\n    $GREP \"$magic_exe\" \"$1$func_ltwrapper_exec_suffix\" >/dev/null 2>&1\n}\n\n# func_ltwrapper_scriptname file\n# Assumes file is an ltwrapper_executable\n# uses $file to determine the appropriate filename for a\n# temporary ltwrapper_script.\nfunc_ltwrapper_scriptname ()\n{\n    func_ltwrapper_scriptname_result=\"\"\n    if func_ltwrapper_executable_p \"$1\"; then\n\tfunc_dirname_and_basename \"$1\" \"\" \".\"\n\tfunc_stripname '' '.exe' \"$func_basename_result\"\n\tfunc_ltwrapper_scriptname_result=\"$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper\"\n    fi\n}\n\n# func_ltwrapper_p file\n# True iff FILE is a libtool wrapper script or wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_p ()\n{\n    func_ltwrapper_script_p \"$1\" || func_ltwrapper_executable_p \"$1\"\n}\n\n\n# func_execute_cmds commands fail_cmd\n# Execute tilde-delimited COMMANDS.\n# If FAIL_CMD is given, eval that upon failure.\n# FAIL_CMD may read-access the current command in variable CMD!\nfunc_execute_cmds ()\n{\n    $opt_debug\n    save_ifs=$IFS; IFS='~'\n    for cmd in $1; do\n      IFS=$save_ifs\n      eval \"cmd=\\\"$cmd\\\"\"\n      func_show_eval \"$cmd\" \"${2-:}\"\n    done\n    IFS=$save_ifs\n}\n\n\n# func_source file\n# Source FILE, adding directory component if necessary.\n# Note that it is not necessary on cygwin/mingw to append a dot to\n# FILE even if both FILE and FILE.exe exist: automatic-append-.exe\n# behavior happens only for exec(3), not for open(2)!  Also, sourcing\n# `FILE.' does not work on cygwin managed mounts.\nfunc_source ()\n{\n    $opt_debug\n    case $1 in\n    */* | *\\\\*)\t. \"$1\" ;;\n    *)\t\t. \"./$1\" ;;\n    esac\n}\n\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    $opt_debug\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n        func_quote_for_eval \"$arg\"\n\tCC_quoted=\"$CC_quoted $func_quote_for_eval_result\"\n      done\n      CC_expanded=`func_echo_all $CC`\n      CC_quoted_expanded=`func_echo_all $CC_quoted`\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n      \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if $GREP \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t      # Double-quote args containing other shell metacharacters.\n\t      func_quote_for_eval \"$arg\"\n\t      CC_quoted=\"$CC_quoted $func_quote_for_eval_result\"\n\t    done\n\t    CC_expanded=`func_echo_all $CC`\n\t    CC_quoted_expanded=`func_echo_all $CC_quoted`\n\t    case \"$@ \" in\n\t    \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n\t    \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  func_echo \"unable to infer tagged configuration\"\n\t  func_fatal_error \"specify a tag with \\`--tag'\"\n#\telse\n#\t  func_verbose \"using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n\n# func_write_libtool_object output_name pic_name nonpic_name\n# Create a libtool object file (analogous to a \".la\" file),\n# but don't create it if we're doing a dry run.\nfunc_write_libtool_object ()\n{\n    write_libobj=${1}\n    if test \"$build_libtool_libs\" = yes; then\n      write_lobj=\\'${2}\\'\n    else\n      write_lobj=none\n    fi\n\n    if test \"$build_old_libs\" = yes; then\n      write_oldobj=\\'${3}\\'\n    else\n      write_oldobj=none\n    fi\n\n    $opt_dry_run || {\n      cat >${write_libobj}T <<EOF\n# $write_libobj - a libtool object file\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object=$write_lobj\n\n# Name of the non-PIC object\nnon_pic_object=$write_oldobj\n\nEOF\n      $MV \"${write_libobj}T\" \"${write_libobj}\"\n    }\n}\n\n# func_mode_compile arg...\nfunc_mode_compile ()\n{\n    $opt_debug\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=\"$nonopt\"  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n    pie_flag=\n\n    for arg\n    do\n      case $arg_mode in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=\"$arg\"\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=\"$arg\"\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  test -n \"$libobj\" && \\\n\t    func_fatal_error \"you cannot specify \\`-o' more than once\"\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-pie | -fpie | -fPIE)\n          pie_flag=\"$pie_flag $arg\"\n\t  continue\n\t  ;;\n\n\t-shared | -static | -prefer-pic | -prefer-non-pic)\n\t  later=\"$later $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  func_stripname '-Wc,' '' \"$arg\"\n\t  args=$func_stripname_result\n\t  lastarg=\n\t  save_ifs=\"$IFS\"; IFS=','\n\t  for arg in $args; do\n\t    IFS=\"$save_ifs\"\n\t    func_quote_for_eval \"$arg\"\n\t    lastarg=\"$lastarg $func_quote_for_eval_result\"\n\t  done\n\t  IFS=\"$save_ifs\"\n\t  func_stripname ' ' '' \"$lastarg\"\n\t  lastarg=$func_stripname_result\n\n\t  # Add the arguments to base_compile.\n\t  base_compile=\"$base_compile $lastarg\"\n\t  continue\n\t  ;;\n\n\t*)\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=\"$srcfile\"\n\t  srcfile=\"$arg\"\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      func_quote_for_eval \"$lastarg\"\n      base_compile=\"$base_compile $func_quote_for_eval_result\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      func_fatal_error \"you must specify an argument for -Xcompile\"\n      ;;\n    target)\n      func_fatal_error \"you must specify a target with \\`-o'\"\n      ;;\n    *)\n      # Get the name of the library object.\n      test -z \"$libobj\" && {\n\tfunc_basename \"$srcfile\"\n\tlibobj=\"$func_basename_result\"\n      }\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    case $libobj in\n    *.[cCFSifmso] | \\\n    *.ada | *.adb | *.ads | *.asm | \\\n    *.c++ | *.cc | *.ii | *.class | *.cpp | *.cxx | \\\n    *.[fF][09]? | *.for | *.java | *.go | *.obj | *.sx | *.cu | *.cup)\n      func_xform \"$libobj\"\n      libobj=$func_xform_result\n      ;;\n    esac\n\n    case $libobj in\n    *.lo) func_lo2o \"$libobj\"; obj=$func_lo2o_result ;;\n    *)\n      func_fatal_error \"cannot determine name of library object from \\`$libobj'\"\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -shared)\n\ttest \"$build_libtool_libs\" != yes && \\\n\t  func_fatal_configuration \"can not build a shared library\"\n\tbuild_old_libs=no\n\tcontinue\n\t;;\n\n      -static)\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    func_quote_for_eval \"$libobj\"\n    test \"X$libobj\" != \"X$func_quote_for_eval_result\" \\\n      && $ECHO \"X$libobj\" | $GREP '[]~#^*{};<>?\"'\"'\"'\t &()|`$[]' \\\n      && func_warning \"libobj name \\`$libobj' may not contain shell special characters.\"\n    func_dirname_and_basename \"$obj\" \"/\" \"\"\n    objname=\"$func_basename_result\"\n    xdir=\"$func_dirname_result\"\n    lobj=${xdir}$objdir/$objname\n\n    test -z \"$base_compile\" && \\\n      func_fatal_help \"you must specify a compilation command\"\n\n    # Delete any leftover library objects.\n    if test \"$build_old_libs\" = yes; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2* | cegcc*)\n      pic_mode=default\n      ;;\n    esac\n    if test \"$pic_mode\" = no && test \"$deplibs_check_method\" != pass_all; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test \"$compiler_c_o\" = no; then\n      output_obj=`$ECHO \"$srcfile\" | $SED 's%^.*/%%; s%\\.[^.]*$%%'`.${objext}\n      lockfile=\"$output_obj.lock\"\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test \"$need_locks\" = yes; then\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test \"$need_locks\" = warn; then\n      if test -f \"$lockfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n      removelist=\"$removelist $output_obj\"\n      $ECHO \"$srcfile\" > \"$lockfile\"\n    fi\n\n    $opt_dry_run || $RM $removelist\n    removelist=\"$removelist $lockfile\"\n    trap '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE' 1 2 15\n\n    if test -n \"$fix_srcfile_path\"; then\n      eval \"srcfile=\\\"$fix_srcfile_path\\\"\"\n    fi\n    func_quote_for_eval \"$srcfile\"\n    qsrcfile=$func_quote_for_eval_result\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test \"$build_libtool_libs\" = yes; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test \"$pic_mode\" != no; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      func_mkdir_p \"$xdir$objdir\"\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tcommand=\"$command -o $lobj\"\n      fi\n\n      func_show_eval_locale \"$command\"\t\\\n          'test -n \"$output_obj\" && $RM $removelist; exit $EXIT_FAILURE'\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$lobj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n\n      # Allow error messages only from the first compilation.\n      if test \"$suppress_opt\" = yes; then\n\tsuppress_output=' >/dev/null 2>&1'\n      fi\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test \"$build_old_libs\" = yes; then\n      if test \"$pic_mode\" != yes; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile$pie_flag\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test \"$compiler_c_o\" = yes; then\n\tcommand=\"$command -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      command=\"$command$suppress_output\"\n      func_show_eval_locale \"$command\" \\\n        '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$obj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n    fi\n\n    $opt_dry_run || {\n      func_write_libtool_object \"$libobj\" \"$objdir/$objname\" \"$objname\"\n\n      # Unlock the critical section if it was locked\n      if test \"$need_locks\" != no; then\n\tremovelist=$lockfile\n        $RM \"$lockfile\"\n      fi\n    }\n\n    exit $EXIT_SUCCESS\n}\n\n$opt_help || {\n  test \"$mode\" = compile && func_mode_compile ${1+\"$@\"}\n}\n\nfunc_mode_help ()\n{\n    # We need to display help for each of the modes.\n    case $mode in\n      \"\")\n        # Generic help is extracted from the usage comments\n        # at the start of this file.\n        func_help\n        ;;\n\n      clean)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      compile)\n      $ECHO \\\n\"Usage: $progname [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -no-suppress      do not suppress compiler output for multiple passes\n  -prefer-pic       try to building PIC objects only\n  -prefer-non-pic   try to building non-PIC objects only\n  -shared           do not build a \\`.o' file suitable for static linking\n  -static           only build a \\`.o' file suitable for static linking\n  -Wc,FLAG          pass FLAG directly to the compiler\n\nCOMPILE-COMMAND is a command to be used in creating a \\`standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix \\`.c' with the\nlibrary object suffix, \\`.lo'.\"\n        ;;\n\n      execute)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to \\`-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n        ;;\n\n      finish)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe \\`--dry-run' option if you just want to see what would be executed.\"\n        ;;\n\n      install)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the \\`install' or \\`cp' program.\n\nThe following components of INSTALL-COMMAND are treated specially:\n\n  -inst-prefix-dir PREFIX-DIR  Use PREFIX-DIR as a staging area for installation\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n        ;;\n\n      link)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -bindir BINDIR    specify path to binaries directory (for systems where\n                    libraries must be found in the PATH setting at runtime)\n  -dlopen FILE      \\`-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n                    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n                    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  Use a list of object files found in FILE to specify objects\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -shared           only do dynamic linking of libtool libraries\n  -shrext SUFFIX    override the standard shared library file extension\n  -static           do not do any dynamic linking of uninstalled libtool libraries\n  -static-libtool-libs\n                    do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n                    specify library version info [each variable defaults to 0]\n  -weak LIBNAME     declare that the target provides the LIBNAME interface\n  -Wc,FLAG\n  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler\n  -Wl,FLAG\n  -Xlinker FLAG     pass linker-specific FLAG directly to the linker\n  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)\n\nAll other options (arguments beginning with \\`-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in \\`.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in \\`.la', then a libtool library is created,\nonly library objects (\\`.lo' files) may be specified, and \\`-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in \\`.a' or \\`.lib', then a standard library is created\nusing \\`ar' and \\`ranlib', or on Windows using \\`lib'.\n\nIf OUTPUT-FILE ends in \\`.lo' or \\`.${objext}', then a reloadable object file\nis created, otherwise an executable program is created.\"\n        ;;\n\n      uninstall)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      *)\n        func_fatal_help \"invalid operation mode \\`$mode'\"\n        ;;\n    esac\n\n    echo\n    $ECHO \"Try \\`$progname --help' for more information about other modes.\"\n}\n\n# Now that we've collected a possible --mode arg, show help if necessary\nif $opt_help; then\n  if test \"$opt_help\" = :; then\n    func_mode_help\n  else\n    {\n      func_help noexit\n      for mode in compile link execute install finish uninstall clean; do\n\tfunc_mode_help\n      done\n    } | sed -n '1p; 2,$s/^Usage:/  or: /p'\n    {\n      func_help noexit\n      for mode in compile link execute install finish uninstall clean; do\n\techo\n\tfunc_mode_help\n      done\n    } |\n    sed '1d\n      /^When reporting/,/^Report/{\n\tH\n\td\n      }\n      $x\n      /information about other modes/d\n      /more detailed .*MODE/d\n      s/^Usage:.*--mode=\\([^ ]*\\) .*/Description of \\1 mode:/'\n  fi\n  exit $?\nfi\n\n\n# func_mode_execute arg...\nfunc_mode_execute ()\n{\n    $opt_debug\n    # The first argument is the command name.\n    cmd=\"$nonopt\"\n    test -z \"$cmd\" && \\\n      func_fatal_help \"you must specify a COMMAND\"\n\n    # Handle -dlopen flags immediately.\n    for file in $execute_dlfiles; do\n      test -f \"$file\" \\\n\t|| func_fatal_help \"\\`$file' is not a file\"\n\n      dir=\n      case $file in\n      *.la)\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"\\`$lib' is not a valid libtool archive\"\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\tfunc_source \"$file\"\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && \\\n\t    func_warning \"\\`$file' was not linked with \\`-export-dynamic'\"\n\t  continue\n\tfi\n\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=\"$func_dirname_result\"\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  dir=\"$dir/$objdir\"\n\telse\n\t  if test ! -f \"$dir/$dlname\"; then\n\t    func_fatal_error \"cannot find \\`$dlname' in \\`$dir' or \\`$dir/$objdir'\"\n\t  fi\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=\"$func_dirname_result\"\n\t;;\n\n      *)\n\tfunc_warning \"\\`-dlopen' is ignored for non-libtool libraries and objects\"\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=\"$absdir\"\n\n      # Now add the directory to shlibpath_var.\n      if eval test -z \\\"\\$$shlibpath_var\\\"; then\n\teval $shlibpath_var=\\$dir\n      else\n\teval $shlibpath_var=\\$dir:\\$$shlibpath_var\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=\"$magic\"\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -* | *.la | *.lo ) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif func_ltwrapper_script_p \"$file\"; then\n\t  func_source \"$file\"\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\telif func_ltwrapper_executable_p \"$file\"; then\n\t  func_ltwrapper_scriptname \"$file\"\n\t  func_source \"$func_ltwrapper_scriptname_result\"\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      func_quote_for_eval \"$file\"\n      args=\"$args $func_quote_for_eval_result\"\n    done\n\n    if test \"X$opt_dry_run\" = Xfalse; then\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\n      do\n\teval \"if test \\\"\\${save_$lt_var+set}\\\" = set; then\n                $lt_var=\\$save_$lt_var; export $lt_var\n\t      else\n\t\t$lt_unset $lt_var\n\t      fi\"\n      done\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\"\\$cmd$args\"\n    else\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$ECHO \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\techo \"export $shlibpath_var\"\n      fi\n      $ECHO \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest \"$mode\" = execute && func_mode_execute ${1+\"$@\"}\n\n\n# func_mode_finish arg...\nfunc_mode_finish ()\n{\n    $opt_debug\n    libdirs=\"$nonopt\"\n    admincmds=\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for dir\n      do\n\tlibdirs=\"$libdirs $dir\"\n      done\n\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  func_execute_cmds \"$finish_cmds\" 'admincmds=\"$admincmds\n'\"$cmd\"'\"'\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $opt_dry_run || eval \"$cmds\" || admincmds=\"$admincmds\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    $opt_silent && exit $EXIT_SUCCESS\n\n    echo \"----------------------------------------------------------------------\"\n    echo \"Libraries have been installed in:\"\n    for libdir in $libdirs; do\n      $ECHO \"   $libdir\"\n    done\n    echo\n    echo \"If you ever happen to want to link against installed libraries\"\n    echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n    echo \"specify the full pathname of the library, or use the \\`-LLIBDIR'\"\n    echo \"flag during linking and do at least one of the following:\"\n    if test -n \"$shlibpath_var\"; then\n      echo \"   - add LIBDIR to the \\`$shlibpath_var' environment variable\"\n      echo \"     during execution\"\n    fi\n    if test -n \"$runpath_var\"; then\n      echo \"   - add LIBDIR to the \\`$runpath_var' environment variable\"\n      echo \"     during linking\"\n    fi\n    if test -n \"$hardcode_libdir_flag_spec\"; then\n      libdir=LIBDIR\n      eval \"flag=\\\"$hardcode_libdir_flag_spec\\\"\"\n\n      $ECHO \"   - use the \\`$flag' linker flag\"\n    fi\n    if test -n \"$admincmds\"; then\n      $ECHO \"   - have your system administrator run these commands:$admincmds\"\n    fi\n    if test -f /etc/ld.so.conf; then\n      echo \"   - have your system administrator add LIBDIR to \\`/etc/ld.so.conf'\"\n    fi\n    echo\n\n    echo \"See any operating system documentation about shared libraries for\"\n    case $host in\n      solaris2.[6789]|solaris2.1[0-9])\n        echo \"more information, such as the ld(1), crle(1) and ld.so(8) manual\"\n\techo \"pages.\"\n\t;;\n      *)\n        echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n        ;;\n    esac\n    echo \"----------------------------------------------------------------------\"\n    exit $EXIT_SUCCESS\n}\n\ntest \"$mode\" = finish && func_mode_finish ${1+\"$@\"}\n\n\n# func_mode_install arg...\nfunc_mode_install ()\n{\n    $opt_debug\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$nonopt\" = \"$SHELL\" || test \"$nonopt\" = /bin/sh ||\n       # Allow the use of GNU shtool's install command.\n       case $nonopt in *shtool*) :;; *) false;; esac; then\n      # Aesthetically quote it.\n      func_quote_for_eval \"$nonopt\"\n      install_prog=\"$func_quote_for_eval_result \"\n      arg=$1\n      shift\n    else\n      install_prog=\n      arg=$nonopt\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    func_quote_for_eval \"$arg\"\n    install_prog=\"$install_prog$func_quote_for_eval_result\"\n    install_shared_prog=$install_prog\n    case \" $install_prog \" in\n      *[\\\\\\ /]cp\\ *) install_cp=: ;;\n      *) install_cp=false ;;\n    esac\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=no\n    stripme=\n    no_mode=:\n    for arg\n    do\n      arg2=\n      if test -n \"$dest\"; then\n\tfiles=\"$files $dest\"\n\tdest=$arg\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=yes ;;\n      -f)\n\tif $install_cp; then :; else\n\t  prev=$arg\n\tfi\n\t;;\n      -g | -m | -o)\n\tprev=$arg\n\t;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*)\n\t;;\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  if test \"x$prev\" = x-m && test -n \"$install_override_mode\"; then\n\t    arg2=$install_override_mode\n\t    no_mode=false\n\t  fi\n\t  prev=\n\telse\n\t  dest=$arg\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      func_quote_for_eval \"$arg\"\n      install_prog=\"$install_prog $func_quote_for_eval_result\"\n      if test -n \"$arg2\"; then\n\tfunc_quote_for_eval \"$arg2\"\n      fi\n      install_shared_prog=\"$install_shared_prog $func_quote_for_eval_result\"\n    done\n\n    test -z \"$install_prog\" && \\\n      func_fatal_help \"you must specify an install program\"\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the \\`$prev' option requires an argument\"\n\n    if test -n \"$install_override_mode\" && $no_mode; then\n      if $install_cp; then :; else\n\tfunc_quote_for_eval \"$install_override_mode\"\n\tinstall_shared_prog=\"$install_shared_prog -m $func_quote_for_eval_result\"\n      fi\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\tfunc_fatal_help \"no file or destination specified\"\n      else\n\tfunc_fatal_help \"you must specify a destination\"\n      fi\n    fi\n\n    # Strip any trailing slash from the destination.\n    func_stripname '' '/' \"$dest\"\n    dest=$func_stripname_result\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=yes\n    if test \"$isdir\" = yes; then\n      destdir=\"$dest\"\n      destname=\n    else\n      func_dirname_and_basename \"$dest\" \"\" \".\"\n      destdir=\"$func_dirname_result\"\n      destname=\"$func_basename_result\"\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files; shift\n      test \"$#\" -gt 1 && \\\n\tfunc_fatal_help \"\\`$dest' is not a directory\"\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  func_fatal_help \"\\`$destdir' must be an absolute directory name\"\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tstaticlibs=\"$staticlibs $file\"\n\t;;\n\n      *.la)\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"\\`$file' is not a valid libtool archive\"\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\tfunc_source \"$file\"\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) current_libdirs=\"$current_libdirs $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) future_libdirs=\"$future_libdirs $libdir\" ;;\n\t  esac\n\tfi\n\n\tfunc_dirname \"$file\" \"/\" \"\"\n\tdir=\"$func_dirname_result\"\n\tdir=\"$dir$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$ECHO \"$destdir\" | $SED -e \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  test \"$inst_prefix_dir\" = \"$destdir\" && \\\n\t    func_fatal_error \"error: cannot install \\`$file' to a directory not ending in $libdir\"\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  func_warning \"relinking \\`$file'\"\n\t  func_show_eval \"$relink_command\" \\\n\t    'func_fatal_error \"error: relink \\`$file'\\'' with the above command before installing it\"'\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names; shift\n\tif test -n \"$1\"; then\n\t  realname=\"$1\"\n\t  shift\n\n\t  srcname=\"$realname\"\n\t  test -n \"$relink_command\" && srcname=\"$realname\"T\n\n\t  # Install the shared library and build the symlinks.\n\t  func_show_eval \"$install_shared_prog $dir/$srcname $destdir/$realname\" \\\n\t      'exit $?'\n\t  tstripme=\"$stripme\"\n\t  case $host_os in\n\t  cygwin* | mingw* | pw32* | cegcc*)\n\t    case $realname in\n\t    *.dll.a)\n\t      tstripme=\"\"\n\t      ;;\n\t    esac\n\t    ;;\n\t  esac\n\t  if test -n \"$tstripme\" && test -n \"$striplib\"; then\n\t    func_show_eval \"$striplib $destdir/$realname\" 'exit $?'\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    # Try `ln -sf' first, because the `ln' binary might depend on\n\t    # the symlink we replace!  Solaris /bin/ln does not understand -f,\n\t    # so we also need to try rm && ln -s.\n\t    for linkname\n\t    do\n\t      test \"$linkname\" != \"$realname\" \\\n\t\t&& func_show_eval \"(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })\"\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=\"$destdir/$realname\"\n\t  func_execute_cmds \"$postinstall_cmds\" 'exit $?'\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tfunc_basename \"$file\"\n\tname=\"$func_basename_result\"\n\tinstname=\"$dir/$name\"i\n\tfunc_show_eval \"$install_prog $instname $destdir/$name\" 'exit $?'\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && staticlibs=\"$staticlibs $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  func_basename \"$file\"\n\t  destfile=\"$func_basename_result\"\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  func_lo2o \"$destfile\"\n\t  staticdest=$func_lo2o_result\n\t  ;;\n\t*.$objext)\n\t  staticdest=\"$destfile\"\n\t  destfile=\n\t  ;;\n\t*)\n\t  func_fatal_help \"cannot copy a libtool object to \\`$destfile'\"\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\ttest -n \"$destfile\" && \\\n\t  func_show_eval \"$install_prog $file $destfile\" 'exit $?'\n\n\t# Install the old object if enabled.\n\tif test \"$build_old_libs\" = yes; then\n\t  # Deduce the name of the old-style object file.\n\t  func_lo2o \"$file\"\n\t  staticobj=$func_lo2o_result\n\t  func_show_eval \"$install_prog \\$staticobj \\$staticdest\" 'exit $?'\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  func_basename \"$file\"\n\t  destfile=\"$func_basename_result\"\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\"\"\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      func_stripname '' '.exe' \"$file\"\n\t      file=$func_stripname_result\n\t      stripped_ext=\".exe\"\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin* | *mingw*)\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      wrapper=$func_ltwrapper_scriptname_result\n\t    else\n\t      func_stripname '' '.exe' \"$file\"\n\t      wrapper=$func_stripname_result\n\t    fi\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif func_ltwrapper_script_p \"$wrapper\"; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  func_source \"$wrapper\"\n\n\t  # Check the variables that should have been set.\n\t  test -z \"$generated_by_libtool_version\" && \\\n\t    func_fatal_error \"invalid libtool wrapper script \\`$wrapper'\"\n\n\t  finalize=yes\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      func_source \"$lib\"\n\t    fi\n\t    libfile=\"$libdir/\"`$ECHO \"$lib\" | $SED 's%^.*/%%g'` ### testsuite: skip nested quoting test\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      func_warning \"\\`$lib' has not been installed in \\`$libdir'\"\n\t      finalize=no\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  func_source \"$wrapper\"\n\n\t  outputname=\n\t  if test \"$fast_install\" = no && test -n \"$relink_command\"; then\n\t    $opt_dry_run || {\n\t      if test \"$finalize\" = yes; then\n\t        tmpdir=`func_mktempdir`\n\t\tfunc_basename \"$file$stripped_ext\"\n\t\tfile=\"$func_basename_result\"\n\t        outputname=\"$tmpdir/$file\"\n\t        # Replace the output file specification.\n\t        relink_command=`$ECHO \"$relink_command\" | $SED 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t        $opt_silent || {\n\t          func_quote_for_expand \"$relink_command\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t        }\n\t        if eval \"$relink_command\"; then :\n\t          else\n\t\t  func_error \"error: relink \\`$file' with the above command before installing it\"\n\t\t  $opt_dry_run || ${RM}r \"$tmpdir\"\n\t\t  continue\n\t        fi\n\t        file=\"$outputname\"\n\t      else\n\t        func_warning \"cannot relink \\`$file'\"\n\t      fi\n\t    }\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$ECHO \"$file$stripped_ext\" | $SED \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyway\n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    func_stripname '' '.exe' \"$destfile\"\n\t    destfile=$func_stripname_result\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tfunc_show_eval \"$install_prog\\$stripme \\$file \\$destfile\" 'exit $?'\n\t$opt_dry_run || if test -n \"$outputname\"; then\n\t  ${RM}r \"$tmpdir\"\n\tfi\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      func_basename \"$file\"\n      name=\"$func_basename_result\"\n\n      # Set up the ranlib parameters.\n      oldlib=\"$destdir/$name\"\n\n      func_show_eval \"$install_prog \\$file \\$oldlib\" 'exit $?'\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\tfunc_show_eval \"$old_striplib $oldlib\" 'exit $?'\n      fi\n\n      # Do each command in the postinstall commands.\n      func_execute_cmds \"$old_postinstall_cmds\" 'exit $?'\n    done\n\n    test -n \"$future_libdirs\" && \\\n      func_warning \"remember to run \\`$progname --finish$future_libdirs'\"\n\n    if test -n \"$current_libdirs\" && $opt_finish; then\n      # Maybe just do a dry run.\n      $opt_dry_run && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL $progpath $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest \"$mode\" = install && func_mode_install ${1+\"$@\"}\n\n\n# func_generate_dlsyms outputname originator pic_p\n# Extract symbols from dlprefiles and create ${outputname}S.o with\n# a dlpreopen symbol table.\nfunc_generate_dlsyms ()\n{\n    $opt_debug\n    my_outputname=\"$1\"\n    my_originator=\"$2\"\n    my_pic_p=\"${3-no}\"\n    my_prefix=`$ECHO \"$my_originator\" | sed 's%[^a-zA-Z0-9]%_%g'`\n    my_dlsyms=\n\n    if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n      if test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\tmy_dlsyms=\"${my_outputname}S.c\"\n      else\n\tfunc_error \"not configured to extract global symbols from dlpreopened files\"\n      fi\n    fi\n\n    if test -n \"$my_dlsyms\"; then\n      case $my_dlsyms in\n      \"\") ;;\n      *.c)\n\t# Discover the nlist of each of the dlfiles.\n\tnlist=\"$output_objdir/${my_outputname}.nm\"\n\n\tfunc_show_eval \"$RM $nlist ${nlist}S ${nlist}T\"\n\n\t# Parse the name list into a source file.\n\tfunc_verbose \"creating $output_objdir/$my_dlsyms\"\n\n\t$opt_dry_run || $ECHO > \"$output_objdir/$my_dlsyms\" \"\\\n/* $my_dlsyms - symbol resolution table for \\`$my_outputname' dlsym emulation. */\n/* Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n#if defined(__GNUC__) && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))\n#pragma GCC diagnostic ignored \\\"-Wstrict-prototypes\\\"\n#endif\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\tif test \"$dlself\" = yes; then\n\t  func_verbose \"generating symbol list for \\`$output'\"\n\n\t  $opt_dry_run || echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t  # Add our own program objects to the symbol list.\n\t  progfiles=`$ECHO \"$objs$old_deplibs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\t  for progfile in $progfiles; do\n\t    func_verbose \"extracting global C symbols from \\`$progfile'\"\n\t    $opt_dry_run || eval \"$NM $progfile | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $opt_dry_run || {\n\t      $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t      $MV \"$nlist\"T \"$nlist\"\n\t    }\n\t  fi\n\n\t  if test -n \"$export_symbols_regex\"; then\n\t    $opt_dry_run || {\n\t      $EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T\n\t      $MV \"$nlist\"T \"$nlist\"\n\t    }\n\t  fi\n\n\t  # Prepare the list of exported symbols\n\t  if test -z \"$export_symbols\"; then\n\t    export_symbols=\"$output_objdir/$outputname.exp\"\n\t    $opt_dry_run || {\n\t      $RM $export_symbols\n\t      ${SED} -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \\(.*\\)$/\\1/p' < \"$nlist\" > \"$export_symbols\"\n\t      case $host in\n\t      *cygwin* | *mingw* | *cegcc* )\n                echo EXPORTS > \"$output_objdir/$outputname.def\"\n                cat \"$export_symbols\" >> \"$output_objdir/$outputname.def\"\n\t        ;;\n\t      esac\n\t    }\n\t  else\n\t    $opt_dry_run || {\n\t      ${SED} -e 's/\\([].[*^$]\\)/\\\\\\1/g' -e 's/^/ /' -e 's/$/$/' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"\n\t      $GREP -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T\n\t      $MV \"$nlist\"T \"$nlist\"\n\t      case $host in\n\t        *cygwin* | *mingw* | *cegcc* )\n\t          echo EXPORTS > \"$output_objdir/$outputname.def\"\n\t          cat \"$nlist\" >> \"$output_objdir/$outputname.def\"\n\t          ;;\n\t      esac\n\t    }\n\t  fi\n\tfi\n\n\tfor dlprefile in $dlprefiles; do\n\t  func_verbose \"extracting global C symbols from \\`$dlprefile'\"\n\t  func_basename \"$dlprefile\"\n\t  name=\"$func_basename_result\"\n\t  $opt_dry_run || {\n\t    $ECHO \": $name \" >> \"$nlist\"\n\t    eval \"$NM $dlprefile 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t  }\n\tdone\n\n\t$opt_dry_run || {\n\t  # Make sure we have at least an empty file.\n\t  test -f \"$nlist\" || : > \"$nlist\"\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t    $MV \"$nlist\"T \"$nlist\"\n\t  fi\n\n\t  # Try sorting and uniquifying the output.\n\t  if $GREP -v \"^: \" < \"$nlist\" |\n\t      if sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\tsort -k 3\n\t      else\n\t\tsort +2\n\t      fi |\n\t      uniq > \"$nlist\"S; then\n\t    :\n\t  else\n\t    $GREP -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t  fi\n\n\t  if test -f \"$nlist\"S; then\n\t    eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$my_dlsyms\"'\n\t  else\n\t    echo '/* NONE */' >> \"$output_objdir/$my_dlsyms\"\n\t  fi\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n\n/* The mapping between symbol names and symbols.  */\ntypedef struct {\n  const char *name;\n  void *address;\n} lt_dlsymlist;\n\"\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc* )\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n/* DATA imports from DLLs on WIN32 con't be const, because\n   runtime relocations are performed -- see ld's documentation\n   on pseudo-relocs.  */\"\n\t    lt_dlsym_const= ;;\n\t  *osf5*)\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n/* This system does not cope well with relocations in const data */\"\n\t    lt_dlsym_const= ;;\n\t  *)\n\t    lt_dlsym_const=const ;;\n\t  esac\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\nextern $lt_dlsym_const lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[];\n$lt_dlsym_const lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[] =\n{\\\n  { \\\"$my_originator\\\", (void *) 0 },\"\n\n\t  case $need_lib_prefix in\n\t  no)\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  *)\n\t    eval \"$global_symbol_to_c_name_address_lib_prefix\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  esac\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_${my_prefix}_LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t} # !$opt_dry_run\n\n\tpic_flag_for_symtable=\n\tcase \"$compile_command \" in\n\t*\" -static \"*) ;;\n\t*)\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\" ;;\n\t  *-*-hpux*)\n\t    pic_flag_for_symtable=\" $pic_flag\"  ;;\n\t  *)\n\t    if test \"X$my_pic_p\" != Xno; then\n\t      pic_flag_for_symtable=\" $pic_flag\"\n\t    fi\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tsymtab_cflags=\n\tfor arg in $LTCFLAGS; do\n\t  case $arg in\n\t  -pie | -fpie | -fPIE) ;;\n\t  *) symtab_cflags=\"$symtab_cflags $arg\" ;;\n\t  esac\n\tdone\n\n\t# Now compile the dynamic symbol file.\n\tfunc_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable \"$my_dlsyms\")' 'exit $?'\n\n\t# Clean up the generated files.\n\tfunc_show_eval '$RM \"$output_objdir/$my_dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\"'\n\n\t# Transform the symbol file into the correct name.\n\tsymfileobj=\"$output_objdir/${my_outputname}S.$objext\"\n\tcase $host in\n\t*cygwin* | *mingw* | *cegcc* )\n\t  if test -f \"$output_objdir/$my_outputname.def\"; then\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t  else\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  fi\n\t  ;;\n\t*)\n\t  compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  ;;\n\tesac\n\t;;\n      *)\n\tfunc_fatal_error \"unknown suffix for \\`$my_dlsyms'\"\n\t;;\n      esac\n    else\n      # We keep going just in case the user didn't refer to\n      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n      # really was required.\n\n      # Nullify the symbol file.\n      compile_command=`$ECHO \"$compile_command\" | $SED \"s% @SYMFILE@%%\"`\n      finalize_command=`$ECHO \"$finalize_command\" | $SED \"s% @SYMFILE@%%\"`\n    fi\n}\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\n# Despite the name, also deal with 64 bit binaries.\nfunc_win32_libid ()\n{\n  $opt_debug\n  win32_libid_type=\"unknown\"\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    if $OBJDUMP -f \"$1\" | $SED -e '10q' 2>/dev/null |\n       $EGREP 'file format (pe-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)' >/dev/null; then\n      win32_nmres=`$NM -f posix -A \"$1\" |\n\t$SED -n -e '\n\t    1,100{\n\t\t/ I /{\n\t\t    s,.*,import,\n\t\t    p\n\t\t    q\n\t\t}\n\t    }'`\n      case $win32_nmres in\n      import*)  win32_libid_type=\"x86 archive import\";;\n      *)        win32_libid_type=\"x86 archive static\";;\n      esac\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $ECHO \"$win32_libid_type\"\n}\n\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    $opt_debug\n    f_ex_an_ar_dir=\"$1\"; shift\n    f_ex_an_ar_oldlib=\"$1\"\n    if test \"$lock_old_archive_extraction\" = yes; then\n      lockfile=$f_ex_an_ar_oldlib.lock\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    fi\n    func_show_eval \"(cd \\$f_ex_an_ar_dir && $AR x \\\"\\$f_ex_an_ar_oldlib\\\")\" \\\n\t\t   'stat=$?; rm -f \"$lockfile\"; exit $stat'\n    if test \"$lock_old_archive_extraction\" = yes; then\n      $opt_dry_run || rm -f \"$lockfile\"\n    fi\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      func_fatal_error \"object name conflicts in archive: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\"\n    fi\n}\n\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    $opt_debug\n    my_gentop=\"$1\"; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\"\"\n    my_xlib=\"\"\n    my_xabs=\"\"\n    my_xdir=\"\"\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=\"$my_xlib\" ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      func_basename \"$my_xlib\"\n      my_xlib=\"$func_basename_result\"\n      my_xlib_u=$my_xlib\n      while :; do\n        case \" $extracted_archives \" in\n\t*\" $my_xlib_u \"*)\n\t  func_arith $extracted_serial + 1\n\t  extracted_serial=$func_arith_result\n\t  my_xlib_u=lt$extracted_serial-$my_xlib ;;\n\t*) break ;;\n\tesac\n      done\n      extracted_archives=\"$extracted_archives $my_xlib_u\"\n      my_xdir=\"$my_gentop/$my_xlib_u\"\n\n      func_mkdir_p \"$my_xdir\"\n\n      case $host in\n      *-darwin*)\n\tfunc_verbose \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\t$opt_dry_run || {\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  darwin_base_archive=`basename \"$darwin_archive\"`\n\t  darwin_arches=`$LIPO -info \"$darwin_archive\" 2>/dev/null | $GREP Architectures 2>/dev/null || true`\n\t  if test -n \"$darwin_arches\"; then\n\t    darwin_arches=`$ECHO \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    func_verbose \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches ; do\n\t      func_mkdir_p \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      $LIPO -thin $darwin_arch -output \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\" \"${darwin_archive}\"\n\t      cd \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      func_extract_an_archive \"`pwd`\" \"${darwin_base_archive}\"\n\t      cd \"$darwin_curdir\"\n\t      $RM \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\"\n\t    done # $darwin_arches\n            ## Okay now we've a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print | $SED -e \"$basename\" | sort -u`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | $NL2SP`\n\t      $LIPO -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    $RM -rf unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd $darwin_orig_dir\n\t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\t} # !$opt_dry_run\n\t;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | $NL2SP`\n    done\n\n    func_extract_archives_result=\"$my_oldobjs\"\n}\n\n\n# func_emit_wrapper [arg=no]\n#\n# Emit a libtool wrapper script on stdout.\n# Don't directly open a file because we may want to\n# incorporate the script contents within a cygwin/mingw\n# wrapper executable.  Must ONLY be called from within\n# func_mode_link because it depends on a number of variables\n# set therein.\n#\n# ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\n# variable will take.  If 'yes', then the emitted script\n# will assume that the directory in which it is stored is\n# the $objdir directory.  This is a cygwin/mingw-specific\n# behavior.\nfunc_emit_wrapper ()\n{\n\tfunc_emit_wrapper_arg1=${1-no}\n\n\t$ECHO \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='$sed_quote_subst'\n\n# Be Bourne compatible\nif test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variables:\n  generated_by_libtool_version='$macro_version'\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$ECHO are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    file=\\\"\\$0\\\"\"\n\n    qECHO=`$ECHO \"$ECHO\" | $SED \"$sed_quote_subst\"`\n    $ECHO \"\\\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$1\n_LTECHO_EOF'\n}\n    ECHO=\\\"$qECHO\\\"\n  fi\\\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  done\n\n  # Usually 'no', except on cygwin/mingw when embedded into\n  # the cwrapper.\n  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=$func_emit_wrapper_arg1\n  if test \\\"\\$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\\\" = \\\"yes\\\"; then\n    # special case for '.'\n    if test \\\"\\$thisdir\\\" = \\\".\\\"; then\n      thisdir=\\`pwd\\`\n    fi\n    # remove .libs from thisdir\n    case \\\"\\$thisdir\\\" in\n    *[\\\\\\\\/]$objdir ) thisdir=\\`\\$ECHO \\\"\\$thisdir\\\" | $SED 's%[\\\\\\\\/][^\\\\\\\\/]*$%%'\\` ;;\n    $objdir )   thisdir=. ;;\n    esac\n  fi\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test \"$fast_install\" = yes; then\n\t  $ECHO \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" ||\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | ${SED} 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $MKDIR \\\"\\$progdir\\\"\n    else\n      $RM \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $ECHO \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\\"\\$relink_command\\\" 2>&1\\`; then :\n      else\n\t$ECHO \\\"\\$relink_command_output\\\" >&2\n\t$RM \\\"\\$progdir/\\$file\\\"\n\texit 1\n      fi\n    fi\n\n    $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $RM \\\"\\$progdir/\\$program\\\";\n      $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $RM \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $ECHO \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$ECHO \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# Export our shlibpath_var if we have one.\n\tif test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $ECHO \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" | $SED 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t# fixup the dll searchpath if we need to.\n\tif test -n \"$dllsearchpath\"; then\n\t  $ECHO \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t$ECHO \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n\"\n\tcase $host in\n\t# Backslashes separate directories on plain windows\n\t*-*-mingw | *-*-os2* | *-cegcc*)\n\t  $ECHO \"\\\n      exec \\\"\\$progdir\\\\\\\\\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\n\t*)\n\t  $ECHO \"\\\n      exec \\\"\\$progdir/\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\tesac\n\t$ECHO \"\\\n      \\$ECHO \\\"\\$0: cannot exec \\$program \\$*\\\" 1>&2\n      exit 1\n    fi\n  else\n    # The program doesn't exist.\n    \\$ECHO \\\"\\$0: error: \\\\\\`\\$progdir/\\$program' does not exist\\\" 1>&2\n    \\$ECHO \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    \\$ECHO \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit 1\n  fi\nfi\\\n\"\n}\n\n\n# func_to_host_path arg\n#\n# Convert paths to host format when used with build tools.\n# Intended for use with \"native\" mingw (where libtool itself\n# is running under the msys shell), or in the following cross-\n# build environments:\n#    $build          $host\n#    mingw (msys)    mingw  [e.g. native]\n#    cygwin          mingw\n#    *nix + wine     mingw\n# where wine is equipped with the `winepath' executable.\n# In the native mingw case, the (msys) shell automatically\n# converts paths for any non-msys applications it launches,\n# but that facility isn't available from inside the cwrapper.\n# Similar accommodations are necessary for $host mingw and\n# $build cygwin.  Calling this function does no harm for other\n# $host/$build combinations not listed above.\n#\n# ARG is the path (on $build) that should be converted to\n# the proper representation for $host. The result is stored\n# in $func_to_host_path_result.\nfunc_to_host_path ()\n{\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    case $host in\n      *mingw* )\n        lt_sed_naive_backslashify='s|\\\\\\\\*|\\\\|g;s|/|\\\\|g;s|\\\\|\\\\\\\\|g'\n        case $build in\n          *mingw* ) # actually, msys\n            # awkward: cmd appends spaces to result\n            func_to_host_path_result=`( cmd //c echo \"$1\" ) 2>/dev/null |\n              $SED -e 's/[ ]*$//' -e \"$lt_sed_naive_backslashify\"`\n            ;;\n          *cygwin* )\n            func_to_host_path_result=`cygpath -w \"$1\" |\n\t      $SED -e \"$lt_sed_naive_backslashify\"`\n            ;;\n          * )\n            # Unfortunately, winepath does not exit with a non-zero\n            # error code, so we are forced to check the contents of\n            # stdout. On the other hand, if the command is not\n            # found, the shell will set an exit code of 127 and print\n            # *an error message* to stdout. So we must check for both\n            # error code of zero AND non-empty stdout, which explains\n            # the odd construction:\n            func_to_host_path_tmp1=`winepath -w \"$1\" 2>/dev/null`\n            if test \"$?\" -eq 0 && test -n \"${func_to_host_path_tmp1}\"; then\n              func_to_host_path_result=`$ECHO \"$func_to_host_path_tmp1\" |\n                $SED -e \"$lt_sed_naive_backslashify\"`\n            else\n              # Allow warning below.\n              func_to_host_path_result=\n            fi\n            ;;\n        esac\n        if test -z \"$func_to_host_path_result\" ; then\n          func_error \"Could not determine host path corresponding to\"\n          func_error \"  \\`$1'\"\n          func_error \"Continuing, but uninstalled executables may not work.\"\n          # Fallback:\n          func_to_host_path_result=\"$1\"\n        fi\n        ;;\n    esac\n  fi\n}\n# end: func_to_host_path\n\n# func_to_host_pathlist arg\n#\n# Convert pathlists to host format when used with build tools.\n# See func_to_host_path(), above. This function supports the\n# following $build/$host combinations (but does no harm for\n# combinations not listed here):\n#    $build          $host\n#    mingw (msys)    mingw  [e.g. native]\n#    cygwin          mingw\n#    *nix + wine     mingw\n#\n# Path separators are also converted from $build format to\n# $host format. If ARG begins or ends with a path separator\n# character, it is preserved (but converted to $host format)\n# on output.\n#\n# ARG is a pathlist (on $build) that should be converted to\n# the proper representation on $host. The result is stored\n# in $func_to_host_pathlist_result.\nfunc_to_host_pathlist ()\n{\n  func_to_host_pathlist_result=\"$1\"\n  if test -n \"$1\"; then\n    case $host in\n      *mingw* )\n        lt_sed_naive_backslashify='s|\\\\\\\\*|\\\\|g;s|/|\\\\|g;s|\\\\|\\\\\\\\|g'\n        # Remove leading and trailing path separator characters from\n        # ARG. msys behavior is inconsistent here, cygpath turns them\n        # into '.;' and ';.', and winepath ignores them completely.\n\tfunc_stripname : : \"$1\"\n        func_to_host_pathlist_tmp1=$func_stripname_result\n        case $build in\n          *mingw* ) # Actually, msys.\n            # Awkward: cmd appends spaces to result.\n            func_to_host_pathlist_result=`\n\t      ( cmd //c echo \"$func_to_host_pathlist_tmp1\" ) 2>/dev/null |\n\t      $SED -e 's/[ ]*$//' -e \"$lt_sed_naive_backslashify\"`\n            ;;\n          *cygwin* )\n            func_to_host_pathlist_result=`cygpath -w -p \"$func_to_host_pathlist_tmp1\" |\n              $SED -e \"$lt_sed_naive_backslashify\"`\n            ;;\n          * )\n            # unfortunately, winepath doesn't convert pathlists\n            func_to_host_pathlist_result=\"\"\n            func_to_host_pathlist_oldIFS=$IFS\n            IFS=:\n            for func_to_host_pathlist_f in $func_to_host_pathlist_tmp1 ; do\n              IFS=$func_to_host_pathlist_oldIFS\n              if test -n \"$func_to_host_pathlist_f\" ; then\n                func_to_host_path \"$func_to_host_pathlist_f\"\n                if test -n \"$func_to_host_path_result\" ; then\n                  if test -z \"$func_to_host_pathlist_result\" ; then\n                    func_to_host_pathlist_result=\"$func_to_host_path_result\"\n                  else\n                    func_append func_to_host_pathlist_result \";$func_to_host_path_result\"\n                  fi\n                fi\n              fi\n            done\n            IFS=$func_to_host_pathlist_oldIFS\n            ;;\n        esac\n        if test -z \"$func_to_host_pathlist_result\"; then\n          func_error \"Could not determine the host path(s) corresponding to\"\n          func_error \"  \\`$1'\"\n          func_error \"Continuing, but uninstalled executables may not work.\"\n          # Fallback. This may break if $1 contains DOS-style drive\n          # specifications. The fix is not to complicate the expression\n          # below, but for the user to provide a working wine installation\n          # with winepath so that path translation in the cross-to-mingw\n          # case works properly.\n          lt_replace_pathsep_nix_to_dos=\"s|:|;|g\"\n          func_to_host_pathlist_result=`echo \"$func_to_host_pathlist_tmp1\" |\\\n            $SED -e \"$lt_replace_pathsep_nix_to_dos\"`\n        fi\n        # Now, add the leading and trailing path separators back\n        case \"$1\" in\n          :* ) func_to_host_pathlist_result=\";$func_to_host_pathlist_result\"\n            ;;\n        esac\n        case \"$1\" in\n          *: ) func_append func_to_host_pathlist_result \";\"\n            ;;\n        esac\n        ;;\n    esac\n  fi\n}\n# end: func_to_host_pathlist\n\n# func_emit_cwrapperexe_src\n# emit the source code for a wrapper executable on stdout\n# Must ONLY be called from within func_mode_link because\n# it depends on a number of variable set therein.\nfunc_emit_cwrapperexe_src ()\n{\n\tcat <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n\n   Currently, it simply execs the wrapper *script* \"$SHELL $output\",\n   but could eventually absorb all of the scripts functionality and\n   exec $objdir/$outputname directly.\n*/\nEOF\n\t    cat <<\"EOF\"\n#ifdef _MSC_VER\n# define _CRT_SECURE_NO_DEPRECATE 1\n#endif\n#include <stdio.h>\n#include <stdlib.h>\n#ifdef _MSC_VER\n# include <direct.h>\n# include <process.h>\n# include <io.h>\n#else\n# include <unistd.h>\n# include <stdint.h>\n# ifdef __CYGWIN__\n#  include <io.h>\n# endif\n#endif\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n#include <string.h>\n#include <ctype.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <sys/stat.h>\n\n/* declarations of non-ANSI functions */\n#if defined(__MINGW32__)\n# ifdef __STRICT_ANSI__\nint _putenv (const char *);\n# endif\n#elif defined(__CYGWIN__)\n# ifdef __STRICT_ANSI__\nchar *realpath (const char *, char *);\nint putenv (char *);\nint setenv (const char *, const char *, int);\n# endif\n/* #elif defined (other platforms) ... */\n#endif\n\n/* portability defines, excluding path handling macros */\n#if defined(_MSC_VER)\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n# define S_IXUSR _S_IEXEC\n# ifndef _INTPTR_T_DEFINED\n#  define _INTPTR_T_DEFINED\n#  define intptr_t int\n# endif\n#elif defined(__MINGW32__)\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n#elif defined(__CYGWIN__)\n# define HAVE_SETENV\n# define FOPEN_WB \"wb\"\n/* #elif defined (other platforms) ... */\n#endif\n\n#if defined(PATH_MAX)\n# define LT_PATHMAX PATH_MAX\n#elif defined(MAXPATHLEN)\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef S_IXOTH\n# define S_IXOTH 0\n#endif\n#ifndef S_IXGRP\n# define S_IXGRP 0\n#endif\n\n/* path handling portability macros */\n#ifndef DIR_SEPARATOR\n# define DIR_SEPARATOR '/'\n# define PATH_SEPARATOR ':'\n#endif\n\n#if defined (_WIN32) || defined (__MSDOS__) || defined (__DJGPP__) || \\\n  defined (__OS2__)\n# define HAVE_DOS_BASED_FILE_SYSTEM\n# define FOPEN_WB \"wb\"\n# ifndef DIR_SEPARATOR_2\n#  define DIR_SEPARATOR_2 '\\\\'\n# endif\n# ifndef PATH_SEPARATOR_2\n#  define PATH_SEPARATOR_2 ';'\n# endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n\t(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#ifndef PATH_SEPARATOR_2\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)\n#else /* PATH_SEPARATOR_2 */\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)\n#endif /* PATH_SEPARATOR_2 */\n\n#ifndef FOPEN_WB\n# define FOPEN_WB \"w\"\n#endif\n#ifndef _O_BINARY\n# define _O_BINARY 0\n#endif\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free ((void *) stale); stale = 0; } \\\n} while (0)\n\n#undef LTWRAPPER_DEBUGPRINTF\n#if defined LT_DEBUGWRAPPER\n# define LTWRAPPER_DEBUGPRINTF(args) ltwrapper_debugprintf args\nstatic void\nltwrapper_debugprintf (const char *fmt, ...)\n{\n    va_list args;\n    va_start (args, fmt);\n    (void) vfprintf (stderr, fmt, args);\n    va_end (args);\n}\n#else\n# define LTWRAPPER_DEBUGPRINTF(args)\n#endif\n\nconst char *program_name = NULL;\n\nvoid *xmalloc (size_t num);\nchar *xstrdup (const char *string);\nconst char *base_name (const char *name);\nchar *find_executable (const char *wrapper);\nchar *chase_symlinks (const char *pathspec);\nint make_executable (const char *path);\nint check_executable (const char *path);\nchar *strendzap (char *str, const char *pat);\nvoid lt_fatal (const char *message, ...);\nvoid lt_setenv (const char *name, const char *value);\nchar *lt_extend_str (const char *orig_value, const char *add, int to_end);\nvoid lt_update_exe_path (const char *name, const char *value);\nvoid lt_update_lib_path (const char *name, const char *value);\nchar **prepare_spawn (char **argv);\nvoid lt_dump_script (FILE *f);\nEOF\n\n\t    cat <<EOF\nconst char * MAGIC_EXE = \"$magic_exe\";\nconst char * LIB_PATH_VARNAME = \"$shlibpath_var\";\nEOF\n\n\t    if test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n              func_to_host_pathlist \"$temp_rpath\"\n\t      cat <<EOF\nconst char * LIB_PATH_VALUE   = \"$func_to_host_pathlist_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * LIB_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test -n \"$dllsearchpath\"; then\n              func_to_host_pathlist \"$dllsearchpath:\"\n\t      cat <<EOF\nconst char * EXE_PATH_VARNAME = \"PATH\";\nconst char * EXE_PATH_VALUE   = \"$func_to_host_pathlist_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * EXE_PATH_VARNAME = \"\";\nconst char * EXE_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test \"$fast_install\" = yes; then\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"lt-$outputname\"; /* hopefully, no .exe */\nEOF\n\t    else\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"$outputname\"; /* hopefully, no .exe */\nEOF\n\t    fi\n\n\n\t    cat <<\"EOF\"\n\n#define LTWRAPPER_OPTION_PREFIX         \"--lt-\"\n#define LTWRAPPER_OPTION_PREFIX_LENGTH  5\n\nstatic const size_t opt_prefix_len         = LTWRAPPER_OPTION_PREFIX_LENGTH;\nstatic const char *ltwrapper_option_prefix = LTWRAPPER_OPTION_PREFIX;\n\nstatic const char *dumpscript_opt       = LTWRAPPER_OPTION_PREFIX \"dump-script\";\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int  newargc;\n  char *tmp_pathspec;\n  char *actual_cwrapper_path;\n  char *actual_cwrapper_name;\n  char *target_name;\n  char *lt_argv_zero;\n  intptr_t rval = 127;\n\n  int i;\n\n  program_name = (char *) xstrdup (base_name (argv[0]));\n  LTWRAPPER_DEBUGPRINTF ((\"(main) argv[0]      : %s\\n\", argv[0]));\n  LTWRAPPER_DEBUGPRINTF ((\"(main) program_name : %s\\n\", program_name));\n\n  /* very simple arg parsing; don't want to rely on getopt */\n  for (i = 1; i < argc; i++)\n    {\n      if (strcmp (argv[i], dumpscript_opt) == 0)\n\t{\nEOF\n\t    case \"$host\" in\n\t      *mingw* | *cygwin* )\n\t\t# make stdout use \"unix\" line endings\n\t\techo \"          setmode(1,_O_BINARY);\"\n\t\t;;\n\t      esac\n\n\t    cat <<\"EOF\"\n\t  lt_dump_script (stdout);\n\t  return 0;\n\t}\n    }\n\n  newargz = XMALLOC (char *, argc + 1);\n  tmp_pathspec = find_executable (argv[0]);\n  if (tmp_pathspec == NULL)\n    lt_fatal (\"Couldn't find %s\", argv[0]);\n  LTWRAPPER_DEBUGPRINTF ((\"(main) found exe (before symlink chase) at : %s\\n\",\n\t\t\t  tmp_pathspec));\n\n  actual_cwrapper_path = chase_symlinks (tmp_pathspec);\n  LTWRAPPER_DEBUGPRINTF ((\"(main) found exe (after symlink chase) at : %s\\n\",\n\t\t\t  actual_cwrapper_path));\n  XFREE (tmp_pathspec);\n\n  actual_cwrapper_name = xstrdup( base_name (actual_cwrapper_path));\n  strendzap (actual_cwrapper_path, actual_cwrapper_name);\n\n  /* wrapper name transforms */\n  strendzap (actual_cwrapper_name, \".exe\");\n  tmp_pathspec = lt_extend_str (actual_cwrapper_name, \".exe\", 1);\n  XFREE (actual_cwrapper_name);\n  actual_cwrapper_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  /* target_name transforms -- use actual target program name; might have lt- prefix */\n  target_name = xstrdup (base_name (TARGET_PROGRAM_NAME));\n  strendzap (target_name, \".exe\");\n  tmp_pathspec = lt_extend_str (target_name, \".exe\", 1);\n  XFREE (target_name);\n  target_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  LTWRAPPER_DEBUGPRINTF ((\"(main) libtool target name: %s\\n\",\n\t\t\t  target_name));\nEOF\n\n\t    cat <<EOF\n  newargz[0] =\n    XMALLOC (char, (strlen (actual_cwrapper_path) +\n\t\t    strlen (\"$objdir\") + 1 + strlen (actual_cwrapper_name) + 1));\n  strcpy (newargz[0], actual_cwrapper_path);\n  strcat (newargz[0], \"$objdir\");\n  strcat (newargz[0], \"/\");\nEOF\n\n\t    cat <<\"EOF\"\n  /* stop here, and copy so we don't have to do this twice */\n  tmp_pathspec = xstrdup (newargz[0]);\n\n  /* do NOT want the lt- prefix here, so use actual_cwrapper_name */\n  strcat (newargz[0], actual_cwrapper_name);\n\n  /* DO want the lt- prefix here if it exists, so use target_name */\n  lt_argv_zero = lt_extend_str (tmp_pathspec, target_name, 1);\n  XFREE (tmp_pathspec);\n  tmp_pathspec = NULL;\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t    cat <<\"EOF\"\n  {\n    char* p;\n    while ((p = strchr (newargz[0], '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n    while ((p = strchr (lt_argv_zero, '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n  }\nEOF\n\t    ;;\n\t    esac\n\n\t    cat <<\"EOF\"\n  XFREE (target_name);\n  XFREE (actual_cwrapper_path);\n  XFREE (actual_cwrapper_name);\n\n  lt_setenv (\"BIN_SH\", \"xpg4\"); /* for Tru64 */\n  lt_setenv (\"DUALCASE\", \"1\");  /* for MSK sh */\n  lt_update_lib_path (LIB_PATH_VARNAME, LIB_PATH_VALUE);\n  lt_update_exe_path (EXE_PATH_VARNAME, EXE_PATH_VALUE);\n\n  newargc=0;\n  for (i = 1; i < argc; i++)\n    {\n      if (strncmp (argv[i], ltwrapper_option_prefix, opt_prefix_len) == 0)\n        {\n          /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX\n             namespace, but it is not one of the ones we know about and\n             have already dealt with, above (inluding dump-script), then\n             report an error. Otherwise, targets might begin to believe\n             they are allowed to use options in the LTWRAPPER_OPTION_PREFIX\n             namespace. The first time any user complains about this, we'll\n             need to make LTWRAPPER_OPTION_PREFIX a configure-time option\n             or a configure.ac-settable value.\n           */\n          lt_fatal (\"Unrecognized option in %s namespace: '%s'\",\n                    ltwrapper_option_prefix, argv[i]);\n        }\n      /* otherwise ... */\n      newargz[++newargc] = xstrdup (argv[i]);\n    }\n  newargz[++newargc] = NULL;\n\n  LTWRAPPER_DEBUGPRINTF     ((\"(main) lt_argv_zero : %s\\n\", (lt_argv_zero ? lt_argv_zero : \"<NULL>\")));\n  for (i = 0; i < newargc; i++)\n    {\n      LTWRAPPER_DEBUGPRINTF ((\"(main) newargz[%d]   : %s\\n\", i, (newargz[i] ? newargz[i] : \"<NULL>\")));\n    }\n\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n  /* execv doesn't actually work on mingw as expected on unix */\n  newargz = prepare_spawn (newargz);\n  rval = _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);\n  if (rval == -1)\n    {\n      /* failed to start process */\n      LTWRAPPER_DEBUGPRINTF ((\"(main) failed to launch target \\\"%s\\\": errno = %d\\n\", lt_argv_zero, errno));\n      return 127;\n    }\n  return rval;\nEOF\n\t\t;;\n\t      *)\n\t\tcat <<\"EOF\"\n  execv (lt_argv_zero, newargz);\n  return rval; /* =127, but avoids unused variable warning */\nEOF\n\t\t;;\n\t    esac\n\n\t    cat <<\"EOF\"\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void *p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (\"Memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1),\n\t\t\t  string) : NULL;\n}\n\nconst char *\nbase_name (const char *name)\n{\n  const char *base;\n\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha ((unsigned char) name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return base;\n}\n\nint\ncheck_executable (const char *path)\n{\n  struct stat st;\n\n  LTWRAPPER_DEBUGPRINTF ((\"(check_executable)  : %s\\n\",\n\t\t\t  path ? (*path ? path : \"EMPTY!\") : \"NULL!\"));\n  if ((!path) || (!*path))\n    return 0;\n\n  if ((stat (path, &st) >= 0)\n      && (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)))\n    return 1;\n  else\n    return 0;\n}\n\nint\nmake_executable (const char *path)\n{\n  int rval = 0;\n  struct stat st;\n\n  LTWRAPPER_DEBUGPRINTF ((\"(make_executable)   : %s\\n\",\n\t\t\t  path ? (*path ? path : \"EMPTY!\") : \"NULL!\"));\n  if ((!path) || (!*path))\n    return 0;\n\n  if (stat (path, &st) >= 0)\n    {\n      rval = chmod (path, st.st_mode | S_IXOTH | S_IXGRP | S_IXUSR);\n    }\n  return rval;\n}\n\n/* Searches for the full path of the wrapper.  Returns\n   newly allocated full path name if found, NULL otherwise\n   Does not chase symlinks, even on platforms that support them.\n*/\nchar *\nfind_executable (const char *wrapper)\n{\n  int has_slash = 0;\n  const char *p;\n  const char *p_next;\n  /* static buffer for getcwd */\n  char tmp[LT_PATHMAX + 1];\n  int tmp_len;\n  char *concat_name;\n\n  LTWRAPPER_DEBUGPRINTF ((\"(find_executable)   : %s\\n\",\n\t\t\t  wrapper ? (*wrapper ? wrapper : \"EMPTY!\") : \"NULL!\"));\n\n  if ((wrapper == NULL) || (*wrapper == '\\0'))\n    return NULL;\n\n  /* Absolute path? */\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')\n    {\n      concat_name = xstrdup (wrapper);\n      if (check_executable (concat_name))\n\treturn concat_name;\n      XFREE (concat_name);\n    }\n  else\n    {\n#endif\n      if (IS_DIR_SEPARATOR (wrapper[0]))\n\t{\n\t  concat_name = xstrdup (wrapper);\n\t  if (check_executable (concat_name))\n\t    return concat_name;\n\t  XFREE (concat_name);\n\t}\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n    }\n#endif\n\n  for (p = wrapper; *p; p++)\n    if (*p == '/')\n      {\n\thas_slash = 1;\n\tbreak;\n      }\n  if (!has_slash)\n    {\n      /* no slashes; search PATH */\n      const char *path = getenv (\"PATH\");\n      if (path != NULL)\n\t{\n\t  for (p = path; *p; p = p_next)\n\t    {\n\t      const char *q;\n\t      size_t p_len;\n\t      for (q = p; *q; q++)\n\t\tif (IS_PATH_SEPARATOR (*q))\n\t\t  break;\n\t      p_len = q - p;\n\t      p_next = (*q == '\\0' ? q : q + 1);\n\t      if (p_len == 0)\n\t\t{\n\t\t  /* empty path: current directory */\n\t\t  if (getcwd (tmp, LT_PATHMAX) == NULL)\n\t\t    lt_fatal (\"getcwd failed\");\n\t\t  tmp_len = strlen (tmp);\n\t\t  concat_name =\n\t\t    XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, tmp, tmp_len);\n\t\t  concat_name[tmp_len] = '/';\n\t\t  strcpy (concat_name + tmp_len + 1, wrapper);\n\t\t}\n\t      else\n\t\t{\n\t\t  concat_name =\n\t\t    XMALLOC (char, p_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, p, p_len);\n\t\t  concat_name[p_len] = '/';\n\t\t  strcpy (concat_name + p_len + 1, wrapper);\n\t\t}\n\t      if (check_executable (concat_name))\n\t\treturn concat_name;\n\t      XFREE (concat_name);\n\t    }\n\t}\n      /* not found in PATH; assume curdir */\n    }\n  /* Relative path | not found in path: prepend cwd */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (\"getcwd failed\");\n  tmp_len = strlen (tmp);\n  concat_name = XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n  memcpy (concat_name, tmp, tmp_len);\n  concat_name[tmp_len] = '/';\n  strcpy (concat_name + tmp_len + 1, wrapper);\n\n  if (check_executable (concat_name))\n    return concat_name;\n  XFREE (concat_name);\n  return NULL;\n}\n\nchar *\nchase_symlinks (const char *pathspec)\n{\n#ifndef S_ISLNK\n  return xstrdup (pathspec);\n#else\n  char buf[LT_PATHMAX];\n  struct stat s;\n  char *tmp_pathspec = xstrdup (pathspec);\n  char *p;\n  int has_symlinks = 0;\n  while (strlen (tmp_pathspec) && !has_symlinks)\n    {\n      LTWRAPPER_DEBUGPRINTF ((\"checking path component for symlinks: %s\\n\",\n\t\t\t      tmp_pathspec));\n      if (lstat (tmp_pathspec, &s) == 0)\n\t{\n\t  if (S_ISLNK (s.st_mode) != 0)\n\t    {\n\t      has_symlinks = 1;\n\t      break;\n\t    }\n\n\t  /* search backwards for last DIR_SEPARATOR */\n\t  p = tmp_pathspec + strlen (tmp_pathspec) - 1;\n\t  while ((p > tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    p--;\n\t  if ((p == tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    {\n\t      /* no more DIR_SEPARATORS left */\n\t      break;\n\t    }\n\t  *p = '\\0';\n\t}\n      else\n\t{\n\t  char *errstr = strerror (errno);\n\t  lt_fatal (\"Error accessing file %s (%s)\", tmp_pathspec, errstr);\n\t}\n    }\n  XFREE (tmp_pathspec);\n\n  if (!has_symlinks)\n    {\n      return xstrdup (pathspec);\n    }\n\n  tmp_pathspec = realpath (pathspec, buf);\n  if (tmp_pathspec == 0)\n    {\n      lt_fatal (\"Could not follow symlinks for %s\", pathspec);\n    }\n  return xstrdup (tmp_pathspec);\n#endif\n}\n\nchar *\nstrendzap (char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert (str != NULL);\n  assert (pat != NULL);\n\n  len = strlen (str);\n  patlen = strlen (pat);\n\n  if (patlen <= len)\n    {\n      str += len - patlen;\n      if (strcmp (str, pat) == 0)\n\t*str = '\\0';\n    }\n  return str;\n}\n\nstatic void\nlt_error_core (int exit_status, const char *mode,\n\t       const char *message, va_list ap)\n{\n  fprintf (stderr, \"%s: %s: \", program_name, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, \"FATAL\", message, ap);\n  va_end (ap);\n}\n\nvoid\nlt_setenv (const char *name, const char *value)\n{\n  LTWRAPPER_DEBUGPRINTF ((\"(lt_setenv) setting '%s' to '%s'\\n\",\n                          (name ? name : \"<NULL>\"),\n                          (value ? value : \"<NULL>\")));\n  {\n#ifdef HAVE_SETENV\n    /* always make a copy, for consistency with !HAVE_SETENV */\n    char *str = xstrdup (value);\n    setenv (name, str, 1);\n#else\n    int len = strlen (name) + 1 + strlen (value) + 1;\n    char *str = XMALLOC (char, len);\n    sprintf (str, \"%s=%s\", name, value);\n    if (putenv (str) != EXIT_SUCCESS)\n      {\n        XFREE (str);\n      }\n#endif\n  }\n}\n\nchar *\nlt_extend_str (const char *orig_value, const char *add, int to_end)\n{\n  char *new_value;\n  if (orig_value && *orig_value)\n    {\n      int orig_value_len = strlen (orig_value);\n      int add_len = strlen (add);\n      new_value = XMALLOC (char, add_len + orig_value_len + 1);\n      if (to_end)\n        {\n          strcpy (new_value, orig_value);\n          strcpy (new_value + orig_value_len, add);\n        }\n      else\n        {\n          strcpy (new_value, add);\n          strcpy (new_value + add_len, orig_value);\n        }\n    }\n  else\n    {\n      new_value = xstrdup (add);\n    }\n  return new_value;\n}\n\nvoid\nlt_update_exe_path (const char *name, const char *value)\n{\n  LTWRAPPER_DEBUGPRINTF ((\"(lt_update_exe_path) modifying '%s' by prepending '%s'\\n\",\n                          (name ? name : \"<NULL>\"),\n                          (value ? value : \"<NULL>\")));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      /* some systems can't cope with a ':'-terminated path #' */\n      int len = strlen (new_value);\n      while (((len = strlen (new_value)) > 0) && IS_PATH_SEPARATOR (new_value[len-1]))\n        {\n          new_value[len-1] = '\\0';\n        }\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nvoid\nlt_update_lib_path (const char *name, const char *value)\n{\n  LTWRAPPER_DEBUGPRINTF ((\"(lt_update_lib_path) modifying '%s' by prepending '%s'\\n\",\n                          (name ? name : \"<NULL>\"),\n                          (value ? value : \"<NULL>\")));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nEOF\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n\n/* Prepares an argument vector before calling spawn().\n   Note that spawn() does not by itself call the command interpreter\n     (getenv (\"COMSPEC\") != NULL ? getenv (\"COMSPEC\") :\n      ({ OSVERSIONINFO v; v.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n         GetVersionEx(&v);\n         v.dwPlatformId == VER_PLATFORM_WIN32_NT;\n      }) ? \"cmd.exe\" : \"command.com\").\n   Instead it simply concatenates the arguments, separated by ' ', and calls\n   CreateProcess().  We must quote the arguments since Win32 CreateProcess()\n   interprets characters like ' ', '\\t', '\\\\', '\"' (but not '<' and '>') in a\n   special way:\n   - Space and tab are interpreted as delimiters. They are not treated as\n     delimiters if they are surrounded by double quotes: \"...\".\n   - Unescaped double quotes are removed from the input. Their only effect is\n     that within double quotes, space and tab are treated like normal\n     characters.\n   - Backslashes not followed by double quotes are not special.\n   - But 2*n+1 backslashes followed by a double quote become\n     n backslashes followed by a double quote (n >= 0):\n       \\\" -> \"\n       \\\\\\\" -> \\\"\n       \\\\\\\\\\\" -> \\\\\"\n */\n#define SHELL_SPECIAL_CHARS \"\\\"\\\\ \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\n#define SHELL_SPACE_CHARS \" \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\nchar **\nprepare_spawn (char **argv)\n{\n  size_t argc;\n  char **new_argv;\n  size_t i;\n\n  /* Count number of arguments.  */\n  for (argc = 0; argv[argc] != NULL; argc++)\n    ;\n\n  /* Allocate new argument vector.  */\n  new_argv = XMALLOC (char *, argc + 1);\n\n  /* Put quoted arguments into the new argument vector.  */\n  for (i = 0; i < argc; i++)\n    {\n      const char *string = argv[i];\n\n      if (string[0] == '\\0')\n\tnew_argv[i] = xstrdup (\"\\\"\\\"\");\n      else if (strpbrk (string, SHELL_SPECIAL_CHARS) != NULL)\n\t{\n\t  int quote_around = (strpbrk (string, SHELL_SPACE_CHARS) != NULL);\n\t  size_t length;\n\t  unsigned int backslashes;\n\t  const char *s;\n\t  char *quoted_string;\n\t  char *p;\n\n\t  length = 0;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    length++;\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\tlength += backslashes + 1;\n\t      length++;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    length += backslashes + 1;\n\n\t  quoted_string = XMALLOC (char, length + 1);\n\n\t  p = quoted_string;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    *p++ = '\"';\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\t{\n\t\t  unsigned int j;\n\t\t  for (j = backslashes + 1; j > 0; j--)\n\t\t    *p++ = '\\\\';\n\t\t}\n\t      *p++ = c;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    {\n\t      unsigned int j;\n\t      for (j = backslashes; j > 0; j--)\n\t\t*p++ = '\\\\';\n\t      *p++ = '\"';\n\t    }\n\t  *p = '\\0';\n\n\t  new_argv[i] = quoted_string;\n\t}\n      else\n\tnew_argv[i] = (char *) string;\n    }\n  new_argv[argc] = NULL;\n\n  return new_argv;\n}\nEOF\n\t\t;;\n\t    esac\n\n            cat <<\"EOF\"\nvoid lt_dump_script (FILE* f)\n{\nEOF\n\t    func_emit_wrapper yes |\n              $SED -e 's/\\([\\\\\"]\\)/\\\\\\1/g' \\\n\t           -e 's/^/  fputs (\"/' -e 's/$/\\\\n\", f);/'\n\n            cat <<\"EOF\"\n}\nEOF\n}\n# end: func_emit_cwrapperexe_src\n\n# func_win32_import_lib_p ARG\n# True if ARG is an import lib, as indicated by $file_magic_cmd\nfunc_win32_import_lib_p ()\n{\n    $opt_debug\n    case `eval \"$file_magic_cmd \\\"\\$1\\\" 2>/dev/null\" | $SED -e 10q` in\n    *import*) : ;;\n    *) false ;;\n    esac\n}\n\n# func_mode_link arg...\nfunc_mode_link ()\n{\n    $opt_debug\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # which system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll which has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=$nonopt\n    base_compile=\"$nonopt $@\"\n    compile_command=$nonopt\n    finalize_command=$nonopt\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n    new_inherited_linker_flags=\n\n    avoid_version=no\n    bindir=\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    non_pic_objects=\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=no\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n    weak_libs=\n    single_module=\"${wl}-single_module\"\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -shared)\n\ttest \"$build_libtool_libs\" != yes && \\\n\t  func_fatal_configuration \"can not build a shared library\"\n\tbuild_old_libs=no\n\tbreak\n\t;;\n      -all-static | -static | -static-libtool-libs)\n\tcase $arg in\n\t-all-static)\n\t  if test \"$build_libtool_libs\" = yes && test -z \"$link_static_flag\"; then\n\t    func_warning \"complete static linking is impossible in this configuration\"\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\t-static)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=built\n\t  ;;\n\t-static-libtool-libs)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\tesac\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=\"$1\"\n      shift\n      func_quote_for_eval \"$arg\"\n      qarg=$func_quote_for_eval_unquoted_result\n      func_append libtool_args \" $func_quote_for_eval_result\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  func_append compile_command \" @OUTPUT@\"\n\t  func_append finalize_command \" @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tbindir)\n\t  bindir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tdlfiles|dlprefiles)\n\t  if test \"$preload\" = no; then\n\t    # Add the symbol object into the linking commands.\n\t    func_append compile_command \" @SYMFILE@\"\n\t    func_append finalize_command \" @SYMFILE@\"\n\t    preload=yes\n\t  fi\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test \"$dlself\" = no; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test \"$prev\" = dlprefiles; then\n\t      dlself=yes\n\t    elif test \"$prev\" = dlfiles && test \"$dlopen_self\" != yes; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test \"$prev\" = dlfiles; then\n\t      dlfiles=\"$dlfiles $arg\"\n\t    else\n\t      dlprefiles=\"$dlprefiles $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=\"$arg\"\n\t  test -f \"$arg\" \\\n\t    || func_fatal_error \"symbol file \\`$arg' does not exist\"\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tframework)\n\t  case $host in\n\t    *-*-darwin*)\n\t      case \"$deplibs \" in\n\t\t*\" $qarg.ltframework \"*) ;;\n\t\t*) deplibs=\"$deplibs $qarg.ltframework\" # this is fixed later\n\t\t   ;;\n\t      esac\n\t      ;;\n\t  esac\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat \"$save_arg\"`\n\t    do\n#\t      moreargs=\"$moreargs $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if func_lalib_unsafe_p \"$arg\"; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\tfunc_source \"$arg\"\n\n\t\tif test -z \"$pic_object\" ||\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test \"$pic_object\" = none &&\n\t\t   test \"$non_pic_object\" = none; then\n\t\t  func_fatal_error \"cannot find name of object for \\`$arg'\"\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\tfunc_dirname \"$arg\" \"/\" \"\"\n\t\txdir=\"$func_dirname_result\"\n\n\t\tif test \"$pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=\"$xdir$pic_object\"\n\n\t\t  if test \"$prev\" = dlfiles; then\n\t\t    if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\t      dlfiles=\"$dlfiles $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test \"$prev\" = dlprefiles; then\n\t\t    # Preload the old-style object.\n\t\t    dlprefiles=\"$dlprefiles $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  arg=\"$pic_object\"\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test \"$non_pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=\"$xdir$non_pic_object\"\n\n\t\t  # A standard non-PIC object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t\t    arg=\"$non_pic_object\"\n\t\t  fi\n\t\telse\n\t\t  # If the PIC object exists, use it instead.\n\t\t  # $xdir was prepended to $pic_object above.\n\t\t  non_pic_object=\"$pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif $opt_dry_run; then\n\t\t  # Extract subdirectory from the argument.\n\t\t  func_dirname \"$arg\" \"/\" \"\"\n\t\t  xdir=\"$func_dirname_result\"\n\n\t\t  func_lo2o \"$arg\"\n\t\t  pic_object=$xdir$objdir/$func_lo2o_result\n\t\t  non_pic_object=$xdir$func_lo2o_result\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t        else\n\t\t  func_fatal_error \"\\`$arg' is not a valid libtool object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    func_fatal_error \"link input file \\`$arg' does not exist\"\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=\"-$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    func_fatal_error \"only absolute run-paths are allowed\"\n\t    ;;\n\t  esac\n\t  if test \"$prev\" = rpath; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) rpath=\"$rpath $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) xrpath=\"$xrpath $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\tshrext)\n\t  shrext_cmds=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tweak)\n\t  weak_libs=\"$weak_libs $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\txcclinker)\n\t  linker_flags=\"$linker_flags $qarg\"\n\t  compiler_flags=\"$compiler_flags $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txcompiler)\n\t  compiler_flags=\"$compiler_flags $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  linker_flags=\"$linker_flags $qarg\"\n\t  compiler_flags=\"$compiler_flags $wl$qarg\"\n\t  prev=\n\t  func_append compile_command \" $wl$qarg\"\n\t  func_append finalize_command \" $wl$qarg\"\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=\"$arg\"\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  # See comment for -static flag below, for more details.\n\t  func_append compile_command \" $link_static_flag\"\n\t  func_append finalize_command \" $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\tfunc_fatal_error \"\\`-allow-undefined' must not be used because it is the default\"\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -bindir)\n\tprev=bindir\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  func_fatal_error \"more than one -exported-symbols argument is not allowed\"\n\tfi\n\tif test \"X$arg\" = \"X-export-symbols\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework)\n\tprev=framework\n\tcontinue\n\t;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tfunc_stripname '-L' '' \"$arg\"\n\tdir=$func_stripname_result\n\tif test -z \"$dir\"; then\n\t  if test \"$#\" -gt 0; then\n\t    func_fatal_error \"require no space between \\`-L' and \\`$1'\"\n\t  else\n\t    func_fatal_error \"need path for \\`-L' option\"\n\t  fi\n\tfi\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  test -z \"$absdir\" && \\\n\t    func_fatal_error \"cannot determine absolute directory name of \\`$dir'\"\n\t  dir=\"$absdir\"\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"*) ;;\n\t*)\n\t  deplibs=\"$deplibs -L$dir\"\n\t  lib_search_path=\"$lib_search_path $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$dir\" | $SED 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  ::) dllsearchpath=$dir;;\n\t  *) dllsearchpath=\"$dllsearchpath:$dir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) dllsearchpath=\"$dllsearchpath:$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test \"X$arg\" = \"X-lc\" || test \"X$arg\" = \"X-lm\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    deplibs=\"$deplibs System.ltframework\"\n\t    continue\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-linux*)\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  esac\n\telif test \"X$arg\" = \"X-lc_r\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tdeplibs=\"$deplibs $arg\"\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      # Darwin uses the -arch flag to determine output architecture.\n      -model|-arch|-isysroot)\n\tcompiler_flags=\"$compiler_flags $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe|-threads)\n\tcompiler_flags=\"$compiler_flags $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tcase \"$new_inherited_linker_flags \" in\n\t    *\" $arg \"*) ;;\n\t    * ) new_inherited_linker_flags=\"$new_inherited_linker_flags $arg\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -multi_module)\n\tsingle_module=\"${wl}-multi_module\"\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # and Darwin in order for the loader to find any dlls it needs.\n\t  func_warning \"\\`-no-install' is ignored for $host\"\n\t  func_warning \"assuming \\`-no-fast-install' instead\"\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tfunc_stripname '-R' '' \"$arg\"\n\tdir=$func_stripname_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  func_fatal_error \"only absolute run-paths are allowed\"\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) xrpath=\"$xrpath $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -shared)\n\t# The effects of -shared are defined in a previous loop.\n\tcontinue\n\t;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -static | -static-libtool-libs)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -weak)\n        prev=weak\n\tcontinue\n\t;;\n\n      -Wc,*)\n\tfunc_stripname '-Wc,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n          func_quote_for_eval \"$flag\"\n\t  arg=\"$arg $func_quote_for_eval_result\"\n\t  compiler_flags=\"$compiler_flags $func_quote_for_eval_result\"\n\tdone\n\tIFS=\"$save_ifs\"\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Wl,*)\n\tfunc_stripname '-Wl,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n          func_quote_for_eval \"$flag\"\n\t  arg=\"$arg $wl$func_quote_for_eval_result\"\n\t  compiler_flags=\"$compiler_flags $wl$func_quote_for_eval_result\"\n\t  linker_flags=\"$linker_flags $func_quote_for_eval_result\"\n\tdone\n\tIFS=\"$save_ifs\"\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # -msg_* for osf cc\n      -msg_*)\n\tfunc_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n\n      # -64, -mips[0-9] enable 64-bit mode on the SGI compiler\n      # -r[0-9][0-9]* specifies the processor on the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode on the Sun compiler\n      # +DA*, +DD* enable 64-bit mode on the HP compiler\n      # -q* pass through compiler args for the IBM compiler\n      # -m*, -t[45]*, -txscale* pass through architecture-specific\n      # compiler args for GCC\n      # -F/path gives path to uninstalled frameworks, gcc on darwin\n      # -p, -pg, --coverage, -fprofile-* pass through profiling flag for GCC\n      # @file GCC response files\n      # -tp=* Portland pgcc target processor selection\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \\\n      -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*)\n        func_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n        func_append compile_command \" $arg\"\n        func_append finalize_command \" $arg\"\n        compiler_flags=\"$compiler_flags $arg\"\n        continue\n        ;;\n\n      # Some other compiler flag.\n      -* | +*)\n        func_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tobjs=\"$objs $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif func_lalib_unsafe_p \"$arg\"; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  func_source \"$arg\"\n\n\t  if test -z \"$pic_object\" ||\n\t     test -z \"$non_pic_object\" ||\n\t     test \"$pic_object\" = none &&\n\t     test \"$non_pic_object\" = none; then\n\t    func_fatal_error \"cannot find name of object for \\`$arg'\"\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  func_dirname \"$arg\" \"/\" \"\"\n\t  xdir=\"$func_dirname_result\"\n\n\t  if test \"$pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=\"$xdir$pic_object\"\n\n\t    if test \"$prev\" = dlfiles; then\n\t      if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\tdlfiles=\"$dlfiles $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test \"$prev\" = dlprefiles; then\n\t      # Preload the old-style object.\n\t      dlprefiles=\"$dlprefiles $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    func_append libobjs \" $pic_object\"\n\t    arg=\"$pic_object\"\n\t  fi\n\n\t  # Non-PIC object.\n\t  if test \"$non_pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=\"$xdir$non_pic_object\"\n\n\t    # A standard non-PIC object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t    if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t      arg=\"$non_pic_object\"\n\t    fi\n\t  else\n\t    # If the PIC object exists, use it instead.\n\t    # $xdir was prepended to $pic_object above.\n\t    non_pic_object=\"$pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if $opt_dry_run; then\n\t    # Extract subdirectory from the argument.\n\t    func_dirname \"$arg\" \"/\" \"\"\n\t    xdir=\"$func_dirname_result\"\n\n\t    func_lo2o \"$arg\"\n\t    pic_object=$xdir$objdir/$func_lo2o_result\n\t    non_pic_object=$xdir$func_lo2o_result\n\t    func_append libobjs \" $pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  else\n\t    func_fatal_error \"\\`$arg' is not a valid libtool object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tdeplibs=\"$deplibs $arg\"\n\told_deplibs=\"$old_deplibs $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tif test \"$prev\" = dlfiles; then\n\t  # This library was specified with -dlopen.\n\t  dlfiles=\"$dlfiles $arg\"\n\t  prev=\n\telif test \"$prev\" = dlprefiles; then\n\t  # The library was specified with -dlpreopen.\n\t  dlprefiles=\"$dlprefiles $arg\"\n\t  prev=\n\telse\n\t  deplibs=\"$deplibs $arg\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\tfunc_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n      fi\n    done # argument parsing loop\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the \\`$prevarg' option requires an argument\"\n\n    if test \"$export_dynamic\" = yes && test -n \"$export_dynamic_flag_spec\"; then\n      eval \"arg=\\\"$export_dynamic_flag_spec\\\"\"\n      func_append compile_command \" $arg\"\n      func_append finalize_command \" $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    func_basename \"$output\"\n    outputname=\"$func_basename_result\"\n    libobjs_save=\"$libobjs\"\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$ECHO \\\"\\${$shlibpath_var}\\\" \\| \\$SED \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval \"sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\"\n    eval \"sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\"\n\n    func_dirname \"$output\" \"/\" \"\"\n    output_objdir=\"$func_dirname_result$objdir\"\n    # Create the object directory.\n    func_mkdir_p \"$output_objdir\"\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      func_fatal_help \"you must specify an output file\"\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if $opt_duplicate_deps ; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\tesac\n      fi\n      libs=\"$libs $deplib\"\n    done\n\n    if test \"$linkmode\" = lib; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if $opt_duplicate_compiler_generated_deps; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) specialdeplibs=\"$specialdeplibs $pre_post_deps\" ;;\n\t  esac\n\t  pre_post_deps=\"$pre_post_deps $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    notinst_path= # paths that contain not-installed libtool libraries\n\n    case $linkmode in\n    lib)\n\tpasses=\"conv dlpreopen link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    func_fatal_help \"libraries can \\`-dlopen' only libtool libraries: $file\"\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=no\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n\n    for pass in $passes; do\n      # The preopen pass in lib mode reverses $deplibs; put it back here\n      # so that -L comes before libs that need it for instance...\n      if test \"$linkmode,$pass\" = \"lib,link\"; then\n\t## FIXME: Find the place where the list is rebuilt in the wrong\n\t##        order, and fix it there properly\n        tmp_deplibs=\n\tfor deplib in $deplibs; do\n\t  tmp_deplibs=\"$deplib $tmp_deplibs\"\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n      fi\n\n      if test \"$linkmode,$pass\" = \"lib,link\" ||\n\t test \"$linkmode,$pass\" = \"prog,scan\"; then\n\tlibs=\"$deplibs\"\n\tdeplibs=\n      fi\n      if test \"$linkmode\" = prog; then\n\tcase $pass in\n\tdlopen) libs=\"$dlfiles\" ;;\n\tdlpreopen) libs=\"$dlprefiles\" ;;\n\tlink) libs=\"$deplibs %DEPLIBS% $dependency_libs\" ;;\n\tesac\n      fi\n      if test \"$linkmode,$pass\" = \"lib,dlpreopen\"; then\n\t# Collect and forward deplibs of preopened libtool libs\n\tfor lib in $dlprefiles; do\n\t  # Ignore non-libtool-libs\n\t  dependency_libs=\n\t  case $lib in\n\t  *.la)\tfunc_source \"$lib\" ;;\n\t  esac\n\n\t  # Collect preopened libtool deplibs, except any this library\n\t  # has declared as weak libs\n\t  for deplib in $dependency_libs; do\n\t    func_basename \"$deplib\"\n            deplib_base=$func_basename_result\n\t    case \" $weak_libs \" in\n\t    *\" $deplib_base \"*) ;;\n\t    *) deplibs=\"$deplibs $deplib\" ;;\n\t    esac\n\t  done\n\tdone\n\tlibs=\"$dlprefiles\"\n      fi\n      if test \"$pass\" = dlopen; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=\"$deplibs\"\n\tdeplibs=\n      fi\n\n      for deplib in $libs; do\n\tlib=\n\tfound=no\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe|-threads)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    compiler_flags=\"$compiler_flags $deplib\"\n\t    if test \"$linkmode\" = lib ; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) new_inherited_linker_flags=\"$new_inherited_linker_flags $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test \"$linkmode\" != lib && test \"$linkmode\" != prog; then\n\t    func_warning \"\\`-l' is ignored for archives/objects\"\n\t    continue\n\t  fi\n\t  func_stripname '-l' '' \"$deplib\"\n\t  name=$func_stripname_result\n\t  if test \"$linkmode\" = lib; then\n\t    searchdirs=\"$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path\"\n\t  else\n\t    searchdirs=\"$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path\"\n\t  fi\n\t  for searchdir in $searchdirs; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=\"$searchdir/lib${name}${search_ext}\"\n\t      if test -f \"$lib\"; then\n\t\tif test \"$search_ext\" = \".la\"; then\n\t\t  found=yes\n\t\telse\n\t\t  found=no\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if test \"$found\" != yes; then\n\t    # deplib doesn't seem to be a libtool library\n\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  else # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif func_lalib_p \"$lib\"; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  func_source \"$lib\"\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=\"$l\"\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\" ; then # only static version available\n\t\t    found=no\n\t\t    func_dirname \"$lib\" \"\" \".\"\n\t\t    ladir=\"$func_dirname_result\"\n\t\t    lib=$ladir/$old_library\n\t\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  fi\n\t  ;; # -l\n\t*.ltframework)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$deplib $deplibs\"\n\t    if test \"$linkmode\" = lib ; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) new_inherited_linker_flags=\"$new_inherited_linker_flags $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test \"$pass\" = conv && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    func_stripname '-L' '' \"$deplib\"\n\t    newlib_search_path=\"$newlib_search_path $func_stripname_result\"\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" = conv; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test \"$pass\" = scan; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    func_stripname '-L' '' \"$deplib\"\n\t    newlib_search_path=\"$newlib_search_path $func_stripname_result\"\n\t    ;;\n\t  *)\n\t    func_warning \"\\`-L' is ignored for archives/objects\"\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test \"$pass\" = link; then\n\t    func_stripname '-R' '' \"$deplib\"\n\t    dir=$func_stripname_result\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) xrpath=\"$xrpath $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la) lib=\"$deplib\" ;;\n\t*.$libext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    # Linking convenience modules into shared libraries is allowed,\n\t    # but linking other static libraries is non-portable.\n\t    case \" $dlpreconveniencelibs \" in\n\t    *\" $deplib \"*) ;;\n\t    *)\n\t      valid_a_lib=no\n\t      case $deplibs_check_method in\n\t\tmatch_pattern*)\n\t\t  set dummy $deplibs_check_method; shift\n\t\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t\t  if eval \"\\$ECHO \\\"$deplib\\\"\" 2>/dev/null | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t    valid_a_lib=yes\n\t\t  fi\n\t\t;;\n\t\tpass_all)\n\t\t  valid_a_lib=yes\n\t\t;;\n\t      esac\n\t      if test \"$valid_a_lib\" != yes; then\n\t\techo\n\t\t$ECHO \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t\techo \"*** that it is just a static archive that I should not use here.\"\n\t      else\n\t\techo\n\t\t$ECHO \"*** Warning: Linking the shared library $output against the\"\n\t\t$ECHO \"*** static library $deplib is not portable!\"\n\t\tdeplibs=\"$deplib $deplibs\"\n\t      fi\n\t      ;;\n\t    esac\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" != link; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test \"$linkmode\" = prog; then\n\t    if test \"$pass\" = dlpreopen || test \"$dlopen_support\" != yes || test \"$build_libtool_libs\" = no; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      newdlprefiles=\"$newdlprefiles $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      newdlfiles=\"$newdlfiles $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=yes\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\n\tif test \"$found\" = yes || test -f \"$lib\"; then :\n\telse\n\t  func_fatal_error \"cannot find the library \\`$lib' or unhandled argument \\`$deplib'\"\n\tfi\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$lib\" \\\n\t  || func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\n\tfunc_dirname \"$lib\" \"\" \".\"\n\tladir=\"$func_dirname_result\"\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\tinherited_linker_flags=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tfunc_source \"$lib\"\n\n\t# Convert \"-framework foo\" to \"foo.ltframework\"\n\tif test -n \"$inherited_linker_flags\"; then\n\t  tmp_inherited_linker_flags=`$ECHO \"$inherited_linker_flags\" | $SED 's/-framework \\([^ $]*\\)/\\1.ltframework/g'`\n\t  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do\n\t    case \" $new_inherited_linker_flags \" in\n\t      *\" $tmp_inherited_linker_flag \"*) ;;\n\t      *) new_inherited_linker_flags=\"$new_inherited_linker_flags $tmp_inherited_linker_flag\";;\n\t    esac\n\t  done\n\tfi\n\tdependency_libs=`$ECHO \" $dependency_libs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tif test \"$linkmode,$pass\" = \"lib,link\" ||\n\t   test \"$linkmode,$pass\" = \"prog,scan\" ||\n\t   { test \"$linkmode\" != prog && test \"$linkmode\" != lib; }; then\n\t  test -n \"$dlopen\" && dlfiles=\"$dlfiles $dlopen\"\n\t  test -n \"$dlpreopen\" && dlprefiles=\"$dlprefiles $dlpreopen\"\n\tfi\n\n\tif test \"$pass\" = conv; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      func_fatal_error \"cannot find name of link library for \\`$lib'\"\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    convenience=\"$convenience $ladir/$objdir/$old_library\"\n\t    old_convenience=\"$old_convenience $ladir/$objdir/$old_library\"\n\t  elif test \"$linkmode\" != prog && test \"$linkmode\" != lib; then\n\t    func_fatal_error \"\\`$lib' is not a convenience library\"\n\t  fi\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    deplibs=\"$deplib $deplibs\"\n\t    if $opt_duplicate_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t      esac\n\t    fi\n\t    tmp_libs=\"$tmp_libs $deplib\"\n\t  done\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tfor l in $old_library $library_names; do\n\t  linklib=\"$l\"\n\tdone\n\tif test -z \"$linklib\"; then\n\t  func_fatal_error \"cannot find name of link library for \\`$lib'\"\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test \"$pass\" = dlopen; then\n\t  if test -z \"$libdir\"; then\n\t    func_fatal_error \"cannot -dlopen a convenience library: \\`$lib'\"\n\t  fi\n\t  if test -z \"$dlname\" ||\n\t     test \"$dlopen_support\" != yes ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    dlprefiles=\"$dlprefiles $lib $dependency_libs\"\n\t  else\n\t    newdlfiles=\"$newdlfiles $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=\"$ladir\" ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    func_warning \"cannot determine absolute directory name of \\`$ladir'\"\n\t    func_warning \"passing it literally to the linker, although it might fail\"\n\t    abs_ladir=\"$ladir\"\n\t  fi\n\t  ;;\n\tesac\n\tfunc_basename \"$lib\"\n\tlaname=\"$func_basename_result\"\n\n\t# Find the relevant object directory and library name.\n\tif test \"X$installed\" = Xyes; then\n\t  if test ! -f \"$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    func_warning \"library \\`$lib' was moved.\"\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    libdir=\"$abs_ladir\"\n\t  else\n\t    dir=\"$libdir\"\n\t    absdir=\"$libdir\"\n\t  fi\n\t  test \"X$hardcode_automatic\" = Xyes && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    # Remove this search path later\n\t    notinst_path=\"$notinst_path $abs_ladir\"\n\t  else\n\t    dir=\"$ladir/$objdir\"\n\t    absdir=\"$abs_ladir/$objdir\"\n\t    # Remove this search path later\n\t    notinst_path=\"$notinst_path $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tfunc_stripname 'lib' '.la' \"$laname\"\n\tname=$func_stripname_result\n\n\t# This library was specified with -dlpreopen.\n\tif test \"$pass\" = dlpreopen; then\n\t  if test -z \"$libdir\" && test \"$linkmode\" = prog; then\n\t    func_fatal_error \"only libraries may -dlpreopen a convenience library: \\`$lib'\"\n\t  fi\n\t  # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t  # are required to link).\n\t  if test -n \"$old_library\"; then\n\t    newdlprefiles=\"$newdlprefiles $dir/$old_library\"\n\t    # Keep a list of preopened convenience libraries to check\n\t    # that they are being used correctly in the link pass.\n\t    test -z \"$libdir\" && \\\n\t\tdlpreconveniencelibs=\"$dlpreconveniencelibs $dir/$old_library\"\n\t  # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t  elif test -n \"$dlname\"; then\n\t    newdlprefiles=\"$newdlprefiles $dir/$dlname\"\n\t  else\n\t    newdlprefiles=\"$newdlprefiles $dir/$linklib\"\n\t  fi\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test \"$linkmode\" = lib; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test \"$linkmode\" = prog && test \"$pass\" != link; then\n\t  newlib_search_path=\"$newlib_search_path $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=no\n\t  if test \"$link_all_deplibs\" != no || test -z \"$library_names\" ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    linkalldeplibs=yes\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) func_stripname '-L' '' \"$deplib\"\n\t         newlib_search_path=\"$newlib_search_path $func_stripname_result\"\n\t\t ;;\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if test \"$linkalldeplibs\" = yes; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if $opt_duplicate_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t      esac\n\t    fi\n\t    tmp_libs=\"$tmp_libs $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t  if test -n \"$library_names\" &&\n\t     { { test \"$prefer_static_libs\" = no ||\n\t         test \"$prefer_static_libs,$installed\" = \"built,yes\"; } ||\n\t       test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\" ; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case \"$temp_rpath:\" in\n\t      *\"$absdir:\"*) ;;\n\t      *) temp_rpath=\"$temp_rpath$absdir:\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) compile_rpath=\"$compile_rpath $absdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) finalize_rpath=\"$finalize_rpath $libdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if test \"$alldeplibs\" = yes &&\n\t     { test \"$deplibs_check_method\" = pass_all ||\n\t       { test \"$build_libtool_libs\" = yes &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tuse_static_libs=$prefer_static_libs\n\tif test \"$use_static_libs\" = built && test \"$installed\" = yes; then\n\t  use_static_libs=no\n\tfi\n\tif test -n \"$library_names\" &&\n\t   { test \"$use_static_libs\" = no || test -z \"$old_library\"; }; then\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc*)\n\t      # No point in relinking DLLs because paths are not encoded\n\t      notinst_deplibs=\"$notinst_deplibs $lib\"\n\t      need_relink=no\n\t    ;;\n\t  *)\n\t    if test \"$installed\" = no; then\n\t      notinst_deplibs=\"$notinst_deplibs $lib\"\n\t      need_relink=yes\n\t    fi\n\t    ;;\n\t  esac\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on some\n\t  # systems (darwin).  Don't bleat about dlopened modules though!\n\t  dlopenmodule=\"\"\n\t  for dlpremoduletest in $dlprefiles; do\n\t    if test \"X$dlpremoduletest\" = \"X$lib\"; then\n\t      dlopenmodule=\"$dlpremoduletest\"\n\t      break\n\t    fi\n\t  done\n\t  if test -z \"$dlopenmodule\" && test \"$shouldnotlink\" = yes && test \"$pass\" = link; then\n\t    echo\n\t    if test \"$linkmode\" = prog; then\n\t      $ECHO \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $ECHO \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $ECHO \"*** $linklib is not portable!\"\n\t  fi\n\t  if test \"$linkmode\" = lib &&\n\t     test \"$hardcode_into_libs\" = yes; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) compile_rpath=\"$compile_rpath $absdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) finalize_rpath=\"$finalize_rpath $libdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    shift\n\t    realname=\"$1\"\n\t    shift\n\t    eval \"libname=\\\"$libname_spec\\\"\"\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=\"$dlname\"\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw* | *cegcc*)\n\t        func_arith $current - $age\n\t\tmajor=$func_arith_result\n\t\tversuffix=\"-$major\"\n\t\t;;\n\t      esac\n\t      eval \"soname=\\\"$soname_spec\\\"\"\n\t    else\n\t      soname=\"$realname\"\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=\"$soname\"\n\t    func_basename \"$soroot\"\n\t    soname=\"$func_basename_result\"\n\t    func_stripname 'lib' '.dll' \"$soname\"\n\t    newlib=libimp-$func_stripname_result.a\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      func_verbose \"extracting exported symbol list from \\`$soname'\"\n\t      func_execute_cmds \"$extract_expsyms_cmds\" 'exit $?'\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      func_verbose \"generating import library for \\`$soname'\"\n\t      func_execute_cmds \"$old_archive_from_expsyms_cmds\" 'exit $?'\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test \"$linkmode\" = prog || test \"$mode\" != relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test \"$hardcode_direct\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t\tcase $host in\n\t\t  *-*-sco3.2v5.0.[024]*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv4*uw2*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \\\n\t\t    *-*-unixware7*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a (non-dlopened) module then we can not\n\t\t    # link against it, someone is ignoring the earlier warnings\n\t\t    if /usr/bin/file -L $add 2> /dev/null |\n\t\t\t $GREP \": [^:]* bundle\" >/dev/null ; then\n\t\t      if test \"X$dlopenmodule\" != \"X$lib\"; then\n\t\t\t$ECHO \"*** Warning: lib $linklib is a module, not a shared library\"\n\t\t\tif test -z \"$old_library\" ; then\n\t\t\t  echo\n\t\t\t  echo \"*** And there doesn't seem to be a static archive available\"\n\t\t\t  echo \"*** The link will probably fail, sorry\"\n\t\t\telse\n\t\t\t  add=\"$dir/$old_library\"\n\t\t\tfi\n\t\t      elif test -n \"$old_library\"; then\n\t\t\tadd=\"$dir/$old_library\"\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test \"$hardcode_minus_L\" = no; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=\"$dir\" ;;\n\t\tesac\n\t\tadd_dir=\"-L$dir\"\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = no; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test \"$hardcode_direct\" = yes &&\n\t         test \"$hardcode_direct_absolute\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t      elif test \"$hardcode_minus_L\" = yes; then\n\t\tadd_dir=\"-L$dir\"\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case $libdir in\n\t\t    [\\\\/]*)\n\t\t      add_dir=\"$add_dir -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = yes; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test \"$lib_linked\" != yes; then\n\t      func_fatal_configuration \"unsupported hardcode properties\"\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) compile_shlibpath=\"$compile_shlibpath$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test \"$hardcode_direct\" != yes &&\n\t\t test \"$hardcode_minus_L\" != yes &&\n\t\t test \"$hardcode_shlibpath_var\" = yes; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) finalize_shlibpath=\"$finalize_shlibpath$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test \"$linkmode\" = prog || test \"$mode\" = relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test \"$hardcode_direct\" = yes &&\n\t       test \"$hardcode_direct_absolute\" = no; then\n\t      add=\"$libdir/$linklib\"\n\t    elif test \"$hardcode_minus_L\" = yes; then\n\t      add_dir=\"-L$libdir\"\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_shlibpath_var\" = yes; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) finalize_shlibpath=\"$finalize_shlibpath$libdir:\" ;;\n\t      esac\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_automatic\" = yes; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\" ; then\n\t\tadd=\"$inst_prefix_dir$libdir/$linklib\"\n\t      else\n\t\tadd=\"$libdir/$linklib\"\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=\"-L$libdir\"\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase $libdir in\n\t\t  [\\\\/]*)\n\t\t    add_dir=\"$add_dir -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=\"-l$name\"\n\t    fi\n\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test \"$linkmode\" = prog; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test \"$hardcode_direct\" != unsupported; then\n\t    test -n \"$old_library\" && linklib=\"$old_library\"\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test \"$build_libtool_libs\" = yes; then\n\t  # Not a shared library\n\t  if test \"$deplibs_check_method\" != pass_all; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    echo\n\t    $ECHO \"*** Warning: This system can not link to static lib archive $lib.\"\n\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test \"$module\" = yes; then\n\t      echo \"*** But as you try to build a module library, libtool will still create \"\n\t      echo \"*** a static module, that should work as long as the dlopening application\"\n\t      echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\techo\n\t\techo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\techo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t\techo \"*** not find such a program.  So, this module is probably useless.\"\n\t\techo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test \"$build_old_libs\" = no; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test \"$linkmode\" = lib; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test \"$hardcode_into_libs\" != yes ||\n\t       test \"$build_old_libs\" = yes ||\n\t       test \"$link_static\" = yes; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) func_stripname '-R' '' \"$libdir\"\n\t           temp_xrpath=$func_stripname_result\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) xrpath=\"$xrpath $temp_xrpath\";;\n\t\t   esac;;\n\t      *) temp_deplibs=\"$temp_deplibs $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=\"$temp_deplibs\"\n\t  fi\n\n\t  newlib_search_path=\"$newlib_search_path $absdir\"\n\t  # Link against this library\n\t  test \"$link_static\" = no && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    if $opt_duplicate_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t      esac\n\t    fi\n\t    tmp_libs=\"$tmp_libs $deplib\"\n\t  done\n\n\t  if test \"$link_all_deplibs\" != no; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      path=\n\t      case $deplib in\n\t      -L*) path=\"$deplib\" ;;\n\t      *.la)\n\t        func_dirname \"$deplib\" \"\" \".\"\n\t\tdir=\"$func_dirname_result\"\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=\"$dir\" ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    func_warning \"cannot determine absolute directory name of \\`$dir'\"\n\t\t    absdir=\"$dir\"\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif $GREP \"^installed=no\" $deplib > /dev/null; then\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  depdepl=\n\t\t  deplibrary_names=`${SED} -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\" ; then\n\t\t    for tmp in $deplibrary_names ; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$absdir/$objdir/$depdepl\" ; then\n\t\t      depdepl=\"$absdir/$objdir/$depdepl\"\n\t\t      darwin_install_name=`${OTOOL} -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`\n                      if test -z \"$darwin_install_name\"; then\n                          darwin_install_name=`${OTOOL64} -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`\n                      fi\n\t\t      compiler_flags=\"$compiler_flags ${wl}-dylib_file ${wl}${darwin_install_name}:${depdepl}\"\n\t\t      linker_flags=\"$linker_flags -dylib_file ${darwin_install_name}:${depdepl}\"\n\t\t      path=\n\t\t    fi\n\t\t  fi\n\t\t  ;;\n\t\t*)\n\t\t  path=\"-L$absdir/$objdir\"\n\t\t  ;;\n\t\tesac\n\t\telse\n\t\t  libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  test -z \"$libdir\" && \\\n\t\t    func_fatal_error \"\\`$deplib' is not a valid libtool archive\"\n\t\t  test \"$absdir\" != \"$libdir\" && \\\n\t\t    func_warning \"\\`$deplib' seems to be moved\"\n\n\t\t  path=\"-L$absdir\"\n\t\tfi\n\t\t;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      if test \"$pass\" = link; then\n\tif test \"$linkmode\" = \"prog\"; then\n\t  compile_deplibs=\"$new_inherited_linker_flags $compile_deplibs\"\n\t  finalize_deplibs=\"$new_inherited_linker_flags $finalize_deplibs\"\n\telse\n\t  compiler_flags=\"$compiler_flags \"`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfi\n      fi\n      dependency_libs=\"$newdependency_libs\"\n      if test \"$pass\" = dlpreopen; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test \"$pass\" != dlopen; then\n\tif test \"$pass\" != conv; then\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) lib_search_path=\"$lib_search_path $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\tfi\n\n\tif test \"$linkmode,$pass\" != \"prog,link\"; then\n\t  vars=\"deplibs\"\n\telse\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\$$var\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) tmp_libs=\"$tmp_libs $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) tmp_libs=\"$tmp_libs $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\$tmp_libs\n\tdone # for var\n      fi\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs ; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\"\"\n\t  ;;\n\tesac\n\tif test -n \"$i\" ; then\n\t  tmp_libs=\"$tmp_libs $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test \"$linkmode\" = prog; then\n      dlfiles=\"$newdlfiles\"\n    fi\n    if test \"$linkmode\" = prog || test \"$linkmode\" = lib; then\n      dlprefiles=\"$newdlprefiles\"\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tfunc_warning \"\\`-dlopen' is ignored for archives\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"\\`-l' and \\`-L' are ignored for archives\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"\\`-rpath' is ignored for archives\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"\\`-R' is ignored for archives\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info/-version-number' is ignored for archives\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for archives\"\n\n      test -n \"$export_symbols$export_symbols_regex\" && \\\n\tfunc_warning \"\\`-export-symbols' is ignored for archives\"\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=\"$output\"\n      objs=\"$objs$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form `libNAME.la'.\n      case $outputname in\n      lib*)\n\tfunc_stripname 'lib' '.la' \"$outputname\"\n\tname=$func_stripname_result\n\teval \"shared_ext=\\\"$shrext_cmds\\\"\"\n\teval \"libname=\\\"$libname_spec\\\"\"\n\t;;\n      *)\n\ttest \"$module\" = no && \\\n\t  func_fatal_help \"libtool library \\`$output' must begin with \\`lib'\"\n\n\tif test \"$need_lib_prefix\" != no; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  func_stripname '' '.la' \"$outputname\"\n\t  name=$func_stripname_result\n\t  eval \"shared_ext=\\\"$shrext_cmds\\\"\"\n\t  eval \"libname=\\\"$libname_spec\\\"\"\n\telse\n\t  func_stripname '' '.la' \"$outputname\"\n\t  libname=$func_stripname_result\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test \"$deplibs_check_method\" != pass_all; then\n\t  func_fatal_error \"cannot build libtool library \\`$output' from non-libtool objects on this host:$objs\"\n\telse\n\t  echo\n\t  $ECHO \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $ECHO \"*** objects $objs is not portable!\"\n\t  libobjs=\"$libobjs $objs\"\n\tfi\n      fi\n\n      test \"$dlself\" != no && \\\n\tfunc_warning \"\\`-dlopen self' is ignored for libtool libraries\"\n\n      set dummy $rpath\n      shift\n      test \"$#\" -gt 1 && \\\n\tfunc_warning \"ignoring multiple \\`-rpath's for a libtool library\"\n\n      install_libdir=\"$1\"\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test \"$build_libtool_libs\" = yes; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a `.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\ttest -n \"$vinfo\" && \\\n\t  func_warning \"\\`-version-info/-version-number' is ignored for convenience libraries\"\n\n\ttest -n \"$release\" && \\\n\t  func_warning \"\\`-release' is ignored for convenience libraries\"\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=\"$IFS\"; IFS=':'\n\tset dummy $vinfo 0 0 0\n\tshift\n\tIFS=\"$save_ifs\"\n\n\ttest -n \"$7\" && \\\n\t  func_fatal_help \"too many parameters to \\`-version-info'\"\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=\"$1\"\n\t  number_minor=\"$2\"\n\t  number_revision=\"$3\"\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # which has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  darwin|linux|osf|windows|none)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=\"$number_minor\"\n\t    revision=\"$number_revision\"\n\t    ;;\n\t  freebsd-aout|freebsd-elf|qnx|sunos)\n\t    current=\"$number_major\"\n\t    revision=\"$number_minor\"\n\t    age=\"0\"\n\t    ;;\n\t  irix|nonstopux)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=\"$number_minor\"\n\t    revision=\"$number_minor\"\n\t    lt_irix_increment=no\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=\"$1\"\n\t  revision=\"$2\"\n\t  age=\"$3\"\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"CURRENT \\`$current' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"REVISION \\`$revision' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"AGE \\`$age' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  func_error \"AGE \\`$age' is greater than the current interface number \\`$current'\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\"$major.$age.$revision\"\n\t  # Darwin ld doesn't like 0 for these options...\n\t  func_arith $current + 1\n\t  minor_current=$func_arith_result\n\t  xlcverstring=\"${wl}-compatibility_version ${wl}$minor_current ${wl}-current_version ${wl}$minor_current.$revision\"\n\t  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\";\n\t  ;;\n\n\tfreebsd-elf)\n\t  major=\".$current\"\n\t  versuffix=\".$current\"\n\t  ;;\n\n\tirix | nonstopux)\n\t  if test \"X$lt_irix_increment\" = \"Xno\"; then\n\t    func_arith $current - $age\n\t  else\n\t    func_arith $current - $age + 1\n\t  fi\n\t  major=$func_arith_result\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=\"$verstring_prefix$major.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test \"$loop\" -ne 0; do\n\t    func_arith $revision - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=\"$verstring_prefix$major.$iface:$verstring\"\n\t  done\n\n\t  # Before this point, $major must not contain `.'.\n\t  major=.$major\n\t  versuffix=\"$major.$revision\"\n\t  ;;\n\n\tlinux)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\"$major.$age.$revision\"\n\t  ;;\n\n\tosf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\".$current.$age.$revision\"\n\t  verstring=\"$current.$age.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test \"$loop\" -ne 0; do\n\t    func_arith $current - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=\"$verstring:${iface}.0\"\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  verstring=\"$verstring:${current}.0\"\n\t  ;;\n\n\tqnx)\n\t  major=\".$current\"\n\t  versuffix=\".$current\"\n\t  ;;\n\n\tsunos)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\"\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 filesystems.\n\t  func_arith $current - $age\n\t  major=$func_arith_result\n\t  versuffix=\"-$major\"\n\t  ;;\n\n\t*)\n\t  func_fatal_configuration \"unknown library version type \\`$version_type'\"\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=\"0.0\"\n\t    ;;\n\t  esac\n\t  if test \"$need_version\" = no; then\n\t    versuffix=\n\t  else\n\t    versuffix=\".0.0\"\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test \"$avoid_version\" = yes && test \"$need_version\" = no; then\n\t  major=\n\t  versuffix=\n\t  verstring=\"\"\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test \"$allow_undefined\" = yes; then\n\t  if test \"$allow_undefined_flag\" = unsupported; then\n\t    func_warning \"undefined symbols not allowed in $host shared libraries\"\n\t    build_libtool_libs=no\n\t    build_old_libs=yes\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=\"$no_undefined_flag\"\n\tfi\n\n      fi\n\n      func_generate_dlsyms \"$libname\" \"$libname\" \"yes\"\n      libobjs=\"$libobjs $symfileobj\"\n      test \"X$libobjs\" = \"X \" && libobjs=\n\n      if test \"$mode\" != relink; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$ECHO \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext | *.gcno)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/${libname}${release}.*)\n\t       if test \"X$precious_files_regex\" != \"X\"; then\n\t\t if $ECHO \"$p\" | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t\t then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       removelist=\"$removelist $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\ttest -n \"$removelist\" && \\\n\t  func_show_eval \"${RM}r \\$removelist\"\n      fi\n\n      # Now set the variables for building old libraries.\n      if test \"$build_old_libs\" = yes && test \"$build_libtool_libs\" != convenience ; then\n\toldlibs=\"$oldlibs $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.${libext}$/d; $lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      #for path in $notinst_path; do\n      #\tlib_search_path=`$ECHO \"$lib_search_path \" | $SED \"s% $path % %g\"`\n      #\tdeplibs=`$ECHO \"$deplibs \" | $SED \"s% -L$path % %g\"`\n      #\tdependency_libs=`$ECHO \"$dependency_libs \" | $SED \"s% -L$path % %g\"`\n      #done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  temp_xrpath=\"$temp_xrpath -R$libdir\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_rpath=\"$finalize_rpath $libdir\" ;;\n\t  esac\n\tdone\n\tif test \"$hardcode_into_libs\" != yes || test \"$build_old_libs\" = yes; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=\"$dlfiles\"\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) dlfiles=\"$dlfiles $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=\"$dlprefiles\"\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) dlprefiles=\"$dlprefiles $lib\" ;;\n\tesac\n      done\n\n      if test \"$build_libtool_libs\" = yes; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    deplibs=\"$deplibs System.ltframework\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    ;;\n\t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test \"$build_libtool_need_lc\" = \"yes\"; then\n\t      deplibs=\"$deplibs -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\"\"\n\tversuffix=\"\"\n\tmajor=\"\"\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $opt_dry_run || $RM conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $opt_dry_run || $RM conftest\n\t  if $LTCC $LTCFLAGS -o conftest conftest.c $deplibs; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\tif test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    newdeplibs=\"$newdeplibs $i\"\n\t\t    i=\"\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t\tif test -n \"$i\" ; then\n\t\t  eval \"libname=\\\"$libname_spec\\\"\"\n\t\t  eval \"deplib_matches=\\\"$library_names_spec\\\"\"\n\t\t  set dummy $deplib_matches; shift\n\t\t  deplib_match=$1\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t    newdeplibs=\"$newdeplibs $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    echo\n\t\t    $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *)\n\t\tnewdeplibs=\"$newdeplibs $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\t$opt_dry_run || $RM conftest\n\t\tif $LTCC $LTCFLAGS -o conftest conftest.c $i; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      newdeplibs=\"$newdeplibs $i\"\n\t\t      i=\"\"\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\" ; then\n\t\t    eval \"libname=\\\"$libname_spec\\\"\"\n\t\t    eval \"deplib_matches=\\\"$library_names_spec\\\"\"\n\t\t    set dummy $deplib_matches; shift\n\t\t    deplib_match=$1\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t      newdeplibs=\"$newdeplibs $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      echo\n\t\t      $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  $ECHO \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  echo \"*** make it link in!  You will probably need to install it or some\"\n\t\t  echo \"*** library that it depends on before this library will be fully\"\n\t\t  echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t\t;;\n\t      *)\n\t\tnewdeplibs=\"$newdeplibs $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method; shift\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\teval \"libname=\\\"$libname_spec\\\"\"\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null |\n\t\t\t $GREP \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=\"$potent_lib\"\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=\"$potliblink\";;\n\t\t\t*) potlib=`$ECHO \"$potlib\" | $SED 's,[^/]*$,,'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval \"$file_magic_cmd \\\"\\$potlib\\\"\" 2>/dev/null |\n\t\t\t $SED -e 10q |\n\t\t\t $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tnewdeplibs=\"$newdeplibs $a_deplib\"\n\t\t\ta_deplib=\"\"\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method; shift\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\teval \"libname=\\\"$libname_spec\\\"\"\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=\"$potent_lib\" # see symlink-check above in file_magic test\n\t\t    if eval \"\\$ECHO \\\"$potent_lib\\\"\" 2>/dev/null | $SED 10q | \\\n\t\t       $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t      a_deplib=\"\"\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\"\"\n\t  tmp_deplibs=`$ECHO \" $deplibs\" | $SED 's/ -lc$//; s/ -[LR][^ ]*//g'`\n\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t    for i in $predeps $postdeps ; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$ECHO \" $tmp_deplibs\" | $SED \"s,$i,,\"`\n\t    done\n\t  fi\n\t  case $tmp_deplibs in\n\t  *[!\\\t\\ ]*)\n\t    echo\n\t    if test \"X$deplibs_check_method\" = \"Xnone\"; then\n\t      echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library with the System framework\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t  ;;\n\tesac\n\n\tif test \"$droppeddeps\" = yes; then\n\t  if test \"$module\" = yes; then\n\t    echo\n\t    echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $ECHO \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    echo \"*** a static module, that should work as long as the dlopening\"\n\t    echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      echo\n\t      echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      echo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t      echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      echo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test \"$build_old_libs\" = no; then\n\t      oldlibs=\"$output_objdir/$libname.$libext\"\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    echo \"*** automatically added whenever a program is linked with this library\"\n\t    echo \"*** or is declared to -dlopen it.\"\n\n\t    if test \"$allow_undefined\" = no; then\n\t      echo\n\t      echo \"*** Since this library must not contain undefined symbols,\"\n\t      echo \"*** because either the platform does not support them or\"\n\t      echo \"*** it was explicitly requested with -no-undefined,\"\n\t      echo \"*** libtool will only create a static version of it.\"\n\t      if test \"$build_old_libs\" = no; then\n\t\toldlibs=\"$output_objdir/$libname.$libext\"\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n      # Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n      case $host in\n\t*-*-darwin*)\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  new_inherited_linker_flags=`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  deplibs=`$ECHO \" $deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  ;;\n      esac\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    new_libs=\"$new_libs -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) new_libs=\"$new_libs $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) new_libs=\"$new_libs $deplib\" ;;\n\tesac\n      done\n      deplibs=\"$new_libs\"\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test \"$build_libtool_libs\" = yes; then\n\tif test \"$hardcode_into_libs\" = yes; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=\"$finalize_rpath\"\n\t  test \"$mode\" != relink && rpath=\"$compile_rpath$rpath\"\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=\"$libdir\"\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    hardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval \"flag=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t\tdep_rpath=\"$dep_rpath $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) perm_rpath=\"$perm_rpath $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=\"$hardcode_libdirs\"\n\t    if test -n \"$hardcode_libdir_flag_spec_ld\"; then\n\t      eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec_ld\\\"\"\n\t    else\n\t      eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t    fi\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      rpath=\"$rpath$dir:\"\n\t    done\n\t    eval $runpath_var=\\$rpath\\$$runpath_var\n\t    export $runpath_var\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=\"$finalize_shlibpath\"\n\ttest \"$mode\" != relink && shlibpath=\"$compile_shlibpath$shlibpath\"\n\tif test -n \"$shlibpath\"; then\n\t  eval $shlibpath_var=\\$shlibpath\\$$shlibpath_var\n\t  export $shlibpath_var\n\tfi\n\n\t# Get the real and link names of the library.\n\teval \"shared_ext=\\\"$shrext_cmds\\\"\"\n\teval \"library_names=\\\"$library_names_spec\\\"\"\n\tset dummy $library_names\n\tshift\n\trealname=\"$1\"\n\tshift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval \"soname=\\\"$soname_spec\\\"\"\n\telse\n\t  soname=\"$realname\"\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=\"$output_objdir/$realname\"\n\tlinknames=\n\tfor link\n\tdo\n\t  linknames=\"$linknames $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$ECHO \"$libobjs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\ttest \"X$libobjs\" = \"X \" && libobjs=\n\n\tdelfiles=\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $opt_dry_run || cp \"$export_symbols\" \"$output_objdir/$libname.uexp\"\n\t  export_symbols=\"$output_objdir/$libname.uexp\"\n\t  delfiles=\"$delfiles $export_symbols\"\n\tfi\n\n\torig_export_symbols=\n\tcase $host_os in\n\tcygwin* | mingw* | cegcc*)\n\t  if test -n \"$export_symbols\" && test -z \"$export_symbols_regex\"; then\n\t    # exporting using user supplied symfile\n\t    if test \"x`$SED 1q $export_symbols`\" != xEXPORTS; then\n\t      # and it's NOT already a .def file. Must figure out\n\t      # which of the given symbols are data symbols and tag\n\t      # them as such. So, trigger use of export_symbols_cmds.\n\t      # export_symbols gets reassigned inside the \"prepare\n\t      # the list of exported symbols\" if statement, so the\n\t      # include_expsyms logic still works.\n\t      orig_export_symbols=\"$export_symbols\"\n\t      export_symbols=\n\t      always_export_symbols=yes\n\t    fi\n\t  fi\n\t  ;;\n\tesac\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test \"$always_export_symbols\" = yes || test -n \"$export_symbols_regex\"; then\n\t    func_verbose \"generating symbol list for \\`$libname.la'\"\n\t    export_symbols=\"$output_objdir/$libname.exp\"\n\t    $opt_dry_run || $RM $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $cmds; do\n\t      IFS=\"$save_ifs\"\n\t      eval \"cmd=\\\"$cmd\\\"\"\n\t      func_len \" $cmd\"\n\t      len=$func_len_result\n\t      if test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\tskipped_export=false\n\t      else\n\t\t# The command line is too long to execute in one step.\n\t\tfunc_verbose \"using reloadable object file for export list...\"\n\t\tskipped_export=:\n\t\t# Break out early, otherwise skipped_export may be\n\t\t# set to false by a later but shorter cmd.\n\t\tbreak\n\t      fi\n\t    done\n\t    IFS=\"$save_ifs\"\n\t    if test -n \"$export_symbols_regex\" && test \"X$skipped_export\" != \"X:\"; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  tmp_export_symbols=\"$export_symbols\"\n\t  test -n \"$orig_export_symbols\" && tmp_export_symbols=\"$orig_export_symbols\"\n\t  $opt_dry_run || $ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" && test -n \"$orig_export_symbols\"; then\n\t  # The given exports_symbols file has to be filtered, so filter it.\n\t  func_verbose \"filter symbol list for \\`$libname.la' to tag DATA exports\"\n\t  # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t  # 's' commands which not all seds can handle. GNU sed should be fine\n\t  # though. Also, the filter scales superlinearly with the number of\n\t  # global variables. join(1) would be nice here, but unfortunately\n\t  # isn't a blessed tool.\n\t  $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t  delfiles=\"$delfiles $export_symbols $output_objdir/$libname.filter\"\n\t  export_symbols=$output_objdir/$libname.def\n\t  $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t  case \" $convenience \" in\n\t  *\" $test_deplib \"*) ;;\n\t  *)\n\t    tmp_deplibs=\"$tmp_deplibs $test_deplib\"\n\t    ;;\n\t  esac\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\" &&\n\t    test \"$compiler_needs_object\" = yes &&\n\t    test -z \"$libobjs\"; then\n\t    # extract the archives, so we have objects to list.\n\t    # TODO: could optimize this to just extract one archive.\n\t    whole_archive_flag_spec=\n\t  fi\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval \"libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  else\n\t    gentop=\"$output_objdir/${outputname}x\"\n\t    generated=\"$generated $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    libobjs=\"$libobjs $func_extract_archives_result\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\tfi\n\n\tif test \"$thread_safe\" = yes && test -n \"$thread_safe_flag_spec\"; then\n\t  eval \"flag=\\\"$thread_safe_flag_spec\\\"\"\n\t  linker_flags=\"$linker_flags $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test \"$mode\" = relink; then\n\t  $opt_dry_run || (cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U) || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval \"test_cmds=\\\"$module_expsym_cmds\\\"\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval \"test_cmds=\\\"$module_cmds\\\"\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    eval \"test_cmds=\\\"$archive_expsym_cmds\\\"\"\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    eval \"test_cmds=\\\"$archive_cmds\\\"\"\n\t    cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" &&\n\t   func_len \" $test_cmds\" &&\n\t   len=$func_len_result &&\n\t   test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise\n\t  # or, if using GNU ld and skipped_export is not :, use a linker\n\t  # script.\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  func_basename \"$output\"\n\t  output_la=$func_basename_result\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  last_robj=\n\t  k=1\n\n\t  if test -n \"$save_libobjs\" && test \"X$skipped_export\" != \"X:\" && test \"$with_gnu_ld\" = yes; then\n\t    output=${output_objdir}/${output_la}.lnkscript\n\t    func_verbose \"creating GNU ld script: $output\"\n\t    echo 'INPUT (' > $output\n\t    for obj in $save_libobjs\n\t    do\n\t      $ECHO \"$obj\" >> $output\n\t    done\n\t    echo ')' >> $output\n\t    delfiles=\"$delfiles $output\"\n\t  elif test -n \"$save_libobjs\" && test \"X$skipped_export\" != \"X:\" && test \"X$file_list_spec\" != X; then\n\t    output=${output_objdir}/${output_la}.lnk\n\t    func_verbose \"creating linker input file list: $output\"\n\t    : > $output\n\t    set x $save_libobjs\n\t    shift\n\t    firstobj=\n\t    if test \"$compiler_needs_object\" = yes; then\n\t      firstobj=\"$1 \"\n\t      shift\n\t    fi\n\t    for obj\n\t    do\n\t      $ECHO \"$obj\" >> $output\n\t    done\n\t    delfiles=\"$delfiles $output\"\n\t    output=$firstobj\\\"$file_list_spec$output\\\"\n\t  else\n\t    if test -n \"$save_libobjs\"; then\n\t      func_verbose \"creating reloadable object files...\"\n\t      output=$output_objdir/$output_la-${k}.$objext\n\t      eval \"test_cmds=\\\"$reload_cmds\\\"\"\n\t      func_len \" $test_cmds\"\n\t      len0=$func_len_result\n\t      len=$len0\n\n\t      # Loop over the list of objects to be linked.\n\t      for obj in $save_libobjs\n\t      do\n\t\tfunc_len \" $obj\"\n\t\tfunc_arith $len + $func_len_result\n\t\tlen=$func_arith_result\n\t\tif test \"X$objlist\" = X ||\n\t\t   test \"$len\" -lt \"$max_cmd_len\"; then\n\t\t  func_append objlist \" $obj\"\n\t\telse\n\t\t  # The command $test_cmds is almost too long, add a\n\t\t  # command to the queue.\n\t\t  if test \"$k\" -eq 1 ; then\n\t\t    # The first file doesn't have a previous command to add.\n\t\t    reload_objs=$objlist\n\t\t    eval \"concat_cmds=\\\"$reload_cmds\\\"\"\n\t\t  else\n\t\t    # All subsequent reloadable object files will link in\n\t\t    # the last one created.\n\t\t    reload_objs=\"$objlist $last_robj\"\n\t\t    eval \"concat_cmds=\\\"\\$concat_cmds~$reload_cmds~\\$RM $last_robj\\\"\"\n\t\t  fi\n\t\t  last_robj=$output_objdir/$output_la-${k}.$objext\n\t\t  func_arith $k + 1\n\t\t  k=$func_arith_result\n\t\t  output=$output_objdir/$output_la-${k}.$objext\n\t\t  objlist=\" $obj\"\n\t\t  func_len \" $last_robj\"\n\t\t  func_arith $len0 + $func_len_result\n\t\t  len=$func_arith_result\n\t\tfi\n\t      done\n\t      # Handle the remaining objects by creating one last\n\t      # reloadable object file.  All subsequent reloadable object\n\t      # files will link in the last one created.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      reload_objs=\"$objlist $last_robj\"\n\t      eval \"concat_cmds=\\\"\\${concat_cmds}$reload_cmds\\\"\"\n\t      if test -n \"$last_robj\"; then\n\t        eval \"concat_cmds=\\\"\\${concat_cmds}~\\$RM $last_robj\\\"\"\n\t      fi\n\t      delfiles=\"$delfiles $output\"\n\n\t    else\n\t      output=\n\t    fi\n\n\t    if ${skipped_export-false}; then\n\t      func_verbose \"generating symbol list for \\`$libname.la'\"\n\t      export_symbols=\"$output_objdir/$libname.exp\"\n\t      $opt_dry_run || $RM $export_symbols\n\t      libobjs=$output\n\t      # Append the command to create the export file.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval \"concat_cmds=\\\"\\$concat_cmds$export_symbols_cmds\\\"\"\n\t      if test -n \"$last_robj\"; then\n\t\teval \"concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\"\n\t      fi\n\t    fi\n\n\t    test -n \"$save_libobjs\" &&\n\t      func_verbose \"creating a temporary reloadable object file: $output\"\n\n\t    # Loop through the commands generated above and execute them.\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $concat_cmds; do\n\t      IFS=\"$save_ifs\"\n\t      $opt_silent || {\n\t\t  func_quote_for_expand \"$cmd\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t      }\n\t      $opt_dry_run || eval \"$cmd\" || {\n\t\tlt_exit=$?\n\n\t\t# Restore the uninstalled library and exit\n\t\tif test \"$mode\" = relink; then\n\t\t  ( cd \"$output_objdir\" && \\\n\t\t    $RM \"${realname}T\" && \\\n\t\t    $MV \"${realname}U\" \"$realname\" )\n\t\tfi\n\n\t\texit $lt_exit\n\t      }\n\t    done\n\t    IFS=\"$save_ifs\"\n\n\t    if test -n \"$export_symbols_regex\" && ${skipped_export-false}; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\n          if ${skipped_export-false}; then\n\t    if test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t      tmp_export_symbols=\"$export_symbols\"\n\t      test -n \"$orig_export_symbols\" && tmp_export_symbols=\"$orig_export_symbols\"\n\t      $opt_dry_run || $ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"\n\t    fi\n\n\t    if test -n \"$orig_export_symbols\"; then\n\t      # The given exports_symbols file has to be filtered, so filter it.\n\t      func_verbose \"filter symbol list for \\`$libname.la' to tag DATA exports\"\n\t      # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t      # 's' commands which not all seds can handle. GNU sed should be fine\n\t      # though. Also, the filter scales superlinearly with the number of\n\t      # global variables. join(1) would be nice here, but unfortunately\n\t      # isn't a blessed tool.\n\t      $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t      delfiles=\"$delfiles $export_symbols $output_objdir/$libname.filter\"\n\t      export_symbols=$output_objdir/$libname.def\n\t      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\t    fi\n\t  fi\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval \"libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t    if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t      cmds=$archive_expsym_cmds\n\t    else\n\t      cmds=$archive_cmds\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$delfiles\"; then\n\t  # Append the command to remove temporary files to $cmds.\n\t  eval \"cmds=\\\"\\$cmds~\\$RM $delfiles\\\"\"\n\tfi\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  generated=\"$generated $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  libobjs=\"$libobjs $func_extract_archives_result\"\n\t  test \"X$libobjs\" = \"X \" && libobjs=\n\tfi\n\n\tsave_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  eval \"cmd=\\\"$cmd\\\"\"\n\t  $opt_silent || {\n\t    func_quote_for_expand \"$cmd\"\n\t    eval \"func_echo $func_quote_for_expand_result\"\n\t  }\n\t  $opt_dry_run || eval \"$cmd\" || {\n\t    lt_exit=$?\n\n\t    # Restore the uninstalled library and exit\n\t    if test \"$mode\" = relink; then\n\t      ( cd \"$output_objdir\" && \\\n\t        $RM \"${realname}T\" && \\\n\t\t$MV \"${realname}U\" \"$realname\" )\n\t    fi\n\n\t    exit $lt_exit\n\t  }\n\tdone\n\tIFS=\"$save_ifs\"\n\n\t# Restore the uninstalled library and exit\n\tif test \"$mode\" = relink; then\n\t  $opt_dry_run || (cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname) || exit $?\n\n\t  if test -n \"$convenience\"; then\n\t    if test -z \"$whole_archive_flag_spec\"; then\n\t      func_show_eval '${RM}r \"$gentop\"'\n\t    fi\n\t  fi\n\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    func_show_eval '(cd \"$output_objdir\" && $RM \"$linkname\" && $LN_S \"$realname\" \"$linkname\")' 'exit $?'\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test \"$module\" = yes || test \"$export_dynamic\" = yes; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=\"$soname\"\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tfunc_warning \"\\`-dlopen' is ignored for objects\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"\\`-l' and \\`-L' are ignored for objects\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"\\`-rpath' is ignored for objects\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"\\`-R' is ignored for objects\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info' is ignored for objects\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for objects\"\n\n      case $output in\n      *.lo)\n\ttest -n \"$objs$old_deplibs\" && \\\n\t  func_fatal_error \"cannot build library object \\`$output' from non-libtool objects\"\n\n\tlibobj=$output\n\tfunc_lo2o \"$libobj\"\n\tobj=$func_lo2o_result\n\t;;\n      *)\n\tlibobj=\n\tobj=\"$output\"\n\t;;\n      esac\n\n      # Delete the old objects.\n      $opt_dry_run || $RM $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # reload_cmds runs $LD directly, so let us get rid of\n      # -Wl from whole_archive_flag_spec and hope we can get by with\n      # turning comma into space..\n      wl=\n\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval \"tmp_whole_archive_flags=\\\"$whole_archive_flag_spec\\\"\"\n\t  reload_conv_objs=$reload_objs\\ `$ECHO \"$tmp_whole_archive_flags\" | $SED 's|,| |g'`\n\telse\n\t  gentop=\"$output_objdir/${obj}x\"\n\t  generated=\"$generated $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # Create the old-style object.\n      reload_objs=\"$objs$old_deplibs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.${libext}$/d; /\\.lib$/d; $lo2o\" | $NL2SP`\" $reload_conv_objs\" ### testsuite: skip nested quoting test\n\n      output=\"$obj\"\n      func_execute_cmds \"$reload_cmds\" 'exit $?'\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$build_libtool_libs\" != yes; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $opt_dry_run || echo timestamp > $libobj || exit $?\n\texit $EXIT_SUCCESS\n      fi\n\n      if test -n \"$pic_flag\" || test \"$pic_mode\" != default; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=\"$libobj\"\n\tfunc_execute_cmds \"$reload_cmds\" 'exit $?'\n      fi\n\n      if test -n \"$gentop\"; then\n\tfunc_show_eval '${RM}r \"$gentop\"'\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) func_stripname '' '.exe' \"$output\"\n\t          output=$func_stripname_result.exe;;\n      esac\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info' is ignored for programs\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for programs\"\n\n      test \"$preload\" = yes \\\n        && test \"$dlopen_support\" = unknown \\\n\t&& test \"$dlopen_self\" = unknown \\\n\t&& test \"$dlopen_self_static\" = unknown && \\\n\t  func_warning \"\\`LT_INIT([dlopen])' not used. Assuming no dlopen support.\"\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t;;\n      esac\n\n      case $host in\n      *-*-darwin*)\n\t# Don't allow lazy linking, it breaks C++ global constructors\n\t# But is supposedly fixed on 10.4 or later (yay!).\n\tif test \"$tagname\" = CXX ; then\n\t  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in\n\t    10.[0123])\n\t      compile_command=\"$compile_command ${wl}-bind_at_load\"\n\t      finalize_command=\"$finalize_command ${wl}-bind_at_load\"\n\t    ;;\n\t  esac\n\tfi\n\t# Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t;;\n      esac\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $compile_deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    new_libs=\"$new_libs -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $compile_deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) new_libs=\"$new_libs $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) new_libs=\"$new_libs $deplib\" ;;\n\tesac\n      done\n      compile_deplibs=\"$new_libs\"\n\n\n      compile_command=\"$compile_command $compile_deplibs\"\n      finalize_command=\"$finalize_command $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_rpath=\"$finalize_rpath $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\thardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval \"flag=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t    rpath=\"$rpath $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) perm_rpath=\"$perm_rpath $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`${ECHO} \"$libdir\" | ${SED} -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  ::) dllsearchpath=$libdir;;\n\t  *) dllsearchpath=\"$dllsearchpath:$libdir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) dllsearchpath=\"$dllsearchpath:$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval \"rpath=\\\" $hardcode_libdir_flag_spec\\\"\"\n      fi\n      compile_rpath=\"$rpath\"\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\thardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval \"flag=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t    rpath=\"$rpath $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_perm_rpath=\"$finalize_perm_rpath $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval \"rpath=\\\" $hardcode_libdir_flag_spec\\\"\"\n      fi\n      finalize_rpath=\"$rpath\"\n\n      if test -n \"$libobjs\" && test \"$build_old_libs\" = yes; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$ECHO \"$compile_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$ECHO \"$finalize_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n      fi\n\n      func_generate_dlsyms \"$outputname\" \"@PROGRAM@\" \"no\"\n\n      # template prelinking step\n      if test -n \"$prelink_cmds\"; then\n\tfunc_execute_cmds \"$prelink_cmds\" 'exit $?'\n      fi\n\n      wrappers_required=yes\n      case $host in\n      *cegcc* | *mingw32ce*)\n        # Disable wrappers for cegcc and mingw32ce hosts, we are cross compiling anyway.\n        wrappers_required=no\n        ;;\n      *cygwin* | *mingw* )\n        if test \"$build_libtool_libs\" != yes; then\n          wrappers_required=no\n        fi\n        ;;\n      *)\n        if test \"$need_relink\" = no || test \"$build_libtool_libs\" != yes; then\n          wrappers_required=no\n        fi\n        ;;\n      esac\n      if test \"$wrappers_required\" = no; then\n\t# Replace the output file specification.\n\tcompile_command=`$ECHO \"$compile_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=\"$compile_command$compile_rpath\"\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\texit_status=0\n\tfunc_show_eval \"$link_command\" 'exit_status=$?'\n\n\t# Delete the generated files.\n\tif test -f \"$output_objdir/${outputname}S.${objext}\"; then\n\t  func_show_eval '$RM \"$output_objdir/${outputname}S.${objext}\"'\n\tfi\n\n\texit $exit_status\n      fi\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    rpath=\"$rpath$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    rpath=\"$rpath$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test \"$no_install\" = yes; then\n\t# We don't need to create a wrapper script.\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\t# Replace the output file specification.\n\tlink_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$opt_dry_run || $RM $output\n\t# Link the executable and exit\n\tfunc_show_eval \"$link_command\" 'exit $?'\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$hardcode_action\" = relink; then\n\t# Fast installation is not supported\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\trelink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\n\tfunc_warning \"this platform does not like uninstalled shared libraries\"\n\tfunc_warning \"\\`$output' will be relinked during installation\"\n      else\n\tif test \"$fast_install\" != no; then\n\t  link_command=\"$finalize_var$compile_command$finalize_rpath\"\n\t  if test \"$fast_install\" = yes; then\n\t    relink_command=`$ECHO \"$compile_var$compile_command$compile_rpath\" | $SED 's%@OUTPUT@%\\$progdir/\\$file%g'`\n\t  else\n\t    # fast_install is set to needless\n\t    relink_command=\n\t  fi\n\telse\n\t  link_command=\"$compile_var$compile_command$compile_rpath\"\n\t  relink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\tfi\n      fi\n\n      # Replace the output file specification.\n      link_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $opt_dry_run || $RM $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      func_show_eval \"$link_command\" 'exit $?'\n\n      # Now create the wrapper script.\n      func_verbose \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    func_quote_for_eval \"$var_value\"\n\t    relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\t  fi\n\tdone\n\trelink_command=\"(cd `pwd`; $relink_command)\"\n\trelink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if not in dry run mode.\n      $opt_dry_run || {\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) func_stripname '' '.exe' \"$output\"\n\t         output=$func_stripname_result ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    func_stripname '' '.exe' \"$outputname\"\n\t    outputname=$func_stripname_result ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n\t    func_dirname_and_basename \"$output\" \"\" \".\"\n\t    output_name=$func_basename_result\n\t    output_path=$func_dirname_result\n\t    cwrappersource=\"$output_path/$objdir/lt-$output_name.c\"\n\t    cwrapper=\"$output_path/$output_name.exe\"\n\t    $RM $cwrappersource $cwrapper\n\t    trap \"$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_cwrapperexe_src > $cwrappersource\n\n\t    # The wrapper executable is built using the $host compiler,\n\t    # because it contains $host paths and files. If cross-\n\t    # compiling, it, like the target executable, must be\n\t    # executed on the $host or under an emulation environment.\n\t    $opt_dry_run || {\n\t      $LTCC $LTCFLAGS -o $cwrapper $cwrappersource\n\t      $STRIP $cwrapper\n\t    }\n\n\t    # Now, create the wrapper script for func_source use:\n\t    func_ltwrapper_scriptname $cwrapper\n\t    $RM $func_ltwrapper_scriptname_result\n\t    trap \"$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE\" 1 2 15\n\t    $opt_dry_run || {\n\t      # note: this script will not be executed, so do not chmod.\n\t      if test \"x$build\" = \"x$host\" ; then\n\t\t$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result\n\t      else\n\t\tfunc_emit_wrapper no > $func_ltwrapper_scriptname_result\n\t      fi\n\t    }\n\t  ;;\n\t  * )\n\t    $RM $output\n\t    trap \"$RM $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_wrapper no > $output\n\t    chmod +x $output\n\t  ;;\n\tesac\n      }\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      if test \"$build_libtool_libs\" = convenience; then\n\toldobjs=\"$libobjs_save $symfileobj\"\n\taddlibs=\"$convenience\"\n\tbuild_libtool_libs=no\n      else\n\tif test \"$build_libtool_libs\" = module; then\n\t  oldobjs=\"$libobjs_save\"\n\t  build_libtool_libs=no\n\telse\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\t  if test \"$preload\" = yes && test -f \"$symfileobj\"; then\n\t    oldobjs=\"$oldobjs $symfileobj\"\n\t  fi\n\tfi\n\taddlibs=\"$old_convenience\"\n      fi\n\n      if test -n \"$addlibs\"; then\n\tgentop=\"$output_objdir/${outputname}x\"\n\tgenerated=\"$generated $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\toldobjs=\"$oldobjs $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test \"$build_libtool_libs\" = yes; then\n\tcmds=$old_archive_from_new_cmds\n      else\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  generated=\"$generated $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  oldobjs=\"$oldobjs $func_extract_archives_result\"\n\tfi\n\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      func_basename \"$obj\"\n\t      $ECHO \"$func_basename_result\"\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  echo \"copying selected object files to avoid basename conflicts...\"\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  generated=\"$generated $gentop\"\n\t  func_mkdir_p \"$gentop\"\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_basename \"$obj\"\n\t    objbase=\"$func_basename_result\"\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tfunc_arith $counter + 1\n\t\tcounter=$func_arith_result\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      func_show_eval \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      oldobjs=\"$oldobjs $gentop/$newobj\"\n\t      ;;\n\t    *) oldobjs=\"$oldobjs $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\teval \"cmds=\\\"$old_archive_cmds\\\"\"\n\n\tfunc_len \" $cmds\"\n\tlen=$func_len_result\n\tif test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  func_verbose \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  eval \"test_cmds=\\\"$old_archive_cmds\\\"\"\n\t  func_len \" $test_cmds\"\n\t  len0=$func_len_result\n\t  len=$len0\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_len \" $obj\"\n\t    func_arith $len + $func_len_result\n\t    len=$func_arith_result\n\t    func_append objlist \" $obj\"\n\t    if test \"$len\" -lt \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\" ; then\n\t\tRANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval \"concat_cmds=\\\"\\${concat_cmds}$old_archive_cmds\\\"\"\n\t      objlist=\n\t      len=$len0\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test \"X$oldobjs\" = \"X\" ; then\n\t    eval \"cmds=\\\"\\$concat_cmds\\\"\"\n\t  else\n\t    eval \"cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\"\n\t  fi\n\tfi\n      fi\n      func_execute_cmds \"$cmds\" 'exit $?'\n    done\n\n    test -n \"$generated\" && \\\n      func_show_eval \"${RM}r$generated\"\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test \"$build_old_libs\" = yes && old_library=\"$libname.$libext\"\n      func_verbose \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  func_quote_for_eval \"$var_value\"\n\t  relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      relink_command=\"(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      relink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      if test \"$hardcode_automatic\" = yes ; then\n\trelink_command=\n      fi\n\n      # Only create the output if not a dry run.\n      $opt_dry_run || {\n\tfor installed in no yes; do\n\t  if test \"$installed\" = yes; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=\"$output_objdir/$outputname\"i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tfunc_basename \"$deplib\"\n\t\tname=\"$func_basename_result\"\n\t\tlibdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$deplib' is not a valid libtool archive\"\n\t\tnewdependency_libs=\"$newdependency_libs $libdir/$name\"\n\t\t;;\n\t      *) newdependency_libs=\"$newdependency_libs $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=\"$newdependency_libs\"\n\t    newdlfiles=\n\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t      *.la)\n\t        func_basename \"$lib\"\n\t\tname=\"$func_basename_result\"\n\t\tlibdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\t\tnewdlfiles=\"$newdlfiles $libdir/$name\"\n\t\t;;\n\t      *) newdlfiles=\"$newdlfiles $lib\" ;;\n\t      esac\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t      *.la)\n\t\t# Only pass preopened files to the pseudo-archive (for\n\t\t# eventual linking with the app. that links it) if we\n\t\t# didn't already link the preopened objects directly into\n\t\t# the library:\n\t\tfunc_basename \"$lib\"\n\t\tname=\"$func_basename_result\"\n\t\tlibdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\t\tnewdlprefiles=\"$newdlprefiles $libdir/$name\"\n\t\t;;\n\t      esac\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      newdlfiles=\"$newdlfiles $abs\"\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      newdlprefiles=\"$newdlprefiles $abs\"\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  fi\n\t  $RM $output\n\t  # place dlname in correct position for cygwin\n\t  # In fact, it would be nice if we could use this code for all target\n\t  # systems that can't hard-code library paths into their executables\n\t  # and that have no shared library path variable independent of PATH,\n\t  # but it turns out we can't easily determine that from inspecting\n\t  # libtool variables, so we have to hard-code the OSs to which it\n\t  # applies here; at the moment, that means platforms that use the PE\n\t  # object format with DLL files.  See the long comment at the top of\n\t  # tests/bindir.at for full details.\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll)\n\t      # If a -bindir argument was supplied, place the dll there.\n\t      if test \"x$bindir\" != x ;\n\t      then\n\t\tfunc_relative_path \"$install_libdir\" \"$bindir\"\n\t\ttdlname=$func_relative_path_result$dlname\n\t      else\n\t\t# Otherwise fall back on heuristic.\n\t\ttdlname=../bin/$dlname\n\t      fi\n\t      ;;\n\t  esac\n\t  $ECHO > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Linker flags that can not go in dependency_libs.\ninherited_linker_flags='$new_inherited_linker_flags'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Names of additional weak libraries provided by this library\nweak_library_names='$weak_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test \"$installed\" = no && test \"$need_relink\" = yes; then\n\t    $ECHO >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      }\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      func_show_eval '( cd \"$output_objdir\" && $RM \"$outputname\" && $LN_S \"../$outputname\" \"$outputname\" )' 'exit $?'\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n}\n\n{ test \"$mode\" = link || test \"$mode\" = relink; } &&\n    func_mode_link ${1+\"$@\"}\n\n\n# func_mode_uninstall arg...\nfunc_mode_uninstall ()\n{\n    $opt_debug\n    RM=\"$nonopt\"\n    files=\n    rmforce=\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    for arg\n    do\n      case $arg in\n      -f) RM=\"$RM $arg\"; rmforce=yes ;;\n      -*) RM=\"$RM $arg\" ;;\n      *) files=\"$files $arg\" ;;\n      esac\n    done\n\n    test -z \"$RM\" && \\\n      func_fatal_help \"you must specify an RM program\"\n\n    rmdirs=\n\n    origobjdir=\"$objdir\"\n    for file in $files; do\n      func_dirname \"$file\" \"\" \".\"\n      dir=\"$func_dirname_result\"\n      if test \"X$dir\" = X.; then\n\tobjdir=\"$origobjdir\"\n      else\n\tobjdir=\"$dir/$origobjdir\"\n      fi\n      func_basename \"$file\"\n      name=\"$func_basename_result\"\n      test \"$mode\" = uninstall && objdir=\"$dir\"\n\n      # Remember objdir for removal later, being careful to avoid duplicates\n      if test \"$mode\" = clean; then\n\tcase \" $rmdirs \" in\n\t  *\" $objdir \"*) ;;\n\t  *) rmdirs=\"$rmdirs $objdir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if { test -L \"$file\"; } >/dev/null 2>&1 ||\n\t { test -h \"$file\"; } >/dev/null 2>&1 ||\n\t test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif test \"$rmforce\" = yes; then\n\tcontinue\n      fi\n\n      rmfiles=\"$file\"\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif func_lalib_p \"$file\"; then\n\t  func_source $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    rmfiles=\"$rmfiles $objdir/$n\"\n\t  done\n\t  test -n \"$old_library\" && rmfiles=\"$rmfiles $objdir/$old_library\"\n\n\t  case \"$mode\" in\n\t  clean)\n\t    case \"  $library_names \" in\n\t    # \"  \" in the beginning catches empty $dlname\n\t    *\" $dlname \"*) ;;\n\t    *) rmfiles=\"$rmfiles $objdir/$dlname\" ;;\n\t    esac\n\t    test -n \"$libdir\" && rmfiles=\"$rmfiles $objdir/$name $objdir/${name}i\"\n\t    ;;\n\t  uninstall)\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      func_execute_cmds \"$postuninstall_cmds\" 'test \"$rmforce\" = yes || exit_status=1'\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      func_execute_cmds \"$old_postuninstall_cmds\" 'test \"$rmforce\" = yes || exit_status=1'\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t    ;;\n\t  esac\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif func_lalib_p \"$file\"; then\n\n\t  # Read the .lo file\n\t  func_source $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" &&\n\t     test \"$pic_object\" != none; then\n\t    rmfiles=\"$rmfiles $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" &&\n\t     test \"$non_pic_object\" != none; then\n\t    rmfiles=\"$rmfiles $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test \"$mode\" = clean ; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    func_stripname '' '.exe' \"$file\"\n\t    file=$func_stripname_result\n\t    func_stripname '' '.exe' \"$name\"\n\t    noexename=$func_stripname_result\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    rmfiles=\"$rmfiles $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if func_ltwrapper_p \"$file\"; then\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      relink_command=\n\t      func_source $func_ltwrapper_scriptname_result\n\t      rmfiles=\"$rmfiles $func_ltwrapper_scriptname_result\"\n\t    else\n\t      relink_command=\n\t      func_source $dir/$noexename\n\t    fi\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    rmfiles=\"$rmfiles $objdir/$name $objdir/${name}S.${objext}\"\n\t    if test \"$fast_install\" = yes && test -n \"$relink_command\"; then\n\t      rmfiles=\"$rmfiles $objdir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\" ; then\n\t      rmfiles=\"$rmfiles $objdir/lt-${noexename}.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      func_show_eval \"$RM $rmfiles\" 'exit_status=1'\n    done\n    objdir=\"$origobjdir\"\n\n    # Try to remove the ${objdir}s in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\tfunc_show_eval \"rmdir $dir >/dev/null 2>&1\"\n      fi\n    done\n\n    exit $exit_status\n}\n\n{ test \"$mode\" = uninstall || test \"$mode\" = clean; } &&\n    func_mode_uninstall ${1+\"$@\"}\n\ntest -z \"$mode\" && {\n  help=\"$generic_help\"\n  func_fatal_help \"you must specify a MODE\"\n}\n\ntest -z \"$exec_cmd\" && \\\n  func_fatal_help \"invalid operation mode \\`$mode'\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec \"$exec_cmd\"\n  exit $EXIT_FAILURE\nfi\n\nexit $exit_status\n\n\n# The TAGs below are defined such that we never get into a situation\n# in which we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\nbuild_libtool_libs=no\nbuild_old_libs=yes\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\nbuild_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n# vi:sw=2\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libsanitizer/asan/asan_malloc_mac.cc": "//===-- asan_malloc_mac.cc ------------------------------------------------===//\n//\n// This file is distributed under the University of Illinois Open Source\n// License. See LICENSE.TXT for details.\n//\n//===----------------------------------------------------------------------===//\n//\n// This file is a part of AddressSanitizer, an address sanity checker.\n//\n// Mac-specific malloc interception.\n//===----------------------------------------------------------------------===//\n\n#ifdef __APPLE__\n\n#include <AvailabilityMacros.h>\n#include <CoreFoundation/CFBase.h>\n#include <dlfcn.h>\n#include <malloc/malloc.h>\n\n#include \"asan_allocator.h\"\n#include \"asan_interceptors.h\"\n#include \"asan_internal.h\"\n#include \"asan_mac.h\"\n#include \"asan_report.h\"\n#include \"asan_stack.h\"\n#include \"asan_stats.h\"\n#include \"asan_thread_registry.h\"\n\n// Similar code is used in Google Perftools,\n// http://code.google.com/p/google-perftools.\n\n// ---------------------- Replacement functions ---------------- {{{1\nusing namespace __asan;  // NOLINT\n\n// TODO(glider): do we need both zones?\nstatic malloc_zone_t *system_malloc_zone = 0;\nstatic malloc_zone_t asan_zone;\n\nINTERCEPTOR(malloc_zone_t *, malloc_create_zone,\n                             vm_size_t start_size, unsigned zone_flags) {\n  if (!asan_inited) __asan_init();\n  GET_STACK_TRACE_MALLOC;\n  malloc_zone_t *new_zone =\n      (malloc_zone_t*)asan_malloc(sizeof(asan_zone), &stack);\n  internal_memcpy(new_zone, &asan_zone, sizeof(asan_zone));\n  new_zone->zone_name = NULL;  // The name will be changed anyway.\n  return new_zone;\n}\n\nINTERCEPTOR(malloc_zone_t *, malloc_default_zone, void) {\n  if (!asan_inited) __asan_init();\n  return &asan_zone;\n}\n\nINTERCEPTOR(malloc_zone_t *, malloc_default_purgeable_zone, void) {\n  // FIXME: ASan should support purgeable allocations.\n  // https://code.google.com/p/address-sanitizer/issues/detail?id=139\n  if (!asan_inited) __asan_init();\n  return &asan_zone;\n}\n\nINTERCEPTOR(void, malloc_make_purgeable, void *ptr) {\n  // FIXME: ASan should support purgeable allocations. Ignoring them is fine\n  // for now.\n  if (!asan_inited) __asan_init();\n}\n\nINTERCEPTOR(int, malloc_make_nonpurgeable, void *ptr) {\n  // FIXME: ASan should support purgeable allocations. Ignoring them is fine\n  // for now.\n  if (!asan_inited) __asan_init();\n  // Must return 0 if the contents were not purged since the last call to\n  // malloc_make_purgeable().\n  return 0;\n}\n\nINTERCEPTOR(void, malloc_set_zone_name, malloc_zone_t *zone, const char *name) {\n  if (!asan_inited) __asan_init();\n  // Allocate |strlen(\"asan-\") + 1 + internal_strlen(name)| bytes.\n  size_t buflen = 6 + (name ? internal_strlen(name) : 0);\n  InternalScopedBuffer<char> new_name(buflen);\n  if (name && zone->introspect == asan_zone.introspect) {\n    internal_snprintf(new_name.data(), buflen, \"asan-%s\", name);\n    name = new_name.data();\n  }\n\n  // Call the system malloc's implementation for both external and our zones,\n  // since that appropriately changes VM region protections on the zone.\n  REAL(malloc_set_zone_name)(zone, name);\n}\n\nINTERCEPTOR(void *, malloc, size_t size) {\n  if (!asan_inited) __asan_init();\n  GET_STACK_TRACE_MALLOC;\n  void *res = asan_malloc(size, &stack);\n  return res;\n}\n\nINTERCEPTOR(void, free, void *ptr) {\n  if (!asan_inited) __asan_init();\n  if (!ptr) return;\n  GET_STACK_TRACE_FREE;\n  asan_free(ptr, &stack, FROM_MALLOC);\n}\n\nINTERCEPTOR(void *, realloc, void *ptr, size_t size) {\n  if (!asan_inited) __asan_init();\n  GET_STACK_TRACE_MALLOC;\n  return asan_realloc(ptr, size, &stack);\n}\n\nINTERCEPTOR(void *, calloc, size_t nmemb, size_t size) {\n  if (!asan_inited) __asan_init();\n  GET_STACK_TRACE_MALLOC;\n  return asan_calloc(nmemb, size, &stack);\n}\n\nINTERCEPTOR(void *, valloc, size_t size) {\n  if (!asan_inited) __asan_init();\n  GET_STACK_TRACE_MALLOC;\n  return asan_memalign(GetPageSizeCached(), size, &stack, FROM_MALLOC);\n}\n\nINTERCEPTOR(size_t, malloc_good_size, size_t size) {\n  if (!asan_inited) __asan_init();\n  return asan_zone.introspect->good_size(&asan_zone, size);\n}\n\nINTERCEPTOR(int, posix_memalign, void **memptr, size_t alignment, size_t size) {\n  if (!asan_inited) __asan_init();\n  CHECK(memptr);\n  GET_STACK_TRACE_MALLOC;\n  void *result = asan_memalign(alignment, size, &stack, FROM_MALLOC);\n  if (result) {\n    *memptr = result;\n    return 0;\n  }\n  return -1;\n}\n\nnamespace {\n\n// TODO(glider): the mz_* functions should be united with the Linux wrappers,\n// as they are basically copied from there.\nsize_t mz_size(malloc_zone_t* zone, const void* ptr) {\n  return asan_mz_size(ptr);\n}\n\nvoid *mz_malloc(malloc_zone_t *zone, size_t size) {\n  if (!asan_inited) {\n    CHECK(system_malloc_zone);\n    return malloc_zone_malloc(system_malloc_zone, size);\n  }\n  GET_STACK_TRACE_MALLOC;\n  return asan_malloc(size, &stack);\n}\n\nvoid *mz_calloc(malloc_zone_t *zone, size_t nmemb, size_t size) {\n  if (!asan_inited) {\n    // Hack: dlsym calls calloc before REAL(calloc) is retrieved from dlsym.\n    const size_t kCallocPoolSize = 1024;\n    static uptr calloc_memory_for_dlsym[kCallocPoolSize];\n    static size_t allocated;\n    size_t size_in_words = ((nmemb * size) + kWordSize - 1) / kWordSize;\n    void *mem = (void*)&calloc_memory_for_dlsym[allocated];\n    allocated += size_in_words;\n    CHECK(allocated < kCallocPoolSize);\n    return mem;\n  }\n  GET_STACK_TRACE_MALLOC;\n  return asan_calloc(nmemb, size, &stack);\n}\n\nvoid *mz_valloc(malloc_zone_t *zone, size_t size) {\n  if (!asan_inited) {\n    CHECK(system_malloc_zone);\n    return malloc_zone_valloc(system_malloc_zone, size);\n  }\n  GET_STACK_TRACE_MALLOC;\n  return asan_memalign(GetPageSizeCached(), size, &stack, FROM_MALLOC);\n}\n\n#define GET_ZONE_FOR_PTR(ptr) \\\n  malloc_zone_t *zone_ptr = malloc_zone_from_ptr(ptr); \\\n  const char *zone_name = (zone_ptr == 0) ? 0 : zone_ptr->zone_name\n\nvoid ALWAYS_INLINE free_common(void *context, void *ptr) {\n  if (!ptr) return;\n  GET_STACK_TRACE_FREE;\n  // FIXME: need to retire this flag.\n  if (!flags()->mac_ignore_invalid_free) {\n    asan_free(ptr, &stack, FROM_MALLOC);\n  } else {\n    GET_ZONE_FOR_PTR(ptr);\n    WarnMacFreeUnallocated((uptr)ptr, (uptr)zone_ptr, zone_name, &stack);\n    return;\n  }\n}\n\n// TODO(glider): the allocation callbacks need to be refactored.\nvoid mz_free(malloc_zone_t *zone, void *ptr) {\n  free_common(zone, ptr);\n}\n\nvoid *mz_realloc(malloc_zone_t *zone, void *ptr, size_t size) {\n  if (!ptr) {\n    GET_STACK_TRACE_MALLOC;\n    return asan_malloc(size, &stack);\n  } else {\n    if (asan_mz_size(ptr)) {\n      GET_STACK_TRACE_MALLOC;\n      return asan_realloc(ptr, size, &stack);\n    } else {\n      // We can't recover from reallocating an unknown address, because\n      // this would require reading at most |size| bytes from\n      // potentially unaccessible memory.\n      GET_STACK_TRACE_FREE;\n      GET_ZONE_FOR_PTR(ptr);\n      ReportMacMzReallocUnknown((uptr)ptr, (uptr)zone_ptr, zone_name, &stack);\n    }\n  }\n}\n\nvoid mz_destroy(malloc_zone_t* zone) {\n  // A no-op -- we will not be destroyed!\n  Report(\"mz_destroy() called -- ignoring\\n\");\n}\n\n  // from AvailabilityMacros.h\n#if defined(MAC_OS_X_VERSION_10_6) && \\\n    MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_6\nvoid *mz_memalign(malloc_zone_t *zone, size_t align, size_t size) {\n  if (!asan_inited) {\n    CHECK(system_malloc_zone);\n    return malloc_zone_memalign(system_malloc_zone, align, size);\n  }\n  GET_STACK_TRACE_MALLOC;\n  return asan_memalign(align, size, &stack, FROM_MALLOC);\n}\n\n// This function is currently unused, and we build with -Werror.\n#if 0\nvoid mz_free_definite_size(malloc_zone_t* zone, void *ptr, size_t size) {\n  // TODO(glider): check that |size| is valid.\n  UNIMPLEMENTED();\n}\n#endif\n#endif\n\nkern_return_t mi_enumerator(task_t task, void *,\n                            unsigned type_mask, vm_address_t zone_address,\n                            memory_reader_t reader,\n                            vm_range_recorder_t recorder) {\n  // Should enumerate all the pointers we have.  Seems like a lot of work.\n  return KERN_FAILURE;\n}\n\nsize_t mi_good_size(malloc_zone_t *zone, size_t size) {\n  // I think it's always safe to return size, but we maybe could do better.\n  return size;\n}\n\nboolean_t mi_check(malloc_zone_t *zone) {\n  UNIMPLEMENTED();\n}\n\nvoid mi_print(malloc_zone_t *zone, boolean_t verbose) {\n  UNIMPLEMENTED();\n}\n\nvoid mi_log(malloc_zone_t *zone, void *address) {\n  // I don't think we support anything like this\n}\n\nvoid mi_force_lock(malloc_zone_t *zone) {\n  asan_mz_force_lock();\n}\n\nvoid mi_force_unlock(malloc_zone_t *zone) {\n  asan_mz_force_unlock();\n}\n\nvoid mi_statistics(malloc_zone_t *zone, malloc_statistics_t *stats) {\n  AsanMallocStats malloc_stats;\n  asanThreadRegistry().FillMallocStatistics(&malloc_stats);\n  CHECK(sizeof(malloc_statistics_t) == sizeof(AsanMallocStats));\n  internal_memcpy(stats, &malloc_stats, sizeof(malloc_statistics_t));\n}\n\n#if defined(MAC_OS_X_VERSION_10_6) && \\\n    MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_6\nboolean_t mi_zone_locked(malloc_zone_t *zone) {\n  // UNIMPLEMENTED();\n  return false;\n}\n#endif\n\n}  // unnamed namespace\n\nnamespace __asan {\n\nvoid ReplaceSystemMalloc() {\n  static malloc_introspection_t asan_introspection;\n  // Ok to use internal_memset, these places are not performance-critical.\n  internal_memset(&asan_introspection, 0, sizeof(asan_introspection));\n\n  asan_introspection.enumerator = &mi_enumerator;\n  asan_introspection.good_size = &mi_good_size;\n  asan_introspection.check = &mi_check;\n  asan_introspection.print = &mi_print;\n  asan_introspection.log = &mi_log;\n  asan_introspection.force_lock = &mi_force_lock;\n  asan_introspection.force_unlock = &mi_force_unlock;\n  asan_introspection.statistics = &mi_statistics;\n\n  internal_memset(&asan_zone, 0, sizeof(malloc_zone_t));\n\n  // Start with a version 4 zone which is used for OS X 10.4 and 10.5.\n  asan_zone.version = 4;\n  asan_zone.zone_name = \"asan\";\n  asan_zone.size = &mz_size;\n  asan_zone.malloc = &mz_malloc;\n  asan_zone.calloc = &mz_calloc;\n  asan_zone.valloc = &mz_valloc;\n  asan_zone.free = &mz_free;\n  asan_zone.realloc = &mz_realloc;\n  asan_zone.destroy = &mz_destroy;\n  asan_zone.batch_malloc = 0;\n  asan_zone.batch_free = 0;\n  asan_zone.introspect = &asan_introspection;\n\n  // from AvailabilityMacros.h\n#if defined(MAC_OS_X_VERSION_10_6) && \\\n    MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_6\n  // Switch to version 6 on OSX 10.6 to support memalign.\n  asan_zone.version = 6;\n  asan_zone.free_definite_size = 0;\n  asan_zone.memalign = &mz_memalign;\n  asan_introspection.zone_locked = &mi_zone_locked;\n#endif\n\n  // Register the ASan zone.\n  malloc_zone_register(&asan_zone);\n}\n}  // namespace __asan\n\n#endif  // __APPLE__\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libsanitizer/asan/asan_malloc_linux.cc": "//===-- asan_malloc_linux.cc ----------------------------------------------===//\n//\n// This file is distributed under the University of Illinois Open Source\n// License. See LICENSE.TXT for details.\n//\n//===----------------------------------------------------------------------===//\n//\n// This file is a part of AddressSanitizer, an address sanity checker.\n//\n// Linux-specific malloc interception.\n// We simply define functions like malloc, free, realloc, etc.\n// They will replace the corresponding libc functions automagically.\n//===----------------------------------------------------------------------===//\n#ifdef __linux__\n\n#include \"asan_allocator.h\"\n#include \"asan_interceptors.h\"\n#include \"asan_internal.h\"\n#include \"asan_stack.h\"\n#include \"asan_thread_registry.h\"\n\n#if ASAN_ANDROID\nDECLARE_REAL_AND_INTERCEPTOR(void*, malloc, uptr size)\nDECLARE_REAL_AND_INTERCEPTOR(void, free, void *ptr)\nDECLARE_REAL_AND_INTERCEPTOR(void*, calloc, uptr nmemb, uptr size)\nDECLARE_REAL_AND_INTERCEPTOR(void*, realloc, void *ptr, uptr size)\nDECLARE_REAL_AND_INTERCEPTOR(void*, memalign, uptr boundary, uptr size)\n\nstruct MallocDebug {\n  void* (*malloc)(uptr bytes);\n  void  (*free)(void* mem);\n  void* (*calloc)(uptr n_elements, uptr elem_size);\n  void* (*realloc)(void* oldMem, uptr bytes);\n  void* (*memalign)(uptr alignment, uptr bytes);\n};\n\nconst MallocDebug asan_malloc_dispatch ALIGNED(32) = {\n  WRAP(malloc), WRAP(free), WRAP(calloc), WRAP(realloc), WRAP(memalign)\n};\n\nextern \"C\" const MallocDebug* __libc_malloc_dispatch;\n\nnamespace __asan {\nvoid ReplaceSystemMalloc() {\n  __libc_malloc_dispatch = &asan_malloc_dispatch;\n}\n}  // namespace __asan\n\n#else  // ANDROID\n\nnamespace __asan {\nvoid ReplaceSystemMalloc() {\n}\n}  // namespace __asan\n#endif  // ANDROID\n\n// ---------------------- Replacement functions ---------------- {{{1\nusing namespace __asan;  // NOLINT\n\nINTERCEPTOR(void, free, void *ptr) {\n  GET_STACK_TRACE_FREE;\n  asan_free(ptr, &stack, FROM_MALLOC);\n}\n\nINTERCEPTOR(void, cfree, void *ptr) {\n  GET_STACK_TRACE_FREE;\n  asan_free(ptr, &stack, FROM_MALLOC);\n}\n\nINTERCEPTOR(void*, malloc, uptr size) {\n  GET_STACK_TRACE_MALLOC;\n  return asan_malloc(size, &stack);\n}\n\nINTERCEPTOR(void*, calloc, uptr nmemb, uptr size) {\n  if (!asan_inited) {\n    // Hack: dlsym calls calloc before REAL(calloc) is retrieved from dlsym.\n    const uptr kCallocPoolSize = 1024;\n    static uptr calloc_memory_for_dlsym[kCallocPoolSize];\n    static uptr allocated;\n    uptr size_in_words = ((nmemb * size) + kWordSize - 1) / kWordSize;\n    void *mem = (void*)&calloc_memory_for_dlsym[allocated];\n    allocated += size_in_words;\n    CHECK(allocated < kCallocPoolSize);\n    return mem;\n  }\n  GET_STACK_TRACE_MALLOC;\n  return asan_calloc(nmemb, size, &stack);\n}\n\nINTERCEPTOR(void*, realloc, void *ptr, uptr size) {\n  GET_STACK_TRACE_MALLOC;\n  return asan_realloc(ptr, size, &stack);\n}\n\nINTERCEPTOR(void*, memalign, uptr boundary, uptr size) {\n  GET_STACK_TRACE_MALLOC;\n  return asan_memalign(boundary, size, &stack, FROM_MALLOC);\n}\n\nINTERCEPTOR(void*, __libc_memalign, uptr align, uptr s)\n  ALIAS(\"memalign\");\n\nINTERCEPTOR(uptr, malloc_usable_size, void *ptr) {\n  GET_STACK_TRACE_MALLOC;\n  return asan_malloc_usable_size(ptr, &stack);\n}\n\n// We avoid including malloc.h for portability reasons.\n// man mallinfo says the fields are \"long\", but the implementation uses int.\n// It doesn't matter much -- we just need to make sure that the libc's mallinfo\n// is not called.\nstruct fake_mallinfo {\n  int x[10];\n};\n\nINTERCEPTOR(struct fake_mallinfo, mallinfo, void) {\n  struct fake_mallinfo res;\n  REAL(memset)(&res, 0, sizeof(res));\n  return res;\n}\n\nINTERCEPTOR(int, mallopt, int cmd, int value) {\n  return -1;\n}\n\nINTERCEPTOR(int, posix_memalign, void **memptr, uptr alignment, uptr size) {\n  GET_STACK_TRACE_MALLOC;\n  // Printf(\"posix_memalign: %zx %zu\\n\", alignment, size);\n  return asan_posix_memalign(memptr, alignment, size, &stack);\n}\n\nINTERCEPTOR(void*, valloc, uptr size) {\n  GET_STACK_TRACE_MALLOC;\n  return asan_valloc(size, &stack);\n}\n\nINTERCEPTOR(void*, pvalloc, uptr size) {\n  GET_STACK_TRACE_MALLOC;\n  return asan_pvalloc(size, &stack);\n}\n\nINTERCEPTOR(void, malloc_stats, void) {\n  __asan_print_accumulated_stats();\n}\n\n#endif  // __linux__\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libsanitizer/interception/interception.h": "//===-- interception.h ------------------------------------------*- C++ -*-===//\n//\n// This file is distributed under the University of Illinois Open Source\n// License. See LICENSE.TXT for details.\n//\n//===----------------------------------------------------------------------===//\n//\n// This file is a part of AddressSanitizer, an address sanity checker.\n//\n// Machinery for providing replacements/wrappers for system functions.\n//===----------------------------------------------------------------------===//\n\n#ifndef INTERCEPTION_H\n#define INTERCEPTION_H\n\n#if !defined(__linux__) && !defined(__APPLE__) && !defined(_WIN32)\n# error \"Interception doesn't work on this operating system.\"\n#endif\n\n#include \"sanitizer_common/sanitizer_internal_defs.h\"\n\n// These typedefs should be used only in the interceptor definitions to replace\n// the standard system types (e.g. SSIZE_T instead of ssize_t)\ntypedef __sanitizer::uptr SIZE_T;\ntypedef __sanitizer::sptr SSIZE_T;\ntypedef __sanitizer::sptr PTRDIFF_T;\ntypedef __sanitizer::s64  INTMAX_T;\n// WARNING: OFF_T may be different from OS type off_t, depending on the value of\n// _FILE_OFFSET_BITS. This definition of OFF_T matches the ABI of system calls\n// like pread and mmap, as opposed to pread64 and mmap64.\n// Mac and Linux/x86-64 are special.\n#if defined(__APPLE__) || (defined(__linux__) && defined(__x86_64__))\ntypedef __sanitizer::u64 OFF_T;\n#else\ntypedef __sanitizer::uptr OFF_T;\n#endif\ntypedef __sanitizer::u64  OFF64_T;\n\n// How to add an interceptor:\n// Suppose you need to wrap/replace system function (generally, from libc):\n//      int foo(const char *bar, double baz);\n// You'll need to:\n//      1) define INTERCEPTOR(int, foo, const char *bar, double baz) { ... } in\n//         your source file.\n//      2) Call \"INTERCEPT_FUNCTION(foo)\" prior to the first call of \"foo\".\n//         INTERCEPT_FUNCTION(foo) evaluates to \"true\" iff the function was\n//         intercepted successfully.\n// You can access original function by calling REAL(foo)(bar, baz).\n// By default, REAL(foo) will be visible only inside your interceptor, and if\n// you want to use it in other parts of RTL, you'll need to:\n//      3a) add DECLARE_REAL(int, foo, const char*, double) to a\n//          header file.\n// However, if the call \"INTERCEPT_FUNCTION(foo)\" and definition for\n// INTERCEPTOR(..., foo, ...) are in different files, you'll instead need to:\n//      3b) add DECLARE_REAL_AND_INTERCEPTOR(int, foo, const char*, double)\n//          to a header file.\n\n// Notes: 1. Things may not work properly if macro INTERCEPT(...) {...} or\n//           DECLARE_REAL(...) are located inside namespaces.\n//        2. On Mac you can also use: \"OVERRIDE_FUNCTION(foo, zoo);\" to\n//           effectively redirect calls from \"foo\" to \"zoo\". In this case\n//           you aren't required to implement\n//           INTERCEPTOR(int, foo, const char *bar, double baz) {...}\n//           but instead you'll have to add\n//           DEFINE_REAL(int, foo, const char *bar, double baz) in your\n//           source file (to define a pointer to overriden function).\n\n// How it works:\n// To replace system functions on Linux we just need to declare functions\n// with same names in our library and then obtain the real function pointers\n// using dlsym().\n// There is one complication. A user may also intercept some of the functions\n// we intercept. To resolve this we declare our interceptors with __interceptor_\n// prefix, and then make actual interceptors weak aliases to __interceptor_\n// functions.\n// This is not so on Mac OS, where the two-level namespace makes\n// our replacement functions invisible to other libraries. This may be overcomed\n// using the DYLD_FORCE_FLAT_NAMESPACE, but some errors loading the shared\n// libraries in Chromium were noticed when doing so.\n// Instead we create a dylib containing a __DATA,__interpose section that\n// associates library functions with their wrappers. When this dylib is\n// preloaded before an executable using DYLD_INSERT_LIBRARIES, it routes all\n// the calls to interposed functions done through stubs to the wrapper\n// functions.\n\n#if defined(__APPLE__)\n# define WRAP(x) wrap_##x\n# define WRAPPER_NAME(x) \"wrap_\"#x\n# define INTERCEPTOR_ATTRIBUTE\n# define DECLARE_WRAPPER(ret_type, func, ...)\n#elif defined(_WIN32)\n# if defined(_DLL)  // DLL CRT\n#  define WRAP(x) x\n#  define WRAPPER_NAME(x) #x\n#  define INTERCEPTOR_ATTRIBUTE\n# else  // Static CRT\n#  define WRAP(x) wrap_##x\n#  define WRAPPER_NAME(x) \"wrap_\"#x\n#  define INTERCEPTOR_ATTRIBUTE\n# endif\n# define DECLARE_WRAPPER(ret_type, func, ...)\n#else\n# define WRAP(x) __interceptor_ ## x\n# define WRAPPER_NAME(x) \"__interceptor_\" #x\n# define INTERCEPTOR_ATTRIBUTE __attribute__((visibility(\"default\")))\n# define DECLARE_WRAPPER(ret_type, func, ...) \\\n    extern \"C\" ret_type func(__VA_ARGS__) \\\n    __attribute__((weak, alias(\"__interceptor_\" #func), visibility(\"default\")));\n#endif\n\n#if !defined(__APPLE__)\n# define PTR_TO_REAL(x) real_##x\n# define REAL(x) __interception::PTR_TO_REAL(x)\n# define FUNC_TYPE(x) x##_f\n\n# define DECLARE_REAL(ret_type, func, ...) \\\n    typedef ret_type (*FUNC_TYPE(func))(__VA_ARGS__); \\\n    namespace __interception { \\\n      extern FUNC_TYPE(func) PTR_TO_REAL(func); \\\n    }\n#else  // __APPLE__\n# define REAL(x) x\n# define DECLARE_REAL(ret_type, func, ...) \\\n    extern \"C\" ret_type func(__VA_ARGS__);\n#endif  // __APPLE__\n\n#define DECLARE_REAL_AND_INTERCEPTOR(ret_type, func, ...) \\\n  DECLARE_REAL(ret_type, func, __VA_ARGS__) \\\n  extern \"C\" ret_type WRAP(func)(__VA_ARGS__);\n\n// Generally, you don't need to use DEFINE_REAL by itself, as INTERCEPTOR\n// macros does its job. In exceptional cases you may need to call REAL(foo)\n// without defining INTERCEPTOR(..., foo, ...). For example, if you override\n// foo with an interceptor for other function.\n#if !defined(__APPLE__)\n# define DEFINE_REAL(ret_type, func, ...) \\\n    typedef ret_type (*FUNC_TYPE(func))(__VA_ARGS__); \\\n    namespace __interception { \\\n      FUNC_TYPE(func) PTR_TO_REAL(func); \\\n    }\n#else\n# define DEFINE_REAL(ret_type, func, ...)\n#endif\n\n#define INTERCEPTOR(ret_type, func, ...) \\\n  DEFINE_REAL(ret_type, func, __VA_ARGS__) \\\n  DECLARE_WRAPPER(ret_type, func, __VA_ARGS__) \\\n  extern \"C\" \\\n  INTERCEPTOR_ATTRIBUTE \\\n  ret_type WRAP(func)(__VA_ARGS__)\n\n#if defined(_WIN32)\n# define INTERCEPTOR_WINAPI(ret_type, func, ...) \\\n    typedef ret_type (__stdcall *FUNC_TYPE(func))(__VA_ARGS__); \\\n    namespace __interception { \\\n      FUNC_TYPE(func) PTR_TO_REAL(func); \\\n    } \\\n    DECLARE_WRAPPER(ret_type, func, __VA_ARGS__) \\\n    extern \"C\" \\\n    INTERCEPTOR_ATTRIBUTE \\\n    ret_type __stdcall WRAP(func)(__VA_ARGS__)\n#endif\n\n// ISO C++ forbids casting between pointer-to-function and pointer-to-object,\n// so we use casting via an integral type __interception::uptr,\n// assuming that system is POSIX-compliant. Using other hacks seem\n// challenging, as we don't even pass function type to\n// INTERCEPT_FUNCTION macro, only its name.\nnamespace __interception {\n#if defined(_WIN64)\ntypedef unsigned long long uptr;  // NOLINT\n#else\ntypedef unsigned long uptr;  // NOLINT\n#endif  // _WIN64\n}  // namespace __interception\n\n#define INCLUDED_FROM_INTERCEPTION_LIB\n\n#if defined(__linux__)\n# include \"interception_linux.h\"\n# define INTERCEPT_FUNCTION(func) INTERCEPT_FUNCTION_LINUX(func)\n#elif defined(__APPLE__)\n# include \"interception_mac.h\"\n# define OVERRIDE_FUNCTION(old_func, new_func) \\\n    OVERRIDE_FUNCTION_MAC(old_func, new_func)\n# define INTERCEPT_FUNCTION(func) INTERCEPT_FUNCTION_MAC(func)\n#else  // defined(_WIN32)\n# include \"interception_win.h\"\n# define INTERCEPT_FUNCTION(func) INTERCEPT_FUNCTION_WIN(func)\n#endif\n\n#undef INCLUDED_FROM_INTERCEPTION_LIB\n\n#endif  // INTERCEPTION_H\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libsanitizer/interception/interception_linux.cc": "//===-- interception_linux.cc -----------------------------------*- C++ -*-===//\n//\n// This file is distributed under the University of Illinois Open Source\n// License. See LICENSE.TXT for details.\n//\n//===----------------------------------------------------------------------===//\n//\n// This file is a part of AddressSanitizer, an address sanity checker.\n//\n// Linux-specific interception methods.\n//===----------------------------------------------------------------------===//\n\n#ifdef __linux__\n#include \"interception.h\"\n\n#include <stddef.h>  // for NULL\n#include <dlfcn.h>   // for dlsym\n\nnamespace __interception {\nbool GetRealFunctionAddress(const char *func_name, uptr *func_addr,\n    uptr real, uptr wrapper) {\n  *func_addr = (uptr)dlsym(RTLD_NEXT, func_name);\n  return real == wrapper;\n}\n}  // namespace __interception\n\n\n#endif  // __linux__\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libsanitizer/tsan/tsan_interceptors.cc": "//===-- tsan_interceptors.cc ----------------------------------------------===//\n//\n// This file is distributed under the University of Illinois Open Source\n// License. See LICENSE.TXT for details.\n//\n//===----------------------------------------------------------------------===//\n//\n// This file is a part of ThreadSanitizer (TSan), a race detector.\n//\n// FIXME: move as many interceptors as possible into\n// sanitizer_common/sanitizer_common_interceptors.h\n//===----------------------------------------------------------------------===//\n\n#include \"sanitizer_common/sanitizer_atomic.h\"\n#include \"sanitizer_common/sanitizer_libc.h\"\n#include \"sanitizer_common/sanitizer_placement_new.h\"\n#include \"sanitizer_common/sanitizer_stacktrace.h\"\n#include \"interception/interception.h\"\n#include \"tsan_interface.h\"\n#include \"tsan_platform.h\"\n#include \"tsan_rtl.h\"\n#include \"tsan_mman.h\"\n#include \"tsan_fd.h\"\n\nusing namespace __tsan;  // NOLINT\n\nconst int kSigCount = 128;\n\nstruct my_siginfo_t {\n  int opaque[128];\n};\n\nstruct sigset_t {\n  u64 val[1024 / 8 / sizeof(u64)];\n};\n\nstruct ucontext_t {\n  uptr opaque[117];\n};\n\nextern \"C\" int pthread_attr_init(void *attr);\nextern \"C\" int pthread_attr_destroy(void *attr);\nextern \"C\" int pthread_attr_getdetachstate(void *attr, int *v);\nextern \"C\" int pthread_attr_setstacksize(void *attr, uptr stacksize);\nextern \"C\" int pthread_attr_getstacksize(void *attr, uptr *stacksize);\nextern \"C\" int pthread_key_create(unsigned *key, void (*destructor)(void* v));\nextern \"C\" int pthread_setspecific(unsigned key, const void *v);\nextern \"C\" int pthread_mutexattr_gettype(void *a, int *type);\nextern \"C\" int pthread_yield();\nextern \"C\" int pthread_sigmask(int how, const sigset_t *set, sigset_t *oldset);\nextern \"C\" int sigfillset(sigset_t *set);\nextern \"C\" void *pthread_self();\nextern \"C\" void _exit(int status);\nextern \"C\" int *__errno_location();\nextern \"C\" int fileno_unlocked(void *stream);\nextern \"C\" void *__libc_malloc(uptr size);\nextern \"C\" void *__libc_calloc(uptr size, uptr n);\nextern \"C\" void *__libc_realloc(void *ptr, uptr size);\nextern \"C\" void __libc_free(void *ptr);\nconst int PTHREAD_MUTEX_RECURSIVE = 1;\nconst int PTHREAD_MUTEX_RECURSIVE_NP = 1;\nconst int kPthreadAttrSize = 56;\nconst int EINVAL = 22;\nconst int EBUSY = 16;\nconst int EPOLL_CTL_ADD = 1;\nconst int SIGILL = 4;\nconst int SIGABRT = 6;\nconst int SIGFPE = 8;\nconst int SIGSEGV = 11;\nconst int SIGPIPE = 13;\nconst int SIGBUS = 7;\nvoid *const MAP_FAILED = (void*)-1;\nconst int PTHREAD_BARRIER_SERIAL_THREAD = -1;\nconst int MAP_FIXED = 0x10;\ntypedef long long_t;  // NOLINT\n\n// From /usr/include/unistd.h\n# define F_ULOCK 0      /* Unlock a previously locked region.  */\n# define F_LOCK  1      /* Lock a region for exclusive use.  */\n# define F_TLOCK 2      /* Test and lock a region for exclusive use.  */\n# define F_TEST  3      /* Test a region for other processes locks.  */\n\ntypedef void (*sighandler_t)(int sig);\n\n#define errno (*__errno_location())\n\nunion pthread_attr_t {\n  char size[kPthreadAttrSize];\n  void *align;\n};\n\nstruct sigaction_t {\n  union {\n    sighandler_t sa_handler;\n    void (*sa_sigaction)(int sig, my_siginfo_t *siginfo, void *uctx);\n  };\n  sigset_t sa_mask;\n  int sa_flags;\n  void (*sa_restorer)();\n};\n\nconst sighandler_t SIG_DFL = (sighandler_t)0;\nconst sighandler_t SIG_IGN = (sighandler_t)1;\nconst sighandler_t SIG_ERR = (sighandler_t)-1;\nconst int SA_SIGINFO = 4;\nconst int SIG_SETMASK = 2;\n\nnamespace std {\nstruct nothrow_t {};\n}  // namespace std\n\nstatic sigaction_t sigactions[kSigCount];\n\nnamespace __tsan {\nstruct SignalDesc {\n  bool armed;\n  bool sigaction;\n  my_siginfo_t siginfo;\n  ucontext_t ctx;\n};\n\nstruct SignalContext {\n  int in_blocking_func;\n  int int_signal_send;\n  int pending_signal_count;\n  SignalDesc pending_signals[kSigCount];\n};\n}  // namespace __tsan\n\nstatic SignalContext *SigCtx(ThreadState *thr) {\n  SignalContext *ctx = (SignalContext*)thr->signal_ctx;\n  if (ctx == 0 && thr->is_alive) {\n    ScopedInRtl in_rtl;\n    ctx = (SignalContext*)MmapOrDie(sizeof(*ctx), \"SignalContext\");\n    MemoryResetRange(thr, (uptr)&SigCtx, (uptr)ctx, sizeof(*ctx));\n    thr->signal_ctx = ctx;\n  }\n  return ctx;\n}\n\nstatic unsigned g_thread_finalize_key;\n\nclass ScopedInterceptor {\n public:\n  ScopedInterceptor(ThreadState *thr, const char *fname, uptr pc);\n  ~ScopedInterceptor();\n private:\n  ThreadState *const thr_;\n  const int in_rtl_;\n};\n\nScopedInterceptor::ScopedInterceptor(ThreadState *thr, const char *fname,\n                                     uptr pc)\n    : thr_(thr)\n    , in_rtl_(thr->in_rtl) {\n  if (thr_->in_rtl == 0) {\n    Initialize(thr);\n    FuncEntry(thr, pc);\n    thr_->in_rtl++;\n    DPrintf(\"#%d: intercept %s()\\n\", thr_->tid, fname);\n  } else {\n    thr_->in_rtl++;\n  }\n}\n\nScopedInterceptor::~ScopedInterceptor() {\n  thr_->in_rtl--;\n  if (thr_->in_rtl == 0) {\n    FuncExit(thr_);\n    ProcessPendingSignals(thr_);\n  }\n  CHECK_EQ(in_rtl_, thr_->in_rtl);\n}\n\n#define SCOPED_INTERCEPTOR_RAW(func, ...) \\\n    ThreadState *thr = cur_thread(); \\\n    StatInc(thr, StatInterceptor); \\\n    StatInc(thr, StatInt_##func); \\\n    const uptr caller_pc = GET_CALLER_PC(); \\\n    ScopedInterceptor si(thr, #func, caller_pc); \\\n    const uptr pc = __sanitizer::StackTrace::GetPreviousInstructionPc( \\\n        __sanitizer::StackTrace::GetCurrentPc()); \\\n    (void)pc; \\\n/**/\n\n#define SCOPED_TSAN_INTERCEPTOR(func, ...) \\\n    SCOPED_INTERCEPTOR_RAW(func, __VA_ARGS__); \\\n    if (REAL(func) == 0) { \\\n      Printf(\"FATAL: ThreadSanitizer: failed to intercept %s\\n\", #func); \\\n      Die(); \\\n    } \\\n    if (thr->in_rtl > 1) \\\n      return REAL(func)(__VA_ARGS__); \\\n/**/\n\n#define TSAN_INTERCEPTOR(ret, func, ...) INTERCEPTOR(ret, func, __VA_ARGS__)\n#define TSAN_INTERCEPT(func) INTERCEPT_FUNCTION(func)\n\n#define BLOCK_REAL(name) (BlockingCall(thr), REAL(name))\n\nstruct BlockingCall {\n  explicit BlockingCall(ThreadState *thr)\n      : ctx(SigCtx(thr)) {\n    ctx->in_blocking_func++;\n  }\n\n  ~BlockingCall() {\n    ctx->in_blocking_func--;\n  }\n\n  SignalContext *ctx;\n};\n\nTSAN_INTERCEPTOR(unsigned, sleep, unsigned sec) {\n  SCOPED_TSAN_INTERCEPTOR(sleep, sec);\n  unsigned res = BLOCK_REAL(sleep)(sec);\n  AfterSleep(thr, pc);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, usleep, long_t usec) {\n  SCOPED_TSAN_INTERCEPTOR(usleep, usec);\n  int res = BLOCK_REAL(usleep)(usec);\n  AfterSleep(thr, pc);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, nanosleep, void *req, void *rem) {\n  SCOPED_TSAN_INTERCEPTOR(nanosleep, req, rem);\n  int res = BLOCK_REAL(nanosleep)(req, rem);\n  AfterSleep(thr, pc);\n  return res;\n}\n\nclass AtExitContext {\n public:\n  AtExitContext()\n    : mtx_(MutexTypeAtExit, StatMtxAtExit)\n    , pos_() {\n  }\n\n  typedef void(*atexit_t)();\n\n  int atexit(ThreadState *thr, uptr pc, bool is_on_exit,\n             atexit_t f, void *arg) {\n    Lock l(&mtx_);\n    if (pos_ == kMaxAtExit)\n      return 1;\n    Release(thr, pc, (uptr)this);\n    stack_[pos_] = f;\n    args_[pos_] = arg;\n    is_on_exits_[pos_] = is_on_exit;\n    pos_++;\n    return 0;\n  }\n\n  void exit(ThreadState *thr, uptr pc) {\n    CHECK_EQ(thr->in_rtl, 0);\n    for (;;) {\n      atexit_t f = 0;\n      void *arg = 0;\n      bool is_on_exit = false;\n      {\n        Lock l(&mtx_);\n        if (pos_) {\n          pos_--;\n          f = stack_[pos_];\n          arg = args_[pos_];\n          is_on_exit = is_on_exits_[pos_];\n          ScopedInRtl in_rtl;\n          Acquire(thr, pc, (uptr)this);\n        }\n      }\n      if (f == 0)\n        break;\n      DPrintf(\"#%d: executing atexit func %p\\n\", thr->tid, f);\n      CHECK_EQ(thr->in_rtl, 0);\n      if (is_on_exit)\n        ((void(*)(int status, void *arg))f)(0, arg);\n      else\n        ((void(*)(void *arg, void *dso))f)(arg, 0);\n    }\n  }\n\n private:\n  static const int kMaxAtExit = 128;\n  Mutex mtx_;\n  atexit_t stack_[kMaxAtExit];\n  void *args_[kMaxAtExit];\n  bool is_on_exits_[kMaxAtExit];\n  int pos_;\n};\n\nstatic AtExitContext *atexit_ctx;\n\nstatic void finalize(void *arg) {\n  ThreadState * thr = cur_thread();\n  uptr pc = 0;\n  atexit_ctx->exit(thr, pc);\n  int status = Finalize(cur_thread());\n  if (status)\n    _exit(status);\n}\n\nTSAN_INTERCEPTOR(int, atexit, void (*f)()) {\n  if (cur_thread()->in_symbolizer)\n    return 0;\n  SCOPED_TSAN_INTERCEPTOR(atexit, f);\n  return atexit_ctx->atexit(thr, pc, false, (void(*)())f, 0);\n}\n\nTSAN_INTERCEPTOR(int, on_exit, void(*f)(int, void*), void *arg) {\n  if (cur_thread()->in_symbolizer)\n    return 0;\n  SCOPED_TSAN_INTERCEPTOR(on_exit, f, arg);\n  return atexit_ctx->atexit(thr, pc, true, (void(*)())f, arg);\n}\n\nTSAN_INTERCEPTOR(int, __cxa_atexit, void (*f)(void *a), void *arg, void *dso) {\n  if (cur_thread()->in_symbolizer)\n    return 0;\n  SCOPED_TSAN_INTERCEPTOR(__cxa_atexit, f, arg, dso);\n  if (dso)\n    return REAL(__cxa_atexit)(f, arg, dso);\n  return atexit_ctx->atexit(thr, pc, false, (void(*)())f, arg);\n}\n\nTSAN_INTERCEPTOR(void, longjmp, void *env, int val) {\n  SCOPED_TSAN_INTERCEPTOR(longjmp, env, val);\n  Printf(\"ThreadSanitizer: longjmp() is not supported\\n\");\n  Die();\n}\n\nTSAN_INTERCEPTOR(void, siglongjmp, void *env, int val) {\n  SCOPED_TSAN_INTERCEPTOR(siglongjmp, env, val);\n  Printf(\"ThreadSanitizer: siglongjmp() is not supported\\n\");\n  Die();\n}\n\nTSAN_INTERCEPTOR(void*, malloc, uptr size) {\n  if (cur_thread()->in_symbolizer)\n    return __libc_malloc(size);\n  void *p = 0;\n  {\n    SCOPED_INTERCEPTOR_RAW(malloc, size);\n    p = user_alloc(thr, pc, size);\n  }\n  invoke_malloc_hook(p, size);\n  return p;\n}\n\nTSAN_INTERCEPTOR(void*, __libc_memalign, uptr align, uptr sz) {\n  SCOPED_TSAN_INTERCEPTOR(__libc_memalign, align, sz);\n  return user_alloc(thr, pc, sz, align);\n}\n\nTSAN_INTERCEPTOR(void*, calloc, uptr size, uptr n) {\n  if (cur_thread()->in_symbolizer)\n    return __libc_calloc(size, n);\n  if (__sanitizer::CallocShouldReturnNullDueToOverflow(size, n)) return 0;\n  void *p = 0;\n  {\n    SCOPED_INTERCEPTOR_RAW(calloc, size, n);\n    p = user_alloc(thr, pc, n * size);\n    if (p) internal_memset(p, 0, n * size);\n  }\n  invoke_malloc_hook(p, n * size);\n  return p;\n}\n\nTSAN_INTERCEPTOR(void*, realloc, void *p, uptr size) {\n  if (cur_thread()->in_symbolizer)\n    return __libc_realloc(p, size);\n  if (p)\n    invoke_free_hook(p);\n  {\n    SCOPED_INTERCEPTOR_RAW(realloc, p, size);\n    p = user_realloc(thr, pc, p, size);\n  }\n  invoke_malloc_hook(p, size);\n  return p;\n}\n\nTSAN_INTERCEPTOR(void, free, void *p) {\n  if (p == 0)\n    return;\n  if (cur_thread()->in_symbolizer)\n    return __libc_free(p);\n  invoke_free_hook(p);\n  SCOPED_INTERCEPTOR_RAW(free, p);\n  user_free(thr, pc, p);\n}\n\nTSAN_INTERCEPTOR(void, cfree, void *p) {\n  if (p == 0)\n    return;\n  if (cur_thread()->in_symbolizer)\n    return __libc_free(p);\n  invoke_free_hook(p);\n  SCOPED_INTERCEPTOR_RAW(cfree, p);\n  user_free(thr, pc, p);\n}\n\n#define OPERATOR_NEW_BODY(mangled_name) \\\n  if (cur_thread()->in_symbolizer) \\\n    return __libc_malloc(size); \\\n  void *p = 0; \\\n  {  \\\n    SCOPED_INTERCEPTOR_RAW(mangled_name, size); \\\n    p = user_alloc(thr, pc, size); \\\n  }  \\\n  invoke_malloc_hook(p, size);  \\\n  return p;\n\nvoid *operator new(__sanitizer::uptr size) {\n  OPERATOR_NEW_BODY(_Znwm);\n}\nvoid *operator new[](__sanitizer::uptr size) {\n  OPERATOR_NEW_BODY(_Znam);\n}\nvoid *operator new(__sanitizer::uptr size, std::nothrow_t const&) {\n  OPERATOR_NEW_BODY(_ZnwmRKSt9nothrow_t);\n}\nvoid *operator new[](__sanitizer::uptr size, std::nothrow_t const&) {\n  OPERATOR_NEW_BODY(_ZnamRKSt9nothrow_t);\n}\n\n#define OPERATOR_DELETE_BODY(mangled_name) \\\n  if (ptr == 0) return;  \\\n  if (cur_thread()->in_symbolizer) \\\n    return __libc_free(ptr); \\\n  invoke_free_hook(ptr);  \\\n  SCOPED_INTERCEPTOR_RAW(mangled_name, ptr);  \\\n  user_free(thr, pc, ptr);\n\nvoid operator delete(void *ptr) {\n  OPERATOR_DELETE_BODY(_ZdlPv);\n}\nvoid operator delete[](void *ptr) {\n  OPERATOR_DELETE_BODY(_ZdlPvRKSt9nothrow_t);\n}\nvoid operator delete(void *ptr, std::nothrow_t const&) {\n  OPERATOR_DELETE_BODY(_ZdaPv);\n}\nvoid operator delete[](void *ptr, std::nothrow_t const&) {\n  OPERATOR_DELETE_BODY(_ZdaPvRKSt9nothrow_t);\n}\n\nTSAN_INTERCEPTOR(uptr, strlen, const char *s) {\n  SCOPED_TSAN_INTERCEPTOR(strlen, s);\n  uptr len = internal_strlen(s);\n  MemoryAccessRange(thr, pc, (uptr)s, len + 1, false);\n  return len;\n}\n\nTSAN_INTERCEPTOR(void*, memset, void *dst, int v, uptr size) {\n  SCOPED_TSAN_INTERCEPTOR(memset, dst, v, size);\n  MemoryAccessRange(thr, pc, (uptr)dst, size, true);\n  return internal_memset(dst, v, size);\n}\n\nTSAN_INTERCEPTOR(void*, memcpy, void *dst, const void *src, uptr size) {\n  SCOPED_TSAN_INTERCEPTOR(memcpy, dst, src, size);\n  MemoryAccessRange(thr, pc, (uptr)dst, size, true);\n  MemoryAccessRange(thr, pc, (uptr)src, size, false);\n  return internal_memcpy(dst, src, size);\n}\n\nTSAN_INTERCEPTOR(int, memcmp, const void *s1, const void *s2, uptr n) {\n  SCOPED_TSAN_INTERCEPTOR(memcmp, s1, s2, n);\n  int res = 0;\n  uptr len = 0;\n  for (; len < n; len++) {\n    if ((res = ((unsigned char*)s1)[len] - ((unsigned char*)s2)[len]))\n      break;\n  }\n  MemoryAccessRange(thr, pc, (uptr)s1, len < n ? len + 1 : n, false);\n  MemoryAccessRange(thr, pc, (uptr)s2, len < n ? len + 1 : n, false);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, strcmp, const char *s1, const char *s2) {\n  SCOPED_TSAN_INTERCEPTOR(strcmp, s1, s2);\n  uptr len = 0;\n  for (; s1[len] && s2[len]; len++) {\n    if (s1[len] != s2[len])\n      break;\n  }\n  MemoryAccessRange(thr, pc, (uptr)s1, len + 1, false);\n  MemoryAccessRange(thr, pc, (uptr)s2, len + 1, false);\n  return s1[len] - s2[len];\n}\n\nTSAN_INTERCEPTOR(int, strncmp, const char *s1, const char *s2, uptr n) {\n  SCOPED_TSAN_INTERCEPTOR(strncmp, s1, s2, n);\n  uptr len = 0;\n  for (; len < n && s1[len] && s2[len]; len++) {\n    if (s1[len] != s2[len])\n      break;\n  }\n  MemoryAccessRange(thr, pc, (uptr)s1, len < n ? len + 1 : n, false);\n  MemoryAccessRange(thr, pc, (uptr)s2, len < n ? len + 1 : n, false);\n  return len == n ? 0 : s1[len] - s2[len];\n}\n\nTSAN_INTERCEPTOR(void*, memchr, void *s, int c, uptr n) {\n  SCOPED_TSAN_INTERCEPTOR(memchr, s, c, n);\n  void *res = REAL(memchr)(s, c, n);\n  uptr len = res ? (char*)res - (char*)s + 1 : n;\n  MemoryAccessRange(thr, pc, (uptr)s, len, false);\n  return res;\n}\n\nTSAN_INTERCEPTOR(void*, memrchr, char *s, int c, uptr n) {\n  SCOPED_TSAN_INTERCEPTOR(memrchr, s, c, n);\n  MemoryAccessRange(thr, pc, (uptr)s, n, false);\n  return REAL(memrchr)(s, c, n);\n}\n\nTSAN_INTERCEPTOR(void*, memmove, void *dst, void *src, uptr n) {\n  SCOPED_TSAN_INTERCEPTOR(memmove, dst, src, n);\n  MemoryAccessRange(thr, pc, (uptr)dst, n, true);\n  MemoryAccessRange(thr, pc, (uptr)src, n, false);\n  return REAL(memmove)(dst, src, n);\n}\n\nTSAN_INTERCEPTOR(char*, strchr, char *s, int c) {\n  SCOPED_TSAN_INTERCEPTOR(strchr, s, c);\n  char *res = REAL(strchr)(s, c);\n  uptr len = res ? (char*)res - (char*)s + 1 : internal_strlen(s) + 1;\n  MemoryAccessRange(thr, pc, (uptr)s, len, false);\n  return res;\n}\n\nTSAN_INTERCEPTOR(char*, strchrnul, char *s, int c) {\n  SCOPED_TSAN_INTERCEPTOR(strchrnul, s, c);\n  char *res = REAL(strchrnul)(s, c);\n  uptr len = (char*)res - (char*)s + 1;\n  MemoryAccessRange(thr, pc, (uptr)s, len, false);\n  return res;\n}\n\nTSAN_INTERCEPTOR(char*, strrchr, char *s, int c) {\n  SCOPED_TSAN_INTERCEPTOR(strrchr, s, c);\n  MemoryAccessRange(thr, pc, (uptr)s, internal_strlen(s) + 1, false);\n  return REAL(strrchr)(s, c);\n}\n\nTSAN_INTERCEPTOR(char*, strcpy, char *dst, const char *src) {  // NOLINT\n  SCOPED_TSAN_INTERCEPTOR(strcpy, dst, src);  // NOLINT\n  uptr srclen = internal_strlen(src);\n  MemoryAccessRange(thr, pc, (uptr)dst, srclen + 1, true);\n  MemoryAccessRange(thr, pc, (uptr)src, srclen + 1, false);\n  return REAL(strcpy)(dst, src);  // NOLINT\n}\n\nTSAN_INTERCEPTOR(char*, strncpy, char *dst, char *src, uptr n) {\n  SCOPED_TSAN_INTERCEPTOR(strncpy, dst, src, n);\n  uptr srclen = internal_strnlen(src, n);\n  MemoryAccessRange(thr, pc, (uptr)dst, n, true);\n  MemoryAccessRange(thr, pc, (uptr)src, min(srclen + 1, n), false);\n  return REAL(strncpy)(dst, src, n);\n}\n\nTSAN_INTERCEPTOR(const char*, strstr, const char *s1, const char *s2) {\n  SCOPED_TSAN_INTERCEPTOR(strstr, s1, s2);\n  const char *res = REAL(strstr)(s1, s2);\n  uptr len1 = internal_strlen(s1);\n  uptr len2 = internal_strlen(s2);\n  MemoryAccessRange(thr, pc, (uptr)s1, len1 + 1, false);\n  MemoryAccessRange(thr, pc, (uptr)s2, len2 + 1, false);\n  return res;\n}\n\nstatic bool fix_mmap_addr(void **addr, long_t sz, int flags) {\n  if (*addr) {\n    if (!IsAppMem((uptr)*addr) || !IsAppMem((uptr)*addr + sz - 1)) {\n      if (flags & MAP_FIXED) {\n        errno = EINVAL;\n        return false;\n      } else {\n        *addr = 0;\n      }\n    }\n  }\n  return true;\n}\n\nTSAN_INTERCEPTOR(void*, mmap, void *addr, long_t sz, int prot,\n                         int flags, int fd, unsigned off) {\n  SCOPED_TSAN_INTERCEPTOR(mmap, addr, sz, prot, flags, fd, off);\n  if (!fix_mmap_addr(&addr, sz, flags))\n    return MAP_FAILED;\n  void *res = REAL(mmap)(addr, sz, prot, flags, fd, off);\n  if (res != MAP_FAILED) {\n    if (fd > 0)\n      FdAccess(thr, pc, fd);\n    MemoryResetRange(thr, pc, (uptr)res, sz);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(void*, mmap64, void *addr, long_t sz, int prot,\n                           int flags, int fd, u64 off) {\n  SCOPED_TSAN_INTERCEPTOR(mmap64, addr, sz, prot, flags, fd, off);\n  if (!fix_mmap_addr(&addr, sz, flags))\n    return MAP_FAILED;\n  void *res = REAL(mmap64)(addr, sz, prot, flags, fd, off);\n  if (res != MAP_FAILED) {\n    if (fd > 0)\n      FdAccess(thr, pc, fd);\n    MemoryResetRange(thr, pc, (uptr)res, sz);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, munmap, void *addr, long_t sz) {\n  SCOPED_TSAN_INTERCEPTOR(munmap, addr, sz);\n  int res = REAL(munmap)(addr, sz);\n  return res;\n}\n\nTSAN_INTERCEPTOR(void*, memalign, uptr align, uptr sz) {\n  SCOPED_TSAN_INTERCEPTOR(memalign, align, sz);\n  return user_alloc(thr, pc, sz, align);\n}\n\nTSAN_INTERCEPTOR(void*, valloc, uptr sz) {\n  SCOPED_TSAN_INTERCEPTOR(valloc, sz);\n  return user_alloc(thr, pc, sz, GetPageSizeCached());\n}\n\nTSAN_INTERCEPTOR(void*, pvalloc, uptr sz) {\n  SCOPED_TSAN_INTERCEPTOR(pvalloc, sz);\n  sz = RoundUp(sz, GetPageSizeCached());\n  return user_alloc(thr, pc, sz, GetPageSizeCached());\n}\n\nTSAN_INTERCEPTOR(int, posix_memalign, void **memptr, uptr align, uptr sz) {\n  SCOPED_TSAN_INTERCEPTOR(posix_memalign, memptr, align, sz);\n  *memptr = user_alloc(thr, pc, sz, align);\n  return 0;\n}\n\n// Used in thread-safe function static initialization.\nextern \"C\" int INTERFACE_ATTRIBUTE __cxa_guard_acquire(atomic_uint32_t *g) {\n  SCOPED_INTERCEPTOR_RAW(__cxa_guard_acquire, g);\n  for (;;) {\n    u32 cmp = atomic_load(g, memory_order_acquire);\n    if (cmp == 0) {\n      if (atomic_compare_exchange_strong(g, &cmp, 1<<16, memory_order_relaxed))\n        return 1;\n    } else if (cmp == 1) {\n      Acquire(thr, pc, (uptr)g);\n      return 0;\n    } else {\n      internal_sched_yield();\n    }\n  }\n}\n\nextern \"C\" void INTERFACE_ATTRIBUTE __cxa_guard_release(atomic_uint32_t *g) {\n  SCOPED_INTERCEPTOR_RAW(__cxa_guard_release, g);\n  Release(thr, pc, (uptr)g);\n  atomic_store(g, 1, memory_order_release);\n}\n\nextern \"C\" void INTERFACE_ATTRIBUTE __cxa_guard_abort(atomic_uint32_t *g) {\n  SCOPED_INTERCEPTOR_RAW(__cxa_guard_abort, g);\n  atomic_store(g, 0, memory_order_relaxed);\n}\n\nstatic void thread_finalize(void *v) {\n  uptr iter = (uptr)v;\n  if (iter > 1) {\n    if (pthread_setspecific(g_thread_finalize_key, (void*)(iter - 1))) {\n      Printf(\"ThreadSanitizer: failed to set thread key\\n\");\n      Die();\n    }\n    return;\n  }\n  {\n    ScopedInRtl in_rtl;\n    ThreadState *thr = cur_thread();\n    ThreadFinish(thr);\n    SignalContext *sctx = thr->signal_ctx;\n    if (sctx) {\n      thr->signal_ctx = 0;\n      UnmapOrDie(sctx, sizeof(*sctx));\n    }\n  }\n}\n\n\nstruct ThreadParam {\n  void* (*callback)(void *arg);\n  void *param;\n  atomic_uintptr_t tid;\n};\n\nextern \"C\" void *__tsan_thread_start_func(void *arg) {\n  ThreadParam *p = (ThreadParam*)arg;\n  void* (*callback)(void *arg) = p->callback;\n  void *param = p->param;\n  int tid = 0;\n  {\n    ThreadState *thr = cur_thread();\n    ScopedInRtl in_rtl;\n    if (pthread_setspecific(g_thread_finalize_key, (void*)4)) {\n      Printf(\"ThreadSanitizer: failed to set thread key\\n\");\n      Die();\n    }\n    while ((tid = atomic_load(&p->tid, memory_order_acquire)) == 0)\n      pthread_yield();\n    atomic_store(&p->tid, 0, memory_order_release);\n    ThreadStart(thr, tid, GetTid());\n    CHECK_EQ(thr->in_rtl, 1);\n  }\n  void *res = callback(param);\n  // Prevent the callback from being tail called,\n  // it mixes up stack traces.\n  volatile int foo = 42;\n  foo++;\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_create,\n    void *th, void *attr, void *(*callback)(void*), void * param) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_create, th, attr, callback, param);\n  pthread_attr_t myattr;\n  if (attr == 0) {\n    pthread_attr_init(&myattr);\n    attr = &myattr;\n  }\n  int detached = 0;\n  pthread_attr_getdetachstate(attr, &detached);\n  uptr stacksize = 0;\n  pthread_attr_getstacksize(attr, &stacksize);\n  // We place the huge ThreadState object into TLS, account for that.\n  const uptr minstacksize = GetTlsSize() + 128*1024;\n  if (stacksize < minstacksize) {\n    DPrintf(\"ThreadSanitizer: stacksize %zu->%zu\\n\", stacksize, minstacksize);\n    pthread_attr_setstacksize(attr, minstacksize);\n  }\n  ThreadParam p;\n  p.callback = callback;\n  p.param = param;\n  atomic_store(&p.tid, 0, memory_order_relaxed);\n  int res = REAL(pthread_create)(th, attr, __tsan_thread_start_func, &p);\n  if (res == 0) {\n    int tid = ThreadCreate(thr, pc, *(uptr*)th, detached);\n    CHECK_NE(tid, 0);\n    atomic_store(&p.tid, tid, memory_order_release);\n    while (atomic_load(&p.tid, memory_order_acquire) != 0)\n      pthread_yield();\n  }\n  if (attr == &myattr)\n    pthread_attr_destroy(&myattr);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_join, void *th, void **ret) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_join, th, ret);\n  int tid = ThreadTid(thr, pc, (uptr)th);\n  int res = BLOCK_REAL(pthread_join)(th, ret);\n  if (res == 0) {\n    ThreadJoin(thr, pc, tid);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_detach, void *th) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_detach, th);\n  int tid = ThreadTid(thr, pc, (uptr)th);\n  int res = REAL(pthread_detach)(th);\n  if (res == 0) {\n    ThreadDetach(thr, pc, tid);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_mutex_init, void *m, void *a) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_mutex_init, m, a);\n  int res = REAL(pthread_mutex_init)(m, a);\n  if (res == 0) {\n    bool recursive = false;\n    if (a) {\n      int type = 0;\n      if (pthread_mutexattr_gettype(a, &type) == 0)\n        recursive = (type == PTHREAD_MUTEX_RECURSIVE\n            || type == PTHREAD_MUTEX_RECURSIVE_NP);\n    }\n    MutexCreate(thr, pc, (uptr)m, false, recursive, false);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_mutex_destroy, void *m) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_mutex_destroy, m);\n  int res = REAL(pthread_mutex_destroy)(m);\n  if (res == 0 || res == EBUSY) {\n    MutexDestroy(thr, pc, (uptr)m);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_mutex_lock, void *m) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_mutex_lock, m);\n  int res = REAL(pthread_mutex_lock)(m);\n  if (res == 0) {\n    MutexLock(thr, pc, (uptr)m);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_mutex_trylock, void *m) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_mutex_trylock, m);\n  int res = REAL(pthread_mutex_trylock)(m);\n  if (res == 0) {\n    MutexLock(thr, pc, (uptr)m);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_mutex_timedlock, void *m, void *abstime) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_mutex_timedlock, m, abstime);\n  int res = REAL(pthread_mutex_timedlock)(m, abstime);\n  if (res == 0) {\n    MutexLock(thr, pc, (uptr)m);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_mutex_unlock, void *m) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_mutex_unlock, m);\n  MutexUnlock(thr, pc, (uptr)m);\n  int res = REAL(pthread_mutex_unlock)(m);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_spin_init, void *m, int pshared) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_spin_init, m, pshared);\n  int res = REAL(pthread_spin_init)(m, pshared);\n  if (res == 0) {\n    MutexCreate(thr, pc, (uptr)m, false, false, false);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_spin_destroy, void *m) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_spin_destroy, m);\n  int res = REAL(pthread_spin_destroy)(m);\n  if (res == 0) {\n    MutexDestroy(thr, pc, (uptr)m);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_spin_lock, void *m) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_spin_lock, m);\n  int res = REAL(pthread_spin_lock)(m);\n  if (res == 0) {\n    MutexLock(thr, pc, (uptr)m);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_spin_trylock, void *m) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_spin_trylock, m);\n  int res = REAL(pthread_spin_trylock)(m);\n  if (res == 0) {\n    MutexLock(thr, pc, (uptr)m);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_spin_unlock, void *m) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_spin_unlock, m);\n  MutexUnlock(thr, pc, (uptr)m);\n  int res = REAL(pthread_spin_unlock)(m);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_rwlock_init, void *m, void *a) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_rwlock_init, m, a);\n  int res = REAL(pthread_rwlock_init)(m, a);\n  if (res == 0) {\n    MutexCreate(thr, pc, (uptr)m, true, false, false);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_rwlock_destroy, void *m) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_rwlock_destroy, m);\n  int res = REAL(pthread_rwlock_destroy)(m);\n  if (res == 0) {\n    MutexDestroy(thr, pc, (uptr)m);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_rwlock_rdlock, void *m) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_rwlock_rdlock, m);\n  int res = REAL(pthread_rwlock_rdlock)(m);\n  if (res == 0) {\n    MutexReadLock(thr, pc, (uptr)m);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_rwlock_tryrdlock, void *m) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_rwlock_tryrdlock, m);\n  int res = REAL(pthread_rwlock_tryrdlock)(m);\n  if (res == 0) {\n    MutexReadLock(thr, pc, (uptr)m);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_rwlock_timedrdlock, void *m, void *abstime) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_rwlock_timedrdlock, m, abstime);\n  int res = REAL(pthread_rwlock_timedrdlock)(m, abstime);\n  if (res == 0) {\n    MutexReadLock(thr, pc, (uptr)m);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_rwlock_wrlock, void *m) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_rwlock_wrlock, m);\n  int res = REAL(pthread_rwlock_wrlock)(m);\n  if (res == 0) {\n    MutexLock(thr, pc, (uptr)m);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_rwlock_trywrlock, void *m) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_rwlock_trywrlock, m);\n  int res = REAL(pthread_rwlock_trywrlock)(m);\n  if (res == 0) {\n    MutexLock(thr, pc, (uptr)m);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_rwlock_timedwrlock, void *m, void *abstime) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_rwlock_timedwrlock, m, abstime);\n  int res = REAL(pthread_rwlock_timedwrlock)(m, abstime);\n  if (res == 0) {\n    MutexLock(thr, pc, (uptr)m);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_rwlock_unlock, void *m) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_rwlock_unlock, m);\n  MutexReadOrWriteUnlock(thr, pc, (uptr)m);\n  int res = REAL(pthread_rwlock_unlock)(m);\n  return res;\n}\n\n// libpthread.so contains several versions of pthread_cond_init symbol.\n// When we just dlsym() it, we get the wrong (old) version.\n/*\nTSAN_INTERCEPTOR(int, pthread_cond_init, void *c, void *a) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_cond_init, c, a);\n  int res = REAL(pthread_cond_init)(c, a);\n  return res;\n}\n*/\n\nTSAN_INTERCEPTOR(int, pthread_cond_destroy, void *c) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_cond_destroy, c);\n  int res = REAL(pthread_cond_destroy)(c);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_cond_signal, void *c) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_cond_signal, c);\n  int res = REAL(pthread_cond_signal)(c);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_cond_broadcast, void *c) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_cond_broadcast, c);\n  int res = REAL(pthread_cond_broadcast)(c);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_cond_wait, void *c, void *m) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_cond_wait, c, m);\n  MutexUnlock(thr, pc, (uptr)m);\n  int res = REAL(pthread_cond_wait)(c, m);\n  MutexLock(thr, pc, (uptr)m);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_cond_timedwait, void *c, void *m, void *abstime) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_cond_timedwait, c, m, abstime);\n  MutexUnlock(thr, pc, (uptr)m);\n  int res = REAL(pthread_cond_timedwait)(c, m, abstime);\n  MutexLock(thr, pc, (uptr)m);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_barrier_init, void *b, void *a, unsigned count) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_barrier_init, b, a, count);\n  MemoryWrite(thr, pc, (uptr)b, kSizeLog1);\n  int res = REAL(pthread_barrier_init)(b, a, count);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_barrier_destroy, void *b) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_barrier_destroy, b);\n  MemoryWrite(thr, pc, (uptr)b, kSizeLog1);\n  int res = REAL(pthread_barrier_destroy)(b);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_barrier_wait, void *b) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_barrier_wait, b);\n  Release(thr, pc, (uptr)b);\n  MemoryRead(thr, pc, (uptr)b, kSizeLog1);\n  int res = REAL(pthread_barrier_wait)(b);\n  MemoryRead(thr, pc, (uptr)b, kSizeLog1);\n  if (res == 0 || res == PTHREAD_BARRIER_SERIAL_THREAD) {\n    Acquire(thr, pc, (uptr)b);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_once, void *o, void (*f)()) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_once, o, f);\n  if (o == 0 || f == 0)\n    return EINVAL;\n  atomic_uint32_t *a = static_cast<atomic_uint32_t*>(o);\n  u32 v = atomic_load(a, memory_order_acquire);\n  if (v == 0 && atomic_compare_exchange_strong(a, &v, 1,\n                                               memory_order_relaxed)) {\n    const int old_in_rtl = thr->in_rtl;\n    thr->in_rtl = 0;\n    (*f)();\n    CHECK_EQ(thr->in_rtl, 0);\n    thr->in_rtl = old_in_rtl;\n    Release(thr, pc, (uptr)o);\n    atomic_store(a, 2, memory_order_release);\n  } else {\n    while (v != 2) {\n      pthread_yield();\n      v = atomic_load(a, memory_order_acquire);\n    }\n    Acquire(thr, pc, (uptr)o);\n  }\n  return 0;\n}\n\nTSAN_INTERCEPTOR(int, sem_init, void *s, int pshared, unsigned value) {\n  SCOPED_TSAN_INTERCEPTOR(sem_init, s, pshared, value);\n  int res = REAL(sem_init)(s, pshared, value);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, sem_destroy, void *s) {\n  SCOPED_TSAN_INTERCEPTOR(sem_destroy, s);\n  int res = REAL(sem_destroy)(s);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, sem_wait, void *s) {\n  SCOPED_TSAN_INTERCEPTOR(sem_wait, s);\n  int res = BLOCK_REAL(sem_wait)(s);\n  if (res == 0) {\n    Acquire(thr, pc, (uptr)s);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, sem_trywait, void *s) {\n  SCOPED_TSAN_INTERCEPTOR(sem_trywait, s);\n  int res = BLOCK_REAL(sem_trywait)(s);\n  if (res == 0) {\n    Acquire(thr, pc, (uptr)s);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, sem_timedwait, void *s, void *abstime) {\n  SCOPED_TSAN_INTERCEPTOR(sem_timedwait, s, abstime);\n  int res = BLOCK_REAL(sem_timedwait)(s, abstime);\n  if (res == 0) {\n    Acquire(thr, pc, (uptr)s);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, sem_post, void *s) {\n  SCOPED_TSAN_INTERCEPTOR(sem_post, s);\n  Release(thr, pc, (uptr)s);\n  int res = REAL(sem_post)(s);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, sem_getvalue, void *s, int *sval) {\n  SCOPED_TSAN_INTERCEPTOR(sem_getvalue, s, sval);\n  int res = REAL(sem_getvalue)(s, sval);\n  if (res == 0) {\n    Acquire(thr, pc, (uptr)s);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, __xstat, int version, const char *path, void *buf) {\n  SCOPED_TSAN_INTERCEPTOR(__xstat, version, path, buf);\n  return REAL(__xstat)(version, path, buf);\n}\n\nTSAN_INTERCEPTOR(int, stat, const char *path, void *buf) {\n  SCOPED_TSAN_INTERCEPTOR(__xstat, 0, path, buf);\n  return REAL(__xstat)(0, path, buf);\n}\n\nTSAN_INTERCEPTOR(int, __xstat64, int version, const char *path, void *buf) {\n  SCOPED_TSAN_INTERCEPTOR(__xstat64, version, path, buf);\n  return REAL(__xstat64)(version, path, buf);\n}\n\nTSAN_INTERCEPTOR(int, stat64, const char *path, void *buf) {\n  SCOPED_TSAN_INTERCEPTOR(__xstat64, 0, path, buf);\n  return REAL(__xstat64)(0, path, buf);\n}\n\nTSAN_INTERCEPTOR(int, __lxstat, int version, const char *path, void *buf) {\n  SCOPED_TSAN_INTERCEPTOR(__lxstat, version, path, buf);\n  return REAL(__lxstat)(version, path, buf);\n}\n\nTSAN_INTERCEPTOR(int, lstat, const char *path, void *buf) {\n  SCOPED_TSAN_INTERCEPTOR(__lxstat, 0, path, buf);\n  return REAL(__lxstat)(0, path, buf);\n}\n\nTSAN_INTERCEPTOR(int, __lxstat64, int version, const char *path, void *buf) {\n  SCOPED_TSAN_INTERCEPTOR(__lxstat64, version, path, buf);\n  return REAL(__lxstat64)(version, path, buf);\n}\n\nTSAN_INTERCEPTOR(int, lstat64, const char *path, void *buf) {\n  SCOPED_TSAN_INTERCEPTOR(__lxstat64, 0, path, buf);\n  return REAL(__lxstat64)(0, path, buf);\n}\n\nTSAN_INTERCEPTOR(int, __fxstat, int version, int fd, void *buf) {\n  SCOPED_TSAN_INTERCEPTOR(__fxstat, version, fd, buf);\n  if (fd > 0)\n    FdAccess(thr, pc, fd);\n  return REAL(__fxstat)(version, fd, buf);\n}\n\nTSAN_INTERCEPTOR(int, fstat, int fd, void *buf) {\n  SCOPED_TSAN_INTERCEPTOR(__fxstat, 0, fd, buf);\n  if (fd > 0)\n    FdAccess(thr, pc, fd);\n  return REAL(__fxstat)(0, fd, buf);\n}\n\nTSAN_INTERCEPTOR(int, __fxstat64, int version, int fd, void *buf) {\n  SCOPED_TSAN_INTERCEPTOR(__fxstat64, version, fd, buf);\n  if (fd > 0)\n    FdAccess(thr, pc, fd);\n  return REAL(__fxstat64)(version, fd, buf);\n}\n\nTSAN_INTERCEPTOR(int, fstat64, int fd, void *buf) {\n  SCOPED_TSAN_INTERCEPTOR(__fxstat64, 0, fd, buf);\n  if (fd > 0)\n    FdAccess(thr, pc, fd);\n  return REAL(__fxstat64)(0, fd, buf);\n}\n\nTSAN_INTERCEPTOR(int, open, const char *name, int flags, int mode) {\n  SCOPED_TSAN_INTERCEPTOR(open, name, flags, mode);\n  int fd = REAL(open)(name, flags, mode);\n  if (fd >= 0)\n    FdFileCreate(thr, pc, fd);\n  return fd;\n}\n\nTSAN_INTERCEPTOR(int, open64, const char *name, int flags, int mode) {\n  SCOPED_TSAN_INTERCEPTOR(open64, name, flags, mode);\n  int fd = REAL(open64)(name, flags, mode);\n  if (fd >= 0)\n    FdFileCreate(thr, pc, fd);\n  return fd;\n}\n\nTSAN_INTERCEPTOR(int, creat, const char *name, int mode) {\n  SCOPED_TSAN_INTERCEPTOR(creat, name, mode);\n  int fd = REAL(creat)(name, mode);\n  if (fd >= 0)\n    FdFileCreate(thr, pc, fd);\n  return fd;\n}\n\nTSAN_INTERCEPTOR(int, creat64, const char *name, int mode) {\n  SCOPED_TSAN_INTERCEPTOR(creat64, name, mode);\n  int fd = REAL(creat64)(name, mode);\n  if (fd >= 0)\n    FdFileCreate(thr, pc, fd);\n  return fd;\n}\n\nTSAN_INTERCEPTOR(int, dup, int oldfd) {\n  SCOPED_TSAN_INTERCEPTOR(dup, oldfd);\n  int newfd = REAL(dup)(oldfd);\n  if (oldfd >= 0 && newfd >= 0 && newfd != oldfd)\n    FdDup(thr, pc, oldfd, newfd);\n  return newfd;\n}\n\nTSAN_INTERCEPTOR(int, dup2, int oldfd, int newfd) {\n  SCOPED_TSAN_INTERCEPTOR(dup2, oldfd, newfd);\n  int newfd2 = REAL(dup2)(oldfd, newfd);\n  if (oldfd >= 0 && newfd2 >= 0 && newfd2 != oldfd)\n    FdDup(thr, pc, oldfd, newfd2);\n  return newfd2;\n}\n\nTSAN_INTERCEPTOR(int, dup3, int oldfd, int newfd, int flags) {\n  SCOPED_TSAN_INTERCEPTOR(dup3, oldfd, newfd, flags);\n  int newfd2 = REAL(dup3)(oldfd, newfd, flags);\n  if (oldfd >= 0 && newfd2 >= 0 && newfd2 != oldfd)\n    FdDup(thr, pc, oldfd, newfd2);\n  return newfd2;\n}\n\nTSAN_INTERCEPTOR(int, eventfd, unsigned initval, int flags) {\n  SCOPED_TSAN_INTERCEPTOR(eventfd, initval, flags);\n  int fd = REAL(eventfd)(initval, flags);\n  if (fd >= 0)\n    FdEventCreate(thr, pc, fd);\n  return fd;\n}\n\nTSAN_INTERCEPTOR(int, signalfd, int fd, void *mask, int flags) {\n  SCOPED_TSAN_INTERCEPTOR(signalfd, fd, mask, flags);\n  if (fd >= 0)\n    FdClose(thr, pc, fd);\n  fd = REAL(signalfd)(fd, mask, flags);\n  if (fd >= 0)\n    FdSignalCreate(thr, pc, fd);\n  return fd;\n}\n\nTSAN_INTERCEPTOR(int, inotify_init, int fake) {\n  SCOPED_TSAN_INTERCEPTOR(inotify_init, fake);\n  int fd = REAL(inotify_init)(fake);\n  if (fd >= 0)\n    FdInotifyCreate(thr, pc, fd);\n  return fd;\n}\n\nTSAN_INTERCEPTOR(int, inotify_init1, int flags) {\n  SCOPED_TSAN_INTERCEPTOR(inotify_init1, flags);\n  int fd = REAL(inotify_init1)(flags);\n  if (fd >= 0)\n    FdInotifyCreate(thr, pc, fd);\n  return fd;\n}\n\nTSAN_INTERCEPTOR(int, socket, int domain, int type, int protocol) {\n  SCOPED_TSAN_INTERCEPTOR(socket, domain, type, protocol);\n  int fd = REAL(socket)(domain, type, protocol);\n  if (fd >= 0)\n    FdSocketCreate(thr, pc, fd);\n  return fd;\n}\n\nTSAN_INTERCEPTOR(int, socketpair, int domain, int type, int protocol, int *fd) {\n  SCOPED_TSAN_INTERCEPTOR(socketpair, domain, type, protocol, fd);\n  int res = REAL(socketpair)(domain, type, protocol, fd);\n  if (res == 0 && fd[0] >= 0 && fd[1] >= 0)\n    FdPipeCreate(thr, pc, fd[0], fd[1]);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, connect, int fd, void *addr, unsigned addrlen) {\n  SCOPED_TSAN_INTERCEPTOR(connect, fd, addr, addrlen);\n  FdSocketConnecting(thr, pc, fd);\n  int res = REAL(connect)(fd, addr, addrlen);\n  if (res == 0 && fd >= 0)\n    FdSocketConnect(thr, pc, fd);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, bind, int fd, void *addr, unsigned addrlen) {\n  SCOPED_TSAN_INTERCEPTOR(bind, fd, addr, addrlen);\n  int res = REAL(bind)(fd, addr, addrlen);\n  if (fd > 0 && res == 0)\n    FdAccess(thr, pc, fd);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, listen, int fd, int backlog) {\n  SCOPED_TSAN_INTERCEPTOR(listen, fd, backlog);\n  int res = REAL(listen)(fd, backlog);\n  if (fd > 0 && res == 0)\n    FdAccess(thr, pc, fd);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, accept, int fd, void *addr, unsigned *addrlen) {\n  SCOPED_TSAN_INTERCEPTOR(accept, fd, addr, addrlen);\n  int fd2 = REAL(accept)(fd, addr, addrlen);\n  if (fd >= 0 && fd2 >= 0)\n    FdSocketAccept(thr, pc, fd, fd2);\n  return fd2;\n}\n\nTSAN_INTERCEPTOR(int, accept4, int fd, void *addr, unsigned *addrlen, int f) {\n  SCOPED_TSAN_INTERCEPTOR(accept4, fd, addr, addrlen, f);\n  int fd2 = REAL(accept4)(fd, addr, addrlen, f);\n  if (fd >= 0 && fd2 >= 0)\n    FdSocketAccept(thr, pc, fd, fd2);\n  return fd2;\n}\n\nTSAN_INTERCEPTOR(int, epoll_create, int size) {\n  SCOPED_TSAN_INTERCEPTOR(epoll_create, size);\n  int fd = REAL(epoll_create)(size);\n  if (fd >= 0)\n    FdPollCreate(thr, pc, fd);\n  return fd;\n}\n\nTSAN_INTERCEPTOR(int, epoll_create1, int flags) {\n  SCOPED_TSAN_INTERCEPTOR(epoll_create1, flags);\n  int fd = REAL(epoll_create1)(flags);\n  if (fd >= 0)\n    FdPollCreate(thr, pc, fd);\n  return fd;\n}\n\nTSAN_INTERCEPTOR(int, close, int fd) {\n  SCOPED_TSAN_INTERCEPTOR(close, fd);\n  if (fd >= 0)\n    FdClose(thr, pc, fd);\n  return REAL(close)(fd);\n}\n\nTSAN_INTERCEPTOR(int, __close, int fd) {\n  SCOPED_TSAN_INTERCEPTOR(__close, fd);\n  if (fd >= 0)\n    FdClose(thr, pc, fd);\n  return REAL(__close)(fd);\n}\n\n// glibc guts\nTSAN_INTERCEPTOR(void, __res_iclose, void *state, bool free_addr) {\n  SCOPED_TSAN_INTERCEPTOR(__res_iclose, state, free_addr);\n  int fds[64];\n  int cnt = ExtractResolvFDs(state, fds, ARRAY_SIZE(fds));\n  for (int i = 0; i < cnt; i++) {\n    if (fds[i] > 0)\n      FdClose(thr, pc, fds[i]);\n  }\n  REAL(__res_iclose)(state, free_addr);\n}\n\nTSAN_INTERCEPTOR(int, pipe, int *pipefd) {\n  SCOPED_TSAN_INTERCEPTOR(pipe, pipefd);\n  int res = REAL(pipe)(pipefd);\n  if (res == 0 && pipefd[0] >= 0 && pipefd[1] >= 0)\n    FdPipeCreate(thr, pc, pipefd[0], pipefd[1]);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pipe2, int *pipefd, int flags) {\n  SCOPED_TSAN_INTERCEPTOR(pipe2, pipefd, flags);\n  int res = REAL(pipe2)(pipefd, flags);\n  if (res == 0 && pipefd[0] >= 0 && pipefd[1] >= 0)\n    FdPipeCreate(thr, pc, pipefd[0], pipefd[1]);\n  return res;\n}\n\nTSAN_INTERCEPTOR(long_t, readv, int fd, void *vec, int cnt) {\n  SCOPED_TSAN_INTERCEPTOR(readv, fd, vec, cnt);\n  int res = REAL(readv)(fd, vec, cnt);\n  if (res >= 0 && fd >= 0) {\n    FdAcquire(thr, pc, fd);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(long_t, preadv64, int fd, void *vec, int cnt, u64 off) {\n  SCOPED_TSAN_INTERCEPTOR(preadv64, fd, vec, cnt, off);\n  int res = REAL(preadv64)(fd, vec, cnt, off);\n  if (res >= 0 && fd >= 0) {\n    FdAcquire(thr, pc, fd);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(long_t, writev, int fd, void *vec, int cnt) {\n  SCOPED_TSAN_INTERCEPTOR(writev, fd, vec, cnt);\n  if (fd >= 0)\n    FdRelease(thr, pc, fd);\n  int res = REAL(writev)(fd, vec, cnt);\n  return res;\n}\n\nTSAN_INTERCEPTOR(long_t, pwritev64, int fd, void *vec, int cnt, u64 off) {\n  SCOPED_TSAN_INTERCEPTOR(pwritev64, fd, vec, cnt, off);\n  if (fd >= 0)\n    FdRelease(thr, pc, fd);\n  int res = REAL(pwritev64)(fd, vec, cnt, off);\n  return res;\n}\n\nTSAN_INTERCEPTOR(long_t, send, int fd, void *buf, long_t len, int flags) {\n  SCOPED_TSAN_INTERCEPTOR(send, fd, buf, len, flags);\n  if (fd >= 0)\n    FdRelease(thr, pc, fd);\n  int res = REAL(send)(fd, buf, len, flags);\n  return res;\n}\n\nTSAN_INTERCEPTOR(long_t, sendmsg, int fd, void *msg, int flags) {\n  SCOPED_TSAN_INTERCEPTOR(sendmsg, fd, msg, flags);\n  if (fd >= 0)\n    FdRelease(thr, pc, fd);\n  int res = REAL(sendmsg)(fd, msg, flags);\n  return res;\n}\n\nTSAN_INTERCEPTOR(long_t, recv, int fd, void *buf, long_t len, int flags) {\n  SCOPED_TSAN_INTERCEPTOR(recv, fd, buf, len, flags);\n  int res = REAL(recv)(fd, buf, len, flags);\n  if (res >= 0 && fd >= 0) {\n    FdAcquire(thr, pc, fd);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(long_t, recvmsg, int fd, void *msg, int flags) {\n  SCOPED_TSAN_INTERCEPTOR(recvmsg, fd, msg, flags);\n  int res = REAL(recvmsg)(fd, msg, flags);\n  if (res >= 0 && fd >= 0) {\n    FdAcquire(thr, pc, fd);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, unlink, char *path) {\n  SCOPED_TSAN_INTERCEPTOR(unlink, path);\n  Release(thr, pc, File2addr(path));\n  int res = REAL(unlink)(path);\n  return res;\n}\n\nTSAN_INTERCEPTOR(void*, fopen, char *path, char *mode) {\n  SCOPED_TSAN_INTERCEPTOR(fopen, path, mode);\n  void *res = REAL(fopen)(path, mode);\n  Acquire(thr, pc, File2addr(path));\n  if (res) {\n    int fd = fileno_unlocked(res);\n    if (fd >= 0)\n      FdFileCreate(thr, pc, fd);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(void*, freopen, char *path, char *mode, void *stream) {\n  SCOPED_TSAN_INTERCEPTOR(freopen, path, mode, stream);\n  if (stream) {\n    int fd = fileno_unlocked(stream);\n    if (fd >= 0)\n      FdClose(thr, pc, fd);\n  }\n  void *res = REAL(freopen)(path, mode, stream);\n  Acquire(thr, pc, File2addr(path));\n  if (res) {\n    int fd = fileno_unlocked(res);\n    if (fd >= 0)\n      FdFileCreate(thr, pc, fd);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, fclose, void *stream) {\n  {\n    SCOPED_TSAN_INTERCEPTOR(fclose, stream);\n    if (stream) {\n      int fd = fileno_unlocked(stream);\n      if (fd >= 0)\n        FdClose(thr, pc, fd);\n    }\n  }\n  return REAL(fclose)(stream);\n}\n\nTSAN_INTERCEPTOR(uptr, fread, void *ptr, uptr size, uptr nmemb, void *f) {\n  {\n    SCOPED_TSAN_INTERCEPTOR(fread, ptr, size, nmemb, f);\n    MemoryAccessRange(thr, pc, (uptr)ptr, size * nmemb, true);\n  }\n  return REAL(fread)(ptr, size, nmemb, f);\n}\n\nTSAN_INTERCEPTOR(uptr, fwrite, const void *p, uptr size, uptr nmemb, void *f) {\n  {\n    SCOPED_TSAN_INTERCEPTOR(fwrite, p, size, nmemb, f);\n    MemoryAccessRange(thr, pc, (uptr)p, size * nmemb, false);\n  }\n  return REAL(fwrite)(p, size, nmemb, f);\n}\n\nTSAN_INTERCEPTOR(int, puts, const char *s) {\n  SCOPED_TSAN_INTERCEPTOR(puts, s);\n  MemoryAccessRange(thr, pc, (uptr)s, internal_strlen(s), false);\n  return REAL(puts)(s);\n}\n\nTSAN_INTERCEPTOR(int, rmdir, char *path) {\n  SCOPED_TSAN_INTERCEPTOR(rmdir, path);\n  Release(thr, pc, Dir2addr(path));\n  int res = REAL(rmdir)(path);\n  return res;\n}\n\nTSAN_INTERCEPTOR(void*, opendir, char *path) {\n  SCOPED_TSAN_INTERCEPTOR(opendir, path);\n  void *res = REAL(opendir)(path);\n  if (res != 0)\n    Acquire(thr, pc, Dir2addr(path));\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, epoll_ctl, int epfd, int op, int fd, void *ev) {\n  SCOPED_TSAN_INTERCEPTOR(epoll_ctl, epfd, op, fd, ev);\n  if (op == EPOLL_CTL_ADD && epfd >= 0) {\n    FdRelease(thr, pc, epfd);\n  }\n  int res = REAL(epoll_ctl)(epfd, op, fd, ev);\n  if (fd >= 0)\n    FdAccess(thr, pc, fd);\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, epoll_wait, int epfd, void *ev, int cnt, int timeout) {\n  SCOPED_TSAN_INTERCEPTOR(epoll_wait, epfd, ev, cnt, timeout);\n  int res = BLOCK_REAL(epoll_wait)(epfd, ev, cnt, timeout);\n  if (res > 0 && epfd >= 0) {\n    FdAcquire(thr, pc, epfd);\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, poll, void *fds, long_t nfds, int timeout) {\n  SCOPED_TSAN_INTERCEPTOR(poll, fds, nfds, timeout);\n  int res = BLOCK_REAL(poll)(fds, nfds, timeout);\n  return res;\n}\n\nstatic void ALWAYS_INLINE rtl_generic_sighandler(bool sigact, int sig,\n    my_siginfo_t *info, void *ctx) {\n  ThreadState *thr = cur_thread();\n  SignalContext *sctx = SigCtx(thr);\n  // Don't mess with synchronous signals.\n  if (sig == SIGSEGV || sig == SIGBUS || sig == SIGILL ||\n      sig == SIGABRT || sig == SIGFPE || sig == SIGPIPE ||\n      // If we are sending signal to ourselves, we must process it now.\n      (sctx && sig == sctx->int_signal_send) ||\n      // If we are in blocking function, we can safely process it now\n      // (but check if we are in a recursive interceptor,\n      // i.e. pthread_join()->munmap()).\n      (sctx && sctx->in_blocking_func == 1 && thr->in_rtl == 1)) {\n    CHECK(thr->in_rtl == 0 || thr->in_rtl == 1);\n    int in_rtl = thr->in_rtl;\n    thr->in_rtl = 0;\n    CHECK_EQ(thr->in_signal_handler, false);\n    thr->in_signal_handler = true;\n    if (sigact)\n      sigactions[sig].sa_sigaction(sig, info, ctx);\n    else\n      sigactions[sig].sa_handler(sig);\n    CHECK_EQ(thr->in_signal_handler, true);\n    thr->in_signal_handler = false;\n    thr->in_rtl = in_rtl;\n    return;\n  }\n\n  if (sctx == 0)\n    return;\n  SignalDesc *signal = &sctx->pending_signals[sig];\n  if (signal->armed == false) {\n    signal->armed = true;\n    signal->sigaction = sigact;\n    if (info)\n      internal_memcpy(&signal->siginfo, info, sizeof(*info));\n    if (ctx)\n      internal_memcpy(&signal->ctx, ctx, sizeof(signal->ctx));\n    sctx->pending_signal_count++;\n  }\n}\n\nstatic void rtl_sighandler(int sig) {\n  rtl_generic_sighandler(false, sig, 0, 0);\n}\n\nstatic void rtl_sigaction(int sig, my_siginfo_t *info, void *ctx) {\n  rtl_generic_sighandler(true, sig, info, ctx);\n}\n\nTSAN_INTERCEPTOR(int, sigaction, int sig, sigaction_t *act, sigaction_t *old) {\n  SCOPED_TSAN_INTERCEPTOR(sigaction, sig, act, old);\n  if (old)\n    internal_memcpy(old, &sigactions[sig], sizeof(*old));\n  if (act == 0)\n    return 0;\n  internal_memcpy(&sigactions[sig], act, sizeof(*act));\n  sigaction_t newact;\n  internal_memcpy(&newact, act, sizeof(newact));\n  sigfillset(&newact.sa_mask);\n  if (act->sa_handler != SIG_IGN && act->sa_handler != SIG_DFL) {\n    if (newact.sa_flags & SA_SIGINFO)\n      newact.sa_sigaction = rtl_sigaction;\n    else\n      newact.sa_handler = rtl_sighandler;\n  }\n  int res = REAL(sigaction)(sig, &newact, 0);\n  return res;\n}\n\nTSAN_INTERCEPTOR(sighandler_t, signal, int sig, sighandler_t h) {\n  sigaction_t act;\n  act.sa_handler = h;\n  REAL(memset)(&act.sa_mask, -1, sizeof(act.sa_mask));\n  act.sa_flags = 0;\n  sigaction_t old;\n  int res = sigaction(sig, &act, &old);\n  if (res)\n    return SIG_ERR;\n  return old.sa_handler;\n}\n\nTSAN_INTERCEPTOR(int, raise, int sig) {\n  SCOPED_TSAN_INTERCEPTOR(raise, sig);\n  SignalContext *sctx = SigCtx(thr);\n  CHECK_NE(sctx, 0);\n  int prev = sctx->int_signal_send;\n  sctx->int_signal_send = sig;\n  int res = REAL(raise)(sig);\n  CHECK_EQ(sctx->int_signal_send, sig);\n  sctx->int_signal_send = prev;\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, kill, int pid, int sig) {\n  SCOPED_TSAN_INTERCEPTOR(kill, pid, sig);\n  SignalContext *sctx = SigCtx(thr);\n  CHECK_NE(sctx, 0);\n  int prev = sctx->int_signal_send;\n  if (pid == GetPid()) {\n    sctx->int_signal_send = sig;\n  }\n  int res = REAL(kill)(pid, sig);\n  if (pid == GetPid()) {\n    CHECK_EQ(sctx->int_signal_send, sig);\n    sctx->int_signal_send = prev;\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, pthread_kill, void *tid, int sig) {\n  SCOPED_TSAN_INTERCEPTOR(pthread_kill, tid, sig);\n  SignalContext *sctx = SigCtx(thr);\n  CHECK_NE(sctx, 0);\n  int prev = sctx->int_signal_send;\n  if (tid == pthread_self()) {\n    sctx->int_signal_send = sig;\n  }\n  int res = REAL(pthread_kill)(tid, sig);\n  if (tid == pthread_self()) {\n    CHECK_EQ(sctx->int_signal_send, sig);\n    sctx->int_signal_send = prev;\n  }\n  return res;\n}\n\nTSAN_INTERCEPTOR(int, gettimeofday, void *tv, void *tz) {\n  SCOPED_TSAN_INTERCEPTOR(gettimeofday, tv, tz);\n  // It's intercepted merely to process pending signals.\n  return REAL(gettimeofday)(tv, tz);\n}\n\n// Linux kernel has a bug that leads to kernel deadlock if a process\n// maps TBs of memory and then calls mlock().\nstatic void MlockIsUnsupported() {\n  static atomic_uint8_t printed;\n  if (atomic_exchange(&printed, 1, memory_order_relaxed))\n    return;\n  Printf(\"INFO: ThreadSanitizer ignores mlock/mlockall/munlock/munlockall\\n\");\n}\n\nTSAN_INTERCEPTOR(int, mlock, const void *addr, uptr len) {\n  MlockIsUnsupported();\n  return 0;\n}\n\nTSAN_INTERCEPTOR(int, munlock, const void *addr, uptr len) {\n  MlockIsUnsupported();\n  return 0;\n}\n\nTSAN_INTERCEPTOR(int, mlockall, int flags) {\n  MlockIsUnsupported();\n  return 0;\n}\n\nTSAN_INTERCEPTOR(int, munlockall, void) {\n  MlockIsUnsupported();\n  return 0;\n}\n\nTSAN_INTERCEPTOR(int, fork, int fake) {\n  SCOPED_TSAN_INTERCEPTOR(fork, fake);\n  // It's intercepted merely to process pending signals.\n  int pid = REAL(fork)(fake);\n  if (pid == 0) {\n    // child\n    FdOnFork(thr, pc);\n  } else if (pid > 0) {\n    // parent\n  }\n  return pid;\n}\n\nstruct TsanInterceptorContext {\n  ThreadState *thr;\n  const uptr caller_pc;\n  const uptr pc;\n};\n\n#define COMMON_INTERCEPTOR_WRITE_RANGE(ctx, ptr, size) \\\n    MemoryAccessRange(((TsanInterceptorContext*)ctx)->thr,  \\\n                      ((TsanInterceptorContext*)ctx)->pc,   \\\n                      (uptr)ptr, size, true)\n#define COMMON_INTERCEPTOR_READ_RANGE(ctx, ptr, size)       \\\n    MemoryAccessRange(((TsanInterceptorContext*)ctx)->thr,  \\\n                      ((TsanInterceptorContext*)ctx)->pc,   \\\n                      (uptr)ptr, size, false)\n#define COMMON_INTERCEPTOR_ENTER(ctx, func, ...) \\\n    SCOPED_TSAN_INTERCEPTOR(func, __VA_ARGS__) \\\n    TsanInterceptorContext _ctx = {thr, caller_pc, pc}; \\\n    ctx = (void*)&_ctx; \\\n    (void)ctx;\n#define COMMON_INTERCEPTOR_FD_ACQUIRE(ctx, fd) \\\n    FdAcquire(((TsanInterceptorContext*)ctx)->thr, pc, fd)\n#define COMMON_INTERCEPTOR_FD_RELEASE(ctx, fd) \\\n    FdRelease(((TsanInterceptorContext*)ctx)->thr, pc, fd)\n#define COMMON_INTERCEPTOR_SET_THREAD_NAME(ctx, name) \\\n    ThreadSetName(((TsanInterceptorContext*)ctx)->thr, name)\n#include \"sanitizer_common/sanitizer_common_interceptors.inc\"\n\nnamespace __tsan {\n\nvoid ProcessPendingSignals(ThreadState *thr) {\n  CHECK_EQ(thr->in_rtl, 0);\n  SignalContext *sctx = SigCtx(thr);\n  if (sctx == 0 || sctx->pending_signal_count == 0 || thr->in_signal_handler)\n    return;\n  Context *ctx = CTX();\n  thr->in_signal_handler = true;\n  sctx->pending_signal_count = 0;\n  // These are too big for stack.\n  static THREADLOCAL sigset_t emptyset, oldset;\n  sigfillset(&emptyset);\n  pthread_sigmask(SIG_SETMASK, &emptyset, &oldset);\n  for (int sig = 0; sig < kSigCount; sig++) {\n    SignalDesc *signal = &sctx->pending_signals[sig];\n    if (signal->armed) {\n      signal->armed = false;\n      if (sigactions[sig].sa_handler != SIG_DFL\n          && sigactions[sig].sa_handler != SIG_IGN) {\n        // Insure that the handler does not spoil errno.\n        const int saved_errno = errno;\n        errno = 0;\n        if (signal->sigaction)\n          sigactions[sig].sa_sigaction(sig, &signal->siginfo, &signal->ctx);\n        else\n          sigactions[sig].sa_handler(sig);\n        if (flags()->report_bugs && errno != 0) {\n          ScopedInRtl in_rtl;\n          __tsan::StackTrace stack;\n          uptr pc = signal->sigaction ?\n              (uptr)sigactions[sig].sa_sigaction :\n              (uptr)sigactions[sig].sa_handler;\n          stack.Init(&pc, 1);\n          Lock l(&ctx->thread_mtx);\n          ScopedReport rep(ReportTypeErrnoInSignal);\n          if (!IsFiredSuppression(ctx, rep, stack)) {\n            rep.AddStack(&stack);\n            OutputReport(ctx, rep, rep.GetReport()->stacks[0]);\n          }\n        }\n        errno = saved_errno;\n      }\n    }\n  }\n  pthread_sigmask(SIG_SETMASK, &oldset, 0);\n  CHECK_EQ(thr->in_signal_handler, true);\n  thr->in_signal_handler = false;\n}\n\nstatic void unreachable() {\n  Printf(\"FATAL: ThreadSanitizer: unreachable called\\n\");\n  Die();\n}\n\nvoid InitializeInterceptors() {\n  CHECK_GT(cur_thread()->in_rtl, 0);\n\n  // We need to setup it early, because functions like dlsym() can call it.\n  REAL(memset) = internal_memset;\n  REAL(memcpy) = internal_memcpy;\n  REAL(memcmp) = internal_memcmp;\n\n  SANITIZER_COMMON_INTERCEPTORS_INIT;\n\n  TSAN_INTERCEPT(longjmp);\n  TSAN_INTERCEPT(siglongjmp);\n\n  TSAN_INTERCEPT(malloc);\n  TSAN_INTERCEPT(__libc_memalign);\n  TSAN_INTERCEPT(calloc);\n  TSAN_INTERCEPT(realloc);\n  TSAN_INTERCEPT(free);\n  TSAN_INTERCEPT(cfree);\n  TSAN_INTERCEPT(mmap);\n  TSAN_INTERCEPT(mmap64);\n  TSAN_INTERCEPT(munmap);\n  TSAN_INTERCEPT(memalign);\n  TSAN_INTERCEPT(valloc);\n  TSAN_INTERCEPT(pvalloc);\n  TSAN_INTERCEPT(posix_memalign);\n\n  TSAN_INTERCEPT(strlen);\n  TSAN_INTERCEPT(memset);\n  TSAN_INTERCEPT(memcpy);\n  TSAN_INTERCEPT(strcmp);\n  TSAN_INTERCEPT(memchr);\n  TSAN_INTERCEPT(memrchr);\n  TSAN_INTERCEPT(memmove);\n  TSAN_INTERCEPT(memcmp);\n  TSAN_INTERCEPT(strchr);\n  TSAN_INTERCEPT(strchrnul);\n  TSAN_INTERCEPT(strrchr);\n  TSAN_INTERCEPT(strncmp);\n  TSAN_INTERCEPT(strcpy);  // NOLINT\n  TSAN_INTERCEPT(strncpy);\n  TSAN_INTERCEPT(strstr);\n\n  TSAN_INTERCEPT(pthread_create);\n  TSAN_INTERCEPT(pthread_join);\n  TSAN_INTERCEPT(pthread_detach);\n\n  TSAN_INTERCEPT(pthread_mutex_init);\n  TSAN_INTERCEPT(pthread_mutex_destroy);\n  TSAN_INTERCEPT(pthread_mutex_lock);\n  TSAN_INTERCEPT(pthread_mutex_trylock);\n  TSAN_INTERCEPT(pthread_mutex_timedlock);\n  TSAN_INTERCEPT(pthread_mutex_unlock);\n\n  TSAN_INTERCEPT(pthread_spin_init);\n  TSAN_INTERCEPT(pthread_spin_destroy);\n  TSAN_INTERCEPT(pthread_spin_lock);\n  TSAN_INTERCEPT(pthread_spin_trylock);\n  TSAN_INTERCEPT(pthread_spin_unlock);\n\n  TSAN_INTERCEPT(pthread_rwlock_init);\n  TSAN_INTERCEPT(pthread_rwlock_destroy);\n  TSAN_INTERCEPT(pthread_rwlock_rdlock);\n  TSAN_INTERCEPT(pthread_rwlock_tryrdlock);\n  TSAN_INTERCEPT(pthread_rwlock_timedrdlock);\n  TSAN_INTERCEPT(pthread_rwlock_wrlock);\n  TSAN_INTERCEPT(pthread_rwlock_trywrlock);\n  TSAN_INTERCEPT(pthread_rwlock_timedwrlock);\n  TSAN_INTERCEPT(pthread_rwlock_unlock);\n\n  // TSAN_INTERCEPT(pthread_cond_init);\n  TSAN_INTERCEPT(pthread_cond_destroy);\n  TSAN_INTERCEPT(pthread_cond_signal);\n  TSAN_INTERCEPT(pthread_cond_broadcast);\n  TSAN_INTERCEPT(pthread_cond_wait);\n  TSAN_INTERCEPT(pthread_cond_timedwait);\n\n  TSAN_INTERCEPT(pthread_barrier_init);\n  TSAN_INTERCEPT(pthread_barrier_destroy);\n  TSAN_INTERCEPT(pthread_barrier_wait);\n\n  TSAN_INTERCEPT(pthread_once);\n\n  TSAN_INTERCEPT(sem_init);\n  TSAN_INTERCEPT(sem_destroy);\n  TSAN_INTERCEPT(sem_wait);\n  TSAN_INTERCEPT(sem_trywait);\n  TSAN_INTERCEPT(sem_timedwait);\n  TSAN_INTERCEPT(sem_post);\n  TSAN_INTERCEPT(sem_getvalue);\n\n  TSAN_INTERCEPT(stat);\n  TSAN_INTERCEPT(__xstat);\n  TSAN_INTERCEPT(stat64);\n  TSAN_INTERCEPT(__xstat64);\n  TSAN_INTERCEPT(lstat);\n  TSAN_INTERCEPT(__lxstat);\n  TSAN_INTERCEPT(lstat64);\n  TSAN_INTERCEPT(__lxstat64);\n  TSAN_INTERCEPT(fstat);\n  TSAN_INTERCEPT(__fxstat);\n  TSAN_INTERCEPT(fstat64);\n  TSAN_INTERCEPT(__fxstat64);\n  TSAN_INTERCEPT(open);\n  TSAN_INTERCEPT(open64);\n  TSAN_INTERCEPT(creat);\n  TSAN_INTERCEPT(creat64);\n  TSAN_INTERCEPT(dup);\n  TSAN_INTERCEPT(dup2);\n  TSAN_INTERCEPT(dup3);\n  TSAN_INTERCEPT(eventfd);\n  TSAN_INTERCEPT(signalfd);\n  TSAN_INTERCEPT(inotify_init);\n  TSAN_INTERCEPT(inotify_init1);\n  TSAN_INTERCEPT(socket);\n  TSAN_INTERCEPT(socketpair);\n  TSAN_INTERCEPT(connect);\n  TSAN_INTERCEPT(bind);\n  TSAN_INTERCEPT(listen);\n  TSAN_INTERCEPT(accept);\n  TSAN_INTERCEPT(accept4);\n  TSAN_INTERCEPT(epoll_create);\n  TSAN_INTERCEPT(epoll_create1);\n  TSAN_INTERCEPT(close);\n  TSAN_INTERCEPT(__close);\n  TSAN_INTERCEPT(__res_iclose);\n  TSAN_INTERCEPT(pipe);\n  TSAN_INTERCEPT(pipe2);\n\n  TSAN_INTERCEPT(readv);\n  TSAN_INTERCEPT(preadv64);\n  TSAN_INTERCEPT(writev);\n  TSAN_INTERCEPT(pwritev64);\n  TSAN_INTERCEPT(send);\n  TSAN_INTERCEPT(sendmsg);\n  TSAN_INTERCEPT(recv);\n  TSAN_INTERCEPT(recvmsg);\n\n  TSAN_INTERCEPT(unlink);\n  TSAN_INTERCEPT(fopen);\n  TSAN_INTERCEPT(freopen);\n  TSAN_INTERCEPT(fclose);\n  TSAN_INTERCEPT(fread);\n  TSAN_INTERCEPT(fwrite);\n  TSAN_INTERCEPT(puts);\n  TSAN_INTERCEPT(rmdir);\n  TSAN_INTERCEPT(opendir);\n\n  TSAN_INTERCEPT(epoll_ctl);\n  TSAN_INTERCEPT(epoll_wait);\n  TSAN_INTERCEPT(poll);\n\n  TSAN_INTERCEPT(sigaction);\n  TSAN_INTERCEPT(signal);\n  TSAN_INTERCEPT(raise);\n  TSAN_INTERCEPT(kill);\n  TSAN_INTERCEPT(pthread_kill);\n  TSAN_INTERCEPT(sleep);\n  TSAN_INTERCEPT(usleep);\n  TSAN_INTERCEPT(nanosleep);\n  TSAN_INTERCEPT(gettimeofday);\n\n  TSAN_INTERCEPT(mlock);\n  TSAN_INTERCEPT(munlock);\n  TSAN_INTERCEPT(mlockall);\n  TSAN_INTERCEPT(munlockall);\n\n  TSAN_INTERCEPT(fork);\n  TSAN_INTERCEPT(on_exit);\n  TSAN_INTERCEPT(__cxa_atexit);\n\n  // Need to setup it, because interceptors check that the function is resolved.\n  // But atexit is emitted directly into the module, so can't be resolved.\n  REAL(atexit) = (int(*)(void(*)()))unreachable;\n  atexit_ctx = new(internal_alloc(MBlockAtExit, sizeof(AtExitContext)))\n      AtExitContext();\n\n  if (REAL(__cxa_atexit)(&finalize, 0, 0)) {\n    Printf(\"ThreadSanitizer: failed to setup atexit callback\\n\");\n    Die();\n  }\n\n  if (pthread_key_create(&g_thread_finalize_key, &thread_finalize)) {\n    Printf(\"ThreadSanitizer: failed to create thread key\\n\");\n    Die();\n  }\n\n  FdInit();\n}\n\nvoid internal_start_thread(void(*func)(void *arg), void *arg) {\n  void *th;\n  REAL(pthread_create)(&th, 0, (void*(*)(void *arg))func, arg);\n  REAL(pthread_detach)(th);\n}\n\n}  // namespace __tsan\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libsanitizer/tsan/tsan_platform_linux.cc": "//===-- tsan_platform_linux.cc --------------------------------------------===//\n//\n// This file is distributed under the University of Illinois Open Source\n// License. See LICENSE.TXT for details.\n//\n//===----------------------------------------------------------------------===//\n//\n// This file is a part of ThreadSanitizer (TSan), a race detector.\n//\n// Linux-specific code.\n//===----------------------------------------------------------------------===//\n\n#ifdef __linux__\n\n#include \"sanitizer_common/sanitizer_common.h\"\n#include \"sanitizer_common/sanitizer_libc.h\"\n#include \"sanitizer_common/sanitizer_procmaps.h\"\n#include \"tsan_platform.h\"\n#include \"tsan_rtl.h\"\n#include \"tsan_flags.h\"\n\n#include <asm/prctl.h>\n#include <fcntl.h>\n#include <pthread.h>\n#include <signal.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <stdarg.h>\n#include <sys/mman.h>\n#include <sys/prctl.h>\n#include <sys/syscall.h>\n#include <sys/time.h>\n#include <sys/types.h>\n#include <sys/resource.h>\n#include <sys/stat.h>\n#include <unistd.h>\n#include <errno.h>\n#include <sched.h>\n#include <dlfcn.h>\n#define __need_res_state\n#include <resolv.h>\n\nextern \"C\" int arch_prctl(int code, __sanitizer::uptr *addr);\n\nnamespace __tsan {\n\n#ifndef TSAN_GO\nScopedInRtl::ScopedInRtl()\n    : thr_(cur_thread()) {\n  in_rtl_ = thr_->in_rtl;\n  thr_->in_rtl++;\n  errno_ = errno;\n}\n\nScopedInRtl::~ScopedInRtl() {\n  thr_->in_rtl--;\n  errno = errno_;\n  CHECK_EQ(in_rtl_, thr_->in_rtl);\n}\n#else\nScopedInRtl::ScopedInRtl() {\n}\n\nScopedInRtl::~ScopedInRtl() {\n}\n#endif\n\nuptr GetShadowMemoryConsumption() {\n  return 0;\n}\n\nvoid FlushShadowMemory() {\n  FlushUnneededShadowMemory(kLinuxShadowBeg, kLinuxShadowEnd - kLinuxShadowBeg);\n}\n\n#ifndef TSAN_GO\nstatic void ProtectRange(uptr beg, uptr end) {\n  ScopedInRtl in_rtl;\n  CHECK_LE(beg, end);\n  if (beg == end)\n    return;\n  if (beg != (uptr)Mprotect(beg, end - beg)) {\n    Printf(\"FATAL: ThreadSanitizer can not protect [%zx,%zx]\\n\", beg, end);\n    Printf(\"FATAL: Make sure you are not using unlimited stack\\n\");\n    Die();\n  }\n}\n#endif\n\n#ifndef TSAN_GO\nvoid InitializeShadowMemory() {\n  uptr shadow = (uptr)MmapFixedNoReserve(kLinuxShadowBeg,\n    kLinuxShadowEnd - kLinuxShadowBeg);\n  if (shadow != kLinuxShadowBeg) {\n    Printf(\"FATAL: ThreadSanitizer can not mmap the shadow memory\\n\");\n    Printf(\"FATAL: Make sure to compile with -fPIE and \"\n               \"to link with -pie (%p, %p).\\n\", shadow, kLinuxShadowBeg);\n    Die();\n  }\n  const uptr kClosedLowBeg  = 0x200000;\n  const uptr kClosedLowEnd  = kLinuxShadowBeg - 1;\n  const uptr kClosedMidBeg = kLinuxShadowEnd + 1;\n  const uptr kClosedMidEnd = min(kLinuxAppMemBeg, kTraceMemBegin);\n  ProtectRange(kClosedLowBeg, kClosedLowEnd);\n  ProtectRange(kClosedMidBeg, kClosedMidEnd);\n  DPrintf(\"kClosedLow   %zx-%zx (%zuGB)\\n\",\n      kClosedLowBeg, kClosedLowEnd, (kClosedLowEnd - kClosedLowBeg) >> 30);\n  DPrintf(\"kLinuxShadow %zx-%zx (%zuGB)\\n\",\n      kLinuxShadowBeg, kLinuxShadowEnd,\n      (kLinuxShadowEnd - kLinuxShadowBeg) >> 30);\n  DPrintf(\"kClosedMid   %zx-%zx (%zuGB)\\n\",\n      kClosedMidBeg, kClosedMidEnd, (kClosedMidEnd - kClosedMidBeg) >> 30);\n  DPrintf(\"kLinuxAppMem %zx-%zx (%zuGB)\\n\",\n      kLinuxAppMemBeg, kLinuxAppMemEnd,\n      (kLinuxAppMemEnd - kLinuxAppMemBeg) >> 30);\n  DPrintf(\"stack        %zx\\n\", (uptr)&shadow);\n}\n#endif\n\nstatic uptr g_data_start;\nstatic uptr g_data_end;\n\n#ifndef TSAN_GO\nstatic void CheckPIE() {\n  // Ensure that the binary is indeed compiled with -pie.\n  MemoryMappingLayout proc_maps;\n  uptr start, end;\n  if (proc_maps.Next(&start, &end,\n                     /*offset*/0, /*filename*/0, /*filename_size*/0)) {\n    if ((u64)start < kLinuxAppMemBeg) {\n      Printf(\"FATAL: ThreadSanitizer can not mmap the shadow memory (\"\n             \"something is mapped at 0x%zx < 0x%zx)\\n\",\n             start, kLinuxAppMemBeg);\n      Printf(\"FATAL: Make sure to compile with -fPIE\"\n             \" and to link with -pie.\\n\");\n      Die();\n    }\n  }\n}\n\nstatic void InitDataSeg() {\n  MemoryMappingLayout proc_maps;\n  uptr start, end, offset;\n  char name[128];\n  bool prev_is_data = false;\n  while (proc_maps.Next(&start, &end, &offset, name, ARRAY_SIZE(name))) {\n    DPrintf(\"%p-%p %p %s\\n\", start, end, offset, name);\n    bool is_data = offset != 0 && name[0] != 0;\n    // BSS may get merged with [heap] in /proc/self/maps. This is not very\n    // reliable.\n    bool is_bss = offset == 0 &&\n      (name[0] == 0 || internal_strcmp(name, \"[heap]\") == 0) && prev_is_data;\n    if (g_data_start == 0 && is_data)\n      g_data_start = start;\n    if (is_bss)\n      g_data_end = end;\n    prev_is_data = is_data;\n  }\n  DPrintf(\"guessed data_start=%p data_end=%p\\n\",  g_data_start, g_data_end);\n  CHECK_LT(g_data_start, g_data_end);\n  CHECK_GE((uptr)&g_data_start, g_data_start);\n  CHECK_LT((uptr)&g_data_start, g_data_end);\n}\n\nstatic uptr g_tls_size;\n\n#ifdef __i386__\n# define INTERNAL_FUNCTION __attribute__((regparm(3), stdcall))\n#else\n# define INTERNAL_FUNCTION\n#endif\n\nstatic int InitTlsSize() {\n  typedef void (*get_tls_func)(size_t*, size_t*) INTERNAL_FUNCTION;\n  get_tls_func get_tls;\n  void *get_tls_static_info_ptr = dlsym(RTLD_NEXT, \"_dl_get_tls_static_info\");\n  CHECK_EQ(sizeof(get_tls), sizeof(get_tls_static_info_ptr));\n  internal_memcpy(&get_tls, &get_tls_static_info_ptr,\n                  sizeof(get_tls_static_info_ptr));\n  CHECK_NE(get_tls, 0);\n  size_t tls_size = 0;\n  size_t tls_align = 0;\n  get_tls(&tls_size, &tls_align);\n  return tls_size;\n}\n#endif  // #ifndef TSAN_GO\n\nstatic rlim_t getlim(int res) {\n  rlimit rlim;\n  CHECK_EQ(0, getrlimit(res, &rlim));\n  return rlim.rlim_cur;\n}\n\nstatic void setlim(int res, rlim_t lim) {\n  // The following magic is to prevent clang from replacing it with memset.\n  volatile rlimit rlim;\n  rlim.rlim_cur = lim;\n  rlim.rlim_max = lim;\n  setrlimit(res, (rlimit*)&rlim);\n}\n\nconst char *InitializePlatform() {\n  void *p = 0;\n  if (sizeof(p) == 8) {\n    // Disable core dumps, dumping of 16TB usually takes a bit long.\n    setlim(RLIMIT_CORE, 0);\n  }\n\n  // Go maps shadow memory lazily and works fine with limited address space.\n  // Unlimited stack is not a problem as well, because the executable\n  // is not compiled with -pie.\n  if (kCppMode) {\n    bool reexec = false;\n    // TSan doesn't play well with unlimited stack size (as stack\n    // overlaps with shadow memory). If we detect unlimited stack size,\n    // we re-exec the program with limited stack size as a best effort.\n    if (getlim(RLIMIT_STACK) == (rlim_t)-1) {\n      const uptr kMaxStackSize = 32 * 1024 * 1024;\n      Report(\"WARNING: Program is run with unlimited stack size, which \"\n             \"wouldn't work with ThreadSanitizer.\\n\");\n      Report(\"Re-execing with stack size limited to %zd bytes.\\n\",\n             kMaxStackSize);\n      SetStackSizeLimitInBytes(kMaxStackSize);\n      reexec = true;\n    }\n\n    if (getlim(RLIMIT_AS) != (rlim_t)-1) {\n      Report(\"WARNING: Program is run with limited virtual address space,\"\n             \" which wouldn't work with ThreadSanitizer.\\n\");\n      Report(\"Re-execing with unlimited virtual address space.\\n\");\n      setlim(RLIMIT_AS, -1);\n      reexec = true;\n    }\n    if (reexec)\n      ReExec();\n  }\n\n#ifndef TSAN_GO\n  CheckPIE();\n  g_tls_size = (uptr)InitTlsSize();\n  InitDataSeg();\n#endif\n  return GetEnv(kTsanOptionsEnv);\n}\n\nvoid FinalizePlatform() {\n  fflush(0);\n}\n\nuptr GetTlsSize() {\n#ifndef TSAN_GO\n  return g_tls_size;\n#else\n  return 0;\n#endif\n}\n\nvoid GetThreadStackAndTls(bool main, uptr *stk_addr, uptr *stk_size,\n                          uptr *tls_addr, uptr *tls_size) {\n#ifndef TSAN_GO\n  arch_prctl(ARCH_GET_FS, tls_addr);\n  *tls_addr -= g_tls_size;\n  *tls_size = g_tls_size;\n\n  uptr stack_top, stack_bottom;\n  GetThreadStackTopAndBottom(main, &stack_top, &stack_bottom);\n  *stk_addr = stack_bottom;\n  *stk_size = stack_top - stack_bottom;\n\n  if (!main) {\n    // If stack and tls intersect, make them non-intersecting.\n    if (*tls_addr > *stk_addr && *tls_addr < *stk_addr + *stk_size) {\n      CHECK_GT(*tls_addr + *tls_size, *stk_addr);\n      CHECK_LE(*tls_addr + *tls_size, *stk_addr + *stk_size);\n      *stk_size -= *tls_size;\n      *tls_addr = *stk_addr + *stk_size;\n    }\n  }\n#else\n  *stk_addr = 0;\n  *stk_size = 0;\n  *tls_addr = 0;\n  *tls_size = 0;\n#endif\n}\n\nbool IsGlobalVar(uptr addr) {\n  return g_data_start && addr >= g_data_start && addr < g_data_end;\n}\n\n#ifndef TSAN_GO\nint ExtractResolvFDs(void *state, int *fds, int nfd) {\n  int cnt = 0;\n  __res_state *statp = (__res_state*)state;\n  for (int i = 0; i < MAXNS && cnt < nfd; i++) {\n    if (statp->_u._ext.nsaddrs[i] && statp->_u._ext.nssocks[i] != -1)\n      fds[cnt++] = statp->_u._ext.nssocks[i];\n  }\n  return cnt;\n}\n#endif\n\n\n}  // namespace __tsan\n\n#endif  // #ifdef __linux__\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgcc/config/darwin-crt3.c": "/* __cxa_atexit backwards-compatibility support for Darwin.\n   Copyright (C) 2006-2013 Free Software Foundation, Inc.\n\nThis file is part of GCC.\n\nGCC is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free\nSoftware Foundation; either version 3, or (at your option) any later\nversion.\n\nGCC is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\nfor more details.\n\nUnder Section 7 of GPL version 3, you are granted additional\npermissions described in the GCC Runtime Library Exception, version\n3.1, as published by the Free Software Foundation.\n\nYou should have received a copy of the GNU General Public License and\na copy of the GCC Runtime Library Exception along with this program;\nsee the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n<http://www.gnu.org/licenses/>.  */\n\n/* Don't do anything if we are compiling for a kext multilib. */\n#ifdef __PIC__\n\n#include \"tconfig.h\"\n#include \"tsystem.h\"\n\n#include <dlfcn.h>\n#include <stdbool.h>\n#include <stdlib.h>\n#include <string.h>\n\n/* This file works around two different problems.\n\n   The first problem is that there is no __cxa_atexit on Mac OS versions\n   before 10.4.  It fixes this by providing a complete atexit and\n   __cxa_atexit emulation called from the regular atexit.\n\n   The second problem is that on all shipping versions of Mac OS,\n   __cxa_finalize and exit() don't work right: they don't run routines\n   that were registered while other atexit routines are running.  This\n   is worked around by wrapping each atexit/__cxa_atexit routine with\n   our own routine which ensures that any __cxa_atexit calls while it\n   is running are honoured.\n\n   There are still problems which this does not solve.  Before 10.4,\n   shared objects linked with previous compilers won't have their\n   atexit calls properly interleaved with code compiled with newer\n   compilers.  Also, atexit routines registered from shared objects\n   linked with previous compilers won't get the bug fix.  */\n\ntypedef int (*cxa_atexit_p)(void (*func) (void*), void* arg, const void* dso);\ntypedef void (*cxa_finalize_p)(const void *dso);\ntypedef int (*atexit_p)(void (*func)(void));\n\n/* These are from \"keymgr.h\".  */\nextern void *_keymgr_get_and_lock_processwide_ptr (unsigned key);\nextern int _keymgr_get_and_lock_processwide_ptr_2 (unsigned, void **);\nextern int _keymgr_set_and_unlock_processwide_ptr (unsigned key, void *ptr);\n\nextern void *__keymgr_global[];\ntypedef struct _Sinfo_Node {\n        unsigned int size ;             /*size of this node*/\n        unsigned short major_version ;  /*API major version.*/\n        unsigned short minor_version ;  /*API minor version.*/\n        } _Tinfo_Node ;\n\n#ifdef __ppc__\n#define CHECK_KEYMGR_ERROR(e) \\\n  (((_Tinfo_Node *)__keymgr_global[2])->major_version >= 4 ? (e) : 0)\n#else\n#define CHECK_KEYMGR_ERROR(e) (e)\n#endif\n\n/* Our globals are stored under this keymgr index.  */\n#define KEYMGR_ATEXIT_LIST\t14\n\n/* The different kinds of callback routines.  */\ntypedef void (*atexit_callback)(void);\ntypedef void (*cxa_atexit_callback)(void *);\n\n/* This structure holds a routine to call.  There may be extra fields\n   at the end of the structure that this code doesn't know about.  */\nstruct one_atexit_routine \n{\n  union {\n    atexit_callback ac;\n    cxa_atexit_callback cac;\n  } callback;\n  /* has_arg is 0/2/4 if 'ac' is live, 1/3/5 if 'cac' is live.  \n     Higher numbers indicate a later version of the structure that this\n     code doesn't understand and will ignore.  */\n  int has_arg;\n  void * arg;\n};\n\nstruct atexit_routine_list\n{\n  struct atexit_routine_list * next;\n  struct one_atexit_routine r;\n};\n\n/* The various possibilities for status of atexit().  */\nenum atexit_status {\n  atexit_status_unknown = 0,\n  atexit_status_missing = 1,\n  atexit_status_broken = 2,\n  atexit_status_working = 16\n};\n\nstruct keymgr_atexit_list\n{\n  /* Version of this list.  This code knows only about version 0.\n     If the version is higher than 0, this code may add new atexit routines\n     but should not attempt to run the list.  */\n  short version;\n  /* 1 if an atexit routine is currently being run by this code, 0\n     otherwise.  */\n  char running_routines;\n  /* Holds a value from 'enum atexit_status'.  */\n  unsigned char atexit_status;\n  /* The list of atexit and cxa_atexit routines registered.  If\n   atexit_status_missing it contains all routines registered while\n   linked with this code.  If atexit_status_broken it contains all\n   routines registered during cxa_finalize while linked with this\n   code.  */\n  struct atexit_routine_list *l;\n  /* &__cxa_atexit; set if atexit_status >= atexit_status_broken.  */\n  cxa_atexit_p cxa_atexit_f;\n  /* &__cxa_finalize; set if atexit_status >= atexit_status_broken.  */\n  cxa_finalize_p cxa_finalize_f;\n  /* &atexit; set if atexit_status >= atexit_status_working\n     or atexit_status == atexit_status_missing.  */\n  atexit_p atexit_f;\n};\n\n/* Return 0 if __cxa_atexit has the bug it has in Mac OS 10.4: it\n   fails to call routines registered while an atexit routine is\n   running.  Return 1 if it works properly, and -1 if an error occurred.  */\n\nstruct atexit_data \n{\n  int result;\n  cxa_atexit_p cxa_atexit;\n};\n\nstatic void cxa_atexit_check_2 (void *arg)\n{\n  ((struct atexit_data *)arg)->result = 1;\n}\n\nstatic void cxa_atexit_check_1 (void *arg)\n{\n  struct atexit_data * aed = arg;\n  if (aed->cxa_atexit (cxa_atexit_check_2, arg, arg) != 0)\n    aed->result = -1;\n}\n\nstatic int\ncheck_cxa_atexit (cxa_atexit_p cxa_atexit, cxa_finalize_p cxa_finalize)\n{\n  struct atexit_data aed = { 0, cxa_atexit };\n\n  /* We re-use &aed as the 'dso' parameter, since it's a unique address.  */\n  if (cxa_atexit (cxa_atexit_check_1, &aed, &aed) != 0)\n    return -1;\n  cxa_finalize (&aed);\n  if (aed.result == 0)\n    {\n      /* Call __cxa_finalize again to make sure that cxa_atexit_check_2\n\t is removed from the list before AED goes out of scope.  */\n      cxa_finalize (&aed);\n      aed.result = 0;\n    }\n  return aed.result;\n}\n\n#ifdef __ppc__\n/* This comes from Csu.  It works only before 10.4.  The prototype has\n   been altered a bit to avoid casting.  */\nextern int _dyld_func_lookup(const char *dyld_func_name,\n     void *address) __attribute__((visibility(\"hidden\")));\n\nstatic void our_atexit (void);\n\n/* We're running on 10.3.9.  Find the address of the system atexit()\n   function.  So easy to say, so hard to do.  */\nstatic atexit_p\nfind_atexit_10_3 (void)\n{\n  unsigned int (*dyld_image_count_fn)(void);\n  const char *(*dyld_get_image_name_fn)(unsigned int image_index);\n  const void *(*dyld_get_image_header_fn)(unsigned int image_index);\n  const void *(*NSLookupSymbolInImage_fn)(const void *image, \n\t\t\t\t\t  const char *symbolName,\n\t\t\t\t\t  unsigned int options);\n  void *(*NSAddressOfSymbol_fn)(const void *symbol);\n  unsigned i, count;\n  \n  /* Find some dyld functions.  */\n  _dyld_func_lookup(\"__dyld_image_count\", &dyld_image_count_fn);\n  _dyld_func_lookup(\"__dyld_get_image_name\", &dyld_get_image_name_fn);\n  _dyld_func_lookup(\"__dyld_get_image_header\", &dyld_get_image_header_fn);\n  _dyld_func_lookup(\"__dyld_NSLookupSymbolInImage\", &NSLookupSymbolInImage_fn);\n  _dyld_func_lookup(\"__dyld_NSAddressOfSymbol\", &NSAddressOfSymbol_fn);\n\n  /* If any of these don't exist, that's an error.  */\n  if (! dyld_image_count_fn || ! dyld_get_image_name_fn\n      || ! dyld_get_image_header_fn || ! NSLookupSymbolInImage_fn\n      || ! NSAddressOfSymbol_fn)\n    return NULL;\n  \n  count = dyld_image_count_fn ();\n  for (i = 0; i < count; i++)\n    {\n      const char * path = dyld_get_image_name_fn (i);\n      const void * image;\n      const void * symbol;\n      \n      if (strcmp (path, \"/usr/lib/libSystem.B.dylib\") != 0)\n\tcontinue;\n      image = dyld_get_image_header_fn (i);\n      if (! image)\n\treturn NULL;\n      /* '4' is NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR.  */\n      symbol = NSLookupSymbolInImage_fn (image, \"_atexit\", 4);\n      if (! symbol)\n\treturn NULL;\n      return NSAddressOfSymbol_fn (symbol);\n    }\n  return NULL;\n}\n#endif\n\n/* Create (if necessary), find, lock, fill in, and return our globals.  \n   Return NULL on error, in which case the globals will not be locked.  \n   The caller should call keymgr_set_and_unlock.  */\nstatic struct keymgr_atexit_list *\nget_globals (void)\n{\n  struct keymgr_atexit_list * r;\n  \n#ifdef __ppc__\n  /* 10.3.9 doesn't have _keymgr_get_and_lock_processwide_ptr_2 so the\n     PPC side can't use it.  On 10.4 this just means the error gets\n     reported a little later when\n     _keymgr_set_and_unlock_processwide_ptr finds that the key was\n     never locked.  */\n  r = _keymgr_get_and_lock_processwide_ptr (KEYMGR_ATEXIT_LIST);\n#else\n  void * rr;\n  if (_keymgr_get_and_lock_processwide_ptr_2 (KEYMGR_ATEXIT_LIST, &rr))\n    return NULL;\n  r = rr;\n#endif\n  \n  if (r == NULL)\n    {\n      r = calloc (sizeof (struct keymgr_atexit_list), 1);\n      if (! r)\n\treturn NULL;\n    }\n\n  if (r->atexit_status == atexit_status_unknown)\n    {\n      void *handle;\n\n      handle = dlopen (\"/usr/lib/libSystem.B.dylib\", RTLD_NOLOAD);\n      if (!handle)\n\t{\n#ifdef __ppc__\n\t  r->atexit_status = atexit_status_missing;\n\t  r->atexit_f = find_atexit_10_3 ();\n\t  if (! r->atexit_f)\n\t    goto error;\n\t  if (r->atexit_f (our_atexit))\n\t    goto error;\n#else\n\t  goto error;\n#endif\n\t}\n      else\n\t{\n\t  int chk_result;\n\n\t  r->cxa_atexit_f = (cxa_atexit_p)dlsym (handle, \"__cxa_atexit\");\n\t  r->cxa_finalize_f = (cxa_finalize_p)dlsym (handle, \"__cxa_finalize\");\n\t  if (! r->cxa_atexit_f || ! r->cxa_finalize_f)\n\t    goto error;\n\n\t  chk_result = check_cxa_atexit (r->cxa_atexit_f, r->cxa_finalize_f);\n\t  if (chk_result == -1)\n\t    goto error;\n\t  else if (chk_result == 0)\n\t    r->atexit_status = atexit_status_broken;\n\t  else\n\t    {\n\t      r->atexit_f = (atexit_p)dlsym (handle, \"atexit\");\n\t      if (! r->atexit_f)\n\t\tgoto error;\n\t      r->atexit_status = atexit_status_working;\n\t    }\n\t}\n    }\n\n  return r;\n  \n error:\n  _keymgr_set_and_unlock_processwide_ptr (KEYMGR_ATEXIT_LIST, r);\n  return NULL;\n}\n\n/* Add TO_ADD to ATEXIT_LIST.  ATEXIT_LIST may be NULL but is\n   always the result of calling _keymgr_get_and_lock_processwide_ptr and\n   so KEYMGR_ATEXIT_LIST is known to be locked; this routine is responsible\n   for unlocking it.  */\n\nstatic int\nadd_routine (struct keymgr_atexit_list * g,\n\t     const struct one_atexit_routine * to_add)\n{\n  struct atexit_routine_list * s\n    = malloc (sizeof (struct atexit_routine_list));\n  int result;\n  \n  if (!s)\n    {\n      _keymgr_set_and_unlock_processwide_ptr (KEYMGR_ATEXIT_LIST, g);\n      return -1;\n    }\n  s->r = *to_add;\n  s->next = g->l;\n  g->l = s;\n  result = _keymgr_set_and_unlock_processwide_ptr (KEYMGR_ATEXIT_LIST, g);\n  return CHECK_KEYMGR_ERROR (result) == 0 ? 0 : -1;\n}\n\n/* This runs the routines in G->L up to STOP.  */\nstatic struct keymgr_atexit_list *\nrun_routines (struct keymgr_atexit_list *g,\n\t      struct atexit_routine_list *stop)\n{\n  for (;;)\n    {\n      struct atexit_routine_list * cur = g->l;\n      if (! cur || cur == stop)\n\tbreak;\n      g->l = cur->next;\n      _keymgr_set_and_unlock_processwide_ptr (KEYMGR_ATEXIT_LIST, g);\n\n      switch (cur->r.has_arg) {\n      case 0: case 2: case 4:\n\tcur->r.callback.ac ();\n\tbreak;\n      case 1: case 3: case 5:\n\tcur->r.callback.cac (cur->r.arg);\n\tbreak;\n      default:\n\t/* Don't understand, so don't call it.  */\n\tbreak;\n      }\n      free (cur);\n\n      g = _keymgr_get_and_lock_processwide_ptr (KEYMGR_ATEXIT_LIST);\n      if (! g)\n\tbreak;\n    }\n  return g;\n}\n\n/* Call the routine described by ROUTINE_PARAM and then call any\n   routines added to KEYMGR_ATEXIT_LIST while that routine was\n   running, all with in_cxa_finalize set.  */\n\nstatic void\ncxa_atexit_wrapper (void* routine_param)\n{\n  struct one_atexit_routine * routine = routine_param;\n  struct keymgr_atexit_list *g;\n  struct atexit_routine_list * base = NULL;\n  char prev_running = 0;\n  \n  g = _keymgr_get_and_lock_processwide_ptr (KEYMGR_ATEXIT_LIST);\n  if (g)\n    {\n      prev_running = g->running_routines;\n      g->running_routines = 1;\n      base = g->l;\n      _keymgr_set_and_unlock_processwide_ptr (KEYMGR_ATEXIT_LIST, g);\n    }\n\n  if (routine->has_arg)\n    routine->callback.cac (routine->arg);\n  else\n    routine->callback.ac ();\n\n  if (g)\n    g = _keymgr_get_and_lock_processwide_ptr (KEYMGR_ATEXIT_LIST);\n  if (g)\n    g = run_routines (g, base);\n  if (g)\n    {\n      g->running_routines = prev_running;\n      _keymgr_set_and_unlock_processwide_ptr (KEYMGR_ATEXIT_LIST, g);\n    }\n}\n\n#ifdef __ppc__\n/* This code is used while running on 10.3.9, when __cxa_atexit doesn't\n   exist in the system library.  10.3.9 only supported regular PowerPC,\n   so this code isn't necessary on x86 or ppc64.  */\n\n/* This routine is called from the system atexit(); it runs everything\n   registered on the KEYMGR_ATEXIT_LIST.  */\n\nstatic void\nour_atexit (void)\n{\n  struct keymgr_atexit_list *g;\n  char prev_running;\n\n  g = _keymgr_get_and_lock_processwide_ptr (KEYMGR_ATEXIT_LIST);\n  if (! g || g->version != 0 || g->atexit_status != atexit_status_missing)\n    return;\n  \n  prev_running = g->running_routines;\n  g->running_routines = 1;\n  g = run_routines (g, NULL);\n  if (! g)\n    return;\n  g->running_routines = prev_running;\n  _keymgr_set_and_unlock_processwide_ptr (KEYMGR_ATEXIT_LIST, g);\n}\n#endif\n\n/* This is our wrapper around atexit and __cxa_atexit.  It will return\n   nonzero if an error occurs, and otherwise:\n   - if in_cxa_finalize is set, or running on 10.3.9, add R to\n     KEYMGR_ATEXIT_LIST; or\n   - call the system __cxa_atexit to add cxa_atexit_wrapper with an argument\n     that indicates how cxa_atexit_wrapper should call R.  */\n\nstatic int\natexit_common (const struct one_atexit_routine *r, const void *dso)\n{\n  struct keymgr_atexit_list *g = get_globals ();\n\n  if (! g)\n    return -1;\n  \n  if (g->running_routines || g->atexit_status == atexit_status_missing)\n    return add_routine (g, r);\n\n  if (g->atexit_status >= atexit_status_working)\n    {\n      int result;\n      if (r->has_arg)\n\t{\n\t  cxa_atexit_p cxa_atexit = g->cxa_atexit_f;\n\t  result = _keymgr_set_and_unlock_processwide_ptr (KEYMGR_ATEXIT_LIST,\n\t\t\t\t\t\t\t   g);\n\t  if (CHECK_KEYMGR_ERROR (result))\n\t    return -1;\n\t  return cxa_atexit (r->callback.cac, r->arg, dso);\n\t}\n      else\n\t{\n\t  atexit_p atexit_f = g->atexit_f;\n\t  result = _keymgr_set_and_unlock_processwide_ptr (KEYMGR_ATEXIT_LIST,\n\t\t\t\t\t\t\t   g);\n\t  if (CHECK_KEYMGR_ERROR (result))\n\t    return -1;\n\t  return atexit_f (r->callback.ac);\n\t}\n    }\n  else\n    {\n      cxa_atexit_p cxa_atexit = g->cxa_atexit_f;\n      struct one_atexit_routine *alloced;\n      int result;\n\n      result = _keymgr_set_and_unlock_processwide_ptr (KEYMGR_ATEXIT_LIST, g);\n      if (CHECK_KEYMGR_ERROR (result))\n\treturn -1;\n\n      alloced = malloc (sizeof (struct one_atexit_routine));\n      if (! alloced)\n\treturn -1;\n      *alloced = *r;\n      return cxa_atexit (cxa_atexit_wrapper, alloced, dso);\n    }\n}\n\n/* These are the actual replacement routines; they just funnel into\n   atexit_common.  */\n\nint __cxa_atexit (cxa_atexit_callback func, void* arg, \n\t\t  const void* dso) __attribute__((visibility(\"hidden\")));\n\nint\n__cxa_atexit (cxa_atexit_callback func, void* arg, const void* dso)\n{\n  struct one_atexit_routine r;\n  r.callback.cac = func;\n  r.has_arg = 1;\n  r.arg = arg;\n  return atexit_common (&r, dso);\n}\n\nint atexit (atexit_callback func) __attribute__((visibility(\"hidden\")));\n\n/* Use __dso_handle to allow even bundles that call atexit() to be unloaded\n   on 10.4.  */\nextern void __dso_handle;\n\nint\natexit (atexit_callback func)\n{\n  struct one_atexit_routine r;\n  r.callback.ac = func;\n  r.has_arg = 0;\n  return atexit_common (&r, &__dso_handle);\n}\n\n#endif /* __PIC__ */\n",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/lto-plugin/lto-symtab.c": "/* Program to read the IL symbol table.\n   Copyright (C) 2008 Free Software Foundation, Inc.\n   Contributed by Rafael Avila de Espindola (espindola@google.com).\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */\n\n#include <fcntl.h>\n#include <assert.h>\n#include <dlfcn.h>\n#include <stdio.h>\n#include <inttypes.h>\n#include <stdlib.h>\n#include <string.h>\n\n#include \"plugin-api.h\"\n#include \"../gcc/lto/common.h\"\n\n/* The presence of gelf.h is checked by the toplevel configure script.  */\n# include <gelf.h>\n\nstatic ld_plugin_claim_file_handler claim_file_handler;\nstatic ld_plugin_all_symbols_read_handler all_symbols_read_handler;\nstatic ld_plugin_cleanup_handler cleanup_handler;\nstatic void *plugin_handle;\n\nstruct file_handle {\n  unsigned nsyms;\n  struct ld_plugin_symbol *syms;\n};\n\nstatic struct file_handle **all_file_handles = NULL;\nstatic unsigned int num_file_handles;\n\n/* Write NSYMS symbols from file HANDLE in SYMS. */\n\nstatic enum ld_plugin_status\nget_symbols (const void *handle, int nsyms, struct ld_plugin_symbol *syms)\n{\n  unsigned i;\n  struct file_handle *h = (struct file_handle *) handle;\n  assert (h->nsyms == nsyms);\n\n  for (i = 0; i < nsyms; i++)\n    syms[i] = h->syms[i];\n\n  return LDPS_OK;\n}\n\n/* Register HANDLER as the callback for notifying the plugin that all symbols\n   have been read. */\n\nstatic enum ld_plugin_status\nregister_all_symbols_read (ld_plugin_all_symbols_read_handler handler)\n{\n  all_symbols_read_handler = handler;\n  return LDPS_OK;\n}\n\n/* Register HANDLER as the callback for claiming a file. */\n\nstatic enum ld_plugin_status\nregister_claim_file(ld_plugin_claim_file_handler handler)\n{\n  claim_file_handler = handler;\n  return LDPS_OK;\n}\n\n/* Register HANDLER as the callback to removing temporary files. */\n\nstatic enum ld_plugin_status\nregister_cleanup (ld_plugin_cleanup_handler handler)\n{\n  cleanup_handler = handler;\n  return LDPS_OK;\n}\n\n/* For a file identified by HANDLE, add NSYMS symbols from SYMS. */\n\nstatic enum ld_plugin_status\nadd_symbols (void *handle, int nsyms,\n\t     const struct ld_plugin_symbol *syms)\n{\n  int i;\n  struct file_handle *h = (struct file_handle *) handle;\n  h->nsyms = nsyms;\n  h->syms = calloc (nsyms, sizeof (struct ld_plugin_symbol));\n  assert (h->syms);\n\n  for (i = 0; i < nsyms; i++)\n    {\n      h->syms[i] = syms[i];\n      h->syms[i].name = strdup (h->syms[i].name);\n      if (h->syms[i].version)\n\th->syms[i].version = strdup (h->syms[i].version);\n      if (h->syms[i].comdat_key)\n\th->syms[i].comdat_key = strdup (h->syms[i].comdat_key);\n    }\n\n  return LDPS_OK;\n}\n\nstruct ld_plugin_tv tv[] = {\n  {LDPT_REGISTER_CLAIM_FILE_HOOK,\n   {.tv_register_claim_file = register_claim_file}\n  },\n  {LDPT_ADD_SYMBOLS,\n   {.tv_add_symbols = add_symbols}\n  },\n\n  {LDPT_REGISTER_ALL_SYMBOLS_READ_HOOK,\n   {.tv_register_all_symbols_read = register_all_symbols_read}\n  },\n  {LDPT_GET_SYMBOLS,\n   {.tv_get_symbols = get_symbols}\n  },\n  {LDPT_REGISTER_CLEANUP_HOOK,\n   {.tv_register_cleanup = register_cleanup}\n  },\n  {0, {0}}\n};\n\n/* Load a plugin from a file named NAME. */\n\nstatic void\nload_plugin (const char *name)\n{\n  ld_plugin_onload onload;\n  plugin_handle = dlopen (name, RTLD_LAZY);\n\n  assert (plugin_handle != NULL);\n  onload = dlsym (plugin_handle, \"onload\");\n  assert (onload);\n  onload (tv);\n  assert (claim_file_handler);\n}\n\n/* Send object to the plugin. The file (archive or object) name is NAME.\n   FD is an open file descriptor. The object data starts at OFFSET and is\n   FILESIZE bytes long. */\n\nstatic void\nregister_object (const char *name, int fd, off_t offset, off_t filesize)\n{\n  int claimed;\n  struct ld_plugin_input_file file;\n  void *handle;\n\n  num_file_handles++;\n  all_file_handles = realloc (all_file_handles, num_file_handles\n\t\t\t      * sizeof (struct file_handle *));\n  assert (all_file_handles);\n\n  all_file_handles[num_file_handles - 1] = calloc (1,\n\t\t\t\t\t\t   sizeof (struct file_handle));\n  handle = all_file_handles[num_file_handles - 1];\n  assert (handle);\n\n  file.name = (char *) name;\n  file.fd = fd;\n  file.offset = offset;\n  file.filesize = filesize;\n\n  file.handle = handle;\n\n  claim_file_handler (&file, &claimed);\n}\n\n/* Send file named NAME to the plugin. */\n\nstatic void\nregister_file (const char *name)\n{\n int fd = open (name, O_RDONLY);\n Elf *elf;\n\n assert (fd >= 0);\n\n elf = elf_begin (fd, ELF_C_READ, NULL);\n assert (elf);\n\n Elf_Kind kind = elf_kind (elf);\n\n assert (kind == ELF_K_ELF || kind == ELF_K_AR);\n\n if (kind == ELF_K_AR)\n   {\n     Elf *member = elf_begin (fd, ELF_C_READ, elf);\n     while (member)\n       {\n\t Elf_Arhdr *h = elf_getarhdr (member);\n\t assert (h);\n\n\t if (h->ar_name[0] != '/')\n\t   {\n\t     off_t offset = elf_getbase (member);\n\t     register_object (name, fd, offset, h->ar_size);\n\t   }\n\n\t Elf_Cmd cmd = elf_next (member);\n\t elf_end (member);\n\t member = elf_begin (fd, cmd, elf);\n       }\n   }\n else /* Single File */\n   register_object (name, fd, 0, 0);\n\n elf_end (elf);\n}\n\n/* Fake symbol resolution for testing. */\n\nstatic void\nresolve (void)\n{\n  unsigned j;\n  for (j = 0; j < num_file_handles; j++)\n    {\n      struct file_handle *handle = all_file_handles[j];\n      unsigned int nsyms = handle->nsyms;\n      struct ld_plugin_symbol *syms = handle->syms;\n      unsigned i;\n      for (i = 0; i < nsyms; i++)\n\t{\n\t  switch (syms[i].def)\n\t    {\n\t    case LDPK_DEF:\n\t    case LDPK_WEAKDEF:\n\t    case LDPK_COMMON:\n\t      syms[i].resolution =  LDPR_PREVAILING_DEF;\n\t      break;\n\t    case LDPK_UNDEF:\n\t    case LDPK_WEAKUNDEF:\n\t      syms[i].resolution =  LDPR_RESOLVED_IR;\n\t      break;\n\t    }\n\t}\n    }\n}\n\n/* Print all symbol information. */\n\nstatic void\nprint (void)\n{\n  unsigned j;\n  for (j = 0; j < num_file_handles; j++)\n    {\n      struct file_handle *handle = all_file_handles[j];\n      unsigned int nsyms = handle->nsyms;\n      struct ld_plugin_symbol *syms = handle->syms;\n      unsigned i;\n      for (i = 0; i < nsyms; i++)\n\t{\n\t  printf(\"name: %s; \", syms[i].name);\n\t  if (syms[i].version)\n\t     printf(\"version: %s;\", syms[i].version);\n\t  else\n\t    printf(\"not versioned; \");\n\t  printf(\"kind: %s; \", lto_kind_str[syms[i].def]);\n\t  printf(\"visibility: %s; \", lto_visibility_str[syms[i].visibility]);\n\t  printf(\"size: %\" PRId64 \"; \", syms[i].size);\n\t  if (syms[i].comdat_key)\n\t    printf(\"comdat_key: %s; \", syms[i].comdat_key);\n\t  else\n\t    printf(\"no comdat_key; \");\n\t  printf (\"resolution: %s\\n\", lto_resolution_str[syms[i].resolution]);\n\t}\n    }\n}\n\n/* Unload the plugin. */\n\nstatic void\nunload_plugin (void)\n{\n  unsigned err = dlclose (plugin_handle);\n  assert (err == 0);\n  claim_file_handler = 0;\n  all_symbols_read_handler = 0;\n}\n\n/* Free all memory allocated by us that hasn't been freed yet. */\n\nstatic void\nfree_all (void)\n{\n  unsigned j;\n  for (j = 0; j < num_file_handles; j++)\n    {\n      struct file_handle *handle = all_file_handles[j];\n      unsigned int nsyms = handle->nsyms;\n      struct ld_plugin_symbol *syms = handle->syms;\n      unsigned i;\n      for (i = 0; i < nsyms; i++)\n\t{\n\t  free (syms[i].name);\n\t  syms[i].name = 0;\n\t  if (syms[i].version)\n\t    {\n\t      free (syms[i].version);\n\t      syms[i].version = 0;\n\t    }\n\t  if (syms[i].comdat_key)\n\t    {\n\t      free (syms[i].comdat_key);\n\t      syms[i].comdat_key = 0;\n\t    }\n\t}\n      free (syms);\n      handle->syms = NULL;\n      handle->nsyms = 0;\n      free (all_file_handles[j]);\n      all_file_handles[j] = NULL;\n    }\n\n  free (all_file_handles);\n  all_file_handles = NULL;\n  num_file_handles = 0;\n}\n\nint\nmain(int argc, char *argv[])\n{\n  const char *plugin;\n  unsigned int i;\n  assert (argc >= 3);\n  plugin = argv[1];\n\n  load_plugin (plugin);\n\n  for (i = 2; i < argc; i++)\n    register_file (argv[i]);\n\n  resolve ();\n\n  print ();\n\n  all_symbols_read_handler ();\n\n  free_all ();\n\n  cleanup_handler ();\n\n  unload_plugin ();\n\n  return 0;\n}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/sr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/fi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/sv.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/hr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/ja.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/fr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/de.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/id.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/be.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/nl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/vi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/zh_CN.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/el.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/fr.po",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/da.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/zh_TW.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/es.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/ru.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/tr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/po/da.po",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/java/typeck.c",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/anint_1.f90",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/bom_UTF-32.f90",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/achar_3.f90",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/altreturn_4.f90",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/intrinsic_actual_4.f90",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/extended_char_comparison_1.f",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/bom_UTF16-BE.f90",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/data_implied_do_1.f90",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/alloc_comp_default_init_2.f90",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/bom_error.f90",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/string_0xfe_0xff_1.f90",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/achar_2.f90",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/bom_UTF16-LE.f90",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/altreturn_5.f90",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/int_1.f90",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/initialization_12.f90",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gfortran.dg/g77/19981216-0.f",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/g++.old-deja/g++.mike/net48.C",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/g++.old-deja/g++.oliva/thunk1.C",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/g++.old-deja/g++.other/friend7.C",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/g++.old-deja/g++.other/friend6.C",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/g++.old-deja/g++.other/crash41.C",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gnat.dg/array13.adb",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gcc.c-torture/execute/20000227-1.c",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/g++.dg/parse/condexpr1.C",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/g++.dg/ext/offsetof1.C",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/g++.dg/other/default4.C",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/g++.dg/lookup/using13.C",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/go.test/test/bench/shootout/mandelbrot.txt",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gcc.dg/cpp/utf8-5byte-1.c",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/gcc/testsuite/gcc.dg/cpp/strify2.c",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/sun/reflect/Reflection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/sun/reflect/annotation/AnnotationInvocationHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/sun/reflect/annotation/EnumConstantNotPresentExceptionProxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/sun/reflect/annotation/AnnotationType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/sun/reflect/annotation/AnnotationParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/sun/reflect/annotation/ExceptionProxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/sun/reflect/misc/ReflectUtil$MustBeNull.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/sun/reflect/misc/ReflectUtil.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/sun/awt/CausedFocusEvent$Cause.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/sun/awt/CausedFocusEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/sun/misc/Unsafe.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/sun/misc/Service.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/sun/misc/ServiceConfigurationError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activity/InvalidActivityException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activity/ActivityRequiredException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activity/ActivityCompletedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/QueryEval.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/ListenerNotFoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/InstanceAlreadyExistsException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanServerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanServerDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/InstanceNotFoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanParameterInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/InvalidApplicationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanTrustPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/IntrospectionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/JMX.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/QueryExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/ValueExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Query$InstanceOfQueryExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/DynamicMBean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/NotificationBroadcasterSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanRegistration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanNotificationInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Query$NumericValueExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/AttributeChangeNotification.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanServerInvocationHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Query$BooleanValueExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanServerConnection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Descriptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/BadStringOperationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/RuntimeMBeanException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/InvalidAttributeValueException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanRegistrationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanFeatureInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Query$MatchQueryExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/NotificationBroadcaster.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Query$NotQueryExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/NotificationListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Query$AndQueryExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/ObjectName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/DescriptorAccess.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/NotificationFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanAttributeInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Notification.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/DefaultLoaderRepository.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/NotificationEmitter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/OperationsException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Query$BinaryOpValueExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanConstructorInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanServerPermission$MBeanServerPermissionCollection$MBeanServerPermissionEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Query$OrQueryExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Query$BinaryRelQueryExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanServerDelegateMBean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/PersistentMBean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Query$BetweenQueryExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Query$InQueryExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanServerBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanServerPermission$MBeanServerPermissionCollection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanPermission$NameHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/ObjectInstance.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/AttributeNotFoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanServerPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/AttributeValueExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/JMRuntimeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Query.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanServer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/AttributeChangeNotificationFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/JMException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/NotificationBroadcasterSupport$DispatchTask.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/ServiceNotFoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MalformedObjectNameException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/DescriptorRead.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/BadBinaryOpValueExpException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/AttributeList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/StringValueExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Query$ClassAttributeValueExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/ReflectionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanOperationInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/BadAttributeValueExpException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/RuntimeOperationsException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/RuntimeErrorException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MBeanServerNotification.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/NotificationFilterSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/StandardMBean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Attribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/MXBean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/Query$QualifiedAttributeValueExp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/NotCompliantMBeanException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/loading/ClassLoaderRepository.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/remote/TargetedNotification.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/remote/NotificationResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/remote/rmi/RMIConnection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/remote/rmi/RMIServer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/TabularDataSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/OpenMBeanAttributeInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/KeyAlreadyExistsException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/OpenMBeanAttributeInfoSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/TabularData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/InvalidOpenTypeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/OpenMBeanConstructorInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/OpenMBeanParameterInfoSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/OpenMBeanInfoSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/InvalidKeyException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/CompositeType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/CompositeData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/OpenMBeanOperationInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/CompositeDataSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/OpenMBeanConstructorInfoSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/TabularType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/OpenMBeanInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/OpenMBeanOperationInfoSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/SimpleType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/OpenDataException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/CompositeDataInvocationHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/OpenType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/OpenMBeanParameterInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/management/openmbean/ArrayType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleEditableText.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleTextSequence.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleTableModelChange.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleExtendedText.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleRelationSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleBundle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleExtendedTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleExtendedComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleHyperlink.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleKeyBinding.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleAttributeSequence.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleText.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleStateSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleRelation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleRole.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleHypertext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleStreamable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleResourceBundle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleState.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/Accessible.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/accessibility/AccessibleSelection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/ServiceUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/MultiDocPrintJob.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/ServiceUIFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/StreamPrintService.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/DocFlavor$BYTE_ARRAY.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/DocFlavor$URL.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/DocFlavor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/Doc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/PrintException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/SimpleDoc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/FlavorException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/DocFlavor$STRING.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/AttributeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/CancelablePrintJob.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/DocFlavor$READER.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/DocFlavor$SERVICE_FORMATTED.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/DocFlavor$INPUT_STREAM.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/StreamPrintServiceFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/MultiDoc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/URIException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/MultiDocPrintService.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/DocPrintJob.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/PrintServiceLookup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/DocFlavor$CHAR_ARRAY.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/PrintService.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/event/PrintJobAttributeEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/event/PrintJobAttributeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/event/PrintServiceAttributeEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/event/PrintEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/event/PrintJobEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/event/PrintServiceAttributeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/event/PrintJobAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/event/PrintJobListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/AttributeSetUtilities$SynchronizedDocAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/HashPrintServiceAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/SupportedValuesAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/AttributeSetUtilities$UnmodifiableAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/Size2DSyntax.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/AttributeSetUtilities$SynchronizedPrintRequestAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/AttributeSetUtilities$SynchronizedAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/UnmodifiableSetException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/SetOfIntegerSyntax.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/PrintServiceAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/HashPrintJobAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/PrintRequestAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/ResolutionSyntax.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/URISyntax.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/AttributeSetUtilities$UnmodifiablePrintJobAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/PrintJobAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/AttributeSetUtilities$UnmodifiableDocAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/HashDocAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/EnumSyntax.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/AttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/PrintJobAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/DocAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/IntegerSyntax.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/HashAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/TextSyntax.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/DocAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/HashPrintRequestAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/AttributeSetUtilities.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/PrintRequestAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/DateTimeSyntax.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/AttributeSetUtilities$UnmodifiablePrintRequestAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/AttributeSetUtilities$SynchronizedPrintServiceAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/PrintServiceAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/SetOfIntegerSyntax$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/Attribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/AttributeSetUtilities$SynchronizedPrintJobAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/AttributeSetUtilities$UnmodifiablePrintServiceAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobKOctetsSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PrinterIsAcceptingJobs.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/Media.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/MediaSize$JIS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/CopiesSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/Copies.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/NumberUpSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/ColorSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/Fidelity.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobMediaSheetsCompleted.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/Compression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobPrioritySupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/Destination.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/MediaPrintableArea.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobStateReasons.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/Chromaticity.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/Sides.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PrinterMoreInfoManufacturer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/MultipleDocumentHandling.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/ReferenceUriSchemesSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PrinterLocation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/DateTimeAtCompleted.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobImpressionsSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/MediaSizeName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PagesPerMinute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/SheetCollate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobHoldUntil.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobImpressionsCompleted.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/NumberUp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/DateTimeAtCreation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/MediaSize.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/NumberOfInterveningJobs.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobState.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PrinterStateReasons.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/Severity.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PrinterInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobMessageFromOperator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/RequestingUserName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/Finishings.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/MediaSize$Other.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PresentationDirection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PDLOverrideSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PrinterURI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/OrientationRequested.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PrinterMakeAndModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/MediaSize$Engineering.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PrinterMessageFromOperator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/MediaSize$ISO.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobSheets.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobOriginatingUserName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PrinterStateReason.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/MediaName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobPriority.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PrinterState.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobStateReason.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PrintQuality.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PageRanges.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/QueuedJobCount.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/MediaSize$NA.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PagesPerMinuteColor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobMediaSheets.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobKOctetsProcessed.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/NumberOfDocuments.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobMediaSheetsSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobKOctets.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/MediaTray.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/DocumentName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/DateTimeAtProcessing.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PrinterMoreInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/JobImpressions.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PrinterName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/PrinterResolution.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/print/attribute/standard/OutputDeviceAssigned.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/LayoutFocusTraversalPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JDialog$AccessibleJDialog.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JDesktopPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ScrollPaneLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/OverlayLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JOptionPane$ValuePropertyHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/AbstractAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JComboBox.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Spring$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JMenu.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JToolTip$AccessibleJToolTip.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTable$DoubleCellRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JList$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JComboBox$AccessibleJComboBox.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JRadioButton$AccessibleJRadioButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JEditorPane$PageLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTable$TableTextField.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/GrayFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JToolBar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SpinnerNumberModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SpringLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/RepaintManager$RepaintWorkerEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Spring.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JSeparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTable$NumberCellRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JSpinner$NumberEditorFormatter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/AbstractSpinnerModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/CellRendererPane$AccessibleCellRendererPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Spring$SimpleSpring.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JEditorPane$PageStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JEditorPane$AccessibleJEditorPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DefaultCellEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JMenuItem.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JColorChooser$AccessibleJColorChooser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/UIManager$MultiplexUIDefaults.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JPanel$AccessibleJPanel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/UIDefaults$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JMenuItem$AccessibleJMenuItem.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DefaultFocusManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DefaultSingleSelectionModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JSpinner$DateEditorFormatter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ButtonGroup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JButton$AccessibleJButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JComponent$AccessibleJComponent$AccessibleContainerHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ComboBoxModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JFrame.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Box$Filler$AccessibleBoxFiller.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JEditorPane$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JOptionPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/UIDefaults$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JComponent$ActionListenerProxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/UIDefaults$ProxyLazyValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JList$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Timer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JCheckBoxMenuItem.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JSplitPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ComponentInputMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DefaultCellEditor$JCheckBoxDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Box.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/TransferHandler$PropertyTransferable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/InputVerifier.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JSplitPane$AccessibleJSplitPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JWindow.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/UIDefaults$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JDialog.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ListModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ProgressMonitorInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ImageIcon$AccessibleImageIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/TransferHandler$TransferAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/LookAndFeel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JSpinner.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Scrollable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTable$AccessibleJTable$AccessibleJTableCell.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JToolBar$DefaultToolBarLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ListCellRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JEditorPane$PlainEditorKit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTabbedPane$Page.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/InternalFrameFocusTraversalPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JComboBox$KeySelectionManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JComboBox$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/RootPaneContainer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JPasswordField$AccessibleJPasswordField.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ToolTipManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JDesktopPane$AccessibleJDesktopPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SortingFocusTraversalPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/UIManager$MultiplexUIDefaults$MultiplexEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JOptionPane$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/MenuElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/UIDefaults$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ButtonModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JMenu$MenuChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/KeyStroke.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JLabel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SwingUtilities$OwnerFrame.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/FocusManager$WrappingFocusManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Spring$MinusSpring.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DefaultButtonModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JPopupMenu$ActionChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DebugGraphics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JToolBar$Separator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTabbedPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SizeSequence.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DefaultCellEditor$JComboBoxDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SpinnerModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTable$AccessibleJTable$AccessibleJTableHeaderCell.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/RepaintManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JToggleButton$ToggleButtonModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JProgressBar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ProgressMonitor$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SpringLayout$DeferredHeight.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JEditorPane$EditorKitMapping.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DefaultComboBoxModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Popup$LightweightPopup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JProgressBar$AccessibleJProgressBar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/TransferHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTable$AccessibleJTable$AccessibleJTableModelChange.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JPopupMenu$AccessibleJPopupMenu.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JRadioButtonMenuItem.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SpringLayout$DeferredSpring.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JMenu$AccessibleJMenu.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SingleSelectionModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JColorChooser$DefaultOKCancelListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/BorderFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JPopupMenu.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JProgressBar$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTable$IconCellRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JFormattedTextField$AbstractFormatterFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTree$TreeSelectionRedirector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DefaultBoundedRangeModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Popup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTextArea$AccessibleJTextArea.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DefaultListCellRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SwingUtilities.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JComponent$AccessibleJComponent$AccessibleFocusHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JScrollBar$AccessibleJScrollBar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JPopupMenu$Separator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTree.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/PopupFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ActionMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JOptionPane$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTextArea.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JScrollPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/CellRendererPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/LookAndFeel$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTable$FloatCellRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ProgressMonitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/BoundedRangeModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JInternalFrame$JDesktopIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JCheckBoxMenuItem$AccessibleJCheckBoxMenuItem.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Spring$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JEditorPane$JEditorPaneAccessibleHypertextSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DefaultListCellRenderer$UIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/UIDefaults.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ListSelectionModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JSlider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/UIDefaults$LazyInputMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/KeyboardManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JList$AccessibleJList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DefaultListSelectionModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/UIDefaults$LazyValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DefaultCellEditor$JTextFieldDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JRadioButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/AbstractListModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTextField$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Box$Filler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JCheckBox.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SizeRequirements.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JFileChooser$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/AbstractButton$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JRadioButtonMenuItem$AccessibleJRadioButtonMenuItem.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JOptionPane$AccessibleJOptionPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JFileChooser$AccessibleJFileChooser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JScrollPane$AccessibleJScrollPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ComboBoxEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JScrollPane$ScrollBar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTree$AccessibleJTree$AccessibleJTreeNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JList$ListListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DefaultListModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JMenuBar$AccessibleJMenuBar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JViewport$ViewListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/UIDefaults$ActiveValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JViewport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JMenuBar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JEditorPane$AccessibleJEditorPaneHTML.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTree$TreeModelHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JSpinner$NumberEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ScrollPaneLayout$UIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JScrollBar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JCheckBox$AccessibleJCheckBox.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTree$DynamicUtilTreeNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTabbedPane$AccessibleJTabbedPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Icon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JToolTip.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JPopupMenu$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTable$DateCellRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTable$TableColumnPropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/InputMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JInternalFrame$AccessibleJInternalFrame.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JWindow$AccessibleJWindow.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JRootPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ToolTipManager$stillInsideTimerAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Spring$MaxSpring.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JSlider$AccessibleJSlider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/AbstractCellEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JRootPane$AccessibleJRootPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTextField$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ImageIcon$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JColorChooser$DefaultResetListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JEditorPane$JEditorPaneAccessibleHypertextSupport$HTMLLink.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JSeparator$AccessibleJSeparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JSpinner$ListEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JSlider$LabelUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JList$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SpinnerDateModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JLabel$AccessibleJLabel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Action.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JMenu$WinListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ScrollPaneConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/TransferHandler$SwingDragGestureRecognizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/UnsupportedLookAndFeelException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/AbstractButton$EventHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/AbstractButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SwingConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTable$AccessibleJTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTree$AccessibleJTree.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JScrollBar$ScrollBarChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ViewportLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/FocusManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JApplet$AccessibleJApplet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Renderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JSpinner$ModelListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/RepaintManager$RepaintWorker.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/MutableComboBoxModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JFormattedTextField.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/WindowConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/CompatibilityFocusTraversalPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JRootPane$RootLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JViewport$AccessibleJViewport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTable$AccessibleJTable$AccessibleTableHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Spring$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/LayoutFocusTraversalPolicy$LayoutComparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JComponent$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/AbstractButton$AccessibleAbstractButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JSpinner$DateEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JFileChooser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/BoxLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/CellEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JInternalFrame$JDesktopIcon$AccessibleJDesktopIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JToolBar$AccessibleJToolBar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JInternalFrame.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JPanel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JSlider$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JComponent$AccessibleJComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTextPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ProgressMonitor$TimerListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ToolTipManager$insideTimerAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JToggleButton$AccessibleJToggleButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTextField.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JEditorPane$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Popup$JWindowPopup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DefaultDesktopManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTree$EmptySelectionModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JToggleButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JApplet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Timer$Task.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/UIManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JLayeredPane$AccessibleJLayeredPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JEditorPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Timer$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JMenuItem$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SpringLayout$DeferredDimension.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JMenu$ActionChangedListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DesktopManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Box$AccessibleBox.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JColorChooser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JPopupMenu$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SpringLayout$Constraints.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/DefaultCellEditor$EditorDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/AbstractButton$ButtonChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JComboBox$DefaultKeySelectionManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JFrame$AccessibleJFrame.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTable$BooleanCellRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/UIManager$LookAndFeelInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ImageIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JList$AccessibleJList$AccessibleJListChild.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTextField$AccessibleJTextField.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JLayeredPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JPasswordField.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SpringLayout$DeferredWidth.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/MenuSelectionManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/Spring$AddSpring.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JFormattedTextField$AbstractFormatter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JSpinner$DefaultEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/ToolTipManager$outsideTimerAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/SpinnerListModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/TransferHandler$SwingDragHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/JTabbedPane$ModelListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/TreeCellRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/TreeSelectionModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/DefaultTreeSelectionModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/DefaultTreeCellEditor$EditorContainer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/DefaultTreeModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/MutableTreeNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/DefaultTreeCellRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/TreeModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/DefaultTreeSelectionModel$PathPlaceHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/DefaultMutableTreeNode$BreadthFirstEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/TreeNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/RowMapper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/TreeCellEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/FixedHeightLayoutCache.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/VariableHeightLayoutCache$NodeRecord.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/VariableHeightLayoutCache.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/DefaultMutableTreeNode$PreorderEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/DefaultMutableTreeNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/TreePath.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/AbstractLayoutCache.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/DefaultTreeCellEditor$DefaultTextField.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/ExpandVetoException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/DefaultMutableTreeNode$PostorderEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/DefaultTreeCellEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/FixedHeightLayoutCache$NodeRecord.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/tree/AbstractLayoutCache$NodeDimensions.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/undo/CannotRedoException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/undo/CompoundEdit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/undo/StateEdit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/undo/UndoManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/undo/UndoableEdit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/undo/CannotUndoException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/undo/UndoableEditSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/undo/StateEditable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/undo/AbstractUndoableEdit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/filechooser/FileFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/filechooser/UnixFileSystemView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/filechooser/FileSystemView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/filechooser/FileView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/table/DefaultTableModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/table/TableColumnModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/table/JTableHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/table/TableModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/table/TableCellEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/table/DefaultTableCellRenderer$UIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/table/TableColumn.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/table/DefaultTableCellRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/table/JTableHeader$AccessibleJTableHeader$AccessibleJTableHeaderEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/table/TableCellRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/table/AbstractTableModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/table/DefaultTableColumnModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/table/JTableHeader$AccessibleJTableHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/JTextComponent$KeymapActionMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$SelectionNextWordAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/Caret.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/GlyphView$GlyphPainter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StringContent$InsertUndo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyleContext$NamedStyle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AbstractDocument$BidiElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/PlainDocument.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/FlowView$FlowStrategy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/LayeredHighlighter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/GapContent$GapContentPosition.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultCaret$PropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AbstractDocument$AbstractElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/GlyphView$J2DGlyphPainter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyleContext$SmallAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/TabableView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$SelectionBeginAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$InsertContentAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StringContent$Mark.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/Highlighter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultCaret.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AbstractDocument$ElementEdit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$DeletePrevCharAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/JTextComponent$DefaultTransferHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AbstractDocument$AttributeContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AbstractDocument$DefaultDocumentEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$SelectionEndAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/PlainView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$BeepAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AbstractDocument$Bypass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AsyncBoxView$FlushTask.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/GapContent$Mark.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/ParagraphView$Row.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/MutableAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$SelectAllAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$BackwardAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/ParagraphView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyledEditorKit$StyledTextAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/ZoneView$Zone.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$CutAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultStyledDocument.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/ViewFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$SelectionBeginWordAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyledEditorKit$StyledViewFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultFormatter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/BoxView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$EndAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/PasswordView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$SelectionDownAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultStyledDocument$ElementBuffer$Edit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/NavigationFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AbstractWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/JTextComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyledEditorKit$FontFamilyAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/Utilities.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$InsertBreakAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$NextWordAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$DeleteNextCharAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyleConstants$ColorConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StringContent$UndoPosRef.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$PasteAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AbstractDocument.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$BeginWordAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/Keymap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/FieldView$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StringContent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/GapContent$InsertUndo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/LayeredHighlighter$LayerPainter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/JTextComponent$AccessibleJTextComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AbstractDocument$BidiRootElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StringContent$StickyPosition.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/FlowView$LogicalView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$SelectionBeginLineAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/ComponentView$Interceptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DocumentFilter$FilterBypass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/LayoutQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$CopyAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$EndWordAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultStyledDocument$ElementSpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/NumberFormatter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/TabExpander.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/CompositeView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StringContent$RemoveUndo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyledEditorKit$FontSizeAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/Segment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AttributeSet$FontAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/NavigationFilter$FilterBypass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultFormatterFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AbstractDocument$LeafElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/Document.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyledEditorKit$ForegroundAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultCaret$BlinkTimerListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/TextAction$HorizontalMovementAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/ElementIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/Position.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AttributeSet$ColorAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$UpAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/TabSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/SimpleAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/GlyphView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$SelectionBackwardAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DateFormatter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/MaskFormatter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/InternationalFormatter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultStyledDocument$ElementBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/EmptyAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultTextUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/TableView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyledEditorKit$UnderlineAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$SelectionEndLineAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$SelectWordAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/TabStop.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$ForwardAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyledEditorKit$ItalicAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultHighlighter$DefaultHighlightPainter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/Highlighter$HighlightPainter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/GapContent$UndoPosRef.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/Element.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/ZoneView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/WrappedPlainView$WrappedLineCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/TableView$TableCell.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/Position$Bias.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$BeginLineAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyledEditorKit$CaretTracker.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DocumentFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/JTextComponent$KeyBinding.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/ElementIterator$ElementRef.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultCaret$Bypass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/FieldView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/BadLocationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AsyncBoxView$ChildState.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$SelectionUpAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/GlyphView$DefaultGlyphPainter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$InsertTabAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$SelectionForwardAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyledEditorKit$BoldAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyleContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$DefaultKeyTypedAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$BeginAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$SelectionEndWordAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyleConstants$ParagraphConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/ComponentView$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/JTextComponent$DefaultKeymap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/FlowView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultStyledDocument$StyleChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultCaret$DocumentHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyleContext$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyleConstants$CharacterConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/View.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$SelectLineAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultHighlighter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultHighlighter$HighlightEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/EditorKit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/EmptyAttributeSet$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyledEditorKit$AlignmentAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultHighlighter$LayerHighlightEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$PreviousWordAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$EndLineAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AsyncBoxView$ChildLocator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/TableView$TableRow.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/JTextComponent$KeymapWrapper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyleContext$SimpleFontSpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/IconView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultStyledDocument$SectionElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/TextAction$VerticalMovementAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyleConstants$FontConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AbstractDocument$BranchElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/ComponentView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyleConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AttributeSet$ParagraphAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/WrappedPlainView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/LabelView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AbstractDocument$Content.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$SelectionPreviousWordAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyledEditorKit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AsyncBoxView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/GapContent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/Highlighter$Highlight.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/GapContent$UndoRemove.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/TextAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/ChangedCharSetException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/StyledDocument.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/AttributeSet$CharacterAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/Style.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/WrappedPlainView$WrappedLine.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultFormatter$FormatterDocumentFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultEditorKit$DownAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/DefaultStyledDocument$AttributeUndoableEdit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/FrameView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/MultiAttributeSet$MultiNameEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$HiddenAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/FormView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/StyleSheet$CSSStyleSheetParserCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/ResetableToggleButtonModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/ResetablePlainDocument.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$ParagraphAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$BaseAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/InlineView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$Iterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/FormView$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/ImageView$Observer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLEditorKit$LinkController.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/FormView$SubmitThread.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/MinimalHTMLWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTML$Attribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/ParagraphView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/CSSParser$CSSParserCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLEditorKit$InsertHTMLTextAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/FrameSetView$FrameSetRow.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/TableView$RowView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/FormSubmitEvent$MethodType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$LinkAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLEditorKit$ParserCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLFrameHyperlinkEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$SpecialAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/FrameSetView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/TableView$CellView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$FormTagAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$CharacterAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/BRView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$MapAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/ListView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/CSSBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLEditorKit$HTMLTextAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/CSS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/StyleSheet$CSSStyle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$BlockElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTML$Tag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLEditorKit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$HeadAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/StyleSheet$ListPainter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/ImageView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/TableView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/BlockView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$StyleAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$RunElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/ViewAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$IsindexAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$PreAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/ObjectView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/MultiAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/MultiStyle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HRuleView$Beginning.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$BlockAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/SelectListModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HRuleView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/BlockView$PositionInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/ImageView$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$LeafIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$MetaAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLEditorKit$HTMLFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/CSS$Attribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/SelectComboBoxModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/FormView$MouseEventListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$TitleAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/ResetableModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/FormSubmitEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/StyleSheet$BoxPainter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTML.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$FormAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/CSSParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$ConvertAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$TagAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/Option.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLDocument$HTMLReader$AreaAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/StyleSheet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/NullView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTML$UnknownTag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/HTMLEditorKit$Parser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/parser/Element$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/parser/DTDConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/parser/Parser$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/parser/DocumentParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/parser/Entity.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/parser/Element.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/parser/TagElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/parser/ParserDelegator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/parser/DocumentParser$gnuParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/parser/ParserDelegator$gnuParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/parser/AttributeList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/parser/ContentModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/parser/DTD.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/parser/AttributeList$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/parser/Entity$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/html/parser/Parser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/rtf/RTFScanner.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/rtf/TextToken.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/rtf/RTFParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/rtf/RTFEditorKit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/rtf/Token.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/rtf/ControlWordToken.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/text/rtf/RTFParseException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/TableHeaderUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/ColorChooserUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/BorderUIResource$BevelBorderUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/ColorUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/BorderUIResource$TitledBorderUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/SplitPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/ActionMapUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/PanelUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/InputMapUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/ToolBarUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/BorderUIResource$EtchedBorderUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/PopupMenuUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/IconUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/ProgressBarUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/ScrollBarUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/ToolTipUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/BorderUIResource$EmptyBorderUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/DesktopPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/SliderUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/ViewportUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/SpinnerUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/FileChooserUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/MenuBarUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/InternalFrameUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/RootPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/TextUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/DesktopIconUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/ComponentInputMapUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/ListUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/DimensionUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/TreeUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/OptionPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/ButtonUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/TableUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/ComponentUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/BorderUIResource$MatteBorderUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/UIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/BorderUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/InsetsUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/FontUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/BorderUIResource$LineBorderUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/BorderUIResource$CompoundBorderUIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/SeparatorUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/LabelUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/MenuItemUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/TabbedPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/ComboBoxUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/ScrollPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/synth/SynthLookAndFeel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/synth/SynthStyleFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/synth/SynthGraphicsUtils.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/synth/SynthStyle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/synth/SynthContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/synth/SynthConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/synth/ColorType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/synth/Region.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/synth/SynthPainter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$InternalFrameCloseIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$HorizontalSliderThumbIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$FileRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalToolBarUI$MetalRolloverListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalMenuBarUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$FilterComboBoxRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalComboBoxEditor$MetalComboBoxEditorBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders$PopupMenuBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders$PaletteBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$TreeControlIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalTheme.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalRootPaneUI$MetalTitlePane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders$TableHeaderBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$TreeHardDriveIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalUtils.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$InternalFrameAltMaximizeIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalTreeUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$RadioButtonIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders$MenuBarBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalToolBarUI$MetalContainerListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$DirectoryComboBoxModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$CheckBoxMenuItemIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalProgressBarUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalLookAndFeel$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalButtonUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalLabelUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$InternalFrameMaximizeIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders$RolloverButtonBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalRootPaneUI$MetalTitlePane$CloseAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$FileChooserListViewIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalCheckBoxIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalRootPaneUI$MetalTitlePane$MetalTitlePaneLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$VerticalMidLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalComboBoxUI$MetalComboPopup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders$ToggleButtonBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalComboBoxEditor$UIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$FilterComboBoxModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$PaletteCloseIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$InternalFrameDefaultMenuIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalRootPaneUI$MetalTitlePane$PaneButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalToolBarUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$TreeFolderIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalComboBoxUI$MetalComboBoxLayoutManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders$RolloverMarginBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$DirectoryComboBoxRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalInternalFrameUI$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$VerticalSliderThumbIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalTextFieldUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$ListViewActionListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalDesktopIconUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$FolderIcon16.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalSplitPaneDivider$MetalOneTouchButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$TableClickListener$EditingActionListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalComboBoxEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalTabbedPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$TableFileRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders$DesktopIconBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders$InternalFrameBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalSplitPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalToolBarUI$MetalDockingListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalSliderUI$MetalPropertyListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalInternalFrameTitlePane$MetalInternalFrameTitlePanePropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$TreeComputerIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders$MenuItemBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalComboBoxIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalComboBoxUI$MetalPropertyChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$SingleClickListener$EditingActionListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders$Flush3DBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalRootPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalRootPaneUI$MetalFrameBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$TableClickListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders$TextFieldBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalButtonListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalRootPaneUI$MetalRootLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$FileChooserNewFolderIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$FileIcon16.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalComboBoxButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalRootPaneUI$MetalTitlePane$MouseHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalScrollPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalTreeUI$LineStyleListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalSliderUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalRootPaneUI$MetalTitlePane$IconifyAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$ButtonLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders$ToolBarBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalInternalFrameTitlePane$MetalTitlePaneLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/OceanTheme.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders$OptionDialogBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalInternalFrameUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/DefaultMetalTheme.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalLookAndFeel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalSeparatorUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalScrollBarUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$DirectoryComboBoxAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$TreeLeafIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalSplitPaneDivider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$IndentIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$InternalFrameMinimizeIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalRootPaneUI$MetalTitlePane$MaximizeAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$FileChooserDetailViewIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalPopupMenuSeparatorUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalInternalFrameTitlePane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$FileChooserHomeFolderIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders$ButtonBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalToggleButtonUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$SingleClickListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalBorders$ScrollPaneBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalRadioButtonUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$FileChooserUpFolderIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalComboBoxEditor$EditorTextField.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalComboBoxUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalToolTipUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalScrollButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalTabbedPaneUI$TabbedPaneLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$DetailViewActionListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$MetalFileChooserPropertyChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$RadioButtonMenuItemIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalIconFactory$TreeFloppyDriveIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalScrollBarUI$MetalScrollBarPropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalFileChooserUI$MetalFileChooserSelectionListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/metal/MetalCheckBoxUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiLookAndFeel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiSeparatorUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiMenuItemUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiTableHeaderUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiSpinnerUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiListUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiProgressBarUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiLabelUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiRootPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiButtonUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiToolTipUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiSliderUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiTreeUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiPanelUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiFileChooserUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiScrollBarUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiMenuBarUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiDesktopPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiInternalFrameUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiTabbedPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiOptionPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiComboBoxUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiPopupMenuUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiViewportUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiToolBarUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiDesktopIconUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiTextUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiScrollPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiSplitPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiColorChooserUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/multi/MultiTableUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicToolBarUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicIconFactory$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDesktopPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuItemUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTabbedPaneUI$TabSelectionHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$SelectionModelPropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicLookAndFeel$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$FocusHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuBarUI$FocusAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuUI$ChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTabbedPaneUI$MouseHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicIconFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSliderUI$ComponentHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$ComponentHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameUI$ComponentHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollBarUI$ScrollListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI$VSBChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicToolBarUI$ToolBarFocusListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI$HSBChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameTitlePane$MoveAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicOptionPaneUI$OptionPaneCloseAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollBarUI$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameUI$ShowSystemMenuAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboPopup$ListMouseMotionHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicButtonListener$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollBarUI$PropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboPopup$PropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollBarUI$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicColorChooserUI$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicColorChooserUI$PreviewListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTabbedPaneUI$ScrollingPanel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicFileChooserUI$DoubleClickListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$KeyHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSpinnerUI$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSliderUI$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboPopup$InvocationMouseHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicFileChooserUI$ChangeToParentDirectoryAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicOptionPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameTitlePane$PaneButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDesktopPaneUI$OpenAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicViewportUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSliderUI$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollBarUI$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$KeyboardHomeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSliderUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicListUI$FocusHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboPopup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicToolBarUI$ToolBarContListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicOptionPaneUI$ButtonActionListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTabbedPaneUI$RequestFocusAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicListUI$PropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSliderUI$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameUI$InternalFrameBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicFileChooserUI$ApproveSelectionAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboBoxUI$FocusHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicBorders$SplitPaneDividerBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSpinnerUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameUI$InternalFrameLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuItemUI$MouseInputHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTabbedPaneUI$RequestFocusForVisibleComponentAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDirectoryModel$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicButtonListener$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTableUI$TableAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTabbedPaneUI$NavigatePageDownAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboBoxEditor$UIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTextUI$RootView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicFileChooserUI$AcceptAllFileFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicFileChooserUI$NewFolderAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicListUI$MouseInputHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicLookAndFeel$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuBarUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSpinnerUI$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicOptionPaneUI$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicOptionPaneUI$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicProgressBarUI$ChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicOptionPaneUI$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboBoxRenderer$UIResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicLookAndFeel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboPopup$ListDataHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuUI$MenuDragMouseHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicToolBarUI$DockingListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollBarUI$TrackListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneDivider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicToolBarUI$ToolBarAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDirectoryModel$DirectoryLoadThread.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicFileChooserUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameTitlePane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$TreeTraverseAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDesktopIconUI$MouseInputHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicFileChooserUI$UpdateAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuItemUI$MenuKeyHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicButtonUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTableUI$KeyHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$TreeHomeAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneDivider$OneTouchAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicToolBarUI$DragWindow.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$KeyboardEndHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSliderUI$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSliderUI$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicProgressBarUI$PropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTabbedPaneUI$TabbedPaneLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicPopupMenuUI$PopupMenuHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicRootPaneUI$DefaultPressAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuBarUI$MouseInputHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameTitlePane$RestoreAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicBorders$ToggleButtonBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicRadioButtonMenuItemUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDirectoryModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTableUI$MouseInputHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSliderUI$ChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSliderUI$ScrollListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuBarUI$ContainerHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicListUI$ListAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$PropertyHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicPopupMenuSeparatorUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDesktopPaneUI$NavigateAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTableUI$PropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicLookAndFeel$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicToolTipUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicProgressBarUI$ComponentHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicFileChooserUI$GoHomeAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$TreeToggleAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicButtonListener$ButtonAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicOptionPaneUI$PropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/SharedUIDefaults.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTextFieldUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameUI$InternalFramePropertyChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTextUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicBorders$FieldBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicRootPaneUI$DefaultReleaseAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTextUI$BasicHighlighter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicColorChooserUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDirectoryModel$DirectoryLoadThread$UpdateSwingRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicColorChooserUI$PropertyHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicPopupMenuUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI$8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSpinnerUI$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicIconFactory$RadioButtonIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicProgressBarUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTabbedPaneUI$ScrollingViewport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicGraphicsUtils.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSpinnerUI$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTabbedPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameTitlePane$PropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicPanelUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuBarUI$PropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboBoxUI$ComboBoxLayoutManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicLookAndFeel$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneDivider$MouseHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$TreeStartEditingAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneDivider$DragController.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicHTML$HTMLRootView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameTitlePane$SystemMenuBar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/DefaultMenuLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicHTML.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicBorders.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicColorChooserUI$TabPaneListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicCheckBoxUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicLookAndFeel$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$NodeDimensionsHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboPopup$ListSelectionHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicListUI$ListSelectionHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTabbedPaneUI$PropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicFileChooserUI$SelectionListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicProgressBarUI$Animator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicButtonListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneDivider$BasicOneTouchButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuItemUI$PropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboBoxUI$ListDataHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTableHeaderUI$MouseInputHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicIconFactory$CheckBoxMenuItemIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicPopupMenuUI$TopWindowListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameTitlePane$CloseAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicPasswordFieldUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuUI$SelectMenuAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDesktopPaneUI$MaximizeAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicToolBarUI$PropertyListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicFileChooserUI$BasicFileView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicIconFactory$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/ComboPopup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$MouseHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTextPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDesktopIconUI$InternalFrameDefaultMenuIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$TreeSelectionHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicLookAndFeel$AudioAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicBorders$MarginBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$TreeCancelEditingAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$TreeIncrementAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameTitlePane$TitlePaneLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSliderUI$FocusHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboBoxUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicProgressBarUI$AncestorHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboBoxUI$PropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameTitlePane$IconifyAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTextUI$Handler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI$ViewportChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$TreeModelHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$KeyboardResizeToggleHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboBoxRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameTitlePane$SizeAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTextUI$BasicCaret.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicPopupMenuUI$KeyboardHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicBorders$ButtonBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicOptionPaneUI$MessageIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollBarUI$ArrowButtonListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboBoxEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneDivider$DividerLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuBarUI$ChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTabbedPaneUI$ScrollingPanel$ScrollingPanelUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$FocusHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollBarUI$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSliderUI$TrackListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollBarUI$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$PropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicPopupMenuUI$NavigateAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicOptionPaneUI$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicIconFactory$CheckBoxIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicOptionPaneUI$ButtonAreaLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$KeyboardDownRightHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicListUI$ListDataHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicListUI$ActionListenerProxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuItemUI$ClickAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameUI$BasicInternalFrameListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuUI$MenuHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicLabelUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicBorders$RadioButtonBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboPopup$ItemHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI$10.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicToolTipUI$PropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollBarUI$ModelListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDesktopPaneUI$MinimizeAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSliderUI$ActionScroller.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameUI$BorderListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$KeyboardUpLeftHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicBorders$MenuBarBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTabbedPaneUI$ScrollingButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI$PropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicFileChooserUI$CancelSelectionAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicToolBarUI$ToolBarDialog.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicLookAndFeel$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicLookAndFeel$PopupHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicToolBarUI$ToolBarBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboPopup$InvocationMouseMotionHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTabbedPaneUI$NavigateAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicBorders$RolloverButtonBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameTitlePane$MaximizeAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicListUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicRootPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTextUI$FocusHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTableHeaderUI$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTableHeaderUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicArrowButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDesktopPaneUI$CloseAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTableUI$FocusHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollBarUI$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$CellEditorHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicBorders$SplitPaneBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicFormattedTextFieldUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboBoxUI$KeyHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTableUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSpinnerUI$DefaultLayoutManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboBoxUI$ItemHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTextAreaUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSliderUI$PropertyChangeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneDivider$VerticalDragController.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI$ViewportContainerListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSeparatorUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$BasicHorizontalLayoutManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicCheckBoxMenuItemUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuUI$MenuKeyHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDesktopIconUI$BoundButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$BasicVerticalLayoutManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicRadioButtonUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicEditorPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSpinnerUI$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicInternalFrameUI$GlassPaneDispatcher.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicToggleButtonUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDesktopIconUI$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDesktopIconUI$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicToolBarSeparatorUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboPopup$InvocationKeyHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI$9.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTabbedPaneUI$FocusHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDesktopIconUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicLookAndFeel$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuItemUI$MenuDragMouseHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollBarUI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicDesktopIconUI$DesktopIconBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuItemUI$ItemHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicLabelUI$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$TreePageAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTabbedPaneUI$NavigatePageUpAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSliderUI$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTabbedPaneUI$TabbedPaneScrollLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicIconFactory$DummyIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicComboPopup$ListMouseHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicToolBarUI$FrameListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$MouseInputHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicMenuUI$MouseInputHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicTreeUI$TreeExpansionHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicSplitPaneUI$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/plaf/basic/BasicScrollPaneUI$MouseWheelHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/AbstractColorChooserPanel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultHSBChooserPanel$ImageScrollListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/ColorSelectionModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultSwatchChooserPanel$MainSwatchPanel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultRGBChooserPanel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultHSBChooserPanel$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultSwatchChooserPanel$RecentPanelLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultSwatchChooserPanel$SwatchPanel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultHSBChooserPanel$RadioStateListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultPreviewPanel$PreviewBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultHSBChooserPanel$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultHSBChooserPanel$MainGradientMouseListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultRGBChooserPanel$SpinnerHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/ColorChooserComponentFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultPreviewPanel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultSwatchChooserPanel$MouseHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultSwatchChooserPanel$MainPanelLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultSwatchChooserPanel$RecentSwatchPanel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultHSBChooserPanel$SliderChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultHSBChooserPanel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultSwatchChooserPanel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultColorSelectionModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/colorchooser/DefaultRGBChooserPanel$SliderHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/border/BevelBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/border/SoftBevelBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/border/Border.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/border/MatteBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/border/CompoundBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/border/EmptyBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/border/AbstractBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/border/EtchedBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/border/TitledBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/border/LineBorder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/ChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/MenuDragMouseEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/TreeExpansionEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/TableModelListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/InternalFrameEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/TreeModelListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/TreeExpansionListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/TableColumnModelEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/EventListenerList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/PopupMenuListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/HyperlinkEvent$EventType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/UndoableEditEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/PopupMenuEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/InternalFrameAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/AncestorEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/DocumentEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/MenuKeyListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/DocumentEvent$ElementChange.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/MouseInputListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/CellEditorListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/MenuEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/MenuKeyEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/CaretEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/InternalFrameListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/DocumentListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/AncestorListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/ListDataEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/MenuListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/ListSelectionEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/DocumentEvent$EventType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/SwingPropertyChangeSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/HyperlinkListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/MouseInputAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/CaretListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/HyperlinkEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/MenuDragMouseListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/TreeWillExpandListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/TableColumnModelListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/TreeModelEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/UndoableEditListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/ChangeEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/ListSelectionListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/TreeSelectionEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/TreeSelectionListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/TableModelEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/swing/event/ListDataListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/rmi/PortableRemoteObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/rmi/ssl/SslRMIClientSocketFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/rmi/ssl/SslRMIServerSocketFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/rmi/CORBA/ValueHandlerMultiFormat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/rmi/CORBA/Stub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/rmi/CORBA/ClassDesc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/rmi/CORBA/StubDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/rmi/CORBA/Util.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/rmi/CORBA/ValueHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/rmi/CORBA/Tie.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/rmi/CORBA/PortableRemoteObjectDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/rmi/CORBA/UtilDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/DataHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/MimeTypeParseException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/MimetypesFileTypeMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/FileDataSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/DataHandler$DataContentHandlerWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/CommandMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/URLDataSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/DataSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/CommandInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/FileTypeMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/MailcapCommandMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/ActivationDataFlavor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/UnsupportedDataTypeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/CommandObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/DataContentHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/DataSourceDataContentHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/MimeType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/MimeTypeParameterList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/ObjectDataContentHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/DataContentHandlerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/DataHandlerDataSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/activation/MimeTypeParameterList$IteratorEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/IIOImage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageIO$WriterSuffixFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageIO$WriterFormatFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageTypeSpecifier.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageIO.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/IIOException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageIO$WriterMIMETypeFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/IIOParamController.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageIO$ReaderMIMETypeFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageWriteParam.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageIO$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageIO$TranscoderFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageReadParam.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageIO$ReaderFormatFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageIO$ReaderObjectFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageTranscoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageIO$WriterObjectFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/IIOParam.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageIO$ReaderSuffixFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageIO$ImageWriterIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/ImageIO$ImageReaderIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOMetadataNode$IIONamedNodeMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOMetadataFormatImpl$IIOMetadataNodeAttrBounded.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOMetadataFormatImpl$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOMetadataFormatImpl$NodeObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOMetadataController.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOMetadataFormatImpl$NodeObjectBounded.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOMetadataFormat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOMetadataFormatImpl$IIOMetadataNodeAttrList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOMetadataFormatImpl$NodeObjectArray.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOMetadataNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOInvalidTreeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOMetadataNode$IIONodeList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOMetadataFormatImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOMetadataFormatImpl$IIOMetadataNodeAttr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOMetadata.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOMetadataFormatImpl$IIOMetadataNodeAttrEnumerated.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/metadata/IIOMetadataFormatImpl$NodeObjectEnumerated.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/spi/IIOServiceProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/spi/ServiceRegistry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/spi/ImageReaderSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/spi/ImageTranscoderSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/spi/ImageInputStreamSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/spi/RegisterableService.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/spi/ServiceRegistry$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/spi/ServiceRegistry$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/spi/IIORegistry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/spi/ImageOutputStreamSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/spi/ServiceRegistry$Filter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/spi/ImageWriterSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/spi/ImageReaderWriterSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/plugins/jpeg/JPEGQTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/plugins/jpeg/JPEGHuffmanTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/plugins/jpeg/JPEGImageWriteParam.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/plugins/jpeg/JPEGImageReadParam.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/plugins/bmp/BMPImageWriteParam.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/stream/ImageInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/stream/FileCacheImageInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/stream/ImageOutputStreamImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/stream/FileImageOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/stream/ImageInputStreamImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/stream/MemoryCacheImageOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/stream/FileImageInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/stream/IIOByteBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/stream/MemoryCacheImageInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/stream/ImageOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/stream/FileCacheImageOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/event/IIOReadWarningListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/event/IIOWriteWarningListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/event/IIOReadUpdateListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/event/IIOWriteProgressListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/imageio/event/IIOReadProgressListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/XMLConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/validation/TypeInfoProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/validation/SchemaFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/validation/ValidatorHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/validation/SchemaFactoryLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/validation/Schema.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/validation/Validator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/xpath/XPathConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/xpath/XPathFactoryConfigurationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/xpath/XPath.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/xpath/XPathVariableResolver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/xpath/XPathException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/xpath/XPathFunctionResolver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/xpath/XPathExpressionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/xpath/XPathFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/xpath/XPathFunctionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/xpath/XPathFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/xpath/XPathExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/datatype/DatatypeConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/datatype/DatatypeConfigurationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/datatype/XMLGregorianCalendar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/datatype/Duration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/datatype/DatatypeConstants$Field.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/datatype/DatatypeFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/EventFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/StreamFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/XMLResolver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/XMLEventWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/XMLOutputFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/XMLEventFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/Location.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/XMLInputFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/XMLStreamWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/FactoryConfigurationError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/XMLStreamException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/XMLEventReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/XMLReporter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/XMLStreamReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/XMLStreamConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/events/EntityDeclaration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/events/Namespace.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/events/EntityReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/events/Comment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/events/StartElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/events/EndDocument.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/events/NotationDeclaration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/events/EndElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/events/XMLEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/events/ProcessingInstruction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/events/Characters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/events/DTD.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/events/StartDocument.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/events/Attribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/util/StreamReaderDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/util/XMLEventConsumer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/util/EventReaderDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/stream/util/XMLEventAllocator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/Result.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/Transformer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/TransformerException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/Templates.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/URIResolver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/TransformerConfigurationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/Source.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/TransformerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/TransformerFactoryConfigurationError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/SourceLocator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/OutputKeys.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/ErrorListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/dom/DOMLocator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/dom/DOMResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/dom/DOMSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/stream/StreamSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/stream/StreamResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/sax/SAXSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/sax/SAXResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/sax/TransformerHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/sax/TemplatesHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/transform/sax/SAXTransformerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/parsers/ParserConfigurationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/parsers/DocumentBuilderFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/parsers/SAXParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/parsers/FactoryConfigurationError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/parsers/DocumentBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/parsers/SAXParserFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/namespace/QName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/xml/namespace/NamespaceContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/Refreshable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/Subject$SecureSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/DestroyFailedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/PrivateCredentialPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/Policy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/Subject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/SubjectDomainCombiner.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/RefreshFailedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/PrivateCredentialPermission$CredOwner.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/Destroyable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/AuthPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/login/AccountLockedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/login/CredentialNotFoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/login/NullConfiguration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/login/Configuration$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/login/LoginException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/login/AccountNotFoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/login/AppConfigurationEntry$LoginModuleControlFlag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/login/AccountException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/login/AppConfigurationEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/login/AccountExpiredException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/login/CredentialException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/login/Configuration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/login/LoginContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/login/FailedLoginException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/login/CredentialExpiredException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/callback/NameCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/callback/CallbackHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/callback/UnsupportedCallbackException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/callback/Callback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/callback/ConfirmationCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/callback/LanguageCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/callback/TextOutputCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/callback/TextInputCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/callback/PasswordCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/callback/ChoiceCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/spi/LoginModule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/x500/X500PrivateCredential.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/x500/X500Principal.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/kerberos/KerberosTicket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/kerberos/DelegationPermission$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/kerberos/KerberosKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/kerberos/ServicePermission$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/kerberos/DelegationPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/kerberos/ServicePermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/kerberos/KerberosPrincipal.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/auth/kerberos/KeyImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/sasl/SaslClientFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/sasl/AuthorizeCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/sasl/RealmCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/sasl/RealmChoiceCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/sasl/SaslException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/sasl/SaslClient.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/sasl/AuthenticationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/sasl/SaslServer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/sasl/SaslServerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/sasl/Sasl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/cert/X509CertBridge.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/cert/Certificate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/cert/CertificateExpiredException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/cert/X509Certificate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/cert/CertificateNotYetValidException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/cert/CertificateParsingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/cert/CertificateException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/security/cert/CertificateEncodingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/CipherInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/ExemptionMechanismSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/NullCipherImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/ExemptionMechanismException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/EncryptedPrivateKeyInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/KeyGeneratorSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/CipherSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/Cipher.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/IllegalBlockSizeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/NoSuchPaddingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/SecretKeyFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/SealedObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/Mac.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/SecretKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/ShortBufferException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/KeyAgreement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/MacSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/CipherOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/KeyAgreementSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/KeyGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/BadPaddingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/ExemptionMechanism.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/SecretKeyFactorySpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/NullCipher.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/interfaces/DHPrivateKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/interfaces/PBEKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/interfaces/DHKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/interfaces/DHPublicKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/spec/DESKeySpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/spec/SecretKeySpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/spec/PBEParameterSpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/spec/RC2ParameterSpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/spec/IvParameterSpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/spec/DHGenParameterSpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/spec/PBEKeySpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/spec/DHParameterSpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/spec/RC5ParameterSpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/spec/DHPrivateKeySpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/spec/DESedeKeySpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/crypto/spec/DHPublicKeySpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sql/RowSetMetaData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sql/RowSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sql/PooledConnection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sql/RowSetListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sql/DataSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sql/RowSetInternal.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sql/ConnectionEventListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sql/ConnectionEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sql/RowSetWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sql/RowSetEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sql/ConnectionPoolDataSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sql/XAConnection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sql/RowSetReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sql/XADataSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/HeuristicCommitException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/UserTransaction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/NotSupportedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/SystemException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/Status.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/Synchronization.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/TransactionRequiredException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/TransactionManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/InvalidTransactionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/RollbackException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/Transaction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/HeuristicRollbackException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/TransactionRolledbackException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/HeuristicMixedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/xa/XAResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/xa/Xid.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/transaction/xa/XAException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/CompoundControl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/LineListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/Line.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/AudioFileFormat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/DataLine.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/AudioFormat$Encoding.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/DataLine$Info.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/UnsupportedAudioFileException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/LineEvent$Type.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/Line$Info.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/SourceDataLine.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/Mixer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/BooleanControl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/Port$Info.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/CompoundControl$Type.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/EnumControl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/FloatControl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/AudioFileFormat$Type.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/Control$Type.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/LineUnavailableException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/AudioInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/Clip.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/AudioPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/Control.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/ReverbType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/FloatControl$Type.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/AudioInputStream$TargetInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/Mixer$Info.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/Port.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/EnumControl$Type.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/AudioSystem.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/AudioFormat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/TargetDataLine.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/LineEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/BooleanControl$Type.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/spi/AudioFileWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/spi/MixerProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/spi/AudioFileReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/sampled/spi/FormatConversionProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/MidiEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/Track.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/ShortMessage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/MidiSystem.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/ControllerEventListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/Patch.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/Sequence.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/MidiDevice$Info.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/SysexMessage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/Synthesizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/MidiMessage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/Instrument.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/MidiChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/Sequencer$SyncMode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/Soundbank.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/MetaMessage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/MidiFileFormat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/MidiUnavailableException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/InvalidMidiDataException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/MidiDevice.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/Receiver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/VoiceStatus.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/MetaEventListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/Transmitter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/SoundbankResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/Sequencer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/spi/MidiFileReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/spi/SoundbankReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/spi/MidiDeviceProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/sound/midi/spi/MidiFileWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/VanillaSocketFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/VanillaServerSocketFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ServerSocketFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/SocketFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/ManagerFactoryParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLKeyException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/KeyManagerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLEngineResult$Status.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLSocketFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLSessionBindingListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/HostnameVerifier.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/TrustManagerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/KeyManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLSocketFactory$ErrorSocketFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/TrustManagerFactorySpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/X509TrustManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLEngineResult$HandshakeStatus.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/X509KeyManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLSession.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLSocket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLProtocolException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLServerSocket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/X509ExtendedKeyManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLServerSocketFactory$ErrorServerSocketFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLEngineResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/HandshakeCompletedListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/KeyManagerFactory$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/CertPathTrustManagerParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/KeyManagerFactorySpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/KeyStoreBuilderParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLPeerUnverifiedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLSessionContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/HandshakeCompletedEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/TrustManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/TrustManagerFactory$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLSessionBindingEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLHandshakeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLServerSocketFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/HttpsURLConnection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/TrivialHostnameVerifier.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLEngine.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLContextSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/net/ssl/SSLContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/tools/Diagnostic$Kind.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/tools/Diagnostic.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/tools/DiagnosticListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/tools/FileObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/OperationNotSupportedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/Referenceable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/CompoundName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/NoPermissionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/StringRefAddr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/InitialContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/LinkRef.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/NameClassPair.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/TimeLimitExceededException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ConfigurationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/NotContextException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/SizeLimitExceededException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/InterruptedNamingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/PartialResultException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/NameNotFoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/BinaryRefAddr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/Binding.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/CannotProceedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ReferralException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/NameAlreadyBoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ContextNotEmptyException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/AuthenticationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/CompositeName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/LinkException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/NamingSecurityException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/CommunicationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/NamingEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/AuthenticationNotSupportedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/Reference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/NameParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/LinkLoopException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/Name.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/NoInitialContextException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/Context.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ServiceUnavailableException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/RefAddr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/InsufficientResourcesException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/NamingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/LimitExceededException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/MalformedLinkException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/InvalidNameException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/spi/NamingManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/spi/ObjectFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/spi/ObjectFactoryBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/spi/ResolveResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/spi/InitialContextFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/spi/DirStateFactory$Result.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/spi/Resolver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/spi/DirObjectFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/spi/InitialContextFactoryBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/spi/StateFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/spi/DirStateFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/spi/DirectoryManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ldap/InitialLdapContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ldap/HasControls.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ldap/UnsolicitedNotification.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ldap/ExtendedRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ldap/StartTlsRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ldap/LdapContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ldap/ControlFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ldap/UnsolicitedNotificationEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ldap/ExtendedResponse.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ldap/Control.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ldap/LdapReferralException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ldap/StartTlsResponse.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/ldap/UnsolicitedNotificationListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/event/EventDirContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/event/NamingListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/event/ObjectChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/event/NamingEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/event/NamespaceChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/event/EventContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/event/NamingExceptionEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/SchemaViolationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/ModificationItem.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/SearchResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/BasicAttributes$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/InvalidSearchFilterException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/BasicAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/InvalidAttributeValueException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/InitialDirContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/InvalidAttributesException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/Attributes.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/AttributeModificationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/SearchControls.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/InvalidSearchControlsException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/BasicAttribute$BasicAttributeEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/AttributeInUseException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/BasicAttributes$BasicAttributesEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/InvalidAttributeIdentifierException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/NoSuchAttributeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/Attribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/BasicAttributes.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/javax/naming/directory/DirContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/Text.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/DOMLocator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/DOMErrorHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/DOMException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/UserDataHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/DOMStringList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/EntityReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/DOMImplementationSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/TypeInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/Comment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/DOMImplementationList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/DOMError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/Document.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/NameList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/Attr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/DocumentFragment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/DOMImplementation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/CharacterData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/DocumentType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/Entity.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/Element.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/CDATASection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/Notation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/ProcessingInstruction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/DOMConfiguration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/NamedNodeMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/Node.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/NodeList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/views/AbstractView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/views/DocumentView.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/bootstrap/DOMImplementationRegistry$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/bootstrap/DOMImplementationRegistry$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/bootstrap/DOMImplementationRegistry$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/bootstrap/DOMImplementationRegistry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/bootstrap/DOMImplementationRegistry$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/traversal/TreeWalker.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/traversal/DocumentTraversal.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/traversal/NodeFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/traversal/NodeIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/events/UIEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/events/EventTarget.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/events/DocumentEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/events/Event.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/events/EventListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/events/MouseEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/events/MutationEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/events/EventException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/xpath/XPathNSResolver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/xpath/XPathNamespace.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/xpath/XPathResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/xpath/XPathException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/xpath/XPathEvaluator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/xpath/XPathExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/Rect.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/DOMImplementationCSS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/CSSValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/CSS2Properties.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/ViewCSS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/RGBColor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/CSSRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/CSSStyleSheet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/CSSStyleDeclaration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/Counter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/CSSValueList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/CSSImportRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/ElementCSSInlineStyle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/CSSMediaRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/CSSPrimitiveValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/CSSCharsetRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/CSSStyleRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/CSSFontFaceRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/CSSPageRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/CSSUnknownRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/CSSRuleList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/css/DocumentCSS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/ls/LSSerializerFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/ls/LSLoadEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/ls/DOMImplementationLS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/ls/LSParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/ls/LSSerializer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/ls/LSResourceResolver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/ls/LSParserFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/ls/LSException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/ls/LSOutput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/ls/LSInput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/ls/LSProgressEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/stylesheets/LinkStyle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/stylesheets/MediaList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/stylesheets/StyleSheetList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/stylesheets/StyleSheet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/stylesheets/DocumentStyle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/ranges/RangeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/ranges/Range.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/ranges/DocumentRange.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLDivElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLBaseElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLDirectoryElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLStyleElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLQuoteElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLLegendElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLButtonElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLIsIndexElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLScriptElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLTitleElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLHtmlElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLDocument.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLTableCellElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLMapElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLFormElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLImageElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLBodyElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLOptGroupElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLAnchorElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLFieldSetElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLCollection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLBRElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLHeadElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLBaseFontElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLTextAreaElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLAreaElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLMenuElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLMetaElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLIFrameElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLTableCaptionElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLParagraphElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLSelectElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLHeadingElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLModElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLDListElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLFrameSetElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLAppletElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLLinkElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLUListElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLLIElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLFrameElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLTableElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLTableSectionElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLTableRowElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLOptionsCollection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLOptionElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLTableColElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLOListElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLLabelElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLHRElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLParamElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLFontElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLInputElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLPreElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/w3c/dom/html2/HTMLObjectElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/SAXParseException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/SAXNotSupportedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/ErrorHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/InputSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/XMLFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/Attributes.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/DocumentHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/EntityResolver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/SAXException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/XMLReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/SAXNotRecognizedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/HandlerBase.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/Locator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/AttributeList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/ContentHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/Parser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/DTDHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/ext/Locator2Impl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/ext/LexicalHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/ext/Locator2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/ext/DefaultHandler2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/ext/Attributes2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/ext/EntityResolver2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/ext/DeclHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/ext/Attributes2Impl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/helpers/ParserAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/helpers/ParserFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/helpers/XMLReaderFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/helpers/NamespaceSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/helpers/ParserAdapter$AttributeListAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/helpers/XMLReaderAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/helpers/AttributesImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/helpers/LocatorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/helpers/NewInstance.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/helpers/DefaultHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/helpers/AttributeListImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/helpers/XMLFilterImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/helpers/XMLReaderAdapter$AttributesAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/xml/sax/helpers/NamespaceSupport$Context.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/ietf/jgss/ChannelBinding.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/ietf/jgss/GSSContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/ietf/jgss/GSSManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/ietf/jgss/MessageProp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/ietf/jgss/Oid.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/ietf/jgss/GSSName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/ietf/jgss/GSSException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/ietf/jgss/GSSCredential.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/relaxng/datatype/Datatype.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/relaxng/datatype/DatatypeLibrary.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/relaxng/datatype/DatatypeStreamingValidator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/relaxng/datatype/DatatypeBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/relaxng/datatype/DatatypeLibraryFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/relaxng/datatype/ValidationContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/relaxng/datatype/DatatypeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/relaxng/datatype/helpers/StreamingValidatorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/relaxng/datatype/helpers/DatatypeLibraryLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/relaxng/datatype/helpers/DatatypeLibraryLoader$Service$Loader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/relaxng/datatype/helpers/DatatypeLibraryLoader$Service.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/relaxng/datatype/helpers/ParameterlessDatatypeBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/relaxng/datatype/helpers/DatatypeLibraryLoader$Service$Singleton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/relaxng/datatype/helpers/DatatypeLibraryLoader$Service$ProviderEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/relaxng/datatype/helpers/DatatypeLibraryLoader$Service$Loader2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynValueCommon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynAny.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/_DynValueStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynSequenceHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/FieldNameHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynFixedOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynAnySeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/_DynStructStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynValueCommonOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/NameValuePairSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynEnumHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/_DynUnionStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynStructOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/NameValuePair.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynAnyFactoryHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/_DynAnyStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/_DynFixedStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/NameDynAnyPair.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynValueOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynUnion.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynAnyFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynArray.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynEnumOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynAnyFactoryOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/NameDynAnyPairSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynStructHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynArrayHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynValueBox.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynValueHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynArrayOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynFixed.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynUnionHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynSequence.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynValueBoxOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/_DynSequenceStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/_DynArrayStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynUnionOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynAnyOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/NameDynAnyPairHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/_DynAnyFactoryStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynAnyHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/_DynEnumStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/AnySeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/NameValuePairHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynStruct.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynSequenceOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynFixedHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynEnum.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynAnyPackage/TypeMismatch.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynAnyPackage/InvalidValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynAnyPackage/InvalidValueHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynAnyPackage/TypeMismatchHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCodeHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ObjectReferenceFactoryHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/AdapterStateHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ORBIdHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ACTIVE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ObjectReferenceTemplateSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ORBInitializerOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ForwardRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/USER_EXCEPTION.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/Current.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/HOLDING.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/LOCATION_FORWARD.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/InterceptorOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/_IORInterceptor_3_0Stub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ForwardRequestHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/IORInterceptor_3_0Holder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ORBInitInfoOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ClientRequestInterceptorOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/PolicyFactoryOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ServerRequestInterceptorOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/IORInterceptorOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ORBInitializer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/InvalidSlot.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/IORInterceptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/CurrentOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ObjectReferenceTemplateSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ServerRequestInterceptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ClientRequestInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/RequestInfoOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/IORInterceptor_3_0.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/InvalidSlotHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/INACTIVE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ServerRequestInfoOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/IORInterceptor_3_0Helper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/DISCARDING.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/TRANSPORT_RETRY.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/AdapterManagerIdHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/CurrentHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/Interceptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ClientRequestInfoOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ObjectReferenceTemplate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/SYSTEM_EXCEPTION.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ObjectReferenceTemplateHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/SUCCESSFUL.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ServerIdHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ObjectIdHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/AdapterNameHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ObjectReferenceFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/RequestInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ObjectReferenceTemplateHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/IORInfoOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/PolicyFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ObjectReferenceFactoryHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/NON_EXISTENT.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ClientRequestInterceptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ServerRequestInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/IORInterceptor_3_0Operations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ORBInitInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/IORInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ORBInitInfoPackage/InvalidNameHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ORBInitInfoPackage/DuplicateNameHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ORBInitInfoPackage/DuplicateName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ORBInitInfoPackage/InvalidName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableInterceptor/ORBInitInfoPackage/ObjectIdHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/BindingIteratorHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NameHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/BindingIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NameComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/IstringHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/BindingIteratorPOA.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/_BindingIteratorStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/BindingListHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/BindingHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/BindingHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/Binding.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextExtHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NameComponentHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/_NamingContextImplBase.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/BindingIteratorHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/BindingType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextExtPOA.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NameComponentHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/BindingTypeHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/_BindingIteratorImplBase.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/BindingIteratorOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextExt.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/BindingTypeHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NameHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/_NamingContextExtStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/_NamingContextStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextExtHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextExtOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/_NamingContextExtImplBase.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPOA.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/BindingListHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextExtPackage/AddressHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextExtPackage/InvalidAddressHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextExtPackage/InvalidAddress.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextExtPackage/StringNameHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextExtPackage/InvalidAddressHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextExtPackage/URLStringHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/AlreadyBound.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/NotFoundReasonHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/InvalidNameHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/NotFoundReason.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/CannotProceedHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/CannotProceedHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/AlreadyBoundHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/NotFound.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/AlreadyBoundHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/InvalidNameHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/NotFoundHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/NotFoundHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/InvalidName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/CannotProceed.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/NotEmpty.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/NotFoundReasonHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/NotEmptyHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CosNaming/NamingContextPackage/NotEmptyHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA_2_3/ORB.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA_2_3/portable/Delegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA_2_3/portable/ObjectImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA_2_3/portable/InputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA_2_3/portable/OutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/SendingContext/RunTime.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/SendingContext/RunTimeOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/TIMEOUT.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/COMM_FAILURE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DefinitionKindHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/UserException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/BAD_PARAM.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/WStringSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ParameterModeHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/IDLTypeOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/OBJ_ADAPTER.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/NO_PERMISSION.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/PolicyListHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DynAny.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/PolicyErrorCodeHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/UShortSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/IRObjectOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ServiceDetail.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/IntHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/PolicyError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/Bounds.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/VisibilityHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/WStringValueHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/VM_CUSTOM.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/TypeCode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/FieldNameHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/PolicyTypeHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/AnySeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/INITIALIZE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ULongLongSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/NO_RESPONSE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ByteHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DefinitionKind.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ServiceDetailHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/Current.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/RepositoryIdHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/PolicyErrorHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/TRANSACTION_ROLLEDBACK.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/FREE_MEM.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/WrongTransactionHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/VM_NONE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DATA_CONVERSION.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/PRIVATE_MEMBER.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/UNSUPPORTED_POLICY_VALUE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/CompletionStatusHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/CharHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/Any.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/SystemException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DoubleSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/IdentifierHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/OctetSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/PUBLIC_MEMBER.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/PrincipalHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DataOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/PolicyListHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/NO_MEMORY.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/LongLongSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/NameValuePair.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/UShortSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DoubleHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/BooleanSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/LongSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/BAD_POLICY_VALUE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/BooleanSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/CTX_RESTRICT_SCOPE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ARG_INOUT.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/WCharSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/UNKNOWN.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ORB.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/TRANSACTION_MODE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/AnyHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/WrongTransactionHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/VM_ABSTRACT.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/WStringSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DynUnion.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ShortSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/CODESET_INCOMPATIBLE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/StringSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DynArray.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/BooleanHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/NVList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/PolicyErrorHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ULongLongSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/BAD_POLICY_TYPE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/CurrentOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DynamicImplementation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/NO_RESOURCES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/BAD_QOS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ValueMemberHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DomainManagerOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/VersionSpecHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ValueBaseHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ValueMember.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ARG_OUT.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/IMP_LIMIT.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/IDLType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/TCKind.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/INV_IDENT.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/IDLTypeHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/UnionMember.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/StringHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/OMGVMCID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/PolicyHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/Policy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/LocalObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ExceptionList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/FloatSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/TRANSACTION_UNAVAILABLE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/UnknownUserException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/MARSHAL.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/INV_POLICY.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/Object.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/PolicyOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/CharSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/CustomValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/CurrentHelper$_CurrentStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/CompletionStatus.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/UnionMemberHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/OctetSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/INTF_REPOS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/INV_OBJREF.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/BAD_POLICY.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/LongHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/WCharSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/PERSIST_STORE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/_PolicyStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/WrongTransaction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/SetOverrideType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DynFixed.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ServiceInformation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/FixedHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/LongLongSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/Principal.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/CurrentHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/CustomMarshal.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DynSequence.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ContextList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/CurrentHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/UnknownUserExceptionHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/StringValueHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/LongSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/Request.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ParameterModeHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/UNSUPPORTED_POLICY.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/TypeCodeHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DynValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ARG_IN.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ACTIVITY_REQUIRED.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ShortSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DoubleSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/FloatSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/StringSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/TRANSACTION_REQUIRED.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ServiceInformationHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ACTIVITY_COMPLETED.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/BAD_TYPECODE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/SetOverrideTypeHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ParameterMode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/_IDLTypeStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/INVALID_ACTIVITY.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DataInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/StructMember.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/Context.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/TRANSIENT.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/BAD_CONTEXT.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/INTERNAL.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ULongSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/INV_FLAG.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ULongSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/FloatHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/VM_TRUNCATABLE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/AnySeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ObjectHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ValueBaseHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/NameValuePairHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/NamedValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/BAD_OPERATION.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/BAD_INV_ORDER.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DomainManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/INVALID_TRANSACTION.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/UnknownUserExceptionHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/NO_IMPLEMENT.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DynStruct.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ShortHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/REBIND.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/Environment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/StructMemberHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ServiceInformationHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/IRObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ServerRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ObjectHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/PolicyHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/OBJECT_NOT_EXIST.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DynEnum.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/CharSeqHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ORBPackage/InconsistentTypeCode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/ORBPackage/InvalidName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/TypeCodePackage/Bounds.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/TypeCodePackage/BadKind.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DynAnyPackage/TypeMismatch.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DynAnyPackage/InvalidValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DynAnyPackage/InvalidSeq.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/DynAnyPackage/Invalid.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/BoxedValueHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/Streamable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/ValueBase.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/ApplicationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/IDLEntity.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/ResponseHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/ServantObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/Delegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/RemarshalException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/ObjectImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/InvokeHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/InputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/CustomValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/StreamableValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/OutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/ValueFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/UnknownException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/CORBA/portable/IndirectionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ThreadPolicyOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/SERVANT_RETENTION_POLICY_ID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ThreadPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/IdAssignmentPolicyValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/LifespanPolicyOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/Servant.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ForwardRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/RequestProcessingPolicyValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/Current.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/AdapterActivator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ServantLocatorOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/LifespanPolicyValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/IMPLICIT_ACTIVATION_POLICY_ID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ForwardRequestHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ImplicitActivationPolicyOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAManagerOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/_ServantLocatorStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ServantActivatorOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ServantLocator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ServantLocatorPOA$delegator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/IdUniquenessPolicyValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/THREAD_POLICY_ID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/CurrentOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/DynamicImplementation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ServantRetentionPolicyValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ServantLocatorHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/LifespanPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ServantRetentionPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ServantRetentionPolicyOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ID_UNIQUENESS_POLICY_ID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ServantActivatorHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ThreadPolicyValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/CurrentHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/RequestProcessingPolicyOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ServantManagerOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/IdUniquenessPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ServantActivatorPOA$delegator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/IdUniquenessPolicyOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ServantManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/REQUEST_PROCESSING_POLICY_ID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/RequestProcessingPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/LIFESPAN_POLICY_ID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ID_ASSIGNMENT_POLICY_ID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/_ServantActivatorStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ServantLocatorPOA.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ServantActivatorPOA.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ServantActivator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ImplicitActivationPolicyValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POA.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/IdAssignmentPolicyOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ImplicitActivationPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/AdapterActivatorOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/IdAssignmentPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAManagerPackage/State.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAManagerPackage/AdapterInactive.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAManagerPackage/AdapterInactiveHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/portable/Delegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/CurrentPackage/NoContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/CurrentPackage/NoContextHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/WrongPolicyHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/ServantAlreadyActive.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/WrongPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/WrongAdapterHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/ObjectNotActiveHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/NoServant.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/ObjectAlreadyActiveHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/NoServantHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/InvalidPolicyHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/WrongAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/AdapterNonExistent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/AdapterAlreadyExistsHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/ServantAlreadyActiveHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/InvalidPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/ServantNotActiveHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/ServantNotActive.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/ObjectAlreadyActive.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/AdapterAlreadyExists.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/AdapterNonExistentHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/POAPackage/ObjectNotActive.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/PortableServer/ServantLocatorPackage/CookieHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/stub/java/rmi/_Remote_Stub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/TaggedComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/TAG_ALTERNATE_IIOP_ADDRESS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/ComponentIdHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/Codec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/Encoding.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/RMICustomMaxStreamFormat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/IORHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/TaggedComponentHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/IORHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/CodecFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/TAG_JAVA_CODEBASE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/TaggedProfileHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/IOR.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/ServiceContextHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/TransactionService.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/TaggedProfile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/TaggedProfileHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/MultipleComponentProfileHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/ENCODING_CDR_ENCAPS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/CodeSets.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/TAG_MULTIPLE_COMPONENTS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/TAG_POLICIES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/ServiceContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/TAG_ORB_TYPE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/TAG_CODE_SETS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/CodecOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/ExceptionDetailMessage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/CodecFactoryOperations.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/ServiceContextHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/TAG_RMI_CUSTOM_MAX_STREAM_FORMAT.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/ServiceIdHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/TaggedComponentHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/TAG_INTERNET_IOP.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/MultipleComponentProfileHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/CodecFactoryHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/ServiceContextListHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/ServiceContextListHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/ProfileIdHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/CodecPackage/TypeMismatch.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/CodecPackage/FormatMismatchHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/CodecPackage/FormatMismatch.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/CodecPackage/TypeMismatchHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/CodecPackage/InvalidTypeForEncoding.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/CodecPackage/InvalidTypeForEncodingHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/CodecFactoryPackage/UnknownEncodingHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/IOP/CodecFactoryPackage/UnknownEncoding.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/Dynamic/Parameter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/Messaging/SYNC_WITH_TRANSPORT.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/org/omg/Messaging/SyncScopeHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ByteArrayOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/VMObjectStreamClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectStreamField.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectOutputStream$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/WriteAbortedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/FileFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectStreamException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/PipedInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/PushbackReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectOutput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/StringWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/InvalidClassException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/EOFException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/FilenameFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/UTFDataFormatException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/SyncFailedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/StreamCorruptedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/FilePermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/StringBufferInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/FilterReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/FilterInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectStreamClass$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/CharArrayReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/DeleteFileHelper$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/PipedOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/CharConversionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/IOException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/DataOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/DataOutput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectStreamField$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ByteArrayInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/DeleteFileHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/BufferedReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/PushbackInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectInput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectOutputStream$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/BufferedWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/FileReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectStreamConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectStreamClass$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/Writer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/InterruptedIOException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/UnsupportedEncodingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/FileDescriptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/Externalizable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/StreamTokenizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/BufferedInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/FileNotFoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/PrintWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectOutputStream$PutField.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectInputStream$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/SequenceInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/Serializable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/LineNumberInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/VMConsole.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectStreamClass$MemberComparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/LineNumberReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/StringReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/Closeable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/InputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectInputStream$ValidatorAndPriority.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectStreamClass$InterfaceComparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/BufferedOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectInputStream$GetField.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/File.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/DataInput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/FileInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/Console.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/FileWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/RandomAccessFile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/SerializablePermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/OptionalDataException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/PipedReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/OutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/NotActiveException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/InputStreamReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/FilterWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/Reader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/VMObjectInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/DataInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/IOError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/NotSerializableException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/InvalidObjectException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/PipedWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/FilterOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/FileOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectStreamClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/PrintStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/CharArrayWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/Flushable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectInputValidation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/ObjectInputStream$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/io/OutputStreamWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/ReadOnlyBufferException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/ByteOrder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/BufferUnderflowException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/DirectByteBufferImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/ByteBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/ShortBufferImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/LongBufferImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/MappedByteBufferImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/IntBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/IntBufferImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/MappedByteBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/FloatBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/BufferOverflowException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/CharBufferImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/IntViewBufferImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/DirectByteBufferImpl$ReadWrite.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/FloatBufferImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/FloatViewBufferImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/ByteBufferImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/InvalidMarkException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/ShortBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/CharViewBufferImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/LongViewBufferImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/Buffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/ByteBufferHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/CharSequenceBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/DirectByteBufferImpl$ReadOnly.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/DoubleBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/DoubleViewBufferImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/ShortViewBufferImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/VMDirectByteBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/DoubleBufferImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/LongBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/CharBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/charset/Charset.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/charset/UnsupportedCharsetException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/charset/CoderResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/charset/CodingErrorAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/charset/MalformedInputException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/charset/CoderResult$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/charset/UnmappableCharacterException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/charset/CoderMalfunctionError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/charset/CharsetDecoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/charset/CharsetEncoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/charset/CoderResult$Cache.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/charset/IllegalCharsetNameException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/charset/CoderResult$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/charset/CharacterCodingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/charset/spi/CharsetProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/ServerSocketChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/AsynchronousCloseException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/VMChannels.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/NonWritableChannelException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/ClosedByInterruptException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/FileLock.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/Selector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/CancelledKeyException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/SocketChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/ByteChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/NotYetConnectedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/ClosedChannelException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/SelectionKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/GatheringByteChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/FileLockInterruptionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/NonReadableChannelException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/Pipe$SourceChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/InterruptibleChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/NoConnectionPendingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/UnsupportedAddressTypeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/FileChannel$MapMode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/FileChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/NotYetBoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/IllegalBlockingModeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/IllegalSelectorException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/AlreadyConnectedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/WritableByteChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/Channels.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/DatagramChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/ReadableByteChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/Pipe$SinkChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/Channel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/Pipe.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/ClosedSelectorException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/ScatteringByteChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/OverlappingFileLockException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/SelectableChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/UnresolvedAddressException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/ConnectionPendingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/spi/SelectorProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/spi/SelectorProvider$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/spi/AbstractSelectionKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/spi/AbstractSelectableChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/spi/AbstractInterruptibleChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/nio/channels/spi/AbstractSelector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/DateFormat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/ParsePosition.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/Format$Field.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/DecimalFormatSymbols.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/MessageFormat$Field.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/CollationKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/BreakIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/AttributedString.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/DateFormatSymbols.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/Collator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/CollationElementIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/AttributedCharacterIterator$Attribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/NumberFormat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/RuleBasedCollator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/ChoiceFormat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/RuleBasedCollator$CollationElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/SimpleDateFormat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/DateFormat$Field.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/MessageFormat$MessageFormatElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/FieldPosition.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/CharacterIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/DateFormatSymbols$DFSData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/Bidi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/Format.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/AttributedStringIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/RuleBasedCollator$CollationSorter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/DecimalFormat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/NumberFormat$Field.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/AttributedCharacterIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/SimpleDateFormat$CompiledField.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/AttributedString$AttributeRange.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/StringCharacterIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/MessageFormat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/Annotation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/ParseException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/spi/BreakIteratorProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/spi/CollatorProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/spi/DecimalFormatSymbolsProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/spi/DateFormatProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/spi/DateFormatSymbolsProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/text/spi/NumberFormatProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/NoSuchObjectException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/UnmarshalException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/ServerError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/Remote.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/ServerRuntimeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/AccessException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/RMISecurityManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/RemoteException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/AlreadyBoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/Naming.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/ServerException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/ConnectException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/MarshalException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/UnknownHostException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/UnexpectedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/StubNotFoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/NotBoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/ConnectIOException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/RMISecurityException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/MarshalledObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/UID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/RemoteObjectInvocationHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/ServerRef.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/ServerCloneException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/SkeletonMismatchException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/RemoteObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/RemoteServer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/RMIClassLoaderSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/RMISocketFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/SkeletonNotFoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/RMIClassLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/RMIClientSocketFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/SocketSecurityException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/UnicastRemoteObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/RemoteStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/ExportException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/RMIFailureHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/ObjID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/Unreferenced.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/RMIServerSocketFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/RemoteCall.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/ServerNotActiveException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/Operation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/Skeleton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/LoaderHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/LogStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/server/RemoteRef.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/activation/ActivationGroup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/activation/ActivationInstantiator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/activation/ActivationGroup_Stub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/activation/ActivationGroupDesc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/activation/Activator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/activation/ActivationID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/activation/ActivationSystem.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/activation/UnknownGroupException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/activation/UnknownObjectException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/activation/ActivationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/activation/ActivationMonitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/activation/ActivationDesc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/activation/Activatable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/activation/ActivationGroupDesc$CommandEnvironment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/activation/ActivateFailedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/activation/ActivationGroupID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/registry/RegistryHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/registry/LocateRegistry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/registry/Registry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/dgc/Lease.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/dgc/VMID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/rmi/dgc/DGC.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/VetoableChangeListenerProxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/IntrospectionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/Customizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/DesignMode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/BeanInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/Encoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/Visibility.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/MethodDescriptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/IndexedPropertyDescriptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/EventSetDescriptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/Encoder$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/PersistenceDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/Beans.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/PropertyChangeSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/SimpleBeanInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/ExceptionListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/PropertyChangeListenerProxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/XMLEncoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/Statement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/PropertyEditorSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/ConstructorProperties.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/FeatureDescriptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/PropertyChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/DefaultPersistenceDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/BeanDescriptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/IndexedPropertyChangeEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/ParameterDescriptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/EventHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/Introspector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/VetoableChangeSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/PropertyVetoException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/XMLDecoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/PropertyChangeEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/AppletInitializer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/PropertyEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/PropertyEditorManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/Expression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/VetoableChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/ExplicitInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/PropertyDescriptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextServiceRevokedListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextChild.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextSupport$BCSChild.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextContainerProxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextServicesSupport$ServiceRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextServices.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextServiceProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextServicesSupport$BCSSServiceProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextServiceAvailableEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextServicesSupport$BCSSChild.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextChildComponentProxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextServicesSupport$ServiceLease.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextServiceRevokedEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextServiceProviderBeanInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextMembershipEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextMembershipListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextServicesSupport$BCSSProxyServiceProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextSupport$BCSIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextServicesSupport$Request.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextServicesListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextProxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextServicesSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/beans/beancontext/BeanContextChildSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$UnmodifiableCollection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Hashtable$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/EnumSet$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/HashMap$HashEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/ResourceBundle$BundleKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Hashtable$KeyIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$UnmodifiableSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Locale.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/HashMap$HashIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractList$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Deque.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$CheckedCollection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$CheckedRandomAccessList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$UnmodifiableSortedMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$NavigableEntrySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Random.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/FormattableFlags.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$SynchronizedSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/ArrayList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractList$RandomAccessSubList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/EmptyStackException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Hashtable$ValueEnumerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/IllegalFormatPrecisionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/IllegalFormatWidthException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/EventListenerProxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TimerTask.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/IdentityHashMap$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/NoSuchElementException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Hashtable$EntryIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Timer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TimeZone.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Comparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/IdentityHashMap$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Hashtable$EntryEnumerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$SubMap$NavigableEntrySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/GregorianCalendar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/PropertyPermissionCollection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$SynchronizedIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$CopiesList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/ResourceBundle$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$SynchronizedSortedMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$SynchronizedRandomAccessList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractSequentialList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/SimpleTimeZone.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Scanner.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Queue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$SubMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$SynchronizedSortedSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$TreeIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Hashtable$KeyEnumerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/IllegalFormatConversionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$CheckedIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/InputMismatchException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractMap$SimpleEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractMap$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/RandomAccess.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Hashtable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractList$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$EmptyMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$UnmodifiableListIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$SubMap$KeySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/IdentityHashMap$IdentityIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$CheckedSortedMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Currency.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/WeakHashMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractList$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/SortedMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/EnumMap$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/WeakHashMap$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/LinkedHashMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Calendar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractList$SubList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Enumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$UnmodifiableList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/ArrayDeque$DeqIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Map.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Set.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$MapSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/IdentityHashMap$IdentityEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TimeZone$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/ArrayDeque.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/PriorityQueue$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/HashMap$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/DuplicateFormatFlagsException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$SingletonSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/MissingFormatWidthException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/PriorityQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/EventObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$SynchronizedList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$DescendingMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$SubMap$NavigableKeySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/HashMap$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/EnumMap$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Formatter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/HashMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/EventListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/WeakHashMap$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/EnumMap$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/LinkedHashSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Arrays.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$CheckedListIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractMap$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/EnumSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$ReverseComparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/ListIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/FormatterClosedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/InvalidPropertiesFormatException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$SingletonMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$KeySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$EmptySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Hashtable$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Observer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$SynchronizedCollection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/WeakHashMap$WeakEntrySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/HashMap$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/FormatFlagsConversionMismatchException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/EnumMap$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/List.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/IllegalFormatFlagsException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/BitSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$1$SynchronizedMapEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/IllegalFormatException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Hashtable$HashEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Vector$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/UnknownFormatFlagsException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/ArrayDeque$DescendingIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Iterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractCollection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Timer$Scheduler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/ConcurrentModificationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/LinkedList$LinkedListItr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$CheckedSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/NavigableMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/NavigableSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$SynchronizedListIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/EnumMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Dictionary.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$SingletonList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Observable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/LinkedList$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$CheckedSortedSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$UnmodifiableMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/EnumMap$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/SortedSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/EnumMap$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/EnumMap$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$NavigableKeySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/ServiceConfigurationError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$CheckedList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractMap$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Properties.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/LinkedList$Entry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$UnmodifiableIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$SynchronizedMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractMap$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Vector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/IdentityHashMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$CheckedMap$CheckedEntrySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/PropertyPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/MissingResourceException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$LIFOQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Hashtable$ValueIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/VMTimeZone.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$SubMap$EntrySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/LinkedHashMap$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/LinkedList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$UnmodifiableRandomAccessList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/ResourceBundle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/HashSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Date.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractMap$SimpleImmutableEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$EmptyList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Timer$TaskQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/AbstractQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/UnknownFormatConversionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/ListResourceBundle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/PropertyResourceBundle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TooManyListenersException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/WeakHashMap$WeakBucket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/IllegalFormatCodePointException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Map$Entry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Hashtable$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/ServiceLoader$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/IdentityHashMap$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/WeakHashMap$WeakBucket$WeakEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$UnmodifiableSortedSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$DescendingSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/UUID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/ServiceLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$9.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/MissingFormatArgumentException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Formattable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/StringTokenizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Stack.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$Node.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Formatter$BigDecimalLayoutForm.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Arrays$ArrayList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/LinkedHashMap$LinkedHashEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/Collections$CheckedMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/TreeMap$EntrySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/EnumSet$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentHashMap$WriteThroughEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/SynchronousQueue$EmptyIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/SynchronousQueue$TransferQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Executors$PrivilegedCallable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/SynchronousQueue$TransferStack.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Semaphore$FairSync.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapKeyIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/LinkedBlockingDeque$DescendingItr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ThreadPoolExecutor$DiscardPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ScheduledExecutorService.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/CopyOnWriteArrayList$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/AbstractExecutorService.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Executor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Semaphore$NonfairSync.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/LinkedBlockingQueue$Itr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Executors$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/BrokenBarrierException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/TimeUnit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ExecutorService.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/SynchronousQueue$TransferStack$SNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/CopyOnWriteArrayList$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentLinkedQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/FutureTask$Sync.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/TimeUnit$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/LinkedBlockingDeque$AbstractItr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/CopyOnWriteArrayList$RandomAccessSubList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/TimeUnit$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap$EntryIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/TimeUnit$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Executors$FinalizableDelegatedExecutorService.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap$EntrySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/LinkedBlockingDeque$Itr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ScheduledThreadPoolExecutor$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap$ValueIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ThreadPoolExecutor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Executors$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/TimeUnit$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Executors$DelegatedScheduledExecutorService.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Executors$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Executors$PrivilegedThreadFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Exchanger$Slot.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentHashMap$HashEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/SynchronousQueue$FifoWaitQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Executors$DefaultThreadFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/SynchronousQueue$WaitQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/RunnableScheduledFuture.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Executors$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentLinkedQueue$Itr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ScheduledFuture.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/CompletionService.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Executors$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ThreadPoolExecutor$AbortPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/BlockingQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ExecutionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/LinkedBlockingDeque$Node.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Callable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentHashMap$EntryIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/SynchronousQueue$LifoWaitQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/LinkedBlockingQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/SynchronousQueue$Transferer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/CopyOnWriteArrayList$SubList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/CyclicBarrier$Generation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentHashMap$EntrySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ArrayBlockingQueue$Itr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/PriorityBlockingQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ExecutorCompletionService.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentHashMap$KeySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/CopyOnWriteArrayList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/CopyOnWriteArrayList$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ExecutorCompletionService$QueueingFuture.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap$ComparableUsingComparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/PriorityBlockingQueue$Itr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap$Index.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap$HeadIndex.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/SynchronousQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap$KeyIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ThreadPoolExecutor$DiscardOldestPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentHashMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Executors$RunnableAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/LinkedBlockingQueue$Node.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/BlockingDeque.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Executors$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ArrayBlockingQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/LinkedBlockingDeque.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Exchanger.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap$KeySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Semaphore$Sync.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentHashMap$ValueIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentLinkedQueue$Node.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/FutureTask.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/RejectedExecutionHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ThreadPoolExecutor$Worker.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/TimeUnit$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentHashMap$HashIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/CyclicBarrier.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap$Node.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/TimeUnit$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/TimeUnit$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/RunnableFuture.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ScheduledThreadPoolExecutor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ThreadFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/CountDownLatch$Sync.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Executors.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Exchanger$Node.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap$SubMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap$Values.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentHashMap$KeyIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/SynchronousQueue$TransferQueue$QNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentNavigableMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/TimeoutException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Delayed.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Executors$DelegatedExecutorService.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentHashMap$Segment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/RejectedExecutionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/CopyOnWriteArraySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/DelayQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/DelayQueue$Itr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Future.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/CountDownLatch.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/Semaphore.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/CancellationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentHashMap$Values.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/ConcurrentSkipListMap$Iter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicReferenceArray.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicMarkableReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicBoolean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicIntegerArray.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicMarkableReference$ReferenceBooleanPair.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicStampedReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicLong.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicIntegerFieldUpdater.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicLongArray.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicInteger.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicReferenceFieldUpdater.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicStampedReference$ReferenceIntegerPair.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/atomic/AtomicLongFieldUpdater.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/ReentrantReadWriteLock$Sync.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/LockSupport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/Condition.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/ReentrantReadWriteLock$Sync$HoldCounter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/AbstractOwnableSynchronizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/ReentrantLock.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/ReentrantReadWriteLock.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/Lock.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/ReentrantLock$FairSync.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/AbstractQueuedLongSynchronizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/ReentrantLock$Sync.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/ReentrantReadWriteLock$FairSync.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/AbstractQueuedSynchronizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/ReadWriteLock.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/ReentrantLock$NonfairSync.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/Filter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/Logger.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/Handler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/LoggingPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/Logger$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/LogManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/XMLFormatter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/StreamHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/SimpleFormatter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/SocketHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/LogManager$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/MemoryHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/Formatter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/FileHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/LoggingMXBean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/ErrorManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/LogRecord.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/ConsoleHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/Level.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/logging/FileHandler$ostr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/spi/LocaleServiceProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/spi/LocaleNameProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/spi/CurrencyNameProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/spi/TimeZoneNameProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/regex/PatternSyntaxException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/regex/Matcher.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/regex/Pattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/regex/MatchResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/jar/JarEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/jar/JarFile$JarEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/jar/JarOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/jar/Attributes.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/jar/Manifest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/jar/Attributes$Name.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/jar/JarFile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/jar/JarInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/jar/JarException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/jar/JarFile$EntryInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/prefs/BackingStoreException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/prefs/Preferences.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/prefs/AbstractPreferences.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/prefs/NodeChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/prefs/PreferencesFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/prefs/AbstractPreferences$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/prefs/Preferences$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/prefs/AbstractPreferences$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/prefs/PreferenceChangeEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/prefs/InvalidPreferencesFormatException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/prefs/NodeChangeEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/prefs/PreferenceChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/Checksum.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/Adler32.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/ZipFile$ZipEntryEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/ZipFile$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/ZipEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/DataFormatException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/DeflaterOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/CheckedInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/Inflater.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/ZipException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/InflaterInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/CheckedOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/CRC32.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/ZipFile$PartialInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/ZipOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/GZIPOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/GZIPInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/ZipFile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/Deflater.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/ZipInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/util/zip/ZipConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/AccessControlException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/BasicPermission$BasicPermissionCollection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/Permissions.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/AccessControlContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/SecurityPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/Signature.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/ProtectionDomain.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/KeyException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/PermissionCollection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/DomainCombiner.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/AllPermission$AllPermissionCollection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/Identity.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/PrivilegedExceptionAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/DigestOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/PrivilegedAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/NoSuchAlgorithmException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/KeyStoreException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/DummyKeyPairGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/Guard.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/UnresolvedPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/VMAccessController.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/SignatureException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/DigestException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/AccessController.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/UnresolvedPermissionCollection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/DummySignature.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/UnresolvedPermissionCollection$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/KeyStore$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/PublicKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/GeneralSecurityException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/SecureRandom.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/ProviderException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/PrivilegedActionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/Security.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/BasicPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/AlgorithmParametersSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/IdentityScope.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/InvalidKeyException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/AllPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/AlgorithmParameterGeneratorSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/DummyMessageDigest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/GuardedObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/KeyPairGeneratorSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/Certificate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/KeyPairGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/PrivateKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/KeyStoreSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/NoSuchProviderException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/InvalidParameterException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/Policy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/Permissions$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/KeyStore.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/SecureClassLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/KeyManagementException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/KeyPair.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/MessageDigestSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/Principal.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/SignedObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/InvalidAlgorithmParameterException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/AlgorithmParameterGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/SignatureSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/SecureRandomSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/Permission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/Key.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/MessageDigest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/AlgorithmParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/CodeSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/DigestInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/Signer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/IntersectingDomainCombiner.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/UnrecoverableKeyException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/Permissions$PermissionsHash.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/KeyFactorySpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/VMAccessControlState.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/Provider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/KeyFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/interfaces/RSAPrivateKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/interfaces/DSAPublicKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/interfaces/RSAPublicKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/interfaces/RSAPrivateCrtKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/interfaces/DSAKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/interfaces/DSAPrivateKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/interfaces/RSAKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/interfaces/DSAKeyPairGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/interfaces/RSAMultiPrimePrivateCrtKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/interfaces/DSAParams.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/acl/Acl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/acl/Group.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/acl/AclEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/acl/Owner.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/acl/NotOwnerException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/acl/LastOwnerException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/acl/Permission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/acl/AclNotFoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/PKIXParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/Certificate$CertificateRep.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/X509CRLEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertificateFactorySpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/PolicyQualifierInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/PKIXCertPathValidatorResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertPathBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/PKIXCertPathChecker.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertPath.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/PKIXBuilderParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/X509CRL.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertPathValidatorSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertPathBuilderResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/X509CertSelector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertStoreParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertStore.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/X509Extension.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/LDAPCertStoreParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/Certificate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertStore$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertPathParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertificateExpiredException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertPathBuilderException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CollectionCertStoreParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertPathValidator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CRL.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CRLException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/X509Certificate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertPath$CertPathRep.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertificateNotYetValidException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertPathBuilderSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertificateParsingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertPathValidatorResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertPathValidatorException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertStoreException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/X509CRLSelector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CRLSelector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertPathValidator$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/TrustAnchor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/PKIXCertPathBuilderResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertStoreSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertSelector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/PolicyNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertificateException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertificateFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/cert/CertificateEncodingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/InvalidParameterSpecException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/RSAPrivateKeySpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/PSSParameterSpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/EncodedKeySpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/KeySpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/X509EncodedKeySpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/InvalidKeySpecException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/DSAPrivateKeySpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/PKCS8EncodedKeySpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/RSAMultiPrimePrivateCrtKeySpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/RSAPublicKeySpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/RSAOtherPrimeInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/RSAPrivateCrtKeySpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/RSAKeyGenParameterSpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/DSAPublicKeySpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/DSAParameterSpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/security/spec/AlgorithmParameterSpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/math/RoundingMode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/math/BigInteger.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/math/BigDecimal.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/math/MathContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/SQLOutput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/Connection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/ParameterMetaData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/Array.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/ResultSetMetaData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/SQLPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/Savepoint.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/SQLWarning.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/Clob.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/ResultSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/DatabaseMetaData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/PreparedStatement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/Types.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/Driver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/SQLInput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/Statement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/DriverManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/Blob.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/CallableStatement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/SQLException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/SQLData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/Ref.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/Time.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/Timestamp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/Date.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/Struct.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/BatchUpdateException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/DataTruncation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/sql/DriverPropertyInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Package.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Double.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/AssertionError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/OutOfMemoryError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/VMCompiler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/SecurityException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/IllegalThreadStateException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Exception.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/String.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Void.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/System$EnvironmentMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Class$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ThreadLocal.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/StackTraceElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/NoSuchMethodException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/System$EnvironmentSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/IllegalMonitorStateException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ThreadGroup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ExceptionInInitializerError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Win32Process$EOFInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ProcessBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/System$EnvironmentCollection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/InheritableThreadLocal.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ArithmeticException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Boolean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Number.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ThreadLocalMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/TypeNotPresentException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ThreadLocalMap$Entry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Throwable$StaticData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Float.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/VMThrowable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/EnumConstantNotPresentException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Readable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/VMFloat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/NoSuchFieldException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Appendable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/AbstractMethodError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/EcosProcess.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/LinkageError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/InstantiationError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/StringIndexOutOfBoundsException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/InternalError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/NumberFormatException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/UnsupportedOperationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Error.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Throwable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Cloneable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Iterable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/IndexOutOfBoundsException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/IllegalArgumentException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Character.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ClassLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/VMClassLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/RuntimePermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ClassCastException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/IllegalStateException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/UnsupportedClassVersionError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ClassNotFoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/System.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/CharSequence.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/UnsatisfiedLinkError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/String$CaseInsensitiveComparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/SuppressWarnings.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Short.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Runnable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/PosixProcess.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ThreadDeath.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Compiler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Process.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Character$UnicodeBlock$NameType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/SecurityManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/StringBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Thread$UncaughtExceptionHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ReflectiveOperationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/PosixProcess$EOFInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Runtime.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ClassFormatError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/VerifyError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Object.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/InterruptedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/NoClassDefFoundError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Byte.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/IncompatibleClassChangeError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Math.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Integer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Override.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Thread$State.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/NullPointerException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ArrayIndexOutOfBoundsException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/NegativeArraySizeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Character$Subset.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/AutoCloseable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/StringBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Deprecated.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ClassCircularityError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/NoSuchFieldError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/PosixProcess$ProcessManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/IllegalAccessError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/AbstractStringBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Thread.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ArrayStoreException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Win32Process.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/NoSuchMethodError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ClassLoader$AnnotationsKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/CloneNotSupportedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/VMProcess.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/IllegalAccessException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/SecurityManager$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Comparable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/UnknownError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Long.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Enum.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/InstantiationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Character$UnicodeBlock.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/StrictMath.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/Class.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/RuntimeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/VirtualMachineError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/StackOverflowError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/VMDouble.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/MemoryPoolMXBean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/MemoryManagerMXBean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/ManagementFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/VMManagementFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/ManagementPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/RuntimeMXBean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/ThreadInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/MemoryType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/MemoryNotificationInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/LockInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/MemoryUsage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/ManagementFactory$ManagementInvocationHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/ClassLoadingMXBean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/OperatingSystemMXBean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/ThreadMXBean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/GarbageCollectorMXBean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/CompilationMXBean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/MonitorInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/management/MemoryMXBean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/instrument/IllegalClassFormatException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/instrument/UnmodifiableClassException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/instrument/ClassFileTransformer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/instrument/ClassDefinition.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/instrument/Instrumentation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/Array.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/Modifier.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/WildcardType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/ReflectPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/Proxy$ProxyType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/Method.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/Field.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/VMProxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/AnnotatedElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/GenericDeclaration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/TypeVariable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/InvocationHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/GenericArrayType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/Constructor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/Member.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/Proxy$ProxySignature.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/ParameterizedType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/InvocationTargetException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/Proxy$ClassFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/UndeclaredThrowableException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/GenericSignatureFormatError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/MalformedParameterizedTypeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/AccessibleObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/Type.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/Proxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/reflect/Proxy$ProxyData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/annotation/ElementType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/annotation/AnnotationTypeMismatchException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/annotation/AnnotationFormatError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/annotation/Retention.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/annotation/RetentionPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/annotation/Annotation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/annotation/IncompleteAnnotationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/annotation/Target.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/annotation/Inherited.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/annotation/Documented.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ref/ReferenceQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ref/PhantomReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ref/WeakReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ref/SoftReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/lang/ref/Reference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/applet/AudioClip.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/applet/Applet$AccessibleApplet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/applet/Applet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/applet/Applet$URLAudioClip.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/applet/AppletStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/applet/AppletContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/AttributeValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/AWTKeyStroke$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/DefaultKeyboardFocusManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/TextField$AccessibleAWTTextField.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/BufferCapabilities.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Cursor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Robot.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/DefaultFocusTraversalPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/AWTError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/MenuBar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Scrollbar$AccessibleAWTScrollBar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/ColorPaintContext$ColorRaster.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/FlowLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Toolkit$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/EventQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/ItemSelectable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/PopupMenu.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Composite.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/BorderLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Component$HeavyweightInLightweightListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Window$AccessibleAWTWindow.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Button.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Menu.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Dialog$AccessibleAWTDialog.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/PointerInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/GridLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/ScrollPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Canvas$CanvasBltBufferStrategy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/FontMetrics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Adjustable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/ContainerOrderFocusTraversalPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/LayoutManager2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Graphics2D.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Color.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/KeyboardFocusManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/PaintContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/RenderingHints$KeyImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Choice.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/List$AccessibleAWTList$AccessibleAWTListChild.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/FontFormatException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/PageAttributes$PrintQualityType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Stroke.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/CheckboxMenuItem.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/IllegalComponentStateException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Paint.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/PrintGraphics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Desktop$Action.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Frame.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/GraphicsEnvironment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/BasicStroke.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/CompositeContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Component$FlipBufferStrategy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/TextField.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/PageAttributes.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/TextArea$AccessibleAWTTextArea.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Dimension.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Window$WindowFlipBufferStrategy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/RenderingHints.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Component$AccessibleAWTComponent$AccessibleAWTComponentHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/SystemColor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Polygon$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/CardLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/JobAttributes$DefaultSelectionType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/ScrollPaneAdjustable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Desktop.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Event.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/KeyEventPostProcessor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/MenuContainer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Checkbox.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Image.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/FocusTraversalPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/MenuComponent$AccessibleAWTMenuComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/PrintJob.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Dialog$ModalityType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/TextComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/AlphaComposite$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/MouseInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/DefaultKeyboardFocusManager$EventDelayRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/MenuItem.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/List$AccessibleAWTList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Frame$AccessibleAWTFrame.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/CheckboxGroup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/GridBagConstraints.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/LayoutManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Checkbox$AccessibleAWTCheckbox.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/MenuShortcut.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/KeyEventDispatcher.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Component$BltBufferStrategy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Window.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/GraphicsConfigTemplate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Insets.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Font.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/MediaTracker.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Panel$AccessibleAWTPanel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/AWTEventMulticaster.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/GridBagLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/ComponentOrientation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Canvas$AccessibleAWTCanvas.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Toolkit$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/List.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Container$AccessibleAWTContainer$AccessibleContainerHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/PageAttributes$MediaType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Container$GfxPrintVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/AlphaComposite.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Point.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/JobAttributes$DestinationType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/TexturePaint.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Container$GfxPaintVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Container$GfxPaintAllVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/JobAttributes$SidesType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Label$AccessibleAWTLabel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Robot$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/ColorPaintContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/AWTEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/CheckboxMenuItem$AccessibleAWTCheckboxMenuItem.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Canvas$CanvasFlipBufferStrategy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/MenuBar$AccessibleAWTMenuBar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/FileDialog.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/BufferCapabilities$FlipContents.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Menu$AccessibleAWTMenu.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/GridBagLayoutInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/JobAttributes$MultipleDocumentHandlingType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/PageAttributes$ColorType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/PageAttributes$OrientationRequestedType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Container$GfxPrintAllVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/TextComponent$AccessibleAWTTextComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/JobAttributes.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/LightweightDispatcher.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/MediaTracker$MediaEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Rectangle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/ImageCapabilities.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/JobAttributes$DialogType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/GraphicsConfiguration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Shape.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Polygon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Choice$AccessibleAWTChoice.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Button$AccessibleAWTButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Container$AccessibleAWTContainer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/ScrollPane$AccessibleAWTScrollPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Component.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/AWTKeyStroke.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/PopupMenu$AccessibleAWTPopupMenu.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/ActiveEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Container$GfxVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Component$AccessibleAWTComponent$AccessibleAWTFocusHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Label.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/AWTKeyStroke$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/PageAttributes$OriginType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/DisplayMode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Canvas.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Container.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/AWTException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Scrollbar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Dialog.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/EventQueue$Queue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/GradientPaint.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/RenderingHints$Key.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Component$AccessibleAWTComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/HeadlessException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Toolkit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Graphics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/EventDispatchThread.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Transparency.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/MenuComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/GraphicsDevice.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/TextArea.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/AWTPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/MenuItem$AccessibleAWTMenuItem.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Panel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/AWTKeyStroke$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Dialog$ModalExclusionType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/Window$WindowBltBufferStrategy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DragSourceContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DragSourceDragEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DragSourceListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DropTargetDragEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DragGestureListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/Autoscroll.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DropTarget.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DropTargetAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DropTargetListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DropTargetContext$TransferableProxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DragSourceAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DragSourceDropEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/InvalidDnDOperationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DragGestureRecognizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/MouseDragGestureRecognizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DropTarget$DropTargetAutoScroller.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DragGestureEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DragSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DnDEventMulticaster.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DragSourceEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DropTargetDropEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DnDConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DropTargetEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DropTargetContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/DragSourceMotionListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/peer/DragSourceContextPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/peer/DropTargetPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/dnd/peer/DropTargetContextPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/print/Paper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/print/PrinterException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/print/Pageable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/print/PageFormat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/print/PrinterAbortException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/print/Printable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/print/Book.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/print/PrinterGraphics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/print/PrinterJob.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/print/PrinterIOException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/print/NoPrinterJob.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/datatransfer/FlavorListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/datatransfer/SystemFlavorMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/datatransfer/ClipboardOwner.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/datatransfer/FlavorEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/datatransfer/MimeTypeParseException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/datatransfer/FlavorTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/datatransfer/Transferable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/datatransfer/UnsupportedFlavorException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/datatransfer/Clipboard.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/datatransfer/DataFlavor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/datatransfer/SystemFlavorMap$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/datatransfer/MimeType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/datatransfer/StringSelection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/datatransfer/FlavorMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/CubicCurve2D$Double.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/QuadCurve2D$Double.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/RoundRectangle2D$Float.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/QuadCurve2D$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Ellipse2D$Float.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Ellipse2D$Double.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/CubicCurve2D$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Line2D.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/RoundRectangle2D$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/RectangularShape.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Arc2D$Double.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Area$Segment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Arc2D.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Area$QuadSegment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Arc2D$Float.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/GeneralPath$GeneralPathIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/QuadCurve2D$Float.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Dimension2D.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Line2D$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Rectangle2D$Double.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Point2D$Double.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Rectangle2D.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/NoninvertibleTransformException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Point2D$Float.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Area$Intersection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Area$AreaIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/QuadCurve2D.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Area$AreaIterator$IteratorSegment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Area.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Rectangle2D$Float.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/CubicCurve2D.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Arc2D$ArcIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/RoundRectangle2D.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/FlatteningPathIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Line2D$Double.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/IllegalPathStateException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Ellipse2D.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/CubicCurve2D$Float.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Line2D$Float.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Area$LineSegment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Rectangle2D$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/GeneralPath.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Point2D.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/RoundRectangle2D$Double.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/Area$CubicSegment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/PathIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/geom/AffineTransform.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/DataBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/FilteredImageSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/DataBufferDouble.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/PackedColorModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/IndexColorModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/MemoryImageSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/ShortLookupTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/WritableRaster.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/DataBufferInt.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/ComponentColorModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/ImageObserver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/ReplicateScaleFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/AffineTransformOp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/BufferStrategy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/BandCombineOp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/BufferedImage$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/ColorModel$SRGBColorModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/DataBufferFloat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/ByteLookupTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/SinglePixelPackedSampleModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/CropImageFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/DataBufferByte.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/VolatileImage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/WritableRenderedImage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/BandedSampleModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/RasterFormatException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/RGBImageFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/ImagingOpException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/BufferedImage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/PixelInterleavedSampleModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/PixelGrabber.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/AreaAveragingScaleFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/SampleModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/RasterOp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/PixelGrabber$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/ImageConsumer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/DataBufferUShort.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/DataBufferShort.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/Kernel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/ConvolveOp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/ColorConvertOp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/RenderedImage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/MultiPixelPackedSampleModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/BufferedImageFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/TileObserver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/LookupOp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/ComponentSampleModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/BufferedImageOp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/LookupTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/ImageFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/ImageProducer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/DirectColorModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/Raster.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/ColorModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/RescaleOp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/renderable/ContextualRenderedImageFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/renderable/ParameterBlock.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/renderable/RenderContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/renderable/RenderableImageProducer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/renderable/RenderableImage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/renderable/RenderableImageOp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/image/renderable/RenderedImageFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/color/ICC_ProfileRGB.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/color/CMMException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/color/ICC_Profile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/color/ICC_ColorSpace.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/color/ProfileDataException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/color/ICC_ProfileGray.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/color/ColorSpace.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/im/InputMethodRequests.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/im/InputSubset.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/im/InputContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/im/InputMethodHighlight.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/im/spi/InputMethodDescriptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/im/spi/InputMethodContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/im/spi/InputMethod.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/FontPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/LightweightPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/MenuComponentPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/TextComponentPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/WindowPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/CheckboxMenuItemPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/MouseInfoPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/MenuItemPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/FileDialogPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/ListPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/PopupMenuPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/RobotPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/LabelPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/ButtonPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/CanvasPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/PanelPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/MenuBarPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/DialogPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/TextFieldPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/MenuPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/CheckboxPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/FramePeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/ScrollbarPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/ScrollPanePeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/ComponentPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/ChoicePeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/ContainerPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/DesktopPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/peer/TextAreaPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/HierarchyListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/InputMethodListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/KeyAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/HierarchyBoundsListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/WindowListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/FocusListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/KeyListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/ContainerListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/MouseWheelListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/TextListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/InputEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/HierarchyEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/ItemListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/ComponentAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/ComponentListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/AWTEventListenerProxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/FocusAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/HierarchyBoundsAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/InputMethodEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/MouseEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/WindowFocusListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/PaintEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/KeyEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/MouseAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/AdjustmentEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/ContainerAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/MouseMotionAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/ActionEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/InvocationEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/WindowAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/AdjustmentListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/WindowStateListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/TextEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/ItemEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/WindowEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/MouseWheelEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/ComponentEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/MouseMotionListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/ActionListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/AWTEventListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/FocusEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/ContainerEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/event/MouseListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/TextLayout$Run.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/MultipleMaster.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/GraphicAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/GlyphMetrics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/FontRenderContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/ImageGraphicAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/GlyphVector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/TextAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/TransformAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/LineMetrics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/TextHitInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/LineBreakMeasurer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/GlyphJustificationInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/NumericShaper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/TextMeasurer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/ShapeGraphicAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/TextLayout.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/OpenType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/awt/font/TextLayout$CaretPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/URISyntaxException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/SocketOptions.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/MimeTypeMapper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/InetSocketAddress.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/PasswordAuthentication.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/MalformedURLException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/URL$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/SocketPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/Authenticator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/JarURLConnection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/SocketImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/VMNetworkInterface.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/Inet4Address.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/URLStreamHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/ServerSocket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/ResolverCache.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/Proxy$Type.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/PortUnreachableException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/URLClassLoader$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/DatagramPacket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/VMURLConnection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/NetPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/ContentHandlerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/URL.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/SocketException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/SocketImplFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/URLConnection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/ResolverCache$Entry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/DatagramSocket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/InetAddress.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/ProxySelector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/NoRouteToHostException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/ProtocolException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/DatagramSocketImplFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/ConnectException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/DatagramSocketImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/HttpURLConnection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/URI.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/Socket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/URLClassLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/URLStreamHandlerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/UnknownHostException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/Inet6Address.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/URLClassLoader$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/SocketAddress.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/BindException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/NetworkInterface.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/SocketTimeoutException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/ContentHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/FileNameMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/Proxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/URLEncoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/URLDecoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/MulticastSocket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/VMInetAddress.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/java/net/UnknownServiceException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/NotImplementedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/VMStackWalker.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/Pointer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/Pair.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/Pointer32.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/ServiceProviderLoadingAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/ServiceFactory$ServiceIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/SystemProperties.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/Pointer64.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/Configuration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/ServiceFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/toolkit/DefaultDaemonThreadFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/debug/TeeReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/debug/SystemLogger.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/debug/Simple1LineFormatter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/debug/TeeOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/debug/TeeInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/debug/Component.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/debug/PreciseFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/debug/TeeWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/VMIdManager$IdFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$ClassType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$ModKind.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/VMVirtualMachine.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$ClassLoaderReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$StepSize.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$ReferenceType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$ArrayReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$InterfaceType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$Error.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$InvokeOptions.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$TypeTag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$EventRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$ObjectReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$VirtualMachine.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/VMFrame.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$EventKind.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$ThreadReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$ArrayType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$ClassStatus.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$Event.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/Jdwp$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$Field.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$ThreadGroupReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$StackFrame.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$StepDepth.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$ThreadStatus.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$Method.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$SuspendPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/VMIdManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/Jdwp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$Version.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/VMIdManager$ReferenceKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$StringReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/VMMethod.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$Tag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$SuspendStatus.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/JdwpConstants$CommandSet$ClassObjectReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/NotImplementedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/InvalidLocationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/InvalidClassException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/InvalidThreadException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/InvalidEventTypeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/VmDeadException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/NativeMethodException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/TypeMismatchException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/AbsentInformationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/InvalidThreadGroupException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/JdwpInternalErrorException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/InvalidStringException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/InvalidCountException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/JdwpException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/InvalidClassLoaderException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/InvalidObjectException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/InvalidSlotException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/JdwpIllegalArgumentException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/InvalidFieldException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/InvalidMethodException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/InvalidTagException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/exception/InvalidFrameException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/value/ShortValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/value/FloatValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/value/ObjectValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/value/DoubleValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/value/VoidValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/value/LongValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/value/ArrayValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/value/StringValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/value/BooleanValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/value/Value.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/value/CharValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/value/ValueFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/value/ByteValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/value/IntValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/util/Signature.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/util/MethodResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/util/NullObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/util/LineTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/util/Location.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/util/VariableTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/util/JdwpString.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/util/MonitorInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/InterfaceTypeCommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/ObjectReferenceCommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/ClassObjectReferenceCommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/EventRequestCommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/StackFrameCommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/ArrayTypeCommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/ArrayReferenceCommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/StringReferenceCommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/CommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/ThreadGroupReferenceCommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/MethodCommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/ThreadReferenceCommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/PacketProcessor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/VirtualMachineCommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/ReferenceTypeCommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/FieldCommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/ClassLoaderReferenceCommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/processor/ClassTypeCommandSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/EventRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/ClassUnloadEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/MethodExitEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/ThreadStartEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/VmDeathEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/MethodEntryEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/ClassPrepareEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/Event.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/EventManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/SingleStepEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/ExceptionEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/ThreadEndEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/BreakpointEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/VmInitEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/filters/IEventFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/filters/ClassOnlyFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/filters/ExceptionOnlyFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/filters/ClassMatchFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/filters/ConditionalFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/filters/ThreadOnlyFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/filters/FieldOnlyFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/filters/StepFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/filters/InstanceOnlyFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/filters/ClassExcludeFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/filters/CountFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/event/filters/LocationOnlyFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/id/ObjectId.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/id/ClassLoaderId.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/id/StringId.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/id/ThreadId.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/id/ArrayId.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/id/ClassReferenceTypeId.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/id/ReferenceTypeId.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/id/JdwpId.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/id/ClassObjectId.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/id/InterfaceReferenceTypeId.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/id/ArrayReferenceTypeId.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/id/NullObjectId.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/id/ThreadGroupId.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/transport/TransportFactory$TransportMethod.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/transport/JdwpReplyPacket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/transport/JdwpConnection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/transport/JdwpPacket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/transport/JdwpCommandPacket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/transport/TransportException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/transport/SocketTransport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/transport/ITransport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/classpath/jdwp/transport/TransportFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/Core.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/RawData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/RawDataManaged.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/io/SimpleSHSStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/jvmti/NormalBreakpoint.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/jvmti/BreakpointManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/jvmti/Breakpoint.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/jvmti/Location.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/Colormap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/XConnectException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/XButtonEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/Visual.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/WindowAttributes.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/XColor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/XID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/Drawable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/Window.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/XConfigureEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/Font.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/XUnmapEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/Display.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/Screen.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/Clip.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/GC.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/Pixmap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/XImage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/XException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/XAnyEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/WMSizeHints.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/XExposeEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/xlib/XEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/UnicodeToBytes.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Output_ASCII.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Input_SJIS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Output_EUCJIS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Input_iconv.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Output_JavaSrc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Input_JavaSrc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Input_ASCII.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Convert.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Output_SJIS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Input_UnicodeLittle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Input_UnicodeBig.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Output_iconv.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Output_UnicodeLittleUnmarked.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Output_8859_1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Input_EUCJIS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Output_UTF8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/BytesToCharsetAdaptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Input_8859_1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/Input_UTF8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/BytesToUnicode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/IOConverter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/convert/CharsetToBytesAdaptor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/PersistentByteMap$MapEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/HelperClassLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/HelperClassLoader$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/SharedLibLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/StringBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/PersistentByteMap$AccessMode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/ExtensionClassLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/NameFinder$Addr2Line.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/BootClassLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/JNIWeakRef.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/FinalizerThread.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/SystemClassLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/PersistentByteMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/PersistentByteMap$HashIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/PersistentByteMap$ByteWrapper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/NameFinder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/runtime/SharedLibHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/util/GCInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/util/Debug.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/util/UtilPermission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/tools/gcj_dbtool/Fileset.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/tools/gcj_dbtool/Main.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/gcj/tools/gcj_dbtool/Tokenizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/TypeCodeHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Connected_objects$cObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Connected_objects.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/OrbFunctional$sharedPortServer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/OrbRestricted.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/OrbFunctional$portServer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/gnuValueHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/gnuNVList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Minor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/StreamBasedRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/gnuEnvironment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/ObjectCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/SetOverrideTypeHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/IOR$Internet_profile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/IOR$CodeSets_profile$CodeSet_component.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/SimpleDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/SafeForDirectCalls.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/BigDecimalHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/NameDynAnyPairSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/_PolicyImplBase.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/ForwardRequestHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/IorObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/IorProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/NameValuePairHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/gnuExceptionList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/NameDynAnyPairHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/OctetHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/gnuContextList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CdrEncapsCodecImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/OrbFocused.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/HolderLocator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/IOR.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/TypeKindNamer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/gnuAny.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/NameValuePairSeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/ServiceRequestAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/WStringHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CollocatedOrbs.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/ServiceDetailHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/gnuContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/StubLocator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/ByteArrayComparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/gnuNamedValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/gnuCodecFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Version.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/SocketRepository.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/OrbFunctional.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Asynchron.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/RawReply.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/OrbFunctional$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/EmptyExceptionHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/gnuRequest$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/GeneralHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAnySeqHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/ResponseHandlerImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Unexpected.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/WCharHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/StreamHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/IorDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/IOR$CodeSets_profile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DefinitionKindHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DuplicateNameHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/gnuRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/gnuRequest$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DefaultSocketFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CorbaList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/OrbFunctional$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAn/gnuDynArray.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAn/gnuDynSequence.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAn/RecordAny.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAn/UndivideableAny.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAn/NameValuePairHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAn/gnuDynStruct.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAn/gnuDynAny.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAn/ValueChangeListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAn/gnuDynValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAn/DivideableAny.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAn/gnuDynFixed.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAn/gnuDynAnyFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAn/gnuDynEnum.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAn/AbstractAny.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAn/gnuDynValueBox.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/DynAn/gnuDynUnion.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/gnuAdapterActivator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/LocalServerRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/LocalRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/ForwardedServant.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/gnuImplicitActivationPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/InvalidPolicyHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/gnuRequestProcessingPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/ORB_1_4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/gnuThreadPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/LocalDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/AOM$Obj.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/gnuIdAssignmentPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/gnuPOAManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/AccessiblePolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/ServantDelegateImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/StandardPolicies.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/gnuPOA.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/gnuPoaCurrent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/gnuLifespanPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/gnuForwardRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/gnuPOA$RefTemplate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/gnuIdUniquenessPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/DynamicImpHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/AOM.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/ForwardRequestHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/gnuServantRetentionPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Poa/gnuServantObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/interfaces/SocketFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/NamingService/NamingMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/NamingService/NameTransformer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/NamingService/NameComponentComparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/NamingService/TransientContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/NamingService/NameValidator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/NamingService/NameParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/NamingService/NamingServiceTransient$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/NamingService/Binding_iterator_impl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/NamingService/Ext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/NamingService/NamingServiceTransient.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/typecodes/FixedTypeCode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/typecodes/ArrayTypeCode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/typecodes/RecordTypeCode$Field.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/typecodes/GeneralTypeCode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/typecodes/RecordTypeCode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/typecodes/StringTypeCode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/typecodes/AliasTypeCode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/typecodes/PrimitiveTypeCode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/typecodes/RecursiveTypeCode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/GIOP/CloseMessage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/GIOP/CodeSetServiceContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/GIOP/ContextHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/GIOP/ReplyHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/GIOP/ServiceContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/GIOP/CharSets_OSF.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/GIOP/MessageHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/GIOP/ErrorMessage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/GIOP/RequestHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/GIOP/CancelHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/GIOP/v1_0/ReplyHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/GIOP/v1_0/RequestHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/GIOP/v1_0/CancelHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/GIOP/v1_2/ReplyHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/GIOP/v1_2/RequestHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/BigEndianOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/gnuRuntime.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/VMVio.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/BufferredCdrInput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/ArrayValueHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/AligningOutput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/EncapsulationStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/AbstractDataOutput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/BufferedCdrOutput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/gnuValueStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/gnuRuntime$Entry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/AbstractCdrInput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/LittleEndianInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/gnuRuntime$Redirection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/gnuRuntime$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/IDLTypeHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/AbstractDataInput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/Vio.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/LittleEndianOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/HeadlessInput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/UnknownExceptionCtxHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/AbstractCdrOutput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/BigEndianInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/CDR/AligningInput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Interceptor/gnuServerRequestInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Interceptor/ServerRequestInterceptors.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Interceptor/gnuClientRequestInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Interceptor/ClientRequestInterceptors.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Interceptor/Registrator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Interceptor/gnuIorInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Interceptor/IORInterceptors.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Interceptor/gnuIcCurrent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/CORBA/Interceptor/ForwardRequestHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomXPathExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomText.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomEvent$DomMutationEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomXPathResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomNode$ShadowList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomDocumentBuilderFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomCharacterData$EmptyNodeList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/JAXPFactory$JAXPBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomNode$ListenerRecord.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomDocumentConfiguration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomNode$DomEventException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomNodeIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DTDElementTypeInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomProcessingInstruction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/JAXPFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomExtern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomEntity.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomDocumentBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomXPathNSResolver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomEvent$DomUIEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomDoctype.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomNode$LiveNodeList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/ImplementationList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomDocumentFragment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomNotation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/Consumer$Backdoor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/Consumer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomEntityReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomCDATASection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomAttr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomNsNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomDOMException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomDocument.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomNSResolverContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DTDAttributeTypeInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomCharacterData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomNamedNodeMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/ImplementationSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/DomComment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/ls/ReaderInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/ls/SAXEventSink.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/ls/DomLSInput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/ls/WriterOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/ls/DomLSSerializer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/ls/DomLSOutput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/ls/DomLSParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/ls/FilteredSAXEventSink.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/ls/DomLSException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLFrameSetElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLIFrameElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLTableSectionElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLSelectElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLMenuElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLOptGroupElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLHRElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLHeadElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLAppletElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLLinkElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLTableRowElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLTableElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLFontElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLLabelElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLFrameElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLLegendElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLScriptElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLTitleElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLLIElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLDirectoryElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLTableColElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLParamElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLPreElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLIsIndexElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLAreaElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLBaseFontElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLUListElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLOptionElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLButtonElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLInputElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLDocument.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLFormElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLParagraphElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLHtmlElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLDivElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLBRElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLCollection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLImageElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLAnchorElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLBaseElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLMapElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLDListElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLTableCellElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLFieldSetElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLOListElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLBodyElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLModElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLEmbedElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLTextAreaElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLTableCaptionElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLStyleElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLQuoteElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLObjectElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLMetaElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLHeadingElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/dom/html2/DomHTMLParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/EventFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/ValidationConsumer$EmptyRecognizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/ValidationConsumer$MixedRecognizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/CallFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/PipelineFactory$Stage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/ValidationConsumer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/PipelineFactory$Pipeline.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/XIncludeFilter$Scrubber.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/ValidationConsumer$Recognizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/ValidationConsumer$AttributeInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/NSFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/ValidationConsumer$ElementInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/WellFormednessFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/TextConsumer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/DomConsumer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/DomConsumer$Handler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/XsltFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/XIncludeFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/EventConsumer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/TeeConsumer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/PipelineFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/LinkFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/CallFilter$Requestor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/pipeline/ValidationConsumer$ChildrenRecognizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/xmlschema/XMLSchemaValidatorHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/xmlschema/AttributeDeclaration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/xmlschema/XMLSchemaBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/xmlschema/XMLSchemaAttributeTypeInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/xmlschema/XMLSchema.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/xmlschema/AnyAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/xmlschema/XMLSchemaValidator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/xmlschema/Particle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/xmlschema/XMLSchemaElementTypeInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/xmlschema/AttributeUse.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/xmlschema/ValidationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/xmlschema/XMLSchemaTypeInfoProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/xmlschema/ElementDeclaration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/xmlschema/XMLSchemaTypeInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/xmlschema/ComplexType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/xmlschema/XMLSchemaSchemaFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/TokenType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/IDRefType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/NameType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/MinInclusiveFacet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/GYearType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/AnyURIType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/StringType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/NCNameType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/GDayType$GDay.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/ListSimpleType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/FractionDigitsFacet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/DateTimeType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/LongType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/MinExclusiveFacet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/NMTokenType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/Facet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/AnySimpleType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/WhiteSpaceFacet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/EntityType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/BooleanType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/LengthFacet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/TypeBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/PatternFacet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/DoubleType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/MaxExclusiveFacet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/TypeLibrary.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/NormalizedStringType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/GYearMonthType$GYearMonth.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/FloatType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/EnumerationFacet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/TypeLibraryFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/AnyType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/GMonthType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/ByteType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/TotalDigitsFacet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/LanguageType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/IntegerType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/IDRefsType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/DurationType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/MinLengthFacet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/GMonthDayType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/GYearMonthType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/UnionSimpleType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/DateType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/IntType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/Base64BinaryType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/NegativeIntegerType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/MaxInclusiveFacet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/IDType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/NonNegativeIntegerType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/ShortType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/GMonthType$GMonth.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/UnsignedIntType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/QNameType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/UnsignedByteType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/PositiveIntegerType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/DurationType$Duration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/Type.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/TimeType$Time.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/NMTokensType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/GDayType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/DecimalType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/NonPositiveIntegerType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/SimpleType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/TimeType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/EntitiesType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/UnsignedShortType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/Annotation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/NotationType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/GMonthDayType$GMonthDay.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/HexBinaryType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/GYearType$GYear.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/UnsignedLongType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/MaxLengthFacet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/datatype/AtomicSimpleType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/DataPattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/GroupPattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/NameNameClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/Param.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/ChoiceNameClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/GrammarException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/NSNameNameClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/ElementPattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/NotAllowedPattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/NameClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/InterleavePattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/EmptyPattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/ValuePattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/OneOrMorePattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/ListPattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/AttributePattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/AnyNameNameClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/RELAXNGSchemaFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/Define.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/GrammarValidator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/Grammar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/Pattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/ChoicePattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/FullSyntaxBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/TextPattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/validation/relaxng/RefPattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/LastFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/NameTest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/Expr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/ParenthesizedExpr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/VariableReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/TrueFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathParser$yyInput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathParser$YyDefRedClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/LangFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/StringLengthFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/RoundFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/ContainsFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/StartsWithFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/Selector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathParser$YyGindexClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/Expr$ExprNodeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathParser$YyNameClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/FloorFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathParser$YySindexClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/Path.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/LocalNameFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/SubstringBeforeFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/StringFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/OrExpr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/PositionFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/NodeTypeTest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/RelationalExpr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/FalseFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/Steps.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/CeilingFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/NumberFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathTokenizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathTokenizer$XPathToken.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/SubstringFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathParser$YyLhsClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/NotFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/NamespaceTest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathParser$YyRindexClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathParser$yyException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/FunctionCall.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/NegativeExpr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/NormalizeSpaceFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/Root.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/BooleanFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/Predicate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/SubstringAfterFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/IdFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathParser$YyTableClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathParser$YyLenClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathParser$YyDgotoClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/Test.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/ArithmeticExpr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/CountFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/DocumentOrderComparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/TranslateFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/Constant.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/SumFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/ConcatFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathParser$YyCheckClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/UnionExpr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/AndExpr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/Pattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/NamespaceUriFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/Function.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/EqualityExpr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/NameFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/xpath/XPathFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/SAXNullTransformerFactory$ListenerAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/XCat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/XHTMLWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/XCat$Catalog.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/SAXNullTransformerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/XCat$Loader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/Resolver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/DomParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/SAXNullTransformerFactory$NullHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/XMLWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/DoParse$MyErrorHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/DoParse.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/SAXNullTransformerFactory$LocatorAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/SAXNullTransformerFactory$DomTerminus.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/SAXNullTransformerFactory$DomHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/XCat$DoneDelegation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/util/SAXNullTransformerFactory$NullTransformer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/StartDocumentImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLOutputFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/EndDocumentImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLEventAllocatorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLParser$AttributeDecl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/ProcessingInstructionImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLParser$MixedContentModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLParser$Doctype.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/CharactersImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/UnicodeReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/FilteredStreamReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/NotationDeclarationImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/BufferedReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLParser$ContentModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLEventImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLParser$EmptyContentModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/EntityReferenceImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/FilteredEventReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/CRLFReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/NamespaceImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLParser$ContentParticle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLParser$ExternalIds.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/CommentImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/SAXParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLParser$AnyContentModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XIncludeFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLParser$ElementContentModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLEventReaderImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLStreamWriterImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLInputFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/DTDImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLEventFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/AttributeImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/EntityDeclarationImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLParser$Attribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/StartElementImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLParser$Input.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/XMLEventWriterImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/EndElementImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/stream/SAXParserFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/aelfred2/XmlParser$ExternalIdentifiers.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/aelfred2/SAXDriver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/aelfred2/JAXPFactory$JaxpParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/aelfred2/XmlReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/aelfred2/XmlParser$AttributeDecl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/aelfred2/SAXDriver$Attribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/aelfred2/JAXPFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/aelfred2/XmlParser$Input.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/aelfred2/XmlReader$FatalErrorHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/aelfred2/SAXDriver$Adapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/aelfred2/XmlParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/aelfred2/XmlParser$ElementDecl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/aelfred2/XmlParser$EntityInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/DOMSourceLocator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/KeyFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/StreamSerializer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/NamespaceProxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/ApplyImportsNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/SAXSerializer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/OtherwiseNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/NumberNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/FormatNumberFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/XSLComparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/ApplyTemplatesNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/AbstractNumberNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/WhenNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/WithParam.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/Stylesheet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/SystemPropertyFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/UnparsedEntityUriFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/DocumentFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/TemplateNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/TransformerFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/ProcessingInstructionNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/TransformerOutputProperties.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/ForEachNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/CopyNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/ValueOfNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/ElementNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/AttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/CallTemplateNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/SAXTransformerHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/URIResolverEntityResolver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/LiteralNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/IfNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/MessageNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/Template.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/Bindings.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/TemplatesImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/CurrentFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/NodeNumberNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/ElementAvailableFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/TransformerImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/FunctionAvailableFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/ChooseNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/XSLURIResolver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/AttributeNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/ParameterNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/Key.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/SAXTemplatesHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/TextNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/CopyOfNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/ErrorListenerErrorHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/SortKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/StrippingInstruction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/GenerateIdFunction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/transform/CommentNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeDocumentType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeDocumentFragment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeXPathResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeDocumentBuilderFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeProcessingInstruction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeDocument.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeDocumentBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeXPathNSResolver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeDOMStringList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeCDATASection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeComment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeNodeList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeXPathExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeTypeInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeNotation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeDOMException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeCharacterData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeText.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeEntity.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeEntityReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeAttr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeNamedNodeMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/dom/GnomeXPathNodeList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/util/NamedInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/util/XMLJ$XMLJShutdownHook.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/util/EmptyNodeList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/util/StandaloneLocator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/util/XMLJ.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/util/StandaloneDocumentType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/transform/GnomeTransformerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/transform/GnomeTransformerFactory$AssociatedStylesheetHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/transform/URIResolverEntityResolver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/transform/GnomeTransformer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/transform/ErrorListenerErrorHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/sax/GnomeSAXParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/sax/GnomeXMLReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/sax/StringArrayAttributes.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/sax/Namespaces.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/sax/GnomeSAXParserFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/sax/GnomeLocator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/xml/libxmlj/sax/XMLName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/management/Server$LazyListenersHolder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/management/Server$ServerNotificationListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/management/ListenerData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/management/Server$ServerInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/management/Server$ServerInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/management/Server.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/management/Translator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrinterDialog$AppearancePanel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrintAttributeException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/CupsPrintServiceLookup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrinterDialog$PageSetupPanel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrinterDialog$AppearancePanel$Color.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/CupsServer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrinterDialog$GeneralPanel$PrintServices.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrinterDialog$AppearancePanel$SidesPanel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrinterDialog$PageSetupPanel$Orientation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrintFlavorException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/CupsMediaMapping.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrinterDialog$AppearancePanel$Quality.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrinterDialog$PageSetupPanel$Margins.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrinterDialog$GeneralPanel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/CupsPrintService.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrinterDialog$GeneralPanel$PrintRange.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrinterDialog$GeneralPanel$CopiesAndSorted.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrinterDialog.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrinterDialog$PageSetupPanel$MediaTypes.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrintUriException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/PrinterDialog$AppearancePanel$JobAttributes.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/CupsIppOperation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/IppUtilities.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/IppPrintService.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/IppResponse$ResponseReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/DocPrintJobImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/IppValueTag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/IppStatusCode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/IppDelimiterTag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/IppRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/IppResponse.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/IppMultiDocPrintService.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/IppException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/IppRequest$RequestWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/MultiDocPrintJobImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/RequestedAttributes.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/CharsetSyntax.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/DetailedStatusMessage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/DefaultValueAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/UnknownAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/DocumentAccessError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/NaturalLanguageSyntax.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/StatusMessage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/PrinterResolutionSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/CompressionSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/PageRangesSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/MediaSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/JobSheetsSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/DocumentFormatSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/PrinterUriSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/MultipleDocumentHandlingSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/UriAuthenticationSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/JobHoldUntilSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/PrintQualitySupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/OperationsSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/SidesSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/FinishingsSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/MultipleDocumentJobsSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/GeneratedNaturalLanguageSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/OrientationRequestedSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/CharsetSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/UriSecuritySupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/supported/IppVersionsSupported.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/defaults/PrinterResolutionDefault.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/defaults/JobPriorityDefault.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/defaults/JobSheetsDefault.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/defaults/NumberUpDefault.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/defaults/OrientationRequestedDefault.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/defaults/SidesDefault.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/defaults/FinishingsDefault.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/defaults/MediaDefault.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/defaults/CopiesDefault.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/defaults/DocumentFormatDefault.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/defaults/PrintQualityDefault.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/defaults/JobHoldUntilDefault.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/defaults/MultipleDocumentHandlingDefault.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/printer/PrinterStateMessage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/printer/MultipleOperationTimeOut.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/printer/PrinterUpTime.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/printer/NaturalLanguageConfigured.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/printer/PrinterCurrentTime.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/printer/PrinterDriverInstaller.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/printer/DocumentFormat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/printer/CharsetConfigured.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/job/JobDocumentAccessErrors.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/job/JobId.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/job/JobDetailedStatusMessages.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/job/JobStateMessage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/job/JobPrinterUri.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/job/JobUri.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/job/AttributesCharset.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/job/JobMoreInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/print/ipp/attribute/job/AttributesNaturalLanguage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/tree/GnuPath.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/ImageViewIconFactory$LoadingImageIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/CombinedAttributes$CombinedEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/CharacterAttributeTranslator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/ImageViewIconFactory$NoImageIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/CombinedAttributes.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/ImageViewIconFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/HTML_401F.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/GnuParserDelegator$gnuParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/SmallHtmlAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/SmallHtmlAttributeSet$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/htmlValidator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/htmlAttributeSet$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/htmlValidator$hTag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/htmlAttributeSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/GnuParserDelegator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/gnuDTD.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/models/transformer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/models/list.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/models/node.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/models/PCDATAonly_model.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/models/TableRowContentModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/models/noTagModel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/support/Parser$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/support/Parser$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/support/textPreProcessor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/support/gnuStringIntMapper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/support/Parser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/support/parameterDefaulter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/support/low/Queue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/support/low/pattern.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/support/low/node.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/support/low/Constants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/support/low/Location.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/support/low/Buffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/support/low/Token.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/support/low/ReaderTokenizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/parser/support/low/ParseException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/css/Selector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/css/CSSColor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/css/CSSParserException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/css/FontSize.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/css/FontWeight.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/css/BorderWidth.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/css/Length.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/css/CSSParserCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/css/CSSLexicalException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/css/CSSScanner.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/css/CSSParser$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/css/FontStyle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/css/CSSParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/text/html/css/BorderStyle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/plaf/metal/CustomizableTheme.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/plaf/gnu/GNULookAndFeel$CheckBoxIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/plaf/gnu/GNULookAndFeel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/swing/plaf/gnu/GNULookAndFeel$RadioButtonIcon.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/rmi/CORBA/CorbaInput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/rmi/CORBA/RmiUtilities.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/rmi/CORBA/PortableRemoteObjectDelegateImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/rmi/CORBA/TieTargetRecord.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/rmi/CORBA/DefaultWriteObjectTester.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/rmi/CORBA/GetDelegateInstanceException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/rmi/CORBA/ValueHandlerDelegateImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/rmi/CORBA/StubDelegateImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/rmi/CORBA/RmiUtilities$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/rmi/CORBA/CorbaOutput.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/rmi/CORBA/RmiUtilities$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/rmi/CORBA/UtilDelegateImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/rmi/CORBA/DelegateFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/activation/viewers/TextViewer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/activation/viewers/TextEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/activation/viewers/ImageViewer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/IIOInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/gif/GIFFile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/gif/GIFImageReaderSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/gif/GIFImageReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/gif/GIFFile$GIFException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/jpeg/JPEGMarkerFoundException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/jpeg/JPEGComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/jpeg/JPEGFrame.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/jpeg/JPEGScan.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/jpeg/JPEGMarker.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/jpeg/JPEGException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/jpeg/DCT.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/jpeg/ZigZag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/jpeg/YCbCr_ColorSpace.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/jpeg/JPEGImageReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/jpeg/JPEGImageInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/jpeg/JPEGDecoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/jpeg/JPEGImageReaderSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/jpeg/HuffmanTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/png/PNGFilter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/png/PNGData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/png/PNGGamma.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/png/PNGICCProfile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/png/PNGPhys.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/png/PNGImageReaderSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/png/PNGDecoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/png/PNGException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/png/PNGHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/png/PNGTime.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/png/PNGFile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/png/PNGEncoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/png/PNGImageReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/png/PNGChunk.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/png/PNGPalette.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/BMPImageReaderSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/EncodeRGB4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/DecodeRLE8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/EncodeRLE8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/DecodeRGB8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/EncodeRLE4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/DecodeRGB4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/BMPInfoHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/BMPImageReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/BMPEncoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/DecodeBF32.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/BMPImageWriterSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/EncodeRGB32.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/DecodeRGB1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/EncodeRGB24.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/EncodeRGB8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/BMPDecoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/BMPException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/EncodeRGB16.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/DecodeRGB24.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/BMPFileHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/BMPImageWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/EncodeRGB1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/DecodeBF16.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/imageio/bmp/DecodeRLE4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/Password.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/login/ConfigFileTokenizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/login/ConfigFileParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/login/GnuConfiguration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/callback/SwingCallbackHandler$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/callback/GnuCallbacks$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/callback/SwingCallbackHandler$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/callback/GnuCallbacks.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/callback/SwingCallbackHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/callback/SwingCallbackHandler$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/callback/SwingCallbackHandler$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/callback/AbstractCallbackHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/callback/SwingCallbackHandler$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/callback/ConsoleCallbackHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/callback/DefaultCallbackHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/callback/CertificateCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/callback/SwingCallbackHandler$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/callback/SwingCallbackHandler$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/security/auth/callback/AWTCallbackHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/RSACipherImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/assembly/Transformer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/assembly/ModeStage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/assembly/TransformerException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/assembly/CascadeTransformer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/assembly/Stage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/assembly/Cascade.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/assembly/LoopbackTransformer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/assembly/Operation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/assembly/Assembly.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/assembly/DeflateTransformer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/assembly/CascadeStage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/assembly/Direction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/assembly/PaddingTransformer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/OutputBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/IAuthInfoProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/AuthInfoProviderFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/SaslOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/InputBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/NoSuchUserException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/ServerMechanism.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/ClientMechanism.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/SaslInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/SaslUtil.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/AuthInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/ConfidentialityException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/IntegrityException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/NoSuchMechanismException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/IllegalMechanismStateException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/SaslEncodingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/ClientFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/IAuthInfoProviderFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/UserAlreadyExistsException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/ServerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/crammd5/PasswordFile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/crammd5/CramMD5Registry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/crammd5/CramMD5AuthInfoProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/crammd5/CramMD5Util.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/crammd5/CramMD5Server.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/crammd5/CramMD5Client.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/srp/IALG.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/srp/ClientStore.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/srp/PasswordFile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/srp/SRP.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/srp/SRPRegistry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/srp/SRPAuthInfoProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/srp/SRPClient.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/srp/KDF.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/srp/StoreEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/srp/SRPServer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/srp/CALG.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/srp/SecurityContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/srp/ServerStore.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/plain/PasswordFile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/plain/PlainAuthInfoProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/plain/PlainClient.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/plain/PlainServer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/plain/PlainRegistry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/anonymous/AnonymousUtil.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/anonymous/AnonymousClient.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/sasl/anonymous/AnonymousServer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/kwa/TripleDESKeyWrap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/kwa/BaseKeyWrappingAlgorithm.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/kwa/KeyWrappingAlgorithmFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/kwa/AESKeyWrap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/kwa/IKeyWrappingAlgorithm.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/kwa/KeyUnwrappingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mode/CBC.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mode/EAX.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mode/CTR.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mode/BaseMode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mode/ModeFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mode/CFB.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mode/IAuthenticatedMode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mode/OFB.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mode/ECB.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mode/ICM.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mode/IMode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/IncomingMessage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/GnuPBEKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/OutgoingMessage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/KeyAgreementFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/IKeyAgreementParty.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/BaseKeyAgreementParty.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/GnuSecretKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/KeyAgreementException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/dh/DiffieHellmanReceiver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/dh/ElGamalReceiver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/dh/GnuDHPublicKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/dh/GnuDHPrivateKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/dh/DHKeyPairX509Codec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/dh/GnuDHKeyPairGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/dh/DiffieHellmanSender.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/dh/GnuDHKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/dh/DHKeyPairPKCS8Codec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/dh/DHKeyPairRawCodec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/dh/ElGamalKeyAgreement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/dh/DiffieHellmanKeyAgreement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/dh/RFC2631.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/dh/ElGamalSender.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/srp6/SRP6SaslServer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/srp6/SRPPrivateKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/srp6/SRP6KeyAgreement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/srp6/SRP6TLSServer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/srp6/SRPPublicKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/srp6/SRPKeyPairGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/srp6/SRP6Host.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/srp6/SRPKeyPairRawCodec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/srp6/SRP6User.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/srp6/SRP6TLSClient.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/srp6/SRP6SaslClient.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/srp6/SRPAlgorithm.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/key/srp6/SRPKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/pad/PKCS7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/pad/TBC.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/pad/BasePad.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/pad/PadFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/pad/ISO10126.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/pad/SSL3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/pad/IPad.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/pad/PKCS1_V1_5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/pad/WrongPaddingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/pad/TLS1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/PasswordAuthenticatedEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/CertificateEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/MaskableEnvelopeEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/IPublicKeyring.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/CompressedEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/EncryptedEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/PrivateKeyEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/PasswordProtectedEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/CertPathEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/PasswordEncryptedEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/GnuPublicKeyring.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/AuthenticatedEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/MalformedKeyringException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/IPrivateKeyring.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/BaseKeyring.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/GnuPrivateKeyring.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/IKeyring.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/PublicKeyEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/Properties.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/PrimitiveEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/MeteredInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/BinaryDataEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/EnvelopeEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/keyring/Entry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mac/BaseMac.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mac/UMac32.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mac/MacOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mac/MacFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mac/TMMH16.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mac/OMAC.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mac/UHash32$L2Hash32.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mac/HMac.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mac/UHash32.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mac/MacInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mac/IMac.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mac/HMacFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mac/UHash32$L3Hash32.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/mac/UHash32$L1Hash32.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/prng/IPBE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/prng/CSPRNG.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/prng/Fortuna.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/prng/CSPRNG$Spinner.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/prng/Fortuna$Generator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/prng/ICMGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/prng/ARCFour.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/prng/PBKDF2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/prng/PRNGFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/prng/CSPRNG$Poller.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/prng/UMacGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/prng/CSPRNG$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/CipherFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/TripleDES$Context.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/Rijndael.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/Khazad.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/IBlockCipher.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/DES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/IBlockCipherSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/Cast5$Cast5Key.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/Blowfish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/BaseCipher.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/TripleDES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/Serpent$Key.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/Anubis.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/Square.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/Twofish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/Blowfish$Context.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/DES$Context.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/WeakKeyException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/Cast5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/Serpent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/Blowfish$Block.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/cipher/NullCipher.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/GnuSasl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/GnuCrypto.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/PBKDF2SecretKeyFactory$HMacSHA256.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/PBKDF2SecretKeyFactory$HMacRipeMD160.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/PBKDF2SecretKeyFactory$HMacSHA512.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/PBKDF2SecretKeyFactory$HMacHaval.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/PBKDF2SecretKeyFactory$HMacMD4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/PBKDF2SecretKeyFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/PBKDF2SecretKeyFactory$HMacSHA1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/PBKDF2SecretKeyFactory$HMacRipeMD128.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/PBKDF2SecretKeyFactory$HMacMD2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/GnuCrypto$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/PBKDF2SecretKeyFactory$HMacTiger.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/PBKDF2SecretKeyFactory$HMacMD5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/DiffieHellmanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/PBKDF2SecretKeyFactory$HMacSHA384.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/GnuSasl$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/PBKDF2SecretKeyFactory$HMacWhirlpool.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/sig/DHParametersGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/sig/DHKeyPairGeneratorSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/sig/DHKeyFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/sig/DHParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/BlowfishSecretKeyFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/SerpentKeyGeneratorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/Cast5SecretKeyFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/DESedeSecretKeyFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/SquareSecretKeyFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/SecretKeyGeneratorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/DESSecretKeyFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/KhazadKeyGeneratorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/SecretKeyFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/BlowfishKeyGeneratorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/Cast5KeyGeneratorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/RijndaelKeyGeneratorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/TwofishKeyGeneratorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/AnubisKeyGeneratorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/AnubisSecretKeyFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/RijndaelSecretKeyFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/SerpentSecretKeyFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/TwofishSecretKeyFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/TripleDESKeyGeneratorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/SquareKeyGeneratorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/DESKeyGeneratorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/key/KhazadSecretKeyFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/params/BlockCipherParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/params/DERWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/params/DERReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/params/DEREncodingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/keyring/GnuKeyring.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacImpl$TripleDES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/MacAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacImpl$Blowfish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/HMacRipeMD160Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/HMacHavalSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacTwofishImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/HMacMD5Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/HMacWhirlpoolSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacImpl$Anubis.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacImpl$Cast5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/HMacSHA384Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/HMacSHA512Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/HMacSHA160Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacRijndaelImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacImpl$DES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/TMMH16Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/HMacMD4Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacImpl$Khazad.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacDESImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/HMacSHA256Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacImpl$Serpent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacSquareImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacTripleDESImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/HMacRipeMD128Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/UMac32Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/UHash32Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacBlowfishImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacSerpentImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacImpl$Twofish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacAnubisImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/HMacMD2Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacImpl$Rijndael.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacImpl$Square.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/HMacTigerSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacCast5Impl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/mac/OMacKhazadImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/prng/FortunaImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/prng/ICMRandomSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/prng/UMacRandomSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/prng/ARCFourRandomSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/prng/CSPRNGSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacWhirlpool$Serpent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD5$DES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD160$Serpent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacWhirlpool$Square.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/BlowfishSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD2$AES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD128$Blowfish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD128.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA1$Twofish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/SerpentSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD5$Anubis.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA512$Anubis.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD2$Square.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacTiger$DES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD5$TripleDES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA256$Square.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD4$AES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD4$Anubis.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/KhazadSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD5$Serpent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacWhirlpool$Blowfish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA256$Serpent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA256$AES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacTiger$Twofish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacHaval$Square.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/RijndaelSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD160$Square.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/ARCFourSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD2$Anubis.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD5$Twofish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA384$Blowfish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD160$DES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD128$Square.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacHaval$Serpent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD5$AES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD160$Cast5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD128$Serpent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD2$TripleDES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacHaval$Cast5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA384.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD4$DES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD4$TripleDES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA512$Square.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD128$TripleDES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA512$Twofish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/NullCipherSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacWhirlpool$Twofish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA256$Khazad.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacWhirlpool$TripleDES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacTiger$AES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/KeyWrappingAlgorithmAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA512$Serpent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA1$Square.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacTiger.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA1$Cast5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA256$Anubis.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA1$Blowfish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacTiger$TripleDES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA384$Serpent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD2$Cast5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD128$Cast5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/TripleDESSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA384$Square.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA384$Khazad.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA512$Blowfish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD128$Anubis.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/SquareSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA384$AES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacTiger$Anubis.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacHaval$TripleDES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA256$TripleDES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA256.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA1$TripleDES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacHaval$Anubis.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacTiger$Khazad.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacWhirlpool$Khazad.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacHaval$Twofish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD2$Twofish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA384$Cast5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/TwofishSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD128$Khazad.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacHaval$Blowfish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/AES256KeyWrapSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA384$TripleDES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA512$TripleDES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacWhirlpool$DES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/AES192KeyWrapSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/CipherAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD5$Khazad.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD160$Blowfish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA1$Anubis.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/AESSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacTiger$Serpent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA384$Twofish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD160.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/AnubisSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA512$AES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA256$Twofish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/DESSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA1$Khazad.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD128$DES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD5$Cast5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/TripleDESKeyWrapSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD160$TripleDES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA512$Cast5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacTiger$Blowfish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD5$Blowfish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD160$Khazad.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacTiger$Square.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA1$AES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD128$Twofish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD128$AES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacWhirlpool.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA512$Khazad.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA256$DES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD160$Twofish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD4$Khazad.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacHaval$DES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA512.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacHaval.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD2$DES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD5$Square.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD4$Square.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD4$Cast5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacWhirlpool$Anubis.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA512$DES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD4$Blowfish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA1$DES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA256$Blowfish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA1$Serpent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD2$Serpent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacHaval$Khazad.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacTiger$Cast5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacWhirlpool$Cast5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/AESKeyWrapSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacWhirlpool$AES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD2$Khazad.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/Cast5Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA384$Anubis.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA256$Cast5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacHaval$AES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/AES128KeyWrapSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD160$AES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacRipeMD160$Anubis.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD4$Twofish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacSHA384$DES.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD4$Serpent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/cipher/PBES2$HMacMD2$Blowfish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/spec/TMMHParameterSpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/spec/BlockCipherParameterSpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/crypto/jce/spec/UMac32ParameterSpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/AudioSecurityManager$Permission.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/AudioSecurityManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/AU/AUReader$AUFormatType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/AU/AUReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/AU/AUReader$AUHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/WAV/WAVReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/gstreamer/GStreamerMixerProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/gstreamer/GStreamerMixer$GstInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/gstreamer/GStreamerMixer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/gstreamer/io/GstInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/gstreamer/io/GstAudioFileReaderNativePeer$GstHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/gstreamer/io/GstAudioFileWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/gstreamer/io/GstAudioFileReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/gstreamer/io/GstAudioFileReaderNativePeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/gstreamer/lines/GstSourceDataLine.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/gstreamer/lines/GstNativeDataLine.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/gstreamer/lines/GstPipeline$CleanPipeline.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/gstreamer/lines/GstPipeline$State.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/gstreamer/lines/GstDataLine.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/sampled/gstreamer/lines/GstPipeline.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/dssi/DSSISynthesizer$DSSIInstrument.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/dssi/DSSISynthesizer$DSSIMidiChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/dssi/DSSISynthesizer$DSSIReceiver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/dssi/DSSIMidiDeviceProvider$DSSIInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/dssi/DSSISynthesizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/dssi/DSSISynthesizer$DSSISoundbank.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/dssi/DSSIMidiDeviceProvider$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/dssi/DSSIMidiDeviceProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/alsa/AlsaMidiDeviceProvider$AlsaPortInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/alsa/AlsaInputPortDevice.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/alsa/AlsaPortDevice$AlsaReceiver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/alsa/AlsaMidiDeviceProvider$AlsaInputPortInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/alsa/AlsaMidiDeviceProvider$AlsaSequencerInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/alsa/AlsaPortDevice$AlsaTransmitter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/alsa/AlsaMidiSequencerDevice.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/alsa/AlsaOutputPortDevice.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/alsa/AlsaMidiDeviceProvider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/alsa/AlsaMidiDeviceProvider$AlsaInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/alsa/AlsaPortDevice.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/alsa/AlsaMidiDeviceProvider$AlsaOutputPortInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/file/MidiDataOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/file/MidiFileReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/file/MidiDataInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/file/ExtendedMidiFileFormat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/sound/midi/file/MidiFileWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/PreSharedKeyManagerParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/SessionStoreException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/SSLProtocolVersion.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/PrivateCredentials.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/StaticTrustAnchors.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/Session.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/EntropySource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/SSLRecordHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/SRPTrustManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/AbstractSessionContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/SRPManagerParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/NullManagerParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/SSLCipherSuite.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/PreSharedKeyManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/Session$ID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CompressionMethod.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/AlertException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/TrustedAuthorities$IdentifierType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/X509TrustManagerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Signature.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CompressionMethodList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/PreSharedKeyManagerFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Jessie$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/TLSRandom.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CertificateType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/AbstractHandshake$CertVerifier.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/AbstractHandshake$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerHandshake$State.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerRSA_PSKParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientKeyExchangeBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SRPTrustManagerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientHandshake$RSAGen.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/EmptyExchangeKeys.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SimpleSessionContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Builder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Random.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/HelloRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Handshake$Type.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/DelegatedTask.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerHandshake$CertLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CertificateRequest$ClientCertificateType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Finished.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SSLHMac.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/PreSharedKeyManagerFactoryImpl$Manager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CertificateStatusRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/KeyExchangeAlgorithm.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CertificateBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientHandshake$CertLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SSLSocketImpl$SocketInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/TrustedAuthorities$TrustedAuthority.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SessionImpl$PrivateData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CompressionMethodList$Iterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerNameList$Iterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/X509KeyManagerFactory$Manager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Util$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientHelloV2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/InputSecurityParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CipherAlgorithm.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerKeyExchange.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerHandshake.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientPSKParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SimpleSessionContext$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Alert.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CertificateURL.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SRPTrustManagerFactory$Manager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CertificateStatusType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SSLServerSocketImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CertificateURL$URLAndOptionalHash.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Extension$Type.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SSLv3HMacSHAImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/AbstractHandshake$DHPhase.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientDHE_PSKParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerHandshake$RSA_PSKExchange.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CipherSuiteList$Iterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Record.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientRSA_PSKParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/AbstractHandshake$DHE_PSKGen.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ExchangeKeys.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerHelloBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/X509KeyManagerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientHandshake$ParamsVerifier.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerDHParams.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/TLSHMac.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Certificate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerNameList$NameType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CertificateURL$Iterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/MaxFragmentLength.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ContentType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Handshake$Body.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerNameList$ServerName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SSLEngineImpl$Mode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/X509TrustManagerFactory$Manager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Extension$Value.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CipherSuite.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/AbstractHandshake.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Util$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/TrustedAuthorities.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SSLv3HMacMD5Impl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientHandshake$ClientDHGen.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientHandshake$State.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerPSKParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SignatureAlgorithm.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Alert$Description.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ExtensionList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientCertificateTypeList$Iterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Constructed.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/EncryptedPreMasterSecret.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/MacAlgorithm.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/MacException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/OutputSecurityParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerHandshake$GenDH.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Util.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientHandshake$GenCertVerify.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SSLServerSocketFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CertificateStatusRequest$ResponderIdIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ProtocolVersion.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Extension.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerHello.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Util$WrappedBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CertificateURL$CertChainType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CertificateRequestBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/DiffieHellman.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CertificateVerify.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SSLSocketImpl$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientCertificateTypeList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/UnresolvedExtensionValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientDiffieHellmanPublic.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/X500PrincipalList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerNameList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Debug.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerHelloDone.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientHello.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CipherSuiteList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/TrustedAuthorities$AuthoritiesIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SSLRSASignatureImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/TruncatedHMAC.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerDHE_PSKParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SSLContextImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerRSAParams.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientKeyExchange.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SSLEngineImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SessionImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientHelloBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/CertificateRequest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SSLSocketImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerHandshake$RSAKeyExchange.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerKeyExchangeBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ServerKeyExchangeParams.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ClientHandshake.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/X500PrincipalList$Iterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Alert$Level.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/ExtensionList$ExtensionsIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SSLSocketFactoryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Handshake.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/Jessie.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SSLRandom.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/net/ssl/provider/SSLSocketImpl$SocketOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/giop/GiopNamingServiceFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/giop/ListEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/giop/GiopNamingEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/giop/GiopNamingServiceFactory$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/giop/ListBindingsEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/giop/GiopNamingServiceURLContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/giop/CorbalocParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/giop/ContextContinuation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/ictxImpl/trans/GnuName$GnuNameEnum.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/ictxImpl/trans/GnuName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/jndi/url/rmi/rmiURLContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/jndi/url/rmi/RmiContinuation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/jndi/url/rmi/RmiNamingEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/jndi/url/rmi/rmiURLContextFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/jndi/url/rmi/ListEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/jndi/url/rmi/ListBindingsEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/jndi/url/rmi/ContextContinuation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/javax/naming/jndi/url/corbaname/corbanameURLContextFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/LightweightRedirector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/j2d/IntegerGraphicsState$ScreenCoupledImage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/j2d/MappedRaster.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/j2d/Graphics2DImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/j2d/AbstractGraphicsState.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/j2d/IntegerGraphicsState.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/j2d/DirectRasterGraphics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XGraphicsConfiguration$FontMetricsCache$PerDisplayCache.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XFontPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XGraphics$XRaster.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XEventQueue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XFontMetrics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XGraphicsEnvironment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XOffScreenImage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XCanvasPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XEventLoop.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XPanelPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XGraphicsConfiguration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XCanvasPeer$DoMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XGraphicsDevice.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XGraphicsConfiguration$FontMetricsCache$PerDisplayCache$CacheEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XFramePeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XToolkit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XGraphics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/awt/xlib/XGraphicsConfiguration$FontMetricsCache.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/io/PlatformHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/io/ClassLoaderObjectInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/io/NullOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/io/Base64InputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/io/ObjectIdentityWrapper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/io/ObjectIdentityMap2Int.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/io/ASN1ParsingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/VMChannelOwner.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/SelectorProviderImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/DatagramChannelImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/DatagramChannelSelectionKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/SocketChannelSelectionKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/SocketChannelImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/OutputStreamChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/InputStreamChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/SocketChannelSelectionKeyImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/NIOServerSocket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/ChannelWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/ChannelReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/PipeImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/PipeImpl$SinkChannelImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/FileLockImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/ServerSocketChannelImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/ChannelOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/NIOConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/SelectionKeyImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/VMSelector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/PipeImpl$SourceChannelImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/ServerSocketChannelSelectionKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/SelectorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/NIODatagramSocket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/VMPipe.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/VMChannel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/NIOSocket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/ChannelInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Windows1255.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ISO_8859_1$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ByteEncodeLoopHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/MacTurkish.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ISO_8859_6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/UTF_16Decoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/MacSymbol.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/MacCroatian.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ISO_8859_1$Encoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/US_ASCII$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/UTF_16BE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/US_ASCII.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ISO_8859_7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp865.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ISO_8859_9.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/MacThai.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ISO_8859_15.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ISO_8859_8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp862.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ISO_8859_1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/MacRomania.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ISO_8859_2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp855.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp861.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/US_ASCII$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/UnicodeLittle.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/MacGreek.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ISO_8859_5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ByteCharset$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp737.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ByteCharset.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp857.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp437.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/US_ASCII$Encoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp852.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp424.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp866.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/MacCyrillic.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/US_ASCII$Decoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/UTF_16LE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp864.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Windows1258.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/MS874.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp775.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Windows1253.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp869.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/MacRoman.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/UTF_8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/MacIceland.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Windows1257.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp874.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ISO_8859_4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Windows1256.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/KOI_8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ISO_8859_1$Decoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp850.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/MacDingbat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp860.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/UTF_16Encoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/UTF_8$Decoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/EncodingHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ByteCharset$Decoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ByteCharset$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ByteDecodeLoopHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Cp863.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ISO_8859_1$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ByteCharset$Encoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Windows1254.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Windows1250.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/UTF_16.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Provider$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/MacCentralEurope.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Provider.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ISO_8859_3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Windows1251.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/Windows1252.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/UTF_8$Encoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/charset/ISO_8859_13.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/nio/channels/FileChannelImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/text/FormatCharacterIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/text/StringFormatBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/text/CharacterBreakIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/text/AttributedFormatBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/text/WordBreakIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/text/BaseBreakIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/text/SentenceBreakIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/text/LineBreakIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/text/FormatBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/RMIMarshalledObjectOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/RMIMarshalledObjectInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/RMIObjectOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/ConnectionRunnerPool.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/RMIDefaultSocketFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/UnicastRemoteCall$DummyObjectInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/RMIClassLoaderImpl$CacheKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/RMIVoidValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/UnicastServer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/RMIClassLoaderImpl$MyClassLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/RMIObjectInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/RMIClassLoaderImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/UnicastRemoteCall.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/UnicastServerRef.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/UnicastConnectionManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/RMIIncomingThread.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/UnicastRemoteCall$DummyObjectOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/ProtocolConstants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/UnicastRef.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/ActivatableRef.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/UnicastRemoteStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/UnicastConnection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/UnicastConnectionManager$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/ConnectionRunnerPool$ConnectionRunner.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/CombinedClassLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/TripleKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/ActivatableServerRef.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/server/RMIHashes.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/activation/ActivationSystemTransient.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/activation/DefaultActivationSystem.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/activation/DefaultActivationGroup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/activation/BidiTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/registry/RegistryImpl_Stub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/registry/RegistryImpl_Skel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/registry/RegistryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/dgc/DGCImpl_Stub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/dgc/DGCImpl$RefProtector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/dgc/DGCImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/dgc/LeaseRenewingTask.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/dgc/DGCImpl_Skel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/rmi/dgc/LeaseRenewingTask$LeaseTimerTask.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/DoubleKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/IntrospectionIncubator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/DefaultExceptionListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/BeanInfoEmbryo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/DummyAppletContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/DummyAppletStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/ExplicitBeanInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/editors/StringEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/editors/NativeLongEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/editors/NativeByteEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/editors/NativeShortEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/editors/FontEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/editors/NativeDoubleEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/editors/NativeIntEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/editors/ColorEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/editors/NativeFloatEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/editors/NativeBooleanEditor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/ClassHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PropertyContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/StaticMethodContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser$ShortHandlerCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser$StringHandlerCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/ObjectContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/DummyContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser$DoubleHandlerCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/IndexContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/DecoderContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/AbstractElementHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/ObjectHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser$IntHandlerCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser$ClassHandlerCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/CharHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser$CharHandlerCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/ByteHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/MethodContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/GrowableArrayContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser$ByteHandlerCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/DummyHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/SimpleHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/ConstructorContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/AbstractObjectContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/BooleanHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/ElementHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/MethodFinder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/AbstractCreatableObjectContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/ArrayContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser$ObjectHandlerCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser$FloatHandlerCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser$VoidHandlerCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/IntHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser$JavaHandlerCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser$BooleanHandlerCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/AbstractContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/ArrayHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser$LongHandlerCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/FloatHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser$ArrayHandlerCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/Context.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/NullHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/StringHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser$NullHandlerCreator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/AssemblyException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/PersistenceParser$Creator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/VoidHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/LongHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/DoubleHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/JavaHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/decoder/ShortHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/ObjectId.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/CollectionPersistenceDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/MapPersistenceDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/ReportingScannerState.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/IgnoringScannerState.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/ScanEngine.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/ClassPersistenceDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/StAXWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/Writer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/GenericScannerState.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/Root.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/Root$RootElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/ArrayPersistenceDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/Context.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/ScannerState.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/PrimitivePersistenceDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/elements/ObjectInstantiation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/elements/List_Set.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/elements/Array_Get.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/elements/StaticFieldAccess.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/elements/NullObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/elements/MethodInvocation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/elements/StaticMethodInvocation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/elements/PrimitiveInstantiation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/elements/List_Get.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/elements/ClassResolution.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/elements/Element.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/elements/StringReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/elements/ObjectReference.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/elements/Array_Set.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/beans/encoder/elements/ArrayInstantiation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/DoubleEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/WeakIdentityHashMap$WeakBucket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/WeakIdentityHashMap$WeakBucket$WeakEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/LRUCache.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/WeakIdentityHashMap$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/WeakIdentityHashMap$WeakEntrySet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/Base64.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/WeakIdentityHashMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/ZoneInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/EmptyEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/CharIndexedCharSequence.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenWordBoundary.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/REMatchEnumeration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenNamedProperty$JavaCategoryHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenRepeated$StackedInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/REException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenRepeated.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenPOSIX.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenLookBehind.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/REToken.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/REFilterInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/CharIndexedString.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenEndSub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/BacktrackStack$Backtrack.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenAny.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenNamedProperty$POSIXHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RE$CharExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenRepeated$TryAnotherResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenIndependent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenOneOf.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/UncheckedRE.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RESyntax.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenNamedProperty$UnicodeBlockHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenNamedProperty$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenNamedProperty$Handler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenLookAhead.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/CharIndexedInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenStart.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RE$ParseCharClassResult.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RE$NamedProperty.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenLookBehind$RETokenMatchHereOnly.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenNamedProperty$UnicodeCategoryHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/CharIndexedStringBuffer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenRange.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenEnd.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/CharIndexed.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenEndOfPreviousMatch.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenRepeated$DoablesFinder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenNamedProperty.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenRepeated$FindMatchControl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/BacktrackStack.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RE$CharUnit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/CharIndexedCharArray.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenChar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/REMatch.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RE$IntPair.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenNamedProperty$UnicodeCategoriesHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/regex/RETokenBackRef.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/jar/JarUtils.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/prefs/GConfBasedFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/prefs/FileBasedPreferences$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/prefs/NodeWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/prefs/NodeReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/prefs/MemoryBasedPreferences.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/prefs/FileBasedPreferences.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/prefs/FileBasedFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/prefs/MemoryBasedFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/prefs/GConfBasedPreferences.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/util/prefs/gconf/GConfNativePeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/Properties$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/Requires.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/OID.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/PolicyFile$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/Engine.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/Registry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/PolicyFile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/Properties.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/Configuration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/SignatureFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/ISignature.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/ISignatureCodec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/SignatureCodecFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/BaseSignature.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/rsa/RSA.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/rsa/RSAPKCS1V1_5Signature.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/rsa/RSASignatureFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/rsa/EMSA_PKCS1_V1_5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/rsa/EME_PKCS1_V1_5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/rsa/RSAPKCS1V1_5SignatureRawCodec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/rsa/RSAPSSSignature.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/rsa/EMSA_PSS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/rsa/RSAPKCS1V1_5SignatureX509Codec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/rsa/RSAPSSSignatureRawCodec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/dss/DSSSignatureRawCodec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/dss/DSSSignature.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/sig/dss/DSSSignatureX509Codec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/der/DER.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/der/DERValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/der/DERWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/der/DERReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/der/BitString.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/der/DEREncodingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/provider/PKIXCertPathValidatorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/provider/Gnu$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/provider/CollectionCertStoreImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/provider/DefaultPolicy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/provider/X509CertificateFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/provider/Gnu.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/pkcs/PKCS7Data.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/pkcs/PKCS7SignedData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/pkcs/SignerInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/action/GetSecurityPropertyAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/action/SetAccessibleAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/action/GetPropertyAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/util/FormatUtil.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/util/ExpirableObject$Destroyer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/util/IntegerUtil.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/util/Prime.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/util/Sequence.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/util/ByteArray.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/util/ByteBufferOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/util/SimpleList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/util/ExpirableObject.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/util/DerUtil.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/util/Util.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/util/PRNG.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/util/IntegerUtil$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/KeyPairCodecFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/IKeyPairCodec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/KeyPairGeneratorFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/IKeyPairGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/rsa/GnuRSAPublicKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/rsa/RSAKeyPairGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/rsa/RSAKeyPairRawCodec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/rsa/GnuRSAPrivateKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/rsa/RSAKeyPairPKCS8Codec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/rsa/RSAKeyPairX509Codec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/rsa/GnuRSAKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/dss/DSSKeyPairPKCS8Codec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/dss/DSSKeyPairRawCodec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/dss/FIPS186.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/dss/DSSKeyPairX509Codec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/dss/DSSKeyPairGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/dss/DSSPrivateKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/dss/DSSKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/key/dss/DSSPublicKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/ber/BER.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/ber/BERReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/ber/BERValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/ber/BEREncodingException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/hash/Sha256.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/hash/IMessageDigest.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/hash/Whirlpool.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/hash/MD4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/hash/BaseHash.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/hash/HashFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/hash/MD5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/hash/Tiger.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/hash/Haval.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/hash/RipeMD160.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/hash/MD2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/hash/RipeMD128.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/hash/Sha384.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/hash/Sha160.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/hash/Sha512.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/prng/RandomEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/prng/IRandom.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/prng/BasePRNG.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/prng/LimitReachedException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/prng/EntropySource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/prng/PRNGFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/prng/MDGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/prng/RandomEventListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/X509CRLEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/X509CertSelectorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/GnuPKIExtension.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/X509CertPath.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/PolicyNodeImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/X509CRL.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/X500DistinguishedName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/X509Certificate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/Util.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/X509CRLSelectorImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/SubjectKeyIdentifier.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/GeneralSubtree.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/CRLNumber.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/PolicyConstraint.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/ExtendedKeyUsage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/GeneralName$Kind.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/NameConstraints.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/SubjectAlternativeNames.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/Extension$Value.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/AuthorityKeyIdentifier.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/KeyUsage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/GeneralNames.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/GeneralName.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/BasicConstraints.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/ReasonCode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/Extension.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/PolicyMappings.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/PrivateKeyUsagePeriod.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/CertificatePolicies.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/x509/ext/IssuerAlternativeNames.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/SHA384withRSA.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/RSAPSSRawSignatureSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/SHA512withRSA.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/SHA160withDSS.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/KeyPairGeneratorAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/EncodedKeyFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/DSSKeyFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/RSAKeyPairGeneratorSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/DSSKeyPairGeneratorSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/RSAKeyFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/MD2withRSA.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/DSSRawSignatureSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/DSSParameters.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/SHA160withRSA.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/SHA256withRSA.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/MD5withRSA.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/DSSParametersGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/sig/SignatureAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/hash/HavalSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/hash/MD2Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/hash/RipeMD128Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/hash/Sha384Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/hash/RipeMD160Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/hash/Sha512Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/hash/WhirlpoolSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/hash/Sha256Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/hash/MD5Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/hash/MD4Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/hash/MessageDigestAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/hash/TigerSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/hash/Sha160Spi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/prng/WhirlpoolRandomSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/prng/HavalRandomSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/prng/VMSecureRandom.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/prng/MD5RandomSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/prng/RipeMD160RandomSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/prng/SecureRandomAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/prng/Sha512RandomSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/prng/RipeMD128RandomSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/prng/Sha256RandomSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/prng/MD4RandomSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/prng/Sha160RandomSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/prng/Sha384RandomSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/prng/MD2RandomSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/security/jce/prng/TigerRandomSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/math/GMP.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/math/Fixed.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/math/MPN.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/VMCPStringBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/CPStringBuilder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/CharData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/MainThread.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/InstrumentationImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/ArrayHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/ClassHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/VMInstrumentationImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/VMCompilationMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/VMOperatingSystemMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/ThreadMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/VMThreadMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/VMMemoryManagerMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/GarbageCollectorMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/VMMemoryMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/BeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/ClassLoadingMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/MemoryManagerMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/MemoryPoolMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/MemoryMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/OperatingSystemMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/VMRuntimeMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/VMGarbageCollectorMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/CompilationMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/RuntimeMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/VMClassLoadingMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/management/VMMemoryPoolMXBeanImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/reflect/MethodSignatureParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/reflect/TypeSignature.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/reflect/TypeVariableImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/reflect/ClassSignatureParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/reflect/UnresolvedTypeVariable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/reflect/FieldSignatureParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/reflect/ParameterizedTypeImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/reflect/TypeImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/reflect/GenericSignatureParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/reflect/WildcardTypeImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/lang/reflect/GenericArrayTypeImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/EventModifier.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/GradientPaintContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/EmbeddedWindow.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/BitMaskExtent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/ComponentReshapeEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/ClasspathToolkit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/ComponentDataBlitOp.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/BitwiseXORComposite.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/AWTUtilities.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/BitwiseXORComposite$GeneralContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/LowPriorityEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/Buffers.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/BitwiseXORComposite$IntContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/AWTUtilities$VisibleComponentList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/AWTUtilities$VisibleComponentList$VisibleComponentIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/ClasspathGraphicsEnvironment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/dnd/GtkMouseDragGestureRecognizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/dnd/peer/gtk/GtkDragSourceContextPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/dnd/peer/gtk/GtkDropTargetContextPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/dnd/peer/gtk/GtkDropTargetPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/print/PostScriptGraphics2D.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/print/JavaPrinterJob.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/print/JavaPrinterGraphics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/print/SpooledDocument.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/ScanlineCoverage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/ScanlineCoverage$Range.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/Pixelizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/ImagePaint$ImagePaintContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/CubicSegment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/AbstractGraphics2D.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/PixelCoverage$Bucket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/ActiveEdges.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/ImagePaint.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/AlphaCompositeContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/RasterGraphics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/ScanlineCoverage$Iterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/LineSegment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/ScanlineConverter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/ScanlineCoverage$Coverage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/Segment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/QuadSegment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/Scanline.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/PolyEdge.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/PixelCoverage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/ShapeCache.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/TextCacheKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/ShapeWrapper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/TexturePaintContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/java2d/PolyEdgeComparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/image/AsyncImage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/image/ImageConverter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/image/ImageDecoder$DataInputStreamWrapper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/image/XBMDecoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/image/AsyncImage$AsyncImageSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/image/ImageDecoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/color/SrgbConverter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/color/RgbProfileConverter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/color/ClutProfileConverter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/color/ToneReproductionCurve.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/color/ColorLookUpTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/color/TagEntry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/color/ColorSpaceConverter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/color/GrayProfileConverter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/color/GrayScaleConverter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/color/CieXyzConverter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/color/PyccConverter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/color/ProfileHeader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/color/LinearRGBConverter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/GnomeDesktopPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/ClasspathDesktopPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/ClasspathFontPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/GLightweightPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/ClasspathFontPeer$LRUCache.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/KDEDesktopPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/NativeEventLoopRunningEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/EmbeddedWindowPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingTextAreaPeer$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingListPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingTextFieldPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingCheckboxPeer$SwingCheckbox.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingMenuItemPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingLabelPeer$SwingLabel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingContainerPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingCheckboxPeer$SwingCheckboxListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingButtonPeer$SwingButtonListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingCheckboxPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingToolkit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingWindowPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingTextAreaPeer$SwingTextArea.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingMenuBarPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingMenuPeer$SwingMenu.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingFramePeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingTextAreaPeer$SwingScrollPane.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingCanvasPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingComponentPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingListPeer$SwingList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingButtonPeer$SwingButton.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingPanelPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingTextFieldPeer$SwingTextField.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingMenuBarPeer$SwingMenuBar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingTextAreaPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingMenuItemPeer$SwingMenuItemListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingMenuPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingButtonPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/swing/SwingLabelPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/headless/HeadlessToolkit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/headless/HeadlessGraphicsEnvironment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtCanvasPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/NativeWrapper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtDialogPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtMenuPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtComponentPeer$RepaintTimerTask.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtMenuComponentPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtButtonPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/MainQtThread.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtMenuItemPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtChoicePeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtComponentPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtPanelPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtFontPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtEmbeddedWindowPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtScrollPanePeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtScreenDevice.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtImageDirectGraphics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtImageConsumer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtFramePeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QPen.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtFontMetrics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtCheckboxPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtScrollbarPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtPopupMenuPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtWindowPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtLabelPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtImage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtToolkit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtRepaintThread.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtContainerPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtAudioClip.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtVolatileImage$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtImageGraphics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtVolatileImage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtFileDialogPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtTextFieldPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtGraphics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QPainterPath.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtComponentGraphics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtTextAreaPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtListPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtScreenDeviceConfiguration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QMatrix.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtRepaintThread$RepaintComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtMenuBarPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/qt/QtGraphicsEnvironment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkTextAreaPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GdkPixbufDecoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkEmbeddedWindowPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkMenuComponentPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkWindowPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/FreetypeGlyphVector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/AsyncImage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/AsyncImage$NullImageSource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkComponentPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/CairoSurfaceGraphics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/VolatileImageGraphics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkLabelPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkCheckboxMenuItemPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkTextFieldPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkMainThread.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkPopupMenuPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkToolkit$LRUCache.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GdkPixbufDecoder$ImageFormatSpec.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkToolkit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkFileDialogPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GdkFontPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkMenuPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice$X11DisplayMode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkMenuBarPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkClipboardNotifier.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/AsyncImage$Loader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GdkGraphicsConfiguration.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/ComponentGraphicsCopy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/BufferedImageGraphics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GdkPixbufDecoder$GdkPixbufReaderSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkFramePeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GdkRobotPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkDialogPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GdkFontPeer$GdkFontMetrics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkComponentPeer$RepaintTimerTask.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkPanelPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkListPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkImage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkSelection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkButtonPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GdkFontPeer$GdkFontLineMetrics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GdkPixbufDecoder$GdkPixbufReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkGenericPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GdkPixbufDecoder$GdkPixbufWriterSpi.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkCursor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkMouseInfoPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkScrollPanePeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GdkPixbufDecoder$GdkPixbufWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkContainerPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkVolatileImage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkClipboard.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkCheckboxPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkImageConsumer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkCanvasPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/ComponentGraphics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkScrollbarPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/CairoSurface.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/CairoGraphics2D.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkMenuItemPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/peer/gtk/GtkChoicePeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/FontDelegate.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/GNUGlyphVector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/OpenTypeFontPeer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/OpenTypeFontPeer$XLineMetrics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/OpenTypeFontPeer$XFontMetrics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/FontFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/CharGlyphMap$Type4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/CharGlyphMap$Type12.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/CharGlyphMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/NameDecoder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/CharGlyphMap$Type0.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/GlyphNamer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/Scaler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/OpenTypeFont.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/MacResourceFork$Resource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/OpenTypeFontFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/MacResourceFork.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/Hinter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/CharGlyphMap$Dummy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/truetype/VirtualMachine.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/truetype/TrueTypeScaler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/truetype/GlyphMeasurer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/truetype/GlyphLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/truetype/Fixed.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/truetype/GlyphLocator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/truetype/ZonePathIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/truetype/Point.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/truetype/GlyphLocator$FourByte.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/truetype/Zone.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/opentype/truetype/GlyphLocator$TwoByte.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/autofit/LatinBlue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/autofit/GlyphHints.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/autofit/HintScaler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/autofit/AutoHinter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/autofit/LatinMetrics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/autofit/Utils.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/autofit/Width.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/autofit/Script.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/autofit/Constants.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/autofit/Segment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/autofit/LatinAxis.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/autofit/Latin.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/autofit/ScriptMetrics.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/autofit/AxisHints.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/awt/font/autofit/Edge.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/EmptyX509TrustManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/HeaderFieldHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/URLParseError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/PlainSocketImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/LineInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/DefaultProxySelector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/ImageHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/GetLocalHostAction.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/CRLFOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/DefaultContentHandlerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/IndexListParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/CRLFInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/PlainSocketImpl$SocketOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/PlainSocketImpl$SocketInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/PlainDatagramSocketImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/local/LocalServerSocket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/local/LocalSocket.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/local/LocalSocketImpl$LocalOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/local/LocalSocketImpl$LocalInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/local/LocalSocketAddress.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/local/LocalSocketImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/loader/FileURLLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/loader/FileResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/loader/RemoteResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/loader/JarURLLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/loader/RemoteURLLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/loader/Resource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/loader/Load_gcjlib$SoResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/loader/URLLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/loader/Load_gcjlib.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/loader/JarURLResource.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/loader/URLStreamHandlerCache.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/gcjlib/Connection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/gcjlib/Handler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/core/Connection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/core/Handler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/core/CoreInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/file/Connection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/file/Handler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/file/Connection$StaticData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/BlockOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/Handler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/CompressedOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/FTPConnection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/FTPURLConnection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/FTPResponse.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/FTPURLConnection$ClosingOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/DTP.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/FTPURLConnection$ClosingInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/FTPException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/ActiveModeDTP.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/DTPOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/StreamOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/CompressedInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/PassiveModeDTP.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/DTPInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/BlockInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/ftp/StreamInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/https/Handler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/jar/Connection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/jar/Handler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/jar/Connection$JarFileCache.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/Headers$HeaderElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/Authenticator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/Handler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/Credentials.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/Response.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/HTTPURLConnection$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/ByteArrayRequestBodyWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/HTTPURLConnection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/HTTPDateFormat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/ChunkedInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/ResponseHeaderHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/HTTPConnection$Pool.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/RequestBodyWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/LimitedLengthInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/Cookie.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/HTTPConnection.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/Request.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/SimpleCookieManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/CookieManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/Headers.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/net/protocol/http/HTTPConnection$Pool$Reaper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/locale/LocaleData.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/lib/gnu/java/locale/LocaleHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/m4/ax_func_which_gethostbyname_r.m4",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/doc-files/ComponentUI-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/doc-files/TreeUI-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/doc-files/ComponentUI-1.dia",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicGraphicsUtils-2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicBorders.MarginBorder-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicGraphicsUtils-6.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicGraphicsUtils-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicBorders.SplitPaneBorder-2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicBorders.FieldBorder-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicBorders.SplitPaneDividerBorder-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicBorders.ButtonBorder-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicBorders.RadioButtonBorder-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicGraphicsUtils-5.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicBorders-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicGraphicsUtils-7.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicBorders.MenuBarBorder-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicBorders.ToggleButtonBorder-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicBorders-2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicGraphicsUtils-3.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicBorders.SplitPaneBorder-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/plaf/basic/doc-files/BasicGraphicsUtils-4.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/border/doc-files/MatteBorder-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/border/doc-files/SoftBevelBorder-2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/border/doc-files/LineBorder-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/border/doc-files/MatteBorder-5.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/border/doc-files/BevelBorder-3.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/border/doc-files/MatteBorder-3.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/border/doc-files/EmptyBorder-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/border/doc-files/EtchedBorder-2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/border/doc-files/BevelBorder-2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/border/doc-files/SoftBevelBorder-3.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/border/doc-files/MatteBorder-2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/border/doc-files/EtchedBorder-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/border/doc-files/MatteBorder-6.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/border/doc-files/MatteBorder-4.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/border/doc-files/SoftBevelBorder-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/javax/swing/border/doc-files/BevelBorder-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/stock-go-forward.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/big-fullscreen.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/badge.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/aicas.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/stock-quit.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/big-home.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/stock-new.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/stock-save.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/stock-mic.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/stock-go-down.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/palme.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/reload.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/stock-go-back.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/big-warning.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/stock-open.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/stock-cut.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/stock-spell-check.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/back.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/stock-save-as.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/stock-copy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/examples/gnu/classpath/examples/icons/stock-paste.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/MethodAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/ClassVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/ClassAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/Handler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/FieldVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/Opcodes.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/AnnotationWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/AnnotationVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/Item.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/ClassReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/ClassWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/ByteVector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/MethodWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/Type.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/FieldWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/Label.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/MethodVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/Attribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/Edge.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/LineNumberNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/TryCatchBlockNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/MethodInsnNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/FieldNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/MethodNode$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/FieldInsnNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/TypeInsnNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/InsnNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/MultiANewArrayInsnNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/AnnotationNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/IincInsnNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/IntInsnNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/MemberNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/ClassNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/MethodNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/AbstractInsnNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/TableSwitchInsnNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/LabelNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/LookupSwitchInsnNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/LocalVariableNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/JumpInsnNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/LdcInsnNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/VarInsnNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/InnerClassNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/analysis/SimpleVerifier.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/analysis/BasicVerifier.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/analysis/DataflowValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/analysis/Frame.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/analysis/Analyzer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/analysis/BasicInterpreter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/analysis/AnalyzerException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/analysis/SmallSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/analysis/Value.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/analysis/BasicValue.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/analysis/DataflowInterpreter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/analysis/IntMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/analysis/Interpreter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/tree/analysis/Subroutine.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/attrs/StackMapAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/attrs/StackMapTableAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/attrs/StackMapType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/attrs/StackMapFrame.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/TraceAnnotationVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/ASMifierMethodVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/TraceSignatureVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/CheckClassAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/CheckAnnotationAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/ASMifierAnnotationVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/ASMifierFieldVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/ASMifierClassVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/ASMifierAbstractVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/TraceClassVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/TraceFieldVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/CheckMethodAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/TraceMethodVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/AbstractVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/TraceAbstractVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/CheckFieldAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/attrs/ASMStackMapAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/attrs/Traceable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/attrs/ASMifiable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/util/attrs/ASMStackMapTableAttribute.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/signature/SignatureWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/signature/SignatureReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/signature/SignatureVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$InterfacesRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$InterfaceRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/SAXFieldAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$LabelRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$AnnotationParameterRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$FieldRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$TableSwitchRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$AnnotationValueRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/Processor$SubdocumentHandlerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$LocalVarRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$ExceptionRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$Rule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/Processor$ProtectedInputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$TableSwitchLabelRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/Processor$EntryElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$MethodRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/Processor$OutputSlicingHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/Processor$SingleDocElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/SAXAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$SourceRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/SAXAnnotationAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$LineNumberRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$AnnotationValueAnnotationRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$Opcode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/Processor$ZipEntryElement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/Processor$ASMContentHandlerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/Processor$TransformerHandlerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/Processor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$AnnotationDefaultRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$InnerClassRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$LookupSwitchLabelRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$AnnotationValueEnumRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$OpcodesRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$MaxRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$AnnotationRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$RuleSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$OpcodeGroup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$AnnotationValueArrayRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/Processor$ContentHandlerFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/SAXCodeAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/Processor$SAXWriter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/Processor$InputSlicingHandler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/Processor$SAXWriterFactory.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$ClassRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/SAXClassAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$TryCatchRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$LookupSwitchRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$ExceptionsRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/xml/ASMContentHandler$OuterClassRule.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/commons/LocalVariablesSorter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/commons/TableSwitchGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/commons/SerialVersionUIDAdder$Item.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/commons/Method.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/commons/SerialVersionUIDAdder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/commons/EmptyVisitor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/commons/StaticInitMerger.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/commons/AdviceAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/commons/GeneratorAdapter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/optimizer/Shrinker$ConstantComparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/optimizer/FieldConstantsCollector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/optimizer/AnnotationConstantsCollector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/optimizer/MethodOptimizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/optimizer/ClassConstantsCollector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/optimizer/NameMapping.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/optimizer/JarOptimizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/optimizer/ConstantPool.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/optimizer/ClassOptimizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/optimizer/Constant.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/optimizer/Shrinker.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/asm/org/objectweb/asm/optimizer/MethodConstantsCollector.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/external/asm/org/objectweb/asm/attrs/StackMapTableAttribute.java",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/resource/gnu/classpath/tools/gjdoc/htmldoclet/inherit.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/sun/rmi/rmic/Main.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/sun/rmi/rmic/Messages.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/RootDoc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/Tag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/MethodDoc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/Doc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/Parameter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/ThrowsTag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/TypeVariable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/ParamTag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/PackageDoc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/SerialFieldTag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/ProgramElementDoc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/SourcePosition.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/Doclet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/SeeTag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/ExecutableMemberDoc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/FieldDoc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/MemberDoc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/ClassDoc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/Type.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/DocErrorReporter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/javadoc/ConstructorDoc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/tools/javac/Main.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/tools/javac/Messages.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/tools/javadoc/Main.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/tools/javah/Main.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/com/sun/tools/doclets/Taglet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/IOToolkit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/FileSystemClassLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/MalformedInputListener.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/FileSystemClassLoader$FileStreamInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/StringToolkit.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/FileSystemClassLoader$StreamInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/FileSystemClassLoader$JarStreamInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/MalformedInputEvent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/NotifyingInputStreamReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/Main$9.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/Main$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/StandaloneAppletWindow$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/ErrorApplet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/PluginAppletWindow.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/Main$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/PluginAppletContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/StandaloneAppletWindow.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/StandaloneAppletContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/Main.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/AppletTag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/StandaloneAppletViewer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/Main$8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/Main$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/Messages.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/AppletSecurityManager.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/Main$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/CommonAppletStub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/Main$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/Main$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/TagParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/AppletClassLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/Main$10.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/Main$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/PluginAppletViewer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/appletviewer/CommonAppletContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/common/ProviderUtil.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/common/ClasspathToolParser$AtFileArgumentCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/common/ProviderUtil$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/common/CallbackUtil.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/common/SecurityProviderInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/common/Persistent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/common/Persistent$ExitTask.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/common/ClasspathToolParser$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/common/Messages.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/common/ProviderUtil$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/common/ClasspathToolParser$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/common/ClasspathToolParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmid/Main$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmid/Main$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmid/ActivationSystemImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmid/Main.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmid/ActivationSystemImpl_Stub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmid/PersistentBidiHashTable$AdaptedReader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmid/Main$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmid/Messages.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmid/Main$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmid/PersistentBidiHashTable$WriteToDiskTask.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmid/PersistentBidiHashTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmid/Main$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmid/Main$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$21.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$9.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/ParamTagImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/PackageComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/FieldDocImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/RootDocImpl$ResolvedImportClassFile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/SourcePositionImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/SourceComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/CommentComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/ThrowsTagImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Whitespace.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/FunctionComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/IgnoredFileParseException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/DocImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/RootDocImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$12.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/InheritDocTagImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$OptionProcessor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Timer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$22.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/MemberDocImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$11.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/RootDocImpl$ResolvedImportReflectionClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Parser$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/TypeVariableImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$15.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/TextTagImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/RootDocImpl$ResolvedImport.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$16.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/BracketClose.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$19.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/ValueTagImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/ClassComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/ClassDocImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$14.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/RootDocImpl$ScheduledClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/ClassDocProxy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/EmptyStatementComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/GjdocRootDoc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/ConstructorDocImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/SeeTagImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/ProgramElementDocImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Parser$Context.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/TimerDoclet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/ParameterImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/TimerDoclet$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$17.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$24.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$23.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/RootDocImpl$ResolvedImportNotFound.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/ExecutableMemberDocImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/DirectoryTree.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/TemporaryStore.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$13.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$18.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$20.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/BlockSourceComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$25.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/TypeImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/SlashSlashCommentComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/FieldComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/AbstractTagImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/StaticBlockComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/RootDocImpl$ResolvedImportReflectionPackage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/TagContainer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/DirectoryTree$FileNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/WritableType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Debug.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/SerialFieldTagImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/RootDocImpl$ResolvedImportPackageFile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/ClassDocReflectedImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/GjdocPackageDoc.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/ImportComponent.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/JavadocWrapper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/ArrayCharacterIterator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$10.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/PackageDocImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/ErrorReporter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Parser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/Main$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/ParseException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/MethodDocImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/TagImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/LinkTagImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/ConstantChar.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/BinaryComputationExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/ModuloExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/BinaryEqualityExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/GreaterThanExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/AdditionExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/SubtractionExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/UnaryExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/ConstantInteger.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/ConditionalExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/NotExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/ShiftLeftExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/ConstantDouble.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/EvaluatorEnvironment.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/JavaLexer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/LogicalOrExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/TypeCastExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/LessThanOrEqualExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/JavaTokenTypes.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/ConstantBoolean.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/NegateExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/LogicalNotExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/ConstantNull.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/ConstantString.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/LessThanExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/BinaryShiftExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/IdentifierExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/EqualExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/ConstantByte.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/MultiplicationExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/ConstantShort.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/ExclusiveOrExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/BinaryExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/NotEqualExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/BitShiftRightExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/ConstantFloat.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/ShiftRightExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/GreaterThanOrEqualExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/AndExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/InclusiveOrExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/DivisionExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/Type.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/LogicalAndExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/Context.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/Evaluator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/IllegalExpressionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/ConstantLong.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/BinaryRelationExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/JavaRecognizer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/BinaryLogicalExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/CircularExpressionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/BinaryBitwiseExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/ConstantExpression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/Expression.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/gjdoc/expr/UnknownIdentifierException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/Main$9.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/JarSigner.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/Main$12.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/Main$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/Main$11.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/Main$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/Main$ToolParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/HashUtils.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/Main.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/Main$8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/Main$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/Messages.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/Main$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/Main$ToolParserCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/Main$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/SFHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/Main$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/Main$10.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/Main$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jarsigner/JarVerifier.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/serialver/SerialVer$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/serialver/SerialVer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/serialver/SerialVer$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/serialver/SerialVer$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/serialver/Messages.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/tnameserv/Main.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/tnameserv/Messages.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/tnameserv/Main$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/tnameserv/Main$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/java2xhtml/Java2xhtml.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/java2xhtml/Java2xhtml$State.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$9.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/RmicBackend.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/CompilationError.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Generator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/ClassRmicCompiler$MethodRef.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$12.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$11.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$15.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/RMICException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$16.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/ClassRmicCompiler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/RmiMethodGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$14.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Variables.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$17.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/AbstractMethodGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$13.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$18.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/SourceGiopRmicCompiler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Messages.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/SourceRmicCompiler.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/MethodGenerator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/WrapUnWrapper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/GiopIo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$10.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/HashFinder.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmic/Main$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/getopt/Parser$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/getopt/Parser$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/getopt/OptionException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/getopt/OptionGroup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/getopt/Parser$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/getopt/Messages.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/getopt/FileArgumentCallback.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/getopt/Parser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/getopt/Option.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/taglets/CopyrightTaglet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/taglets/SinceTaglet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/taglets/VersionTaglet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/taglets/GenericTaglet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/taglets/AuthorTaglet$EmailReplacement.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/taglets/ValueTaglet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/taglets/TagletContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/taglets/CodeTaglet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/taglets/GnuExtendedTaglet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/taglets/DeprecatedTaglet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/taglets/AuthorTaglet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/native2ascii/Native2ASCII$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/native2ascii/Native2ASCII$HandleFile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/native2ascii/Native2ASCII$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/native2ascii/Messages.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/native2ascii/Native2ASCII$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/native2ascii/Native2ASCII.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/Text.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/Main$9.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/PathOptionGroup$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/ClassWrapper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/GcjhMain$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/CniPrintStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/Main$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/PathOptionGroup$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/Main$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/PathOptionGroup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/PathOptionGroup$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/FieldHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/PathOptionGroup$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/PackageWrapper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/GcjhMain$9.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/GcjhMain$8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/GcjhMain.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/JniHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/Main.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/JniPrintStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/MethodHelper.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/GcjhMain$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/Main$8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/Main$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/JniIncludePrinter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/JniStubPrinter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/GcjhMain$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/GcjhMain$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/PathOptionGroup$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/Main$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/PathOptionGroup$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/CniIncludePrinter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/Keywords.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/Main$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/Main$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/GcjhMain$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/Main$10.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/CniStubPrinter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/GcjhMain$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/Main$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/GcjhMain$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/javah/Printer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/orbd/PersistentMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/orbd/PersistentContextMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/orbd/Main$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/orbd/PersistentMap$Entry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/orbd/PersistentContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/orbd/Main.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/orbd/Main$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/orbd/Messages.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/orbd/Main$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/orbd/Main$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/orbd/Main$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/SelfCertCmd$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/StorePasswdCmd$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyCloneCmd$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/GenKeyCmd$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CertReqCmd$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ExportCmd$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ImportCmd$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ImportCmd$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/IdentityDBCmd$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ExportCmd.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/IdentityDBCmd$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ImportCmd$8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/IdentityDBCmd.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/IdentityDBCmd$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/GenKeyCmd$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CACertCmd$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/Main$NoParseOption.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CertReqCmd$10.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/GenKeyCmd$10.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ExportCmd$8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/SelfCertCmd$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/GenKeyCmd$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ExportCmd$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ExportCmd$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/StorePasswdCmd$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/SelfCertCmd$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/GenKeyCmd$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/DeleteCmd$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ImportCmd$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyCloneCmd$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/GenKeyCmd$9.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/Command$ShutdownHook.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyCloneCmd$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/SelfCertCmd.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ImportCmd$9.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/Main$ShutdownHook.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/StorePasswdCmd$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/DeleteCmd$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ExportCmd$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyPasswdCmd$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/SelfCertCmd$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ListCmd$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CertReqCmd$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CACertCmd$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CACertCmd$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/SelfCertCmd$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ExportCmd$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CertReqCmd.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/SelfCertCmd$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/DeleteCmd$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/PrintCertCmd$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ImportCmd$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CACertCmd$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/DeleteCmd$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyPasswdCmd.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/SelfCertCmd$9.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyPasswdCmd$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/GenKeyCmd$8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ImportCmd$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyPasswdCmd$8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/StorePasswdCmd$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/StorePasswdCmd$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CertReqCmd$8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyCloneCmd$9.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/Main.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyPasswdCmd$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/GenKeyCmd$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ExportCmd$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ListCmd$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyPasswdCmd$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CertReqCmd$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyCloneCmd$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/GenKeyCmd$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/StorePasswdCmd$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ImportCmd$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/DeleteCmd$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/DeleteCmd.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/Messages.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CACertCmd.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/PrintCertCmd.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CertReqCmd$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/SelfCertCmd$10.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ImportCmd$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CertReqCmd$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CACertCmd$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/SelfCertCmd$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CertReqCmd$9.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ImportCmd.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/GenKeyCmd$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CertReqCmd$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyCloneCmd.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyPasswdCmd$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyCloneCmd$8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyCloneCmd$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyCloneCmd$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/PrintCertCmd$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ListCmd$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyPasswdCmd$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ExportCmd$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyCloneCmd$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ListCmd.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CACertCmd$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/CertReqCmd$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/IdentityDBCmd$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/Command.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/GenKeyCmd$11.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/GenKeyCmd.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ListCmd$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/KeyPasswdCmd$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/GenKeyCmd$12.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ListCmd$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/StorePasswdCmd.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ListCmd$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/DeleteCmd$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ListCmd$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/ImportCmd$10.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/SelfCertCmd$8.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/IdentityDBCmd$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/keytool/IdentityDBCmd$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/DocletOptionPackageWildcard.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/DocletOption.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/InvalidPackageWildcardException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/DocletOptionString.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/PackageMatcher.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/AbstractDoclet$UsageType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/StandardTaglet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/DocletOptionColonSeparated.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/TagletPrinter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/AbstractDoclet$IndexKey.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/AbstractDoclet$DocletOptionGroup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/AbstractDoclet$DocletOptionTag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/InlineTagRenderer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/AbstractDoclet$InterfaceRelation.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/DocletConfigurationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/PackageGroup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/AbstractDoclet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/DocletOptionFile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/DocletOptionFlag.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/htmldoclet/CssClass.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/htmldoclet/HtmlDoclet$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/htmldoclet/HtmlDoclet$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/htmldoclet/ExternalDocSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/htmldoclet/HtmlPage.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/htmldoclet/HtmlTagletContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/htmldoclet/HtmlDoclet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/htmldoclet/HtmlDoclet$TreeNode.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/htmldoclet/HtmlDoclet$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/xmldoclet/Driver.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/xmldoclet/Driver$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/xmldoclet/Driver$NullErrorReporter.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/xmldoclet/TargetContext.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/xmldoclet/HtmlRepairer$TagInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/xmldoclet/Driver1_4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/xmldoclet/Driver$UsageType.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/xmldoclet/HtmlRepairer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/xmldoclet/doctranslet/DocTranslet$DocErrorReporterOutputStream.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/xmldoclet/doctranslet/OutputFileInfo.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/xmldoclet/doctranslet/DocTransletConfigurationException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/xmldoclet/doctranslet/JarClassLoader.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/xmldoclet/doctranslet/DocTransletException.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/xmldoclet/doctranslet/DocTranslet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/xmldoclet/doctranslet/DocTransletOptions.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/doclets/debugdoclet/DebugDoclet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Extractor.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Main$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Lister.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Main$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Creator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Indexer.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Main$HandleFile.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Main$JarParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Main.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Main$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Messages.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Updater.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Main$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Action.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Main$ModeOption.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Main$7.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Main$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/WorkSet.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Main$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/jar/Entry.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmiregistry/PersistentHashTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmiregistry/PersistentHashTable$WriteToDiskTask.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmiregistry/Main$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmiregistry/Main$6.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmiregistry/RegistryImpl_Stub.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmiregistry/RegistryImpl_Skel.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmiregistry/Main.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmiregistry/Main$5.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmiregistry/Messages.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmiregistry/Main$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmiregistry/Main$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmiregistry/Main$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/classpath/tools/rmiregistry/RegistryImpl.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/ToolPrefix.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/BlockMap$PtrMarks.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/MemoryAnalyze.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/MemoryAnalyze$SubstringComparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/SymbolLookup.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/BytePtr.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/ObjectMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/MemoryAnalyze$OptionParser.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/MemoryAnalyze$1$Info.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/ObjectMap$ObjectItem.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/BlockMap$SizeKind.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/MemoryAnalyze$1.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/ItemList.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/BlockMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/MemoryMap$Range.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/MemoryAnalyze$3.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/MemoryMap.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/MemoryAnalyze$4.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/MemoryAnalyze$2.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/MemoryMap$RangeComparator.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/tools/classes/gnu/gcj/tools/gc_analyze/SymbolTable.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/resource/gnu/java/util/regex/MessagesBundle_it.properties",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/resource/gnu/java/util/regex/MessagesBundle_fr.properties",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/resource/gnu/java/locale/LocaleInformation_sr_BA_Latn.properties",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/resource/gnu/java/locale/LocaleInformation_hy_AM.properties",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/resource/gnu/java/locale/LocaleInformation_am_ET.properties",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/resource/gnu/java/locale/LocaleInformation_aa_ET.properties",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/resource/gnu/java/locale/LocaleInformation_om_ET.properties",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/java/awt/doc-files/capjoin.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/java/awt/geom/doc-files/Area-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/java/awt/geom/doc-files/CubicCurve2D-5.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/java/awt/geom/doc-files/CubicCurve2D-4.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/java/awt/geom/doc-files/CubicCurve2D-2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/java/awt/geom/doc-files/QuadCurve2D-2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/java/awt/geom/doc-files/QuadCurve2D-5.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/java/awt/geom/doc-files/Ellipse-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/java/awt/geom/doc-files/CubicCurve2D-3.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/java/awt/geom/doc-files/QuadCurve2D-3.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/java/awt/geom/doc-files/QuadCurve2D-4.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/java/awt/geom/doc-files/GeneralPath-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/java/awt/geom/doc-files/CubicCurve2D-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/java/awt/geom/doc-files/QuadCurve2D-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/gnu/javax/swing/plaf/gtk/icons/Question.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/gnu/javax/swing/plaf/gtk/icons/TreeLeaf.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/gnu/javax/swing/plaf/gtk/icons/JavaCupLarge.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/gnu/javax/swing/plaf/gtk/icons/Warn.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/gnu/javax/swing/plaf/gtk/icons/JavaCup.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/gnu/javax/swing/plaf/gtk/icons/TreeClosed.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/gnu/javax/swing/plaf/gtk/icons/Error.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/gnu/javax/swing/plaf/gtk/icons/TreeOpen.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/gnu/javax/swing/plaf/gtk/icons/slider.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/gnu/javax/swing/plaf/gtk/icons/file-folders.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/gnu/javax/swing/plaf/gtk/icons/TreeLeaf-normal.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/gnu/javax/swing/plaf/gtk/icons/Inform.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/gnu/java/awt/doc-files/BitwiseXORComposite-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/gnu/java/awt/font/opentype/truetype/doc-files/ZonePathIterator-1.dia",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/classpath/gnu/java/awt/font/opentype/truetype/doc-files/ZonePathIterator-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jvmti/geterrorname.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jvmti/getmethodname.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jvmti/getallthreads.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jvmti/events.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jvmti/interp/getlocalvartable.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jvmti/interp/getargssize.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jvmti/interp/getstacktrace.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.loader/TestMultiple.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.loader/TestLeak.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.loader/dummy.class",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.loader/TestParent.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.loader/TestEarlyGC.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/err13.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/anonarray3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/bytearray.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/anfi.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/err14.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr22211.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/MathBuiltin.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr8676.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/G19990303_01.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/ArrayStore.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Thread_Sleep.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/err10.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Serialization.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/anon3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr27171.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/II.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Float_1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr21844.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/err9.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/final_inner.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/initfield.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Synch.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/indirect.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/N19990310_4.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/stacktrace.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Class_1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR27908.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/md5test.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/err4.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr8415.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Thread_Wait_2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr13107_3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR5057.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/direct_read.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/WalkerTest.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/invokethrow.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr13107_2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/verify.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/private_indirect_write.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR12416.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR35020.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/anon2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/CompareNaN.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR260.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/multiple_finit.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/stringconst2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR218.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/inner1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr13107.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/initexc.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/InvokeInterface.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/err11.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr184.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Float_2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR6520.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/anon4.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR16867.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/err5.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/negzero.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Matrix4f.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Thread_Sleep_2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/private_indirect_read.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/G19990303_02.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/SyncGlobal.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Array_3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR8866.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr26390.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/G19990302_02.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/RH194522.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/anon.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/inner4.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Thread_Monitor.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Thread_Join.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/instance.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/tp.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR12350.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR5057_2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/N19990310_3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/StringBuffer_overflow.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/err3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Thread_Wait_Interrupt.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Invoke_2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR160.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/indirect_write.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR56.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Throw_3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Process_6.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Thread_Interrupt.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/G19990301_01.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr109.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR6820.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/err8.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR18699.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/err12.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/stub.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/N19990310_02.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/anonarray.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR12656.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Overflow.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/emptystring.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Process_7.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/StackTrace2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Process_4.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/private_direct_read.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/instinit.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/bclink.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR6729.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/private_direct_write.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR36252.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR141.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/assign.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR26858.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/sourcelocation.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/klass.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr26990.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr83.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR19870_2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Invoke_1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/instinit2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR19921.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/inner2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/InvokeReturn.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/String_overflow.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/stringconst.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Thread_Wait.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Process_1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR29013.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/FileHandleGcTest.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR19870.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR162.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/G19990310_01.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Process_3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Array_2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR25535.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/N19990310_5.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Divide_1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Throw_2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/TestProxy.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/inline.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Process_2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Array_1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr6388.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Thread_Alive.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/SyncTest.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/KeepInline.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Thread_HoldsLock.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/final_int.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr24321.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Divide_2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Process_5.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/test_long.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/utilTest.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/indirect_read.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/update_outer.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/err2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Final.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Throw_1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/shatest.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/G19990304_01.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr25676.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/ProxyTest.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr8823.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/assign2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/TLtest.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr16789.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/inner3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/nested_with_ctor.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/newarray_overflow.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/invoke_from_inner.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR12915.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/InterfaceDispatch.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/inner_array.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR242.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR55.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR6085.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/anon_ctor_itf_arg.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/LargeFile.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR29495.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/StaticConstructor.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/EvaluationOrder.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR6204.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/tmi.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR3731.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/Shazam.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/inner_interface.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR31264.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/override.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR7482.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/search_outer.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/direct_write.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr17536.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/final_static_and_friend.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr21785.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/utf8concat.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/err6.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr100.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/ExtraClassLoader.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr8945.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/err1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/err7.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr133.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR3096.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/anonarray2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/PR20056.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/ArrayStore2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/StringBuffer_1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.lang/pr179.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jar/simple.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jar/TestClosureGC.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.cni/shortfield.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.cni/longfield.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.cni/PR9577.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/overload.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/calls.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/register.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/final_method.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/iface.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/findclass.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/jniutf.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/directbuffer.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/cxxtest.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/invoke.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/pr23739.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/virtual.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/register2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/noclass.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/findclass2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/martin.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/simple_int.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/pr29812_injar.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/PR15133.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/throwit.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/bytebuffer.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/field.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/PR28178.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/pr11951.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/PR18116.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/pr29812.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/pr18278.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/init.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libjava/testsuite/libjava.jni/invocation/PR16923.jar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/po/fr.po",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_multimap_text_insert_small_s2p_tree.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_exception_hierarchy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_priority_queue_text_modify_up.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_node_invariants.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_tree_order_statistics.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_gp_hash_int_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_gp_hash_int_subscript_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_restoring_node_invariants.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_priority_queue_text_push_pop.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_hash_range_hashing_seq_diagram2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_gp_hash_int_subscript_insert.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_hash_int_erase_mem.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_priority_queue_tag_hierarchy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_embedded_lists_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_resize_policy_cd.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_multimap_text_insert_small_s2p_hash.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_priority_queue_text_join.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_cc_hash_int_subscript_insert.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_tree_int_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_multimap_text_find_small_s2p_hash.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_balls_and_bins.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_tree_text_lor_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_embedded_lists_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_tree_node_invariants.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_hash_range_hashing_seq_diagram.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_multimap_text_insert_mem_small_s2p_hash.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_cc_hash_int_subscript_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_binary_priority_queue_int_push.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_container_tag_hierarchy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_hash_policy_cd.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_trie_node_updator_policy_cd.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_priority_queue_different_underlying_dss.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_insert_resize_sequence_diagram3.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_multimap_text_insert_mem_small_s2p_tree.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_embedded_lists_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_priority_queue_text_pop_mem.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_multimap_text_find_large_s2p_hash.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_invalidation_guarantee_erase.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_insert_resize_sequence_diagram1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_point_iterators_range_ops_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_binary_priority_queue_int_push_pop.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_multimap_text_find_small_s2p_tree.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_pat_trie.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_hash_text_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_update_seq_diagram.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_tree_node_invalidations.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_tree_text_insert_node.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_multimap_text_insert_large_s2p_tree.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_tree_text_insert_trie.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_pairing_priority_queue_text_modify_up_thin.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_multimap_text_find_large_s2p_tree.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_hash_ranged_hash_range_hashing_fns.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_priority_queue_int_push_pop.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_invalidation_tag_hierarchy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_tree_node_updator_policy_cd.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_multimap_text_insert_mem_large_s2p_hash.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_point_iterators_range_ops_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_pairing_priority_queue_text_modify_down_thin.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_point_iterator_hierarchy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_pairing_priority_queue_text_push.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_tree_text_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_insert_resize_sequence_diagram2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_rationale_null_node_updator.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_ccgp_hash_int_subscript_insert.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_priority_queue_int_push.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_multimap_text_insert_large_s2p_hash.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_different_underlying_dss_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_tree_text_insert_vector.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/confdeps.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_cc_hash_int_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_hash_zlob_int_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_list_update.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_different_underlying_dss_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_pairing_priority_queue_text_push_pop.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_simple_list.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_tree_split_join.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_priority_queue_text_push.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_priority_queue_text_modify_down.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/images/pbds_multimap_text_insert_mem_large_s2p_tree.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/ext/lwg-active.html",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/ext/lwg-defects.html",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/html/ext/lwg-closed.html",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/confdeps.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_insert_small_s2p_tree.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_exception_hierarchy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_text_modify_up.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_node_invariants.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_order_statistics.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_cc_hash_int_subscript_insert.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_gp_hash_int_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_find_large_s2p_hash.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_gp_hash_int_subscript_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_int_find.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_restoring_node_invariants.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_text_push_pop.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_hash_range_hashing_seq_diagram2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_gp_hash_int_subscript_insert.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_text_push.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_hash_int_erase_mem.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_tag_hierarchy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_embedded_lists_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_resize_policy_cd.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_insert_small_s2p_tree.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_int_push_pop.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_insert_small_s2p_hash.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_text_join.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_cc_hash_int_subscript_insert.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_int_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_find_large_s2p_tree.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_find_small_s2p_tree.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_insert_mem_large_s2p_hash.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_find_small_s2p_hash.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_balls_and_bins.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_text_lor_find.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_pairing_priority_queue_text_modify_down_thin.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_text_lor_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_embedded_lists_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_node_invariants.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_text_find.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_hash_range_hashing_seq_diagram.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_insert_mem_small_s2p_hash.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_text_insert_vector.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_text_push_pop.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_insert_mem_small_s2p_hash.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_cc_hash_int_subscript_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_binary_priority_queue_int_push.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_container_tag_hierarchy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_hash_policy_cd.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_trie_node_updator_policy_cd.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_insert_small_s2p_hash.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_different_underlying_dss.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_text_modify_up.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_insert_resize_sequence_diagram3.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_insert_mem_small_s2p_tree.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_pairing_priority_queue_text_push.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_embedded_lists_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_text_pop_mem.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_find_large_s2p_hash.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_exception_hierarchy.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_invalidation_guarantee_erase.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_hash_zlob_int_find.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_insert_resize_sequence_diagram1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_text_join.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_point_iterators_range_ops_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_insert_mem_large_s2p_tree.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_ccgp_hash_int_subscript_insert.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_binary_priority_queue_int_push_pop.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_container_tag_hierarchy.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_insert_large_s2p_tree.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_hash_int_erase_mem.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_find_small_s2p_tree.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_pat_trie.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_hash_text_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_binary_priority_queue_int_push.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_update_seq_diagram.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_insert_mem_small_s2p_tree.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_node_invalidations.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_text_insert_node.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_invalidation_tag_hierarchy.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_gp_hash_int_find.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_insert_large_s2p_tree.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_text_insert_trie.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_pairing_priority_queue_text_modify_up_thin.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_text_insert_trie.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_gp_hash_int_subscript_find.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_find_large_s2p_tree.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_hash_ranged_hash_range_hashing_fns.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_int_push_pop.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_pairing_priority_queue_text_modify_up_thin.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_invalidation_tag_hierarchy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_find_small_s2p_hash.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_gp_hash_int_subscript_insert.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_text_insert_node.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_node_updator_policy_cd.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_insert_mem_large_s2p_hash.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_tag_hierarchy.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_point_iterators_range_ops_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_cc_hash_int_find.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_pairing_priority_queue_text_modify_down_thin.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_point_iterator_hierarchy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_pairing_priority_queue_text_push.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_text_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_binary_priority_queue_int_push_pop.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_insert_resize_sequence_diagram2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_text_pop_mem.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_insert_large_s2p_hash.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_rationale_null_node_updator.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_ccgp_hash_int_subscript_insert.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_int_push.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_insert_large_s2p_hash.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_different_underlying_dss_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_text_insert_vector.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/confdeps.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_cc_hash_int_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_hash_zlob_int_find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_list_update.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_different_underlying_dss_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_order_statistics.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_pairing_priority_queue_text_push_pop.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_text_modify_down.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_pairing_priority_queue_text_push_pop.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_simple_list.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_hash_text_find.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_int_push.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_split_join.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_tree_split_join.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_text_push.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_cc_hash_int_subscript_find.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_priority_queue_text_modify_down.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/doc/xml/images/pbds_multimap_text_insert_mem_large_s2p_tree.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/testsuite/27_io/basic_filebuf/cons/wchar_t/10132-1.cc",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/testsuite/22_locale/time_put/put/char/9780-1.cc",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/testsuite/22_locale/collate/compare/char/2.cc",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/testsuite/22_locale/collate/compare/wchar_t/2.cc",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/testsuite/22_locale/collate/hash/char/2.cc",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/testsuite/22_locale/collate/hash/wchar_t/2.cc",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/testsuite/22_locale/collate/transform/char/2.cc",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/testsuite/22_locale/collate/transform/wchar_t/2.cc",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/testsuite/22_locale/ctype/cons/char/1.cc",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/testsuite/22_locale/collate_byname/named_equivalence.cc",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libstdc++-v3/testsuite/22_locale/messages/members/char/2.cc",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/sr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/fi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/el.po",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/sv.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/ca.po",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/uk.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/pt_BR.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/ja.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/fr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/de.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/id.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/be.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/nl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/eo.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/vi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/zh_CN.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/el.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/fr.po",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/da.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/zh_TW.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/es.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/ca.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/ru.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/tr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libcpp/po/da.po",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/zlib/contrib/README.contrib",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/zlib/contrib/blast/test.pk",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/zlib/contrib/puff/zeros.raw",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/zlib/contrib/dotzlib/DotZLib.chm",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/zlib/contrib/dotzlib/DotZLib/Deflater.cs",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/zlib/contrib/dotzlib/DotZLib/DotZLib.cs",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/zlib/contrib/dotzlib/DotZLib/Inflater.cs",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/zlib/contrib/dotzlib/DotZLib/UnitTests.cs",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/zlib/contrib/dotzlib/DotZLib/GZipStream.cs",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/zlib/contrib/dotzlib/DotZLib/CodecBase.cs",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/zlib/contrib/masmx86/inffas32.obj",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/zlib/contrib/masmx86/gvmat32.obj",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/zlib/contrib/masmx64/inffasx64.obj",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/zlib/contrib/masmx64/gvmat64.obj",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgfortran/intrinsics/transpose_generic.c",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgfortran/m4/transpose.m4",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgfortran/generated/transpose_i16.c",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgfortran/generated/transpose_c4.c",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgfortran/generated/transpose_c8.c",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgfortran/generated/transpose_r8.c",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgfortran/generated/transpose_c16.c",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgfortran/generated/transpose_c10.c",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgfortran/generated/transpose_r4.c",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgfortran/generated/transpose_i4.c",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgfortran/generated/transpose_r10.c",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgfortran/generated/transpose_r16.c",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgfortran/generated/transpose_i8.c",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/boehm-gc/cord/de_win.ICO",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/boehm-gc/doc/README.Mac",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/regexp/testdata/re2-exhaustive.txt.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/encoding/json/testdata/code.json.gz",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-005.gray.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-005.gray.q50.2x2.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-001.q50.440.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-001.q50.422.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-005.gray.q50.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-001.5bpp.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-005.gray.q50.2x2.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-005.gray.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-001.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-001.q50.444.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-001.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-001.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-001.q50.440.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-001.q50.420.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-001.q50.444.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-001.q50.422.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-001.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-005.gray.q50.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-001.q50.420.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/testdata/video-001.interlaced.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/invalid-zlib.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/invalid-crc32.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/invalid-trunc.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/invalid-noend.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn4a16.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn0g04-31.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn2c08.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn4a08.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn0g08.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn3p02.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn3p08.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn0g02.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn0g04.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn0g16.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn0g02-29.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn3p08-trns.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn3p01.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn6a16.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn0g01-30.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn3p04.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn2c16.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn6a08.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/image/png/testdata/pngsuite/basn0g01.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/archive/zip/testdata/test-trailing-junk.zip",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/archive/zip/testdata/symlink.zip",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/archive/zip/testdata/crc32-not-streamed.zip",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/archive/zip/testdata/go-with-datadesc-sig.zip",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/archive/zip/testdata/readme.notzip",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/archive/zip/testdata/test.zip",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/archive/zip/testdata/zip64.zip",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/archive/zip/testdata/gophercolor16x16.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/archive/zip/testdata/winxp.zip",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/archive/zip/testdata/unix.zip",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/archive/zip/testdata/go-no-datadesc-sig.zip",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/archive/zip/testdata/dd.zip",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/archive/zip/testdata/readme.zip",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/archive/tar/testdata/writer-big.tar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/archive/tar/testdata/v7.tar",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/debug/elf/testdata/go-relocation-test-gcc441-x86.obj",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/debug/elf/testdata/hello-world-core.gz",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/debug/elf/testdata/gcc-amd64-openbsd-debug-with-rela.obj",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/debug/elf/testdata/go-relocation-test-gcc441-x86-64.obj",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/debug/elf/testdata/go-relocation-test-gcc424-x86-64.obj",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/debug/dwarf/testdata/typedef.macho",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libgo/go/debug/dwarf/testdata/typedef.elf",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/intl/locale.alias",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/contrib/regression/GCC_Regression_Tester.wdgt/Icon.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/contrib/regression/GCC_Regression_Tester.wdgt/Default.png",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/contrib/regression/GCC_Regression_Tester.wdgt/ja.lproj/InfoPlist.strings",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/contrib/regression/GCC_Regression_Tester.wdgt/en.lproj/InfoPlist.strings",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/contrib/regression/GCC_Regression_Tester.wdgt/de.lproj/InfoPlist.strings",
        "/tmp/vanessa/spack-stage/spack-stage-gcc-4.8.4-ntv3mivf5hreiay6sdn2kfffpxclz6ae/spack-src/libiberty/strverscmp.c"
    ],
    "total_files": 79137
}