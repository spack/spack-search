{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/regression/run-all.sh": "#!/bin/bash\n\nif [ \"$#\" -ne 3 ]; then\n    echo \"Usage: run-all.sh <darshan_install_path> <tmp_path> <platform>\" 1>&2\n    echo \"Example: ./run-all.sh ~/darshan-install /tmp/test ws\" 1>&2\n    exit 1\nfi\n\n# set variables for use by other sub-scripts\nexport DARSHAN_PATH=$1\nexport DARSHAN_TMP=$2\nexport DARSHAN_PLATFORM=$3\n# number of procs that most test jobs will use\nexport DARSHAN_DEFAULT_NPROCS=4\n\nDARSHAN_TESTDIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\nexport DARSHAN_TESTDIR\n\n# check darshan path\nif [ ! -x $DARSHAN_PATH/bin/darshan-parser ]; then\n    echo \"Error: $DARSHAN_PATH doesn't contain a valid Darshan install.\" 1>&2\n    exit 1\nfi\n\n# check and/or create tmp path\nif [ ! -d $DARSHAN_TMP ]; then\n    mkdir -p $DARSHAN_TMP\nfi\n\nif [ ! -d $DARSHAN_TMP ]; then\n    echo \"Error: unable to find or create $DARSHAN_TMP\" 1>&2\n    exit 1\nfi\nif [ ! -w $DARSHAN_TMP ]; then\n    echo \"Error: unable to write to $DARSHAN_TMP\" 1>&2\n    exit 1\nfi\n\n# make sure that we have sub-scripts for the specified platform\nif [ ! -d $DARSHAN_TESTDIR/$DARSHAN_PLATFORM ]; then\n    echo \"Error: unable to find scripts for platform $DARSHAN_PLATFORM\" 1>&2\n    exit 1\nfi\n\n# set up environment for tests according to platform\nsource $DARSHAN_TESTDIR/$DARSHAN_PLATFORM/env.sh\n\n# in case of using LD_PRELOAD, it is possible errors with Darshan symbols\n# (e..g, forgetting to resolve a symbol Darshan wraps using dlsym) can\n# cause arbitrary binaries to crash. We check the output of the true\n# command to successfully identify failures like this and exit\ntrue_out=`/bin/true 2>&1`\nif [ $? -ne 0 -o -n \"$true_out\" ]; then\n    echo -n $true_out > tmp\n    echo \"environment setup failed\"\n    exit 1\nfi\n\nfailure_count=0\n\nfor i in `ls $DARSHAN_TESTDIR/test-cases/*.sh`; do\n    echo Running ${i}...\n    $i\n    if [ $? -ne 0 ]; then\n        echo \"Error: failed to execute test case $i\"\n\tfailure_count=$((failure_count+1))\n    fi\n    echo Done.\ndone\n\nif [ \"$failure_count\" -eq 0 ]; then\n\texit 0\nelse\n\techo $failure_count tests failed\n\texit 1\nfi\n",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-runtime/darshan.h": "/*\n * Copyright (C) 2015 University of Chicago.\n * See COPYRIGHT notice in top-level directory.\n *\n */\n\n#ifndef __DARSHAN_H\n#define __DARSHAN_H\n\n#include <unistd.h>\n#include <sys/types.h>\n#include <stdint.h>\n#include <mpi.h>\n\n#include \"darshan-log-format.h\"\n#include \"darshan-common.h\"\n\n/* macros for declaring wrapper functions and calling MPI routines\n * consistently regardless of whether static or dynamic linking is used\n */\n#ifdef DARSHAN_PRELOAD\n\n#include <dlfcn.h>\n#include <stdlib.h>\n\n#define DARSHAN_FORWARD_DECL(__func,__ret,__args) \\\n  __ret (*__real_ ## __func)__args = NULL\n\n#define DARSHAN_DECL(__func) __func\n\n#define DARSHAN_MPI_CALL(__func) __real_ ## __func\n\n#define MAP_OR_FAIL(__func) \\\n    if (!(__real_ ## __func)) \\\n    { \\\n        __real_ ## __func = dlsym(RTLD_NEXT, #__func); \\\n        if(!(__real_ ## __func)) { \\\n           fprintf(stderr, \"Darshan failed to map symbol: %s\\n\", #__func); \\\n           exit(1); \\\n       } \\\n    }\n\n#else\n\n#define DARSHAN_FORWARD_DECL(__name,__ret,__args) \\\n  extern __ret __real_ ## __name __args;\n\n#define DARSHAN_DECL(__name) __wrap_ ## __name\n\n#define DARSHAN_MPI_CALL(__func) __func\n\n#define MAP_OR_FAIL(__func)\n\n#endif\n\n/* default number of records to attempt to store for each module */\n#define DARSHAN_DEF_MOD_REC_COUNT 1024\n\n/* module developers must define a 'darshan_module_shutdown' function\n * for allowing darshan-core to call into a module and retrieve final\n * output data to be saved in the log.\n *\n * NOTE: module developers can use this function to run collective\n * MPI operations at shutdown time. Typically this functionality\n * has been used to reduce records shared globablly (given in the\n * 'shared_recs' array) into a single data record.\n */\ntypedef void (*darshan_module_shutdown)(\n    MPI_Comm mod_comm,  /* MPI communicator to run collectives with */\n    darshan_record_id *shared_recs, /* list of shared data record ids */\n    int shared_rec_count, /* count of shared data records */\n    void **mod_buf, /* output parameter to save module buffer address */\n    int *mod_buf_sz /* output parameter to save module buffer size */\n);\n\n/* stores FS info from statfs calls for a given mount point */\nstruct darshan_fs_info\n{\n    int fs_type;\n    int block_size;\n    int ost_count;\n    int mdt_count;\n};\n\n/* darshan_instrument_fs_data()\n *\n * Allow file system-specific modules to instrument data for the file\n * stored at 'path'. 'fs_type' is checked to determine the underlying\n * filesystem and calls into the corresponding file system instrumentation\n * module, if defined -- currently we only have a Lustre module. 'fd' is\n * the file descriptor corresponding to the file, which may be needed by\n * the file system to retrieve specific parameters.\n */\nvoid darshan_instrument_fs_data(\n    int fs_type,\n    const char *path,\n    int fd);\n\n/*****************************************************\n* darshan-core functions exported to darshan modules *\n*****************************************************/\n\n/* darshan_core_register_module()\n *\n * Register module identifier 'mod_id' with the darshan-core runtime\n * environment, allowing the module to store I/O characterization data.\n * 'mod_shutdown_func is a pointer to a function responsible for\n * shutting down the module and returning final output data to darshan-core.\n * 'inout_mod_buf_size' is an input/output argument, with it being\n * set to the requested amount of module memory on input, and set to\n * the amount allocated by darshan-core on output. If given, 'rank' is\n * a pointer to an integer which will contain the calling process's\n * MPI rank on return. If given, 'sys_mem_alignment' is a pointer to\n * an integer which will contain the memory alignment value Darshan\n * was configured with on return.\n */\nvoid darshan_core_register_module(\n    darshan_module_id mod_id,\n    darshan_module_shutdown mod_shutdown_func,\n    int *inout_mod_buf_size,\n    int *rank,\n    int *sys_mem_alignment);\n\n/* darshan_core_unregister_module()\n * \n * Unregisters module identifier 'mod_id' with the darshan-core runtime,\n * removing the given module from the resulting I/O characterization log.\n */\nvoid darshan_core_unregister_module(\n    darshan_module_id mod_id);\n\n/* darshan_core_gen_record_id()\n *\n * Returns the Darshan record ID correpsonding to input string 'name'.\n */\ndarshan_record_id darshan_core_gen_record_id(\n    const char *name);\n\n/* darshan_core_register_record()\n *\n * Register a record with the darshan-core runtime, allowing it to be\n * properly tracked and (potentially) correlated with records from other\n * modules. 'rec_id' is the Darshan record id as given by the\n * `darshan_core_gen_record_id` function. 'name' is the the name of the\n * Darshan record (e.g., the full file path), which is ignored if NULL is\n * passed. 'mod_id' is the identifier of the calling module. 'rec_len'\n * is the size of the record being registered with Darshan. If given,\n * 'fs_info' is a pointer to a structure containing information on\n * the underlying FS this record is associated with (determined by\n * matching the file name prefix with Darshan's list of tracked mount\n * points). Returns a pointer to the address the record should be\n * written to on success, NULL on failure.\n */\nvoid *darshan_core_register_record(\n    darshan_record_id rec_id,\n    const char *name,\n    darshan_module_id mod_id,\n    int rec_len,\n    struct darshan_fs_info *fs_info);\n\n/* darshan_core_wtime()\n *\n * Returns the elapsed time relative to (roughly) the start of\n * the application.\n */\ndouble darshan_core_wtime(void);\n\n/* darshan_core_excluded_path()\n *\n * Returns true (1) if the given file path 'path' is in Darshan's\n * list of excluded file paths, false (0) otherwise.\n */\nint darshan_core_excluded_path(\n    const char * path);\n\n#endif /* __DARSHAN_H */\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.0.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.0.1.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.0.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.0.0.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.0.1.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.0.0.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/pcarns_cp_id25476_1-16-15155_2.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/perf/harms_IOR_id350892_2-9-74258_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/perf/harms_partshared_id354969_2-25-56979_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/perf/harms_IOR_id350665_2-8-78651_12.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/perf/harms_IOR_id350690_2-8-83458_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.7_id178062_12-31-64875_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/pcarns_mpi-io-test-x86_64-2.2.8_id12451_8-28-46056-5041743303181360857_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.0.0_id180936_12-31-64879_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.2.9_id259616_5-6-66953-5018725671498589377_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.3.1_id426989_3-13-61875-4723177368895607730_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86_64-2.2.0_id3850_2-29-36600-13333843235489639491_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86_64-2.0.2_id15172_12-8-37621-274509493643487663_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.12_id178062_12-31-64874_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.0.2_id205555_12-8-36850-17729250439914587931_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86-64-2.2.4_id20631_12-13-43744-16977121959925885678_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86-2.0.0_id3251_7-16-33980_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.2.5_id100_1-1-168-10859250841018226043_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/pcarns_mpi-io-test-x86_64-2.2.9_id8751_5-6-43885-16506732777848558488_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86_64-2.1.1_id20947_6-23-63417-274509493643487663_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.6_id178062_12-31-64878_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.5_id178062_12-31-64872_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.10_id178062_12-31-64874_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/pcarns_mpi-io-test-x86_64-2.3.1_id13154_3-13-47125-7023224190677163982_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86_64-2.0.0_id16795_7-16-38059_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.11_id178062_12-31-64875_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86-64-2.2.6_id23755_4-23-38771-2124448682003854839_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.0_id178062_12-31-64877_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.1.1_id240158_6-23-63667-13564362473375795675_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.8_id178062_12-31-64878_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.4_id178062_12-31-64876_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.2.5_id60773_2-26-55789-7981255518662743653_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.15_id178062_12-31-64878_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.9_id178062_12-31-64880_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.2.6_id80230_4-23-63443-13434414552960059406_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.1_id178062_12-31-64874_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86-2.0.2_id18650_12-7-37315-16484262108403302634_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.2.0_id100_2-29-58016-11764280592576253912_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.2_id178062_12-31-64879_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86-2.1.1_id19454_6-23-43783-16484262108403302634_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86_64-2.2.5_id5824_2-27-41403-11500169623986228326_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.13_id178062_12-31-64878_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.2.4_id100_12-13-62209-215568122286385789_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.2.4_id47560_12-13-67385-3671058397549123273_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.14_id178062_12-31-64878_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.2.8_id121829_8-28-59756-8698475815754165825_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.3_id178062_12-31-64875_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.2.6_id100_1-1-169-3365979776611785968_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/darshan-util/extern/uthash-1.9.2.tar.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-runtime-3.1.0-kvlb3qaleweg6iew26scuy37t3lm62cv/spack-src/doc/darshan-dev-modular-runtime.png"
    ],
    "total_files": 244
}