{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/plugin/plugin_dlopen.go": "// Copyright 2016 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build linux,cgo darwin,cgo freebsd,cgo\n\npackage plugin\n\n/*\n#cgo linux LDFLAGS: -ldl\n#include <dlfcn.h>\n#include <limits.h>\n#include <stdlib.h>\n#include <stdint.h>\n\n#include <stdio.h>\n\nstatic uintptr_t pluginOpen(const char* path, char** err) {\n\tvoid* h = dlopen(path, RTLD_NOW|RTLD_GLOBAL);\n\tif (h == NULL) {\n\t\t*err = (char*)dlerror();\n\t}\n\treturn (uintptr_t)h;\n}\n\nstatic void* pluginLookup(uintptr_t h, const char* name, char** err) {\n\tvoid* r = dlsym((void*)h, name);\n\tif (r == NULL) {\n\t\t*err = (char*)dlerror();\n\t}\n\treturn r;\n}\n*/\nimport \"C\"\n\nimport (\n\t\"errors\"\n\t\"sync\"\n\t\"unsafe\"\n)\n\nfunc open(name string) (*Plugin, error) {\n\tcPath := make([]byte, C.PATH_MAX+1)\n\tcRelName := make([]byte, len(name)+1)\n\tcopy(cRelName, name)\n\tif C.realpath(\n\t\t(*C.char)(unsafe.Pointer(&cRelName[0])),\n\t\t(*C.char)(unsafe.Pointer(&cPath[0]))) == nil {\n\t\treturn nil, errors.New(`plugin.Open(\"` + name + `\"): realpath failed`)\n\t}\n\n\tfilepath := C.GoString((*C.char)(unsafe.Pointer(&cPath[0])))\n\n\tpluginsMu.Lock()\n\tif p := plugins[filepath]; p != nil {\n\t\tpluginsMu.Unlock()\n\t\tif p.err != \"\" {\n\t\t\treturn nil, errors.New(`plugin.Open(\"` + name + `\"): ` + p.err + ` (previous failure)`)\n\t\t}\n\t\t<-p.loaded\n\t\treturn p, nil\n\t}\n\tvar cErr *C.char\n\th := C.pluginOpen((*C.char)(unsafe.Pointer(&cPath[0])), &cErr)\n\tif h == 0 {\n\t\tpluginsMu.Unlock()\n\t\treturn nil, errors.New(`plugin.Open(\"` + name + `\"): ` + C.GoString(cErr))\n\t}\n\t// TODO(crawshaw): look for plugin note, confirm it is a Go plugin\n\t// and it was built with the correct toolchain.\n\tif len(name) > 3 && name[len(name)-3:] == \".so\" {\n\t\tname = name[:len(name)-3]\n\t}\n\tif plugins == nil {\n\t\tplugins = make(map[string]*Plugin)\n\t}\n\tpluginpath, syms, errstr := lastmoduleinit()\n\tif errstr != \"\" {\n\t\tplugins[filepath] = &Plugin{\n\t\t\tpluginpath: pluginpath,\n\t\t\terr:        errstr,\n\t\t}\n\t\tpluginsMu.Unlock()\n\t\treturn nil, errors.New(`plugin.Open(\"` + name + `\"): ` + errstr)\n\t}\n\t// This function can be called from the init function of a plugin.\n\t// Drop a placeholder in the map so subsequent opens can wait on it.\n\tp := &Plugin{\n\t\tpluginpath: pluginpath,\n\t\tloaded:     make(chan struct{}),\n\t}\n\tplugins[filepath] = p\n\tpluginsMu.Unlock()\n\n\tinitStr := make([]byte, len(pluginpath)+len(\"..inittask\")+1) // +1 for terminating NUL\n\tcopy(initStr, pluginpath)\n\tcopy(initStr[len(pluginpath):], \"..inittask\")\n\n\tinitTask := C.pluginLookup(h, (*C.char)(unsafe.Pointer(&initStr[0])), &cErr)\n\tif initTask != nil {\n\t\tdoInit(initTask)\n\t}\n\n\t// Fill out the value of each plugin symbol.\n\tupdatedSyms := map[string]interface{}{}\n\tfor symName, sym := range syms {\n\t\tisFunc := symName[0] == '.'\n\t\tif isFunc {\n\t\t\tdelete(syms, symName)\n\t\t\tsymName = symName[1:]\n\t\t}\n\n\t\tfullName := pluginpath + \".\" + symName\n\t\tcname := make([]byte, len(fullName)+1)\n\t\tcopy(cname, fullName)\n\n\t\tp := C.pluginLookup(h, (*C.char)(unsafe.Pointer(&cname[0])), &cErr)\n\t\tif p == nil {\n\t\t\treturn nil, errors.New(`plugin.Open(\"` + name + `\"): could not find symbol ` + symName + `: ` + C.GoString(cErr))\n\t\t}\n\t\tvalp := (*[2]unsafe.Pointer)(unsafe.Pointer(&sym))\n\t\tif isFunc {\n\t\t\t(*valp)[1] = unsafe.Pointer(&p)\n\t\t} else {\n\t\t\t(*valp)[1] = p\n\t\t}\n\t\t// we can't add to syms during iteration as we'll end up processing\n\t\t// some symbols twice with the inability to tell if the symbol is a function\n\t\tupdatedSyms[symName] = sym\n\t}\n\tp.syms = updatedSyms\n\n\tclose(p.loaded)\n\treturn p, nil\n}\n\nfunc lookup(p *Plugin, symName string) (Symbol, error) {\n\tif s := p.syms[symName]; s != nil {\n\t\treturn s, nil\n\t}\n\treturn nil, errors.New(\"plugin: symbol \" + symName + \" not found in plugin \" + p.pluginpath)\n}\n\nvar (\n\tpluginsMu sync.Mutex\n\tplugins   map[string]*Plugin\n)\n\n// lastmoduleinit is defined in package runtime\nfunc lastmoduleinit() (pluginpath string, syms map[string]interface{}, errstr string)\n\n// doInit is defined in package runtime\n//go:linkname doInit runtime.doInit\nfunc doInit(t unsafe.Pointer) // t should be a *runtime.initTask\n",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/runtime/cgo/gcc_android.c": "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include <stdarg.h>\n#include <android/log.h>\n#include <pthread.h>\n#include <dlfcn.h>\n#include \"libcgo.h\"\n\nvoid\nfatalf(const char* format, ...)\n{\n\tva_list ap;\n\n\t// Write to both stderr and logcat.\n\t//\n\t// When running from an .apk, /dev/stderr and /dev/stdout\n\t// redirect to /dev/null. And when running a test binary\n\t// via adb shell, it's easy to miss logcat.\n\n\tfprintf(stderr, \"runtime/cgo: \");\n\tva_start(ap, format);\n\tvfprintf(stderr, format, ap);\n\tva_end(ap);\n\tfprintf(stderr, \"\\n\");\n\n\tva_start(ap, format);\n\t__android_log_vprint(ANDROID_LOG_FATAL, \"runtime/cgo\", format, ap);\n\tva_end(ap);\n\n\tabort();\n}\n\n// Truncated to a different magic value on 32-bit; that's ok.\n#define magic1 (0x23581321345589ULL)\n\n// From https://android.googlesource.com/platform/bionic/+/refs/heads/master/libc/private/bionic_asm_tls.h#69.\n#define TLS_SLOT_APP 2\n\n// inittls allocates a thread-local storage slot for g.\n//\n// It finds the first available slot using pthread_key_create and uses\n// it as the offset value for runtime.tls_g.\nstatic void\ninittls(void **tlsg, void **tlsbase)\n{\n\tpthread_key_t k;\n\tint i, err;\n\tvoid *handle, *get_ver, *off;\n\n\t// Check for Android Q where we can use the free TLS_SLOT_APP slot.\n\thandle = dlopen(\"libc.so\", RTLD_LAZY);\n\tif (handle == NULL) {\n\t\tfatalf(\"inittls: failed to dlopen main program\");\n\t\treturn;\n\t}\n\t// android_get_device_api_level is introduced in Android Q, so its mere presence\n\t// is enough.\n\tget_ver = dlsym(handle, \"android_get_device_api_level\");\n\tdlclose(handle);\n\tif (get_ver != NULL) {\n\t\toff = (void *)(TLS_SLOT_APP*sizeof(void *));\n\t\t// tlsg is initialized to Q's free TLS slot. Verify it while we're here.\n\t\tif (*tlsg != off) {\n\t\t\tfatalf(\"tlsg offset wrong, got %ld want %ld\\n\", *tlsg, off);\n\t\t}\n\t\treturn;\n\t}\n\n\terr = pthread_key_create(&k, nil);\n\tif(err != 0) {\n\t\tfatalf(\"pthread_key_create failed: %d\", err);\n\t}\n\tpthread_setspecific(k, (void*)magic1);\n\t// If thread local slots are laid out as we expect, our magic word will\n\t// be located at some low offset from tlsbase. However, just in case something went\n\t// wrong, the search is limited to sensible offsets. PTHREAD_KEYS_MAX was the\n\t// original limit, but issue 19472 made a higher limit necessary.\n\tfor (i=0; i<384; i++) {\n\t\tif (*(tlsbase+i) == (void*)magic1) {\n\t\t\t*tlsg = (void*)(i*sizeof(void *));\n\t\t\tpthread_setspecific(k, 0);\n\t\t\treturn;\n\t\t}\n\t}\n\tfatalf(\"inittls: could not find pthread key\");\n}\n\nvoid (*x_cgo_inittls)(void **tlsg, void **tlsbase) = inittls;\n",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/misc/cgo/testcshared/testdata/main5.c": "// Copyright 2015 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Test that a signal handler works in non-Go code when using\n// os/signal.Notify.\n// This is a lot like misc/cgo/testcarchive/main3.c.\n\n#include <signal.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <time.h>\n#include <sched.h>\n#include <dlfcn.h>\n\nstatic void die(const char* msg) {\n\tperror(msg);\n\texit(EXIT_FAILURE);\n}\n\nstatic volatile sig_atomic_t sigioSeen;\n\nstatic void ioHandler(int signo, siginfo_t* info, void* ctxt) {\n\tsigioSeen = 1;\n}\n\nint main(int argc, char** argv) {\n\tint verbose;\n\tstruct sigaction sa;\n\tvoid* handle;\n\tvoid (*fn1)(void);\n\tint (*sawSIGIO)(void);\n\tint i;\n\tstruct timespec ts;\n\n\tverbose = argc > 2;\n\tsetvbuf(stdout, NULL, _IONBF, 0);\n\n\tif (verbose) {\n\t\tprintf(\"calling sigaction\\n\");\n\t}\n\n\tmemset(&sa, 0, sizeof sa);\n\tsa.sa_sigaction = ioHandler;\n\tif (sigemptyset(&sa.sa_mask) < 0) {\n\t\tdie(\"sigemptyset\");\n\t}\n\tsa.sa_flags = SA_SIGINFO;\n\tif (sigaction(SIGIO, &sa, NULL) < 0) {\n\t\tdie(\"sigaction\");\n\t}\n\n\tif (verbose) {\n\t\tprintf(\"calling dlopen\\n\");\n\t}\n\n\thandle = dlopen(argv[1], RTLD_NOW | RTLD_GLOBAL);\n\tif (handle == NULL) {\n\t\tfprintf(stderr, \"%s\\n\", dlerror());\n\t\texit(EXIT_FAILURE);\n\t}\n\n\t// At this point there should not be a Go signal handler\n\t// installed for SIGIO.\n\n\tif (verbose) {\n\t\tprintf(\"raising SIGIO\\n\");\n\t}\n\n\tif (raise(SIGIO) < 0) {\n\t\tdie(\"raise\");\n\t}\n\n\tif (verbose) {\n\t\tprintf(\"waiting for sigioSeen\\n\");\n\t}\n\n\t// Wait until the signal has been delivered.\n\ti = 0;\n\twhile (!sigioSeen) {\n\t\tts.tv_sec = 0;\n\t\tts.tv_nsec = 1000000;\n\t\tnanosleep(&ts, NULL);\n\t\ti++;\n\t\tif (i > 5000) {\n\t\t\tfprintf(stderr, \"looping too long waiting for signal\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n\t}\n\n\tsigioSeen = 0;\n\n\t// Tell the Go code to catch SIGIO.\n\n\tif (verbose) {\n\t\tprintf(\"calling dlsym\\n\");\n\t}\n\n\tfn1 = (void(*)(void))dlsym(handle, \"CatchSIGIO\");\n\tif (fn1 == NULL) {\n\t\tfprintf(stderr, \"%s\\n\", dlerror());\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tif (verbose) {\n\t\tprintf(\"calling CatchSIGIO\\n\");\n\t}\n\n\tfn1();\n\n\tif (verbose) {\n\t\tprintf(\"raising SIGIO\\n\");\n\t}\n\n\tif (raise(SIGIO) < 0) {\n\t\tdie(\"raise\");\n\t}\n\n\tif (verbose) {\n\t\tprintf(\"calling dlsym\\n\");\n\t}\n\n\t// Check that the Go code saw SIGIO.\n\tsawSIGIO = (int (*)(void))dlsym(handle, \"SawSIGIO\");\n\tif (sawSIGIO == NULL) {\n\t\tfprintf(stderr, \"%s\\n\", dlerror());\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tif (verbose) {\n\t\tprintf(\"calling SawSIGIO\\n\");\n\t}\n\n\tif (!sawSIGIO()) {\n\t\tfprintf(stderr, \"Go handler did not see SIGIO\\n\");\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tif (sigioSeen != 0) {\n\t\tfprintf(stderr, \"C handler saw SIGIO when only Go handler should have\\n\");\n\t\texit(EXIT_FAILURE);\n\t}\n\n\t// Tell the Go code to stop catching SIGIO.\n\n\tif (verbose) {\n\t\tprintf(\"calling dlsym\\n\");\n\t}\n\n\tfn1 = (void(*)(void))dlsym(handle, \"ResetSIGIO\");\n\tif (fn1 == NULL) {\n\t\tfprintf(stderr, \"%s\\n\", dlerror());\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tif (verbose) {\n\t\tprintf(\"calling ResetSIGIO\\n\");\n\t}\n\n\tfn1();\n\n\tif (verbose) {\n\t\tprintf(\"raising SIGIO\\n\");\n\t}\n\n\tif (raise(SIGIO) < 0) {\n\t\tdie(\"raise\");\n\t}\n\n\tif (verbose) {\n\t\tprintf(\"calling SawSIGIO\\n\");\n\t}\n\n\tif (sawSIGIO()) {\n\t\tfprintf(stderr, \"Go handler saw SIGIO after Reset\\n\");\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tif (verbose) {\n\t\tprintf(\"waiting for sigioSeen\\n\");\n\t}\n\n\t// Wait until the signal has been delivered.\n\ti = 0;\n\twhile (!sigioSeen) {\n\t\tts.tv_sec = 0;\n\t\tts.tv_nsec = 1000000;\n\t\tnanosleep(&ts, NULL);\n\t\ti++;\n\t\tif (i > 5000) {\n\t\t\tfprintf(stderr, \"looping too long waiting for signal\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n\t}\n\n\tprintf(\"PASS\\n\");\n\treturn 0;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/misc/cgo/testcshared/testdata/main1.c": "// Copyright 2015 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include <stdint.h>\n#include <stdio.h>\n#include <dlfcn.h>\n\nint check_int8(void* handle, const char* fname, int8_t want) {\n  int8_t (*fn)();\n  fn = (int8_t (*)())dlsym(handle, fname);\n  if (!fn) {\n    fprintf(stderr, \"ERROR: missing %s: %s\\n\", fname, dlerror());\n    return 1;\n  }\n  signed char ret = fn();\n  if (ret != want) {\n    fprintf(stderr, \"ERROR: %s=%d, want %d\\n\", fname, ret, want);\n    return 1;\n  }\n  return 0;\n}\n\nint check_int32(void* handle, const char* fname, int32_t want) {\n  int32_t (*fn)();\n  fn = (int32_t (*)())dlsym(handle, fname);\n  if (!fn) {\n    fprintf(stderr, \"ERROR: missing %s: %s\\n\", fname, dlerror());\n    return 1;\n  }\n  int32_t ret = fn();\n  if (ret != want) {\n    fprintf(stderr, \"ERROR: %s=%d, want %d\\n\", fname, ret, want);\n    return 1;\n  }\n  return 0;\n}\n\n// Tests libgo.so to export the following functions.\n//   int8_t DidInitRun() // returns true\n//   int8_t DidMainRun() // returns true\n//   int32_t FromPkg() // returns 1024\nint main(int argc, char** argv) {\n  void* handle = dlopen(argv[1], RTLD_LAZY | RTLD_GLOBAL);\n  if (!handle) {\n    fprintf(stderr, \"ERROR: failed to open the shared library: %s\\n\",\n\t\t    dlerror());\n    return 2;\n  }\n\n  int ret = 0;\n  ret = check_int8(handle, \"DidInitRun\", 1);\n  if (ret != 0) {\n    return ret;\n  }\n\n  ret = check_int8(handle, \"DidMainRun\", 0);\n  if (ret != 0) {\n    return ret;\n  }\n\n  ret = check_int32(handle, \"FromPkg\", 1024);\n  if (ret != 0) {\n   return ret;\n  }\n  // test.bash looks for \"PASS\" to ensure this program has reached the end. \n  printf(\"PASS\\n\");\n  return 0;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/misc/cgo/testcshared/testdata/main3.c": "// Copyright 2015 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include <stdint.h>\n#include <stdio.h>\n#include <dlfcn.h>\n\n// Tests \"main.main\" is exported on android/arm,\n// which golang.org/x/mobile/app depends on.\nint main(int argc, char** argv) {\n  void* handle = dlopen(argv[1], RTLD_LAZY | RTLD_GLOBAL);\n  if (!handle) {\n    fprintf(stderr, \"ERROR: failed to open the shared library: %s\\n\",\n            dlerror());\n    return 2;\n  }\n\n  uintptr_t main_fn = (uintptr_t)dlsym(handle, \"main.main\");\n  if (!main_fn) {\n    fprintf(stderr, \"ERROR: missing main.main: %s\\n\", dlerror());\n    return 2;\n  }\n\n  // TODO(hyangah): check that main.main can run.\n\n  printf(\"PASS\\n\");\n  return 0;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/misc/cgo/testcshared/testdata/main4.c": "// Copyright 2015 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Test that a signal handler that uses up stack space does not crash\n// if the signal is delivered to a thread running a goroutine.\n// This is a lot like misc/cgo/testcarchive/main2.c.\n\n#include <setjmp.h>\n#include <signal.h>\n#include <stddef.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/types.h>\n#include <unistd.h>\n#include <sched.h>\n#include <time.h>\n#include <dlfcn.h>\n\nstatic void die(const char* msg) {\n\tperror(msg);\n\texit(EXIT_FAILURE);\n}\n\nstatic volatile sig_atomic_t sigioSeen;\n\n// Use up some stack space.\nstatic void recur(int i, char *p) {\n\tchar a[1024];\n\n\t*p = '\\0';\n\tif (i > 0) {\n\t\trecur(i - 1, a);\n\t}\n}\n\n// Signal handler that uses up more stack space than a goroutine will have.\nstatic void ioHandler(int signo, siginfo_t* info, void* ctxt) {\n\tchar a[1024];\n\n\trecur(4, a);\n\tsigioSeen = 1;\n}\n\nstatic jmp_buf jmp;\nstatic char* nullPointer;\n\n// Signal handler for SIGSEGV on a C thread.\nstatic void segvHandler(int signo, siginfo_t* info, void* ctxt) {\n\tsigset_t mask;\n\tint i;\n\n\tif (sigemptyset(&mask) < 0) {\n\t\tdie(\"sigemptyset\");\n\t}\n\tif (sigaddset(&mask, SIGSEGV) < 0) {\n\t\tdie(\"sigaddset\");\n\t}\n\ti = sigprocmask(SIG_UNBLOCK, &mask, NULL);\n\tif (i != 0) {\n\t\tfprintf(stderr, \"sigprocmask: %s\\n\", strerror(i));\n\t\texit(EXIT_FAILURE);\n\t}\n\n\t// Don't try this at home.\n\tlongjmp(jmp, signo);\n\n\t// We should never get here.\n\tabort();\n}\n\nint main(int argc, char** argv) {\n\tint verbose;\n\tstruct sigaction sa;\n\tvoid* handle;\n\tvoid (*fn)(void);\n\tsigset_t mask;\n\tint i;\n\tstruct timespec ts;\n\n\tverbose = argc > 2;\n\tsetvbuf(stdout, NULL, _IONBF, 0);\n\n\t// Call setsid so that we can use kill(0, SIGIO) below.\n\t// Don't check the return value so that this works both from\n\t// a job control shell and from a shell script.\n\tsetsid();\n\n\tif (verbose) {\n\t\tprintf(\"calling sigaction\\n\");\n\t}\n\n\tmemset(&sa, 0, sizeof sa);\n\tsa.sa_sigaction = ioHandler;\n\tif (sigemptyset(&sa.sa_mask) < 0) {\n\t\tdie(\"sigemptyset\");\n\t}\n\tsa.sa_flags = SA_SIGINFO;\n\tif (sigaction(SIGIO, &sa, NULL) < 0) {\n\t\tdie(\"sigaction\");\n\t}\n\n\tsa.sa_sigaction = segvHandler;\n\tif (sigaction(SIGSEGV, &sa, NULL) < 0 || sigaction(SIGBUS, &sa, NULL) < 0) {\n\t\tdie(\"sigaction\");\n\t}\n\n\tif (verbose) {\n\t\tprintf(\"calling dlopen\\n\");\n\t}\n\n\thandle = dlopen(argv[1], RTLD_NOW | RTLD_GLOBAL);\n\tif (handle == NULL) {\n\t\tfprintf(stderr, \"%s\\n\", dlerror());\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tif (verbose) {\n\t\tprintf(\"calling dlsym\\n\");\n\t}\n\n\t// Start some goroutines.\n\tfn = (void(*)(void))dlsym(handle, \"RunGoroutines\");\n\tif (fn == NULL) {\n\t\tfprintf(stderr, \"%s\\n\", dlerror());\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tif (verbose) {\n\t\tprintf(\"calling RunGoroutines\\n\");\n\t}\n\n\tfn();\n\n\t// Block SIGIO in this thread to make it more likely that it\n\t// will be delivered to a goroutine.\n\n\tif (verbose) {\n\t\tprintf(\"calling pthread_sigmask\\n\");\n\t}\n\n\tif (sigemptyset(&mask) < 0) {\n\t\tdie(\"sigemptyset\");\n\t}\n\tif (sigaddset(&mask, SIGIO) < 0) {\n\t\tdie(\"sigaddset\");\n\t}\n\ti = pthread_sigmask(SIG_BLOCK, &mask, NULL);\n\tif (i != 0) {\n\t\tfprintf(stderr, \"pthread_sigmask: %s\\n\", strerror(i));\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tif (verbose) {\n\t\tprintf(\"calling kill\\n\");\n\t}\n\n\tif (kill(0, SIGIO) < 0) {\n\t\tdie(\"kill\");\n\t}\n\n\tif (verbose) {\n\t\tprintf(\"waiting for sigioSeen\\n\");\n\t}\n\n\t// Wait until the signal has been delivered.\n\ti = 0;\n\twhile (!sigioSeen) {\n\t\tts.tv_sec = 0;\n\t\tts.tv_nsec = 1000000;\n\t\tnanosleep(&ts, NULL);\n\t\ti++;\n\t\tif (i > 5000) {\n\t\t\tfprintf(stderr, \"looping too long waiting for signal\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n\t}\n\n\tif (verbose) {\n\t\tprintf(\"calling setjmp\\n\");\n\t}\n\n\t// Test that a SIGSEGV on this thread is delivered to us.\n\tif (setjmp(jmp) == 0) {\n\t\tif (verbose) {\n\t\t\tprintf(\"triggering SIGSEGV\\n\");\n\t\t}\n\n\t\t*nullPointer = '\\0';\n\n\t\tfprintf(stderr, \"continued after address error\\n\");\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tif (verbose) {\n\t\tprintf(\"calling dlsym\\n\");\n\t}\n\n\t// Make sure that a SIGSEGV in Go causes a run-time panic.\n\tfn = (void (*)(void))dlsym(handle, \"TestSEGV\");\n\tif (fn == NULL) {\n\t\tfprintf(stderr, \"%s\\n\", dlerror());\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tif (verbose) {\n\t\tprintf(\"calling TestSEGV\\n\");\n\t}\n\n\tfn();\n\n\tprintf(\"PASS\\n\");\n\treturn 0;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/misc/cgo/test/issue4029.go": "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !windows,!static\n\npackage cgotest\n\n/*\n#include <stdint.h>\n#include <dlfcn.h>\n#cgo linux LDFLAGS: -ldl\n\nextern uintptr_t dlopen4029(char*, int);\nextern uintptr_t dlsym4029(uintptr_t, char*);\nextern int dlclose4029(uintptr_t);\n\nextern void call4029(uintptr_t arg);\n*/\nimport \"C\"\n\nimport (\n\t\"testing\"\n)\n\nvar callbacks int\n\n//export IMPIsOpaque\nfunc IMPIsOpaque() {\n\tcallbacks++\n}\n\n//export IMPInitWithFrame\nfunc IMPInitWithFrame() {\n\tcallbacks++\n}\n\n//export IMPDrawRect\nfunc IMPDrawRect() {\n\tcallbacks++\n}\n\n//export IMPWindowResize\nfunc IMPWindowResize() {\n\tcallbacks++\n}\n\nfunc test4029(t *testing.T) {\n\tloadThySelf(t, \"IMPWindowResize\")\n\tloadThySelf(t, \"IMPDrawRect\")\n\tloadThySelf(t, \"IMPInitWithFrame\")\n\tloadThySelf(t, \"IMPIsOpaque\")\n\tif callbacks != 4 {\n\t\tt.Errorf(\"got %d callbacks, expected 4\", callbacks)\n\t}\n}\n\nfunc loadThySelf(t *testing.T, symbol string) {\n\tthis_process := C.dlopen4029(nil, C.RTLD_NOW)\n\tif this_process == 0 {\n\t\tt.Error(\"dlopen:\", C.GoString(C.dlerror()))\n\t\treturn\n\t}\n\tdefer C.dlclose4029(this_process)\n\n\tsymbol_address := C.dlsym4029(this_process, C.CString(symbol))\n\tif symbol_address == 0 {\n\t\tt.Error(\"dlsym:\", C.GoString(C.dlerror()))\n\t\treturn\n\t}\n\tt.Log(symbol, symbol_address)\n\tC.call4029(symbol_address)\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/misc/cgo/test/issue4029.c": "// Copyright 2015 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !windows,!static\n\n#include <stdint.h>\n#include <dlfcn.h>\n\n// Write our own versions of dlopen/dlsym/dlclose so that we represent\n// the opaque handle as a Go uintptr rather than a Go pointer to avoid\n// garbage collector confusion.  See issue 23663.\n\nuintptr_t dlopen4029(char* name, int flags) {\n\treturn (uintptr_t)(dlopen(name, flags));\n}\n\nuintptr_t dlsym4029(uintptr_t handle, char* name) {\n\treturn (uintptr_t)(dlsym((void*)(handle), name));\n}\n\nint dlclose4029(uintptr_t handle) {\n\treturn dlclose((void*)(handle));\n}\n\nvoid call4029(void *arg) {\n\tvoid (*fn)(void) = arg;\n\tfn();\n}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/favicon.ico",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/bzip2/testdata/pass-sawtooth.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/bzip2/testdata/fail-issue5747.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/bzip2/testdata/pass-random2.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/bzip2/testdata/e.txt.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/bzip2/testdata/random.data.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/bzip2/testdata/pass-random2.bin",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/bzip2/testdata/pass-random1.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/bzip2/testdata/pass-random1.bin",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/bzip2/testdata/Isaac.Newton-Opticks.txt.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-rand-limit.wb.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-shifts.wb.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-rand-max.golden",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-text-shift.wb.expect",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-null-max.golden",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-rand-max.in",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-rand-1k.golden",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-pi.golden",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-rand-limit.wb.expect",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-rand-1k.dyn.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-zero.golden",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-null-max.wb.expect",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/null-long-match.wb.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-shifts.golden",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-text.golden",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-zero.dyn.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-rand-1k.wb.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-pi.wb.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-pi.dyn.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-rand-1k.dyn.expect",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-text-shift.golden",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-null-max.dyn.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-text.dyn.expect",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-shifts.dyn.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-rand-1k.wb.expect",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-rand-limit.dyn.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-null-max.wb.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-text-shift.wb.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-text-shift.dyn.expect",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-null-max.dyn.expect",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-shifts.wb.expect",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-zero.dyn.expect",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/null-long-match.dyn.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-text.wb.expect",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-rand-limit.golden",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-text.wb.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-text.dyn.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-rand-1k.in",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-pi.dyn.expect",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-rand-limit.dyn.expect",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-shifts.dyn.expect",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-pi.wb.expect",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-text-shift.dyn.expect-noinput",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/compress/flate/testdata/huffman-rand-limit.in",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/regexp/testdata/re2-exhaustive.txt.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/go/internal/gcimporter/testdata/versions/test_go1.11_999i.a",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/go/internal/gcimporter/testdata/versions/test_go1.7_1.a",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/go/internal/gcimporter/testdata/versions/test_go1.8_5.a",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/go/internal/gcimporter/testdata/versions/test_go1.11_6b.a",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/go/internal/gcimporter/testdata/versions/test_go1.8_4.a",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/go/internal/gcimporter/testdata/versions/test_go1.11_0i.a",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/go/internal/gcimporter/testdata/versions/test_go1.7_0.a",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/go/internal/gccgoimporter/testdata/unicode.gox",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/go/internal/gccgoimporter/testdata/escapeinfo.gox",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/go/internal/gccgoimporter/testdata/libimportsar.a",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/go/internal/gccgoimporter/testdata/v1reflect.gox",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/go/internal/gccgoimporter/testdata/time.gox",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/encoding/json/testdata/code.json.gz",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.progressive.truncated.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-005.gray.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.cmyk.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.separate.dc.progression.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.221212.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/triangle-001.gif",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.cmyk.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-005.gray.q50.2x2.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.q50.440.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.q50.411.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.q50.422.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.rgb.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-005.gray.q50.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.5bpp.gif",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-005.gray.q50.2x2.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.separate.dc.progression.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-005.gray.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.q50.410.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.gif",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.rgb.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.q50.410.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.q50.444.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.progressive.truncated.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.221212.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-005.gray.gif",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.q50.411.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.q50.440.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.q50.420.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.q50.444.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.q50.422.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-005.gray.q50.progressive.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.q50.420.jpeg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/testdata/video-001.interlaced.gif",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/benchPaletted.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/invalid-zlib.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/benchRGB-interlace.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/gray-gradient.interlaced.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/benchNRGBA-gradient.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/invalid-crc32.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/benchNRGBA-opaque.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/invalid-trunc.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/benchGray.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/gray-gradient.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/benchRGB.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/invalid-noend.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/invalid-palette.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/ftbbn0g04.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/ftbbn2c16.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn4a16.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn0g04-31.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/ftbbn3p08.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn2c08.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/ftp0n2c08.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn4a08.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn0g08.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/ftbgn3p08.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn3p02.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn3p08.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/ftbwn3p08.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/ftp0n0g08.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/ftbbn0g01.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/ftbwn0g16.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn0g02.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn0g04.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn0g16.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/ftbyn3p08.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/ftbgn2c16.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn0g02-29.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn3p08-trns.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn3p01.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn6a16.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/ftp0n3p08.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/ftbrn2c08.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn3p04-31i.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn0g01-30.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn3p04.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/ftbbn0g02.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn2c16.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn6a08.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/basn0g01.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/image/png/testdata/pngsuite/ftp1n3p08.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/runtime/race/race_linux_arm64.syso",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/runtime/race/race_darwin_amd64.syso",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/runtime/race/race_freebsd_amd64.syso",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/runtime/race/race_windows_amd64.syso",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/runtime/race/race_netbsd_amd64.syso",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/runtime/race/race_linux_amd64.syso",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/runtime/race/race_linux_ppc64le.syso",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/test-trailing-junk.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/symlink.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/time-7zip.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/crc32-not-streamed.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/go-with-datadesc-sig.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/readme.notzip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/utf8-7zip.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/test.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/time-winrar.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/zip64.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/time-infozip.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/gophercolor16x16.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/time-22738.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/time-winzip.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/utf8-winzip.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/time-osx.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/utf8-osx.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/utf8-infozip.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/winxp.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/time-win7.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/time-go.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/unix.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/dd.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/zip64-2.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/readme.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/zip/testdata/utf8-winrar.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/tar/testdata/invalid-go17.tar",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/tar/testdata/writer-big.tar",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/tar/testdata/gnu-sparse-big.tar",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/tar/testdata/gnu-utf8.tar",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/tar/testdata/issue10968.tar",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/tar/testdata/v7.tar",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/tar/testdata/issue12435.tar",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/tar/testdata/neg-size.tar",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/archive/tar/testdata/gnu-not-utf8.tar",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/crypto/rsa/testdata/pss-vect.txt.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/crypto/ed25519/testdata/sign.input.gz",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/crypto/ecdsa/testdata/SigVer.rsp.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/go-relocation-test-gcc720-riscv64.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/go-relocation-test-gcc620-sparc64.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/go-relocation-test-gcc492-arm.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/go-relocation-test-gcc441-x86.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/go-relocation-test-gcc493-mips64le.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/go-relocation-test-gcc492-mipsle.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/hello-world-core.gz",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/go-relocation-test-gcc482-aarch64.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/go-relocation-test-clang-arm.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/zdebug-test-gcc484-x86-64.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/gcc-amd64-openbsd-debug-with-rela.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/go-relocation-test-gcc5-ppc.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/go-relocation-test-gcc492-mips64.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/go-relocation-test-gcc531-s390x.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/compressed-32.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/go-relocation-test-gcc482-ppc64le.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/go-relocation-test-gcc441-x86-64.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/go-relocation-test-gcc540-mips.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/go-relocation-test-gcc424-x86-64.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/compressed-64.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/elf/testdata/go-relocation-test-clang-x86.obj",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/pe/testdata/vmlinuz-4.15.0-47-generic",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/dwarf/testdata/cppunsuptypes.elf",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/dwarf/testdata/line-clang.elf",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/dwarf/testdata/typedef.macho",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/dwarf/testdata/ranges.elf",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/dwarf/testdata/typedef.elf",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/dwarf/testdata/typedef.elf4",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/dwarf/testdata/line-gcc-win.bin",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/dwarf/testdata/line-gcc.elf",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/dwarf/testdata/split.elf",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/src/debug/dwarf/testdata/cycle.elf",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/lib/time/zoneinfo.zip",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/misc/chrome/gophertool/gopher.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/go-logo-blue.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/go-logo-black.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/go-logo-white.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/share.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/help.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/bumper192x108.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/appenginegophercolor.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/gopherbw.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/project.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/bumper.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/bumper640x360.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/gophercolor.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/modelsheet.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/gophercolor16x16.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/pkg.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/biplane.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/fiveyears.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/talks.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/appenginegopher.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/run.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/bumper480x270.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/doc.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/appenginelogo.gif",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/frontpage.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/bumper320x180.png",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/pencil/gopherswrench.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/pencil/gophermega.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/pencil/gopherhat.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/pencil/gopherswim.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/pencil/gopherhelmet.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/gopher/pencil/gopherrunning.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-go-1.14.1-yhizswn7byuw3ikhfie7antwyczfu2qw/spack-src/doc/codewalk/popout.png"
    ],
    "total_files": 8590
}