{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-qnnpack-master-2lziwxloboykh6e6jvd2bmpmuo3zyoqx/spack-src/deps/cpuinfo/src/arm/linux/hwcap.c": "#include <string.h>\n\n#include <unistd.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <errno.h>\n#include <dlfcn.h>\n#include <elf.h>\n\n#if CPUINFO_MOCK\n\t#include <cpuinfo-mock.h>\n#endif\n#include <cpuinfo.h>\n#include <arm/linux/api.h>\n#include <cpuinfo/log.h>\n\n#if CPUINFO_ARCH_ARM64 || CPUINFO_ARCH_ARM && !defined(__ANDROID__)\n\t#include <sys/auxv.h>\n#else\n\t#define AT_HWCAP 16\n\t#define AT_HWCAP2 26\n#endif\n\n\n#if CPUINFO_MOCK\n\tstatic uint32_t mock_hwcap = 0;\n\tvoid cpuinfo_set_hwcap(uint32_t hwcap) {\n\t\tmock_hwcap = hwcap;\n\t}\n\n\tstatic uint32_t mock_hwcap2 = 0;\n\tvoid cpuinfo_set_hwcap2(uint32_t hwcap2) {\n\t\tmock_hwcap2 = hwcap2;\n\t}\n#endif\n\n\n#if CPUINFO_ARCH_ARM\n\ttypedef unsigned long (*getauxval_function_t)(unsigned long);\n\n\tbool cpuinfo_arm_linux_hwcap_from_getauxval(\n\t\tuint32_t hwcap[restrict static 1],\n\t\tuint32_t hwcap2[restrict static 1])\n\t{\n\t\t#if CPUINFO_MOCK\n\t\t\t*hwcap  = mock_hwcap;\n\t\t\t*hwcap2 = mock_hwcap2;\n\t\t\treturn true;\n\t\t#elif defined(__ANDROID__)\n\t\t\t/* Android: dynamically check if getauxval is supported */\n\t\t\tvoid* libc = NULL;\n\t\t\tgetauxval_function_t getauxval = NULL;\n\n\t\t\tdlerror();\n\t\t\tlibc = dlopen(\"libc.so\", RTLD_LAZY);\n\t\t\tif (libc == NULL) {\n\t\t\t\tcpuinfo_log_warning(\"failed to load libc.so: %s\", dlerror());\n\t\t\t\tgoto cleanup;\n\t\t\t}\n\n\t\t\tgetauxval = (getauxval_function_t) dlsym(libc, \"getauxval\");\n\t\t\tif (getauxval == NULL) {\n\t\t\t\tcpuinfo_log_info(\"failed to locate getauxval in libc.so: %s\", dlerror());\n\t\t\t\tgoto cleanup;\n\t\t\t}\n\n\t\t\t*hwcap  = getauxval(AT_HWCAP);\n\t\t\t*hwcap2 = getauxval(AT_HWCAP2);\n\n\t\tcleanup:\n\t\t\tif (libc != NULL) {\n\t\t\t\tdlclose(libc);\n\t\t\t\tlibc = NULL;\n\t\t\t}\n\t\t\treturn getauxval != NULL;\n\t\t#else\n\t\t\t/* GNU/Linux: getauxval is always supported */\n\t\t\t*hwcap  = getauxval(AT_HWCAP);\n\t\t\t*hwcap2 = getauxval(AT_HWCAP2);\n\t\t\treturn true;\n\t\t#endif\n\t}\n\n\t#ifdef __ANDROID__\n\t\tbool cpuinfo_arm_linux_hwcap_from_procfs(\n\t\t\tuint32_t hwcap[restrict static 1],\n\t\t\tuint32_t hwcap2[restrict static 1])\n\t\t{\n\t\t\t#if CPUINFO_MOCK\n\t\t\t\t*hwcap  = mock_hwcap;\n\t\t\t\t*hwcap2 = mock_hwcap2;\n\t\t\t\treturn true;\n\t\t\t#else\n\t\t\t\tuint32_t hwcaps[2] = { 0, 0 };\n\t\t\t\tbool result = false;\n\t\t\t\tint file = -1;\n\n\t\t\t\tfile = open(\"/proc/self/auxv\", O_RDONLY);\n\t\t\t\tif (file == -1) {\n\t\t\t\t\tcpuinfo_log_warning(\"failed to open /proc/self/auxv: %s\", strerror(errno));\n\t\t\t\t\tgoto cleanup;\n\t\t\t\t}\n\n\t\t\t\tssize_t bytes_read;\n\t\t\t\tdo {\n\t\t\t\t\tElf32_auxv_t elf_auxv;\n\t\t\t\t\tbytes_read = read(file, &elf_auxv, sizeof(Elf32_auxv_t));\n\t\t\t\t\tif (bytes_read < 0) {\n\t\t\t\t\t\tcpuinfo_log_warning(\"failed to read /proc/self/auxv: %s\", strerror(errno));\n\t\t\t\t\t\tgoto cleanup;\n\t\t\t\t\t} else if (bytes_read > 0) {\n\t\t\t\t\t\tif (bytes_read == sizeof(elf_auxv)) {\n\t\t\t\t\t\t\tswitch (elf_auxv.a_type) {\n\t\t\t\t\t\t\t\tcase AT_HWCAP:\n\t\t\t\t\t\t\t\t\thwcaps[0] = (uint32_t) elf_auxv.a_un.a_val;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase AT_HWCAP2:\n\t\t\t\t\t\t\t\t\thwcaps[1] = (uint32_t) elf_auxv.a_un.a_val;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcpuinfo_log_warning(\n\t\t\t\t\t\t\t\t\"failed to read %zu bytes from /proc/self/auxv: %zu bytes available\",\n\t\t\t\t\t\t\t\tsizeof(elf_auxv), (size_t) bytes_read);\n\t\t\t\t\t\t\tgoto cleanup;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} while (bytes_read == sizeof(Elf32_auxv_t));\n\n\t\t\t\t/* Success, commit results */\n\t\t\t\t*hwcap  = hwcaps[0];\n\t\t\t\t*hwcap2 = hwcaps[1];\n\t\t\t\tresult = true;\n\n\t\t\tcleanup:\n\t\t\t\tif (file != -1) {\n\t\t\t\t\tclose(file);\n\t\t\t\t\tfile = -1;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t#endif\n\t\t}\n\t#endif /* __ANDROID__ */\n#elif CPUINFO_ARCH_ARM64\n\tvoid cpuinfo_arm_linux_hwcap_from_getauxval(\n\t\tuint32_t hwcap[restrict static 1],\n\t\tuint32_t hwcap2[restrict static 1])\n\t{\n\t\t#if CPUINFO_MOCK\n\t\t\t*hwcap  = mock_hwcap;\n\t\t\t*hwcap2 = mock_hwcap2;\n\t\t#else\n\t\t\t*hwcap  = (uint32_t) getauxval(AT_HWCAP);\n\t\t\t*hwcap2 = (uint32_t) getauxval(AT_HWCAP2);\n\t\t\treturn ;\n\t\t#endif\n\t}\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-qnnpack-master-2lziwxloboykh6e6jvd2bmpmuo3zyoqx/spack-src/deps/cpuinfo/tools/auxv-dump.c": "#include <stdlib.h>\n#include <stdio.h>\n\n#include <sys/auxv.h>\n#include <errno.h>\n#include <dlfcn.h>\n\n#include <cpuinfo.h>\n\n\ntypedef unsigned long (*getauxval_function_t)(unsigned long);\n\nint main(int argc, char** argv) {\n\tvoid* libc = dlopen(\"libc.so\", RTLD_NOW);\n\tif (libc == NULL) {\n\t\tfprintf(stderr, \"Error: failed to load libc.so: %s\\n\", dlerror());\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tgetauxval_function_t getauxval = (getauxval_function_t) dlsym(libc, \"getauxval\");\n\tif (getauxval == NULL) {\n\t\tfprintf(stderr, \"Error: failed to locate getauxval in libc.so: %s\", dlerror());\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tprintf(\"AT_HWCAP = 0x%08lX\\n\", getauxval(AT_HWCAP));\n\t#if CPUINFO_ARCH_ARM\n\t\tprintf(\"AT_HWCAP2 = 0x%08lX\\n\", getauxval(AT_HWCAP2));\n\t#endif\n\n\treturn 0;\n}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-qnnpack-master-2lziwxloboykh6e6jvd2bmpmuo3zyoqx/spack-src/.git/objects/pack/pack-ab3d273369fc4d0ba09cc52de9f54e4698ea39bc.idx",
        "/tmp/vanessa/spack-stage/spack-stage-qnnpack-master-2lziwxloboykh6e6jvd2bmpmuo3zyoqx/spack-src/.git/objects/pack/pack-ab3d273369fc4d0ba09cc52de9f54e4698ea39bc.pack",
        "/tmp/vanessa/spack-stage/spack-stage-qnnpack-master-2lziwxloboykh6e6jvd2bmpmuo3zyoqx/spack-src/deps/cpuinfo/.git/objects/pack/pack-7b3b0e461bb86157bcbc158b2de86149c06d818c.idx",
        "/tmp/vanessa/spack-stage/spack-stage-qnnpack-master-2lziwxloboykh6e6jvd2bmpmuo3zyoqx/spack-src/deps/cpuinfo/.git/objects/pack/pack-7b3b0e461bb86157bcbc158b2de86149c06d818c.pack",
        "/tmp/vanessa/spack-stage/spack-stage-qnnpack-master-2lziwxloboykh6e6jvd2bmpmuo3zyoqx/spack-src/deps/cpuinfo/test/dmesg/huawei-mate-8.log",
        "/tmp/vanessa/spack-stage/spack-stage-qnnpack-master-2lziwxloboykh6e6jvd2bmpmuo3zyoqx/spack-src/deps/cpuinfo/test/dmesg/huawei-mate-9.log",
        "/tmp/vanessa/spack-stage/spack-stage-qnnpack-master-2lziwxloboykh6e6jvd2bmpmuo3zyoqx/spack-src/deps/cpuinfo/test/dmesg/alldocube-iwork8.log",
        "/tmp/vanessa/spack-stage/spack-stage-qnnpack-master-2lziwxloboykh6e6jvd2bmpmuo3zyoqx/spack-src/deps/cpuinfo/test/dmesg/huawei-p9-lite.log",
        "/tmp/vanessa/spack-stage/spack-stage-qnnpack-master-2lziwxloboykh6e6jvd2bmpmuo3zyoqx/spack-src/deps/cpuinfo/test/dmesg/galaxy-grand-prime-value-edition.log",
        "/tmp/vanessa/spack-stage/spack-stage-qnnpack-master-2lziwxloboykh6e6jvd2bmpmuo3zyoqx/spack-src/deps/cpuinfo/test/build.prop/padcod-10.1.log"
    ],
    "total_files": 1357
}