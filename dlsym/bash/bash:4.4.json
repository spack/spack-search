{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/config.h.in": "/* config.h -- Configuration file for bash. */\n\n/* Copyright (C) 1987-2009,2011-2012 Free Software Foundation, Inc.\n\n   This file is part of GNU Bash, the Bourne Again SHell.\n\n   Bash is free software: you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   Bash is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with Bash.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n#ifndef _CONFIG_H_\n#define _CONFIG_H_\n\n/* Template settings for autoconf */\n\n#undef __EXTENSIONS__\n#undef _ALL_SOURCE\n#undef _GNU_SOURCE\n#undef _POSIX_SOURCE\n#undef _POSIX_1_SOURCE\n#undef _POSIX_PTHREAD_SEMANTICS\n#undef _TANDEM_SOURCE\n#undef _MINIX\n\n/* Configuration feature settings controllable by autoconf. */\n\n/* Define JOB_CONTROL if your operating system supports\n   BSD-like job control. */\n#undef JOB_CONTROL\n\n/* Define ALIAS if you want the alias features. */\n#undef ALIAS\n\n/* Define PUSHD_AND_POPD if you want those commands to be compiled in.\n   (Also the `dirs' commands.) */\n#undef PUSHD_AND_POPD\n\n/* Define BRACE_EXPANSION if you want curly brace expansion a la Csh:\n   foo{a,b} -> fooa foob.  Even if this is compiled in (the default) you\n   can turn it off at shell startup with `-nobraceexpansion', or during\n   shell execution with `set +o braceexpand'. */\n#undef BRACE_EXPANSION\n\n/* Define READLINE to get the nifty/glitzy editing features.\n   This is on by default.  You can turn it off interactively\n   with the -nolineediting flag. */\n#undef READLINE\n\n/* Define BANG_HISTORY if you want to have Csh style \"!\" history expansion.\n   This is unrelated to READLINE. */\n#undef BANG_HISTORY\n\n/* Define HISTORY if you want to have access to previously typed commands.\n\n   If both HISTORY and READLINE are defined, you can get at the commands\n   with line editing commands, and you can directly manipulate the history\n   from the command line.\n\n   If only HISTORY is defined, the `fc' and `history' builtins are\n   available. */\n#undef HISTORY\n\n/* Define this if you want completion that puts all alternatives into\n   a brace expansion shell expression. */\n#if defined (BRACE_EXPANSION) && defined (READLINE)\n#  define BRACE_COMPLETION\n#endif /* BRACE_EXPANSION */\n\n/* Define DEFAULT_ECHO_TO_XPG if you want the echo builtin to interpret\n   the backslash-escape characters by default, like the XPG Single Unix\n   Specification V2 for echo.\n   This requires that V9_ECHO be defined. */\n#undef DEFAULT_ECHO_TO_XPG\n\n/* Define HELP_BUILTIN if you want the `help' shell builtin and the long\n   documentation strings compiled into the shell. */\n#undef HELP_BUILTIN\n\n/* Define RESTRICTED_SHELL if you want the generated shell to have the\n   ability to be a restricted one.  The shell thus generated can become\n   restricted by being run with the name \"rbash\", or by setting the -r\n   flag. */\n#undef RESTRICTED_SHELL\n\n/* Define DISABLED_BUILTINS if you want \"builtin foo\" to always run the\n   shell builtin \"foo\", even if it has been disabled with \"enable -n foo\". */\n#undef DISABLED_BUILTINS\n\n/* Define PROCESS_SUBSTITUTION if you want the K*rn shell-like process\n   substitution features \"<(file)\". */\n/* Right now, you cannot do this on machines without fully operational\n   FIFO support.  This currently include NeXT and Alliant. */\n#undef PROCESS_SUBSTITUTION\n\n/* Define PROMPT_STRING_DECODE if you want the backslash-escaped special\n   characters in PS1 and PS2 expanded.  Variable expansion will still be\n   performed. */\n#undef PROMPT_STRING_DECODE\n\n/* Define SELECT_COMMAND if you want the Korn-shell style `select' command:\n\tselect word in word_list; do command_list; done */\n#undef SELECT_COMMAND\n\n/* Define COMMAND_TIMING of you want the ksh-style `time' reserved word and\n   the ability to time pipelines, functions, and builtins. */\n#undef COMMAND_TIMING\n\n/* Define ARRAY_VARS if you want ksh-style one-dimensional array variables. */\n#undef ARRAY_VARS\n\n/* Define DPAREN_ARITHMETIC if you want the ksh-style ((...)) arithmetic\n   evaluation command. */\n#undef DPAREN_ARITHMETIC\n\n/* Define EXTENDED_GLOB if you want the ksh-style [*+@?!](patlist) extended\n   pattern matching. */\n#undef EXTENDED_GLOB\n\n/* Define EXTGLOB_DEFAULT to the value you'd like the extglob shell option\n   to have by default */\n#undef EXTGLOB_DEFAULT\n\n/* Define COND_COMMAND if you want the ksh-style [[...]] conditional\n   command. */\n#undef COND_COMMAND\n\n/* Define COND_REGEXP if you want extended regular expression matching and the\n   =~ binary operator in the [[...]] conditional command. */\n#define COND_REGEXP\n\n/* Define COPROCESS_SUPPORT if you want support for ksh-like coprocesses and\n   the `coproc' reserved word */\n#define COPROCESS_SUPPORT\n\n/* Define ARITH_FOR_COMMAND if you want the ksh93-style\n\tfor (( init; test; step )) do list; done\n   arithmetic for command. */\n#undef ARITH_FOR_COMMAND\n\n/* Define NETWORK_REDIRECTIONS if you want /dev/(tcp|udp)/host/port to open\n   socket connections when used in redirections */\n#undef NETWORK_REDIRECTIONS\n\n/* Define PROGRAMMABLE_COMPLETION for the programmable completion features\n   and the complete builtin. */\n#undef PROGRAMMABLE_COMPLETION\n\n/* Define NO_MULTIBYTE_SUPPORT to not compile in support for multibyte\n   characters, even if the OS supports them. */\n#undef NO_MULTIBYTE_SUPPORT\n\n/* Define DEBUGGER if you want to compile in some features used only by the \n   bash debugger. */\n#undef DEBUGGER\n\n/* Define STRICT_POSIX if you want bash to be strictly posix.2 conformant by\n   default (except for echo; that is controlled separately). */\n#undef STRICT_POSIX\n\n/* Define MEMSCRAMBLE if you want the bash malloc and free to scramble\n   memory contents on malloc() and free(). */\n#undef MEMSCRAMBLE\n\n/* Define for case-modifying variable attributes; variables modified on\n   assignment */\n#undef CASEMOD_ATTRS\n\n/* Define for case-modifying word expansions */\n#undef CASEMOD_EXPANSIONS\n\n/* Define to make the `direxpand' shopt option enabled by default. */\n#undef DIRCOMPLETE_EXPAND_DEFAULT\n\n/* Define to make the `globasciiranges' shopt option enabled by default. */\n#undef GLOBASCII_DEFAULT\n\n/* Define to allow functions to be imported from the environment. */\n#undef FUNCTION_IMPORT\n\n/* Define AFS if you are using Transarc's AFS. */\n#undef AFS\n\n#undef ENABLE_NLS\n\n/* End of configuration settings controllable by autoconf. */\n/* Other settable options appear in config-top.h. */\n\n#include \"config-top.h\"\n\n/* Beginning of autoconf additions. */\n\n/* Characteristics of the C compiler */\n#undef const\n\n#undef inline\n\n#undef restrict\n\n#undef volatile\n\n/* Define if cpp supports the ANSI-C stringizing `#' operator */\n#undef HAVE_STRINGIZE\n\n/* Define if the compiler supports `long double' variables. */\n#undef HAVE_LONG_DOUBLE\n\n#undef PROTOTYPES\n#undef __PROTOTYPES\n\n#undef __CHAR_UNSIGNED__\n\n/* Define if the compiler supports `long long' variables. */\n#undef HAVE_LONG_LONG\n\n#undef HAVE_UNSIGNED_LONG_LONG\n\n/* The number of bytes in a int.  */\n#undef SIZEOF_INT\n\n/* The number of bytes in a long.  */\n#undef SIZEOF_LONG\n\n/* The number of bytes in a pointer to char.  */\n#undef SIZEOF_CHAR_P\n\n/* The number of bytes in a double (hopefully 8). */\n#undef SIZEOF_DOUBLE\n\n/* The number of bytes in an `intmax_t'. */\n#undef SIZEOF_INTMAX_T\n\n/* The number of bytes in a `long long', if we have one. */\n#undef SIZEOF_LONG_LONG\n\n/* System paths */\n\n#define DEFAULT_MAIL_DIRECTORY \"/usr/spool/mail\"\n\n/* Characteristics of the system's header files and libraries that affect\n   the compilation environment. */\n\n/* Define if the system does not provide POSIX.1 features except\n   with this defined.  */\n#undef _POSIX_1_SOURCE\n\n/* Define if you need to in order for stat and other things to work.  */\n#undef _POSIX_SOURCE\n\n/* Define to use GNU libc extensions */\n#undef _GNU_SOURCE\n\n/* Define if you have the ANSI C header files.  */\n#undef STDC_HEADERS\n\n/* Memory management functions. */\n\n/* Define if using the bash version of malloc in lib/malloc/malloc.c */\n#undef USING_BASH_MALLOC\n\n#undef DISABLE_MALLOC_WRAPPERS\n\n/* Define if using alloca.c.  */\n#undef C_ALLOCA\n\n/* Define to one of _getb67, GETB67, getb67 for Cray-2 and Cray-YMP systems.\n   This function is required for alloca.c support on those systems.  */\n#undef CRAY_STACKSEG_END\n\n/* Define if you have alloca, as a function or macro.  */\n#undef HAVE_ALLOCA\n\n/* Define if you have <alloca.h> and it should be used (not on Ultrix).  */\n#undef HAVE_ALLOCA_H\n\n\n/* SYSTEM TYPES */\n\n/* Define to `long' if <sys/types.h> doesn't define.  */\n#undef off_t\n\n/* Define to `int' if <sys/types.h> doesn't define. */\n#undef mode_t\n\n/* Define to `int' if <signal.h> doesn't define. */\n#undef sigset_t\n\n/* Define to `int' if <sys/types.h> doesn't define.  */\n#undef pid_t\n\n/* Define to `short' if <sys/types.h> doesn't define.  */\n#undef bits16_t\n\n/* Define to `unsigned short' if <sys/types.h> doesn't define.  */\n#undef u_bits16_t\n\n/* Define to `int' if <sys/types.h> doesn't define.  */\n#undef bits32_t\n\n/* Define to `unsigned int' if <sys/types.h> doesn't define.  */\n#undef u_bits32_t\n\n/* Define to `double' if <sys/types.h> doesn't define. */\n#undef bits64_t\n\n/* Define to `unsigned int' if <sys/types.h> doesn't define. */\n#undef u_int\n\n/* Define to `unsigned long' if <sys/types.h> doesn't define.  */\n#undef u_long\n\n/* Define to `int' if <sys/types.h> doesn't define. */\n#undef ptrdiff_t\n\n/* Define to `unsigned' if <sys/types.h> doesn't define.  */\n#undef size_t\n\n/* Define to `int' if <sys/types.h> doesn't define. */\n#undef ssize_t\n\n/* Define to `long' if <stdint.h> doesn't define. */\n#undef intmax_t\n\n/* Define to `unsigned long' if <stdint.h> doesn't define. */\n#undef uintmax_t\n\n/* Define to integer type wide enough to hold a pointer if <stdint.h> doesn't define. */\n#undef uintptr_t\n \n/* Define to `int' if <sys/types.h> doesn't define.  */\n#undef uid_t\n\n/* Define to `long' if <sys/types.h> doesn't define.  */\n#undef clock_t\n\n/* Define to `long' if <sys/types.h> doesn't define.  */\n#undef time_t\n\n/* Define to `int' if <sys/types.h> doesn't define.  */\n#undef gid_t\n\n/* Define to `unsigned int' if <sys/socket.h> doesn't define. */\n#undef socklen_t\n\n/* Define to `int' if <signal.h> doesn't define. */\n#undef sig_atomic_t\n\n#undef HAVE_MBSTATE_T\n\n/* Define if you have quad_t in <sys/types.h>. */\n#undef HAVE_QUAD_T\n\n/* Define if you have wchar_t in <wctype.h>. */\n#undef HAVE_WCHAR_T\n\n/* Define if you have wctype_t in <wctype.h>. */\n#undef HAVE_WCTYPE_T\n\n/* Define if you have wint_t in <wctype.h>. */\n#undef HAVE_WINT_T\n\n#undef RLIMTYPE\n\n/* Define to the type of elements in the array set by `getgroups'.\n   Usually this is either `int' or `gid_t'.  */\n#undef GETGROUPS_T\n\n/* Characteristics of the machine archictecture. */\n\n/* If using the C implementation of alloca, define if you know the\n   direction of stack growth for your system; otherwise it will be\n   automatically deduced at run-time.\n\tSTACK_DIRECTION > 0 => grows toward higher addresses\n\tSTACK_DIRECTION < 0 => grows toward lower addresses\n\tSTACK_DIRECTION = 0 => direction of growth unknown\n */\n#undef STACK_DIRECTION\n\n/* Define if the machine architecture is big-endian. */\n#undef WORDS_BIGENDIAN\n\n/* Check for the presence of certain non-function symbols in the system\n   libraries. */\n\n/* Define if `sys_siglist' is declared by <signal.h> or <unistd.h>.  */\n#undef HAVE_DECL_SYS_SIGLIST\n#undef SYS_SIGLIST_DECLARED\n\n/* Define if `_sys_siglist' is declared by <signal.h> or <unistd.h>.  */\n#undef UNDER_SYS_SIGLIST_DECLARED\n\n#undef HAVE_SYS_SIGLIST\n\n#undef HAVE_UNDER_SYS_SIGLIST\n\n#undef HAVE_SYS_ERRLIST\n\n#undef HAVE_TZNAME\n#undef HAVE_DECL_TZNAME\n\n/* Characteristics of some of the system structures. */\n\n#undef HAVE_STRUCT_DIRENT_D_INO\n\n#undef HAVE_STRUCT_DIRENT_D_FILENO\n\n#undef HAVE_STRUCT_DIRENT_D_NAMLEN\n\n#undef TIOCSTAT_IN_SYS_IOCTL\n\n#undef FIONREAD_IN_SYS_IOCTL\n\n#undef GWINSZ_IN_SYS_IOCTL\n\n#undef STRUCT_WINSIZE_IN_SYS_IOCTL\n\n#undef TM_IN_SYS_TIME\n\n#undef STRUCT_WINSIZE_IN_TERMIOS\n\n#undef SPEED_T_IN_SYS_TYPES\n\n#undef TERMIOS_LDISC\n\n#undef TERMIO_LDISC\n\n#undef HAVE_STRUCT_STAT_ST_BLOCKS\n\n#undef HAVE_STRUCT_TM_TM_ZONE\n#undef HAVE_TM_ZONE\n\n#undef HAVE_TIMEVAL\n\n#undef HAVE_STRUCT_TIMEZONE\n\n#undef WEXITSTATUS_OFFSET\n\n#undef HAVE_STRUCT_TIMESPEC\n#undef TIME_H_DEFINES_STRUCT_TIMESPEC\n#undef SYS_TIME_H_DEFINES_STRUCT_TIMESPEC\n#undef PTHREAD_H_DEFINES_STRUCT_TIMESPEC\n\n#undef TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC\n#undef HAVE_STRUCT_STAT_ST_ATIMESPEC_TV_NSEC\n#undef HAVE_STRUCT_STAT_ST_ATIMENSEC\n#undef HAVE_STRUCT_STAT_ST_ATIM_ST__TIM_TV_NSEC\n\n/* Characteristics of definitions in the system header files. */\n\n#undef HAVE_GETPW_DECLS\n\n#undef HAVE_RESOURCE\n\n#undef HAVE_LIBC_FNM_EXTMATCH\n\n/* Define if you have <linux/audit.h> and it defines AUDIT_USER_TTY */\n#undef HAVE_DECL_AUDIT_USER_TTY\n\n#undef HAVE_DECL_CONFSTR\n\n#undef HAVE_DECL_PRINTF\n\n#undef HAVE_DECL_SBRK\n\n#undef HAVE_DECL_STRCPY\n\n#undef HAVE_DECL_STRSIGNAL\n\n#undef HAVE_DECL_STRTOLD\n\n#undef PRI_MACROS_BROKEN\n\n#undef STRTOLD_BROKEN\n\n/* Define if WCONTINUED is defined in system headers, but rejected by waitpid */\n#undef WCONTINUED_BROKEN\n\n/* These are checked with BASH_CHECK_DECL */\n\n#undef HAVE_DECL_STRTOIMAX\n#undef HAVE_DECL_STRTOL\n#undef HAVE_DECL_STRTOLL\n#undef HAVE_DECL_STRTOUL\n#undef HAVE_DECL_STRTOULL\n#undef HAVE_DECL_STRTOUMAX\n\n/* Characteristics of system calls and C library functions. */\n\n/* Define if the `getpgrp' function takes no argument.  */\n#undef GETPGRP_VOID\n\n#undef NAMED_PIPES_MISSING\n\n#undef OPENDIR_NOT_ROBUST\n\n#undef PGRP_PIPE\n\n/* Define if the setvbuf function takes the buffering type as its second\n   argument and the buffer pointer as the third, as on System V\n   before release 3.  */\n#undef SETVBUF_REVERSED\n\n#undef STAT_MACROS_BROKEN\n\n#undef ULIMIT_MAXFDS\n\n#undef CAN_REDEFINE_GETENV\n\n#undef HAVE_STD_PUTENV\n\n#undef HAVE_STD_UNSETENV\n\n#undef HAVE_PRINTF_A_FORMAT\n\n#undef CTYPE_NON_ASCII\n\n/* Define if you have <langinfo.h> and nl_langinfo(CODESET). */\n#undef HAVE_LANGINFO_CODESET\n\n/* Characteristics of properties exported by the kernel. */\n\n/* Define if the kernel can exec files beginning with #! */\n#undef HAVE_HASH_BANG_EXEC\n\n/* Define if you have the /dev/fd devices to map open files into the file system. */\n#undef HAVE_DEV_FD\n\n/* Defined to /dev/fd or /proc/self/fd (linux). */\n#undef DEV_FD_PREFIX\n\n/* Define if you have the /dev/stdin device. */\n#undef HAVE_DEV_STDIN\n\n/* The type of iconv's `inbuf' argument */\n#undef ICONV_CONST\n\n/* Type and behavior of signal handling functions. */\n\n/* Define as the return type of signal handlers (int or void).  */\n#undef RETSIGTYPE\n\n/* Define if return type of signal handlers is void */\n#undef VOID_SIGHANDLER\n\n#undef MUST_REINSTALL_SIGHANDLERS\n\n#undef HAVE_BSD_SIGNALS\n\n#undef HAVE_POSIX_SIGNALS\n\n#undef HAVE_USG_SIGHOLD\n\n#undef UNUSABLE_RT_SIGNALS\n\n/* Presence of system and C library functions. */\n\n/* Define if you have the asprintf function.  */\n#undef HAVE_ASPRINTF\n\n/* Define if you have the bcopy function.  */\n#undef HAVE_BCOPY\n\n/* Define if you have the bzero function.  */\n#undef HAVE_BZERO\n\n/* Define if you have the chown function.  */\n#undef HAVE_CHOWN\n\n/* Define if you have the confstr function.  */\n#undef HAVE_CONFSTR\n\n/* Define if you have the dlclose function.  */\n#undef HAVE_DLCLOSE\n\n/* Define if you have the dlopen function.  */\n#undef HAVE_DLOPEN\n\n/* Define if you have the dlsym function.  */\n#undef HAVE_DLSYM\n\n/* Define if you don't have vprintf but do have _doprnt.  */\n#undef HAVE_DOPRNT\n\n/* Define if you have the dprintf function.  */\n#undef HAVE_DPRINTF\n\n/* Define if you have the dup2 function.  */\n#undef HAVE_DUP2\n\n/* Define if you have the eaccess function.  */\n#undef HAVE_EACCESS\n\n/* Define if you have the faccessat function.  */\n#undef HAVE_FACCESSAT\n\n/* Define if you have the fcntl function.  */\n#undef HAVE_FCNTL\n\n/* Define if you have the fpurge/__fpurge function.  */\n#undef HAVE_FPURGE\n#undef HAVE___FPURGE\n#undef HAVE_DECL_FPURGE\n\n/* Define if you have the getaddrinfo function. */\n#undef HAVE_GETADDRINFO\n\n/* Define if you have the getcwd function.  */\n#undef HAVE_GETCWD\n\n/* Define if you have the getdtablesize function.  */\n#undef HAVE_GETDTABLESIZE\n\n/* Define if you have the getgroups function.  */\n#undef HAVE_GETGROUPS\n\n/* Define if you have the gethostbyname function.  */\n#undef HAVE_GETHOSTBYNAME\n\n/* Define if you have the gethostname function.  */\n#undef HAVE_GETHOSTNAME\n\n/* Define if you have the getpagesize function.  */\n#undef HAVE_GETPAGESIZE\n\n/* Define if you have the getpeername function.  */\n#undef HAVE_GETPEERNAME\n\n/* Define if you have the getpwent function. */\n#undef HAVE_GETPWENT\n\n/* Define if you have the getpwnam function. */\n#undef HAVE_GETPWNAM\n\n/* Define if you have the getpwuid function. */\n#undef HAVE_GETPWUID\n\n/* Define if you have the getrlimit function.  */\n#undef HAVE_GETRLIMIT\n\n/* Define if you have the getrusage function.  */\n#undef HAVE_GETRUSAGE\n\n/* Define if you have the getservbyname function.  */\n#undef HAVE_GETSERVBYNAME\n\n/* Define if you have the getservent function.  */\n#undef HAVE_GETSERVENT\n\n/* Define if you have the gettimeofday function.  */\n#undef HAVE_GETTIMEOFDAY\n\n/* Define if you have the getwd function.  */\n#undef HAVE_GETWD\n\n/* Define if you have the iconv function.  */\n#undef HAVE_ICONV\n\n/* Define if you have the imaxdiv function.  */\n#undef HAVE_IMAXDIV\n\n/* Define if you have the inet_aton function.  */\n#undef HAVE_INET_ATON\n\n/* Define if you have the isascii function. */\n#undef HAVE_ISASCII\n\n/* Define if you have the isblank function.  */\n#undef HAVE_ISBLANK\n\n/* Define if you have the isgraph function.  */\n#undef HAVE_ISGRAPH\n\n/* Define if you have the isprint function.  */\n#undef HAVE_ISPRINT\n\n/* Define if you have the isspace function.  */\n#undef HAVE_ISSPACE\n\n/* Define if you have the iswctype function.  */\n#undef HAVE_ISWCTYPE\n\n/* Define if you have the iswlower function.  */\n#undef HAVE_ISWLOWER\n\n/* Define if you have the iswupper function.  */\n#undef HAVE_ISWUPPER\n\n/* Define if you have the isxdigit function.  */\n#undef HAVE_ISXDIGIT\n\n/* Define if you have the kill function.  */\n#undef HAVE_KILL\n\n/* Define if you have the killpg function.  */\n#undef HAVE_KILLPG\n\n/* Define if you have the lstat function. */\n#undef HAVE_LSTAT\n\n/* Define if you have the locale_charset function. */\n#undef HAVE_LOCALE_CHARSET\n\n/* Define if you have the mbrlen function. */\n#undef HAVE_MBRLEN\n\n/* Define if you have the mbrtowc function. */\n#undef HAVE_MBRTOWC\n\n/* Define if you have the mbscasecmp function. */\n#undef HAVE_MBSCASECMP\n\n/* Define if you have the mbschr function. */\n#undef HAVE_MBSCHR\n\n/* Define if you have the mbscmp function. */\n#undef HAVE_MBSCMP\n\n/* Define if you have the mbsnrtowcs function. */\n#undef HAVE_MBSNRTOWCS\n\n/* Define if you have the mbsrtowcs function. */\n#undef HAVE_MBSRTOWCS\n\n/* Define if you have the memmove function.  */\n#undef HAVE_MEMMOVE\n\n/* Define if you have the memset function.  */\n#undef HAVE_MEMSET\n\n/* Define if you have the mkfifo function.  */\n#undef HAVE_MKFIFO\n\n/* Define if you have the mkstemp function.  */\n#undef HAVE_MKSTEMP\n\n/* Define if you have the pathconf function. */\n#undef HAVE_PATHCONF\n\n/* Define if you have the pselect function.  */\n#undef HAVE_PSELECT\n\n/* Define if you have the putenv function.  */\n#undef HAVE_PUTENV\n\n/* Define if you have the raise function. */\n#undef HAVE_RAISE\n\n/* Define if you have the random function. */\n#undef HAVE_RANDOM\n\n/* Define if you have the readlink function. */\n#undef HAVE_READLINK\n\n/* Define if you have the regcomp function. */\n#undef HAVE_REGCOMP\n\n/* Define if you have the regexec function. */\n#undef HAVE_REGEXEC\n\n/* Define if you have the rename function. */\n#undef HAVE_RENAME\n\n/* Define if you have the sbrk function. */\n#undef HAVE_SBRK\n\n/* Define if you have the select function.  */\n#undef HAVE_SELECT\n\n/* Define if you have the setdtablesize function.  */\n#undef HAVE_SETDTABLESIZE\n\n/* Define if you have the setenv function.  */\n#undef HAVE_SETENV\n\n/* Define if you have the setitimer function.  */\n#undef HAVE_SETITIMER\n\n/* Define if you have the setlinebuf function.  */\n#undef HAVE_SETLINEBUF\n\n/* Define if you have the setlocale function.  */\n#undef HAVE_SETLOCALE\n\n/* Define if you have the setostype function.  */\n#undef HAVE_SETOSTYPE\n\n/* Define if you have the setregid function.  */\n#undef HAVE_SETREGID\n#undef HAVE_DECL_SETREGID\n\n/* Define if you have the setvbuf function.  */\n#undef HAVE_SETVBUF\n\n/* Define if you have the siginterrupt function.  */\n#undef HAVE_SIGINTERRUPT\n\n/* Define if you have the POSIX.1-style sigsetjmp function.  */\n#undef HAVE_POSIX_SIGSETJMP\n\n/* Define if you have the snprintf function.  */\n#undef HAVE_SNPRINTF\n\n/* Define if you have the strcasecmp function.  */\n#undef HAVE_STRCASECMP\n\n/* Define if you have the strcasestr function.  */\n#undef HAVE_STRCASESTR\n\n/* Define if you have the strchr function.  */\n#undef HAVE_STRCHR\n\n/* Define if you have the strchrnul function.  */\n#undef HAVE_STRCHRNUL\n\n/* Define if you have the strcoll function.  */\n#undef HAVE_STRCOLL\n\n/* Define if you have the strerror function.  */\n#undef HAVE_STRERROR\n\n/* Define if you have the strftime function. */\n#undef HAVE_STRFTIME\n\n/* Define if you have the strnlen function. */\n#undef HAVE_STRNLEN\n\n/* Define if you have the strpbrk function. */\n#undef HAVE_STRPBRK\n\n/* Define if you have the strstr function. */\n#undef HAVE_STRSTR\n\n/* Define if you have the strtod function. */\n#undef HAVE_STRTOD\n\n/* Define if you have the strtoimax function. */\n#undef HAVE_STRTOIMAX\n\n/* Define if you have the strtol function. */\n#undef HAVE_STRTOL\n\n/* Define if you have the strtoll function. */\n#undef HAVE_STRTOLL\n\n/* Define if you have the strtoul function. */\n#undef HAVE_STRTOUL\n\n/* Define if you have the strtoull function. */\n#undef HAVE_STRTOULL\n\n/* Define if you have the strtoumax function. */\n#undef HAVE_STRTOUMAX\n\n/* Define if you have the strsignal function or macro. */\n#undef HAVE_STRSIGNAL\n\n/* Define if you have the sysconf function. */\n#undef HAVE_SYSCONF\n\n/* Define if you have the syslog function. */\n#undef HAVE_SYSLOG\n\n/* Define if you have the tcgetattr function.  */\n#undef HAVE_TCGETATTR\n\n/* Define if you have the tcgetpgrp function.  */\n#undef HAVE_TCGETPGRP\n\n/* Define if you have the times function.  */\n#undef HAVE_TIMES\n\n/* Define if you have the towlower function.  */\n#undef HAVE_TOWLOWER\n\n/* Define if you have the towupper function.  */\n#undef HAVE_TOWUPPER\n\n/* Define if you have the ttyname function.  */\n#undef HAVE_TTYNAME\n\n/* Define if you have the tzset function. */\n#undef HAVE_TZSET\n\n/* Define if you have the ulimit function. */\n#undef HAVE_ULIMIT\n\n/* Define if you have the uname function. */\n#undef HAVE_UNAME\n\n/* Define if you have the unsetenv function.  */\n#undef HAVE_UNSETENV\n\n/* Define if you have the vasprintf function.  */\n#undef HAVE_VASPRINTF\n\n/* Define if you have the vprintf function.  */\n#undef HAVE_VPRINTF\n\n/* Define if you have the vsnprintf function.  */\n#undef HAVE_VSNPRINTF\n\n/* Define if you have the waitpid function. */\n#undef HAVE_WAITPID\n\n/* Define if you have the wait3 function.  */\n#undef HAVE_WAIT3\n\n/* Define if you have the wcrtomb function.  */\n#undef HAVE_WCRTOMB\n\n/* Define if you have the wcscoll function.  */\n#undef HAVE_WCSCOLL\n\n/* Define if you have the wcsdup function.  */\n#undef HAVE_WCSDUP\n\n/* Define if you have the wctype function.  */\n#undef HAVE_WCTYPE\n\n/* Define if you have the wcswidth function.  */\n#undef HAVE_WCSWIDTH\n\n/* Define if you have the wcwidth function.  */\n#undef HAVE_WCWIDTH\n\n/* and if it works */\n#undef WCWIDTH_BROKEN\n\n/* Presence of certain system include files. */\n\n/* Define if you have the <arpa/inet.h> header file. */\n#undef HAVE_ARPA_INET_H\n\n/* Define if you have the <dirent.h> header file.  */\n#undef HAVE_DIRENT_H\n\n/* Define if you have the <dlfcn.h> header file.  */\n#undef HAVE_DLFCN_H\n\n/* Define if you have the <grp.h> header file.  */\n#undef HAVE_GRP_H\n\n/* Define if you have the <inttypes.h> header file. */\n#undef HAVE_INTTYPES_H\n\n/* Define if you have the <langinfo.h> header file.  */\n#undef HAVE_LANGINFO_H\n\n/* Define if you have the <libaudit.h> header file. */\n#undef HAVE_LIBAUDIT_H\n\n/* Define if you have the <libintl.h> header file. */\n#undef HAVE_LIBINTL_H\n\n/* Define if you have the <limits.h> header file.  */\n#undef HAVE_LIMITS_H\n\n/* Define if you have the <locale.h> header file.  */\n#undef HAVE_LOCALE_H\n\n/* Define if you have the <mbstr.h> header file.  */\n#undef HAVE_MBSTR_H\n\n/* Define if you have the <ndir.h> header file.  */\n#undef HAVE_NDIR_H\n\n/* Define if you have the <netdh.h> header file. */\n#undef HAVE_NETDB_H\n\n/* Define if you have the <netinet/in.h> header file. */\n#undef HAVE_NETINET_IN_H\n\n/* Define if you have the <pwd.h> header file. */\n#undef HAVE_PWD_H\n\n/* Define if you have the <regex.h> header file. */\n#undef HAVE_REGEX_H\n\n/* Define if you have the <stdlib.h> header file.  */\n#undef HAVE_STDLIB_H\n\n/* Define if you have the <stdarg.h> header file.  */\n#undef HAVE_STDARG_H\n\n/* Define if you have the <string.h> header file.  */\n#undef HAVE_STRING_H\n\n/* Define if you have the <strings.h> header file.  */\n#undef HAVE_STRINGS_H\n\n/* Define if you have the <memory.h> header file.  */\n#undef HAVE_MEMORY_H\n\n/* Define if you have the <stdbool.h> header file. */\n#undef HAVE_STDBOOL_H\n\n/* Define if you have the <stddef.h> header file. */\n#undef HAVE_STDDEF_H\n\n/* Define if you have the <stdint.h> header file. */\n#undef HAVE_STDINT_H\n\n/* Define if you have the <syslog.h> header file. */\n#undef HAVE_SYSLOG_H\n\n/* Define if you have the <sys/dir.h> header file.  */\n#undef HAVE_SYS_DIR_H\n\n/* Define if you have the <sys/file.h> header file.  */\n#undef HAVE_SYS_FILE_H\n\n/* Define if you have the <sys/ioctl.h> header file.  */\n#undef HAVE_SYS_IOCTL_H\n\n/* Define if you have the <sys/ndir.h> header file.  */\n#undef HAVE_SYS_NDIR_H\n\n/* Define if you have the <sys/param.h> header file.  */\n#undef HAVE_SYS_PARAM_H\n\n/* Define if you have the <sys/pte.h> header file.  */\n#undef HAVE_SYS_PTE_H\n\n/* Define if you have the <sys/ptem.h> header file.  */\n#undef HAVE_SYS_PTEM_H\n\n/* Define if you have the <sys/resource.h> header file.  */\n#undef HAVE_SYS_RESOURCE_H\n\n/* Define if you have the <sys/select.h> header file.  */\n#undef HAVE_SYS_SELECT_H\n\n/* Define if you have the <sys/socket.h> header file.  */\n#undef HAVE_SYS_SOCKET_H\n\n/* Define if you have the <sys/stat.h> header file. */\n#undef HAVE_SYS_STAT_H\n\n/* Define if you have the <sys/stream.h> header file.  */\n#undef HAVE_SYS_STREAM_H\n\n/* Define if you have <sys/time.h> */\n#undef HAVE_SYS_TIME_H\n\n#undef TIME_WITH_SYS_TIME\n\n/* Define if you have <sys/times.h> */\n#undef HAVE_SYS_TIMES_H\n\n/* Define if you have the <sys/types.h> header file. */\n#undef HAVE_SYS_TYPES_H\n\n/* Define if you have <sys/wait.h> that is POSIX.1 compatible.  */\n#undef HAVE_SYS_WAIT_H\n\n/* Define if you have the <termcap.h> header file.  */\n#undef HAVE_TERMCAP_H\n\n/* Define if you have the <termio.h> header file.  */\n#undef HAVE_TERMIO_H\n\n/* Define if you have the <termios.h> header file.  */\n#undef HAVE_TERMIOS_H\n\n/* Define if you have the <ulimit.h> header file.  */\n#undef HAVE_ULIMIT_H\n\n/* Define if you have the <unistd.h> header file.  */\n#undef HAVE_UNISTD_H\n\n/* Define if you have the <varargs.h> header file.  */\n#undef HAVE_VARARGS_H\n\n/* Define if you have the <wchar.h> header file.  */\n#undef HAVE_WCHAR_H\n\n/* Define if you have the <varargs.h> header file.  */\n#undef HAVE_WCTYPE_H\n\n/* Presence of certain system libraries. */\n\n#undef HAVE_LIBDL\n\n#undef HAVE_LIBSUN\n\n#undef HAVE_LIBSOCKET\n\n/* Are we running the GNU C library, version 2.1 or later? */\n#undef GLIBC21\n\n/* Are we running SVR5 (UnixWare 7)? */\n#undef SVR5\n\n/* Are we running SVR4.2? */\n#undef SVR4_2\n\n/* Are we running some version of SVR4? */\n#undef SVR4\n\n/* Define if job control is unusable or unsupported. */\n#undef JOB_CONTROL_MISSING\n\n/* Do we need to define _KERNEL to get the RLIMIT_* defines from\n   <sys/resource.h>? */\n#undef RLIMIT_NEEDS_KERNEL\n\n/* Number of bits in a file offset, on hosts where this is settable. */\n#undef _FILE_OFFSET_BITS\n\n/* Define for large files on AIX-style hosts. */\n#undef _LARGE_FILES\n\n/* Do strcoll(3) and strcmp(3) give different results in the default locale? */\n#undef STRCOLL_BROKEN\n\n#undef DUP2_BROKEN\n\n#undef GETCWD_BROKEN\n\n/* Additional defines for configuring lib/intl, maintained by autoscan/autoheader */\n\n/* Define if you have the <argz.h> header file. */\n#undef HAVE_ARGZ_H\n\n/* Define if you have the <errno.h> header file. */\n#undef HAVE_ERRNO_H\n\n/* Define if you have the <fcntl.h> header file. */\n#undef HAVE_FCNTL_H\n\n/* Define if you have the <malloc.h> header file. */\n#undef HAVE_MALLOC_H\n\n/* Define if you have the <stdio_ext.h> header file. */\n#undef HAVE_STDIO_EXT_H\n\n/* Define if you have the `dcgettext' function. */\n#undef HAVE_DCGETTEXT\n\n/* Define if you have the `localeconv' function. */\n#undef HAVE_LOCALECONV\n\n/* Define if your system has a working `malloc' function. */\n/* #undef HAVE_MALLOC */\n\n/* Define if you have the `mempcpy' function. */\n#undef HAVE_MEMPCPY\n\n/* Define if you have a working `mmap' system call. */\n#undef HAVE_MMAP\n\n/* Define if you have the `munmap' function. */\n#undef HAVE_MUNMAP\n\n/* Define if you have the `nl_langinfo' function. */\n#undef HAVE_NL_LANGINFO\n\n/* Define if you have the `stpcpy' function. */\n#undef HAVE_STPCPY\n\n/* Define if you have the `strcspn' function. */\n#undef HAVE_STRCSPN\n\n/* Define if you have the `strdup' function. */\n#undef HAVE_STRDUP\n\n/* Define if you have the `__argz_count' function. */\n#undef HAVE___ARGZ_COUNT\n\n/* Define if you have the `__argz_next' function. */\n#undef HAVE___ARGZ_NEXT\n\n/* Define if you have the `__argz_stringify' function. */\n#undef HAVE___ARGZ_STRINGIFY\n\n/* End additions for lib/intl */\n\n#include \"config-bot.h\"\n\n#endif /* _CONFIG_H_ */\n",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/configure.ac": "dnl\ndnl Configure script for bash-4.4\ndnl\ndnl report bugs to chet@po.cwru.edu\ndnl\ndnl Process this file with autoconf to produce a configure script.\n\n# Copyright (C) 1987-2016 Free Software Foundation, Inc.\n\n#\n#   This program is free software: you can redistribute it and/or modify\n#   it under the terms of the GNU General Public License as published by\n#   the Free Software Foundation, either version 3 of the License, or\n#   (at your option) any later version.\n#\n#   This program is distributed in the hope that it will be useful,\n#   but WITHOUT ANY WARRANTY; without even the implied warranty of\n#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#   GNU General Public License for more details.\n#\n#   You should have received a copy of the GNU General Public License\n#   along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAC_REVISION([for Bash 4.4, version 4.082])dnl\n\ndefine(bashvers, 4.4)\ndefine(relstatus, release)\n\nAC_INIT([bash], bashvers-relstatus, [bug-bash@gnu.org])\n\ndnl make sure we are using a recent autoconf version\nAC_PREREQ(2.61)\n\nAC_CONFIG_SRCDIR(shell.h)\ndnl where to find install.sh, config.sub, and config.guess\nAC_CONFIG_AUX_DIR(./support)\nAC_CONFIG_HEADERS(config.h)\n\ndnl checks for version info\nBASHVERS=bashvers\nRELSTATUS=relstatus\n\ndnl defaults for debug settings\ncase \"$RELSTATUS\" in\nalp*|bet*|dev*|rc*|releng*|maint*)\tDEBUG='-DDEBUG' MALLOC_DEBUG='-DMALLOC_DEBUG' ;;\n*)\tDEBUG= MALLOC_DEBUG= ;;\nesac\n\ndnl canonicalize the host and os so we can do some tricky things before\ndnl parsing options\nAC_CANONICAL_HOST\nAC_CANONICAL_BUILD\n\ndnl configure defaults\nopt_bash_malloc=yes\nopt_afs=no\nopt_curses=no\nopt_with_installed_readline=no\n\n#htmldir=\n\ndnl some systems should be configured without the bash malloc by default\ndnl and some need a special compiler or loader\ndnl look in the NOTES file for more\ncase \"${host_cpu}-${host_os}\" in\nalpha*-*)\topt_bash_malloc=no ;;\t# alpha running osf/1 or linux\n*[[Cc]]ray*-*)\topt_bash_malloc=no ;;\t# Crays\n*-osf1*)\topt_bash_malloc=no ;;\t# other osf/1 machines\nsparc-svr4*)\topt_bash_malloc=no ;;\t# sparc SVR4, SVR4.2\nsparc-netbsd*)\topt_bash_malloc=no ;;\t# needs 8-byte alignment\nmips-irix6*)\topt_bash_malloc=no ;;\t# needs 8-byte alignment\nm68k-sysv)\topt_bash_malloc=no ;;\t# fixes file descriptor leak in closedir\nsparc-linux*)\topt_bash_malloc=no ;;\t# sparc running linux; requires ELF\n#*-freebsd*-gnu)\topt_bash_malloc=no ;;\t# there's some undetermined problem here\n#*-freebsd*)\topt_bash_malloc=no ;;\t# they claim it's better; I disagree\n*-openbsd*)\topt_bash_malloc=no ;;\t# they claim it needs eight-bit alignment\n*-mirbsd*)\topt_bash_malloc=no ;;\t# they claim it needs eight-bit alignment\n*-aix*)\t\topt_bash_malloc=no ;;\t# AIX machines\n*-nextstep*)\topt_bash_malloc=no ;;\t# NeXT machines running NeXTstep\n*-openstep*)\topt_bash_malloc=no ;;\t# i386/Sparc/HP machines running Openstep\n*-macos*)\topt_bash_malloc=no ;;\t# Apple MacOS X\n*-rhapsody*)\topt_bash_malloc=no ;;\t# Apple Rhapsody (MacOS X)\n*-darwin*)\topt_bash_malloc=no ;;\t# Apple Darwin (MacOS X)\n*-dgux*)\topt_bash_malloc=no ;;\t# DG/UX machines\n*-qnx*)\t\topt_bash_malloc=no ;;\t# QNX 4.2, QNX 6.x\n*-machten4)\topt_bash_malloc=no ;;\t# MachTen 4.x\n*-bsdi2.1|*-bsdi3.?)\topt_bash_malloc=no ; : ${CC:=shlicc2} ;; # for loadable builtins\n*-beos*)\topt_bash_malloc=no ;;\t# they say it's suitable\n*-cygwin*)\topt_bash_malloc=no ;;\t# Cygnus's CYGWIN environment\n*-opennt*|*-interix*)\topt_bash_malloc=no ;;\t# Interix, now owned by Microsoft\n*-nsk*)\t\topt_bash_malloc=no ;;\t# HP NonStop\n*-haiku*)\topt_bash_malloc=no ;;\t# Haiku OS\nesac\n\n# memory scrambling on free()\ncase \"${host_os}\" in\nsco3.2v5*|sco3.2v4*)\topt_memscramble=no ;;\n*)\t\t\topt_memscramble=yes ;;\nesac\n\ndnl\ndnl macros for the bash debugger\ndnl\ndnl AM_PATH_LISPDIR\nAC_ARG_VAR(DEBUGGER_START_FILE, [location of bash debugger initialization file])\n\ndnl arguments to configure\ndnl packages\nAC_ARG_WITH(afs, AC_HELP_STRING([--with-afs], [if you are running AFS]), opt_afs=$withval)\nAC_ARG_WITH(bash-malloc, AC_HELP_STRING([--with-bash-malloc], [use the Bash version of malloc]), opt_bash_malloc=$withval)\nAC_ARG_WITH(curses, AC_HELP_STRING([--with-curses], [use the curses library instead of the termcap library]), opt_curses=$withval)\nAC_ARG_WITH(gnu-malloc, AC_HELP_STRING([--with-gnu-malloc], [synonym for --with-bash-malloc]), opt_bash_malloc=$withval)\nAC_ARG_WITH(installed-readline, AC_HELP_STRING([--with-installed-readline], [use a version of the readline library that is already installed]), opt_with_installed_readline=$withval)\n\nif test \"$opt_bash_malloc\" = yes; then\n\tMALLOC_TARGET=malloc\n\tMALLOC_SRC=malloc.c\n\n\tMALLOC_LIB='-lmalloc'\n\tMALLOC_LIBRARY='$(ALLOC_LIBDIR)/libmalloc.a'\n\tMALLOC_LDFLAGS='-L$(ALLOC_LIBDIR)'\n\tMALLOC_DEP='$(MALLOC_LIBRARY)'\n\n\tAC_DEFINE(USING_BASH_MALLOC)\nelse\n\tMALLOC_LIB=\n\tMALLOC_LIBRARY=\n\tMALLOC_LDFLAGS=\n\tMALLOC_DEP=\t\nfi\n\nif test \"$opt_afs\" = yes; then\n\tAC_DEFINE(AFS)\nfi\n\nif test \"$opt_curses\" = yes; then\n\tprefer_curses=yes\nfi\n\nif test -z \"${DEBUGGER_START_FILE}\"; then\n\tDEBUGGER_START_FILE='${datadir}/bashdb/bashdb-main.inc'\nfi\n\ndnl optional shell features in config.h.in\nopt_minimal_config=no\n\nopt_job_control=yes\nopt_alias=yes\nopt_readline=yes\nopt_history=yes\nopt_bang_history=yes\nopt_dirstack=yes\nopt_restricted=yes\nopt_process_subst=yes\nopt_prompt_decoding=yes\nopt_select=yes\nopt_help=yes\nopt_array_variables=yes\nopt_dparen_arith=yes\nopt_extended_glob=yes\nopt_brace_expansion=yes\nopt_disabled_builtins=no\nopt_command_timing=yes\nopt_xpg_echo=no\nopt_strict_posix=no\nopt_cond_command=yes\nopt_cond_regexp=yes\nopt_coproc=yes\nopt_arith_for_command=yes\nopt_net_redirs=yes\nopt_progcomp=yes\nopt_separate_help=no\nopt_multibyte=yes\nopt_debugger=yes\nopt_single_longdoc_strings=yes\nopt_casemod_attrs=yes\nopt_casemod_expansions=yes\nopt_extglob_default=no\nopt_dircomplete_expand_default=no\nopt_globascii_default=no\nopt_function_import=yes\n\ndnl options that affect how bash is compiled and linked\nopt_static_link=no\nopt_profiling=no\n\ndnl argument parsing for optional features\nAC_ARG_ENABLE(minimal-config, AC_HELP_STRING([--enable-minimal-config], [a minimal sh-like configuration]), opt_minimal_config=$enableval)\n\ndnl a minimal configuration turns everything off, but features can be\ndnl added individually\nif test $opt_minimal_config = yes; then\n\topt_job_control=no opt_alias=no opt_readline=no\n\topt_history=no opt_bang_history=no opt_dirstack=no\n\topt_restricted=no opt_process_subst=no opt_prompt_decoding=no\n\topt_select=no opt_help=no opt_array_variables=no opt_dparen_arith=no\n\topt_brace_expansion=no opt_disabled_builtins=no opt_command_timing=no\n\topt_extended_glob=no opt_cond_command=no opt_arith_for_command=no\n\topt_net_redirs=no opt_progcomp=no opt_separate_help=no\n\topt_multibyte=yes opt_cond_regexp=no opt_coproc=no\n\topt_casemod_attrs=no opt_casemod_expansions=no opt_extglob_default=no\n\topt_globascii_default=no\nfi\n\nAC_ARG_ENABLE(alias, AC_HELP_STRING([--enable-alias], [enable shell aliases]), opt_alias=$enableval)\nAC_ARG_ENABLE(arith-for-command, AC_HELP_STRING([--enable-arith-for-command], [enable arithmetic for command]), opt_arith_for_command=$enableval)\nAC_ARG_ENABLE(array-variables, AC_HELP_STRING([--enable-array-variables], [include shell array variables]), opt_array_variables=$enableval)\nAC_ARG_ENABLE(bang-history, AC_HELP_STRING([--enable-bang-history], [turn on csh-style history substitution]), opt_bang_history=$enableval)\nAC_ARG_ENABLE(brace-expansion, AC_HELP_STRING([--enable-brace-expansion], [include brace expansion]), opt_brace_expansion=$enableval)\nAC_ARG_ENABLE(casemod-attributes, AC_HELP_STRING([--enable-casemod-attributes], [include case-modifying variable attributes]), opt_casemod_attrs=$enableval)\nAC_ARG_ENABLE(casemod-expansions, AC_HELP_STRING([--enable-casemod-expansions], [include case-modifying word expansions]), opt_casemod_expansions=$enableval)\nAC_ARG_ENABLE(command-timing, AC_HELP_STRING([--enable-command-timing], [enable the time reserved word and command timing]), opt_command_timing=$enableval)\nAC_ARG_ENABLE(cond-command, AC_HELP_STRING([--enable-cond-command], [enable the conditional command]), opt_cond_command=$enableval)\nAC_ARG_ENABLE(cond-regexp, AC_HELP_STRING([--enable-cond-regexp], [enable extended regular expression matching in conditional commands]), opt_cond_regexp=$enableval)\nAC_ARG_ENABLE(coprocesses, AC_HELP_STRING([--enable-coprocesses], [enable coprocess support and the coproc reserved word]), opt_coproc=$enableval)\nAC_ARG_ENABLE(debugger, AC_HELP_STRING([--enable-debugger], [enable support for bash debugger]), opt_debugger=$enableval)\nAC_ARG_ENABLE(direxpand-default, AC_HELP_STRING([--enable-direxpand-default], [enable the direxpand shell option by default]), opt_dircomplete_expand_default=$enableval)\nAC_ARG_ENABLE(directory-stack, AC_HELP_STRING([--enable-directory-stack], [enable builtins pushd/popd/dirs]), opt_dirstack=$enableval)\nAC_ARG_ENABLE(disabled-builtins, AC_HELP_STRING([--enable-disabled-builtins], [allow disabled builtins to still be invoked]), opt_disabled_builtins=$enableval)\nAC_ARG_ENABLE(dparen-arithmetic, AC_HELP_STRING([--enable-dparen-arithmetic], [include ((...)) command]), opt_dparen_arith=$enableval)\nAC_ARG_ENABLE(extended-glob, AC_HELP_STRING([--enable-extended-glob], [include ksh-style extended pattern matching]), opt_extended_glob=$enableval)\nAC_ARG_ENABLE(extended-glob-default, AC_HELP_STRING([--enable-extended-glob-default], [force extended pattern matching to be enabled by default]), opt_extglob_default=$enableval)\nAC_ARG_ENABLE(function-import, AC_HELP_STRING([--enable-function-import], [allow bash to import exported function definitions by default]), opt_function_import=$enableval)\nAC_ARG_ENABLE(glob-asciiranges-default, AC_HELP_STRING([--enable-glob-asciiranges-default], [force bracket range expressions in pattern matching to use the C locale by default]), opt_globascii_default=$enableval)\nAC_ARG_ENABLE(help-builtin, AC_HELP_STRING([--enable-help-builtin], [include the help builtin]), opt_help=$enableval)\nAC_ARG_ENABLE(history, AC_HELP_STRING([--enable-history], [turn on command history]), opt_history=$enableval)\nAC_ARG_ENABLE(job-control, AC_HELP_STRING([--enable-job-control], [enable job control features]), opt_job_control=$enableval)\nAC_ARG_ENABLE(multibyte, AC_HELP_STRING([--enable-multibyte], [enable multibyte characters if OS supports them]), opt_multibyte=$enableval)\nAC_ARG_ENABLE(net-redirections, AC_HELP_STRING([--enable-net-redirections], [enable /dev/tcp/host/port redirection]), opt_net_redirs=$enableval)\nAC_ARG_ENABLE(process-substitution, AC_HELP_STRING([--enable-process-substitution], [enable process substitution]), opt_process_subst=$enableval)\nAC_ARG_ENABLE(progcomp, AC_HELP_STRING([--enable-progcomp], [enable programmable completion and the complete builtin]), opt_progcomp=$enableval)\nAC_ARG_ENABLE(prompt-string-decoding, AC_HELP_STRING([--enable-prompt-string-decoding], [turn on escape character decoding in prompts]), opt_prompt_decoding=$enableval)\nAC_ARG_ENABLE(readline, AC_HELP_STRING([--enable-readline], [turn on command line editing]), opt_readline=$enableval)\nAC_ARG_ENABLE(restricted, AC_HELP_STRING([--enable-restricted], [enable a restricted shell]), opt_restricted=$enableval)\nAC_ARG_ENABLE(select, AC_HELP_STRING([--enable-select], [include select command]), opt_select=$enableval)\nAC_ARG_ENABLE(separate-helpfiles, AC_HELP_STRING([--enable-separate-helpfiles], [use external files for help builtin documentation]), opt_separate_help=$enableval)\nAC_ARG_ENABLE(single-help-strings, AC_HELP_STRING([--enable-single-help-strings], [store help documentation as a single string to ease translation]), opt_single_longdoc_strings=$enableval)\nAC_ARG_ENABLE(strict-posix-default, AC_HELP_STRING([--enable-strict-posix-default], [configure bash to be posix-conformant by default]), opt_strict_posix=$enableval)\nAC_ARG_ENABLE(usg-echo-default, AC_HELP_STRING([--enable-usg-echo-default], [a synonym for --enable-xpg-echo-default]), opt_xpg_echo=$enableval)\nAC_ARG_ENABLE(xpg-echo-default, AC_HELP_STRING([--enable-xpg-echo-default], [make the echo builtin expand escape sequences by default]), opt_xpg_echo=$enableval)\n\ndnl options that alter how bash is compiled and linked\nAC_ARG_ENABLE(mem-scramble, AC_HELP_STRING([--enable-mem-scramble], [scramble memory on calls to malloc and free]), opt_memscramble=$enableval)\nAC_ARG_ENABLE(profiling, AC_HELP_STRING([--enable-profiling], [allow profiling with gprof]), opt_profiling=$enableval)\nAC_ARG_ENABLE(static-link, AC_HELP_STRING([--enable-static-link], [link bash statically, for use as a root shell]), opt_static_link=$enableval)\n\ndnl So-called `precious' variables\nAC_ARG_VAR([CC_FOR_BUILD], [C compiler used when compiling binaries used only at build time])\nAC_ARG_VAR([CFLAGS_FOR_BUILD], [Compliation options (CFLAGS) used when compiling binaries used only at build time])\nAC_ARG_VAR([LDFLAGS_FOR_BUILD], [Linker options (LDFLAGS) used when compiling binaries used only at build time])\nAC_ARG_VAR([CPPFLAGS_FOR_BUILD], [C preprocessor options (CPPFLAGS) used when compiling binaries used only at build time])\n\ndnl opt_job_control is handled later, after BASH_JOB_CONTROL_MISSING runs\n\ndnl opt_readline and opt_history are handled later, because AC_PROG_CC needs\ndnl to be run before we can check the version of an already-installed readline\ndnl library\n\nif test $opt_alias = yes; then\nAC_DEFINE(ALIAS)\nfi\nif test $opt_dirstack = yes; then\nAC_DEFINE(PUSHD_AND_POPD)\nfi\nif test $opt_restricted = yes; then\nAC_DEFINE(RESTRICTED_SHELL)\nfi\nif test $opt_process_subst = yes; then\nAC_DEFINE(PROCESS_SUBSTITUTION)\nfi\nif test $opt_prompt_decoding = yes; then\nAC_DEFINE(PROMPT_STRING_DECODE)\nfi\nif test $opt_select = yes; then\nAC_DEFINE(SELECT_COMMAND)\nfi\nif test $opt_help = yes; then\nAC_DEFINE(HELP_BUILTIN)\nfi\nif test $opt_array_variables = yes; then\nAC_DEFINE(ARRAY_VARS)\nfi\nif test $opt_dparen_arith = yes; then\nAC_DEFINE(DPAREN_ARITHMETIC)\nfi\nif test $opt_brace_expansion = yes; then\nAC_DEFINE(BRACE_EXPANSION)\nfi\nif test $opt_disabled_builtins = yes; then\nAC_DEFINE(DISABLED_BUILTINS)\nfi\nif test $opt_command_timing = yes; then\nAC_DEFINE(COMMAND_TIMING)\nfi\nif test $opt_xpg_echo = yes ; then\nAC_DEFINE(DEFAULT_ECHO_TO_XPG)\nfi\nif test $opt_strict_posix = yes; then\nAC_DEFINE(STRICT_POSIX)\nfi\nif test $opt_extended_glob = yes ; then\nAC_DEFINE(EXTENDED_GLOB)\nfi\nif test $opt_extglob_default = yes; then\nAC_DEFINE(EXTGLOB_DEFAULT, 1)\nelse\nAC_DEFINE(EXTGLOB_DEFAULT, 0)\nfi\nif test $opt_cond_command = yes ; then\nAC_DEFINE(COND_COMMAND)\nfi\nif test $opt_cond_regexp = yes ; then\nAC_DEFINE(COND_REGEXP)\nfi\nif test $opt_coproc = yes; then\nAC_DEFINE(COPROCESS_SUPPORT)\nfi\nif test $opt_arith_for_command = yes; then\nAC_DEFINE(ARITH_FOR_COMMAND)\nfi\nif test $opt_net_redirs = yes; then\nAC_DEFINE(NETWORK_REDIRECTIONS)\nfi\nif test $opt_progcomp = yes; then\nAC_DEFINE(PROGRAMMABLE_COMPLETION)\nfi\nif test $opt_multibyte = no; then\nAC_DEFINE(NO_MULTIBYTE_SUPPORT)\nfi\nif test $opt_debugger = yes; then\nAC_DEFINE(DEBUGGER)\nfi\nif test $opt_casemod_attrs = yes; then\nAC_DEFINE(CASEMOD_ATTRS)\nfi\nif test $opt_casemod_expansions = yes; then\nAC_DEFINE(CASEMOD_EXPANSIONS)\nfi\nif test $opt_dircomplete_expand_default = yes; then\nAC_DEFINE(DIRCOMPLETE_EXPAND_DEFAULT)\nfi\nif test $opt_globascii_default = yes; then\nAC_DEFINE(GLOBASCII_DEFAULT, 1)\nelse\nAC_DEFINE(GLOBASCII_DEFAULT, 0)\nfi\nif test $opt_function_import = yes; then\nAC_DEFINE(FUNCTION_IMPORT)\nfi\n\nif test $opt_memscramble = yes; then\nAC_DEFINE(MEMSCRAMBLE)\nfi\n\nif test \"$opt_minimal_config\" = yes; then\n\tTESTSCRIPT=run-minimal\nelse\n\tTESTSCRIPT=run-all\nfi\n\nHELPDIR= HELPDIRDEFINE= HELPINSTALL= HELPFILES_TARGET=\nif test \"$opt_separate_help\" != no; then\n\tif test \"$opt_separate_help\" = \"yes\" ; then\n\t\tHELPDIR='${datadir}/bash'\n\telse\n\t\tHELPDIR=$opt_separate_help\n\tfi\n\tHELPDIRDEFINE='-H ${HELPDIR}'\n\tHELPINSTALL='install-help'\n\tHELPFILES_TARGET='helpdoc'\nfi\nHELPSTRINGS=\nif test \"$opt_single_longdoc_strings\" != \"yes\"; then\n\tHELPSTRINGS='-S'\nfi\n\ndnl now substitute in the values generated by arguments\nAC_SUBST(TESTSCRIPT)\nAC_SUBST(MALLOC_TARGET)\nAC_SUBST(MALLOC_SRC)\n\nAC_SUBST(MALLOC_LIB)\nAC_SUBST(MALLOC_LIBRARY)\nAC_SUBST(MALLOC_LDFLAGS)\nAC_SUBST(MALLOC_DEP)\n\nAC_SUBST(htmldir)\n\nAC_SUBST(HELPDIR)\nAC_SUBST(HELPDIRDEFINE)\nAC_SUBST(HELPINSTALL)\nAC_SUBST(HELPFILES_TARGET)\nAC_SUBST(HELPSTRINGS)\n\ndnl We want these before the checks, so the checks can modify their values.\nif test -z \"$CFLAGS\"; then\n\tAUTO_CFLAGS=\"-g ${GCC+-O2} ${GCC+-Wno-parentheses}\"\n\tAUTO_LDFLAGS=\"-g ${GCC+-O2}\"\nelse\n\tAUTO_CFLAGS= AUTO_LDFLAGS=\nfi\n\necho \"\"\necho \"Beginning configuration for bash-$BASHVERS-$RELSTATUS for ${host_cpu}-${host_vendor}-${host_os}\"\necho \"\"\n\ndnl compilation checks\ndnl AC_PROG_CC sets $cross_compiling to `yes' if cross-compiling for a\ndnl different environment\nAC_PROG_CC\n\ndnl test for Unix variants\nAC_ISC_POSIX\nAC_MINIX\n\nAC_SYS_LARGEFILE\n\ndnl BEGIN changes for cross-building (currently cygwin, minGW, and\ndnl (obsolete) BeOS)\n\nSIGNAMES_O=\nSIGNAMES_H=lsignames.h\n\ndnl load up the cross-building cache file -- add more cases and cache\ndnl files as necessary\n\ndnl Note that host and target machine are the same, and different than the\ndnl build machine.\ndnl Set SIGNAMES_H based on whether or not we're cross-compiling.\n\nCROSS_COMPILE=\nif test \"x$cross_compiling\" = \"xyes\"; then\n    case \"${host}\" in\n    *-cygwin*)\n\tcross_cache=${srcdir}/cross-build/cygwin32.cache\n\t;;\n    *-mingw*)\n\tcross_cache=${srcdir}/cross-build/cygwin32.cache\n\t;;\n    i[[3456]]86-*-beos*)\n\tcross_cache=${srcdir}/cross-build/x86-beos.cache\n\t;;\n    *)\techo \"configure: cross-compiling for $host is not supported\" >&2\n\t;;\n    esac\n    if test -n \"${cross_cache}\" && test -r \"${cross_cache}\"; then\n\techo \"loading cross-build cache file ${cross_cache}\"\n\t. ${cross_cache}\n    fi\n    unset cross_cache\n    SIGNAMES_O='signames.o'\n    CROSS_COMPILE='-DCROSS_COMPILING'\n    AC_SUBST(CROSS_COMPILE)\nfi\nAC_SUBST(SIGNAMES_H)\nAC_SUBST(SIGNAMES_O)\n\ndnl END changes for cross-building\n\ndnl default values\nCFLAGS=${CFLAGS-\"$AUTO_CFLAGS\"}\n# LDFLAGS=${LDFLAGS=\"$AUTO_LDFLAGS\"}\t# XXX\n\n# turn off paren warnings in gcc\nif test \"$GCC\" = yes # && test -n \"$DEBUG\"\nthen\n\tCFLAGS=\"$CFLAGS -Wno-parentheses -Wno-format-security\"\nfi\n\ndnl handle options that alter how bash is compiled and linked\ndnl these must come after the test for cc/gcc\nif test \"$opt_profiling\" = \"yes\"; then\n\tPROFILE_FLAGS=-pg\n\tcase \"$host_os\" in\n\tsolaris2*)\t;;\n\t*)\t\topt_static_link=yes ;;\n\tesac\n\tDEBUG= MALLOC_DEBUG=\nfi\n\nprefer_shared=yes\nprefer_static=no\n\nif test \"$opt_static_link\" = yes; then\n\tprefer_static=yes\n\tprefer_shared=no\n\t# if we're using gcc, add `-static' to LDFLAGS, except on Solaris >= 2\n\tif test -n \"$GCC\" || test \"$ac_cv_prog_gcc\" = \"yes\"; then\n\t\tSTATIC_LD=\"-static\" \n\t\tcase \"$host_os\" in\n\t\tsolaris2*)\t;;\n\t\t*)\t\tLDFLAGS=\"$LDFLAGS -static\" ;;\t# XXX experimental\n\t\tesac\n\tfi\nfi\n\n# set the appropriate make variables for building the \"build tools\"\n# modify defaults based on whether or not we are cross compiling, since the\n# options for the target host may not be appropriate for the build host\nif test \"X$cross_compiling\" = \"Xno\"; then\n\tCC_FOR_BUILD=${CC_FOR_BUILD-'$(CC)'}\n\tCPPFLAGS_FOR_BUILD=${CPPFLAGS_FOR_BUILD-\"$CPPFLAGS\"}\t# XXX - should it be '$(CPPFLAGS)'\n\tLDFLAGS_FOR_BUILD=${LDFLAGS_FOR_BUILD-'$(LDFLAGS)'}\n\t# CFLAGS set above to default value if not passed in environment\n\tCFLAGS_FOR_BUILD=${CFLAGS-'$(CFLAGS)'}\n\tLIBS_FOR_BUILD=${LIBS_FOR_BUILD-'$(LIBS)'}\nelse\n\tCC_FOR_BUILD=${CC_FOR_BUILD-\"gcc\"}\n\tCPPFLAGS_FOR_BUILD=${CPPFLAGS_FOR_BUILD-\"\"}\n\tLDFLAGS_FOR_BUILD=${LDFLAGS_FOR_BUILD-\"\"}\n\tCFLAGS_FOR_BUILD=${CFLAGS_FOR_BUILD=\"-g\"}\n\tLIBS_FOR_BUILD=${LIBS_FOR_BUILD-\"\"}\nfi\n\nAC_SUBST(CFLAGS)\nAC_SUBST(CPPFLAGS)\nAC_SUBST(LDFLAGS)\nAC_SUBST(STATIC_LD)\n\nAC_SUBST(CC_FOR_BUILD)\nAC_SUBST(CFLAGS_FOR_BUILD)\nAC_SUBST(CPPFLAGS_FOR_BUILD)\nAC_SUBST(LDFLAGS_FOR_BUILD)\nAC_SUBST(LIBS_FOR_BUILD)\n\nAC_PROG_GCC_TRADITIONAL\n\ndnl BEGIN READLINE and HISTORY LIBRARY SECTION\ndnl prepare to allow bash to be linked against an already-installed readline\n\ndnl first test that the readline version is new enough to link bash against\nif test \"$opt_readline\" = yes && test \"$opt_with_installed_readline\" != \"no\"\nthen\n\t# If the user specified --with-installed-readline=PREFIX and PREFIX\n\t# is not `yes', set ac_cv_rl_prefix to PREFIX\n\ttest $opt_with_installed_readline != \"yes\" && ac_cv_rl_prefix=$opt_with_installed_readline\n\n\tRL_LIB_READLINE_VERSION\n\n\tcase \"$ac_cv_rl_version\" in\n\t5*|6*|7*|8*|9*)\t;;\n\t*)\topt_with_installed_readline=no \n\t\tAC_MSG_WARN([installed readline library is too old to be linked with bash])\n\t\tAC_MSG_WARN([using private bash version])\n\t\t;;\n\tesac\nfi\n\nTILDE_LIB=-ltilde\nif test $opt_readline = yes; then\n\tAC_DEFINE(READLINE)\n\tif test \"$opt_with_installed_readline\" != \"no\" ; then\n\t\tcase \"$opt_with_installed_readline\" in\n\t\tyes)\tRL_INCLUDE= ;;\n\t\t*)\tcase \"$RL_INCLUDEDIR\" in\n\t\t\t/usr/include)\t;;\n\t\t\t*)\t\tRL_INCLUDE='-I${RL_INCLUDEDIR}' ;;\n\t\t\tesac\n\t\t\t;;\n\t\tesac\n\t\tREADLINE_DEP=\n\t\tREADLINE_LIB=-lreadline\n\t\t# section for OS versions that don't allow unresolved symbols\n\t\t# to be compiled into dynamic libraries.\n\t\tcase \"$host_os\" in\n\t\tcygwin*)\tTILDE_LIB= ;;\n\t\tesac\n\telse\n\t\tRL_LIBDIR='$(dot)/$(LIBSUBDIR)/readline'\n\t\tREADLINE_DEP='$(READLINE_LIBRARY)'\n\t\t# section for OS versions that ship an older/broken version of\n\t\t# readline as a standard dynamic library and don't allow a\n\t\t# static version specified as -llibname to override the\n\t\t# dynamic version\n\t\tcase \"${host_os}\" in\n\t\tdarwin[[89]]*|darwin10*) READLINE_LIB='${READLINE_LIBRARY}' ;;\n\t\t*)\t\tREADLINE_LIB=-lreadline ;;\n\t\tesac\n\tfi\nelse\n\tRL_LIBDIR='$(dot)/$(LIBSUBDIR)/readline'\n\tREADLINE_LIB= READLINE_DEP=\nfi\nif test $opt_history = yes || test $opt_bang_history = yes; then\n\tif test $opt_history = yes; then\n\t\tAC_DEFINE(HISTORY)\n\tfi\n\tif test $opt_bang_history = yes; then\n\t\tAC_DEFINE(BANG_HISTORY)\n\tfi\n \tif test \"$opt_with_installed_readline\" != \"no\"; then\n\t\tHIST_LIBDIR=$RL_LIBDIR\n\t\tHISTORY_DEP=\n\t\tHISTORY_LIB=-lhistory\n\t\tcase \"$opt_with_installed_readline\" in\n\t\tyes)\tRL_INCLUDE= ;;\n\t\t*)\tcase \"$RL_INCLUDEDIR\" in\n\t\t\t/usr/include)\t;;\n\t\t\t*)\t\tRL_INCLUDE='-I${RL_INCLUDEDIR}' ;;\n\t\t\tesac\n\t\t\t;;\n\t\tesac\n\telse\n\t\tHIST_LIBDIR='$(dot)/$(LIBSUBDIR)/readline'\n\t\tHISTORY_DEP='$(HISTORY_LIBRARY)'\n\t\t# section for OS versions that ship an older version of\n\t\t# readline as a standard dynamic library and don't allow a\n\t\t# static version specified as -llibname to override the\n\t\t# dynamic version\n\t\tcase \"${host_os}\" in\n\t\tdarwin[[89]]*|darwin10*) HISTORY_LIB='${HISTORY_LIBRARY}' ;;\n\t\t*)\t\tHISTORY_LIB=-lhistory ;;\n\t\tesac\n\tfi\nelse\n\tHIST_LIBDIR='$(dot)/$(LIBSUBDIR)/readline'\n\tHISTORY_LIB= HISTORY_DEP=\nfi\nAC_SUBST(READLINE_LIB)\nAC_SUBST(READLINE_DEP)\nAC_SUBST(RL_LIBDIR)\nAC_SUBST(RL_INCLUDEDIR)\nAC_SUBST(RL_INCLUDE)\nAC_SUBST(HISTORY_LIB)\nAC_SUBST(HISTORY_DEP)\nAC_SUBST(HIST_LIBDIR)\nAC_SUBST(TILDE_LIB)\n\ndnl END READLINE and HISTORY LIBRARY SECTION\n\ndnl programs needed by the build and install process\nAC_PROG_INSTALL\nAC_CHECK_TOOL(AR, ar)\ndnl Set default for ARFLAGS, since autoconf does not have a macro for it.\ndnl This allows people to set it when running configure or make\ntest -n \"$ARFLAGS\" || ARFLAGS=\"cr\"\nAC_PROG_RANLIB\nAC_PROG_YACC\nAC_PROG_MAKE_SET\n\ncase \"$ac_cv_prog_YACC\" in\n*bison*)\t;;\n*)\tAC_MSG_WARN([bison not available; needed to process parse.y]) ;;\nesac\n\ncase \"$host_os\" in\nopennt*|interix*)\tMAKE_SHELL=\"$INTERIX_ROOT/bin/sh\" ;;\n*)\t\t\tMAKE_SHELL=/bin/sh ;;\nesac\nAC_SUBST(MAKE_SHELL)\n\ndnl this is similar to the expanded AC_PROG_RANLIB\nif test x$SIZE = x; then\n\tif test x$ac_tool_prefix = x; then\n\t\tSIZE=size\n\telse\n\t\tSIZE=${ac_tool_prefix}size\n\t\tsave_IFS=$IFS ; IFS=:\n\t\tsize_found=0\n\t\tfor dir in $PATH; do\n\t\t\tif test -x $dir/$SIZE ; then\n\t\t\t\tsize_found=1\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\t\tif test $size_found -eq 0; then\n\t\t\tSIZE=:\n\t\tfi\n\t\tIFS=$save_IFS\n\tfi\nfi\nAC_SUBST(SIZE)\n\nm4_include([m4/stat-time.m4])\nm4_include([m4/timespec.m4])\n\ndnl Turn on any extensions available in the GNU C library.\nAC_DEFINE(_GNU_SOURCE, 1)\n\ndnl C compiler characteristics\nAC_C_CONST\nAC_C_INLINE\nAC_C_BIGENDIAN\nAC_C_STRINGIZE\nAC_C_LONG_DOUBLE\nAC_C_PROTOTYPES\nAC_C_CHAR_UNSIGNED\nAC_C_VOLATILE\nAC_C_RESTRICT\n\ndnl initialize GNU gettext\nAM_GNU_GETTEXT([no-libtool], [need-ngettext], [lib/intl])\n\ndnl header files\nAC_HEADER_DIRENT\nAC_HEADER_TIME\n\nBASH_HEADER_INTTYPES\n\nAC_CHECK_HEADERS(unistd.h stdlib.h stdarg.h varargs.h limits.h string.h \\\n\t\t memory.h locale.h termcap.h termio.h termios.h dlfcn.h \\\n\t\t stdbool.h stddef.h stdint.h netdb.h pwd.h grp.h strings.h \\\n\t\t regex.h syslog.h ulimit.h)\nAC_CHECK_HEADERS(sys/pte.h sys/stream.h sys/select.h sys/file.h sys/ioctl.h \\\n\t\t sys/param.h sys/socket.h sys/stat.h \\\n\t\t sys/time.h sys/times.h sys/types.h sys/wait.h)\nAC_CHECK_HEADERS(netinet/in.h arpa/inet.h)\n\ndnl sys/ptem.h requires definitions from sys/stream.h on systems where it\ndnl exists\nAC_CHECK_HEADER(sys/ptem.h, , ,[[\n#if HAVE_SYS_STREAM_H\n#  include <sys/stream.h>\n#endif\n]])\n\ndnl SunOS 4 needs to include <sys/time.h> before <sys/resource.h> to compile\ndnl autoconf complains about presence but inability to compile\nAC_CHECK_HEADER(sys/resource.h, AC_DEFINE(HAVE_SYS_RESOURCE_H), [], [[\n#if HAVE_SYS_TIME_H\n#  include <sys/time.h>\n#endif\n]])\n\ndnl special checks for libc functions\nAC_FUNC_ALLOCA\nAC_FUNC_CHOWN\nAC_FUNC_GETPGRP\nAC_FUNC_SETVBUF_REVERSED\nAC_FUNC_VPRINTF\nAC_FUNC_STRCOLL\n\ndnl if we're not using the bash malloc but require the C alloca, set things\ndnl up to build a libmalloc.a containing only alloca.o\n\nif test \"$ac_cv_func_alloca_works\" = \"no\" && test \"$opt_bash_malloc\" = \"no\"; then\n\tMALLOC_TARGET=alloca\n\tMALLOC_SRC=alloca.c\n\n\tMALLOC_LIB='-lmalloc'\n\tMALLOC_LIBRARY='$(ALLOC_LIBDIR)/libmalloc.a'\n\tMALLOC_LDFLAGS='-L$(ALLOC_LIBDIR)'\n\tMALLOC_DEP='$(MALLOC_LIBRARY)'\nfi\n\ndnl if vprintf is not in libc, see if it's defined in stdio.h\nif test \"$ac_cv_func_vprintf\" = no; then\n    AC_MSG_CHECKING(for declaration of vprintf in stdio.h)\n    AC_EGREP_HEADER([[int[ \t]*vprintf[^a-zA-Z0-9]]],stdio.h,ac_cv_func_vprintf=yes)\n    AC_MSG_RESULT($ac_cv_func_vprintf)\n    if test $ac_cv_func_vprintf = yes; then\n\tAC_DEFINE(HAVE_VPRINTF)\n    fi\nfi\n\nif test \"$ac_cv_func_vprintf\" = no && test \"$ac_cv_func__doprnt\" = \"yes\"; then\n  AC_LIBOBJ(vprint)\nfi\n\ndnl signal stuff\nAC_TYPE_SIGNAL\n\ndnl checks for certain version-specific system calls and libc functions\nAC_CHECK_FUNC(__setostype, AC_DEFINE(HAVE_SETOSTYPE))\nAC_CHECK_FUNC(wait3, AC_DEFINE(HAVE_WAIT3))\n\ndnl checks for missing libc functions\nAC_CHECK_FUNC(mkfifo,AC_DEFINE(HAVE_MKFIFO),AC_DEFINE(MKFIFO_MISSING))\n\ndnl checks for system calls\nAC_CHECK_FUNCS(dup2 eaccess fcntl getdtablesize getgroups gethostname \\\n\t\tgetpagesize getpeername getrlimit getrusage gettimeofday \\\n\t\tkill killpg lstat pselect readlink sbrk select setdtablesize \\\n\t\tsetitimer tcgetpgrp uname ulimit waitpid)\nAC_REPLACE_FUNCS(rename)\n\ndnl checks for c library functions\nAC_CHECK_FUNCS(bcopy bzero confstr faccessat fnmatch \\\n\t\tgetaddrinfo gethostbyname getservbyname getservent inet_aton \\\n\t\timaxdiv memmove pathconf putenv raise random regcomp regexec \\\n\t\tsetenv setlinebuf setlocale setvbuf siginterrupt strchr \\\n\t\tsysconf syslog tcgetattr times ttyname tzset unsetenv)\n\nAC_CHECK_FUNCS(vasprintf asprintf)\nAC_CHECK_FUNCS(isascii isblank isgraph isprint isspace isxdigit)\nAC_CHECK_FUNCS(getpwent getpwnam getpwuid)\nAC_CHECK_FUNCS(mkstemp)\nAC_REPLACE_FUNCS(getcwd memset)\nAC_REPLACE_FUNCS(strcasecmp strcasestr strerror strftime strnlen strpbrk strstr)\nAC_REPLACE_FUNCS(strtod strtol strtoul strtoll strtoull strtoimax strtoumax)\nAC_REPLACE_FUNCS(dprintf)\nAC_REPLACE_FUNCS(strchrnul)\nAC_REPLACE_FUNCS(strdup)\n\nAC_CHECK_HEADERS(libaudit.h)\nAC_CHECK_DECLS([AUDIT_USER_TTY],,, [[#include <linux/audit.h>]])\n\nAC_CHECK_DECLS([confstr])\nAC_CHECK_DECLS([printf])\nAC_CHECK_DECLS([sbrk])\nAC_CHECK_DECLS([setregid])\nAC_CHECK_DECLS([strcpy])\nAC_CHECK_DECLS([strsignal])\n\ndnl Extra test to detect the horribly broken HP/UX 11.00 strtold(3)\nAC_CHECK_DECLS([strtold], [\n    AC_MSG_CHECKING([for broken strtold])\n    AC_CACHE_VAL(bash_cv_strtold_broken,\n\t[AC_TRY_COMPILE(\n\t    [#include <stdlib.h>],\n\t    [int main() { long double r; char *foo, bar; r = strtold(foo, &bar);}],\n\t    bash_cv_strtold_broken=no, bash_cv_strtold_broken=yes,\n\t    [AC_MSG_WARN(cannot check for broken strtold if cross-compiling, defaulting to no)])\n\t]\n    )\n    AC_MSG_RESULT($bash_cv_strtold_broken)\n    if test \"$bash_cv_strtold_broken\" = \"yes\" ; then\n\tAC_DEFINE(STRTOLD_BROKEN)\n    fi\n])\n\nBASH_CHECK_DECL(strtoimax)\nBASH_CHECK_DECL(strtol)\nBASH_CHECK_DECL(strtoll)\nBASH_CHECK_DECL(strtoul)\nBASH_CHECK_DECL(strtoull)\nBASH_CHECK_DECL(strtoumax)\n\nAC_FUNC_MKTIME\n\ndnl\ndnl Checks for lib/intl and related code (uses some of the output from\ndnl AM_GNU_GETTEXT)\ndnl\n\nAC_CHECK_HEADERS([argz.h errno.h fcntl.h malloc.h stdio_ext.h])\n\ndnl AC_FUNC_MALLOC\nAC_FUNC_MMAP\nAC_CHECK_FUNCS([__argz_count __argz_next __argz_stringify dcgettext mempcpy \\\n\t\tmunmap stpcpy strcspn])\n\nINTL_DEP= INTL_INC= LIBINTL_H=\nif test \"x$USE_INCLUDED_LIBINTL\" = \"xyes\"; then\n\tINTL_DEP='${INTL_LIBDIR}/libintl.a'\n\tINTL_INC='-I${INTL_LIBSRC} -I${INTL_BUILDDIR}'\n\tLIBINTL_H='${INTL_BUILDDIR}/libintl.h'\nfi\nAC_SUBST(INTL_DEP)\nAC_SUBST(INTL_INC)\nAC_SUBST(LIBINTL_H)\n\ndnl\ndnl End of checks needed by files in lib/intl\ndnl\n\nBASH_CHECK_MULTIBYTE\n\ndnl checks for the dynamic loading library functions in libc and libdl\nif test \"$opt_static_link\" != yes; then\nAC_CHECK_LIB(dl, dlopen)\nAC_CHECK_FUNCS(dlopen dlclose dlsym)\nfi\n\ndnl this defines HAVE_DECL_SYS_SIGLIST\nAC_DECL_SYS_SIGLIST\n\ndnl network functions -- check for inet_aton again\nif test \"$ac_cv_func_inet_aton\" != 'yes'; then\nBASH_FUNC_INET_ATON\nfi\n\ndnl libraries\ndnl this is reportedly no longer necessary for irix[56].?\ncase \"$host_os\" in\nirix4*)\tAC_CHECK_LIB(sun, getpwent) ;;\nesac\n\ndnl check for getpeername in the socket library only if it's not in libc\nif test \"$ac_cv_func_getpeername\" = no; then\n\tBASH_CHECK_LIB_SOCKET\nfi\ndnl check for gethostbyname in socket libraries if it's not in libc\nif test \"$ac_cv_func_gethostbyname\" = no; then\n\tBASH_FUNC_GETHOSTBYNAME\nfi\n\ndnl system types\nAC_TYPE_GETGROUPS\nAC_TYPE_OFF_T\nAC_TYPE_MODE_T\nAC_TYPE_UID_T\nAC_TYPE_PID_T\nAC_TYPE_SIZE_T\nAC_TYPE_UINTPTR_T\n\nAC_CHECK_TYPE(ssize_t, int)\nAC_CHECK_TYPE(time_t, long)\n\nBASH_TYPE_LONG_LONG\nBASH_TYPE_UNSIGNED_LONG_LONG\n\nAC_TYPE_SIGNAL\nBASH_TYPE_SIG_ATOMIC_T\n\nAC_CHECK_SIZEOF(char, 1)\nAC_CHECK_SIZEOF(short, 2)\nAC_CHECK_SIZEOF(int, 4)\nAC_CHECK_SIZEOF(long, 4)\nAC_CHECK_SIZEOF(char *, 4)\nAC_CHECK_SIZEOF(double, 8)\nAC_CHECK_SIZEOF([long long], 8)\n\nAC_CHECK_TYPE(u_int, [unsigned int])\nAC_CHECK_TYPE(u_long, [unsigned long])\n\nBASH_TYPE_BITS16_T\nBASH_TYPE_U_BITS16_T\nBASH_TYPE_BITS32_T\nBASH_TYPE_U_BITS32_T\nBASH_TYPE_BITS64_T\n\nBASH_TYPE_PTRDIFF_T\n\ndnl structures\nAC_HEADER_STAT\n\ndnl system services\nAC_SYS_INTERPRETER\nif test $ac_cv_sys_interpreter = yes; then\nAC_DEFINE(HAVE_HASH_BANG_EXEC)\nfi\n\ndnl Miscellaneous Bash tests\nif test \"$ac_cv_func_lstat\" = \"no\"; then\nBASH_FUNC_LSTAT\nfi\n\ndnl behavior of system calls and library functions\nBASH_FUNC_CTYPE_NONASCII\nBASH_FUNC_DUP2_CLOEXEC_CHECK\nBASH_SYS_PGRP_SYNC\nBASH_SYS_SIGNAL_VINTAGE\n\ndnl checking for the presence of certain library symbols\nBASH_SYS_ERRLIST\nBASH_SYS_SIGLIST\nBASH_UNDER_SYS_SIGLIST\n\ndnl various system types\nBASH_TYPE_SIGHANDLER\nBASH_CHECK_TYPE(clock_t, [#include <sys/times.h>], long)\nBASH_CHECK_TYPE(sigset_t, [#include <signal.h>], int)\nBASH_CHECK_TYPE(sig_atomic_t, [#include <signal.h>], int)\nBASH_CHECK_TYPE(quad_t, , long, HAVE_QUAD_T)\nBASH_CHECK_TYPE(intmax_t, , $bash_cv_type_long_long)\nBASH_CHECK_TYPE(uintmax_t, , $bash_cv_type_unsigned_long_long)\nif test \"$ac_cv_header_sys_socket_h\" = \"yes\"; then\nBASH_CHECK_TYPE(socklen_t, [#include <sys/socket.h>], [unsigned int], HAVE_SOCKLEN_T)\nfi\nBASH_TYPE_RLIMIT\n\nAC_CHECK_SIZEOF(intmax_t, 8)\n\ndnl presence and contents of structures used by system calls\nBASH_STRUCT_TERMIOS_LDISC\nBASH_STRUCT_TERMIO_LDISC\nBASH_STRUCT_DIRENT_D_INO\nBASH_STRUCT_DIRENT_D_FILENO\nBASH_STRUCT_DIRENT_D_NAMLEN\nBASH_STRUCT_WINSIZE\nBASH_STRUCT_TIMEVAL\nAC_CHECK_MEMBERS([struct stat.st_blocks])\nAC_STRUCT_TM\nAC_STRUCT_TIMEZONE\nBASH_STRUCT_TIMEZONE\n\nBASH_STRUCT_WEXITSTATUS_OFFSET\n\nBASH_CHECK_TYPE_STRUCT_TIMESPEC\nBASH_STAT_TIME\n\ndnl presence and behavior of C library functions\nBASH_FUNC_STRSIGNAL\nBASH_FUNC_OPENDIR_CHECK\nBASH_FUNC_ULIMIT_MAXFDS\nBASH_FUNC_FPURGE\nBASH_FUNC_GETENV\nif test \"$ac_cv_func_getcwd\" = \"yes\"; then\nBASH_FUNC_GETCWD\nfi\nBASH_FUNC_POSIX_SETJMP\nBASH_FUNC_STRCOLL\nBASH_FUNC_SNPRINTF\nBASH_FUNC_VSNPRINTF\n\ndnl If putenv or unsetenv is not present, set the right define so the\ndnl prototype and declaration in lib/sh/getenv.c will be standard-conformant\n\nif test \"$ac_cv_func_putenv\" = \"yes\"; then\nBASH_FUNC_STD_PUTENV\nelse\nAC_DEFINE(HAVE_STD_PUTENV)\nfi\nif test \"$ac_cv_func_unsetenv\" = \"yes\"; then\nBASH_FUNC_STD_UNSETENV\nelse\nAC_DEFINE(HAVE_STD_UNSETENV)\nfi\n\nBASH_FUNC_PRINTF_A_FORMAT\n\ndnl presence and behavior of OS functions\nBASH_SYS_REINSTALL_SIGHANDLERS\nBASH_SYS_JOB_CONTROL_MISSING\nBASH_SYS_NAMED_PIPES\n\ndnl presence of certain CPP defines\nAC_HEADER_TIOCGWINSZ\nBASH_HAVE_TIOCSTAT\nBASH_HAVE_FIONREAD\n\nBASH_CHECK_WCONTINUED\n\ndnl miscellaneous\nBASH_CHECK_SPEED_T\nBASH_CHECK_GETPW_FUNCS\nBASH_CHECK_RTSIGS\nBASH_CHECK_SYS_SIGLIST\n\ndnl special checks\ncase \"$host_os\" in\nhpux*)\tBASH_CHECK_KERNEL_RLIMIT ;;\nesac\n\nif test \"$opt_readline\" = yes; then\ndnl yuck\ncase \"$host_os\" in\naix*)\tprefer_curses=yes ;;\nesac\nBASH_CHECK_LIB_TERMCAP\nfi\nAC_SUBST(TERMCAP_LIB)\nAC_SUBST(TERMCAP_DEP)\n\nBASH_CHECK_DEV_FD\nBASH_CHECK_DEV_STDIN\nBASH_SYS_DEFAULT_MAIL_DIR\n\nif test \"$bash_cv_job_control_missing\" = missing; then\n\topt_job_control=no\nfi\n\nif test \"$opt_job_control\" = yes; then\nAC_DEFINE(JOB_CONTROL)\nJOBS_O=jobs.o\nelse\nJOBS_O=nojobs.o\nfi\n\nAC_SUBST(JOBS_O)\n\ndnl Defines that we want to propagate to the Makefiles in subdirectories,\ndnl like glob and readline\n\nLOCAL_DEFS=-DSHELL\n\ndnl use this section to possibly define more cpp variables, specify local\ndnl libraries, and specify any additional local cc or ld flags\ndnl\ndnl this should really go away someday\n\ncase \"${host_os}\" in\nsysv4.2*)\tAC_DEFINE(SVR4_2)\n\t\tAC_DEFINE(SVR4) ;;\nsysv4*)\t\tAC_DEFINE(SVR4) ;;\nsysv5*)\t\tAC_DEFINE(SVR5) ;;\nhpux9*)\t\tLOCAL_CFLAGS=\"-DHPUX9 -DHPUX\" ;;\nhpux*)\t\tLOCAL_CFLAGS=-DHPUX ;;\ndgux*)\t\tLOCAL_CFLAGS=-D_DGUX_SOURCE; LOCAL_LIBS=-ldgc ;;\nisc*)\t\tLOCAL_CFLAGS=-Disc386 ;;\nrhapsody*)\tLOCAL_CFLAGS=-DRHAPSODY ;;\ndarwin*)\tLOCAL_CFLAGS=-DMACOSX ;;\nsco3.2v5*)\tLOCAL_CFLAGS=\"-b elf -DWAITPID_BROKEN -DPATH_MAX=1024\" ;;\nsco3.2v4*)\tLOCAL_CFLAGS=\"-DMUST_UNBLOCK_CHLD -DPATH_MAX=1024\" ;;\nsco3.2*)\tLOCAL_CFLAGS=-DMUST_UNBLOCK_CHLD ;;\nsunos4*)\tLOCAL_CFLAGS=-DSunOS4 ;;\nsolaris2.5*)\tLOCAL_CFLAGS=\"-DSunOS5 -DSOLARIS\" ;;\nsolaris2.8*)\tLOCAL_CFLAGS=-DSOLARIS  ;;\nsolaris2.9*)\tLOCAL_CFLAGS=-DSOLARIS  ;;\nsolaris2.10*)\tLOCAL_CFLAGS=-DSOLARIS  ;;\nsolaris2*)\tLOCAL_CFLAGS=-DSOLARIS ;;\nlynxos*)\tLOCAL_CFLAGS=-DRECYCLES_PIDS ;;\nlinux*)\t\tLOCAL_LDFLAGS=-rdynamic\t\t # allow dynamic loading\n\t\tcase \"`uname -r`\" in\n\t\t2.[[456789]]*|[[34]]*)\tAC_DEFINE(PGRP_PIPE) ;;\n\t\tesac ;;\n*qnx6*)\t\tLOCAL_CFLAGS=\"-Dqnx -Dqnx6\" LOCAL_LIBS=\"-lncurses\" ;;\n*qnx*)\t\tLOCAL_CFLAGS=\"-Dqnx -F -3s\" LOCAL_LDFLAGS=\"-3s\" LOCAL_LIBS=\"-lunix -lncurses\" ;;\npowerux*)\tLOCAL_LIBS=\"-lgen\" ;;\ncygwin*)\tLOCAL_CFLAGS=-DRECYCLES_PIDS ;;\nopennt*|interix*) LOCAL_CFLAGS=\"-DNO_MAIN_ENV_ARG -DBROKEN_DIRENT_D_INO -D_POSIX_SOURCE -D_ALL_SOURCE -DRECYCLES_PIDS\" ;;\n*openstep*)\tLOCAL_CFLAGS=\"-D__APPLE_CC__\" ;;\nesac\n\ndnl Stanza for OS/compiler pair-specific flags\ncase \"${host_os}-${CC}\" in\naix4.2*-*gcc*)\tLOCAL_LDFLAGS=\"-Xlinker -bexpall -Xlinker -brtl\" ;;\naix4.2*)\tLOCAL_LDFLAGS=\"-bexpall -brtl\" ;;\nbsdi4*-*gcc*)\tLOCAL_LDFLAGS=\"-rdynamic\" ;;\t# allow dynamic loading, like Linux\nbsdi5*-*gcc*)\tLOCAL_LDFLAGS=\"-rdynamic\" ;;\t# allow dynamic loading, like Linux\nhpux11*-gcc*)\tLOCAL_LDFLAGS=\"-Wl,-E\" ;;\t# allow dynamic loading\nesac\n\ndnl FreeBSD-3.x can have either a.out or ELF\ncase \"${host_os}\" in\nfreebsd[[3-9]]*)\n\t\tif test -x /usr/bin/objformat && test \"`/usr/bin/objformat`\" = \"elf\" ; then\n\t\t\tLOCAL_LDFLAGS=-rdynamic # allow dynamic loading\n\t\tfi ;;\nfreebsdelf*)\tLOCAL_LDFLAGS=-rdynamic ;;\t# allow dynamic loading\ndragonfly*)\tLOCAL_LDFLAGS=-rdynamic ;;\t# allow dynamic loading\nesac\n\ncase \"$host_cpu\" in\n*cray*)\t\tLOCAL_CFLAGS=\"-DCRAY\" ;; # shell var so config.h can use it\nesac\n\ncase \"$host_cpu-$host_os\" in\nibmrt-*bsd4*)\tLOCAL_CFLAGS=\"-ma -U__STDC__\" ;;\nesac\n\ncase \"$host_cpu-$host_vendor-$host_os\" in\nm88k-motorola-sysv3)\tLOCAL_CFLAGS=-DWAITPID_BROKEN ;;\nmips-pyramid-sysv4)\tLOCAL_CFLAGS=-Xa ;;\nesac\n\n#\n# Shared object configuration section.  These values are generated by\n# ${srcdir}/support/shobj-conf\n#\nif test \"$ac_cv_func_dlopen\" = \"yes\" && test -f ${srcdir}/support/shobj-conf\nthen\n\tAC_MSG_CHECKING(shared object configuration for loadable builtins)\n\teval `${CONFIG_SHELL-/bin/sh} ${srcdir}/support/shobj-conf -C \"${CC}\" -c \"${host_cpu}\" -o \"${host_os}\" -v \"${host_vendor}\"`\n\tAC_SUBST(SHOBJ_CC)\n\tAC_SUBST(SHOBJ_CFLAGS)\n\tAC_SUBST(SHOBJ_LD)\n\tAC_SUBST(SHOBJ_LDFLAGS)\n\tAC_SUBST(SHOBJ_XLDFLAGS)\n\tAC_SUBST(SHOBJ_LIBS)\n\tAC_SUBST(SHOBJ_STATUS)\n\tAC_MSG_RESULT($SHOBJ_STATUS)\nfi\n\n# try to create a directory tree if the source is elsewhere\n# this should be packaged into a script accessible via ${srcdir}/support\ncase \"$srcdir\" in\n.)\t;;\n*)\tfor d in doc tests support lib examples; do\t# dirs\n\t\ttest -d $d || mkdir $d\n\tdone\n\tfor ld in readline glob tilde malloc sh termcap; do\t# libdirs\n\t\ttest -d lib/$ld || mkdir lib/$ld\n\tdone\n\ttest -d examples/loadables || mkdir examples/loadables\t# loadable builtins\n\ttest -d examples/loadables/perl || mkdir examples/loadables/perl\n\t;;\nesac\n\nBUILD_DIR=`pwd`\ncase \"$BUILD_DIR\" in\n*\\ *)\tBUILD_DIR=`echo \"$BUILD_DIR\" | sed 's: :\\\\\\\\ :g'` ;;\n*)\t;;\nesac\n\nif test -z \"$localedir\"; then\n\tlocaledir='${datarootdir}/locale'\nfi\nif test -z \"$datarootdir\"; then\n\tdatarootdir='${prefix}/share'\nfi\n\nAC_SUBST(PROFILE_FLAGS)\n\nAC_SUBST(incdir)\nAC_SUBST(BUILD_DIR)\n\n# Some versions of autoconf don't substitute these automatically\nAC_SUBST(datarootdir)\nAC_SUBST(localedir)\n\n# directory where we install dynamically loadable builtins\nif test -z \"$loadablesdir\"; then\n\tloadablesdir='${libdir}/bash'\nfi\nAC_SUBST(loadablesdir)\nif test -z \"$headersdir\"; then\n\theadersdir='$(includedir)/$(PACKAGE_NAME)'\nfi\nAC_SUBST(headersdir)\n\nAC_SUBST(YACC)\nAC_SUBST(AR)\nAC_SUBST(ARFLAGS)\n\nAC_SUBST(BASHVERS)\nAC_SUBST(RELSTATUS)\nAC_SUBST(DEBUG)\nAC_SUBST(MALLOC_DEBUG)\n\nAC_SUBST(host_cpu)\nAC_SUBST(host_vendor)\nAC_SUBST(host_os)\n\nAC_SUBST(LOCAL_LIBS)\nAC_SUBST(LOCAL_CFLAGS)\nAC_SUBST(LOCAL_LDFLAGS)\nAC_SUBST(LOCAL_DEFS)\n\n#AC_SUBST(ALLOCA_SOURCE)\n#AC_SUBST(ALLOCA_OBJECT)\n\nAC_OUTPUT([Makefile builtins/Makefile lib/readline/Makefile lib/glob/Makefile \\\n\t  lib/intl/Makefile \\\n\t  lib/malloc/Makefile lib/sh/Makefile lib/termcap/Makefile \\\n\t  lib/tilde/Makefile doc/Makefile support/Makefile po/Makefile.in \\\n\t  examples/loadables/Makefile examples/loadables/Makefile.inc \\\n\t  examples/loadables/perl/Makefile \\\n\t  support/bash.pc],\n[\n# Makefile uses this timestamp file to record whether config.h is up to date.\necho timestamp > stamp-h\n])\n",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/cross-build/cygwin32.cache": "# This file is a shell script that caches the results of configure\n# tests run on this system so they can be shared between configure\n# scripts and configure runs, see configure's option --config-cache.\n# It is not useful on other systems.  If it contains results you don't\n# want to keep, you may remove or edit it.\n#\n# config.status only pays attention to the cache file if you give it\n# the --recheck option to rerun configure.\n#\n# `ac_cv_env_foo' variables (set or unset) will be overriden when\n# loading this file, other *unset* `ac_cv_foo' will be assigned the\n# following values.\n\nac_cv_build=${ac_cv_build='i686-pc-cygwin'}\nac_cv_build_alias=${ac_cv_build_alias='i686-pc-cygwin'}\nac_cv_c_bigendian=${ac_cv_c_bigendian='no'}\nac_cv_c_char_unsigned=${ac_cv_c_char_unsigned='no'}\nac_cv_c_compiler_gnu=${ac_cv_c_compiler_gnu='yes'}\nac_cv_c_const=${ac_cv_c_const='yes'}\nac_cv_c_inline=${ac_cv_c_inline='inline'}\nac_cv_c_long_double=${ac_cv_c_long_double='yes'}\nac_cv_c_stringize=${ac_cv_c_stringize='yes'}\nac_cv_decl_sys_siglist=${ac_cv_decl_sys_siglist='no'}\nac_cv_exeext=${ac_cv_exeext='.exe'}\nac_cv_func___setostype=${ac_cv_func___setostype='no'}\nac_cv_func__doprnt=${ac_cv_func__doprnt='no'}\nac_cv_func_alloca_works=${ac_cv_func_alloca_works='yes'}\nac_cv_func_asprintf=${ac_cv_func_asprintf='no'}\nac_cv_func_bcopy=${ac_cv_func_bcopy='yes'}\nac_cv_func_bindtextdomain=${ac_cv_func_bindtextdomain='no'}\nac_cv_func_bzero=${ac_cv_func_bzero='yes'}\nac_cv_func_confstr=${ac_cv_func_confstr='no'}\nac_cv_func_dlclose=${ac_cv_func_dlclose='yes'}\nac_cv_func_dlopen=${ac_cv_func_dlopen='yes'}\nac_cv_func_dlsym=${ac_cv_func_dlsym='yes'}\nac_cv_func_dup2=${ac_cv_func_dup2='yes'}\nac_cv_func_fnmatch=${ac_cv_func_fnmatch='no'}\nac_cv_func_getaddrinfo=${ac_cv_func_getaddrinfo='no'}\nac_cv_func_getcwd=${ac_cv_func_getcwd='yes'}\nac_cv_func_getdtablesize=${ac_cv_func_getdtablesize='yes'}\nac_cv_func_getgroups=${ac_cv_func_getgroups='yes'}\nac_cv_func_gethostbyname=${ac_cv_func_gethostbyname='yes'}\nac_cv_func_gethostname=${ac_cv_func_gethostname='yes'}\nac_cv_func_getpagesize=${ac_cv_func_getpagesize='yes'}\nac_cv_func_getpeername=${ac_cv_func_getpeername='yes'}\nac_cv_func_getpgrp_void=${ac_cv_func_getpgrp_void='yes'}\nac_cv_func_getrlimit=${ac_cv_func_getrlimit='yes'}\nac_cv_func_getrusage=${ac_cv_func_getrusage='yes'}\nac_cv_func_getservbyname=${ac_cv_func_getservbyname='yes'}\nac_cv_func_gettext=${ac_cv_func_gettext='no'}\nac_cv_func_gettimeofday=${ac_cv_func_gettimeofday='yes'}\nac_cv_func_inet_aton=${ac_cv_func_inet_aton='yes'}\nac_cv_func_isascii=${ac_cv_func_isascii='yes'}\nac_cv_func_isblank=${ac_cv_func_isblank='no'}\nac_cv_func_isgraph=${ac_cv_func_isgraph='yes'}\nac_cv_func_isprint=${ac_cv_func_isprint='yes'}\nac_cv_func_isspace=${ac_cv_func_isspace='yes'}\nac_cv_func_isxdigit=${ac_cv_func_isxdigit='yes'}\nac_cv_func_killpg=${ac_cv_func_killpg='yes'}\nac_cv_func_lstat=${ac_cv_func_lstat='yes'}\nac_cv_func_memmove=${ac_cv_func_memmove='yes'}\nac_cv_func_mkfifo=${ac_cv_func_mkfifo='yes'}\nac_cv_func_pathconf=${ac_cv_func_pathconf='yes'}\nac_cv_func_putenv=${ac_cv_func_putenv='yes'}\nac_cv_func_readlink=${ac_cv_func_readlink='yes'}\nac_cv_func_rename=${ac_cv_func_rename='yes'}\nac_cv_func_sbrk=${ac_cv_func_sbrk='yes'}\nac_cv_func_select=${ac_cv_func_select='yes'}\nac_cv_func_setdtablesize=${ac_cv_func_setdtablesize='yes'}\nac_cv_func_setenv=${ac_cv_func_setenv='yes'}\nac_cv_func_setlinebuf=${ac_cv_func_setlinebuf='no'}\nac_cv_func_setlocale=${ac_cv_func_setlocale='yes'}\nac_cv_func_setvbuf=${ac_cv_func_setvbuf='yes'}\nac_cv_func_setvbuf_reversed=${ac_cv_func_setvbuf_reversed='no'}\nac_cv_func_siginterrupt=${ac_cv_func_siginterrupt='no'}\nac_cv_func_snprintf=${ac_cv_func_snprintf='yes'}\nac_cv_func_strcasecmp=${ac_cv_func_strcasecmp='yes'}\nac_cv_func_strchr=${ac_cv_func_strchr='yes'}\nac_cv_func_strcoll_works=${ac_cv_func_strcoll_works='yes'}\nac_cv_func_strerror=${ac_cv_func_strerror='yes'}\nac_cv_func_strpbrk=${ac_cv_func_strpbrk='yes'}\nac_cv_func_strtod=${ac_cv_func_strtod='yes'}\nac_cv_func_strtoimax=${ac_cv_func_strtoimax='no'}\nac_cv_func_strtol=${ac_cv_func_strtol='yes'}\nac_cv_func_strtoll=${ac_cv_func_strtoll='no'}\nac_cv_func_strtoul=${ac_cv_func_strtoul='yes'}\nac_cv_func_strtoull=${ac_cv_func_strtoull='no'}\nac_cv_func_strtoumax=${ac_cv_func_strtoumax='no'}\nac_cv_func_sysconf=${ac_cv_func_sysconf='yes'}\nac_cv_func_tcgetattr=${ac_cv_func_tcgetattr='yes'}\nac_cv_func_tcgetpgrp=${ac_cv_func_tcgetpgrp='yes'}\nac_cv_func_textdomain=${ac_cv_func_textdomain='no'}\nac_cv_func_times=${ac_cv_func_times='yes'}\nac_cv_func_ttyname=${ac_cv_func_ttyname='yes'}\nac_cv_func_tzset=${ac_cv_func_tzset='yes'}\nac_cv_func_ulimit=${ac_cv_func_ulimit='no'}\nac_cv_func_uname=${ac_cv_func_uname='yes'}\nac_cv_func_vasprintf=${ac_cv_func_vasprintf='no'}\nac_cv_func_vprintf=${ac_cv_func_vprintf='yes'}\nac_cv_func_vsnprintf=${ac_cv_func_vsnprintf='yes'}\nac_cv_func_wait3=${ac_cv_func_wait3='yes'}\nac_cv_func_waitpid=${ac_cv_func_waitpid='yes'}\nac_cv_have_decl_confstr=${ac_cv_have_decl_confstr='no'}\nac_cv_have_decl_printf=${ac_cv_have_decl_printf='yes'}\nac_cv_have_decl_sbrk=${ac_cv_have_decl_sbrk='yes'}\nac_cv_have_decl_strsignal=${ac_cv_have_decl_strsignal='yes'}\nac_cv_have_decl_strtold=${ac_cv_have_decl_strtold='no'}\nac_cv_header_arpa_inet_h=${ac_cv_header_arpa_inet_h='yes'}\nac_cv_header_dirent_dirent_h=${ac_cv_header_dirent_dirent_h='yes'}\nac_cv_header_dlfcn_h=${ac_cv_header_dlfcn_h='yes'}\nac_cv_header_grp_h=${ac_cv_header_grp_h='yes'}\nac_cv_header_inttypes_h=${ac_cv_header_inttypes_h='no'}\nac_cv_header_libintl_h=${ac_cv_header_libintl_h='yes'}\nac_cv_header_limits_h=${ac_cv_header_limits_h='yes'}\nac_cv_header_locale_h=${ac_cv_header_locale_h='yes'}\nac_cv_header_memory_h=${ac_cv_header_memory_h='yes'}\nac_cv_header_minix_config_h=${ac_cv_header_minix_config_h='no'}\nac_cv_header_netdb_h=${ac_cv_header_netdb_h='yes'}\nac_cv_header_netinet_in_h=${ac_cv_header_netinet_in_h='yes'}\nac_cv_header_stat_broken=${ac_cv_header_stat_broken='no'}\nac_cv_header_stdarg_h=${ac_cv_header_stdarg_h='yes'}\nac_cv_header_stdc=${ac_cv_header_stdc='yes'}\nac_cv_header_stddef_h=${ac_cv_header_stddef_h='yes'}\nac_cv_header_stdint_h=${ac_cv_header_stdint_h='no'}\nac_cv_header_stdlib_h=${ac_cv_header_stdlib_h='yes'}\nac_cv_header_string_h=${ac_cv_header_string_h='yes'}\nac_cv_header_strings_h=${ac_cv_header_strings_h='yes'}\nac_cv_header_sys_file_h=${ac_cv_header_sys_file_h='yes'}\nac_cv_header_sys_param_h=${ac_cv_header_sys_param_h='yes'}\nac_cv_header_sys_pte_h=${ac_cv_header_sys_pte_h='no'}\nac_cv_header_sys_ptem_h=${ac_cv_header_sys_ptem_h='no'}\nac_cv_header_sys_resource_h=${ac_cv_header_sys_resource_h='yes'}\nac_cv_header_sys_select_h=${ac_cv_header_sys_select_h='yes'}\nac_cv_header_sys_socket_h=${ac_cv_header_sys_socket_h='yes'}\nac_cv_header_sys_stat_h=${ac_cv_header_sys_stat_h='yes'}\nac_cv_header_sys_stream_h=${ac_cv_header_sys_stream_h='no'}\nac_cv_header_sys_time_h=${ac_cv_header_sys_time_h='yes'}\nac_cv_header_sys_times_h=${ac_cv_header_sys_times_h='yes'}\nac_cv_header_sys_types_h=${ac_cv_header_sys_types_h='yes'}\nac_cv_header_sys_wait_h=${ac_cv_header_sys_wait_h='yes'}\nac_cv_header_termcap_h=${ac_cv_header_termcap_h='yes'}\nac_cv_header_termio_h=${ac_cv_header_termio_h='yes'}\nac_cv_header_termios_h=${ac_cv_header_termios_h='yes'}\nac_cv_header_time=${ac_cv_header_time='yes'}\nac_cv_header_unistd_h=${ac_cv_header_unistd_h='yes'}\nac_cv_header_varargs_h=${ac_cv_header_varargs_h='yes'}\nac_cv_host=${ac_cv_host='i686-pc-cygwin'}\nac_cv_host_alias=${ac_cv_host_alias='i686-pc-cygwin'}\nac_cv_lib_dir_opendir=${ac_cv_lib_dir_opendir='no'}\nac_cv_lib_dl_dlopen=${ac_cv_lib_dl_dlopen='no'}\nac_cv_lib_intl_bindtextdomain=${ac_cv_lib_intl_bindtextdomain='yes'}\nac_cv_lib_termcap_tgetent=${ac_cv_lib_termcap_tgetent='yes'}\nac_cv_member_struct_stat_st_blocks=${ac_cv_member_struct_stat_st_blocks='yes'}\nac_cv_member_struct_termio_c_line=${ac_cv_member_struct_termio_c_line='yes'}\nac_cv_member_struct_termios_c_line=${ac_cv_member_struct_termios_c_line='yes'}\nac_cv_objext=${ac_cv_objext='o'}\nac_cv_path_install=${ac_cv_path_install='/usr/bin/install -c'}\nac_cv_prog_AR=${ac_cv_prog_AR='ar'}\nac_cv_prog_CPP=${ac_cv_prog_CPP='gcc -E'}\nac_cv_prog_YACC=${ac_cv_prog_YACC='bison -y'}\nac_cv_prog_ac_ct_CC=${ac_cv_prog_ac_ct_CC='gcc'}\nac_cv_prog_ac_ct_RANLIB=${ac_cv_prog_ac_ct_RANLIB='ranlib'}\nac_cv_prog_cc_g=${ac_cv_prog_cc_g='yes'}\nac_cv_prog_cc_stdc=${ac_cv_prog_cc_stdc=''}\nac_cv_prog_gcc_traditional=${ac_cv_prog_gcc_traditional='no'}\nac_cv_prog_make_make_set=${ac_cv_prog_make_make_set='yes'}\nac_cv_sizeof_char=${ac_cv_sizeof_char='1'}\nac_cv_sizeof_char_p=${ac_cv_sizeof_char_p='4'}\nac_cv_sizeof_double=${ac_cv_sizeof_double='8'}\nac_cv_sizeof_int=${ac_cv_sizeof_int='4'}\nac_cv_sizeof_long=${ac_cv_sizeof_long='4'}\nac_cv_sizeof_long_long=${ac_cv_sizeof_long_long='8'}\nac_cv_sizeof_short=${ac_cv_sizeof_short='2'}\nac_cv_sys_file_offset_bits=${ac_cv_sys_file_offset_bits='no'}\nac_cv_sys_interpreter=${ac_cv_sys_interpreter='yes'}\nac_cv_sys_large_files=${ac_cv_sys_large_files='no'}\nac_cv_sys_largefile_CC=${ac_cv_sys_largefile_CC='no'}\nac_cv_sys_posix_termios=${ac_cv_sys_posix_termios='yes'}\nac_cv_sys_tiocgwinsz_in_termios_h=${ac_cv_sys_tiocgwinsz_in_termios_h='yes'}\nac_cv_type_bits16_t=${ac_cv_type_bits16_t='no'}\nac_cv_type_bits32_t=${ac_cv_type_bits32_t='no'}\nac_cv_type_bits64_t=${ac_cv_type_bits64_t='no'}\nac_cv_type_char=${ac_cv_type_char='yes'}\nac_cv_type_char_p=${ac_cv_type_char_p='yes'}\nac_cv_type_double=${ac_cv_type_double='yes'}\nac_cv_type_getgroups=${ac_cv_type_getgroups='gid_t'}\nac_cv_type_int=${ac_cv_type_int='yes'}\nac_cv_type_long=${ac_cv_type_long='yes'}\nac_cv_type_long_long=${ac_cv_type_long_long='yes'}\nac_cv_type_mode_t=${ac_cv_type_mode_t='yes'}\nac_cv_type_off_t=${ac_cv_type_off_t='yes'}\nac_cv_type_pid_t=${ac_cv_type_pid_t='yes'}\nac_cv_type_ptrdiff_t=${ac_cv_type_ptrdiff_t='yes'}\nac_cv_type_short=${ac_cv_type_short='yes'}\nac_cv_type_signal=${ac_cv_type_signal='void'}\nac_cv_type_size_t=${ac_cv_type_size_t='yes'}\nac_cv_type_ssize_t=${ac_cv_type_ssize_t='yes'}\nac_cv_type_time_t=${ac_cv_type_time_t='yes'}\nac_cv_type_u_bits16_t=${ac_cv_type_u_bits16_t='no'}\nac_cv_type_u_bits32_t=${ac_cv_type_u_bits32_t='no'}\nac_cv_type_u_int=${ac_cv_type_u_int='yes'}\nac_cv_type_u_long=${ac_cv_type_u_long='yes'}\nac_cv_type_uid_t=${ac_cv_type_uid_t='yes'}\nac_cv_working_alloca_h=${ac_cv_working_alloca_h='no'}\n\nbash_cv_decl_strtoimax=${bash_cv_decl_strtoimax='no'}\nbash_cv_decl_strtol=${bash_cv_decl_strtol='yes'}\nbash_cv_decl_strtoll=${bash_cv_decl_strtoll='no'}\nbash_cv_decl_strtoul=${bash_cv_decl_strtoul='yes'}\nbash_cv_decl_strtoull=${bash_cv_decl_strtoull='no'}\nbash_cv_decl_strtoumax=${bash_cv_decl_strtoumax='no'}\nbash_cv_decl_under_sys_siglist=${bash_cv_decl_under_sys_siglist='no'}\nbash_cv_dev_fd=${bash_cv_dev_fd='absent'}\nbash_cv_dev_stdin=${bash_cv_dev_stdin='absent'}\nbash_cv_dirent_has_d_fileno=${bash_cv_dirent_has_d_fileno='no'}\nbash_cv_dirent_has_dino=${bash_cv_dirent_has_dino='yes'}\nbash_cv_dup2_broken=${bash_cv_dup2_broken='no'}\nbash_cv_fionread_in_ioctl=${bash_cv_fionread_in_ioctl='no'}\nbash_cv_func_sigsetjmp=${bash_cv_func_sigsetjmp='present'}\nbash_cv_func_strcoll_broken=${bash_cv_func_strcoll_broken='no'}\nbash_cv_getenv_redef=${bash_cv_getenv_redef='yes'}\nbash_cv_getpw_declared=${bash_cv_getpw_declared='yes'}\nbash_cv_have_strsignal=${bash_cv_have_strsignal='yes'}\nbash_cv_job_control_missing=${bash_cv_job_control_missing='present'}\nbash_cv_mail_dir=${bash_cv_mail_dir='unknown'}\nbash_cv_must_reinstall_sighandlers=${bash_cv_must_reinstall_sighandlers='no'}\nbash_cv_opendir_not_robust=${bash_cv_opendir_not_robust='no'}\nbash_cv_pgrp_pipe=${bash_cv_pgrp_pipe='no'}\nbash_cv_printf_a_format=${bash_cv_printf_a_format='no'}\nbash_cv_signal_vintage=${bash_cv_signal_vintage='posix'}\nbash_cv_speed_t_in_sys_types=${bash_cv_speed_t_in_sys_types='no'}\nbash_cv_struct_timeval=${bash_cv_struct_timeval='yes'}\nbash_cv_struct_winsize_header=${bash_cv_struct_winsize_header='termios_h'}\nbash_cv_sys_errlist=${bash_cv_sys_errlist='no'}\nbash_cv_sys_named_pipes=${bash_cv_sys_named_pipes='present'}\nbash_cv_sys_siglist=${bash_cv_sys_siglist='no'}\nbash_cv_termcap_lib=${bash_cv_termcap_lib='libtermcap'}\nbash_cv_tiocstat_in_ioctl=${bash_cv_tiocstat_in_ioctl='no'}\nbash_cv_type_clock_t=${bash_cv_type_clock_t='yes'}\nbash_cv_type_intmax_t=${bash_cv_type_intmax_t='no'}\nbash_cv_type_long_long=${bash_cv_type_long_long='long long'}\nbash_cv_type_quad_t=${bash_cv_type_quad_t='no'}\nbash_cv_type_rlimit=${bash_cv_type_rlimit='rlim_t'}\nbash_cv_type_sigset_t=${bash_cv_type_sigset_t='yes'}\nbash_cv_type_socklen_t=${bash_cv_type_socklen_t='no'}\nbash_cv_type_uintmax_t=${bash_cv_type_uintmax_t='no'}\nbash_cv_type_unsigned_long_long=${bash_cv_type_unsigned_long_long='unsigned long long'}\nbash_cv_ulimit_maxfds=${bash_cv_ulimit_maxfds='no'}\nbash_cv_under_sys_siglist=${bash_cv_under_sys_siglist='no'}\nbash_cv_unusable_rtsigs=${bash_cv_unusable_rtsigs='no'}\nbash_cv_void_sighandler=${bash_cv_void_sighandler='yes'}\n",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/cross-build/opennt.cache": "# This file is a shell script that caches the results of configure\n# tests run on this system so they can be shared between configure\n# scripts and configure runs.  It is not useful on other systems.\n# If it contains results you don't want to keep, you may remove or edit it.\n#\n# By default, configure uses ./config.cache as the cache file,\n# creating it if it does not exist already.  You can give configure\n# the --cache-file=FILE option to use a different cache file; that is\n# what configure does when it calls configure scripts in\n# subdirectories, so they share the cache.\n# Giving --cache-file=/dev/null disables caching, for debugging configure.\n# config.status only pays attention to the cache file if you give it the\n# --recheck option to rerun configure.\n#\nac_cv_c_bigendian=${ac_cv_c_bigendian=no}\nac_cv_decl_sys_siglist=${ac_cv_decl_sys_siglist=no}\nac_cv_func___setostype=${ac_cv_func___setostype=no}\nac_cv_func_alloca_works=${ac_cv_func_alloca_works=yes}\nac_cv_func_bcopy=${ac_cv_func_bcopy=yes}\nac_cv_func_bindtextdomain=${ac_cv_func_bindtextdomain=no}\nac_cv_func_bzero=${ac_cv_func_bzero=yes}\nac_cv_func_confstr=${ac_cv_func_confstr=yes}\nac_cv_func_dlclose=${ac_cv_func_dlclose=no}\nac_cv_func_dlopen=${ac_cv_func_dlopen=no}\nac_cv_func_dlsym=${ac_cv_func_dlsym=no}\nac_cv_func_dup2=${ac_cv_func_dup2=yes}\nac_cv_func_getcwd=${ac_cv_func_getcwd=yes}\nac_cv_func_getdtablesize=${ac_cv_func_getdtablesize=no}\nac_cv_func_getgroups=${ac_cv_func_getgroups=yes}\nac_cv_func_gethostname=${ac_cv_func_gethostname=yes}\nac_cv_func_getpagesize=${ac_cv_func_getpagesize=yes}\nac_cv_func_getpeername=${ac_cv_func_getpeername=yes}\nac_cv_func_getpgrp_void=${ac_cv_func_getpgrp_void=yes}\nac_cv_func_getrlimit=${ac_cv_func_getrlimit=no}\nac_cv_func_getrusage=${ac_cv_func_getrusage=no}\nac_cv_func_gettext=${ac_cv_func_gettext=no}\nac_cv_func_gettimeofday=${ac_cv_func_gettimeofday=yes}\nac_cv_func_killpg=${ac_cv_func_killpg=yes}\nac_cv_func_lstat=${ac_cv_func_lstat=no}\nac_cv_func_memmove=${ac_cv_func_memmove=yes}\nac_cv_func_mkfifo=${ac_cv_func_mkfifo=yes}\nac_cv_func_putenv=${ac_cv_func_putenv=yes}\nac_cv_func_rename=${ac_cv_func_rename=yes}\nac_cv_func_sbrk=${ac_cv_func_sbrk=no}\nac_cv_func_select=${ac_cv_func_select=yes}\nac_cv_func_setdtablesize=${ac_cv_func_setdtablesize=no}\nac_cv_func_setenv=${ac_cv_func_setenv=yes}\nac_cv_func_setlinebuf=${ac_cv_func_setlinebuf=yes}\nac_cv_func_setlocale=${ac_cv_func_setlocale=yes}\nac_cv_func_setvbuf_reversed=${ac_cv_func_setvbuf_reversed=no}\nac_cv_func_siginterrupt=${ac_cv_func_siginterrupt=no}\nac_cv_func_strcasecmp=${ac_cv_func_strcasecmp=yes}\nac_cv_func_strchr=${ac_cv_func_strchr=yes}\nac_cv_func_strcoll_works=${ac_cv_func_strcoll_works=yes}\nac_cv_func_strerror=${ac_cv_func_strerror=yes}\nac_cv_func_strtod=${ac_cv_func_strtod=yes}\nac_cv_func_strtol=${ac_cv_func_strtol=yes}\nac_cv_func_strtoul=${ac_cv_func_strtoul=yes}\nac_cv_func_sysconf=${ac_cv_func_sysconf=yes}\nac_cv_func_tcgetattr=${ac_cv_func_tcgetattr=yes}\nac_cv_func_tcgetpgrp=${ac_cv_func_tcgetpgrp=yes}\nac_cv_func_textdomain=${ac_cv_func_textdomain=no}\nac_cv_func_times=${ac_cv_func_times=yes}\nac_cv_func_tzset=${ac_cv_func_tzset=yes}\nac_cv_func_ulimit=${ac_cv_func_ulimit=no}\nac_cv_func_uname=${ac_cv_func_uname=yes}\nac_cv_func_vprintf=${ac_cv_func_vprintf=yes}\nac_cv_func_wait3=${ac_cv_func_wait3=no}\nac_cv_func_wait3_rusage=${ac_cv_func_wait3_rusage=no}\nac_cv_func_waitpid=${ac_cv_func_waitpid=yes}\nac_cv_header_alloca_h=${ac_cv_header_alloca_h=no}\nac_cv_header_dirent_dirent_h=${ac_cv_header_dirent_dirent_h=yes}\nac_cv_header_dlfcn_h=${ac_cv_header_dlfcn_h=no}\nac_cv_header_libintl_h=${ac_cv_header_libintl_h=no}\nac_cv_header_limits_h=${ac_cv_header_limits_h=yes}\nac_cv_header_locale_h=${ac_cv_header_locale_h=yes}\nac_cv_header_memory_h=${ac_cv_header_memory_h=yes}\nac_cv_header_minix_config_h=${ac_cv_header_minix_config_h=no}\nac_cv_header_stat_broken=${ac_cv_header_stat_broken=no}\nac_cv_header_stdarg_h=${ac_cv_header_stdarg_h=yes}\nac_cv_header_stdc=${ac_cv_header_stdc=yes}\nac_cv_header_stdlib_h=${ac_cv_header_stdlib_h=yes}\nac_cv_header_string_h=${ac_cv_header_string_h=yes}\nac_cv_header_sys_file_h=${ac_cv_header_sys_file_h=yes}\nac_cv_header_sys_param_h=${ac_cv_header_sys_param_h=yes}\nac_cv_header_sys_pte_h=${ac_cv_header_sys_pte_h=no}\nac_cv_header_sys_ptem_h=${ac_cv_header_sys_ptem_h=no}\nac_cv_header_sys_resource_h=${ac_cv_header_sys_resource_h=no}\nac_cv_header_sys_select_h=${ac_cv_header_sys_select_h=no}\nac_cv_header_sys_socket_h=${ac_cv_header_sys_socket_h=yes}\nac_cv_header_sys_stream_h=${ac_cv_header_sys_stream_h=no}\nac_cv_header_sys_time_h=${ac_cv_header_sys_time_h=yes}\nac_cv_header_sys_times_h=${ac_cv_header_sys_times_h=yes}\nac_cv_header_sys_wait_h=${ac_cv_header_sys_wait_h=yes}\nac_cv_header_termcap_h=${ac_cv_header_termcap_h=no}\nac_cv_header_termio_h=${ac_cv_header_termio_h=no}\nac_cv_header_termios_h=${ac_cv_header_termios_h=yes}\nac_cv_header_time=${ac_cv_header_time=yes}\nac_cv_header_unistd_h=${ac_cv_header_unistd_h=yes}\nac_cv_header_varargs_h=${ac_cv_header_varargs_h=no}\nac_cv_lib_dir_opendir=${ac_cv_lib_dir_opendir=no}\nac_cv_lib_dl_dlopen=${ac_cv_lib_dl_dlopen=no}\nac_cv_lib_intl_bindtextdomain=${ac_cv_lib_intl_bindtextdomain=no}\nac_cv_lib_termcap_tgetent=${ac_cv_lib_termcap_tgetent=yes}\nac_cv_path_install=${ac_cv_path_install='$INTERIX_ROOT/bin/install -c'}\nac_cv_prog_AR=${ac_cv_prog_AR=ar}\nac_cv_prog_CC=${ac_cv_prog_CC=gcc}\nac_cv_prog_CPP=${ac_cv_prog_CPP='cc -E'}\nac_cv_prog_RANLIB=${ac_cv_prog_RANLIB=:}\nac_cv_prog_cc_cross=${ac_cv_prog_cc_cross=no}\nac_cv_prog_cc_g=${ac_cv_prog_cc_g=yes}\nac_cv_prog_cc_works=${ac_cv_prog_cc_works=yes}\nac_cv_prog_gcc=${ac_cv_prog_gcc=yes}\nac_cv_prog_gcc_traditional=${ac_cv_prog_gcc_traditional=no}\nac_cv_prog_make_make_set=${ac_cv_prog_make_make_set=yes}\nac_cv_sizeof_char_p=${ac_cv_sizeof_char_p=4}\nac_cv_sizeof_double=${ac_cv_sizeof_double=8}\nac_cv_sizeof_int=${ac_cv_sizeof_int=4}\nac_cv_sizeof_long=${ac_cv_sizeof_long=4}\nac_cv_sys_interpreter=${ac_cv_sys_interpreter=yes}\nac_cv_sys_restartable_syscalls=${ac_cv_sys_restartable_syscalls=no}\nac_cv_type_getgroups=${ac_cv_type_getgroups=gid_t}\nac_cv_type_mode_t=${ac_cv_type_mode_t=yes}\nac_cv_type_off_t=${ac_cv_type_off_t=yes}\nac_cv_type_pid_t=${ac_cv_type_pid_t=yes}\nac_cv_type_signal=${ac_cv_type_signal=void}\nac_cv_type_size_t=${ac_cv_type_size_t=yes}\nac_cv_type_time_t=${ac_cv_type_time_t=yes}\nac_cv_type_uid_t=${ac_cv_type_uid_t=yes}\nbash_cv_can_redecl_getpw=${bash_cv_can_redecl_getpw=yes}\nbash_cv_decl_under_sys_siglist=${bash_cv_decl_under_sys_siglist=no}\nbash_cv_dev_fd=${bash_cv_dev_fd=absent}\nbash_cv_dirent_has_d_fileno=${bash_cv_dirent_has_d_fileno=no}\nbash_cv_dirent_has_dino=${bash_cv_dirent_has_dino=yes}\nbash_cv_dup2_broken=${bash_cv_dup2_broken=no}\nbash_cv_fionread_in_ioctl=${bash_cv_fionread_in_ioctl=yes}\nbash_cv_func_lstat=${bash_cv_func_lstat=no}\nbash_cv_func_sigsetjmp=${bash_cv_func_sigsetjmp=present}\nbash_cv_func_strcoll_broken=${bash_cv_func_strcoll_broken=no}\nbash_cv_getcwd_calls_popen=${bash_cv_getcwd_calls_popen=no}\nbash_cv_getenv_redef=${bash_cv_getenv_redef=yes}\nbash_cv_have_strsignal=${bash_cv_have_strsignal=yes}\nbash_cv_job_control_missing=${bash_cv_job_control_missing=present}\nbash_cv_mail_dir=${bash_cv_mail_dir=/usr/spool/mail}\nbash_cv_must_reinstall_sighandlers=${bash_cv_must_reinstall_sighandlers=no}\nbash_cv_opendir_not_robust=${bash_cv_opendir_not_robust=no}\nbash_cv_pgrp_pipe=${bash_cv_pgrp_pipe=no}\nbash_cv_printf_declared=${bash_cv_printf_declared=yes}\nbash_cv_sbrk_declared=${bash_cv_sbrk_declared=no}\nbash_cv_signal_vintage=${bash_cv_signal_vintage=posix}\nbash_cv_speed_t_in_sys_types=${bash_cv_speed_t_in_sys_types=no}\nbash_cv_struct_timeval=${bash_cv_struct_timeval=yes}\nbash_cv_struct_winsize_header=${bash_cv_struct_winsize_header=ioctl_h}\nbash_cv_struct_winsize_in_ioctl=${bash_cv_struct_winsize_in_ioctl=yes}\nbash_cv_sys_errlist=${bash_cv_sys_errlist=yes}\nbash_cv_sys_named_pipes=${bash_cv_sys_named_pipes=present}\nbash_cv_sys_siglist=${bash_cv_sys_siglist=yes}\nbash_cv_termcap_lib=${bash_cv_termcap_lib=libtermcap}\nbash_cv_termio_ldisc=${bash_cv_termio_ldisc=no}\nbash_cv_termios_ldisc=${bash_cv_termios_ldisc=no}\nbash_cv_tiocgwinsz_in_ioctl=${bash_cv_tiocgwinsz_in_ioctl=yes}\nbash_cv_tiocstat_in_ioctl=${bash_cv_tiocstat_in_ioctl=no}\nbash_cv_type_clock_t=${bash_cv_type_clock_t=yes}\nbash_cv_type_quad_t=${bash_cv_type_quad_t=yes}\nbash_cv_type_rlimit=${bash_cv_type_rlimit=long}\nbash_cv_type_sigset_t=${bash_cv_type_sigset_t=yes}\nbash_cv_ulimit_maxfds=${bash_cv_ulimit_maxfds=no}\nbash_cv_under_sys_siglist=${bash_cv_under_sys_siglist=no}\nbash_cv_void_sighandler=${bash_cv_void_sighandler=yes}\n",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/CWRU/misc/hpux10-dlfcn.h": "/*\n * HPUX 10.x stubs to implement dl* in terms of shl*\n *\n * Not needed for later versions; HPUX 11.x has dlopen() and friends.\n *\n * configure also needs to be faked out.  You can create a dummy libdl.a\n * with stub entries for dlopen, dlclose, dlsym, and dlerror:\n *\n *\tint dlopen() { return(0);}\n *\tint dlclose() { return(0);}\n *\tint dlsym() { return(0);}\n *\tint dlerror() { return(0);}\n *\n * This has not been tested; I just read the manual page and coded this up.\n *\n * According to the ld manual page, you need to link bash with -dld and add\n * the -E flag to LOCAL_LDFLAGS.\n */\n\n/* Copyright (C) 1998-2009 Free Software Foundation, Inc.\n\n   This file is part of GNU Bash, the Bourne Again SHell.\n\n   Bash is free software: you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   Bash is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with Bash.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n#if !defined (__HPUX10_DLFCN_H__)\n\n#define __HPUX10_DLFCN_H__\n\n#include <dl.h>\n#include <errno.h>\n\n#ifndef errno\nextern int errno;\n#endif\n\n#define RTLD_LAZY BIND_DEFERRED\n#define RTLD_NOW BIND_IMMEDIATE\n#define RTLD_GLOBAL DYNAMIC_PATH\n\nchar *bash_global_sym_addr;\n\n#define dlopen(file,mode) (void *)shl_load((file), (mode), 0L)\n\n#define dlclose(handle) shl_unload((shl_t)(handle))\n\n#define dlsym(handle,name) (bash_global_sym_addr=0,shl_findsym((shl_t *)&(handle),name,TYPE_UNDEFINED,&bash_global_sym_addr), (void *)bash_global_sym_addr)\n\n#define dlerror() strerror(errno)\n\n#endif /*  __HPUX10_DLFCN_H__ */\n",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/builtins/enable.def": "This file is enable.def, from which is created enable.c.\nIt implements the builtin \"enable\" in Bash.\n\nCopyright (C) 1987-2016 Free Software Foundation, Inc.\n\nThis file is part of GNU Bash, the Bourne Again SHell.\n\nBash is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nBash is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Bash.  If not, see <http://www.gnu.org/licenses/>.\n\n$PRODUCES enable.c\n\n$BUILTIN enable\n$FUNCTION enable_builtin\n$SHORT_DOC enable [-a] [-dnps] [-f filename] [name ...]\nEnable and disable shell builtins.\n\nEnables and disables builtin shell commands.  Disabling allows you to\nexecute a disk command which has the same name as a shell builtin\nwithout using a full pathname.\n\nOptions:\n  -a\tprint a list of builtins showing whether or not each is enabled\n  -n\tdisable each NAME or display a list of disabled builtins\n  -p\tprint the list of builtins in a reusable format\n  -s\tprint only the names of Posix `special' builtins\n\nOptions controlling dynamic loading:\n  -f\tLoad builtin NAME from shared object FILENAME\n  -d\tRemove a builtin loaded with -f\n\nWithout options, each NAME is enabled.\n\nTo use the `test' found in $PATH instead of the shell builtin\nversion, type `enable -n test'.\n\nExit Status:\nReturns success unless NAME is not a shell builtin or an error occurs.\n$END\n\n#include <config.h>\n\n#if defined (HAVE_UNISTD_H)\n#  ifdef _MINIX\n#    include <sys/types.h>\n#  endif\n#  include <unistd.h>\n#endif\n\n#include <stdio.h>\n#include \"../bashansi.h\"\n#include \"../bashintl.h\"\n\n#include \"../shell.h\"\n#include \"../builtins.h\"\n#include \"../flags.h\"\n#include \"common.h\"\n#include \"bashgetopt.h\"\n#include \"findcmd.h\"\n\n#if defined (PROGRAMMABLE_COMPLETION)\n#  include \"../pcomplete.h\"\n#endif\n\n#define ENABLED  1\n#define DISABLED 2\n#define SPECIAL  4\n\n#define AFLAG\t0x01\n#define DFLAG\t0x02\n#define FFLAG\t0x04\n#define NFLAG\t0x08\n#define PFLAG\t0x10\n#define SFLAG\t0x20\n\n#if defined (HAVE_DLOPEN) && defined (HAVE_DLSYM)\nstatic int dyn_load_builtin __P((WORD_LIST *, int, char *));\n#endif\n\n#if defined (HAVE_DLCLOSE)\nstatic int dyn_unload_builtin __P((char *));\nstatic void delete_builtin __P((struct builtin *));\nstatic int local_dlclose __P((void *));\n#endif\n\n#define STRUCT_SUFFIX\t\"_struct\"\n/* for now */\n#define LOAD_SUFFIX\t\"_builtin_load\"\n#define UNLOAD_SUFFIX\t\"_builtin_unload\"\n\nstatic void list_some_builtins __P((int));\nstatic int enable_shell_command __P((char *, int));\n\n/* Enable/disable shell commands present in LIST.  If list is not specified,\n   then print out a list of shell commands showing which are enabled and\n   which are disabled. */\nint\nenable_builtin (list)\n     WORD_LIST *list;\n{\n  int result, flags;\n  int opt, filter;\n#if defined (HAVE_DLOPEN) && defined (HAVE_DLSYM)\n  char *filename;\n#endif\n\n  result = EXECUTION_SUCCESS;\n  flags = 0;\n\n  reset_internal_getopt ();\n  while ((opt = internal_getopt (list, \"adnpsf:\")) != -1)\n    {\n      switch (opt)\n\t{\n\tcase 'a':\n\t  flags |= AFLAG;\n\t  break;\n\tcase 'n':\n\t  flags |= NFLAG;\n\t  break;\n\tcase 'p':\n\t  flags |= PFLAG;\n\t  break;\n\tcase 's':\n\t  flags |= SFLAG;\n\t  break;\n\tcase 'f':\n#if defined (HAVE_DLOPEN) && defined (HAVE_DLSYM)\n\t  flags |= FFLAG;\n\t  filename = list_optarg;\n\t  break;\n#else\n\t  builtin_error (_(\"dynamic loading not available\"));\n\t  return (EX_USAGE);\n#endif\n#if defined (HAVE_DLCLOSE)\n\tcase 'd':\n\t  flags |= DFLAG;\n\t  break;\n#else\n\t  builtin_error (_(\"dynamic loading not available\"));\n\t  return (EX_USAGE);\n#endif /* HAVE_DLCLOSE */\n\tCASE_HELPOPT;\n\tdefault:\n\t  builtin_usage ();\n\t  return (EX_USAGE);\n\t}\n    }\n\n  list = loptend;\n\n#if defined (RESTRICTED_SHELL)\n  /* Restricted shells cannot load new builtins. */\n  if (restricted && (flags & (FFLAG|DFLAG)))\n    {\n      sh_restricted ((char *)NULL);\n      return (EXECUTION_FAILURE);\n    }\n#endif\n\n  if (list == 0 || (flags & PFLAG))\n    {\n      filter = (flags & AFLAG) ? (ENABLED | DISABLED)\n\t\t\t       : (flags & NFLAG) ? DISABLED : ENABLED;\n\n      if (flags & SFLAG)\n\tfilter |= SPECIAL;\n\n      list_some_builtins (filter);\n    }\n#if defined (HAVE_DLOPEN) && defined (HAVE_DLSYM)\n  else if (flags & FFLAG)\n    {\n      filter = (flags & NFLAG) ? DISABLED : ENABLED;\n      if (flags & SFLAG)\n\tfilter |= SPECIAL;\n\n      result = dyn_load_builtin (list, filter, filename);\n#if defined (PROGRAMMABLE_COMPLETION)\n      set_itemlist_dirty (&it_builtins);\n#endif\n    }\n#endif\n#if defined (HAVE_DLCLOSE)\n  else if (flags & DFLAG)\n    {\n      while (list)\n\t{\n\t  opt = dyn_unload_builtin (list->word->word);\n\t  if (opt == EXECUTION_FAILURE)\n\t    result = EXECUTION_FAILURE;\n\t  list = list->next;\n\t}\n#if defined (PROGRAMMABLE_COMPLETION)\n      set_itemlist_dirty (&it_builtins);\n#endif\n    }\n#endif\n  else\n    {\n      while (list)\n\t{\n\t  opt = enable_shell_command (list->word->word, flags & NFLAG);\n\n\t  if (opt == EXECUTION_FAILURE)\n\t    {\n\t      sh_notbuiltin (list->word->word);\n\t      result = EXECUTION_FAILURE;\n\t    }\n\t  list = list->next;\n\t}\n    }\n  return (result);\n}\n\n/* List some builtins.\n   FILTER is a mask with two slots: ENABLED and DISABLED. */\nstatic void\nlist_some_builtins (filter)\n     int filter;\n{\n  register int i;\n\n  for (i = 0; i < num_shell_builtins; i++)\n    {\n      if (shell_builtins[i].function == 0 || (shell_builtins[i].flags & BUILTIN_DELETED))\n\tcontinue;\n\n      if ((filter & SPECIAL) &&\n\t  (shell_builtins[i].flags & SPECIAL_BUILTIN) == 0)\n\tcontinue;\n\n      if ((filter & ENABLED) && (shell_builtins[i].flags & BUILTIN_ENABLED))\n\tprintf (\"enable %s\\n\", shell_builtins[i].name);\n      else if ((filter & DISABLED) &&\n\t       ((shell_builtins[i].flags & BUILTIN_ENABLED) == 0))\n\tprintf (\"enable -n %s\\n\", shell_builtins[i].name);\n    }\n}\n\n/* Enable the shell command NAME.  If DISABLE_P is non-zero, then\n   disable NAME instead. */\nstatic int\nenable_shell_command (name, disable_p)\n     char *name;\n     int disable_p;\n{\n  struct builtin *b;\n\n  b = builtin_address_internal (name, 1);\n  if (b == 0)\n    return (EXECUTION_FAILURE);\n\n  if (disable_p)\n    b->flags &= ~BUILTIN_ENABLED;\n#if defined (RESTRICTED_SHELL)\n  else if (restricted && ((b->flags & BUILTIN_ENABLED) == 0))\n    {\n      sh_restricted ((char *)NULL);\n      return (EXECUTION_FAILURE);\n    }\n#endif\n  else\n    b->flags |= BUILTIN_ENABLED;\n\n#if defined (PROGRAMMABLE_COMPLETION)\n  set_itemlist_dirty (&it_enabled);\n  set_itemlist_dirty (&it_disabled);\n#endif\n\n  return (EXECUTION_SUCCESS);\n}\n\n#if defined (HAVE_DLOPEN) && defined (HAVE_DLSYM)\n\n#if defined (HAVE_DLFCN_H)\n#  include <dlfcn.h>\n#endif\n\nstatic int\ndyn_load_builtin (list, flags, filename)\n     WORD_LIST *list;\n     int flags;\n     char *filename;\n{\n  WORD_LIST *l;\n  void *handle;\n  \n  int total, size, new, replaced, r;\n  char *struct_name, *name, *funcname;\n  sh_load_func_t *loadfunc;\n  struct builtin **new_builtins, *b, *new_shell_builtins, *old_builtin;\n  char *loadables_path, *load_path;\n\n  if (list == 0)\n    return (EXECUTION_FAILURE);\n\n#ifndef RTLD_LAZY\n#define RTLD_LAZY 1\n#endif\n\n  handle = 0;\n  if (absolute_program (filename) == 0)\n    {\n      loadables_path = get_string_value (\"BASH_LOADABLES_PATH\");\n      if (loadables_path)\n\t{\n\t  load_path = find_in_path (filename, loadables_path, FS_NODIRS|FS_EXEC_PREFERRED);\n\t  if (load_path)\n\t    {\n#if defined (_AIX)\n\t      handle = dlopen (load_path, RTLD_NOW|RTLD_GLOBAL);\n#else\n\t      handle = dlopen (load_path, RTLD_LAZY);\n#endif /* !_AIX */\n\t      free (load_path);\n\t    }\n\t}\n    }\n\n  /* Fall back to current directory for now */\n  if (handle == 0)\n#if defined (_AIX)\n    handle = dlopen (filename, RTLD_NOW|RTLD_GLOBAL);\n#else\n    handle = dlopen (filename, RTLD_LAZY);\n#endif /* !_AIX */\n\n  if (handle == 0)\n    {\n      name = printable_filename (filename, 0);\n      builtin_error (_(\"cannot open shared object %s: %s\"), name, dlerror ());\n      if (name != filename)\n\tfree (name);\n      return (EXECUTION_FAILURE);\n    }\n\n  for (new = 0, l = list; l; l = l->next, new++)\n    ;\n  new_builtins = (struct builtin **)xmalloc (new * sizeof (struct builtin *));\n\n  /* For each new builtin in the shared object, find it and its describing\n     structure.  If this is overwriting an existing builtin, do so, otherwise\n     save the loaded struct for creating the new list of builtins. */\n  for (replaced = new = 0; list; list = list->next)\n    {\n      name = list->word->word;\n\n      size = strlen (name);\n      struct_name = (char *)xmalloc (size + 8);\n      strcpy (struct_name, name);\n      strcpy (struct_name + size, STRUCT_SUFFIX);\n\n      b = (struct builtin *)dlsym (handle, struct_name);\n      if (b == 0)\n\t{\n\t  name = printable_filename (filename, 0);\n\t  builtin_error (_(\"cannot find %s in shared object %s: %s\"),\n\t\t\t  struct_name, name, dlerror ());\n\t  if (name != filename)\n\t    free (name);\n\t  free (struct_name);\n\t  continue;\n\t}\n\n      funcname = xrealloc (struct_name, size + sizeof (LOAD_SUFFIX) + 1);\n      strcpy (funcname, name);\n      strcpy (funcname + size, LOAD_SUFFIX);\n\n      loadfunc = (sh_load_func_t *)dlsym (handle, funcname);\n      if (loadfunc)\n\t{\n\t  r = (*loadfunc) (name);\n\t  if (r == 0)\n\t    {\n\t      builtin_error (_(\"load function for %s returns failure (%d): not loaded\"), name, r);\n\t      free (funcname);\n\t      continue;\n\t    }\n\t}\n      free (funcname);\n\n      b->flags &= ~STATIC_BUILTIN;\n      if (flags & SPECIAL)\n\tb->flags |= SPECIAL_BUILTIN;\n      b->handle = handle;\n\n      if (old_builtin = builtin_address_internal (name, 1))\n\t{\n\t  replaced++;\n\t  FASTCOPY ((char *)b, (char *)old_builtin, sizeof (struct builtin));\n\t}\n      else\n\t  new_builtins[new++] = b;\n    }\n\n  if (replaced == 0 && new == 0)\n    {\n      free (new_builtins);\n      dlclose (handle);\n      return (EXECUTION_FAILURE);\n    }\n\n  if (new)\n    {\n      total = num_shell_builtins + new;\n      size = (total + 1) * sizeof (struct builtin);\n\n      new_shell_builtins = (struct builtin *)xmalloc (size);\n      FASTCOPY ((char *)shell_builtins, (char *)new_shell_builtins,\n\t\tnum_shell_builtins * sizeof (struct builtin));\n      for (replaced = 0; replaced < new; replaced++)\n\tFASTCOPY ((char *)new_builtins[replaced],\n\t\t  (char *)&new_shell_builtins[num_shell_builtins + replaced],\n\t\t  sizeof (struct builtin));\n\n      new_shell_builtins[total].name = (char *)0;\n      new_shell_builtins[total].function = (sh_builtin_func_t *)0;\n      new_shell_builtins[total].flags = 0;\n\n      if (shell_builtins != static_shell_builtins)\n\tfree (shell_builtins);\n\n      shell_builtins = new_shell_builtins;\n      num_shell_builtins = total;\n      initialize_shell_builtins ();\n    }\n\n  free (new_builtins);\n  return (EXECUTION_SUCCESS);\n}\n#endif\n\n#if defined (HAVE_DLCLOSE)\nstatic void\ndelete_builtin (b)\n     struct builtin *b;\n{\n  int ind, size;\n  struct builtin *new_shell_builtins;\n\n  /* XXX - funky pointer arithmetic - XXX */\n#ifdef __STDC__\n  ind = b - shell_builtins;\n#else\n  ind = ((int)b - (int)shell_builtins) / sizeof (struct builtin);\n#endif\n  size = num_shell_builtins * sizeof (struct builtin);\n  new_shell_builtins = (struct builtin *)xmalloc (size);\n\n  /* Copy shell_builtins[0]...shell_builtins[ind - 1] to new_shell_builtins */\n  if (ind)\n    FASTCOPY ((char *)shell_builtins, (char *)new_shell_builtins,\n\t      ind * sizeof (struct builtin));\n  /* Copy shell_builtins[ind+1]...shell_builtins[num_shell_builtins to\n     new_shell_builtins, starting at ind. */\n  FASTCOPY ((char *)(&shell_builtins[ind+1]),\n  \t    (char *)(&new_shell_builtins[ind]),\n  \t    (num_shell_builtins - ind) * sizeof (struct builtin));\n\n  if (shell_builtins != static_shell_builtins)\n    free (shell_builtins);\n\n  /* The result is still sorted. */\n  num_shell_builtins--;\n  shell_builtins = new_shell_builtins;\n}\n\n/* Tenon's MachTen has a dlclose that doesn't return a value, so we\n   finesse it with a local wrapper. */\nstatic int\nlocal_dlclose (handle)\n     void *handle;\n{\n#if !defined (__MACHTEN__)\n  return (dlclose (handle));\n#else /* __MACHTEN__ */\n  dlclose (handle);\n  return ((dlerror () != NULL) ? -1 : 0);    \n#endif /* __MACHTEN__ */\n}\n\nstatic int\ndyn_unload_builtin (name)\n     char *name;\n{\n  struct builtin *b;\n  void *handle;\n  char *funcname;\n  sh_unload_func_t *unloadfunc;\n  int ref, i, size;\n\n  b = builtin_address_internal (name, 1);\n  if (b == 0)\n    {\n      sh_notbuiltin (name);\n      return (EXECUTION_FAILURE);\n    }\n  if (b->flags & STATIC_BUILTIN)\n    {\n      builtin_error (_(\"%s: not dynamically loaded\"), name);\n      return (EXECUTION_FAILURE);\n    }\n\n  handle = (void *)b->handle;\n  for (ref = i = 0; i < num_shell_builtins; i++)\n    {\n      if (shell_builtins[i].handle == b->handle)\n\tref++;\n    }\n\n  /* Call any unload function */\n  size = strlen (name);\n  funcname = xmalloc (size + sizeof (UNLOAD_SUFFIX) + 1);\n  strcpy (funcname, name);\n  strcpy (funcname + size, UNLOAD_SUFFIX);\n\n  unloadfunc = (sh_unload_func_t *)dlsym (handle, funcname);\n  if (unloadfunc)\n    (*unloadfunc) (name);\t/* void function */\n  free (funcname);\n\n  /* Don't remove the shared object unless the reference count of builtins\n     using it drops to zero. */\n  if (ref == 1 && local_dlclose (handle) != 0)\n    {\n      builtin_error (_(\"%s: cannot delete: %s\"), name, dlerror ());\n      return (EXECUTION_FAILURE);\n    }\n\n  /* Now remove this entry from the builtin table and reinitialize. */\n  delete_builtin (b);\n\n  return (EXECUTION_SUCCESS);\n}\n#endif\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/lib/intl/locale.alias",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/tests/nquote4.right",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/tests/array.right",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/lt.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/sr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/fi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/bg.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/ga.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/et.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/ro.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/sv.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/hr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/uk.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/pt_BR.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/sl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/ja.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/fr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/de.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/id.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/af.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/nl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/eo.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/hu.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/sk.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/nb.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/cs.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/en@boldquot.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/pl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/gl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/en@quot.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/vi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/af.po",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/zh_CN.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/el.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/da.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/et.po",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/zh_TW.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/ro.po",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/es.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/it.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/ca.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/ru.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/po/tr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/examples/complete/bashcc-1.0.1.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/doc/rose94.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/doc/bashref.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/doc/aosa-bash.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/doc/aosa-bash-full.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/doc/bash.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/doc/article.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-bash-4.4-aew6fqg45dkwvo5rl4g26wi33zfxaxa3/spack-src/doc/bashref.dvi"
    ],
    "total_files": 1032
}