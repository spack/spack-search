{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/test/shell/bazel/cc_integration_test.sh": "#!/bin/bash -eu\n#\n# Copyright 2016 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# Tests the behavior of C++ rules.\n\n# Load the test setup defined in the parent directory\nCURRENT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\nsource \"${CURRENT_DIR}/../integration_test_setup.sh\" \\\n  || { echo \"integration_test_setup.sh not found!\" >&2; exit 1; }\n\nfunction test_extra_action_for_compile() {\n  mkdir -p ea\n  cat > ea/BUILD <<EOF\naction_listener(\n    name = \"al\",\n    extra_actions = [\":ea\"],\n    mnemonics = [\"CppCompile\"],\n    visibility = [\"//visibility:public\"],\n)\n\nextra_action(\n    name = \"ea\",\n    cmd = \"if ! [[ -r ea/cc.cc ]]; then echo 'source file not in inputs'; exit 1; fi\",\n)\n\ncc_library(\n    name = \"cc\",\n    srcs = [\"cc.cc\"],\n)\nEOF\n\n  echo 'void cc() {}' > ea/cc.cc\n\n  bazel build --experimental_action_listener=//ea:al //ea:cc || fail \"expected success\"\n}\n\nfunction test_cc_library_include_prefix_external_repository() {\n  r=\"$TEST_TMPDIR/r\"\n  mkdir -p \"$TEST_TMPDIR/r/foo/v1\"\n  create_workspace_with_default_repos \"$TEST_TMPDIR/r/WORKSPACE\"\n  echo \"#define FOO 42\" > \"$TEST_TMPDIR/r/foo/v1/foo.h\"\n  cat > \"$TEST_TMPDIR/r/foo/BUILD\" <<EOF\ncc_library(\n  name = \"foo\",\n  hdrs = [\"v1/foo.h\"],\n  include_prefix = \"foolib\",\n  strip_include_prefix = \"v1\",\n  visibility = [\"//visibility:public\"],\n)\nEOF\n  cat >> $(create_workspace_with_default_repos WORKSPACE) <<EOF\nlocal_repository(\n  name = \"foo\",\n  path = \"$TEST_TMPDIR/r\",\n)\nEOF\n\n  cat > BUILD <<EOF\ncc_binary(\n  name = \"ok\",\n  srcs = [\"ok.cc\"],\n  deps = [\"@foo//foo\"],\n)\n\ncc_binary(\n  name = \"bad\",\n  srcs = [\"bad.cc\"],\n  deps = [\"@foo//foo\"],\n)\nEOF\n\n  cat > ok.cc <<EOF\n#include <stdio.h>\n#include \"foolib/foo.h\"\nint main() {\n  printf(\"FOO is %d\\n\", FOO);\n}\nEOF\n\n  cat > bad.cc <<EOF\n#include <stdio.h>\n#include \"foo/v1/foo.h\"\nint main() {\n  printf(\"FOO is %d\\n\", FOO);\n}\nEOF\n\n  bazel build :bad && fail \"Should not have found include at repository-relative path\"\n  bazel build :ok || fail \"Should have found include at synthetic path\"\n}\n\nfunction test_tree_artifact_headers_are_invalidated() {\n  mkdir -p \"ta_headers\"\n  cat > \"ta_headers/BUILD\" <<EOF\nload(\":mygen.bzl\", \"mygen\")\n\nsh_binary(\n  name = \"mygen_sh\",\n  srcs = [\"mygen.sh\"],\n  visibility = [\"//visibility:public\"],\n)\n\nmygen(\n    name=\"mylib_generated\",\n    srcs=[\":mydef.txt\"],\n)\n\ncc_library(\n    name = \"mylib\",\n    srcs = [\":mylib_generated\"],\n    hdrs = [\":mylib_generated\"],\n)\n\ncc_binary(\n    name = \"myexec\",\n    srcs = [],\n    deps = [\":mylib\"],\n)\nEOF\n  cat > \"ta_headers/mygen.sh\" <<'EOF'\n#!/bin/bash\n\nset -euo pipefail\n\nsrc_files=$1\nhdr_files=$2\n\nfc_name=$(cat ta_headers/mydef.txt)\n\nmkdir -p ${src_files}\nmkdir -p ${hdr_files}\n\ncat > ${src_files}/main.c <<EOT\n#include \"ta_headers/files.h/another.h\"\nint main(void) {\n    return MYFC();\n}\nEOT\n\ncat > ${src_files}/another.c <<EOT\n#include \"ta_headers/files.h/another.h\"\nint ${fc_name}(void) {\n    return 0;\n}\nEOT\n\ncat > ${hdr_files}/another.h <<EOT\n#define MYFC ${fc_name}\nint ${fc_name}(void);\nEOT\nEOF\n  chmod +x ta_headers/mygen.sh\n  cat > \"ta_headers/mygen.bzl\" <<EOF\ndef _mygen_impl(ctx):\n  args = ctx.actions.args()\n  treeC = ctx.actions.declare_directory(\"files.c\")\n  treeH = ctx.actions.declare_directory(\"files.h\")\n  args.add(treeC.path)\n  args.add(treeH.path)\n  ctx.actions.run(\n      inputs = ctx.files.srcs,\n      outputs = [treeC, treeH],\n      arguments = [args],\n      executable = ctx.executable._mygen,\n  )\n  return [DefaultInfo(files=depset([treeC, treeH]))]\n\nmygen = rule(\n  implementation=_mygen_impl,\n  attrs={\n    \"srcs\": attr.label_list(allow_files=True),\n    \"_mygen\": attr.label(\n      cfg=\"host\",\n      executable=True,\n      allow_files=True,\n      default=\":mygen_sh\",\n    ),\n  },\n)\nEOF\n\n  # So we have another.h defining a macro that is used by both main.c and\n  # another.c. :main depends on :another, and gets the header through the\n  # tree artifact. First build is fine.\n  echo \"fc1\" > \"ta_headers/mydef.txt\"\n  bazel build //ta_headers:myexec || fail \\\n    \"First build failed, something is wrong with the test.\"\n\n  # Now we change the content of another.h to define a different macro.\n  # This test verifies that not only another.c is recompiled, but also\n  # main.c. This is a regression test for\n  # https://github.com/bazelbuild/bazel/issues/5785.\n  echo \"fc2\" > \"ta_headers/mydef.txt\"\n  bazel build //ta_headers:myexec || fail \\\n    \"Second build failed, tree artifact was not invalidated.\"\n}\n\n# This test tests that Bazel can produce dynamic libraries that have undefined\n# symbols on Mac and Linux. Not sure it is a sane default to allow undefined\n# symbols, but it's the default we had historically. This test creates\n# an executable (main) that defines bar(), and a shared library (plugin) that\n# calls bar(). When linking the libplugin.so, symbol 'bar' is undefined.\n#    +-----------------------------+     +----------------------------------+\n#    |  main                       |     |  libplugin.so                    |\n#    |                             |     |                                  |\n#    |   main() { return foo(); } +---------> foo() { return bar() - 42; }  |\n#    |                             |     |       +                          |\n#    |                             |     |       |                          |\n#    |   bar() { return 42; } <------------------+                          |\n#    |                             |     |                                  |\n#    +-----------------------------+     +----------------------------------+\nfunction test_undefined_dynamic_lookup() {\n  if is_windows; then\n    # Windows doesn't allow undefined symbols in shared libraries.\n    return 0\n  fi\n  mkdir -p \"dynamic_lookup\"\n  cat > \"dynamic_lookup/BUILD\" <<EOF\ncc_binary(\n  name = \"libplugin.so\",\n  srcs = [\"plugin.cc\"],\n  linkshared = 1,\n)\n\ncc_binary(\n    name = \"main\",\n    srcs = [\"main.cc\", \"libplugin.so\"],\n)\nEOF\n\n  cat > \"dynamic_lookup/plugin.cc\" <<EOF\nint bar();\nint foo() { return bar() - 42; }\nEOF\n\n  cat > \"dynamic_lookup/main.cc\" <<EOF\nint foo();\nint bar() { return 42; }\nint main() { return foo(); }\nEOF\n\n  bazel build //dynamic_lookup:main || fail \"Bazel couldn't build the binary.\"\n  bazel run //dynamic_lookup:main || fail \"Run of the binary failed.\"\n}\n\nfunction test_save_feature_state() {\n  mkdir -p ea\n  cat > ea/BUILD <<EOF\ncc_library(\n    name = \"cc\",\n    srcs = [\"cc.cc\", \"cc1.cc\"],\n    features = [\"test_feature\"],\n)\nEOF\n\n  echo 'void cc() {}' > ea/cc.cc\n  echo 'void cc1() {}' > ea/cc1.cc\n\n  bazel build --experimental_save_feature_state //ea:cc || fail \"expected success\"\n  ls bazel-bin/ea/feature_debug/cc/requested_features.txt || \"requested_features.txt not created\"\n  ls bazel-bin/ea/feature_debug/cc/enabled_features.txt || \"enabled_features.txt not created\"\n  # This assumes \"grep\" is supported in any environment bazel is used.\n  grep \"test_feature\" bazel-bin/ea/feature_debug/cc/requested_features.txt || \"test_feature should have been found in  requested_features.\"\n}\n\n# TODO: test include dirs and defines\nfunction setup_cc_starlark_api_test() {\n  local pkg=\"$1\"\n\n  create_workspace_with_default_repos \"$pkg\"/WORKSPACE\n\n  mkdir \"$pkg\"/include_dir\n  touch \"$pkg\"/include_dir/include.h\n  mkdir \"$pkg\"/system_include_dir\n  touch \"$pkg\"/system_include_dir/system_include.h\n  mkdir \"$pkg\"/quote_include_dir\n  touch \"$pkg\"/quote_include_dir/quote_include.h\n\n\n\n  cat > \"$pkg\"/BUILD << EOF\nload(\"//${pkg}:cc_api_rules.bzl\", \"cc_lib\", \"cc_bin\")\n\ncc_lib(\n    name = \"a\",\n    srcs = [\n        \"a1.cc\",\n        \"a2.cc\",\n    ],\n    private_hdrs = [\n      \"a2.h\",\n      \"include_dir/include.h\",\n      \"system_include_dir/system_include.h\",\n      \"quote_include_dir/quote_include.h\"\n    ],\n    user_compile_flags = [\"-DA_DEFINITION_LOCAL\"],\n    public_hdrs = [\"a.h\"],\n    includes = [\"$pkg/include_dir\"],\n    system_includes = [\"$pkg/system_include_dir\"],\n    quote_includes = [\"$pkg/quote_include_dir\"],\n    defines = [\"A_DEFINITION\"],\n    deps = [\n        \":b\",\n        \":d\",\n    ],\n)\n\ncc_lib(\n    name = \"b\",\n    srcs = [\n        \"b.cc\",\n    ],\n    public_hdrs = [\"b.h\"],\n    deps = [\":c\"],\n)\n\ncc_lib(\n    name = \"c\",\n    srcs = [\n        \"c.cc\",\n    ],\n    public_hdrs = [\"c.h\"],\n)\n\ncc_lib(\n    name = \"d\",\n    srcs = [\"d.cc\"],\n    public_hdrs = [\"d.h\"],\n)\n\ncc_bin(\n    name = \"e\",\n    srcs = [\"e.cc\"],\n    data = [\":f\"],\n    linkstatic = 1,\n    user_link_flags = [\n        \"-ldl\",\n        \"-lm\",\n        \"-Wl,-rpath,bazel-bin/${pkg}\",\n    ],\n    deps = [\n        \":a\",\n    ],\n)\n\ncc_bin(\n    name = \"f\",\n    srcs = [\"f.cc\"],\n    linkshared = 1,\n    deps = [\n        \":a\",\n    ],\n)\nEOF\n\n  cat > $pkg/a1.cc << EOF\n#include <system_include.h>\n#include \"include.h\"\n\n#include \"quote_include.h\"\n#include \"a.h\"\n#include \"a2.h\"\n\n#ifdef A_DEFINITION_LOCAL\n#include \"b.h\"\n#include \"d.h\"\n#endif\n\nusing namespace std;\n\nstring alongernamethanusual() { return \"a1\" + a2() + b() + d(); }\nEOF\n\n  cat > $pkg/a2.cc << EOF\n#include <string>\nusing namespace std;\n\nstring a2() { return \"a2\"; }\nEOF\n\n  cat > $pkg/a.h << EOF\n#ifndef HEADER_A\n#define HEADER_A\n#include <string>\nusing namespace std;\nstring alongernamethanusual();\n#endif\nEOF\n\n  cat > $pkg/a2.h << EOF\n#ifndef HEADER_A2\n#define HEADER_A2\n#include <string>\nusing namespace std;\nstring a2();\n#endif\nEOF\n\n  cat > $pkg/b.cc << EOF\n#include \"b.h\"\n#include <string>\n#include \"c.h\"\nusing namespace std;\n\nstring b() { return \"b\" + c(); }\nEOF\n\n  cat > $pkg/b.h << EOF\n#ifndef HEADER_B\n#define HEADER_B\n#include <string>\nusing namespace std;\nstring b();\n#endif\nEOF\n\n  cat > $pkg/c.cc << EOF\n#include \"c.h\"\n#include <algorithm>\n#include <string>\n\nusing namespace std;\n\nstring c() { return \"c\"; }\nEOF\n\n  cat > $pkg/c.h << EOF\n#ifndef HEADER_C\n#define HEADER_C\n#include <string>\nusing namespace std;\nstring c();\n#endif\nEOF\n\n  cat > $pkg/d.cc << EOF\n#include \"d.h\"\n#include <string>\nusing namespace std;\n\nstring d() { return \"d\"; }\nEOF\n\n  cat > $pkg/d.h << EOF\n#ifndef HEADER_D\n#define HEADER_D\n#include <string>\nusing namespace std;\nstring d();\n#endif\nEOF\n\n  cat > $pkg/e.cc << EOF\n#include <dlfcn.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <iostream>\n\n#ifdef A_DEFINITION\n#include \"a.h\"\n#endif\n\n#ifdef A_DEFINITION_LOCAL\n#include \"thisdoesntexist.h\"\n#endif\n\nusing namespace std;\n\nint main() {\n  void* handle = dlopen(\"libf.so\", RTLD_LAZY);\n\n  typedef string (*f_t)();\n\n  f_t f = (f_t)dlsym(handle, \"f\");\n  cout << alongernamethanusual() + f() << endl;\n  return 0;\n}\n\nEOF\n\n  cat > $pkg/f.cc << EOF\n#include <algorithm>\n#include <string>\n#include \"a.h\"\n\nusing namespace std;\n\nextern \"C\" string f() {\n  string str = alongernamethanusual();\n  reverse(str.begin(), str.end());\n  return str;\n}\nEOF\n\n  cat > $pkg/script.lds << EOF\nVERS_42.0 {\n  local:\n    *;\n};\nEOF\n\n  cp \"$CURRENT_DIR\"/cc_api_rules.bzl \"$pkg\"/cc_api_rules.bzl\n\n}\n\nfunction test_cc_starlark_api_default_values() {\n  local pkg=\"${FUNCNAME[0]}\"\n  mkdir -p \"$pkg\"\n\n  setup_cc_starlark_api_test \"${FUNCNAME[0]}\"\n\n  bazel build --experimental_cc_skylark_api_enabled_packages=, --verbose_failures \\\n    //\"$pkg\":e  &>\"$TEST_log\" || fail \"Build failed\"\n\n  nm -u bazel-bin/\"$pkg\"/e  | grep alongernamethanusual && \\\n    fail \"alongernamethanusual is not defined\"\n\n  bazel-bin/\"$pkg\"/e | grep a1a2bcddcb2a1a || fail \"output is incorrect\"\n}\n\n\nfunction test_cc_starlark_api_link_static_false() {\n  local pkg=\"${FUNCNAME[0]}\"\n  mkdir -p \"$pkg\"\n\n  setup_cc_starlark_api_test \"${FUNCNAME[0]}\"\n\n  cat >> \"$pkg\"/BUILD << EOF\ncc_bin(\n    name = \"g\",\n    srcs = [\"e.cc\"],\n    data = [\":f\"],\n    linkstatic = 0,\n    user_link_flags = [\n        \"-ldl\",\n        \"-lm\",\n        \"-Wl,-rpath,bazel-bin/${pkg}\",\n    ],\n    deps = [\n        \":a\",\n    ],\n)\nEOF\n\n  bazel build --experimental_cc_skylark_api_enabled_packages=, --verbose_failures \\\n    //\"$pkg\":g  &>\"$TEST_log\" || fail \"Build failed\"\n\n  nm -u bazel-bin/\"$pkg\"/g  | grep alongernamethanusual || fail \"alongernamethanusual is defined\"\n\n  bazel-bin/\"$pkg\"/g | grep a1a2bcddcb2a1a || fail \"output is incorrect\"\n}\n\nfunction test_cc_starlark_api_additional_inputs() {\n  # This uses --version-script which isn't available on Mac linker.\n  [ \"$PLATFORM\" != \"darwin\" ] || return 0\n\n  local pkg=\"${FUNCNAME[0]}\"\n  mkdir -p \"$pkg\"\n\n  setup_cc_starlark_api_test \"${FUNCNAME[0]}\"\n\n  cat >> \"$pkg\"/BUILD << EOF\ncc_bin(\n    name = \"g\",\n    srcs = [\"e.cc\"],\n    data = [\":f\"],\n    linkstatic = 1,\n    additional_linker_inputs = [\"script.lds\"],\n    user_link_flags = [\n        \"-ldl\",\n        \"-lm\",\n        \"-Wl,-rpath,bazel-bin/${pkg}\",\n        \"-Wl,--version-script=\\$(location script.lds)\",\n    ],\n    deps = [\n        \":a\",\n    ],\n)\nEOF\n\n  bazel build --experimental_cc_skylark_api_enabled_packages=, --verbose_failures \\\n    //\"$pkg\":g  &>\"$TEST_log\" || fail \"Build failed\"\n\n  nm bazel-bin/\"$pkg\"/g  | grep VERS_42.0 || fail \"VERS_42.0 not in binary\"\n\n  bazel-bin/\"$pkg\"/g | grep a1a2bcddcb2a1a || fail \"output is incorrect\"\n}\n\nfunction test_incompatible_validate_top_level_header_inclusions() {\n  local workspace=\"${FUNCNAME[0]}\"\n  mkdir -p \"${workspace}\"\n\n  create_workspace_with_default_repos \"${workspace}/WORKSPACE\"\n  cat >> \"${workspace}/BUILD\" << EOF\ncc_library(\n    name = \"foo\",\n    srcs = [\"foo.cc\"],\n)\nEOF\n  cat >> \"${workspace}/foo.cc\" << EOF\n#include \"top_level.h\"\n\nint foo() {\n  return bar();\n}\nEOF\ncat >> \"${workspace}/top_level.h\" << EOF\ninline int bar() { return 42; }\nEOF\n\n  cd \"${workspace}\"\n  bazel build --noincompatible_validate_top_level_header_inclusions \\\n  --spawn_strategy=standalone \\\n    //:foo  &>\"$TEST_log\" || fail \"Build failed but should have succeeded\"\n\n  bazel build --incompatible_validate_top_level_header_inclusions \\\n  --spawn_strategy=standalone \\\n    //:foo  &>\"$TEST_log\" && fail \"Build succeeded but should have failed\"\n  expect_log \"this rule is missing dependency declarations for the \"\\\n    \"following files included by 'foo.cc'\"\n}\n\nfunction test_aspect_accessing_args_link_action_with_tree_artifact() {\n  local package=\"${FUNCNAME[0]}\"\n  mkdir -p \"${package}\"\n  cat > \"${package}/makes_tree_artifacts.sh\" <<EOF\n#!/bin/bash\nmy_dir=\\$1\n\necho \"int a() { return 0; }\" > \\$my_dir/a.cc\necho \"int b() { return 0; }\" > \\$my_dir/b.cc\necho \"int c() { return 0; }\" > \\$my_dir/c.cc\nEOF\n  chmod 755 \"${package}/makes_tree_artifacts.sh\"\n\n  cat > \"${package}/write.sh\" <<EOF\n#!/bin/bash\noutput_file=\\$1\nshift;\n\necho \"\\$@\" > \\$output_file\nEOF\n  chmod 755 \"${package}/write.sh\"\n\n  cat > \"${package}/lib.bzl\" <<EOF\ndef _tree_art_impl(ctx):\n    my_dir = ctx.actions.declare_directory('dir.cc')\n    ctx.actions.run(\n        executable = ctx.executable._makes_tree,\n        outputs = [my_dir],\n        arguments = [my_dir.path])\n\n    return [DefaultInfo(files=depset([my_dir]))]\n\ntree_art_rule = rule(implementation = _tree_art_impl,\n    attrs = {\n        \"_makes_tree\" : attr.label(allow_single_file = True,\n            cfg = \"host\",\n            executable = True,\n            default = \"//${package}:makes_tree_artifacts.sh\"),\n        \"_write\" : attr.label(allow_single_file = True,\n            cfg = \"host\",\n            executable = True,\n            default = \"//${package}:write.sh\")})\n\ndef _actions_test_impl(target, ctx):\n    action = target.actions[1]\n    if action.mnemonic != \"CppLink\":\n      fail(\"Expected the second action to be CppLink.\")\n    aspect_out = ctx.actions.declare_file('aspect_out')\n    ctx.actions.run_shell(inputs = action.inputs,\n                          outputs = [aspect_out],\n                          command = \"echo \\$@ > \" + aspect_out.path,\n                          arguments = action.args)\n    return [OutputGroupInfo(out=[aspect_out])]\n\nactions_test_aspect = aspect(implementation = _actions_test_impl)\nEOF\n\n  cat > \"${package}/BUILD\" <<EOF\nload(\":lib.bzl\", \"tree_art_rule\")\n\ntree_art_rule(name = \"tree\")\n\ncc_library(\n  name = \"x\",\n  srcs = [\":tree\"],\n)\nEOF\n\n  bazel build \"${package}:x\" \\\n      --aspects=\"//${package}:lib.bzl%actions_test_aspect\" \\\n      --output_groups=out\n\n  cat \"bazel-bin/${package}/aspect_out\" | grep \"\\(ar\\|libtool\\)\" \\\n      || fail \"args didn't contain the tool path\"\n\n  cat \"bazel-bin/${package}/aspect_out\" | grep \"a.*o .*b.*o .*c.*o\" \\\n      || fail \"args didn't contain tree artifact paths\"\n}\n\nfunction test_directory_arg_compile_action() {\n  local package=\"${FUNCNAME[0]}\"\n  mkdir -p \"${package}\"\n\n  cat > \"${package}/lib.bzl\" <<EOF\ndef _actions_test_impl(target, ctx):\n    action = target.actions[0]\n    if action.mnemonic != \"CppCompile\":\n      fail(\"Expected the first action to be CppCompile.\")\n    aspect_out = ctx.actions.declare_file('aspect_out')\n    ctx.actions.run_shell(inputs = action.inputs,\n                          outputs = [aspect_out],\n                          command = \"echo \\$@ > \" + aspect_out.path,\n                          arguments = action.args)\n    return [OutputGroupInfo(out=[aspect_out])]\n\nactions_test_aspect = aspect(implementation = _actions_test_impl)\nEOF\n\n  touch \"${package}/x.cc\"\n  cat > \"${package}/BUILD\" <<EOF\ncc_library(\n  name = \"x\",\n  srcs = [\"x.cc\"],\n)\nEOF\n\n  bazel build \"${package}:x\" \\\n      --aspects=\"//${package}:lib.bzl%actions_test_aspect\" \\\n      --output_groups=out\n\n  cat \"bazel-bin/${package}/aspect_out\" | \\\n      grep \"\\(gcc\\|clang\\|clanc-cl.exe\\|cl.exe\\)\" \\\n      || fail \"args didn't contain the tool path\"\n\n  cat \"bazel-bin/${package}/aspect_out\" | grep \"a.*o .*b.*o .*c.*o\" \\\n      || fail \"args didn't contain tree artifact paths\"\n}\n\nfunction test_reconstructing_cpp_actions() {\n  if is_darwin; then\n    # Darwin toolchain uses env variables and those are not properly exported\n    # to Starlark.\n    # TODO(#10376): Remove once env vars on C++ actions are exported.\n    return 0\n  fi\n\n  local package=\"${FUNCNAME[0]}\"\n  mkdir -p \"${package}\"\n\n  cat > \"${package}/lib.bzl\" <<EOF\ndef _actions_test_impl(target, ctx):\n    compile_action = None\n    archive_action = None\n    link_action = None\n\n    for action in target.actions:\n      if action.mnemonic == \"CppCompile\":\n        compile_action = action\n      if action.mnemonic == \"CppLink\" and not archive_action:\n        archive_action = action\n      if action.mnemonic == \"CppLink\":\n        link_action = action\n\n    if not compile_action or not archive_action or not link_action:\n      fail(\"Couln't find compile, archive, or link action\")\n\n    cc_info = target[CcInfo]\n    compile_action_outputs = compile_action.outputs.to_list()\n\n    compile_args = ctx.actions.declare_file(\"compile_args\")\n    ctx.actions.run_shell(\n        outputs = [compile_args],\n        command = \"echo \\$@ > \" + compile_args.path,\n        arguments = compile_action.args,\n    )\n\n    inputs = depset(\n        direct = [compile_args],\n        transitive = [\n            compile_action.inputs,\n            # Because C++ compilation actions prune their headers in the\n            # execution phase, and this code runs in analysis phase,\n            # action.inputs is not processed yet. It doesn't contain\n            # headers/module files yet. Let's add all unpruned headers\n            # explicitly.\n            cc_info.compilation_context.headers,\n        ],\n    )\n\n    compile_out = ctx.actions.declare_file(\"compile_out.o\")\n    ctx.actions.run_shell(\n        inputs = inputs,\n        mnemonic = \"RecreatedCppCompile\",\n        outputs = [compile_out],\n        env = compile_action.env,\n        command = \"\\$(cat %s | sed 's|%s|%s|g' | sed 's|%s|%s|g')\" % (\n            compile_args.path,\n            # We need to replace the original output path with something else\n            compile_action_outputs[0].path,\n            compile_out.path,\n            # We need to replace the original .d file output path with something\n            # else\n            compile_action_outputs[0].path.replace(\".o\", \".d\"),\n            compile_out.path + \".d\",\n        ),\n    )\n\n    archive_args = ctx.actions.declare_file(\"archive_args\")\n    ctx.actions.run_shell(\n        outputs = [archive_args],\n        command = \"echo \\$@ > \" + archive_args.path,\n        arguments = archive_action.args,\n    )\n\n    archive_out = ctx.actions.declare_file(\"archive_out.a\")\n    archive_param_file = None\n    for i in archive_action.inputs.to_list():\n        if i.path.endswith(\"params\"):\n            archive_param_file = i\n    ctx.actions.run_shell(\n        inputs = depset(direct = [archive_args], transitive = [archive_action.inputs]),\n        mnemonic = \"RecreatedCppArchive\",\n        outputs = [archive_out],\n        env = archive_action.env,\n        command = \"\\$(cat %s) && cp %s %s\" % (\n            archive_args.path,\n            archive_action.outputs.to_list()[0].path,\n            archive_out.path,\n        ),\n    )\n\n    link_args = ctx.actions.declare_file(\"link_args\")\n    ctx.actions.run_shell(\n        outputs = [link_args],\n        command = \"echo \\$@ > \" + link_args.path,\n        arguments = link_action.args,\n    )\n\n    link_out = ctx.actions.declare_file(\"link_out.so\")\n    ctx.actions.run_shell(\n        inputs = depset(direct = [link_args], transitive = [link_action.inputs]),\n        mnemonic = \"RecreatedCppLink\",\n        outputs = [link_out],\n        env = link_action.env,\n        command = \"\\$(cat %s) && cp %s %s\" % (\n            link_args.path,\n            link_action.outputs.to_list()[0].path,\n            link_out.path,\n        ),\n    )\n\n    return [OutputGroupInfo(out = [\n        compile_args,\n        compile_out,\n        archive_args,\n        archive_out,\n        link_args,\n        link_out,\n    ])]\n\nactions_test_aspect = aspect(implementation = _actions_test_impl)\nEOF\n\n  echo \"inline int x() { return 42; }\" > \"${package}/x.h\"\n  cat > \"${package}/a.cc\" <<EOF\n#include \"${package}/x.h\"\n\nint a() { return x(); }\nEOF\n  cat > \"${package}/BUILD\" <<EOF\ncc_library(\n  name = \"x\",\n  hdrs  = [\"x.h\"],\n)\n\ncc_library(\n  name = \"a\",\n  srcs = [\"a.cc\"],\n  deps = [\":x\"],\n)\nEOF\n\n  # Test that actions are reconstructible under default configuration\n  bazel build \"${package}:a\" \\\n      --aspects=\"//${package}:lib.bzl%actions_test_aspect\" \\\n      --output_groups=out || \\\n      fail \"bazel build should've passed\"\n\n  # Test that compile actions are reconstructible when using param files\n  bazel build \"${package}:a\" \\\n      --features=compiler_param_file \\\n      --aspects=\"//${package}:lib.bzl%actions_test_aspect\" \\\n      --output_groups=out || \\\n      fail \"bazel build should've passed with --features=compiler_param_file\"\n}\n\nfunction test_disable_cc_toolchain_detection() {\n  cat > ok.cc <<EOF\n#include <stdio.h>\nint main() {\n  printf(\"Hello\\n\");\n}\nEOF\n\n  cat > BUILD <<EOF\ncc_binary(\n  name = \"ok\",\n  srcs = [\"ok.cc\"],\n)\nEOF\n\n  # This only shows reliably for query due to ordering issues in how Bazel shows\n  # errors.\n  BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1 bazel query 'deps(//:ok)' &>\"$TEST_log\" || \\\n    fail \"Should pass with fake toolchain\"\n  expect_not_log \"An error occurred during the fetch of repository 'local_config_cc'\"\n  expect_log \"@local_config_cc//:empty\"\n}\n\nfunction setup_workspace_layout_with_external_directory() {\n  # Make the following layout to test builds in //external subpackages:\n  #\n  #\u251c\u2500\u2500 baz\n  #\u2502\u00a0\u00a0 \u251c\u2500\u2500 binary.cc\n  #\u2502\u00a0\u00a0 \u2514\u2500\u2500 BUILD\n  #\u2514\u2500\u2500 external\n  #    \u2514\u2500\u2500 foo\n  #        \u251c\u2500\u2500 BUILD\n  #        \u251c\u2500\u2500 lib.cc\n  #        \u2514\u2500\u2500 lib.h\n  mkdir -p external/foo\n  cat > external/foo/BUILD <<EOF\ncc_library(\n    name = \"lib\",\n    srcs = [\"lib.cc\"],\n    hdrs = [\"lib.h\"],\n    visibility = [\"//baz:__subpackages__\"],\n)\nEOF\n  cat > external/foo/lib.cc <<EOF\n#include \"external/foo/lib.h\"\n#include <iostream>\n\nusing std::cout;\nusing std::endl;\nusing std::string;\n\nHelloLib::HelloLib(const string& greeting) : greeting_(new string(greeting)) {\n}\n\nvoid HelloLib::greet(const string& thing) {\n  cout << *greeting_ << \" \" << thing << endl;\n}\nEOF\n\n  cat > external/foo/lib.h <<EOF\n#include <string>\n#include <memory>\n\nclass HelloLib {\n public:\n  explicit HelloLib(const std::string &greeting);\n  void greet(const std::string &thing);\n\n private:\n  std::unique_ptr<const std::string> greeting_;\n};\nEOF\n\n  mkdir baz\n  cat > baz/BUILD <<EOF\ncc_binary(\n    name = \"binary\",\n    srcs = [\"binary.cc\"],\n    deps = [\"//external/foo:lib\"],\n)\nEOF\n  cat > baz/binary.cc <<EOF\n#include \"external/foo/lib.h\"\n#include <string>\n\nint main(int argc, char** argv) {\n  HelloLib lib(\"Hello\");\n  std::string thing = \"world\";\n  if (argc > 1) {\n    thing = argv[1];\n  }\n  lib.greet(thing);\n  return 0;\n}\nEOF\n\n}\n\nfunction test_execroot_subdir_layout_fails_for_external_subpackages() {\n  setup_workspace_layout_with_external_directory\n\n  bazel build --experimental_sibling_repository_layout=false //baz:binary &> \"$TEST_log\" \\\n    && fail \"build should have failed with sources in the external directory\" || true\n  expect_log \"error:.*external/foo/lib.*\"\n  expect_log \"Target //baz:binary failed to build\"\n}\n\nfunction test_execroot_sibling_layout_null_build_for_external_subpackages() {\n  setup_workspace_layout_with_external_directory\n  bazel build --experimental_sibling_repository_layout //baz:binary \\\n    || fail \"expected build success\"\n\n  # Null build.\n  bazel build --experimental_sibling_repository_layout //baz:binary &> \"$TEST_log\" \\\n    || fail \"expected build success\"\n  expect_log \"INFO: 1 process: 1 internal\"\n}\n\nfunction test_execroot_sibling_layout_header_scanning_in_external_subpackage() {\n  setup_workspace_layout_with_external_directory\n  cat << 'EOF' > external/foo/BUILD\ncc_library(\n    name = \"lib\",\n    srcs = [\"lib.cc\"],\n    # missing header declaration\n    visibility = [\"//baz:__subpackages__\"],\n)\nEOF\n\n  bazel build --experimental_sibling_repository_layout --spawn_strategy=standalone //external/foo:lib &> \"$TEST_log\" \\\n    && fail \"build should not have succeeded with missing header file\"\n\n  expect_log \"undeclared inclusion(s) in rule '//external/foo:lib'\" \\\n     \"could not find 'undeclared inclusion' error message in bazel output\"\n}\n\nfunction test_incompatible_linkopts_to_linklibs() {\n  if is_darwin; then\n    # This only applies to the Unix toolchain.\n    return 0\n  fi\n  mkdir -p foo\n  cat << 'EOF' > foo/BUILD\ncc_library(\n    name = \"foo\",\n    srcs = [\"foo.cc\"],\n)\nEOF\n  touch foo/foo.cc\n\n  local -r object_file=\".*foo.pic.o\"\n  local stdcpp=\"-lstdc++\"\n  local lm=\"-lm\"\n\n  bazel build --incompatible_linkopts_to_linklibs //foo \\\n    || fail \"Build failed but should have succeeded\"\n  tr -d '\\n' < bazel-bin/foo/libfoo.so-2.params > \"$TEST_log\"\n\n  expect_log \"$object_file$stdcpp$lm\"\n\n  bazel build //foo \\\n    || fail \"Build failed but should have succeeded\"\n  tr -d '\\n' < bazel-bin/foo/libfoo.so-2.params > \"$TEST_log\"\n\n  expect_log \"$stdcpp$lm$object_file\"\n}\n\nfunction test_sibling_repository_layout_include_external_repo_output() {\n  mkdir test\n  cat > test/BUILD <<'EOF'\ncc_library(\n  name = \"foo\",\n  srcs = [\"foo.cc\"],\n  deps = [\"@bazel_tools//tools/jdk:jni\"],\n)\nEOF\n  cat > test/foo.cc <<'EOF'\n#include <jni.h>\n#include <stdio.h>\n\nextern \"C\" JNIEXPORT void JNICALL Java_foo_App_f(JNIEnv *env, jclass clazz, jint x) {\n  printf(\"hello %d\\n\", x);\n}\nEOF\n  bazel build --experimental_sibling_repository_layout //test:foo > \"$TEST_log\" \\\n    || fail \"expected build success\"\n}\n\nrun_suite \"cc_integration_test\"\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/kotlin_stdlib/kotlin-stdlib-jdk7-1.3.21.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/kotlin_stdlib/kotlin-stdlib-common-1.3.21.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/kotlin_stdlib/kotlin-stdlib-1.3.21.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/kotlin_stdlib/kotlin-stdlib-jdk8-1.3.21.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/mockito/mockito-core-2.25.1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/api_client/google-http-client-1.22.0-SNAPSHOT.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/api_client/google-http-client-jackson2-1.22.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/api_client/google-api-client-jackson2-1.22.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/api_client/google-api-client-1.22.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/apache_velocity/velocity-1.7.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/javax_activation/javax.activation-api-1.2.0-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/javax_activation/javax.activation-api-1.2.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/diffutils/diffutils-1.3.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/pcollections/pcollections-2.1.2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/objects.inv",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/_static/title_background.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/_static/triangle_closed.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/_static/breadcrumb_background.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/_static/plus.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/_static/triangle_left.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/_static/triangle_open.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/_static/header_sm_mid.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/_static/searchfield_rightcap.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/_static/file.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/_static/scrn1.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/_static/searchfield_repeat.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/_static/documentation.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/_static/searchfield_leftcap.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/_static/scrn2.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/_static/minus.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/.doctrees/changelog.doctree",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/.doctrees/mocksignature.doctree",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/.doctrees/examples.doctree",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/.doctrees/compare.doctree",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/.doctrees/magicmock.doctree",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/.doctrees/index.doctree",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/.doctrees/patch.doctree",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/.doctrees/getting-started.doctree",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/.doctrees/sentinel.doctree",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/py/mock/html/.doctrees/mock.doctree",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/javax_annotations/javax.annotation-api-1.3.2-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/javax_annotations/javax.annotation-api-1.3.2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/jaxb/jaxb-api-2.3.1-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/jaxb/jaxb-api-2.3.1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/jaxb/jaxb-api-2.3.1-patched.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/jaxb/2.3.0/jaxb-api-2.3.0-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/jaxb/2.3.0/jaxb-api-2.3.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/jaxb/2.3.0/jaxb-core-2.3.0-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/jaxb/2.3.0/jaxb-impl-2.3.0-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/jaxb/2.3.0/jaxb-impl-2.3.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/jaxb/2.3.0/jaxb-core-2.3.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/bytebuddy/byte-buddy-1.9.7.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/bytebuddy/byte-buddy-agent-1.9.7.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/flogger/flogger-0.5.1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/flogger/flogger-system-backend-0.5.1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/flogger/google-extensions-0.5.1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/zlib/zlib.3.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/zlib/contrib/blast/test.pk",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/zlib/contrib/puff/zeros.raw",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/zlib/contrib/dotzlib/DotZLib.chm",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/zlib/contrib/dotzlib/DotZLib/Deflater.cs",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/zlib/contrib/dotzlib/DotZLib/DotZLib.cs",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/zlib/contrib/dotzlib/DotZLib/Inflater.cs",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/zlib/contrib/dotzlib/DotZLib/GZipStream.cs",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/zlib/contrib/dotzlib/DotZLib/CodecBase.cs",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/checker_framework_dataflow/dataflow-shaded-3.1.2-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/checker_framework_dataflow/dataflow-shaded-3.1.2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/jimfs/jimfs-1.1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/netty_tcnative/netty-tcnative-boringssl-static-2.0.24.Final.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/juniversalchardet/juniversalchardet-1.0.3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/gson/gson-2.8.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/guava/guava-testlib-25.1-jre.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/guava/guava-25.1-jre.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/apache_commons_logging/commons-logging-1.1.1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/jsr330_inject/javax.inject.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/apache_commons_collections/commons-collections-3.2.2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/jackson2/jackson-core-2.8.6.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/auth/google-auth-library-oauth2-http-0.17.1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/auth/google-auth-library-credentials-0.17.1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/tomcat_annotations_api/tomcat-annotations-api-8.0.5.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/netty/netty-all-4.1.48.Final.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/turbine/turbine_direct.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/hamcrest/hamcrest-core-1.3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/error_prone/error_prone_check_api-2.4.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/error_prone/error_prone_type_annotations-2.4.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/error_prone/threeten-extra-1.5.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/error_prone/error_prone_annotation-2.4.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/error_prone/error_prone_core-2.4.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/error_prone/error_prone_annotations-2.4.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/asm/asm-util-8.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/asm/asm-commons-8.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/asm/asm-8.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/asm/asm-tree-8.0-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/asm/asm-analysis-8.0-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/asm/asm-analysis-8.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/asm/asm-commons-8.0-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/asm/asm-tree-8.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/asm/asm-util-8.0-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/asm/asm-8.0-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/apache_commons_lang/commons-lang-2.6.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/ijar/test/libwrongcentraldir.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/ijar/test/jar-with-manifest.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/ijar/test/jar-without-manifest.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/ijar/test/jar-with-manifest-and-target-label.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/ijar/test/nestmates/nestmates.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/checker_framework_annotations/checker-qual-3.2.0-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/checker_framework_annotations/checker-qual-3.2.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/caffeine/caffeine-2.8.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/android_common/com.android.tools_common_25.0.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/android_common/com.android.tools_sdklib_25.0.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/android_common/com.android.tools.lint_lint-checks_25.0.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/android_common/com.android.tools_sdk-common_25.0.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/android_common/com.android.tools_repository_25.0.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/android_common/com.android.tools.build_builder-model_2.0.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/android_common/com.android.tools.lint_lint-api_25.0.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/android_common/com.android.tools.build_builder_2.0.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/android_common/com.android.tools_sdk-common_25.0.0-stripped.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/android_common/com.android.tools.external.lombok_lombok-ast_0.2.3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/android_common/com.android.tools_dvlib_25.0.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/android_common/com.android.tools.build_builder-test-api_2.0.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/android_common/com.android_annotations_25.0.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/android_common/com.android.tools.layoutlib_layoutlib_26.1.2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/android_common/com.android.tools.build_manifest-merger_25.0.0-patched.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/android_common/com.android.tools.layoutlib_layoutlib_26.1.2-stripped.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/antlr/antlr4-4.5.3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/css/bootstrap/fonts/glyphicons-halflings-regular.woff",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/css/bootstrap/fonts/glyphicons-halflings-regular.eot",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/css/bootstrap/fonts/glyphicons-halflings-regular.woff2",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/css/bootstrap/fonts/glyphicons-halflings-regular.ttf",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/css/font_awesome/fonts/fontawesome-webfont.woff2",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/css/font_awesome/fonts/fontawesome-webfont.ttf",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/css/font_awesome/fonts/fontawesome-webfont.eot",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/css/font_awesome/fonts/fontawesome-webfont.woff",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/jetbrains_annotations/annotations-13.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/grpc/grpc-api-1.26.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/grpc/grpc-stub-1.26.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/grpc/grpc-context-1.26.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/grpc/grpc-protobuf-lite-1.26.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/grpc/grpc-core-1.26.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/grpc/grpc-protobuf-1.26.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/grpc/grpc-auth-1.26.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/grpc/grpc-netty-1.26.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/compile_testing/compile-testing-0.18.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/jetifier/jetifier-core-1.0.0-beta04.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/allocation_instrumenter/java-allocation-instrumenter-3.0.1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/jcip_annotations/jcip-annotations-1.0-1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/perfmark/perfmark-api-0.19.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/apache_commons_io/commons-io-2.4.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/xz/xz-1.5.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/animal_sniffer/animal-sniffer-annotations-1.14.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/apache_commons_pool2/commons-pool2-2.8.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/apache_commons_compress/apache-commons-compress-1.9.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/auto/auto-common-0.10.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/auto/auto-value-annotations-1.6.3rc1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/auto/auto-service-1.0-rc4.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/auto/auto-value-1.6.3rc1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/truth/truth-1.0.1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/opencensus/opencensus-contrib-grpc-metrics-0.24.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/opencensus/opencensus-api-0.24.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/apache_commons_codec/commons-codec-1.10.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/bazel_bootstrap/libautocodec-annotation.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/bazel_bootstrap/libregistered-singleton.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/bazel_bootstrap/libserialization-processor-util.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/bazel_bootstrap/libserialization.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/bazel_bootstrap/libserialization-constant-annotation.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/bazel_bootstrap/libserialization-constant-processor.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/bazel_bootstrap/libunsafe-provider.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/bazel_bootstrap/libautocodec-processor.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/truth8/truth-java8-extension-1.0.1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/objenesis/objenesis-1_3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/junit/junit-4.13.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/jdk/langtools/jdk_compiler.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/jdk/langtools/jdk_compiler-src.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/jdk/langtools/java_compiler-src.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/jdk/langtools/javac-9+181-r4173-1.srcjar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/jdk/langtools/java_compiler.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/jdk/langtools/javac-9+181-r4173-1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/src/proguard/gui/arrow.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/src/proguard/gui/vtitle.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/lib/retrace.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/lib/proguard.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/lib/proguardgui.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/examples/annotations/lib/annotations.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/steel.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/screenshot_gui4.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/screenshot_gui1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/drop3.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/guardsquare.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/screenshot_gui2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/screenshot_gui5.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/screenshot_console.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/screenshot_gui3.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/android_shades.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/dexguard.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/screenshot_gui6.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/screenshot_console_small.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/sflogo.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/screenshot_gui7.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/title.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/screenshot_gui8.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/favicon.ico",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/drop1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/checkmark.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/screenshots_gui_small.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/drop2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/manual/android_small.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/manual/attention.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/fonts/OpenSans-Italic.ttf",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/fonts/OpenSans-Bold.eot",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/fonts/OpenSans-Bold.woff",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/fonts/OpenSans-Italic.woff",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/fonts/OpenSans-Regular.woff",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/fonts/OpenSans-Regular.ttf",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/fonts/OpenSans-Bold.ttf",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/fonts/OpenSans-Regular.eot",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/proguard/proguard5.3.3/docs/fonts/OpenSans-Italic.eot",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/jcommander/jcommander-1.48.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/javapoet/javapoet-1.8.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/jacoco/org.jacoco.core-0.8.3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/jacoco/org.jacoco.agent-0.8.3-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/jacoco/org.jacoco.report-0.8.3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/jacoco/org.jacoco.report-0.8.3-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/jacoco/org.jacoco.core-0.8.3-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/jacoco/org.jacoco.agent-0.8.3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/jacoco/jacocoagent-0.8.3.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/j2objc-annotations/j2objc-annotations-1.1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/android_databinding/v3_4_0/exec.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/android_databinding/v3_4_0/base.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/android_databinding/v3_4_0/compiler.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/android_databinding/v3_4_0/compiler_common.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java/android_databinding/v3_4_0/x_common.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/java-diff-utils/java-diff-utils-4.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/checker_framework_javacutil/javacutil-3.2.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/checker_framework_javacutil/javacutil-3.2.0-sources.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/hungarian_algorithm/software-and-algorithms-1.0.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/hungarian_algorithm/software-and-algorithms-1.0-src.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/third_party/jsr305/jsr-305.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/main/cpp/resources.o",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/java_tools/import_deps_checker/javatests/com/google/devtools/build/importdeps/testdata/LibraryModuleInfo.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/test/py/bazel/testdata/bazel_external_repository_test/archive_with_symlink.zip",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/test/py/bazel/testdata/bazel_external_repository_test/six-1.10.0.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/test/java/com/google/devtools/build/android/desugar/unused_closed_resource.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/test/java/com/google/devtools/build/android/desugar/jacoco_0_7_5_default_method.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/test/java/com/google/devtools/build/android/desugar/b72690624_testdata.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/test/java/com/google/devtools/build/android/desugar/classes_for_testing_type_inference/test_subjects.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/test/java/com/google/devtools/build/lib/bazel/repository/test_decompress_archive.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/test/java/com/google/devtools/build/lib/bazel/repository/test_decompress_archive.zip",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/test/java/com/google/devtools/build/skydoc/testdata/proto_format_test/golden.raw",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/test/shell/bazel/testdata/refetch-repo.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/test/shell/bazel/testdata/pluto-repo.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/test/shell/bazel/testdata/outer-planets-repo.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/test/shell/bazel/android/sample.aar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/src/tools/singlejar/data/empty.zip",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/v1.26.0.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/2d4c9528e0f453b5950eeaeac11d8d09f5a504d4.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/46993efdd33b73649796c5fc5c9efb193ae19d51.zip",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/android_tools_pkg-0.19.0rc3.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/bazel-toolchains-3.1.0.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/java_tools_javac11_linux-v9.0.zip",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/e982924acee7f7313b4baa4ee5ec000c5e373c30.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/v3.11.3.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/97d8af4dc474595af3900dd85cb3a29ad28cc313.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/1ef781ced3b1443dca3ed05dec1989eca1a4e1cd.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/java_tools_javac11_windows-v9.0.zip",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/rules_nodejs-1.3.0.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/java_tools_javac11_darwin-v9.0.zip",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/8bd6cd75d03c01bb82561a96d9c1f9f7157b13d0.zip",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/coverage_output_generator-v2.3.zip",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/7cf3cefd652008d0a64a419c34c13bdca6c8f178.zip",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/9effcbcb27f0a665f9f345030188c0b291e32482.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/rules_pkg-0.2.4.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/1.25.0.zip",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/distdir/e0b0291b2c51fbe5a7cfa14473a1ae850f94f021.zip",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/jars/com_google_protobuf/libprotobuf_java_util.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/derived/jars/com_google_protobuf/libprotobuf_java.jar",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/images/favicon-32x32.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/images/bazel-icon.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/images/favicon-16x16.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/images/favicon.ico",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/images/bazel-logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/images/bazel-og-image.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/docs/images/rbe-ci-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/docs/images/rbe-ci-2.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/docs/skylark/build-graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/docs/skylark/build-graph-aspects.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/docs/skylark/profile.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/docs/skylark/scalability-graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/cpp-tutorial-stage3.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/proto_library-dep-graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/error_example_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/error_example_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/android_tutorial_before.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/simple-graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/recipe.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/error_example_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/android_instrumentation_test.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/android_tutorial_app.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/dash.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/fullbuild.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/dirty-unmark.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/ws-multiline.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/dirty.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/cpp-tutorial-stage1.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/android_test.gif",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/cpp-tutorial-stage2.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/incbuild.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/error_example_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/dash-shell.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/android_ndk.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/ws-diamond.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/e4b-workflow.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/bazel-stickers.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/workers-incremental-chart.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/workers-clean-chart.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/ws-line.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/change-garlic.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/site/assets/ctrl-w-tweet.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/scripts/packages/msi/banner.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/scripts/packages/msi/dialog.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/scripts/packages/dmg/resource/background.png",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/scripts/packages/dmg/resource/bazel-icon.rsrc",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/tools/android/bazel_debug.keystore",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/tools/android/emulator/snapshots.img.zip",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/tools/build_defs/pkg/testdata/tar_test.tar.xz",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/tools/build_defs/pkg/testdata/tar_test.tar.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-bazel-3.6.0-u4hxt76j25xntvep346m7ef7qe3g77h3/spack-src/tools/build_defs/pkg/testdata/tar_test.tar.gz"
    ],
    "total_files": 8666
}